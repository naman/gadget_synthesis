; ModuleID = 'rm.bc_orig.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, i8*, i8*, i8*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type { %struct._IO_marker*, %struct._IO_FILE*, i32 }
%struct.option = type { i8*, i32, i32*, i32 }
%struct.dev_ino = type { i64, i64 }
%struct.hash_tuning = type { float, float, float, float, i8 }
%struct.quoting_options = type { i32, i32, [8 x i32], i8*, i8* }
%struct.slotvec = type { i64, i8* }
%struct.rm_options = type { i8, i32, i8, i8, %struct.dev_ino*, i8, i8, i8 }
%struct.stat = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, %struct.dev_ino, %struct.dev_ino, %struct.dev_ino, [3 x i64] }
%struct.FTS = type { %struct._ftsent*, %struct._ftsent*, %struct._ftsent**, i64, i8*, i32, i32, i64, i64, i32 (%struct._ftsent**, %struct._ftsent**)*, i32, %struct.hash_table*, %union.anon, %struct.I_ring }
%struct._ftsent = type { %struct._ftsent*, %struct._ftsent*, %struct._ftsent*, i64, i8*, i8*, i8*, i32, i32, i64, %struct.FTS*, i64, i64, i64, i16, i16, i16, [1 x %struct.stat], [1 x i8] }
%struct.hash_table = type { %struct.hash_entry*, %struct.hash_entry*, i64, i64, i64, %struct.hash_tuning*, i64 (i8*, i64)*, i1 (i8*, i8*)*, void (i8*)*, %struct.hash_entry* }
%struct.hash_entry = type { i8*, %struct.hash_entry* }
%union.anon = type { %struct.hash_table* }
%struct.I_ring = type { [4 x i32], i32, i32, i32, i8 }
%struct.__dirstream = type opaque
%struct.dirent = type { i64, i64, i16, i8, [256 x i8] }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }
%struct.cycle_check_state = type { %struct.dev_ino, i64, i32 }
%struct.Active_dir = type { i64, i64, %struct._ftsent* }
%struct.LCO_ent = type { i64, i8 }
%struct.statfs = type { i64, i64, i64, i64, i64, i64, i64, %struct.__fsid_t, i64, i64, i64, [4 x i64] }
%struct.__fsid_t = type { [2 x i32] }
%struct.__mbstate_t = type { i32, %union.anon.37 }
%union.anon.37 = type { i32 }

@stderr = external global %struct._IO_FILE*, align 8
@.str = private unnamed_addr constant [39 x i8] c"Try `%s --help' for more information.\0A\00", align 1
@.str.1 = private unnamed_addr constant [31 x i8] c"Usage: %s [OPTION]... FILE...\0A\00", align 1
@stdout = external global %struct._IO_FILE*, align 8
@.str.2 = private unnamed_addr constant [146 x i8] c"Remove (unlink) the FILE(s).\0A\0A  -f, --force           ignore nonexistent files, never prompt\0A  -i                    prompt before every removal\0A\00", align 1
@.str.3 = private unnamed_addr constant [378 x i8] c"  -I                    prompt once before removing more than three files, or\0A                          when removing recursively.  Less intrusive than -i,\0A                          while still giving protection against most mistakes\0A      --interactive[=WHEN]  prompt according to WHEN: never, once (-I), or\0A                          always (-i).  Without WHEN, prompt always\0A\00", align 1
@.str.4 = private unnamed_addr constant [224 x i8] c"      --one-file-system  when removing a hierarchy recursively, skip any\0A                          directory that is on a file system different from\0A                          that of the corresponding command line argument\0A\00", align 1
@.str.5 = private unnamed_addr constant [231 x i8] c"      --no-preserve-root  do not treat `/' specially\0A      --preserve-root   do not remove `/' (default)\0A  -r, -R, --recursive   remove directories and their contents recursively\0A  -v, --verbose         explain what is being done\0A\00", align 1
@.str.6 = private unnamed_addr constant [45 x i8] c"      --help     display this help and exit\0A\00", align 1
@.str.7 = private unnamed_addr constant [54 x i8] c"      --version  output version information and exit\0A\00", align 1
@.str.8 = private unnamed_addr constant [155 x i8] c"\0ABy default, rm does not remove directories.  Use the --recursive (-r or -R)\0Aoption to remove each listed directory, too, along with all of its contents.\0A\00", align 1
@.str.9 = private unnamed_addr constant [122 x i8] c"\0ATo remove a file whose name starts with a `-', for example `-foo',\0Ause one of these commands:\0A  %s -- -foo\0A\0A  %s ./-foo\0A\00", align 1
@.str.10 = private unnamed_addr constant [198 x i8] c"\0ANote that if you use rm to remove a file, it is usually possible to recover\0Athe contents of that file.  If you want more assurance that the contents are\0Atruly unrecoverable, consider using shred.\0A\00", align 1
@.str.27 = private unnamed_addr constant [23 x i8] c"\0AReport %s bugs to %s\0A\00", align 1
@.str.28 = private unnamed_addr constant [22 x i8] c"bug-coreutils@gnu.org\00", align 1
@.str.29 = private unnamed_addr constant [49 x i8] c"%s home page: <http://www.gnu.org/software/%s/>\0A\00", align 1
@.str.15 = private unnamed_addr constant [14 x i8] c"GNU coreutils\00", align 1
@.str.30 = private unnamed_addr constant [10 x i8] c"coreutils\00", align 1
@.str.31 = private unnamed_addr constant [64 x i8] c"General help using GNU software: <http://www.gnu.org/gethelp/>\0A\00", align 1
@.str.32 = private unnamed_addr constant [4 x i8] c"en_\00", align 1
@.str.33 = private unnamed_addr constant [69 x i8] c"Report %s translation bugs to <http://translationproject.org/team/>\0A\00", align 1
@.str.34 = private unnamed_addr constant [65 x i8] c"For complete documentation, run: info coreutils '%s invocation'\0A\00", align 1
@.str.11 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.12 = private unnamed_addr constant [8 x i8] c"dfirvIR\00", align 1
@long_opts = internal constant [12 x %struct.option] [%struct.option { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.35, i32 0, i32 0), i32 0, i32* null, i32 100 }, %struct.option { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.36, i32 0, i32 0), i32 0, i32* null, i32 102 }, %struct.option { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.37, i32 0, i32 0), i32 2, i32* null, i32 128 }, %struct.option { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.38, i32 0, i32 0), i32 0, i32* null, i32 129 }, %struct.option { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.39, i32 0, i32 0), i32 0, i32* null, i32 130 }, %struct.option { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.40, i32 0, i32 0), i32 0, i32* null, i32 131 }, %struct.option { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.41, i32 0, i32 0), i32 0, i32* null, i32 132 }, %struct.option { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.42, i32 0, i32 0), i32 0, i32* null, i32 114 }, %struct.option { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.43, i32 0, i32 0), i32 0, i32* null, i32 118 }, %struct.option { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.44, i32 0, i32 0), i32 0, i32* null, i32 -130 }, %struct.option { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.45, i32 0, i32 0), i32 0, i32* null, i32 -131 }, %struct.option zeroinitializer], align 16, !dbg !0
@optarg = external global i8*, align 8
@.str.13 = private unnamed_addr constant [14 x i8] c"--interactive\00", align 1
@interactive_args = internal constant [7 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.46, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.47, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.48, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.49, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.50, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.51, i32 0, i32 0), i8* null], align 16, !dbg !67
@interactive_types = internal constant [6 x i32] [i32 0, i32 0, i32 0, i32 1, i32 2, i32 2], align 16, !dbg !61
@.str.14 = private unnamed_addr constant [3 x i8] c"rm\00", align 1
@.str.16 = private unnamed_addr constant [11 x i8] c"Paul Rubin\00", align 1
@.str.17 = private unnamed_addr constant [16 x i8] c"David MacKenzie\00", align 1
@.str.18 = private unnamed_addr constant [20 x i8] c"Richard M. Stallman\00", align 1
@.str.19 = private unnamed_addr constant [13 x i8] c"Jim Meyering\00", align 1
@optind = external global i32, align 4
@.str.20 = private unnamed_addr constant [16 x i8] c"missing operand\00", align 1
@main.dev_ino_buf = internal global %struct.dev_ino zeroinitializer, align 8, !dbg !41
@.str.22 = private unnamed_addr constant [2 x i8] c"/\00", align 1
@.str.21 = private unnamed_addr constant [31 x i8] c"failed to get attributes of %s\00", align 1
@.str.23 = private unnamed_addr constant [39 x i8] c"%s: remove all arguments recursively? \00", align 1
@.str.24 = private unnamed_addr constant [27 x i8] c"%s: remove all arguments? \00", align 1
@.str.25 = private unnamed_addr constant [22 x i8] c"VALID_STATUS (status)\00", align 1
@.str.26 = private unnamed_addr constant [15 x i8] c"../../src/rm.c\00", align 1
@__PRETTY_FUNCTION__.main = private unnamed_addr constant [23 x i8] c"int main(int, char **)\00", align 1
@.str.52 = private unnamed_addr constant [38 x i8] c"Try `%s ./%s' to remove the file %s.\0A\00", align 1
@.str.46 = private unnamed_addr constant [6 x i8] c"never\00", align 1
@.str.47 = private unnamed_addr constant [3 x i8] c"no\00", align 1
@.str.48 = private unnamed_addr constant [5 x i8] c"none\00", align 1
@.str.49 = private unnamed_addr constant [5 x i8] c"once\00", align 1
@.str.50 = private unnamed_addr constant [7 x i8] c"always\00", align 1
@.str.51 = private unnamed_addr constant [4 x i8] c"yes\00", align 1
@.str.35 = private unnamed_addr constant [10 x i8] c"directory\00", align 1
@.str.36 = private unnamed_addr constant [6 x i8] c"force\00", align 1
@.str.37 = private unnamed_addr constant [12 x i8] c"interactive\00", align 1
@.str.38 = private unnamed_addr constant [16 x i8] c"one-file-system\00", align 1
@.str.39 = private unnamed_addr constant [17 x i8] c"no-preserve-root\00", align 1
@.str.40 = private unnamed_addr constant [14 x i8] c"preserve-root\00", align 1
@.str.41 = private unnamed_addr constant [19 x i8] c"-presume-input-tty\00", align 1
@.str.42 = private unnamed_addr constant [10 x i8] c"recursive\00", align 1
@.str.43 = private unnamed_addr constant [8 x i8] c"verbose\00", align 1
@.str.44 = private unnamed_addr constant [5 x i8] c"help\00", align 1
@.str.45 = private unnamed_addr constant [8 x i8] c"version\00", align 1
@.str.53 = private unnamed_addr constant [16 x i8] c"fts_read failed\00", align 1
@.str.1.54 = private unnamed_addr constant [17 x i8] c"VALID_STATUS (s)\00", align 1
@.str.2.55 = private unnamed_addr constant [19 x i8] c"../../src/remove.c\00", align 1
@__PRETTY_FUNCTION__.rm = private unnamed_addr constant [60 x i8] c"enum RM_status rm(char *const *, const struct rm_options *)\00", align 1
@.str.3.56 = private unnamed_addr constant [17 x i8] c"fts_close failed\00", align 1
@.str.4.57 = private unnamed_addr constant [17 x i8] c"cannot remove %s\00", align 1
@.str.5.58 = private unnamed_addr constant [28 x i8] c"cannot remove directory: %s\00", align 1
@.str.6.59 = private unnamed_addr constant [2 x i8] c"/\00", align 1
@.str.7.60 = private unnamed_addr constant [45 x i8] c"it is dangerous to operate recursively on %s\00", align 1
@.str.8.61 = private unnamed_addr constant [58 x i8] c"it is dangerous to operate recursively on %s (same as %s)\00", align 1
@.str.9.62 = private unnamed_addr constant [49 x i8] c"use --no-preserve-root to override this failsafe\00", align 1
@.str.10.63 = private unnamed_addr constant [46 x i8] c"skipping %s, since it's on a different device\00", align 1
@.str.11.64 = private unnamed_addr constant [186 x i8] c"WARNING: Circular directory structure.\0AThis almost certainly means that you have a corrupted file system.\0ANOTIFY YOUR SYSTEM MANAGER.\0AThe following directory is part of the cycle:\0A  %s\0A\00", align 1
@.str.12.65 = private unnamed_addr constant [21 x i8] c"traversal failed: %s\00", align 1
@.str.13.66 = private unnamed_addr constant [56 x i8] c"unexpected failure: fts_info=%d: %s\0Aplease report to %s\00", align 1
@.str.14.67 = private unnamed_addr constant [22 x i8] c"bug-coreutils@gnu.org\00", align 1
@.str.19.68 = private unnamed_addr constant [23 x i8] c"removed directory: %s\0A\00", align 1
@.str.20.69 = private unnamed_addr constant [12 x i8] c"removed %s\0A\00", align 1
@.str.15.70 = private unnamed_addr constant [48 x i8] c"%s: descend into write-protected directory %s? \00", align 1
@.str.16.71 = private unnamed_addr constant [32 x i8] c"%s: descend into directory %s? \00", align 1
@.str.17.72 = private unnamed_addr constant [35 x i8] c"%s: remove write-protected %s %s? \00", align 1
@.str.18.73 = private unnamed_addr constant [19 x i8] c"%s: remove %s %s? \00", align 1
@Version = global i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.76, i32 0, i32 0), align 8, !dbg !85
@.str.76 = private unnamed_addr constant [10 x i8] c"8.4-dirty\00", align 1
@program_name = global i8* null, align 8, !dbg !90
@.str.81 = private unnamed_addr constant [56 x i8] c"A NULL argv[0] was passed through an exec system call.\0A\00", align 1
@.str.1.82 = private unnamed_addr constant [8 x i8] c"/.libs/\00", align 1
@.str.2.83 = private unnamed_addr constant [4 x i8] c"lt-\00", align 1
@program_invocation_short_name = external global i8*, align 8
@program_invocation_name = external global i8*, align 8
@.str.84 = private unnamed_addr constant [12 x i8] c"%s (%s) %s\0A\00", align 1
@.str.1.85 = private unnamed_addr constant [7 x i8] c"%s %s\0A\00", align 1
@.str.2.86 = private unnamed_addr constant [4 x i8] c"(C)\00", align 1
@.str.3.87 = private unnamed_addr constant [203 x i8] c"\0ALicense GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>.\0AThis is free software: you are free to change and redistribute it.\0AThere is NO WARRANTY, to the extent permitted by law.\0A\0A\00", align 1
@.str.4.88 = private unnamed_addr constant [16 x i8] c"Written by %s.\0A\00", align 1
@.str.5.89 = private unnamed_addr constant [23 x i8] c"Written by %s and %s.\0A\00", align 1
@.str.6.90 = private unnamed_addr constant [28 x i8] c"Written by %s, %s, and %s.\0A\00", align 1
@.str.7.91 = private unnamed_addr constant [32 x i8] c"Written by %s, %s, %s,\0Aand %s.\0A\00", align 1
@.str.8.92 = private unnamed_addr constant [36 x i8] c"Written by %s, %s, %s,\0A%s, and %s.\0A\00", align 1
@.str.9.93 = private unnamed_addr constant [40 x i8] c"Written by %s, %s, %s,\0A%s, %s, and %s.\0A\00", align 1
@.str.10.94 = private unnamed_addr constant [44 x i8] c"Written by %s, %s, %s,\0A%s, %s, %s, and %s.\0A\00", align 1
@.str.11.95 = private unnamed_addr constant [48 x i8] c"Written by %s, %s, %s,\0A%s, %s, %s, %s,\0Aand %s.\0A\00", align 1
@.str.12.96 = private unnamed_addr constant [52 x i8] c"Written by %s, %s, %s,\0A%s, %s, %s, %s,\0A%s, and %s.\0A\00", align 1
@.str.13.97 = private unnamed_addr constant [60 x i8] c"Written by %s, %s, %s,\0A%s, %s, %s, %s,\0A%s, %s, and others.\0A\00", align 1
@.str.14.100 = private unnamed_addr constant [21 x i8] c"\0AReport bugs to: %s\0A\00", align 1
@.str.15.101 = private unnamed_addr constant [22 x i8] c"bug-coreutils@gnu.org\00", align 1
@.str.16.102 = private unnamed_addr constant [20 x i8] c"%s home page: <%s>\0A\00", align 1
@.str.17.103 = private unnamed_addr constant [14 x i8] c"GNU coreutils\00", align 1
@.str.18.104 = private unnamed_addr constant [39 x i8] c"http://www.gnu.org/software/coreutils/\00", align 1
@.str.19.105 = private unnamed_addr constant [64 x i8] c"General help using GNU software: <http://www.gnu.org/gethelp/>\0A\00", align 1
@version_etc_copyright = constant [47 x i8] c"Copyright %s %d Free Software Foundation, Inc.\00", align 16, !dbg !96
@argmatch_die = global void ()* @__argmatch_die, align 8, !dbg !104
@.str.110 = private unnamed_addr constant [27 x i8] c"invalid argument %s for %s\00", align 1
@.str.1.111 = private unnamed_addr constant [29 x i8] c"ambiguous argument %s for %s\00", align 1
@.str.2.112 = private unnamed_addr constant [21 x i8] c"Valid arguments are:\00", align 1
@.str.3.113 = private unnamed_addr constant [10 x i8] c"\0A  - `%s'\00", align 1
@.str.4.114 = private unnamed_addr constant [7 x i8] c", `%s'\00", align 1
@file_name = internal global i8* null, align 8, !dbg !118
@stdin = external global %struct._IO_FILE*, align 8
@.str.121 = private unnamed_addr constant [19 x i8] c"error closing file\00", align 1
@.str.1.122 = private unnamed_addr constant [7 x i8] c"%s: %s\00", align 1
@.str.2.123 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@file_name.124 = internal global i8* null, align 8, !dbg !124
@ignore_EPIPE = internal global i8 0, align 1, !dbg !129
@.str.127 = private unnamed_addr constant [12 x i8] c"write error\00", align 1
@.str.1.128 = private unnamed_addr constant [7 x i8] c"%s: %s\00", align 1
@.str.2.129 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@exit_failure = global i32 1, align 4, !dbg !132
@.str.136 = private unnamed_addr constant [19 x i8] c"regular empty file\00", align 1
@.str.1.137 = private unnamed_addr constant [13 x i8] c"regular file\00", align 1
@.str.2.138 = private unnamed_addr constant [10 x i8] c"directory\00", align 1
@.str.3.139 = private unnamed_addr constant [19 x i8] c"block special file\00", align 1
@.str.4.140 = private unnamed_addr constant [23 x i8] c"character special file\00", align 1
@.str.5.141 = private unnamed_addr constant [5 x i8] c"fifo\00", align 1
@.str.6.142 = private unnamed_addr constant [14 x i8] c"symbolic link\00", align 1
@.str.7.143 = private unnamed_addr constant [7 x i8] c"socket\00", align 1
@.str.8.144 = private unnamed_addr constant [14 x i8] c"message queue\00", align 1
@.str.9.145 = private unnamed_addr constant [10 x i8] c"semaphore\00", align 1
@.str.10.146 = private unnamed_addr constant [21 x i8] c"shared memory object\00", align 1
@.str.11.147 = private unnamed_addr constant [11 x i8] c"weird file\00", align 1
@.str.150 = private unnamed_addr constant [2 x i8] c".\00", align 1
@.str.1.151 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.2.156 = private unnamed_addr constant [3 x i8] c"..\00", align 1
@.str.159 = private unnamed_addr constant [24 x i8] c"# entries:         %lu\0A\00", align 1
@.str.1.160 = private unnamed_addr constant [24 x i8] c"# buckets:         %lu\0A\00", align 1
@.str.2.161 = private unnamed_addr constant [33 x i8] c"# buckets used:    %lu (%.2f%%)\0A\00", align 1
@.str.3.162 = private unnamed_addr constant [24 x i8] c"max bucket length: %lu\0A\00", align 1
@default_tuning = internal constant %struct.hash_tuning { float 0.000000e+00, float 1.000000e+00, float 0x3FE99999A0000000, float 0x3FF69FBE80000000, i8 0 }, align 4, !dbg !138
@quoting_style_args = constant [9 x i8*] [i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.191, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.192, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.2.193, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3.194, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.4.195, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.5.196, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.6.197, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.7.198, i32 0, i32 0), i8* null], align 16, !dbg !157
@.str.191 = private unnamed_addr constant [8 x i8] c"literal\00", align 1
@.str.1.192 = private unnamed_addr constant [6 x i8] c"shell\00", align 1
@.str.2.193 = private unnamed_addr constant [13 x i8] c"shell-always\00", align 1
@.str.3.194 = private unnamed_addr constant [2 x i8] c"c\00", align 1
@.str.4.195 = private unnamed_addr constant [8 x i8] c"c-maybe\00", align 1
@.str.5.196 = private unnamed_addr constant [7 x i8] c"escape\00", align 1
@.str.6.197 = private unnamed_addr constant [7 x i8] c"locale\00", align 1
@.str.7.198 = private unnamed_addr constant [8 x i8] c"clocale\00", align 1
@quoting_style_vals = constant [8 x i32] [i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7], align 16, !dbg !185
@default_quoting_options = internal global %struct.quoting_options zeroinitializer, align 8, !dbg !191
@.str.8.199 = private unnamed_addr constant [2 x i8] c"\22\00", align 1
@.str.9.200 = private unnamed_addr constant [2 x i8] c"`\00", align 1
@.str.10.201 = private unnamed_addr constant [2 x i8] c"'\00", align 1
@slotvec = internal global %struct.slotvec* @slotvec0, align 8, !dbg !207
@nslots = internal global i32 1, align 4, !dbg !214
@slot0 = internal global [256 x i8] zeroinitializer, align 16, !dbg !202
@slotvec0 = internal global %struct.slotvec { i64 256, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @slot0, i32 0, i32 0) }, align 8, !dbg !216
@.str.208 = private unnamed_addr constant [2 x i8] c"/\00", align 1
@can_write_any_file.initialized = internal global i8 0, align 1, !dbg !221
@can_write_any_file.can_write = internal global i8 0, align 1, !dbg !229
@.str.225 = private unnamed_addr constant [16 x i8] c"errno != EINVAL\00", align 1
@.str.1.226 = private unnamed_addr constant [17 x i8] c"../../lib/xfts.c\00", align 1
@__PRETTY_FUNCTION__.xfts_open = private unnamed_addr constant [78 x i8] c"FTS *xfts_open(char *const *, int, int (*)(const FTSENT **, const FTSENT **))\00", align 1
@.str.231 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str.1.232 = private unnamed_addr constant [17 x i8] c"memory exhausted\00", align 1
@.str.241 = private unnamed_addr constant [25 x i8] c"state->magic == CC_MAGIC\00", align 1
@.str.1.242 = private unnamed_addr constant [24 x i8] c"../../lib/cycle-check.c\00", align 1
@__PRETTY_FUNCTION__.cycle_check = private unnamed_addr constant [67 x i8] c"_Bool cycle_check(struct cycle_check_state *, const struct stat *)\00", align 1
@rpl_fcntl.have_dupfd_cloexec = internal global i32 0, align 4, !dbg !231

; Function Attrs: noinline noreturn nounwind uwtable
define void @usage(i32) #0 !dbg !496 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !499, metadata !DIExpression()), !dbg !500
  %3 = load i32, i32* %2, align 4, !dbg !501
  %4 = icmp ne i32 %3, 0, !dbg !503
  br i1 %4, label %5, label %9, !dbg !504

; <label>:5:                                      ; preds = %1
  %6 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !505
  %7 = load i8*, i8** @program_name, align 8, !dbg !506
  %8 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %6, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str, i32 0, i32 0), i8* %7), !dbg !507
  br label %31, !dbg !507

; <label>:9:                                      ; preds = %1
  %10 = load i8*, i8** @program_name, align 8, !dbg !508
  %11 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.1, i32 0, i32 0), i8* %10), !dbg !510
  %12 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !511
  %13 = call i32 @fputs_unlocked(i8* getelementptr inbounds ([146 x i8], [146 x i8]* @.str.2, i32 0, i32 0), %struct._IO_FILE* %12), !dbg !511
  %14 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !512
  %15 = call i32 @fputs_unlocked(i8* getelementptr inbounds ([378 x i8], [378 x i8]* @.str.3, i32 0, i32 0), %struct._IO_FILE* %14), !dbg !512
  %16 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !513
  %17 = call i32 @fputs_unlocked(i8* getelementptr inbounds ([224 x i8], [224 x i8]* @.str.4, i32 0, i32 0), %struct._IO_FILE* %16), !dbg !513
  %18 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !514
  %19 = call i32 @fputs_unlocked(i8* getelementptr inbounds ([231 x i8], [231 x i8]* @.str.5, i32 0, i32 0), %struct._IO_FILE* %18), !dbg !514
  %20 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !515
  %21 = call i32 @fputs_unlocked(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.6, i32 0, i32 0), %struct._IO_FILE* %20), !dbg !515
  %22 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !516
  %23 = call i32 @fputs_unlocked(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.7, i32 0, i32 0), %struct._IO_FILE* %22), !dbg !516
  %24 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !517
  %25 = call i32 @fputs_unlocked(i8* getelementptr inbounds ([155 x i8], [155 x i8]* @.str.8, i32 0, i32 0), %struct._IO_FILE* %24), !dbg !517
  %26 = load i8*, i8** @program_name, align 8, !dbg !518
  %27 = load i8*, i8** @program_name, align 8, !dbg !519
  %28 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([122 x i8], [122 x i8]* @.str.9, i32 0, i32 0), i8* %26, i8* %27), !dbg !520
  %29 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !521
  %30 = call i32 @fputs_unlocked(i8* getelementptr inbounds ([198 x i8], [198 x i8]* @.str.10, i32 0, i32 0), %struct._IO_FILE* %29), !dbg !521
  call void @emit_ancillary_info(), !dbg !522
  br label %31

; <label>:31:                                     ; preds = %9, %5
  %32 = load i32, i32* %2, align 4, !dbg !523
  call void @exit(i32 %32) #11, !dbg !524
  unreachable, !dbg !524
                                                  ; No predecessors!
  unreachable, !dbg !525
}

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

declare i32 @fprintf(%struct._IO_FILE*, i8*, ...) #2

declare i32 @printf(i8*, ...) #2

declare i32 @fputs_unlocked(i8*, %struct._IO_FILE*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @emit_ancillary_info() #3 !dbg !526 {
  %1 = alloca i8*, align 8
  %2 = load i8*, i8** @program_name, align 8, !dbg !528
  %3 = call i8* @last_component(i8* %2), !dbg !529
  %4 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.27, i32 0, i32 0), i8* %3, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.28, i32 0, i32 0)), !dbg !530
  %5 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.29, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.15, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.30, i32 0, i32 0)), !dbg !531
  %6 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !532
  %7 = call i32 @fputs_unlocked(i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.31, i32 0, i32 0), %struct._IO_FILE* %6), !dbg !532
  call void @llvm.dbg.declare(metadata i8** %1, metadata !533, metadata !DIExpression()), !dbg !534
  %8 = call i8* @setlocale(i32 5, i8* null) #8, !dbg !535
  store i8* %8, i8** %1, align 8, !dbg !534
  %9 = load i8*, i8** %1, align 8, !dbg !536
  %10 = icmp ne i8* %9, null, !dbg !536
  br i1 %10, label %11, label %19, !dbg !538

; <label>:11:                                     ; preds = %0
  %12 = load i8*, i8** %1, align 8, !dbg !539
  %13 = call i32 @strncmp(i8* %12, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.32, i32 0, i32 0), i64 3) #12, !dbg !540
  %14 = icmp ne i32 %13, 0, !dbg !540
  br i1 %14, label %15, label %19, !dbg !541

; <label>:15:                                     ; preds = %11
  %16 = load i8*, i8** @program_name, align 8, !dbg !542
  %17 = call i8* @last_component(i8* %16), !dbg !544
  %18 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.33, i32 0, i32 0), i8* %17), !dbg !545
  br label %19, !dbg !546

; <label>:19:                                     ; preds = %15, %11, %0
  %20 = load i8*, i8** @program_name, align 8, !dbg !547
  %21 = call i8* @last_component(i8* %20), !dbg !548
  %22 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.34, i32 0, i32 0), i8* %21), !dbg !549
  ret void, !dbg !550
}

; Function Attrs: noreturn nounwind
declare void @exit(i32) #4

; Function Attrs: nounwind
declare i8* @setlocale(i32, i8*) #5

; Function Attrs: nounwind readonly
declare i32 @strncmp(i8*, i8*, i64) #6

; Function Attrs: noinline nounwind uwtable
define void @klee_dump_memory() #3 !dbg !551 {
  ret void, !dbg !552
}

; Function Attrs: noinline nounwind uwtable
define i32 @main(i32, i8**) #3 !dbg !43 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 8
  %6 = alloca i8, align 1
  %7 = alloca %struct.rm_options, align 8
  %8 = alloca i8, align 1
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i64, align 8
  %12 = alloca i8**, align 8
  %13 = alloca i32, align 4
  store i32 0, i32* %3, align 4
  store i32 %0, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !553, metadata !DIExpression()), !dbg !554
  store i8** %1, i8*** %5, align 8
  call void @llvm.dbg.declare(metadata i8*** %5, metadata !555, metadata !DIExpression()), !dbg !556
  call void @llvm.dbg.declare(metadata i8* %6, metadata !557, metadata !DIExpression()), !dbg !558
  store i8 1, i8* %6, align 1, !dbg !558
  call void @llvm.dbg.declare(metadata %struct.rm_options* %7, metadata !559, metadata !DIExpression()), !dbg !571
  call void @llvm.dbg.declare(metadata i8* %8, metadata !572, metadata !DIExpression()), !dbg !573
  store i8 0, i8* %8, align 1, !dbg !573
  call void @llvm.dbg.declare(metadata i32* %9, metadata !574, metadata !DIExpression()), !dbg !575
  %14 = load i8**, i8*** %5, align 8, !dbg !576
  %15 = getelementptr inbounds i8*, i8** %14, i64 0, !dbg !576
  %16 = load i8*, i8** %15, align 8, !dbg !576
  call void @set_program_name(i8* %16), !dbg !577
  %17 = call i8* @setlocale(i32 6, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.11, i32 0, i32 0)) #8, !dbg !578
  %18 = call i32 @atexit(void ()* @close_stdin) #8, !dbg !579
  call void @rm_option_init(%struct.rm_options* %7), !dbg !580
  %19 = call i32 @priv_set_remove_linkdir(), !dbg !581
  br label %20, !dbg !582

; <label>:20:                                     ; preds = %75, %2
  %21 = load i32, i32* %4, align 4, !dbg !583
  %22 = load i8**, i8*** %5, align 8, !dbg !584
  %23 = call i32 @getopt_long(i32 %21, i8** %22, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.12, i32 0, i32 0), %struct.option* getelementptr inbounds ([12 x %struct.option], [12 x %struct.option]* @long_opts, i32 0, i32 0), i32* null) #8, !dbg !585
  store i32 %23, i32* %9, align 4, !dbg !586
  %24 = icmp ne i32 %23, -1, !dbg !587
  br i1 %24, label %25, label %76, !dbg !582

; <label>:25:                                     ; preds = %20
  %26 = load i32, i32* %9, align 4, !dbg !588
  switch i32 %26, label %72 [
    i32 100, label %27
    i32 102, label %28
    i32 105, label %31
    i32 73, label %34
    i32 114, label %37
    i32 82, label %37
    i32 128, label %39
    i32 129, label %60
    i32 130, label %62
    i32 131, label %63
    i32 132, label %64
    i32 118, label %66
    i32 -130, label %68
    i32 -131, label %69
  ], !dbg !590

; <label>:27:                                     ; preds = %25
  br label %75, !dbg !591

; <label>:28:                                     ; preds = %25
  %29 = getelementptr inbounds %struct.rm_options, %struct.rm_options* %7, i32 0, i32 1, !dbg !593
  store i32 5, i32* %29, align 4, !dbg !594
  %30 = getelementptr inbounds %struct.rm_options, %struct.rm_options* %7, i32 0, i32 0, !dbg !595
  store i8 1, i8* %30, align 8, !dbg !596
  store i8 0, i8* %8, align 1, !dbg !597
  br label %75, !dbg !598

; <label>:31:                                     ; preds = %25
  %32 = getelementptr inbounds %struct.rm_options, %struct.rm_options* %7, i32 0, i32 1, !dbg !599
  store i32 3, i32* %32, align 4, !dbg !600
  %33 = getelementptr inbounds %struct.rm_options, %struct.rm_options* %7, i32 0, i32 0, !dbg !601
  store i8 0, i8* %33, align 8, !dbg !602
  store i8 0, i8* %8, align 1, !dbg !603
  br label %75, !dbg !604

; <label>:34:                                     ; preds = %25
  %35 = getelementptr inbounds %struct.rm_options, %struct.rm_options* %7, i32 0, i32 1, !dbg !605
  store i32 5, i32* %35, align 4, !dbg !606
  %36 = getelementptr inbounds %struct.rm_options, %struct.rm_options* %7, i32 0, i32 0, !dbg !607
  store i8 0, i8* %36, align 8, !dbg !608
  store i8 1, i8* %8, align 1, !dbg !609
  br label %75, !dbg !610

; <label>:37:                                     ; preds = %25, %25
  %38 = getelementptr inbounds %struct.rm_options, %struct.rm_options* %7, i32 0, i32 3, !dbg !611
  store i8 1, i8* %38, align 1, !dbg !612
  br label %75, !dbg !613

; <label>:39:                                     ; preds = %25
  call void @llvm.dbg.declare(metadata i32* %10, metadata !614, metadata !DIExpression()), !dbg !616
  %40 = load i8*, i8** @optarg, align 8, !dbg !617
  %41 = icmp ne i8* %40, null, !dbg !617
  br i1 %41, label %42, label %48, !dbg !619

; <label>:42:                                     ; preds = %39
  %43 = load i8*, i8** @optarg, align 8, !dbg !620
  %44 = load void ()*, void ()** @argmatch_die, align 8, !dbg !620
  %45 = call i64 @__xargmatch_internal(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.13, i32 0, i32 0), i8* %43, i8** getelementptr inbounds ([7 x i8*], [7 x i8*]* @interactive_args, i32 0, i32 0), i8* bitcast ([6 x i32]* @interactive_types to i8*), i64 4, void ()* %44), !dbg !620
  %46 = getelementptr inbounds [6 x i32], [6 x i32]* @interactive_types, i64 0, i64 %45, !dbg !620
  %47 = load i32, i32* %46, align 4, !dbg !620
  store i32 %47, i32* %10, align 4, !dbg !621
  br label %49, !dbg !622

; <label>:48:                                     ; preds = %39
  store i32 2, i32* %10, align 4, !dbg !623
  br label %49

; <label>:49:                                     ; preds = %48, %42
  %50 = load i32, i32* %10, align 4, !dbg !624
  switch i32 %50, label %59 [
    i32 0, label %51
    i32 1, label %53
    i32 2, label %56
  ], !dbg !625

; <label>:51:                                     ; preds = %49
  %52 = getelementptr inbounds %struct.rm_options, %struct.rm_options* %7, i32 0, i32 1, !dbg !626
  store i32 5, i32* %52, align 4, !dbg !628
  store i8 0, i8* %8, align 1, !dbg !629
  br label %59, !dbg !630

; <label>:53:                                     ; preds = %49
  %54 = getelementptr inbounds %struct.rm_options, %struct.rm_options* %7, i32 0, i32 1, !dbg !631
  store i32 4, i32* %54, align 4, !dbg !632
  %55 = getelementptr inbounds %struct.rm_options, %struct.rm_options* %7, i32 0, i32 0, !dbg !633
  store i8 0, i8* %55, align 8, !dbg !634
  store i8 1, i8* %8, align 1, !dbg !635
  br label %59, !dbg !636

; <label>:56:                                     ; preds = %49
  %57 = getelementptr inbounds %struct.rm_options, %struct.rm_options* %7, i32 0, i32 1, !dbg !637
  store i32 3, i32* %57, align 4, !dbg !638
  %58 = getelementptr inbounds %struct.rm_options, %struct.rm_options* %7, i32 0, i32 0, !dbg !639
  store i8 0, i8* %58, align 8, !dbg !640
  store i8 0, i8* %8, align 1, !dbg !641
  br label %59, !dbg !642

; <label>:59:                                     ; preds = %49, %56, %53, %51
  br label %75, !dbg !643

; <label>:60:                                     ; preds = %25
  %61 = getelementptr inbounds %struct.rm_options, %struct.rm_options* %7, i32 0, i32 2, !dbg !644
  store i8 1, i8* %61, align 8, !dbg !645
  br label %75, !dbg !646

; <label>:62:                                     ; preds = %25
  store i8 0, i8* %6, align 1, !dbg !647
  br label %75, !dbg !648

; <label>:63:                                     ; preds = %25
  store i8 1, i8* %6, align 1, !dbg !649
  br label %75, !dbg !650

; <label>:64:                                     ; preds = %25
  %65 = getelementptr inbounds %struct.rm_options, %struct.rm_options* %7, i32 0, i32 5, !dbg !651
  store i8 1, i8* %65, align 8, !dbg !652
  br label %75, !dbg !653

; <label>:66:                                     ; preds = %25
  %67 = getelementptr inbounds %struct.rm_options, %struct.rm_options* %7, i32 0, i32 6, !dbg !654
  store i8 1, i8* %67, align 1, !dbg !655
  br label %75, !dbg !656

; <label>:68:                                     ; preds = %25
  call void @usage(i32 0) #13, !dbg !657
  unreachable, !dbg !657

; <label>:69:                                     ; preds = %25
  %70 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !658
  %71 = load i8*, i8** @Version, align 8, !dbg !658
  call void (%struct._IO_FILE*, i8*, i8*, i8*, ...) @version_etc(%struct._IO_FILE* %70, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.14, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.15, i32 0, i32 0), i8* %71, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.16, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.17, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.18, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.19, i32 0, i32 0), i8* null), !dbg !658
  call void @exit(i32 0) #11, !dbg !658
  unreachable, !dbg !658

; <label>:72:                                     ; preds = %25
  %73 = load i32, i32* %4, align 4, !dbg !659
  %74 = load i8**, i8*** %5, align 8, !dbg !660
  call void @diagnose_leading_hyphen(i32 %73, i8** %74), !dbg !661
  call void @usage(i32 1) #13, !dbg !662
  unreachable, !dbg !662

; <label>:75:                                     ; preds = %66, %64, %63, %62, %60, %59, %37, %34, %31, %28, %27
  br label %20, !dbg !582, !llvm.loop !663

; <label>:76:                                     ; preds = %20
  call void @klee_dump_memory(), !dbg !665
  %77 = load i32, i32* %4, align 4, !dbg !666
  %78 = load i32, i32* @optind, align 4, !dbg !668
  %79 = icmp sle i32 %77, %78, !dbg !669
  br i1 %79, label %80, label %86, !dbg !670

; <label>:80:                                     ; preds = %76
  %81 = getelementptr inbounds %struct.rm_options, %struct.rm_options* %7, i32 0, i32 0, !dbg !671
  %82 = load i8, i8* %81, align 8, !dbg !671
  %83 = trunc i8 %82 to i1, !dbg !671
  br i1 %83, label %84, label %85, !dbg !674

; <label>:84:                                     ; preds = %80
  call void @exit(i32 0) #11, !dbg !675
  unreachable, !dbg !675

; <label>:85:                                     ; preds = %80
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.20, i32 0, i32 0)), !dbg !676
  call void @usage(i32 1) #13, !dbg !678
  unreachable, !dbg !678

; <label>:86:                                     ; preds = %76
  %87 = getelementptr inbounds %struct.rm_options, %struct.rm_options* %7, i32 0, i32 3, !dbg !679
  %88 = load i8, i8* %87, align 1, !dbg !679
  %89 = trunc i8 %88 to i1, !dbg !679
  br i1 %89, label %90, label %104, !dbg !681

; <label>:90:                                     ; preds = %86
  %91 = load i8, i8* %6, align 1, !dbg !682
  %92 = trunc i8 %91 to i1, !dbg !682
  br i1 %92, label %93, label %104, !dbg !683

; <label>:93:                                     ; preds = %90
  %94 = call %struct.dev_ino* @get_root_dev_ino(%struct.dev_ino* @main.dev_ino_buf), !dbg !684
  %95 = getelementptr inbounds %struct.rm_options, %struct.rm_options* %7, i32 0, i32 4, !dbg !686
  store %struct.dev_ino* %94, %struct.dev_ino** %95, align 8, !dbg !687
  %96 = getelementptr inbounds %struct.rm_options, %struct.rm_options* %7, i32 0, i32 4, !dbg !688
  %97 = load %struct.dev_ino*, %struct.dev_ino** %96, align 8, !dbg !688
  %98 = icmp eq %struct.dev_ino* %97, null, !dbg !690
  br i1 %98, label %99, label %103, !dbg !691

; <label>:99:                                     ; preds = %93
  %100 = call i32* @__errno_location() #14, !dbg !692
  %101 = load i32, i32* %100, align 4, !dbg !692
  %102 = call i8* @quote(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.22, i32 0, i32 0)), !dbg !693
  call void (i32, i32, i8*, ...) @error(i32 1, i32 %101, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.21, i32 0, i32 0), i8* %102), !dbg !694
  br label %103, !dbg !694

; <label>:103:                                    ; preds = %99, %93
  br label %104, !dbg !695

; <label>:104:                                    ; preds = %103, %90, %86
  call void @llvm.dbg.declare(metadata i64* %11, metadata !696, metadata !DIExpression()), !dbg !699
  %105 = load i32, i32* %4, align 4, !dbg !700
  %106 = load i32, i32* @optind, align 4, !dbg !701
  %107 = sub nsw i32 %105, %106, !dbg !702
  %108 = sext i32 %107 to i64, !dbg !700
  store i64 %108, i64* %11, align 8, !dbg !699
  call void @llvm.dbg.declare(metadata i8*** %12, metadata !703, metadata !DIExpression()), !dbg !704
  %109 = load i8**, i8*** %5, align 8, !dbg !705
  %110 = load i32, i32* @optind, align 4, !dbg !706
  %111 = sext i32 %110 to i64, !dbg !707
  %112 = getelementptr inbounds i8*, i8** %109, i64 %111, !dbg !707
  store i8** %112, i8*** %12, align 8, !dbg !704
  %113 = load i8, i8* %8, align 1, !dbg !708
  %114 = trunc i8 %113 to i1, !dbg !708
  br i1 %114, label %115, label %134, !dbg !710

; <label>:115:                                    ; preds = %104
  %116 = getelementptr inbounds %struct.rm_options, %struct.rm_options* %7, i32 0, i32 3, !dbg !711
  %117 = load i8, i8* %116, align 1, !dbg !711
  %118 = trunc i8 %117 to i1, !dbg !711
  br i1 %118, label %122, label %119, !dbg !712

; <label>:119:                                    ; preds = %115
  %120 = load i64, i64* %11, align 8, !dbg !713
  %121 = icmp ult i64 3, %120, !dbg !714
  br i1 %121, label %122, label %134, !dbg !715

; <label>:122:                                    ; preds = %119, %115
  %123 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !716
  %124 = getelementptr inbounds %struct.rm_options, %struct.rm_options* %7, i32 0, i32 3, !dbg !718
  %125 = load i8, i8* %124, align 1, !dbg !718
  %126 = trunc i8 %125 to i1, !dbg !718
  %127 = zext i1 %126 to i64, !dbg !719
  %128 = select i1 %126, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.23, i32 0, i32 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.24, i32 0, i32 0), !dbg !719
  %129 = load i8*, i8** @program_name, align 8, !dbg !720
  %130 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %123, i8* %128, i8* %129), !dbg !721
  %131 = call zeroext i1 @yesno(), !dbg !722
  br i1 %131, label %133, label %132, !dbg !724

; <label>:132:                                    ; preds = %122
  call void @exit(i32 0) #11, !dbg !725
  unreachable, !dbg !725

; <label>:133:                                    ; preds = %122
  br label %134, !dbg !726

; <label>:134:                                    ; preds = %133, %119, %104
  call void @llvm.dbg.declare(metadata i32* %13, metadata !727, metadata !DIExpression()), !dbg !728
  %135 = load i8**, i8*** %12, align 8, !dbg !729
  %136 = call i32 @rm(i8** %135, %struct.rm_options* %7), !dbg !730
  store i32 %136, i32* %13, align 4, !dbg !728
  %137 = load i32, i32* %13, align 4, !dbg !731
  %138 = icmp eq i32 %137, 2, !dbg !731
  br i1 %138, label %145, label %139, !dbg !731

; <label>:139:                                    ; preds = %134
  %140 = load i32, i32* %13, align 4, !dbg !731
  %141 = icmp eq i32 %140, 3, !dbg !731
  br i1 %141, label %145, label %142, !dbg !731

; <label>:142:                                    ; preds = %139
  %143 = load i32, i32* %13, align 4, !dbg !731
  %144 = icmp eq i32 %143, 4, !dbg !731
  br i1 %144, label %145, label %146, !dbg !734

; <label>:145:                                    ; preds = %142, %139, %134
  br label %147, !dbg !734

; <label>:146:                                    ; preds = %142
  call void @__assert_fail(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.25, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.26, i32 0, i32 0), i32 356, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @__PRETTY_FUNCTION__.main, i32 0, i32 0)) #11, !dbg !731
  unreachable, !dbg !731

; <label>:147:                                    ; preds = %145
  %148 = load i32, i32* %13, align 4, !dbg !735
  %149 = icmp eq i32 %148, 4, !dbg !736
  %150 = zext i1 %149 to i64, !dbg !735
  %151 = select i1 %149, i32 1, i32 0, !dbg !735
  call void @exit(i32 %151) #11, !dbg !737
  unreachable, !dbg !737
                                                  ; No predecessors!
  %153 = load i32, i32* %3, align 4, !dbg !738
  ret i32 %153, !dbg !738
}

; Function Attrs: nounwind
declare i32 @atexit(void ()*) #5

; Function Attrs: noinline nounwind uwtable
define internal void @rm_option_init(%struct.rm_options*) #3 !dbg !739 {
  %2 = alloca %struct.rm_options*, align 8
  store %struct.rm_options* %0, %struct.rm_options** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.rm_options** %2, metadata !743, metadata !DIExpression()), !dbg !744
  %3 = load %struct.rm_options*, %struct.rm_options** %2, align 8, !dbg !745
  %4 = getelementptr inbounds %struct.rm_options, %struct.rm_options* %3, i32 0, i32 0, !dbg !746
  store i8 0, i8* %4, align 8, !dbg !747
  %5 = load %struct.rm_options*, %struct.rm_options** %2, align 8, !dbg !748
  %6 = getelementptr inbounds %struct.rm_options, %struct.rm_options* %5, i32 0, i32 1, !dbg !749
  store i32 4, i32* %6, align 4, !dbg !750
  %7 = load %struct.rm_options*, %struct.rm_options** %2, align 8, !dbg !751
  %8 = getelementptr inbounds %struct.rm_options, %struct.rm_options* %7, i32 0, i32 2, !dbg !752
  store i8 0, i8* %8, align 8, !dbg !753
  %9 = load %struct.rm_options*, %struct.rm_options** %2, align 8, !dbg !754
  %10 = getelementptr inbounds %struct.rm_options, %struct.rm_options* %9, i32 0, i32 3, !dbg !755
  store i8 0, i8* %10, align 1, !dbg !756
  %11 = load %struct.rm_options*, %struct.rm_options** %2, align 8, !dbg !757
  %12 = getelementptr inbounds %struct.rm_options, %struct.rm_options* %11, i32 0, i32 4, !dbg !758
  store %struct.dev_ino* null, %struct.dev_ino** %12, align 8, !dbg !759
  %13 = call i32 @isatty(i32 0) #8, !dbg !760
  %14 = icmp ne i32 %13, 0, !dbg !760
  %15 = load %struct.rm_options*, %struct.rm_options** %2, align 8, !dbg !761
  %16 = getelementptr inbounds %struct.rm_options, %struct.rm_options* %15, i32 0, i32 5, !dbg !762
  %17 = zext i1 %14 to i8, !dbg !763
  store i8 %17, i8* %16, align 8, !dbg !763
  %18 = load %struct.rm_options*, %struct.rm_options** %2, align 8, !dbg !764
  %19 = getelementptr inbounds %struct.rm_options, %struct.rm_options* %18, i32 0, i32 6, !dbg !765
  store i8 0, i8* %19, align 1, !dbg !766
  %20 = load %struct.rm_options*, %struct.rm_options** %2, align 8, !dbg !767
  %21 = getelementptr inbounds %struct.rm_options, %struct.rm_options* %20, i32 0, i32 7, !dbg !768
  store i8 0, i8* %21, align 2, !dbg !769
  ret void, !dbg !770
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @priv_set_remove_linkdir() #3 !dbg !771 {
  ret i32 -1, !dbg !775
}

; Function Attrs: nounwind
declare i32 @getopt_long(i32, i8**, i8*, %struct.option*, i32*) #5

; Function Attrs: noinline nounwind uwtable
define internal void @diagnose_leading_hyphen(i32, i8**) #3 !dbg !776 {
  %3 = alloca i32, align 4
  %4 = alloca i8**, align 8
  %5 = alloca i32, align 4
  %6 = alloca i8*, align 8
  %7 = alloca %struct.stat, align 8
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !779, metadata !DIExpression()), !dbg !780
  store i8** %1, i8*** %4, align 8
  call void @llvm.dbg.declare(metadata i8*** %4, metadata !781, metadata !DIExpression()), !dbg !782
  call void @llvm.dbg.declare(metadata i32* %5, metadata !783, metadata !DIExpression()), !dbg !784
  store i32 1, i32* %5, align 4, !dbg !785
  br label %8, !dbg !787

; <label>:8:                                      ; preds = %44, %2
  %9 = load i32, i32* %5, align 4, !dbg !788
  %10 = load i32, i32* %3, align 4, !dbg !790
  %11 = icmp slt i32 %9, %10, !dbg !791
  br i1 %11, label %12, label %47, !dbg !792

; <label>:12:                                     ; preds = %8
  call void @llvm.dbg.declare(metadata i8** %6, metadata !793, metadata !DIExpression()), !dbg !795
  %13 = load i8**, i8*** %4, align 8, !dbg !796
  %14 = load i32, i32* %5, align 4, !dbg !797
  %15 = sext i32 %14 to i64, !dbg !796
  %16 = getelementptr inbounds i8*, i8** %13, i64 %15, !dbg !796
  %17 = load i8*, i8** %16, align 8, !dbg !796
  store i8* %17, i8** %6, align 8, !dbg !795
  call void @llvm.dbg.declare(metadata %struct.stat* %7, metadata !798, metadata !DIExpression()), !dbg !832
  %18 = load i8*, i8** %6, align 8, !dbg !833
  %19 = getelementptr inbounds i8, i8* %18, i64 0, !dbg !833
  %20 = load i8, i8* %19, align 1, !dbg !833
  %21 = sext i8 %20 to i32, !dbg !833
  %22 = icmp eq i32 %21, 45, !dbg !835
  br i1 %22, label %23, label %43, !dbg !836

; <label>:23:                                     ; preds = %12
  %24 = load i8*, i8** %6, align 8, !dbg !837
  %25 = getelementptr inbounds i8, i8* %24, i64 1, !dbg !837
  %26 = load i8, i8* %25, align 1, !dbg !837
  %27 = sext i8 %26 to i32, !dbg !837
  %28 = icmp ne i32 %27, 0, !dbg !837
  br i1 %28, label %29, label %43, !dbg !838

; <label>:29:                                     ; preds = %23
  %30 = load i8*, i8** %6, align 8, !dbg !839
  %31 = call i32 @lstat(i8* %30, %struct.stat* %7) #8, !dbg !840
  %32 = icmp eq i32 %31, 0, !dbg !841
  br i1 %32, label %33, label %43, !dbg !842

; <label>:33:                                     ; preds = %29
  %34 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !843
  %35 = load i8**, i8*** %4, align 8, !dbg !845
  %36 = getelementptr inbounds i8*, i8** %35, i64 0, !dbg !845
  %37 = load i8*, i8** %36, align 8, !dbg !845
  %38 = load i8*, i8** %6, align 8, !dbg !846
  %39 = call i8* @quotearg_n_style(i32 1, i32 1, i8* %38), !dbg !847
  %40 = load i8*, i8** %6, align 8, !dbg !848
  %41 = call i8* @quote(i8* %40), !dbg !849
  %42 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %34, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.52, i32 0, i32 0), i8* %37, i8* %39, i8* %41), !dbg !850
  br label %47, !dbg !851

; <label>:43:                                     ; preds = %29, %23, %12
  br label %44, !dbg !852

; <label>:44:                                     ; preds = %43
  %45 = load i32, i32* %5, align 4, !dbg !853
  %46 = add nsw i32 %45, 1, !dbg !853
  store i32 %46, i32* %5, align 4, !dbg !853
  br label %8, !dbg !854, !llvm.loop !855

; <label>:47:                                     ; preds = %33, %8
  ret void, !dbg !857
}

declare void @error(i32, i32, i8*, ...) #2

; Function Attrs: nounwind readnone
declare i32* @__errno_location() #7

; Function Attrs: noreturn nounwind
declare void @__assert_fail(i8*, i8*, i32, i8*) #4

; Function Attrs: nounwind
declare i32 @lstat(i8*, %struct.stat*) #5

; Function Attrs: nounwind
declare i32 @isatty(i32) #5

; Function Attrs: noinline nounwind uwtable
define i32 @rm(i8**, %struct.rm_options*) #3 !dbg !858 {
  %3 = alloca i8**, align 8
  %4 = alloca %struct.rm_options*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca %struct.FTS*, align 8
  %8 = alloca %struct._ftsent*, align 8
  %9 = alloca i32, align 4
  store i8** %0, i8*** %3, align 8
  call void @llvm.dbg.declare(metadata i8*** %3, metadata !880, metadata !DIExpression()), !dbg !881
  store %struct.rm_options* %1, %struct.rm_options** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.rm_options** %4, metadata !882, metadata !DIExpression()), !dbg !883
  call void @llvm.dbg.declare(metadata i32* %5, metadata !884, metadata !DIExpression()), !dbg !885
  store i32 2, i32* %5, align 4, !dbg !885
  %10 = load i8**, i8*** %3, align 8, !dbg !886
  %11 = load i8*, i8** %10, align 8, !dbg !888
  %12 = icmp ne i8* %11, null, !dbg !888
  br i1 %12, label %13, label %75, !dbg !889

; <label>:13:                                     ; preds = %2
  call void @llvm.dbg.declare(metadata i32* %6, metadata !890, metadata !DIExpression()), !dbg !892
  store i32 536, i32* %6, align 4, !dbg !892
  %14 = load %struct.rm_options*, %struct.rm_options** %4, align 8, !dbg !893
  %15 = getelementptr inbounds %struct.rm_options, %struct.rm_options* %14, i32 0, i32 2, !dbg !895
  %16 = load i8, i8* %15, align 8, !dbg !895
  %17 = trunc i8 %16 to i1, !dbg !895
  br i1 %17, label %18, label %21, !dbg !896

; <label>:18:                                     ; preds = %13
  %19 = load i32, i32* %6, align 4, !dbg !897
  %20 = or i32 %19, 64, !dbg !897
  store i32 %20, i32* %6, align 4, !dbg !897
  br label %21, !dbg !898

; <label>:21:                                     ; preds = %18, %13
  call void @llvm.dbg.declare(metadata %struct.FTS** %7, metadata !899, metadata !DIExpression()), !dbg !990
  %22 = load i8**, i8*** %3, align 8, !dbg !991
  %23 = load i32, i32* %6, align 4, !dbg !992
  %24 = call %struct.FTS* @xfts_open(i8** %22, i32 %23, i32 (%struct._ftsent**, %struct._ftsent**)* null), !dbg !993
  store %struct.FTS* %24, %struct.FTS** %7, align 8, !dbg !990
  br label %25, !dbg !994

; <label>:25:                                     ; preds = %21, %66
  call void @llvm.dbg.declare(metadata %struct._ftsent** %8, metadata !995, metadata !DIExpression()), !dbg !999
  %26 = load %struct.FTS*, %struct.FTS** %7, align 8, !dbg !1000
  %27 = call %struct._ftsent* @fts_read(%struct.FTS* %26), !dbg !1001
  store %struct._ftsent* %27, %struct._ftsent** %8, align 8, !dbg !1002
  %28 = load %struct._ftsent*, %struct._ftsent** %8, align 8, !dbg !1003
  %29 = icmp eq %struct._ftsent* %28, null, !dbg !1005
  br i1 %29, label %30, label %38, !dbg !1006

; <label>:30:                                     ; preds = %25
  %31 = call i32* @__errno_location() #14, !dbg !1007
  %32 = load i32, i32* %31, align 4, !dbg !1007
  %33 = icmp ne i32 %32, 0, !dbg !1010
  br i1 %33, label %34, label %37, !dbg !1011

; <label>:34:                                     ; preds = %30
  %35 = call i32* @__errno_location() #14, !dbg !1012
  %36 = load i32, i32* %35, align 4, !dbg !1012
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %36, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.53, i32 0, i32 0)), !dbg !1014
  store i32 4, i32* %5, align 4, !dbg !1015
  br label %37, !dbg !1016

; <label>:37:                                     ; preds = %34, %30
  br label %67, !dbg !1017

; <label>:38:                                     ; preds = %25
  call void @llvm.dbg.declare(metadata i32* %9, metadata !1018, metadata !DIExpression()), !dbg !1019
  %39 = load %struct.FTS*, %struct.FTS** %7, align 8, !dbg !1020
  %40 = load %struct._ftsent*, %struct._ftsent** %8, align 8, !dbg !1021
  %41 = load %struct.rm_options*, %struct.rm_options** %4, align 8, !dbg !1022
  %42 = call i32 @rm_fts(%struct.FTS* %39, %struct._ftsent* %40, %struct.rm_options* %41), !dbg !1023
  store i32 %42, i32* %9, align 4, !dbg !1019
  %43 = load i32, i32* %9, align 4, !dbg !1024
  %44 = icmp eq i32 %43, 2, !dbg !1024
  br i1 %44, label %51, label %45, !dbg !1024

; <label>:45:                                     ; preds = %38
  %46 = load i32, i32* %9, align 4, !dbg !1024
  %47 = icmp eq i32 %46, 3, !dbg !1024
  br i1 %47, label %51, label %48, !dbg !1024

; <label>:48:                                     ; preds = %45
  %49 = load i32, i32* %9, align 4, !dbg !1024
  %50 = icmp eq i32 %49, 4, !dbg !1024
  br i1 %50, label %51, label %52, !dbg !1027

; <label>:51:                                     ; preds = %48, %45, %38
  br label %53, !dbg !1027

; <label>:52:                                     ; preds = %48
  call void @__assert_fail(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.1.54, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2.55, i32 0, i32 0), i32 624, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @__PRETTY_FUNCTION__.rm, i32 0, i32 0)) #11, !dbg !1024
  unreachable, !dbg !1024

; <label>:53:                                     ; preds = %51
  br label %54, !dbg !1028, !llvm.loop !1029

; <label>:54:                                     ; preds = %53
  %55 = load i32, i32* %9, align 4, !dbg !1030
  %56 = icmp eq i32 %55, 4, !dbg !1030
  br i1 %56, label %63, label %57, !dbg !1030

; <label>:57:                                     ; preds = %54
  %58 = load i32, i32* %9, align 4, !dbg !1030
  %59 = icmp eq i32 %58, 3, !dbg !1030
  br i1 %59, label %60, label %65, !dbg !1030

; <label>:60:                                     ; preds = %57
  %61 = load i32, i32* %5, align 4, !dbg !1030
  %62 = icmp eq i32 %61, 2, !dbg !1030
  br i1 %62, label %63, label %65, !dbg !1033

; <label>:63:                                     ; preds = %60, %54
  %64 = load i32, i32* %9, align 4, !dbg !1030
  store i32 %64, i32* %5, align 4, !dbg !1030
  br label %65, !dbg !1030

; <label>:65:                                     ; preds = %63, %60, %57
  br label %66, !dbg !1033

; <label>:66:                                     ; preds = %65
  br label %25, !dbg !994, !llvm.loop !1034

; <label>:67:                                     ; preds = %37
  %68 = load %struct.FTS*, %struct.FTS** %7, align 8, !dbg !1036
  %69 = call i32 @fts_close(%struct.FTS* %68), !dbg !1038
  %70 = icmp ne i32 %69, 0, !dbg !1039
  br i1 %70, label %71, label %74, !dbg !1040

; <label>:71:                                     ; preds = %67
  %72 = call i32* @__errno_location() #14, !dbg !1041
  %73 = load i32, i32* %72, align 4, !dbg !1041
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %73, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3.56, i32 0, i32 0)), !dbg !1043
  store i32 4, i32* %5, align 4, !dbg !1044
  br label %74, !dbg !1045

; <label>:74:                                     ; preds = %71, %67
  br label %75, !dbg !1046

; <label>:75:                                     ; preds = %74, %2
  %76 = load i32, i32* %5, align 4, !dbg !1047
  ret i32 %76, !dbg !1048
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @rm_fts(%struct.FTS*, %struct._ftsent*, %struct.rm_options*) #3 !dbg !1049 {
  %4 = alloca i32, align 4
  %5 = alloca %struct.FTS*, align 8
  %6 = alloca %struct._ftsent*, align 8
  %7 = alloca %struct.rm_options*, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i8, align 1
  %11 = alloca i32, align 4
  store %struct.FTS* %0, %struct.FTS** %5, align 8
  call void @llvm.dbg.declare(metadata %struct.FTS** %5, metadata !1052, metadata !DIExpression()), !dbg !1053
  store %struct._ftsent* %1, %struct._ftsent** %6, align 8
  call void @llvm.dbg.declare(metadata %struct._ftsent** %6, metadata !1054, metadata !DIExpression()), !dbg !1055
  store %struct.rm_options* %2, %struct.rm_options** %7, align 8
  call void @llvm.dbg.declare(metadata %struct.rm_options** %7, metadata !1056, metadata !DIExpression()), !dbg !1057
  %12 = load %struct._ftsent*, %struct._ftsent** %6, align 8, !dbg !1058
  %13 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %12, i32 0, i32 14, !dbg !1059
  %14 = load i16, i16* %13, align 8, !dbg !1059
  %15 = zext i16 %14 to i32, !dbg !1058
  switch i32 %15, label %220 [
    i32 1, label %16
    i32 8, label %137
    i32 10, label %137
    i32 12, label %137
    i32 13, label %137
    i32 6, label %137
    i32 4, label %137
    i32 11, label %137
    i32 3, label %137
    i32 2, label %201
    i32 7, label %210
  ], !dbg !1060

; <label>:16:                                     ; preds = %3
  %17 = load %struct.rm_options*, %struct.rm_options** %7, align 8, !dbg !1061
  %18 = getelementptr inbounds %struct.rm_options, %struct.rm_options* %17, i32 0, i32 3, !dbg !1064
  %19 = load i8, i8* %18, align 1, !dbg !1064
  %20 = trunc i8 %19 to i1, !dbg !1064
  br i1 %20, label %29, label %21, !dbg !1065

; <label>:21:                                     ; preds = %16
  %22 = load %struct._ftsent*, %struct._ftsent** %6, align 8, !dbg !1066
  %23 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %22, i32 0, i32 6, !dbg !1068
  %24 = load i8*, i8** %23, align 8, !dbg !1068
  %25 = call i8* @quote(i8* %24), !dbg !1069
  call void (i32, i32, i8*, ...) @error(i32 0, i32 21, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.4.57, i32 0, i32 0), i8* %25), !dbg !1070
  %26 = load %struct._ftsent*, %struct._ftsent** %6, align 8, !dbg !1071
  call void @mark_ancestor_dirs(%struct._ftsent* %26), !dbg !1072
  %27 = load %struct.FTS*, %struct.FTS** %5, align 8, !dbg !1073
  %28 = load %struct._ftsent*, %struct._ftsent** %6, align 8, !dbg !1074
  call void @fts_skip_tree(%struct.FTS* %27, %struct._ftsent* %28), !dbg !1075
  store i32 4, i32* %4, align 4, !dbg !1076
  br label %229, !dbg !1076

; <label>:29:                                     ; preds = %16
  %30 = load %struct._ftsent*, %struct._ftsent** %6, align 8, !dbg !1077
  %31 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %30, i32 0, i32 11, !dbg !1079
  %32 = load i64, i64* %31, align 8, !dbg !1079
  %33 = icmp eq i64 %32, 0, !dbg !1080
  br i1 %33, label %34, label %111, !dbg !1081

; <label>:34:                                     ; preds = %29
  %35 = load %struct._ftsent*, %struct._ftsent** %6, align 8, !dbg !1082
  %36 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %35, i32 0, i32 6, !dbg !1085
  %37 = load i8*, i8** %36, align 8, !dbg !1085
  %38 = call zeroext i1 @strip_trailing_slashes(i8* %37), !dbg !1086
  br i1 %38, label %39, label %46, !dbg !1087

; <label>:39:                                     ; preds = %34
  %40 = load %struct._ftsent*, %struct._ftsent** %6, align 8, !dbg !1088
  %41 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %40, i32 0, i32 6, !dbg !1089
  %42 = load i8*, i8** %41, align 8, !dbg !1089
  %43 = call i64 @strlen(i8* %42) #12, !dbg !1090
  %44 = load %struct._ftsent*, %struct._ftsent** %6, align 8, !dbg !1091
  %45 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %44, i32 0, i32 9, !dbg !1092
  store i64 %43, i64* %45, align 8, !dbg !1093
  br label %46, !dbg !1091

; <label>:46:                                     ; preds = %39, %34
  %47 = load %struct._ftsent*, %struct._ftsent** %6, align 8, !dbg !1094
  %48 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %47, i32 0, i32 5, !dbg !1096
  %49 = load i8*, i8** %48, align 8, !dbg !1096
  %50 = call i8* @last_component(i8* %49), !dbg !1097
  %51 = call zeroext i1 @dot_or_dotdot(i8* %50), !dbg !1098
  br i1 %51, label %52, label %59, !dbg !1099

; <label>:52:                                     ; preds = %46
  %53 = load %struct._ftsent*, %struct._ftsent** %6, align 8, !dbg !1100
  %54 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %53, i32 0, i32 6, !dbg !1102
  %55 = load i8*, i8** %54, align 8, !dbg !1102
  %56 = call i8* @quote(i8* %55), !dbg !1103
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.5.58, i32 0, i32 0), i8* %56), !dbg !1104
  %57 = load %struct.FTS*, %struct.FTS** %5, align 8, !dbg !1105
  %58 = load %struct._ftsent*, %struct._ftsent** %6, align 8, !dbg !1106
  call void @fts_skip_tree(%struct.FTS* %57, %struct._ftsent* %58), !dbg !1107
  store i32 4, i32* %4, align 4, !dbg !1108
  br label %229, !dbg !1108

; <label>:59:                                     ; preds = %46
  %60 = load %struct.rm_options*, %struct.rm_options** %7, align 8, !dbg !1109
  %61 = getelementptr inbounds %struct.rm_options, %struct.rm_options* %60, i32 0, i32 4, !dbg !1109
  %62 = load %struct.dev_ino*, %struct.dev_ino** %61, align 8, !dbg !1109
  %63 = icmp ne %struct.dev_ino* %62, null, !dbg !1109
  br i1 %63, label %64, label %110, !dbg !1109

; <label>:64:                                     ; preds = %59
  %65 = load %struct._ftsent*, %struct._ftsent** %6, align 8, !dbg !1109
  %66 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %65, i32 0, i32 17, !dbg !1109
  %67 = getelementptr inbounds [1 x %struct.stat], [1 x %struct.stat]* %66, i32 0, i32 0, !dbg !1109
  %68 = getelementptr inbounds %struct.stat, %struct.stat* %67, i32 0, i32 1, !dbg !1109
  %69 = load i64, i64* %68, align 8, !dbg !1109
  %70 = load %struct.rm_options*, %struct.rm_options** %7, align 8, !dbg !1109
  %71 = getelementptr inbounds %struct.rm_options, %struct.rm_options* %70, i32 0, i32 4, !dbg !1109
  %72 = load %struct.dev_ino*, %struct.dev_ino** %71, align 8, !dbg !1109
  %73 = getelementptr inbounds %struct.dev_ino, %struct.dev_ino* %72, i32 0, i32 0, !dbg !1109
  %74 = load i64, i64* %73, align 8, !dbg !1109
  %75 = icmp eq i64 %69, %74, !dbg !1109
  br i1 %75, label %76, label %110, !dbg !1109

; <label>:76:                                     ; preds = %64
  %77 = load %struct._ftsent*, %struct._ftsent** %6, align 8, !dbg !1109
  %78 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %77, i32 0, i32 17, !dbg !1109
  %79 = getelementptr inbounds [1 x %struct.stat], [1 x %struct.stat]* %78, i32 0, i32 0, !dbg !1109
  %80 = getelementptr inbounds %struct.stat, %struct.stat* %79, i32 0, i32 0, !dbg !1109
  %81 = load i64, i64* %80, align 8, !dbg !1109
  %82 = load %struct.rm_options*, %struct.rm_options** %7, align 8, !dbg !1109
  %83 = getelementptr inbounds %struct.rm_options, %struct.rm_options* %82, i32 0, i32 4, !dbg !1109
  %84 = load %struct.dev_ino*, %struct.dev_ino** %83, align 8, !dbg !1109
  %85 = getelementptr inbounds %struct.dev_ino, %struct.dev_ino* %84, i32 0, i32 1, !dbg !1109
  %86 = load i64, i64* %85, align 8, !dbg !1109
  %87 = icmp eq i64 %81, %86, !dbg !1109
  br i1 %87, label %88, label %110, !dbg !1111

; <label>:88:                                     ; preds = %76
  br label %89, !dbg !1112, !llvm.loop !1114

; <label>:89:                                     ; preds = %88
  %90 = load %struct._ftsent*, %struct._ftsent** %6, align 8, !dbg !1115
  %91 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %90, i32 0, i32 6, !dbg !1115
  %92 = load i8*, i8** %91, align 8, !dbg !1115
  %93 = call i32 @strcmp(i8* %92, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6.59, i32 0, i32 0)) #12, !dbg !1115
  %94 = icmp eq i32 %93, 0, !dbg !1115
  br i1 %94, label %95, label %100, !dbg !1118

; <label>:95:                                     ; preds = %89
  %96 = load %struct._ftsent*, %struct._ftsent** %6, align 8, !dbg !1115
  %97 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %96, i32 0, i32 6, !dbg !1115
  %98 = load i8*, i8** %97, align 8, !dbg !1115
  %99 = call i8* @quote(i8* %98), !dbg !1115
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.7.60, i32 0, i32 0), i8* %99), !dbg !1115
  br label %106, !dbg !1115

; <label>:100:                                    ; preds = %89
  %101 = load %struct._ftsent*, %struct._ftsent** %6, align 8, !dbg !1115
  %102 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %101, i32 0, i32 6, !dbg !1115
  %103 = load i8*, i8** %102, align 8, !dbg !1115
  %104 = call i8* @quote_n(i32 0, i8* %103), !dbg !1115
  %105 = call i8* @quote_n(i32 1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6.59, i32 0, i32 0)), !dbg !1115
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.8.61, i32 0, i32 0), i8* %104, i8* %105), !dbg !1115
  br label %106

; <label>:106:                                    ; preds = %100, %95
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.9.62, i32 0, i32 0)), !dbg !1118
  br label %107, !dbg !1118

; <label>:107:                                    ; preds = %106
  %108 = load %struct.FTS*, %struct.FTS** %5, align 8, !dbg !1119
  %109 = load %struct._ftsent*, %struct._ftsent** %6, align 8, !dbg !1120
  call void @fts_skip_tree(%struct.FTS* %108, %struct._ftsent* %109), !dbg !1121
  store i32 4, i32* %4, align 4, !dbg !1122
  br label %229, !dbg !1122

; <label>:110:                                    ; preds = %76, %64, %59
  br label %111, !dbg !1123

; <label>:111:                                    ; preds = %110, %29
  call void @llvm.dbg.declare(metadata i32* %8, metadata !1124, metadata !DIExpression()), !dbg !1127
  call void @llvm.dbg.declare(metadata i32* %9, metadata !1128, metadata !DIExpression()), !dbg !1129
  %112 = load %struct.FTS*, %struct.FTS** %5, align 8, !dbg !1130
  %113 = load %struct._ftsent*, %struct._ftsent** %6, align 8, !dbg !1131
  %114 = load %struct.rm_options*, %struct.rm_options** %7, align 8, !dbg !1132
  %115 = call i32 @prompt(%struct.FTS* %112, %struct._ftsent* %113, i1 zeroext true, %struct.rm_options* %114, i32 2, i32* %8), !dbg !1133
  store i32 %115, i32* %9, align 4, !dbg !1129
  %116 = load i32, i32* %9, align 4, !dbg !1134
  %117 = icmp eq i32 %116, 2, !dbg !1136
  br i1 %117, label %118, label %128, !dbg !1137

; <label>:118:                                    ; preds = %111
  %119 = load i32, i32* %8, align 4, !dbg !1138
  %120 = icmp eq i32 %119, 4, !dbg !1139
  br i1 %120, label %121, label %128, !dbg !1140

; <label>:121:                                    ; preds = %118
  %122 = load %struct.FTS*, %struct.FTS** %5, align 8, !dbg !1141
  %123 = load %struct._ftsent*, %struct._ftsent** %6, align 8, !dbg !1143
  %124 = load %struct.rm_options*, %struct.rm_options** %7, align 8, !dbg !1144
  %125 = call i32 @excise(%struct.FTS* %122, %struct._ftsent* %123, %struct.rm_options* %124, i1 zeroext true), !dbg !1145
  store i32 %125, i32* %9, align 4, !dbg !1146
  %126 = load %struct.FTS*, %struct.FTS** %5, align 8, !dbg !1147
  %127 = load %struct._ftsent*, %struct._ftsent** %6, align 8, !dbg !1148
  call void @fts_skip_tree(%struct.FTS* %126, %struct._ftsent* %127), !dbg !1149
  br label %128, !dbg !1150

; <label>:128:                                    ; preds = %121, %118, %111
  %129 = load i32, i32* %9, align 4, !dbg !1151
  %130 = icmp ne i32 %129, 2, !dbg !1153
  br i1 %130, label %131, label %135, !dbg !1154

; <label>:131:                                    ; preds = %128
  %132 = load %struct._ftsent*, %struct._ftsent** %6, align 8, !dbg !1155
  call void @mark_ancestor_dirs(%struct._ftsent* %132), !dbg !1157
  %133 = load %struct.FTS*, %struct.FTS** %5, align 8, !dbg !1158
  %134 = load %struct._ftsent*, %struct._ftsent** %6, align 8, !dbg !1159
  call void @fts_skip_tree(%struct.FTS* %133, %struct._ftsent* %134), !dbg !1160
  br label %135, !dbg !1161

; <label>:135:                                    ; preds = %131, %128
  %136 = load i32, i32* %9, align 4, !dbg !1162
  store i32 %136, i32* %4, align 4, !dbg !1163
  br label %229, !dbg !1163

; <label>:137:                                    ; preds = %3, %3, %3, %3, %3, %3, %3, %3
  %138 = load %struct._ftsent*, %struct._ftsent** %6, align 8, !dbg !1164
  %139 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %138, i32 0, i32 14, !dbg !1167
  %140 = load i16, i16* %139, align 8, !dbg !1167
  %141 = zext i16 %140 to i32, !dbg !1164
  %142 = icmp eq i32 %141, 6, !dbg !1168
  br i1 %142, label %143, label %169, !dbg !1169

; <label>:143:                                    ; preds = %137
  %144 = load %struct.rm_options*, %struct.rm_options** %7, align 8, !dbg !1170
  %145 = getelementptr inbounds %struct.rm_options, %struct.rm_options* %144, i32 0, i32 2, !dbg !1171
  %146 = load i8, i8* %145, align 8, !dbg !1171
  %147 = trunc i8 %146 to i1, !dbg !1171
  br i1 %147, label %148, label %169, !dbg !1172

; <label>:148:                                    ; preds = %143
  %149 = load %struct._ftsent*, %struct._ftsent** %6, align 8, !dbg !1173
  %150 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %149, i32 0, i32 11, !dbg !1174
  %151 = load i64, i64* %150, align 8, !dbg !1174
  %152 = icmp slt i64 0, %151, !dbg !1175
  br i1 %152, label %153, label %169, !dbg !1176

; <label>:153:                                    ; preds = %148
  %154 = load %struct._ftsent*, %struct._ftsent** %6, align 8, !dbg !1177
  %155 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %154, i32 0, i32 17, !dbg !1178
  %156 = getelementptr inbounds [1 x %struct.stat], [1 x %struct.stat]* %155, i32 0, i32 0, !dbg !1179
  %157 = getelementptr inbounds %struct.stat, %struct.stat* %156, i32 0, i32 0, !dbg !1179
  %158 = load i64, i64* %157, align 8, !dbg !1179
  %159 = load %struct.FTS*, %struct.FTS** %5, align 8, !dbg !1180
  %160 = getelementptr inbounds %struct.FTS, %struct.FTS* %159, i32 0, i32 3, !dbg !1181
  %161 = load i64, i64* %160, align 8, !dbg !1181
  %162 = icmp ne i64 %158, %161, !dbg !1182
  br i1 %162, label %163, label %169, !dbg !1183

; <label>:163:                                    ; preds = %153
  %164 = load %struct._ftsent*, %struct._ftsent** %6, align 8, !dbg !1184
  call void @mark_ancestor_dirs(%struct._ftsent* %164), !dbg !1186
  %165 = load %struct._ftsent*, %struct._ftsent** %6, align 8, !dbg !1187
  %166 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %165, i32 0, i32 6, !dbg !1188
  %167 = load i8*, i8** %166, align 8, !dbg !1188
  %168 = call i8* @quote(i8* %167), !dbg !1189
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.10.63, i32 0, i32 0), i8* %168), !dbg !1190
  store i32 4, i32* %4, align 4, !dbg !1191
  br label %229, !dbg !1191

; <label>:169:                                    ; preds = %153, %148, %143, %137
  call void @llvm.dbg.declare(metadata i8* %10, metadata !1192, metadata !DIExpression()), !dbg !1193
  %170 = load %struct._ftsent*, %struct._ftsent** %6, align 8, !dbg !1194
  %171 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %170, i32 0, i32 14, !dbg !1195
  %172 = load i16, i16* %171, align 8, !dbg !1195
  %173 = zext i16 %172 to i32, !dbg !1194
  %174 = icmp eq i32 %173, 6, !dbg !1196
  br i1 %174, label %181, label %175, !dbg !1197

; <label>:175:                                    ; preds = %169
  %176 = load %struct._ftsent*, %struct._ftsent** %6, align 8, !dbg !1198
  %177 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %176, i32 0, i32 14, !dbg !1199
  %178 = load i16, i16* %177, align 8, !dbg !1199
  %179 = zext i16 %178 to i32, !dbg !1198
  %180 = icmp eq i32 %179, 4, !dbg !1200
  br label %181, !dbg !1197

; <label>:181:                                    ; preds = %175, %169
  %182 = phi i1 [ true, %169 ], [ %180, %175 ]
  %183 = zext i1 %182 to i8, !dbg !1193
  store i8 %183, i8* %10, align 1, !dbg !1193
  call void @llvm.dbg.declare(metadata i32* %11, metadata !1201, metadata !DIExpression()), !dbg !1202
  %184 = load %struct.FTS*, %struct.FTS** %5, align 8, !dbg !1203
  %185 = load %struct._ftsent*, %struct._ftsent** %6, align 8, !dbg !1204
  %186 = load i8, i8* %10, align 1, !dbg !1205
  %187 = trunc i8 %186 to i1, !dbg !1205
  %188 = load %struct.rm_options*, %struct.rm_options** %7, align 8, !dbg !1206
  %189 = call i32 @prompt(%struct.FTS* %184, %struct._ftsent* %185, i1 zeroext %187, %struct.rm_options* %188, i32 3, i32* null), !dbg !1207
  store i32 %189, i32* %11, align 4, !dbg !1202
  %190 = load i32, i32* %11, align 4, !dbg !1208
  %191 = icmp ne i32 %190, 2, !dbg !1210
  br i1 %191, label %192, label %194, !dbg !1211

; <label>:192:                                    ; preds = %181
  %193 = load i32, i32* %11, align 4, !dbg !1212
  store i32 %193, i32* %4, align 4, !dbg !1213
  br label %229, !dbg !1213

; <label>:194:                                    ; preds = %181
  %195 = load %struct.FTS*, %struct.FTS** %5, align 8, !dbg !1214
  %196 = load %struct._ftsent*, %struct._ftsent** %6, align 8, !dbg !1215
  %197 = load %struct.rm_options*, %struct.rm_options** %7, align 8, !dbg !1216
  %198 = load i8, i8* %10, align 1, !dbg !1217
  %199 = trunc i8 %198 to i1, !dbg !1217
  %200 = call i32 @excise(%struct.FTS* %195, %struct._ftsent* %196, %struct.rm_options* %197, i1 zeroext %199), !dbg !1218
  store i32 %200, i32* %4, align 4, !dbg !1219
  br label %229, !dbg !1219

; <label>:201:                                    ; preds = %3
  br label %202, !dbg !1220, !llvm.loop !1221

; <label>:202:                                    ; preds = %201
  %203 = load %struct._ftsent*, %struct._ftsent** %6, align 8, !dbg !1222
  %204 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %203, i32 0, i32 6, !dbg !1222
  %205 = load i8*, i8** %204, align 8, !dbg !1222
  %206 = call i8* @quote(i8* %205), !dbg !1222
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* getelementptr inbounds ([186 x i8], [186 x i8]* @.str.11.64, i32 0, i32 0), i8* %206), !dbg !1222
  br label %207, !dbg !1222

; <label>:207:                                    ; preds = %202
  %208 = load %struct.FTS*, %struct.FTS** %5, align 8, !dbg !1224
  %209 = load %struct._ftsent*, %struct._ftsent** %6, align 8, !dbg !1225
  call void @fts_skip_tree(%struct.FTS* %208, %struct._ftsent* %209), !dbg !1226
  store i32 4, i32* %4, align 4, !dbg !1227
  br label %229, !dbg !1227

; <label>:210:                                    ; preds = %3
  %211 = load %struct._ftsent*, %struct._ftsent** %6, align 8, !dbg !1228
  %212 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %211, i32 0, i32 7, !dbg !1229
  %213 = load i32, i32* %212, align 8, !dbg !1229
  %214 = load %struct._ftsent*, %struct._ftsent** %6, align 8, !dbg !1230
  %215 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %214, i32 0, i32 6, !dbg !1231
  %216 = load i8*, i8** %215, align 8, !dbg !1231
  %217 = call i8* @quote(i8* %216), !dbg !1232
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %213, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.12.65, i32 0, i32 0), i8* %217), !dbg !1233
  %218 = load %struct.FTS*, %struct.FTS** %5, align 8, !dbg !1234
  %219 = load %struct._ftsent*, %struct._ftsent** %6, align 8, !dbg !1235
  call void @fts_skip_tree(%struct.FTS* %218, %struct._ftsent* %219), !dbg !1236
  store i32 4, i32* %4, align 4, !dbg !1237
  br label %229, !dbg !1237

; <label>:220:                                    ; preds = %3
  %221 = load %struct._ftsent*, %struct._ftsent** %6, align 8, !dbg !1238
  %222 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %221, i32 0, i32 14, !dbg !1239
  %223 = load i16, i16* %222, align 8, !dbg !1239
  %224 = zext i16 %223 to i32, !dbg !1238
  %225 = load %struct._ftsent*, %struct._ftsent** %6, align 8, !dbg !1240
  %226 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %225, i32 0, i32 6, !dbg !1241
  %227 = load i8*, i8** %226, align 8, !dbg !1241
  %228 = call i8* @quote(i8* %227), !dbg !1242
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.13.66, i32 0, i32 0), i32 %224, i8* %228, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.14.67, i32 0, i32 0)), !dbg !1243
  call void @abort() #11, !dbg !1244
  unreachable, !dbg !1244

; <label>:229:                                    ; preds = %210, %207, %194, %192, %163, %135, %107, %52, %21
  %230 = load i32, i32* %4, align 4, !dbg !1245
  ret i32 %230, !dbg !1245
}

; Function Attrs: noinline nounwind uwtable
define internal void @mark_ancestor_dirs(%struct._ftsent*) #3 !dbg !1246 {
  %2 = alloca %struct._ftsent*, align 8
  %3 = alloca %struct._ftsent*, align 8
  store %struct._ftsent* %0, %struct._ftsent** %2, align 8
  call void @llvm.dbg.declare(metadata %struct._ftsent** %2, metadata !1249, metadata !DIExpression()), !dbg !1250
  call void @llvm.dbg.declare(metadata %struct._ftsent** %3, metadata !1251, metadata !DIExpression()), !dbg !1252
  %4 = load %struct._ftsent*, %struct._ftsent** %2, align 8, !dbg !1253
  %5 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %4, i32 0, i32 1, !dbg !1255
  %6 = load %struct._ftsent*, %struct._ftsent** %5, align 8, !dbg !1255
  store %struct._ftsent* %6, %struct._ftsent** %3, align 8, !dbg !1256
  br label %7, !dbg !1257

; <label>:7:                                      ; preds = %21, %1
  %8 = load %struct._ftsent*, %struct._ftsent** %3, align 8, !dbg !1258
  %9 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %8, i32 0, i32 11, !dbg !1260
  %10 = load i64, i64* %9, align 8, !dbg !1260
  %11 = icmp sle i64 0, %10, !dbg !1261
  br i1 %11, label %12, label %25, !dbg !1262

; <label>:12:                                     ; preds = %7
  %13 = load %struct._ftsent*, %struct._ftsent** %3, align 8, !dbg !1263
  %14 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %13, i32 0, i32 3, !dbg !1266
  %15 = load i64, i64* %14, align 8, !dbg !1266
  %16 = icmp ne i64 %15, 0, !dbg !1263
  br i1 %16, label %17, label %18, !dbg !1267

; <label>:17:                                     ; preds = %12
  br label %25, !dbg !1268

; <label>:18:                                     ; preds = %12
  %19 = load %struct._ftsent*, %struct._ftsent** %3, align 8, !dbg !1269
  %20 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %19, i32 0, i32 3, !dbg !1270
  store i64 1, i64* %20, align 8, !dbg !1271
  br label %21, !dbg !1272

; <label>:21:                                     ; preds = %18
  %22 = load %struct._ftsent*, %struct._ftsent** %3, align 8, !dbg !1273
  %23 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %22, i32 0, i32 1, !dbg !1274
  %24 = load %struct._ftsent*, %struct._ftsent** %23, align 8, !dbg !1274
  store %struct._ftsent* %24, %struct._ftsent** %3, align 8, !dbg !1275
  br label %7, !dbg !1276, !llvm.loop !1277

; <label>:25:                                     ; preds = %17, %7
  ret void, !dbg !1279
}

; Function Attrs: noinline nounwind uwtable
define internal void @fts_skip_tree(%struct.FTS*, %struct._ftsent*) #3 !dbg !1280 {
  %3 = alloca %struct.FTS*, align 8
  %4 = alloca %struct._ftsent*, align 8
  store %struct.FTS* %0, %struct.FTS** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.FTS** %3, metadata !1283, metadata !DIExpression()), !dbg !1284
  store %struct._ftsent* %1, %struct._ftsent** %4, align 8
  call void @llvm.dbg.declare(metadata %struct._ftsent** %4, metadata !1285, metadata !DIExpression()), !dbg !1286
  %5 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !1287
  %6 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !1288
  %7 = call i32 @fts_set(%struct.FTS* %5, %struct._ftsent* %6, i32 4), !dbg !1289
  %8 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !1290
  %9 = call %struct._ftsent* @fts_read(%struct.FTS* %8), !dbg !1291
  store %struct._ftsent* %9, %struct._ftsent** %4, align 8, !dbg !1292
  ret void, !dbg !1293
}

; Function Attrs: nounwind readonly
declare i64 @strlen(i8*) #6

; Function Attrs: noinline nounwind uwtable
define internal zeroext i1 @dot_or_dotdot(i8*) #3 !dbg !1294 {
  %2 = alloca i1, align 1
  %3 = alloca i8*, align 8
  %4 = alloca i8, align 1
  store i8* %0, i8** %3, align 8
  call void @llvm.dbg.declare(metadata i8** %3, metadata !1297, metadata !DIExpression()), !dbg !1298
  %5 = load i8*, i8** %3, align 8, !dbg !1299
  %6 = getelementptr inbounds i8, i8* %5, i64 0, !dbg !1299
  %7 = load i8, i8* %6, align 1, !dbg !1299
  %8 = sext i8 %7 to i32, !dbg !1299
  %9 = icmp eq i32 %8, 46, !dbg !1301
  br i1 %9, label %10, label %30, !dbg !1302

; <label>:10:                                     ; preds = %1
  call void @llvm.dbg.declare(metadata i8* %4, metadata !1303, metadata !DIExpression()), !dbg !1305
  %11 = load i8*, i8** %3, align 8, !dbg !1306
  %12 = load i8*, i8** %3, align 8, !dbg !1307
  %13 = getelementptr inbounds i8, i8* %12, i64 1, !dbg !1307
  %14 = load i8, i8* %13, align 1, !dbg !1307
  %15 = sext i8 %14 to i32, !dbg !1307
  %16 = icmp eq i32 %15, 46, !dbg !1308
  %17 = zext i1 %16 to i32, !dbg !1308
  %18 = add nsw i32 %17, 1, !dbg !1309
  %19 = sext i32 %18 to i64, !dbg !1306
  %20 = getelementptr inbounds i8, i8* %11, i64 %19, !dbg !1306
  %21 = load i8, i8* %20, align 1, !dbg !1306
  store i8 %21, i8* %4, align 1, !dbg !1305
  %22 = load i8, i8* %4, align 1, !dbg !1310
  %23 = icmp ne i8 %22, 0, !dbg !1310
  br i1 %23, label %24, label %28, !dbg !1311

; <label>:24:                                     ; preds = %10
  %25 = load i8, i8* %4, align 1, !dbg !1312
  %26 = sext i8 %25 to i32, !dbg !1312
  %27 = icmp eq i32 %26, 47, !dbg !1312
  br label %28, !dbg !1311

; <label>:28:                                     ; preds = %24, %10
  %29 = phi i1 [ true, %10 ], [ %27, %24 ]
  store i1 %29, i1* %2, align 1, !dbg !1313
  br label %31, !dbg !1313

; <label>:30:                                     ; preds = %1
  store i1 false, i1* %2, align 1, !dbg !1314
  br label %31, !dbg !1314

; <label>:31:                                     ; preds = %30, %28
  %32 = load i1, i1* %2, align 1, !dbg !1315
  ret i1 %32, !dbg !1315
}

; Function Attrs: nounwind readonly
declare i32 @strcmp(i8*, i8*) #6

; Function Attrs: noinline nounwind uwtable
define internal i32 @prompt(%struct.FTS*, %struct._ftsent*, i1 zeroext, %struct.rm_options*, i32, i32*) #3 !dbg !1316 {
  %7 = alloca i32, align 4
  %8 = alloca %struct.FTS*, align 8
  %9 = alloca %struct._ftsent*, align 8
  %10 = alloca i8, align 1
  %11 = alloca %struct.rm_options*, align 8
  %12 = alloca i32, align 4
  %13 = alloca i32*, align 8
  %14 = alloca i32, align 4
  %15 = alloca i8*, align 8
  %16 = alloca i8*, align 8
  %17 = alloca %struct.stat, align 8
  %18 = alloca %struct.stat*, align 8
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  %22 = alloca i8*, align 8
  %23 = alloca i8, align 1
  store %struct.FTS* %0, %struct.FTS** %8, align 8
  call void @llvm.dbg.declare(metadata %struct.FTS** %8, metadata !1324, metadata !DIExpression()), !dbg !1325
  store %struct._ftsent* %1, %struct._ftsent** %9, align 8
  call void @llvm.dbg.declare(metadata %struct._ftsent** %9, metadata !1326, metadata !DIExpression()), !dbg !1327
  %24 = zext i1 %2 to i8
  store i8 %24, i8* %10, align 1
  call void @llvm.dbg.declare(metadata i8* %10, metadata !1328, metadata !DIExpression()), !dbg !1329
  store %struct.rm_options* %3, %struct.rm_options** %11, align 8
  call void @llvm.dbg.declare(metadata %struct.rm_options** %11, metadata !1330, metadata !DIExpression()), !dbg !1331
  store i32 %4, i32* %12, align 4
  call void @llvm.dbg.declare(metadata i32* %12, metadata !1332, metadata !DIExpression()), !dbg !1333
  store i32* %5, i32** %13, align 8
  call void @llvm.dbg.declare(metadata i32** %13, metadata !1334, metadata !DIExpression()), !dbg !1335
  call void @llvm.dbg.declare(metadata i32* %14, metadata !1336, metadata !DIExpression()), !dbg !1337
  %25 = load %struct.FTS*, %struct.FTS** %8, align 8, !dbg !1338
  %26 = getelementptr inbounds %struct.FTS, %struct.FTS* %25, i32 0, i32 6, !dbg !1339
  %27 = load i32, i32* %26, align 4, !dbg !1339
  store i32 %27, i32* %14, align 4, !dbg !1337
  call void @llvm.dbg.declare(metadata i8** %15, metadata !1340, metadata !DIExpression()), !dbg !1341
  %28 = load %struct._ftsent*, %struct._ftsent** %9, align 8, !dbg !1342
  %29 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %28, i32 0, i32 6, !dbg !1343
  %30 = load i8*, i8** %29, align 8, !dbg !1343
  store i8* %30, i8** %15, align 8, !dbg !1341
  call void @llvm.dbg.declare(metadata i8** %16, metadata !1344, metadata !DIExpression()), !dbg !1345
  %31 = load %struct._ftsent*, %struct._ftsent** %9, align 8, !dbg !1346
  %32 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %31, i32 0, i32 5, !dbg !1347
  %33 = load i8*, i8** %32, align 8, !dbg !1347
  store i8* %33, i8** %16, align 8, !dbg !1345
  %34 = load i32*, i32** %13, align 8, !dbg !1348
  %35 = icmp ne i32* %34, null, !dbg !1348
  br i1 %35, label %36, label %38, !dbg !1350

; <label>:36:                                     ; preds = %6
  %37 = load i32*, i32** %13, align 8, !dbg !1351
  store i32 2, i32* %37, align 4, !dbg !1352
  br label %38, !dbg !1353

; <label>:38:                                     ; preds = %36, %6
  call void @llvm.dbg.declare(metadata %struct.stat* %17, metadata !1354, metadata !DIExpression()), !dbg !1355
  call void @llvm.dbg.declare(metadata %struct.stat** %18, metadata !1356, metadata !DIExpression()), !dbg !1358
  store %struct.stat* %17, %struct.stat** %18, align 8, !dbg !1358
  %39 = load %struct.stat*, %struct.stat** %18, align 8, !dbg !1359
  %40 = call %struct.stat* @cache_stat_init(%struct.stat* %39), !dbg !1360
  call void @llvm.dbg.declare(metadata i32* %19, metadata !1361, metadata !DIExpression()), !dbg !1362
  %41 = load i8, i8* %10, align 1, !dbg !1363
  %42 = trunc i8 %41 to i1, !dbg !1363
  %43 = zext i1 %42 to i64, !dbg !1363
  %44 = select i1 %42, i32 4, i32 0, !dbg !1363
  store i32 %44, i32* %19, align 4, !dbg !1362
  call void @llvm.dbg.declare(metadata i32* %20, metadata !1364, metadata !DIExpression()), !dbg !1365
  store i32 0, i32* %20, align 4, !dbg !1365
  %45 = load %struct._ftsent*, %struct._ftsent** %9, align 8, !dbg !1366
  %46 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %45, i32 0, i32 3, !dbg !1368
  %47 = load i64, i64* %46, align 8, !dbg !1368
  %48 = icmp ne i64 %47, 0, !dbg !1366
  br i1 %48, label %49, label %50, !dbg !1369

; <label>:49:                                     ; preds = %38
  store i32 3, i32* %7, align 4, !dbg !1370
  br label %208, !dbg !1370

; <label>:50:                                     ; preds = %38
  %51 = load %struct.rm_options*, %struct.rm_options** %11, align 8, !dbg !1371
  %52 = getelementptr inbounds %struct.rm_options, %struct.rm_options* %51, i32 0, i32 1, !dbg !1373
  %53 = load i32, i32* %52, align 4, !dbg !1373
  %54 = icmp eq i32 %53, 5, !dbg !1374
  br i1 %54, label %55, label %56, !dbg !1375

; <label>:55:                                     ; preds = %50
  store i32 2, i32* %7, align 4, !dbg !1376
  br label %208, !dbg !1376

; <label>:56:                                     ; preds = %50
  call void @llvm.dbg.declare(metadata i32* %21, metadata !1377, metadata !DIExpression()), !dbg !1378
  store i32 0, i32* %21, align 4, !dbg !1378
  %57 = load %struct.rm_options*, %struct.rm_options** %11, align 8, !dbg !1379
  %58 = getelementptr inbounds %struct.rm_options, %struct.rm_options* %57, i32 0, i32 0, !dbg !1381
  %59 = load i8, i8* %58, align 8, !dbg !1381
  %60 = trunc i8 %59 to i1, !dbg !1381
  br i1 %60, label %82, label %61, !dbg !1382

; <label>:61:                                     ; preds = %56
  %62 = load %struct.rm_options*, %struct.rm_options** %11, align 8, !dbg !1383
  %63 = getelementptr inbounds %struct.rm_options, %struct.rm_options* %62, i32 0, i32 1, !dbg !1384
  %64 = load i32, i32* %63, align 4, !dbg !1384
  %65 = icmp eq i32 %64, 3, !dbg !1385
  br i1 %65, label %71, label %66, !dbg !1386

; <label>:66:                                     ; preds = %61
  %67 = load %struct.rm_options*, %struct.rm_options** %11, align 8, !dbg !1387
  %68 = getelementptr inbounds %struct.rm_options, %struct.rm_options* %67, i32 0, i32 5, !dbg !1388
  %69 = load i8, i8* %68, align 8, !dbg !1388
  %70 = trunc i8 %69 to i1, !dbg !1388
  br i1 %70, label %71, label %82, !dbg !1389

; <label>:71:                                     ; preds = %66, %61
  %72 = load i32, i32* %19, align 4, !dbg !1390
  %73 = icmp ne i32 %72, 10, !dbg !1391
  br i1 %73, label %74, label %82, !dbg !1392

; <label>:74:                                     ; preds = %71
  %75 = load i32, i32* %14, align 4, !dbg !1393
  %76 = load i8*, i8** %16, align 8, !dbg !1395
  %77 = load i8*, i8** %15, align 8, !dbg !1396
  %78 = load %struct.stat*, %struct.stat** %18, align 8, !dbg !1397
  %79 = call i32 @write_protected_non_symlink(i32 %75, i8* %76, i8* %77, %struct.stat* %78), !dbg !1398
  store i32 %79, i32* %20, align 4, !dbg !1399
  %80 = call i32* @__errno_location() #14, !dbg !1400
  %81 = load i32, i32* %80, align 4, !dbg !1400
  store i32 %81, i32* %21, align 4, !dbg !1401
  br label %82, !dbg !1402

; <label>:82:                                     ; preds = %74, %71, %66, %56
  %83 = load i32, i32* %20, align 4, !dbg !1403
  %84 = icmp ne i32 %83, 0, !dbg !1403
  br i1 %84, label %90, label %85, !dbg !1405

; <label>:85:                                     ; preds = %82
  %86 = load %struct.rm_options*, %struct.rm_options** %11, align 8, !dbg !1406
  %87 = getelementptr inbounds %struct.rm_options, %struct.rm_options* %86, i32 0, i32 1, !dbg !1407
  %88 = load i32, i32* %87, align 4, !dbg !1407
  %89 = icmp eq i32 %88, 3, !dbg !1408
  br i1 %89, label %90, label %207, !dbg !1409

; <label>:90:                                     ; preds = %85, %82
  %91 = load i32, i32* %20, align 4, !dbg !1410
  %92 = icmp sle i32 0, %91, !dbg !1413
  br i1 %92, label %93, label %122, !dbg !1414

; <label>:93:                                     ; preds = %90
  %94 = load i32, i32* %19, align 4, !dbg !1415
  %95 = icmp eq i32 %94, 0, !dbg !1416
  br i1 %95, label %96, label %122, !dbg !1417

; <label>:96:                                     ; preds = %93
  %97 = load i32, i32* %14, align 4, !dbg !1418
  %98 = load i8*, i8** %16, align 8, !dbg !1421
  %99 = load %struct.stat*, %struct.stat** %18, align 8, !dbg !1422
  %100 = call i32 @cache_fstatat(i32 %97, i8* %98, %struct.stat* %99, i32 256), !dbg !1423
  %101 = icmp eq i32 %100, 0, !dbg !1424
  br i1 %101, label %102, label %118, !dbg !1425

; <label>:102:                                    ; preds = %96
  %103 = load %struct.stat*, %struct.stat** %18, align 8, !dbg !1426
  %104 = getelementptr inbounds %struct.stat, %struct.stat* %103, i32 0, i32 3, !dbg !1426
  %105 = load i32, i32* %104, align 8, !dbg !1426
  %106 = and i32 %105, 61440, !dbg !1426
  %107 = icmp eq i32 %106, 40960, !dbg !1426
  br i1 %107, label %108, label %109, !dbg !1429

; <label>:108:                                    ; preds = %102
  store i32 10, i32* %19, align 4, !dbg !1430
  br label %117, !dbg !1431

; <label>:109:                                    ; preds = %102
  %110 = load %struct.stat*, %struct.stat** %18, align 8, !dbg !1432
  %111 = getelementptr inbounds %struct.stat, %struct.stat* %110, i32 0, i32 3, !dbg !1432
  %112 = load i32, i32* %111, align 8, !dbg !1432
  %113 = and i32 %112, 61440, !dbg !1432
  %114 = icmp eq i32 %113, 16384, !dbg !1432
  br i1 %114, label %115, label %116, !dbg !1434

; <label>:115:                                    ; preds = %109
  store i32 4, i32* %19, align 4, !dbg !1435
  br label %116, !dbg !1436

; <label>:116:                                    ; preds = %115, %109
  br label %117

; <label>:117:                                    ; preds = %116, %108
  br label %121, !dbg !1437

; <label>:118:                                    ; preds = %96
  store i32 -1, i32* %20, align 4, !dbg !1438
  %119 = call i32* @__errno_location() #14, !dbg !1440
  %120 = load i32, i32* %119, align 4, !dbg !1440
  store i32 %120, i32* %21, align 4, !dbg !1441
  br label %121

; <label>:121:                                    ; preds = %118, %117
  br label %122, !dbg !1442

; <label>:122:                                    ; preds = %121, %93, %90
  %123 = load i32, i32* %20, align 4, !dbg !1443
  %124 = icmp sle i32 0, %123, !dbg !1445
  br i1 %124, label %125, label %142, !dbg !1446

; <label>:125:                                    ; preds = %122
  %126 = load i32, i32* %19, align 4, !dbg !1447
  switch i32 %126, label %141 [
    i32 10, label %127
    i32 4, label %134
  ], !dbg !1448

; <label>:127:                                    ; preds = %125
  %128 = load %struct.rm_options*, %struct.rm_options** %11, align 8, !dbg !1449
  %129 = getelementptr inbounds %struct.rm_options, %struct.rm_options* %128, i32 0, i32 1, !dbg !1452
  %130 = load i32, i32* %129, align 4, !dbg !1452
  %131 = icmp ne i32 %130, 3, !dbg !1453
  br i1 %131, label %132, label %133, !dbg !1454

; <label>:132:                                    ; preds = %127
  store i32 2, i32* %7, align 4, !dbg !1455
  br label %208, !dbg !1455

; <label>:133:                                    ; preds = %127
  br label %141, !dbg !1456

; <label>:134:                                    ; preds = %125
  %135 = load %struct.rm_options*, %struct.rm_options** %11, align 8, !dbg !1457
  %136 = getelementptr inbounds %struct.rm_options, %struct.rm_options* %135, i32 0, i32 3, !dbg !1459
  %137 = load i8, i8* %136, align 1, !dbg !1459
  %138 = trunc i8 %137 to i1, !dbg !1459
  br i1 %138, label %140, label %139, !dbg !1460

; <label>:139:                                    ; preds = %134
  store i32 -1, i32* %20, align 4, !dbg !1461
  store i32 21, i32* %21, align 4, !dbg !1463
  br label %140, !dbg !1464

; <label>:140:                                    ; preds = %139, %134
  br label %141, !dbg !1465

; <label>:141:                                    ; preds = %125, %140, %133
  br label %142, !dbg !1466

; <label>:142:                                    ; preds = %141, %122
  call void @llvm.dbg.declare(metadata i8** %22, metadata !1467, metadata !DIExpression()), !dbg !1468
  %143 = load i8*, i8** %15, align 8, !dbg !1469
  %144 = call i8* @quote(i8* %143), !dbg !1470
  store i8* %144, i8** %22, align 8, !dbg !1468
  %145 = load i32, i32* %20, align 4, !dbg !1471
  %146 = icmp slt i32 %145, 0, !dbg !1473
  br i1 %146, label %147, label %150, !dbg !1474

; <label>:147:                                    ; preds = %142
  %148 = load i32, i32* %21, align 4, !dbg !1475
  %149 = load i8*, i8** %22, align 8, !dbg !1477
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %148, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.4.57, i32 0, i32 0), i8* %149), !dbg !1478
  store i32 4, i32* %7, align 4, !dbg !1479
  br label %208, !dbg !1479

; <label>:150:                                    ; preds = %142
  call void @llvm.dbg.declare(metadata i8* %23, metadata !1480, metadata !DIExpression()), !dbg !1481
  %151 = load i32*, i32** %13, align 8, !dbg !1482
  %152 = icmp ne i32* %151, null, !dbg !1482
  br i1 %152, label %153, label %163, !dbg !1484

; <label>:153:                                    ; preds = %150
  %154 = load i32, i32* %14, align 4, !dbg !1485
  %155 = load i8*, i8** %16, align 8, !dbg !1487
  %156 = call zeroext i1 @is_empty_dir(i32 %154, i8* %155), !dbg !1488
  %157 = zext i1 %156 to i8, !dbg !1489
  store i8 %157, i8* %23, align 1, !dbg !1489
  %158 = load i8, i8* %23, align 1, !dbg !1490
  %159 = trunc i8 %158 to i1, !dbg !1490
  %160 = zext i1 %159 to i64, !dbg !1490
  %161 = select i1 %159, i32 4, i32 3, !dbg !1490
  %162 = load i32*, i32** %13, align 8, !dbg !1491
  store i32 %161, i32* %162, align 4, !dbg !1492
  br label %164, !dbg !1493

; <label>:163:                                    ; preds = %150
  store i8 0, i8* %23, align 1, !dbg !1494
  br label %164

; <label>:164:                                    ; preds = %163, %153
  %165 = load i32, i32* %19, align 4, !dbg !1495
  %166 = icmp eq i32 %165, 4, !dbg !1497
  br i1 %166, label %167, label %182, !dbg !1498

; <label>:167:                                    ; preds = %164
  %168 = load i32, i32* %12, align 4, !dbg !1499
  %169 = icmp eq i32 %168, 2, !dbg !1500
  br i1 %169, label %170, label %182, !dbg !1501

; <label>:170:                                    ; preds = %167
  %171 = load i8, i8* %23, align 1, !dbg !1502
  %172 = trunc i8 %171 to i1, !dbg !1502
  br i1 %172, label %182, label %173, !dbg !1503

; <label>:173:                                    ; preds = %170
  %174 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !1504
  %175 = load i32, i32* %20, align 4, !dbg !1505
  %176 = icmp ne i32 %175, 0, !dbg !1505
  %177 = zext i1 %176 to i64, !dbg !1505
  %178 = select i1 %176, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.15.70, i32 0, i32 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.16.71, i32 0, i32 0), !dbg !1505
  %179 = load i8*, i8** @program_name, align 8, !dbg !1506
  %180 = load i8*, i8** %22, align 8, !dbg !1507
  %181 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %174, i8* %178, i8* %179, i8* %180), !dbg !1508
  br label %203, !dbg !1508

; <label>:182:                                    ; preds = %170, %167, %164
  %183 = load i32, i32* %14, align 4, !dbg !1509
  %184 = load i8*, i8** %16, align 8, !dbg !1512
  %185 = load %struct.stat*, %struct.stat** %18, align 8, !dbg !1513
  %186 = call i32 @cache_fstatat(i32 %183, i8* %184, %struct.stat* %185, i32 256), !dbg !1514
  %187 = icmp ne i32 %186, 0, !dbg !1515
  br i1 %187, label %188, label %192, !dbg !1516

; <label>:188:                                    ; preds = %182
  %189 = call i32* @__errno_location() #14, !dbg !1517
  %190 = load i32, i32* %189, align 4, !dbg !1517
  %191 = load i8*, i8** %22, align 8, !dbg !1519
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %190, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.4.57, i32 0, i32 0), i8* %191), !dbg !1520
  store i32 4, i32* %7, align 4, !dbg !1521
  br label %208, !dbg !1521

; <label>:192:                                    ; preds = %182
  %193 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !1522
  %194 = load i32, i32* %20, align 4, !dbg !1523
  %195 = icmp ne i32 %194, 0, !dbg !1523
  %196 = zext i1 %195 to i64, !dbg !1523
  %197 = select i1 %195, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.17.72, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.18.73, i32 0, i32 0), !dbg !1523
  %198 = load i8*, i8** @program_name, align 8, !dbg !1524
  %199 = load %struct.stat*, %struct.stat** %18, align 8, !dbg !1525
  %200 = call i8* @file_type(%struct.stat* %199), !dbg !1526
  %201 = load i8*, i8** %22, align 8, !dbg !1527
  %202 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %193, i8* %197, i8* %198, i8* %200, i8* %201), !dbg !1528
  br label %203

; <label>:203:                                    ; preds = %192, %173
  %204 = call zeroext i1 @yesno(), !dbg !1529
  br i1 %204, label %206, label %205, !dbg !1531

; <label>:205:                                    ; preds = %203
  store i32 3, i32* %7, align 4, !dbg !1532
  br label %208, !dbg !1532

; <label>:206:                                    ; preds = %203
  br label %207, !dbg !1533

; <label>:207:                                    ; preds = %206, %85
  store i32 2, i32* %7, align 4, !dbg !1534
  br label %208, !dbg !1534

; <label>:208:                                    ; preds = %207, %205, %188, %147, %132, %55, %49
  %209 = load i32, i32* %7, align 4, !dbg !1535
  ret i32 %209, !dbg !1535
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @excise(%struct.FTS*, %struct._ftsent*, %struct.rm_options*, i1 zeroext) #3 !dbg !1536 {
  %5 = alloca i32, align 4
  %6 = alloca %struct.FTS*, align 8
  %7 = alloca %struct._ftsent*, align 8
  %8 = alloca %struct.rm_options*, align 8
  %9 = alloca i8, align 1
  %10 = alloca i32, align 4
  %11 = alloca %struct.stat, align 8
  store %struct.FTS* %0, %struct.FTS** %6, align 8
  call void @llvm.dbg.declare(metadata %struct.FTS** %6, metadata !1539, metadata !DIExpression()), !dbg !1540
  store %struct._ftsent* %1, %struct._ftsent** %7, align 8
  call void @llvm.dbg.declare(metadata %struct._ftsent** %7, metadata !1541, metadata !DIExpression()), !dbg !1542
  store %struct.rm_options* %2, %struct.rm_options** %8, align 8
  call void @llvm.dbg.declare(metadata %struct.rm_options** %8, metadata !1543, metadata !DIExpression()), !dbg !1544
  %12 = zext i1 %3 to i8
  store i8 %12, i8* %9, align 1
  call void @llvm.dbg.declare(metadata i8* %9, metadata !1545, metadata !DIExpression()), !dbg !1546
  call void @llvm.dbg.declare(metadata i32* %10, metadata !1547, metadata !DIExpression()), !dbg !1548
  %13 = load i8, i8* %9, align 1, !dbg !1549
  %14 = trunc i8 %13 to i1, !dbg !1549
  %15 = zext i1 %14 to i64, !dbg !1549
  %16 = select i1 %14, i32 512, i32 0, !dbg !1549
  store i32 %16, i32* %10, align 4, !dbg !1548
  %17 = load %struct.FTS*, %struct.FTS** %6, align 8, !dbg !1550
  %18 = getelementptr inbounds %struct.FTS, %struct.FTS* %17, i32 0, i32 6, !dbg !1552
  %19 = load i32, i32* %18, align 4, !dbg !1552
  %20 = load %struct._ftsent*, %struct._ftsent** %7, align 8, !dbg !1553
  %21 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %20, i32 0, i32 5, !dbg !1554
  %22 = load i8*, i8** %21, align 8, !dbg !1554
  %23 = load i32, i32* %10, align 4, !dbg !1555
  %24 = call i32 @unlinkat(i32 %19, i8* %22, i32 %23) #8, !dbg !1556
  %25 = icmp eq i32 %24, 0, !dbg !1557
  br i1 %25, label %26, label %42, !dbg !1558

; <label>:26:                                     ; preds = %4
  %27 = load %struct.rm_options*, %struct.rm_options** %8, align 8, !dbg !1559
  %28 = getelementptr inbounds %struct.rm_options, %struct.rm_options* %27, i32 0, i32 6, !dbg !1562
  %29 = load i8, i8* %28, align 1, !dbg !1562
  %30 = trunc i8 %29 to i1, !dbg !1562
  br i1 %30, label %31, label %41, !dbg !1563

; <label>:31:                                     ; preds = %26
  %32 = load i8, i8* %9, align 1, !dbg !1564
  %33 = trunc i8 %32 to i1, !dbg !1564
  %34 = zext i1 %33 to i64, !dbg !1564
  %35 = select i1 %33, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.19.68, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.20.69, i32 0, i32 0), !dbg !1564
  %36 = load %struct._ftsent*, %struct._ftsent** %7, align 8, !dbg !1566
  %37 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %36, i32 0, i32 6, !dbg !1567
  %38 = load i8*, i8** %37, align 8, !dbg !1567
  %39 = call i8* @quote(i8* %38), !dbg !1568
  %40 = call i32 (i8*, ...) @printf(i8* %35, i8* %39), !dbg !1569
  br label %41, !dbg !1570

; <label>:41:                                     ; preds = %31, %26
  store i32 2, i32* %5, align 4, !dbg !1571
  br label %87, !dbg !1571

; <label>:42:                                     ; preds = %4
  %43 = call i32* @__errno_location() #14, !dbg !1572
  %44 = load i32, i32* %43, align 4, !dbg !1572
  %45 = icmp eq i32 %44, 30, !dbg !1574
  br i1 %45, label %46, label %62, !dbg !1575

; <label>:46:                                     ; preds = %42
  call void @llvm.dbg.declare(metadata %struct.stat* %11, metadata !1576, metadata !DIExpression()), !dbg !1578
  %47 = load %struct.FTS*, %struct.FTS** %6, align 8, !dbg !1579
  %48 = getelementptr inbounds %struct.FTS, %struct.FTS* %47, i32 0, i32 6, !dbg !1581
  %49 = load i32, i32* %48, align 4, !dbg !1581
  %50 = load %struct._ftsent*, %struct._ftsent** %7, align 8, !dbg !1582
  %51 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %50, i32 0, i32 5, !dbg !1583
  %52 = load i8*, i8** %51, align 8, !dbg !1583
  %53 = call i32 @lstatat(i32 %49, i8* %52, %struct.stat* %11), !dbg !1584
  %54 = icmp ne i32 %53, 0, !dbg !1584
  br i1 %54, label %55, label %59, !dbg !1585

; <label>:55:                                     ; preds = %46
  %56 = call i32* @__errno_location() #14, !dbg !1586
  %57 = load i32, i32* %56, align 4, !dbg !1586
  %58 = icmp eq i32 %57, 2, !dbg !1587
  br i1 %58, label %61, label %59, !dbg !1588

; <label>:59:                                     ; preds = %55, %46
  %60 = call i32* @__errno_location() #14, !dbg !1589
  store i32 30, i32* %60, align 4, !dbg !1590
  br label %61, !dbg !1589

; <label>:61:                                     ; preds = %59, %55
  br label %62, !dbg !1591

; <label>:62:                                     ; preds = %61, %42
  %63 = load %struct.rm_options*, %struct.rm_options** %8, align 8, !dbg !1592
  %64 = call i32* @__errno_location() #14, !dbg !1594
  %65 = load i32, i32* %64, align 4, !dbg !1594
  %66 = call zeroext i1 @ignorable_missing(%struct.rm_options* %63, i32 %65), !dbg !1595
  br i1 %66, label %67, label %68, !dbg !1596

; <label>:67:                                     ; preds = %62
  store i32 2, i32* %5, align 4, !dbg !1597
  br label %87, !dbg !1597

; <label>:68:                                     ; preds = %62
  %69 = load %struct._ftsent*, %struct._ftsent** %7, align 8, !dbg !1598
  %70 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %69, i32 0, i32 14, !dbg !1600
  %71 = load i16, i16* %70, align 8, !dbg !1600
  %72 = zext i16 %71 to i32, !dbg !1598
  %73 = icmp eq i32 %72, 4, !dbg !1601
  br i1 %73, label %74, label %79, !dbg !1602

; <label>:74:                                     ; preds = %68
  %75 = load %struct._ftsent*, %struct._ftsent** %7, align 8, !dbg !1603
  %76 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %75, i32 0, i32 7, !dbg !1604
  %77 = load i32, i32* %76, align 8, !dbg !1604
  %78 = call i32* @__errno_location() #14, !dbg !1605
  store i32 %77, i32* %78, align 4, !dbg !1606
  br label %79, !dbg !1605

; <label>:79:                                     ; preds = %74, %68
  %80 = call i32* @__errno_location() #14, !dbg !1607
  %81 = load i32, i32* %80, align 4, !dbg !1607
  %82 = load %struct._ftsent*, %struct._ftsent** %7, align 8, !dbg !1608
  %83 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %82, i32 0, i32 6, !dbg !1609
  %84 = load i8*, i8** %83, align 8, !dbg !1609
  %85 = call i8* @quote(i8* %84), !dbg !1610
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %81, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.4.57, i32 0, i32 0), i8* %85), !dbg !1611
  %86 = load %struct._ftsent*, %struct._ftsent** %7, align 8, !dbg !1612
  call void @mark_ancestor_dirs(%struct._ftsent* %86), !dbg !1613
  store i32 4, i32* %5, align 4, !dbg !1614
  br label %87, !dbg !1614

; <label>:87:                                     ; preds = %79, %67, %41
  %88 = load i32, i32* %5, align 4, !dbg !1615
  ret i32 %88, !dbg !1615
}

; Function Attrs: noreturn nounwind
declare void @abort() #4

; Function Attrs: nounwind
declare i32 @unlinkat(i32, i8*, i32) #5

; Function Attrs: noinline nounwind uwtable
define internal i32 @lstatat(i32, i8*, %struct.stat*) #3 !dbg !1616 {
  %4 = alloca i32, align 4
  %5 = alloca i8*, align 8
  %6 = alloca %struct.stat*, align 8
  store i32 %0, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !1620, metadata !DIExpression()), !dbg !1621
  store i8* %1, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !1622, metadata !DIExpression()), !dbg !1623
  store %struct.stat* %2, %struct.stat** %6, align 8
  call void @llvm.dbg.declare(metadata %struct.stat** %6, metadata !1624, metadata !DIExpression()), !dbg !1625
  %7 = load i32, i32* %4, align 4, !dbg !1626
  %8 = load i8*, i8** %5, align 8, !dbg !1627
  %9 = load %struct.stat*, %struct.stat** %6, align 8, !dbg !1628
  %10 = call i32 @fstatat(i32 %7, i8* %8, %struct.stat* %9, i32 256) #8, !dbg !1629
  ret i32 %10, !dbg !1630
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i1 @ignorable_missing(%struct.rm_options*, i32) #3 !dbg !1631 {
  %3 = alloca %struct.rm_options*, align 8
  %4 = alloca i32, align 4
  store %struct.rm_options* %0, %struct.rm_options** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.rm_options** %3, metadata !1634, metadata !DIExpression()), !dbg !1635
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !1636, metadata !DIExpression()), !dbg !1637
  %5 = load %struct.rm_options*, %struct.rm_options** %3, align 8, !dbg !1638
  %6 = getelementptr inbounds %struct.rm_options, %struct.rm_options* %5, i32 0, i32 0, !dbg !1639
  %7 = load i8, i8* %6, align 8, !dbg !1639
  %8 = trunc i8 %7 to i1, !dbg !1639
  br i1 %8, label %9, label %12, !dbg !1640

; <label>:9:                                      ; preds = %2
  %10 = load i32, i32* %4, align 4, !dbg !1641
  %11 = call zeroext i1 @nonexistent_file_errno(i32 %10), !dbg !1642
  br label %12

; <label>:12:                                     ; preds = %9, %2
  %13 = phi i1 [ false, %2 ], [ %11, %9 ]
  ret i1 %13, !dbg !1643
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i1 @nonexistent_file_errno(i32) #3 !dbg !1644 {
  %2 = alloca i1, align 1
  %3 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !1647, metadata !DIExpression()), !dbg !1648
  %4 = load i32, i32* %3, align 4, !dbg !1649
  switch i32 %4, label %6 [
    i32 2, label %5
    i32 20, label %5
  ], !dbg !1650

; <label>:5:                                      ; preds = %1, %1
  store i1 true, i1* %2, align 1, !dbg !1651
  br label %7, !dbg !1651

; <label>:6:                                      ; preds = %1
  store i1 false, i1* %2, align 1, !dbg !1653
  br label %7, !dbg !1653

; <label>:7:                                      ; preds = %6, %5
  %8 = load i1, i1* %2, align 1, !dbg !1654
  ret i1 %8, !dbg !1654
}

; Function Attrs: nounwind
declare i32 @fstatat(i32, i8*, %struct.stat*, i32) #5

; Function Attrs: noinline nounwind uwtable
define internal %struct.stat* @cache_stat_init(%struct.stat*) #3 !dbg !1655 {
  %2 = alloca %struct.stat*, align 8
  store %struct.stat* %0, %struct.stat** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.stat** %2, metadata !1658, metadata !DIExpression()), !dbg !1659
  %3 = load %struct.stat*, %struct.stat** %2, align 8, !dbg !1660
  %4 = getelementptr inbounds %struct.stat, %struct.stat* %3, i32 0, i32 8, !dbg !1661
  store i64 -1, i64* %4, align 8, !dbg !1662
  %5 = load %struct.stat*, %struct.stat** %2, align 8, !dbg !1663
  ret %struct.stat* %5, !dbg !1664
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @write_protected_non_symlink(i32, i8*, i8*, %struct.stat*) #3 !dbg !1665 {
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i8*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca %struct.stat*, align 8
  %10 = alloca i64, align 8
  store i32 %0, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !1668, metadata !DIExpression()), !dbg !1669
  store i8* %1, i8** %7, align 8
  call void @llvm.dbg.declare(metadata i8** %7, metadata !1670, metadata !DIExpression()), !dbg !1671
  store i8* %2, i8** %8, align 8
  call void @llvm.dbg.declare(metadata i8** %8, metadata !1672, metadata !DIExpression()), !dbg !1673
  store %struct.stat* %3, %struct.stat** %9, align 8
  call void @llvm.dbg.declare(metadata %struct.stat** %9, metadata !1674, metadata !DIExpression()), !dbg !1675
  %11 = call zeroext i1 @can_write_any_file(), !dbg !1676
  br i1 %11, label %12, label %13, !dbg !1678

; <label>:12:                                     ; preds = %4
  store i32 0, i32* %5, align 4, !dbg !1679
  br label %55, !dbg !1679

; <label>:13:                                     ; preds = %4
  %14 = load i32, i32* %6, align 4, !dbg !1680
  %15 = load i8*, i8** %7, align 8, !dbg !1682
  %16 = load %struct.stat*, %struct.stat** %9, align 8, !dbg !1683
  %17 = call i32 @cache_fstatat(i32 %14, i8* %15, %struct.stat* %16, i32 256), !dbg !1684
  %18 = icmp ne i32 %17, 0, !dbg !1685
  br i1 %18, label %19, label %20, !dbg !1686

; <label>:19:                                     ; preds = %13
  store i32 -1, i32* %5, align 4, !dbg !1687
  br label %55, !dbg !1687

; <label>:20:                                     ; preds = %13
  %21 = load %struct.stat*, %struct.stat** %9, align 8, !dbg !1688
  %22 = getelementptr inbounds %struct.stat, %struct.stat* %21, i32 0, i32 3, !dbg !1688
  %23 = load i32, i32* %22, align 8, !dbg !1688
  %24 = and i32 %23, 61440, !dbg !1688
  %25 = icmp eq i32 %24, 40960, !dbg !1688
  br i1 %25, label %26, label %27, !dbg !1690

; <label>:26:                                     ; preds = %20
  store i32 0, i32* %5, align 4, !dbg !1691
  br label %55, !dbg !1691

; <label>:27:                                     ; preds = %20
  %28 = load i32, i32* %6, align 4, !dbg !1692
  %29 = load i8*, i8** %7, align 8, !dbg !1695
  %30 = call i32 @faccessat(i32 %28, i8* %29, i32 2, i32 512) #8, !dbg !1696
  %31 = icmp eq i32 %30, 0, !dbg !1697
  br i1 %31, label %32, label %33, !dbg !1698

; <label>:32:                                     ; preds = %27
  store i32 0, i32* %5, align 4, !dbg !1699
  br label %55, !dbg !1699

; <label>:33:                                     ; preds = %27
  call void @llvm.dbg.declare(metadata i64* %10, metadata !1700, metadata !DIExpression()), !dbg !1701
  %34 = load i8*, i8** %8, align 8, !dbg !1702
  %35 = call i64 @strlen(i8* %34) #12, !dbg !1703
  store i64 %35, i64* %10, align 8, !dbg !1701
  %36 = load i64, i64* %10, align 8, !dbg !1704
  %37 = icmp ule i64 4096, %36, !dbg !1706
  br i1 %37, label %38, label %43, !dbg !1707

; <label>:38:                                     ; preds = %33
  %39 = load %struct.stat*, %struct.stat** %9, align 8, !dbg !1708
  %40 = call zeroext i1 @euidaccess_stat(%struct.stat* %39, i32 2), !dbg !1709
  %41 = xor i1 %40, true, !dbg !1710
  %42 = zext i1 %41 to i32, !dbg !1710
  store i32 %42, i32* %5, align 4, !dbg !1711
  br label %55, !dbg !1711

; <label>:43:                                     ; preds = %33
  %44 = load i8*, i8** %8, align 8, !dbg !1712
  %45 = call i32 @euidaccess(i8* %44, i32 2) #8, !dbg !1714
  %46 = icmp eq i32 %45, 0, !dbg !1715
  br i1 %46, label %47, label %48, !dbg !1716

; <label>:47:                                     ; preds = %43
  store i32 0, i32* %5, align 4, !dbg !1717
  br label %55, !dbg !1717

; <label>:48:                                     ; preds = %43
  %49 = call i32* @__errno_location() #14, !dbg !1718
  %50 = load i32, i32* %49, align 4, !dbg !1718
  %51 = icmp eq i32 %50, 13, !dbg !1720
  br i1 %51, label %52, label %54, !dbg !1721

; <label>:52:                                     ; preds = %48
  %53 = call i32* @__errno_location() #14, !dbg !1722
  store i32 0, i32* %53, align 4, !dbg !1724
  store i32 1, i32* %5, align 4, !dbg !1725
  br label %55, !dbg !1725

; <label>:54:                                     ; preds = %48
  store i32 -1, i32* %5, align 4, !dbg !1726
  br label %55, !dbg !1726

; <label>:55:                                     ; preds = %54, %52, %47, %38, %32, %26, %19, %12
  %56 = load i32, i32* %5, align 4, !dbg !1727
  ret i32 %56, !dbg !1727
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @cache_fstatat(i32, i8*, %struct.stat*, i32) #3 !dbg !1728 {
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i8*, align 8
  %8 = alloca %struct.stat*, align 8
  %9 = alloca i32, align 4
  store i32 %0, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !1731, metadata !DIExpression()), !dbg !1732
  store i8* %1, i8** %7, align 8
  call void @llvm.dbg.declare(metadata i8** %7, metadata !1733, metadata !DIExpression()), !dbg !1734
  store %struct.stat* %2, %struct.stat** %8, align 8
  call void @llvm.dbg.declare(metadata %struct.stat** %8, metadata !1735, metadata !DIExpression()), !dbg !1736
  store i32 %3, i32* %9, align 4
  call void @llvm.dbg.declare(metadata i32* %9, metadata !1737, metadata !DIExpression()), !dbg !1738
  %10 = load %struct.stat*, %struct.stat** %8, align 8, !dbg !1739
  %11 = getelementptr inbounds %struct.stat, %struct.stat* %10, i32 0, i32 8, !dbg !1741
  %12 = load i64, i64* %11, align 8, !dbg !1741
  %13 = icmp eq i64 %12, -1, !dbg !1742
  br i1 %13, label %14, label %29, !dbg !1743

; <label>:14:                                     ; preds = %4
  %15 = load i32, i32* %6, align 4, !dbg !1744
  %16 = load i8*, i8** %7, align 8, !dbg !1745
  %17 = load %struct.stat*, %struct.stat** %8, align 8, !dbg !1746
  %18 = load i32, i32* %9, align 4, !dbg !1747
  %19 = call i32 @fstatat(i32 %15, i8* %16, %struct.stat* %17, i32 %18) #8, !dbg !1748
  %20 = icmp ne i32 %19, 0, !dbg !1749
  br i1 %20, label %21, label %29, !dbg !1750

; <label>:21:                                     ; preds = %14
  %22 = load %struct.stat*, %struct.stat** %8, align 8, !dbg !1751
  %23 = getelementptr inbounds %struct.stat, %struct.stat* %22, i32 0, i32 8, !dbg !1753
  store i64 -2, i64* %23, align 8, !dbg !1754
  %24 = call i32* @__errno_location() #14, !dbg !1755
  %25 = load i32, i32* %24, align 4, !dbg !1755
  %26 = sext i32 %25 to i64, !dbg !1755
  %27 = load %struct.stat*, %struct.stat** %8, align 8, !dbg !1756
  %28 = getelementptr inbounds %struct.stat, %struct.stat* %27, i32 0, i32 1, !dbg !1757
  store i64 %26, i64* %28, align 8, !dbg !1758
  br label %29, !dbg !1759

; <label>:29:                                     ; preds = %21, %14, %4
  %30 = load %struct.stat*, %struct.stat** %8, align 8, !dbg !1760
  %31 = getelementptr inbounds %struct.stat, %struct.stat* %30, i32 0, i32 8, !dbg !1762
  %32 = load i64, i64* %31, align 8, !dbg !1762
  %33 = icmp sle i64 0, %32, !dbg !1763
  br i1 %33, label %34, label %35, !dbg !1764

; <label>:34:                                     ; preds = %29
  store i32 0, i32* %5, align 4, !dbg !1765
  br label %41, !dbg !1765

; <label>:35:                                     ; preds = %29
  %36 = load %struct.stat*, %struct.stat** %8, align 8, !dbg !1766
  %37 = getelementptr inbounds %struct.stat, %struct.stat* %36, i32 0, i32 1, !dbg !1767
  %38 = load i64, i64* %37, align 8, !dbg !1767
  %39 = trunc i64 %38 to i32, !dbg !1768
  %40 = call i32* @__errno_location() #14, !dbg !1769
  store i32 %39, i32* %40, align 4, !dbg !1770
  store i32 -1, i32* %5, align 4, !dbg !1771
  br label %41, !dbg !1771

; <label>:41:                                     ; preds = %35, %34
  %42 = load i32, i32* %5, align 4, !dbg !1772
  ret i32 %42, !dbg !1772
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i1 @is_empty_dir(i32, i8*) #3 !dbg !1773 {
  %3 = alloca i1, align 1
  %4 = alloca i32, align 4
  %5 = alloca i8*, align 8
  %6 = alloca %struct.__dirstream*, align 8
  %7 = alloca %struct.dirent*, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  store i32 %0, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !1776, metadata !DIExpression()), !dbg !1777
  store i8* %1, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !1778, metadata !DIExpression()), !dbg !1779
  call void @llvm.dbg.declare(metadata %struct.__dirstream** %6, metadata !1780, metadata !DIExpression()), !dbg !1784
  call void @llvm.dbg.declare(metadata %struct.dirent** %7, metadata !1785, metadata !DIExpression()), !dbg !1797
  call void @llvm.dbg.declare(metadata i32* %8, metadata !1798, metadata !DIExpression()), !dbg !1799
  call void @llvm.dbg.declare(metadata i32* %9, metadata !1800, metadata !DIExpression()), !dbg !1801
  %10 = load i32, i32* %4, align 4, !dbg !1802
  %11 = load i8*, i8** %5, align 8, !dbg !1803
  %12 = call i32 (i32, i8*, i32, ...) @openat(i32 %10, i8* %11, i32 198912), !dbg !1804
  store i32 %12, i32* %9, align 4, !dbg !1801
  %13 = load i32, i32* %9, align 4, !dbg !1805
  %14 = icmp slt i32 %13, 0, !dbg !1807
  br i1 %14, label %15, label %16, !dbg !1808

; <label>:15:                                     ; preds = %2
  store i1 false, i1* %3, align 1, !dbg !1809
  br label %41, !dbg !1809

; <label>:16:                                     ; preds = %2
  %17 = load i32, i32* %9, align 4, !dbg !1810
  %18 = call %struct.__dirstream* @fdopendir(i32 %17), !dbg !1811
  store %struct.__dirstream* %18, %struct.__dirstream** %6, align 8, !dbg !1812
  %19 = load %struct.__dirstream*, %struct.__dirstream** %6, align 8, !dbg !1813
  %20 = icmp eq %struct.__dirstream* %19, null, !dbg !1815
  br i1 %20, label %21, label %24, !dbg !1816

; <label>:21:                                     ; preds = %16
  %22 = load i32, i32* %9, align 4, !dbg !1817
  %23 = call i32 @close(i32 %22), !dbg !1819
  store i1 false, i1* %3, align 1, !dbg !1820
  br label %41, !dbg !1820

; <label>:24:                                     ; preds = %16
  %25 = call i32* @__errno_location() #14, !dbg !1821
  store i32 0, i32* %25, align 4, !dbg !1822
  %26 = load %struct.__dirstream*, %struct.__dirstream** %6, align 8, !dbg !1823
  %27 = call %struct.dirent* @readdir_ignoring_dot_and_dotdot(%struct.__dirstream* %26), !dbg !1824
  store %struct.dirent* %27, %struct.dirent** %7, align 8, !dbg !1825
  %28 = call i32* @__errno_location() #14, !dbg !1826
  %29 = load i32, i32* %28, align 4, !dbg !1826
  store i32 %29, i32* %8, align 4, !dbg !1827
  %30 = load %struct.__dirstream*, %struct.__dirstream** %6, align 8, !dbg !1828
  %31 = call i32 @closedir(%struct.__dirstream* %30), !dbg !1829
  %32 = load %struct.dirent*, %struct.dirent** %7, align 8, !dbg !1830
  %33 = icmp ne %struct.dirent* %32, null, !dbg !1832
  br i1 %33, label %34, label %35, !dbg !1833

; <label>:34:                                     ; preds = %24
  store i1 false, i1* %3, align 1, !dbg !1834
  br label %41, !dbg !1834

; <label>:35:                                     ; preds = %24
  %36 = load i32, i32* %8, align 4, !dbg !1835
  %37 = icmp eq i32 %36, 0, !dbg !1836
  %38 = zext i1 %37 to i64, !dbg !1835
  %39 = select i1 %37, i32 1, i32 0, !dbg !1835
  %40 = icmp ne i32 %39, 0, !dbg !1835
  store i1 %40, i1* %3, align 1, !dbg !1837
  br label %41, !dbg !1837

; <label>:41:                                     ; preds = %35, %34, %21, %15
  %42 = load i1, i1* %3, align 1, !dbg !1838
  ret i1 %42, !dbg !1838
}

declare i32 @openat(i32, i8*, i32, ...) #2

declare %struct.__dirstream* @fdopendir(i32) #2

declare i32 @close(i32) #2

; Function Attrs: noinline nounwind uwtable
define internal %struct.dirent* @readdir_ignoring_dot_and_dotdot(%struct.__dirstream*) #3 !dbg !1839 {
  %2 = alloca %struct.__dirstream*, align 8
  %3 = alloca %struct.dirent*, align 8
  store %struct.__dirstream* %0, %struct.__dirstream** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.__dirstream** %2, metadata !1842, metadata !DIExpression()), !dbg !1843
  br label %4, !dbg !1844

; <label>:4:                                      ; preds = %1, %16
  call void @llvm.dbg.declare(metadata %struct.dirent** %3, metadata !1845, metadata !DIExpression()), !dbg !1847
  %5 = load %struct.__dirstream*, %struct.__dirstream** %2, align 8, !dbg !1848
  %6 = call %struct.dirent* @readdir(%struct.__dirstream* %5), !dbg !1849
  store %struct.dirent* %6, %struct.dirent** %3, align 8, !dbg !1847
  %7 = load %struct.dirent*, %struct.dirent** %3, align 8, !dbg !1850
  %8 = icmp eq %struct.dirent* %7, null, !dbg !1852
  br i1 %8, label %14, label %9, !dbg !1853

; <label>:9:                                      ; preds = %4
  %10 = load %struct.dirent*, %struct.dirent** %3, align 8, !dbg !1854
  %11 = getelementptr inbounds %struct.dirent, %struct.dirent* %10, i32 0, i32 4, !dbg !1855
  %12 = getelementptr inbounds [256 x i8], [256 x i8]* %11, i32 0, i32 0, !dbg !1854
  %13 = call zeroext i1 @dot_or_dotdot(i8* %12), !dbg !1856
  br i1 %13, label %16, label %14, !dbg !1857

; <label>:14:                                     ; preds = %9, %4
  %15 = load %struct.dirent*, %struct.dirent** %3, align 8, !dbg !1858
  ret %struct.dirent* %15, !dbg !1859

; <label>:16:                                     ; preds = %9
  br label %4, !dbg !1844, !llvm.loop !1860
}

declare i32 @closedir(%struct.__dirstream*) #2

declare %struct.dirent* @readdir(%struct.__dirstream*) #2

; Function Attrs: nounwind
declare i32 @faccessat(i32, i8*, i32, i32) #5

; Function Attrs: nounwind
declare i32 @euidaccess(i8*, i32) #5

; Function Attrs: noinline nounwind uwtable
define void @set_program_name(i8*) #3 !dbg !1862 {
  %2 = alloca i8*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  store i8* %0, i8** %2, align 8
  call void @llvm.dbg.declare(metadata i8** %2, metadata !1865, metadata !DIExpression()), !dbg !1866
  call void @llvm.dbg.declare(metadata i8** %3, metadata !1867, metadata !DIExpression()), !dbg !1868
  call void @llvm.dbg.declare(metadata i8** %4, metadata !1869, metadata !DIExpression()), !dbg !1870
  %5 = load i8*, i8** %2, align 8, !dbg !1871
  %6 = icmp eq i8* %5, null, !dbg !1873
  br i1 %6, label %7, label %10, !dbg !1874

; <label>:7:                                      ; preds = %1
  %8 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !1875
  %9 = call i32 @fputs(i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.81, i32 0, i32 0), %struct._IO_FILE* %8), !dbg !1877
  call void @abort() #11, !dbg !1878
  unreachable, !dbg !1878

; <label>:10:                                     ; preds = %1
  %11 = load i8*, i8** %2, align 8, !dbg !1879
  %12 = call i8* @strrchr(i8* %11, i32 47) #12, !dbg !1880
  store i8* %12, i8** %3, align 8, !dbg !1881
  %13 = load i8*, i8** %3, align 8, !dbg !1882
  %14 = icmp ne i8* %13, null, !dbg !1883
  br i1 %14, label %15, label %18, !dbg !1882

; <label>:15:                                     ; preds = %10
  %16 = load i8*, i8** %3, align 8, !dbg !1884
  %17 = getelementptr inbounds i8, i8* %16, i64 1, !dbg !1885
  br label %20, !dbg !1882

; <label>:18:                                     ; preds = %10
  %19 = load i8*, i8** %2, align 8, !dbg !1886
  br label %20, !dbg !1882

; <label>:20:                                     ; preds = %18, %15
  %21 = phi i8* [ %17, %15 ], [ %19, %18 ], !dbg !1882
  store i8* %21, i8** %4, align 8, !dbg !1887
  %22 = load i8*, i8** %4, align 8, !dbg !1888
  %23 = load i8*, i8** %2, align 8, !dbg !1890
  %24 = ptrtoint i8* %22 to i64, !dbg !1891
  %25 = ptrtoint i8* %23 to i64, !dbg !1891
  %26 = sub i64 %24, %25, !dbg !1891
  %27 = icmp sge i64 %26, 7, !dbg !1892
  br i1 %27, label %28, label %43, !dbg !1893

; <label>:28:                                     ; preds = %20
  %29 = load i8*, i8** %4, align 8, !dbg !1894
  %30 = getelementptr inbounds i8, i8* %29, i64 -7, !dbg !1895
  %31 = call i32 @strncmp(i8* %30, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.82, i32 0, i32 0), i64 7) #12, !dbg !1896
  %32 = icmp eq i32 %31, 0, !dbg !1897
  br i1 %32, label %33, label %43, !dbg !1898

; <label>:33:                                     ; preds = %28
  %34 = load i8*, i8** %4, align 8, !dbg !1899
  store i8* %34, i8** %2, align 8, !dbg !1901
  %35 = load i8*, i8** %4, align 8, !dbg !1902
  %36 = call i32 @strncmp(i8* %35, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2.83, i32 0, i32 0), i64 3) #12, !dbg !1904
  %37 = icmp eq i32 %36, 0, !dbg !1905
  br i1 %37, label %38, label %42, !dbg !1906

; <label>:38:                                     ; preds = %33
  %39 = load i8*, i8** %4, align 8, !dbg !1907
  %40 = getelementptr inbounds i8, i8* %39, i64 3, !dbg !1909
  store i8* %40, i8** %2, align 8, !dbg !1910
  %41 = load i8*, i8** %2, align 8, !dbg !1911
  store i8* %41, i8** @program_invocation_short_name, align 8, !dbg !1912
  br label %42, !dbg !1913

; <label>:42:                                     ; preds = %38, %33
  br label %43, !dbg !1914

; <label>:43:                                     ; preds = %42, %28, %20
  %44 = load i8*, i8** %2, align 8, !dbg !1915
  store i8* %44, i8** @program_name, align 8, !dbg !1916
  %45 = load i8*, i8** %2, align 8, !dbg !1917
  store i8* %45, i8** @program_invocation_name, align 8, !dbg !1918
  ret void, !dbg !1919
}

declare i32 @fputs(i8*, %struct._IO_FILE*) #2

; Function Attrs: nounwind readonly
declare i8* @strrchr(i8*, i32) #6

; Function Attrs: noinline nounwind uwtable
define void @version_etc_arn(%struct._IO_FILE*, i8*, i8*, i8*, i8**, i64) #3 !dbg !1920 {
  %7 = alloca %struct._IO_FILE*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i8*, align 8
  %10 = alloca i8*, align 8
  %11 = alloca i8**, align 8
  %12 = alloca i64, align 8
  store %struct._IO_FILE* %0, %struct._IO_FILE** %7, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %7, metadata !1973, metadata !DIExpression()), !dbg !1974
  store i8* %1, i8** %8, align 8
  call void @llvm.dbg.declare(metadata i8** %8, metadata !1975, metadata !DIExpression()), !dbg !1976
  store i8* %2, i8** %9, align 8
  call void @llvm.dbg.declare(metadata i8** %9, metadata !1977, metadata !DIExpression()), !dbg !1978
  store i8* %3, i8** %10, align 8
  call void @llvm.dbg.declare(metadata i8** %10, metadata !1979, metadata !DIExpression()), !dbg !1980
  store i8** %4, i8*** %11, align 8
  call void @llvm.dbg.declare(metadata i8*** %11, metadata !1981, metadata !DIExpression()), !dbg !1982
  store i64 %5, i64* %12, align 8
  call void @llvm.dbg.declare(metadata i64* %12, metadata !1983, metadata !DIExpression()), !dbg !1984
  %13 = load i8*, i8** %8, align 8, !dbg !1985
  %14 = icmp ne i8* %13, null, !dbg !1985
  br i1 %14, label %15, label %21, !dbg !1987

; <label>:15:                                     ; preds = %6
  %16 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8, !dbg !1988
  %17 = load i8*, i8** %8, align 8, !dbg !1989
  %18 = load i8*, i8** %9, align 8, !dbg !1990
  %19 = load i8*, i8** %10, align 8, !dbg !1991
  %20 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %16, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.84, i32 0, i32 0), i8* %17, i8* %18, i8* %19), !dbg !1992
  br label %26, !dbg !1992

; <label>:21:                                     ; preds = %6
  %22 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8, !dbg !1993
  %23 = load i8*, i8** %9, align 8, !dbg !1994
  %24 = load i8*, i8** %10, align 8, !dbg !1995
  %25 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %22, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1.85, i32 0, i32 0), i8* %23, i8* %24), !dbg !1996
  br label %26

; <label>:26:                                     ; preds = %21, %15
  %27 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8, !dbg !1997
  %28 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %27, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @version_etc_copyright, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2.86, i32 0, i32 0), i32 2010), !dbg !1998
  %29 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8, !dbg !1999
  %30 = call i32 @fputs_unlocked(i8* getelementptr inbounds ([203 x i8], [203 x i8]* @.str.3.87, i32 0, i32 0), %struct._IO_FILE* %29), !dbg !1999
  %31 = load i64, i64* %12, align 8, !dbg !2000
  switch i64 %31, label %195 [
    i64 0, label %32
    i64 1, label %33
    i64 2, label %39
    i64 3, label %48
    i64 4, label %60
    i64 5, label %75
    i64 6, label %93
    i64 7, label %114
    i64 8, label %138
    i64 9, label %165
  ], !dbg !2001

; <label>:32:                                     ; preds = %26
  call void @abort() #11, !dbg !2002
  unreachable, !dbg !2002

; <label>:33:                                     ; preds = %26
  %34 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8, !dbg !2004
  %35 = load i8**, i8*** %11, align 8, !dbg !2005
  %36 = getelementptr inbounds i8*, i8** %35, i64 0, !dbg !2005
  %37 = load i8*, i8** %36, align 8, !dbg !2005
  %38 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %34, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.4.88, i32 0, i32 0), i8* %37), !dbg !2006
  br label %225, !dbg !2007

; <label>:39:                                     ; preds = %26
  %40 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8, !dbg !2008
  %41 = load i8**, i8*** %11, align 8, !dbg !2009
  %42 = getelementptr inbounds i8*, i8** %41, i64 0, !dbg !2009
  %43 = load i8*, i8** %42, align 8, !dbg !2009
  %44 = load i8**, i8*** %11, align 8, !dbg !2010
  %45 = getelementptr inbounds i8*, i8** %44, i64 1, !dbg !2010
  %46 = load i8*, i8** %45, align 8, !dbg !2010
  %47 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %40, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.5.89, i32 0, i32 0), i8* %43, i8* %46), !dbg !2011
  br label %225, !dbg !2012

; <label>:48:                                     ; preds = %26
  %49 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8, !dbg !2013
  %50 = load i8**, i8*** %11, align 8, !dbg !2014
  %51 = getelementptr inbounds i8*, i8** %50, i64 0, !dbg !2014
  %52 = load i8*, i8** %51, align 8, !dbg !2014
  %53 = load i8**, i8*** %11, align 8, !dbg !2015
  %54 = getelementptr inbounds i8*, i8** %53, i64 1, !dbg !2015
  %55 = load i8*, i8** %54, align 8, !dbg !2015
  %56 = load i8**, i8*** %11, align 8, !dbg !2016
  %57 = getelementptr inbounds i8*, i8** %56, i64 2, !dbg !2016
  %58 = load i8*, i8** %57, align 8, !dbg !2016
  %59 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %49, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.6.90, i32 0, i32 0), i8* %52, i8* %55, i8* %58), !dbg !2017
  br label %225, !dbg !2018

; <label>:60:                                     ; preds = %26
  %61 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8, !dbg !2019
  %62 = load i8**, i8*** %11, align 8, !dbg !2020
  %63 = getelementptr inbounds i8*, i8** %62, i64 0, !dbg !2020
  %64 = load i8*, i8** %63, align 8, !dbg !2020
  %65 = load i8**, i8*** %11, align 8, !dbg !2021
  %66 = getelementptr inbounds i8*, i8** %65, i64 1, !dbg !2021
  %67 = load i8*, i8** %66, align 8, !dbg !2021
  %68 = load i8**, i8*** %11, align 8, !dbg !2022
  %69 = getelementptr inbounds i8*, i8** %68, i64 2, !dbg !2022
  %70 = load i8*, i8** %69, align 8, !dbg !2022
  %71 = load i8**, i8*** %11, align 8, !dbg !2023
  %72 = getelementptr inbounds i8*, i8** %71, i64 3, !dbg !2023
  %73 = load i8*, i8** %72, align 8, !dbg !2023
  %74 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %61, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.7.91, i32 0, i32 0), i8* %64, i8* %67, i8* %70, i8* %73), !dbg !2024
  br label %225, !dbg !2025

; <label>:75:                                     ; preds = %26
  %76 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8, !dbg !2026
  %77 = load i8**, i8*** %11, align 8, !dbg !2027
  %78 = getelementptr inbounds i8*, i8** %77, i64 0, !dbg !2027
  %79 = load i8*, i8** %78, align 8, !dbg !2027
  %80 = load i8**, i8*** %11, align 8, !dbg !2028
  %81 = getelementptr inbounds i8*, i8** %80, i64 1, !dbg !2028
  %82 = load i8*, i8** %81, align 8, !dbg !2028
  %83 = load i8**, i8*** %11, align 8, !dbg !2029
  %84 = getelementptr inbounds i8*, i8** %83, i64 2, !dbg !2029
  %85 = load i8*, i8** %84, align 8, !dbg !2029
  %86 = load i8**, i8*** %11, align 8, !dbg !2030
  %87 = getelementptr inbounds i8*, i8** %86, i64 3, !dbg !2030
  %88 = load i8*, i8** %87, align 8, !dbg !2030
  %89 = load i8**, i8*** %11, align 8, !dbg !2031
  %90 = getelementptr inbounds i8*, i8** %89, i64 4, !dbg !2031
  %91 = load i8*, i8** %90, align 8, !dbg !2031
  %92 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %76, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.8.92, i32 0, i32 0), i8* %79, i8* %82, i8* %85, i8* %88, i8* %91), !dbg !2032
  br label %225, !dbg !2033

; <label>:93:                                     ; preds = %26
  %94 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8, !dbg !2034
  %95 = load i8**, i8*** %11, align 8, !dbg !2035
  %96 = getelementptr inbounds i8*, i8** %95, i64 0, !dbg !2035
  %97 = load i8*, i8** %96, align 8, !dbg !2035
  %98 = load i8**, i8*** %11, align 8, !dbg !2036
  %99 = getelementptr inbounds i8*, i8** %98, i64 1, !dbg !2036
  %100 = load i8*, i8** %99, align 8, !dbg !2036
  %101 = load i8**, i8*** %11, align 8, !dbg !2037
  %102 = getelementptr inbounds i8*, i8** %101, i64 2, !dbg !2037
  %103 = load i8*, i8** %102, align 8, !dbg !2037
  %104 = load i8**, i8*** %11, align 8, !dbg !2038
  %105 = getelementptr inbounds i8*, i8** %104, i64 3, !dbg !2038
  %106 = load i8*, i8** %105, align 8, !dbg !2038
  %107 = load i8**, i8*** %11, align 8, !dbg !2039
  %108 = getelementptr inbounds i8*, i8** %107, i64 4, !dbg !2039
  %109 = load i8*, i8** %108, align 8, !dbg !2039
  %110 = load i8**, i8*** %11, align 8, !dbg !2040
  %111 = getelementptr inbounds i8*, i8** %110, i64 5, !dbg !2040
  %112 = load i8*, i8** %111, align 8, !dbg !2040
  %113 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %94, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.9.93, i32 0, i32 0), i8* %97, i8* %100, i8* %103, i8* %106, i8* %109, i8* %112), !dbg !2041
  br label %225, !dbg !2042

; <label>:114:                                    ; preds = %26
  %115 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8, !dbg !2043
  %116 = load i8**, i8*** %11, align 8, !dbg !2044
  %117 = getelementptr inbounds i8*, i8** %116, i64 0, !dbg !2044
  %118 = load i8*, i8** %117, align 8, !dbg !2044
  %119 = load i8**, i8*** %11, align 8, !dbg !2045
  %120 = getelementptr inbounds i8*, i8** %119, i64 1, !dbg !2045
  %121 = load i8*, i8** %120, align 8, !dbg !2045
  %122 = load i8**, i8*** %11, align 8, !dbg !2046
  %123 = getelementptr inbounds i8*, i8** %122, i64 2, !dbg !2046
  %124 = load i8*, i8** %123, align 8, !dbg !2046
  %125 = load i8**, i8*** %11, align 8, !dbg !2047
  %126 = getelementptr inbounds i8*, i8** %125, i64 3, !dbg !2047
  %127 = load i8*, i8** %126, align 8, !dbg !2047
  %128 = load i8**, i8*** %11, align 8, !dbg !2048
  %129 = getelementptr inbounds i8*, i8** %128, i64 4, !dbg !2048
  %130 = load i8*, i8** %129, align 8, !dbg !2048
  %131 = load i8**, i8*** %11, align 8, !dbg !2049
  %132 = getelementptr inbounds i8*, i8** %131, i64 5, !dbg !2049
  %133 = load i8*, i8** %132, align 8, !dbg !2049
  %134 = load i8**, i8*** %11, align 8, !dbg !2050
  %135 = getelementptr inbounds i8*, i8** %134, i64 6, !dbg !2050
  %136 = load i8*, i8** %135, align 8, !dbg !2050
  %137 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %115, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.10.94, i32 0, i32 0), i8* %118, i8* %121, i8* %124, i8* %127, i8* %130, i8* %133, i8* %136), !dbg !2051
  br label %225, !dbg !2052

; <label>:138:                                    ; preds = %26
  %139 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8, !dbg !2053
  %140 = load i8**, i8*** %11, align 8, !dbg !2054
  %141 = getelementptr inbounds i8*, i8** %140, i64 0, !dbg !2054
  %142 = load i8*, i8** %141, align 8, !dbg !2054
  %143 = load i8**, i8*** %11, align 8, !dbg !2055
  %144 = getelementptr inbounds i8*, i8** %143, i64 1, !dbg !2055
  %145 = load i8*, i8** %144, align 8, !dbg !2055
  %146 = load i8**, i8*** %11, align 8, !dbg !2056
  %147 = getelementptr inbounds i8*, i8** %146, i64 2, !dbg !2056
  %148 = load i8*, i8** %147, align 8, !dbg !2056
  %149 = load i8**, i8*** %11, align 8, !dbg !2057
  %150 = getelementptr inbounds i8*, i8** %149, i64 3, !dbg !2057
  %151 = load i8*, i8** %150, align 8, !dbg !2057
  %152 = load i8**, i8*** %11, align 8, !dbg !2058
  %153 = getelementptr inbounds i8*, i8** %152, i64 4, !dbg !2058
  %154 = load i8*, i8** %153, align 8, !dbg !2058
  %155 = load i8**, i8*** %11, align 8, !dbg !2059
  %156 = getelementptr inbounds i8*, i8** %155, i64 5, !dbg !2059
  %157 = load i8*, i8** %156, align 8, !dbg !2059
  %158 = load i8**, i8*** %11, align 8, !dbg !2060
  %159 = getelementptr inbounds i8*, i8** %158, i64 6, !dbg !2060
  %160 = load i8*, i8** %159, align 8, !dbg !2060
  %161 = load i8**, i8*** %11, align 8, !dbg !2061
  %162 = getelementptr inbounds i8*, i8** %161, i64 7, !dbg !2061
  %163 = load i8*, i8** %162, align 8, !dbg !2061
  %164 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %139, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.11.95, i32 0, i32 0), i8* %142, i8* %145, i8* %148, i8* %151, i8* %154, i8* %157, i8* %160, i8* %163), !dbg !2062
  br label %225, !dbg !2063

; <label>:165:                                    ; preds = %26
  %166 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8, !dbg !2064
  %167 = load i8**, i8*** %11, align 8, !dbg !2065
  %168 = getelementptr inbounds i8*, i8** %167, i64 0, !dbg !2065
  %169 = load i8*, i8** %168, align 8, !dbg !2065
  %170 = load i8**, i8*** %11, align 8, !dbg !2066
  %171 = getelementptr inbounds i8*, i8** %170, i64 1, !dbg !2066
  %172 = load i8*, i8** %171, align 8, !dbg !2066
  %173 = load i8**, i8*** %11, align 8, !dbg !2067
  %174 = getelementptr inbounds i8*, i8** %173, i64 2, !dbg !2067
  %175 = load i8*, i8** %174, align 8, !dbg !2067
  %176 = load i8**, i8*** %11, align 8, !dbg !2068
  %177 = getelementptr inbounds i8*, i8** %176, i64 3, !dbg !2068
  %178 = load i8*, i8** %177, align 8, !dbg !2068
  %179 = load i8**, i8*** %11, align 8, !dbg !2069
  %180 = getelementptr inbounds i8*, i8** %179, i64 4, !dbg !2069
  %181 = load i8*, i8** %180, align 8, !dbg !2069
  %182 = load i8**, i8*** %11, align 8, !dbg !2070
  %183 = getelementptr inbounds i8*, i8** %182, i64 5, !dbg !2070
  %184 = load i8*, i8** %183, align 8, !dbg !2070
  %185 = load i8**, i8*** %11, align 8, !dbg !2071
  %186 = getelementptr inbounds i8*, i8** %185, i64 6, !dbg !2071
  %187 = load i8*, i8** %186, align 8, !dbg !2071
  %188 = load i8**, i8*** %11, align 8, !dbg !2072
  %189 = getelementptr inbounds i8*, i8** %188, i64 7, !dbg !2072
  %190 = load i8*, i8** %189, align 8, !dbg !2072
  %191 = load i8**, i8*** %11, align 8, !dbg !2073
  %192 = getelementptr inbounds i8*, i8** %191, i64 8, !dbg !2073
  %193 = load i8*, i8** %192, align 8, !dbg !2073
  %194 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %166, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.12.96, i32 0, i32 0), i8* %169, i8* %172, i8* %175, i8* %178, i8* %181, i8* %184, i8* %187, i8* %190, i8* %193), !dbg !2074
  br label %225, !dbg !2075

; <label>:195:                                    ; preds = %26
  %196 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8, !dbg !2076
  %197 = load i8**, i8*** %11, align 8, !dbg !2077
  %198 = getelementptr inbounds i8*, i8** %197, i64 0, !dbg !2077
  %199 = load i8*, i8** %198, align 8, !dbg !2077
  %200 = load i8**, i8*** %11, align 8, !dbg !2078
  %201 = getelementptr inbounds i8*, i8** %200, i64 1, !dbg !2078
  %202 = load i8*, i8** %201, align 8, !dbg !2078
  %203 = load i8**, i8*** %11, align 8, !dbg !2079
  %204 = getelementptr inbounds i8*, i8** %203, i64 2, !dbg !2079
  %205 = load i8*, i8** %204, align 8, !dbg !2079
  %206 = load i8**, i8*** %11, align 8, !dbg !2080
  %207 = getelementptr inbounds i8*, i8** %206, i64 3, !dbg !2080
  %208 = load i8*, i8** %207, align 8, !dbg !2080
  %209 = load i8**, i8*** %11, align 8, !dbg !2081
  %210 = getelementptr inbounds i8*, i8** %209, i64 4, !dbg !2081
  %211 = load i8*, i8** %210, align 8, !dbg !2081
  %212 = load i8**, i8*** %11, align 8, !dbg !2082
  %213 = getelementptr inbounds i8*, i8** %212, i64 5, !dbg !2082
  %214 = load i8*, i8** %213, align 8, !dbg !2082
  %215 = load i8**, i8*** %11, align 8, !dbg !2083
  %216 = getelementptr inbounds i8*, i8** %215, i64 6, !dbg !2083
  %217 = load i8*, i8** %216, align 8, !dbg !2083
  %218 = load i8**, i8*** %11, align 8, !dbg !2084
  %219 = getelementptr inbounds i8*, i8** %218, i64 7, !dbg !2084
  %220 = load i8*, i8** %219, align 8, !dbg !2084
  %221 = load i8**, i8*** %11, align 8, !dbg !2085
  %222 = getelementptr inbounds i8*, i8** %221, i64 8, !dbg !2085
  %223 = load i8*, i8** %222, align 8, !dbg !2085
  %224 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %196, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.13.97, i32 0, i32 0), i8* %199, i8* %202, i8* %205, i8* %208, i8* %211, i8* %214, i8* %217, i8* %220, i8* %223), !dbg !2086
  br label %225, !dbg !2087

; <label>:225:                                    ; preds = %195, %165, %138, %114, %93, %75, %60, %48, %39, %33
  ret void, !dbg !2088
}

; Function Attrs: noinline nounwind uwtable
define void @version_etc_ar(%struct._IO_FILE*, i8*, i8*, i8*, i8**) #3 !dbg !2089 {
  %6 = alloca %struct._IO_FILE*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i8*, align 8
  %10 = alloca i8**, align 8
  %11 = alloca i64, align 8
  store %struct._IO_FILE* %0, %struct._IO_FILE** %6, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %6, metadata !2092, metadata !DIExpression()), !dbg !2093
  store i8* %1, i8** %7, align 8
  call void @llvm.dbg.declare(metadata i8** %7, metadata !2094, metadata !DIExpression()), !dbg !2095
  store i8* %2, i8** %8, align 8
  call void @llvm.dbg.declare(metadata i8** %8, metadata !2096, metadata !DIExpression()), !dbg !2097
  store i8* %3, i8** %9, align 8
  call void @llvm.dbg.declare(metadata i8** %9, metadata !2098, metadata !DIExpression()), !dbg !2099
  store i8** %4, i8*** %10, align 8
  call void @llvm.dbg.declare(metadata i8*** %10, metadata !2100, metadata !DIExpression()), !dbg !2101
  call void @llvm.dbg.declare(metadata i64* %11, metadata !2102, metadata !DIExpression()), !dbg !2103
  store i64 0, i64* %11, align 8, !dbg !2104
  br label %12, !dbg !2106

; <label>:12:                                     ; preds = %19, %5
  %13 = load i8**, i8*** %10, align 8, !dbg !2107
  %14 = load i64, i64* %11, align 8, !dbg !2109
  %15 = getelementptr inbounds i8*, i8** %13, i64 %14, !dbg !2107
  %16 = load i8*, i8** %15, align 8, !dbg !2107
  %17 = icmp ne i8* %16, null, !dbg !2110
  br i1 %17, label %18, label %22, !dbg !2110

; <label>:18:                                     ; preds = %12
  br label %19, !dbg !2110

; <label>:19:                                     ; preds = %18
  %20 = load i64, i64* %11, align 8, !dbg !2111
  %21 = add i64 %20, 1, !dbg !2111
  store i64 %21, i64* %11, align 8, !dbg !2111
  br label %12, !dbg !2112, !llvm.loop !2113

; <label>:22:                                     ; preds = %12
  %23 = load %struct._IO_FILE*, %struct._IO_FILE** %6, align 8, !dbg !2115
  %24 = load i8*, i8** %7, align 8, !dbg !2116
  %25 = load i8*, i8** %8, align 8, !dbg !2117
  %26 = load i8*, i8** %9, align 8, !dbg !2118
  %27 = load i8**, i8*** %10, align 8, !dbg !2119
  %28 = load i64, i64* %11, align 8, !dbg !2120
  call void @version_etc_arn(%struct._IO_FILE* %23, i8* %24, i8* %25, i8* %26, i8** %27, i64 %28), !dbg !2121
  ret void, !dbg !2122
}

; Function Attrs: noinline nounwind uwtable
define void @version_etc_va(%struct._IO_FILE*, i8*, i8*, i8*, %struct.__va_list_tag*) #3 !dbg !2123 {
  %6 = alloca %struct._IO_FILE*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i8*, align 8
  %10 = alloca %struct.__va_list_tag*, align 8
  %11 = alloca i64, align 8
  %12 = alloca [10 x i8*], align 16
  store %struct._IO_FILE* %0, %struct._IO_FILE** %6, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %6, metadata !2133, metadata !DIExpression()), !dbg !2134
  store i8* %1, i8** %7, align 8
  call void @llvm.dbg.declare(metadata i8** %7, metadata !2135, metadata !DIExpression()), !dbg !2136
  store i8* %2, i8** %8, align 8
  call void @llvm.dbg.declare(metadata i8** %8, metadata !2137, metadata !DIExpression()), !dbg !2138
  store i8* %3, i8** %9, align 8
  call void @llvm.dbg.declare(metadata i8** %9, metadata !2139, metadata !DIExpression()), !dbg !2140
  store %struct.__va_list_tag* %4, %struct.__va_list_tag** %10, align 8
  call void @llvm.dbg.declare(metadata %struct.__va_list_tag** %10, metadata !2141, metadata !DIExpression()), !dbg !2142
  call void @llvm.dbg.declare(metadata i64* %11, metadata !2143, metadata !DIExpression()), !dbg !2144
  call void @llvm.dbg.declare(metadata [10 x i8*]* %12, metadata !2145, metadata !DIExpression()), !dbg !2149
  store i64 0, i64* %11, align 8, !dbg !2150
  br label %13, !dbg !2152

; <label>:13:                                     ; preds = %41, %5
  %14 = load i64, i64* %11, align 8, !dbg !2153
  %15 = icmp ult i64 %14, 10, !dbg !2155
  br i1 %15, label %16, label %38, !dbg !2156

; <label>:16:                                     ; preds = %13
  %17 = load %struct.__va_list_tag*, %struct.__va_list_tag** %10, align 8, !dbg !2157
  %18 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %17, i32 0, i32 0, !dbg !2157
  %19 = load i32, i32* %18, align 8, !dbg !2157
  %20 = icmp ule i32 %19, 40, !dbg !2157
  br i1 %20, label %21, label %27, !dbg !2157

; <label>:21:                                     ; preds = %16
  %22 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %17, i32 0, i32 3, !dbg !2157
  %23 = load i8*, i8** %22, align 8, !dbg !2157
  %24 = getelementptr i8, i8* %23, i32 %19, !dbg !2157
  %25 = bitcast i8* %24 to i8**, !dbg !2157
  %26 = add i32 %19, 8, !dbg !2157
  store i32 %26, i32* %18, align 8, !dbg !2157
  br label %32, !dbg !2157

; <label>:27:                                     ; preds = %16
  %28 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %17, i32 0, i32 2, !dbg !2157
  %29 = load i8*, i8** %28, align 8, !dbg !2157
  %30 = bitcast i8* %29 to i8**, !dbg !2157
  %31 = getelementptr i8, i8* %29, i32 8, !dbg !2157
  store i8* %31, i8** %28, align 8, !dbg !2157
  br label %32, !dbg !2157

; <label>:32:                                     ; preds = %27, %21
  %33 = phi i8** [ %25, %21 ], [ %30, %27 ], !dbg !2157
  %34 = load i8*, i8** %33, align 8, !dbg !2157
  %35 = load i64, i64* %11, align 8, !dbg !2158
  %36 = getelementptr inbounds [10 x i8*], [10 x i8*]* %12, i64 0, i64 %35, !dbg !2159
  store i8* %34, i8** %36, align 8, !dbg !2160
  %37 = icmp ne i8* %34, null, !dbg !2161
  br label %38

; <label>:38:                                     ; preds = %32, %13
  %39 = phi i1 [ false, %13 ], [ %37, %32 ]
  br i1 %39, label %40, label %44, !dbg !2162

; <label>:40:                                     ; preds = %38
  br label %41, !dbg !2162

; <label>:41:                                     ; preds = %40
  %42 = load i64, i64* %11, align 8, !dbg !2163
  %43 = add i64 %42, 1, !dbg !2163
  store i64 %43, i64* %11, align 8, !dbg !2163
  br label %13, !dbg !2164, !llvm.loop !2165

; <label>:44:                                     ; preds = %38
  %45 = load %struct._IO_FILE*, %struct._IO_FILE** %6, align 8, !dbg !2167
  %46 = load i8*, i8** %7, align 8, !dbg !2168
  %47 = load i8*, i8** %8, align 8, !dbg !2169
  %48 = load i8*, i8** %9, align 8, !dbg !2170
  %49 = getelementptr inbounds [10 x i8*], [10 x i8*]* %12, i32 0, i32 0, !dbg !2171
  %50 = load i64, i64* %11, align 8, !dbg !2172
  call void @version_etc_arn(%struct._IO_FILE* %45, i8* %46, i8* %47, i8* %48, i8** %49, i64 %50), !dbg !2173
  ret void, !dbg !2174
}

; Function Attrs: noinline nounwind uwtable
define void @version_etc(%struct._IO_FILE*, i8*, i8*, i8*, ...) #3 !dbg !2175 {
  %5 = alloca %struct._IO_FILE*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca [1 x %struct.__va_list_tag], align 16
  store %struct._IO_FILE* %0, %struct._IO_FILE** %5, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %5, metadata !2178, metadata !DIExpression()), !dbg !2179
  store i8* %1, i8** %6, align 8
  call void @llvm.dbg.declare(metadata i8** %6, metadata !2180, metadata !DIExpression()), !dbg !2181
  store i8* %2, i8** %7, align 8
  call void @llvm.dbg.declare(metadata i8** %7, metadata !2182, metadata !DIExpression()), !dbg !2183
  store i8* %3, i8** %8, align 8
  call void @llvm.dbg.declare(metadata i8** %8, metadata !2184, metadata !DIExpression()), !dbg !2185
  call void @llvm.dbg.declare(metadata [1 x %struct.__va_list_tag]* %9, metadata !2186, metadata !DIExpression()), !dbg !2193
  %10 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %9, i32 0, i32 0, !dbg !2194
  %11 = bitcast %struct.__va_list_tag* %10 to i8*, !dbg !2194
  call void @llvm.va_start(i8* %11), !dbg !2194
  %12 = load %struct._IO_FILE*, %struct._IO_FILE** %5, align 8, !dbg !2195
  %13 = load i8*, i8** %6, align 8, !dbg !2196
  %14 = load i8*, i8** %7, align 8, !dbg !2197
  %15 = load i8*, i8** %8, align 8, !dbg !2198
  %16 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %9, i32 0, i32 0, !dbg !2199
  call void @version_etc_va(%struct._IO_FILE* %12, i8* %13, i8* %14, i8* %15, %struct.__va_list_tag* %16), !dbg !2200
  %17 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %9, i32 0, i32 0, !dbg !2201
  %18 = bitcast %struct.__va_list_tag* %17 to i8*, !dbg !2201
  call void @llvm.va_end(i8* %18), !dbg !2201
  ret void, !dbg !2202
}

; Function Attrs: nounwind
declare void @llvm.va_start(i8*) #8

; Function Attrs: nounwind
declare void @llvm.va_end(i8*) #8

; Function Attrs: noinline nounwind uwtable
define void @emit_bug_reporting_address() #3 !dbg !2203 {
  %1 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.100, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.15.101, i32 0, i32 0)), !dbg !2204
  %2 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.16.102, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.17.103, i32 0, i32 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.18.104, i32 0, i32 0)), !dbg !2205
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2206
  %4 = call i32 @fputs_unlocked(i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.19.105, i32 0, i32 0), %struct._IO_FILE* %3), !dbg !2206
  ret void, !dbg !2207
}

; Function Attrs: noinline nounwind uwtable
define internal void @__argmatch_die() #3 !dbg !2208 {
  call void @usage(i32 1), !dbg !2209
  ret void, !dbg !2210
}

; Function Attrs: noinline nounwind uwtable
define i64 @argmatch(i8*, i8**, i8*, i64) #3 !dbg !2211 {
  %5 = alloca i64, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i8**, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i64, align 8
  %10 = alloca i64, align 8
  %11 = alloca i64, align 8
  %12 = alloca i64, align 8
  %13 = alloca i8, align 1
  store i8* %0, i8** %6, align 8
  call void @llvm.dbg.declare(metadata i8** %6, metadata !2214, metadata !DIExpression()), !dbg !2215
  store i8** %1, i8*** %7, align 8
  call void @llvm.dbg.declare(metadata i8*** %7, metadata !2216, metadata !DIExpression()), !dbg !2217
  store i8* %2, i8** %8, align 8
  call void @llvm.dbg.declare(metadata i8** %8, metadata !2218, metadata !DIExpression()), !dbg !2219
  store i64 %3, i64* %9, align 8
  call void @llvm.dbg.declare(metadata i64* %9, metadata !2220, metadata !DIExpression()), !dbg !2221
  call void @llvm.dbg.declare(metadata i64* %10, metadata !2222, metadata !DIExpression()), !dbg !2223
  call void @llvm.dbg.declare(metadata i64* %11, metadata !2224, metadata !DIExpression()), !dbg !2225
  call void @llvm.dbg.declare(metadata i64* %12, metadata !2226, metadata !DIExpression()), !dbg !2227
  store i64 -1, i64* %12, align 8, !dbg !2227
  call void @llvm.dbg.declare(metadata i8* %13, metadata !2228, metadata !DIExpression()), !dbg !2229
  store i8 0, i8* %13, align 1, !dbg !2229
  %14 = load i8*, i8** %6, align 8, !dbg !2230
  %15 = call i64 @strlen(i8* %14) #12, !dbg !2231
  store i64 %15, i64* %11, align 8, !dbg !2232
  store i64 0, i64* %10, align 8, !dbg !2233
  br label %16, !dbg !2235

; <label>:16:                                     ; preds = %68, %4
  %17 = load i8**, i8*** %7, align 8, !dbg !2236
  %18 = load i64, i64* %10, align 8, !dbg !2238
  %19 = getelementptr inbounds i8*, i8** %17, i64 %18, !dbg !2236
  %20 = load i8*, i8** %19, align 8, !dbg !2236
  %21 = icmp ne i8* %20, null, !dbg !2239
  br i1 %21, label %22, label %71, !dbg !2239

; <label>:22:                                     ; preds = %16
  %23 = load i8**, i8*** %7, align 8, !dbg !2240
  %24 = load i64, i64* %10, align 8, !dbg !2243
  %25 = getelementptr inbounds i8*, i8** %23, i64 %24, !dbg !2240
  %26 = load i8*, i8** %25, align 8, !dbg !2240
  %27 = load i8*, i8** %6, align 8, !dbg !2244
  %28 = load i64, i64* %11, align 8, !dbg !2245
  %29 = call i32 @strncmp(i8* %26, i8* %27, i64 %28) #12, !dbg !2246
  %30 = icmp ne i32 %29, 0, !dbg !2246
  br i1 %30, label %67, label %31, !dbg !2247

; <label>:31:                                     ; preds = %22
  %32 = load i8**, i8*** %7, align 8, !dbg !2248
  %33 = load i64, i64* %10, align 8, !dbg !2251
  %34 = getelementptr inbounds i8*, i8** %32, i64 %33, !dbg !2248
  %35 = load i8*, i8** %34, align 8, !dbg !2248
  %36 = call i64 @strlen(i8* %35) #12, !dbg !2252
  %37 = load i64, i64* %11, align 8, !dbg !2253
  %38 = icmp eq i64 %36, %37, !dbg !2254
  br i1 %38, label %39, label %41, !dbg !2255

; <label>:39:                                     ; preds = %31
  %40 = load i64, i64* %10, align 8, !dbg !2256
  store i64 %40, i64* %5, align 8, !dbg !2257
  br label %77, !dbg !2257

; <label>:41:                                     ; preds = %31
  %42 = load i64, i64* %12, align 8, !dbg !2258
  %43 = icmp eq i64 %42, -1, !dbg !2260
  br i1 %43, label %44, label %46, !dbg !2261

; <label>:44:                                     ; preds = %41
  %45 = load i64, i64* %10, align 8, !dbg !2262
  store i64 %45, i64* %12, align 8, !dbg !2263
  br label %65, !dbg !2264

; <label>:46:                                     ; preds = %41
  %47 = load i8*, i8** %8, align 8, !dbg !2265
  %48 = icmp eq i8* %47, null, !dbg !2268
  br i1 %48, label %63, label %49, !dbg !2269

; <label>:49:                                     ; preds = %46
  %50 = load i8*, i8** %8, align 8, !dbg !2270
  %51 = load i64, i64* %9, align 8, !dbg !2271
  %52 = load i64, i64* %12, align 8, !dbg !2272
  %53 = mul i64 %51, %52, !dbg !2273
  %54 = getelementptr inbounds i8, i8* %50, i64 %53, !dbg !2274
  %55 = load i8*, i8** %8, align 8, !dbg !2275
  %56 = load i64, i64* %9, align 8, !dbg !2276
  %57 = load i64, i64* %10, align 8, !dbg !2277
  %58 = mul i64 %56, %57, !dbg !2278
  %59 = getelementptr inbounds i8, i8* %55, i64 %58, !dbg !2279
  %60 = load i64, i64* %9, align 8, !dbg !2280
  %61 = call i32 @memcmp(i8* %54, i8* %59, i64 %60) #12, !dbg !2281
  %62 = icmp ne i32 %61, 0, !dbg !2281
  br i1 %62, label %63, label %64, !dbg !2282

; <label>:63:                                     ; preds = %49, %46
  store i8 1, i8* %13, align 1, !dbg !2283
  br label %64, !dbg !2285

; <label>:64:                                     ; preds = %63, %49
  br label %65

; <label>:65:                                     ; preds = %64, %44
  br label %66

; <label>:66:                                     ; preds = %65
  br label %67, !dbg !2286

; <label>:67:                                     ; preds = %66, %22
  br label %68, !dbg !2287

; <label>:68:                                     ; preds = %67
  %69 = load i64, i64* %10, align 8, !dbg !2288
  %70 = add i64 %69, 1, !dbg !2288
  store i64 %70, i64* %10, align 8, !dbg !2288
  br label %16, !dbg !2289, !llvm.loop !2290

; <label>:71:                                     ; preds = %16
  %72 = load i8, i8* %13, align 1, !dbg !2292
  %73 = trunc i8 %72 to i1, !dbg !2292
  br i1 %73, label %74, label %75, !dbg !2294

; <label>:74:                                     ; preds = %71
  store i64 -2, i64* %5, align 8, !dbg !2295
  br label %77, !dbg !2295

; <label>:75:                                     ; preds = %71
  %76 = load i64, i64* %12, align 8, !dbg !2296
  store i64 %76, i64* %5, align 8, !dbg !2297
  br label %77, !dbg !2297

; <label>:77:                                     ; preds = %75, %74, %39
  %78 = load i64, i64* %5, align 8, !dbg !2298
  ret i64 %78, !dbg !2298
}

; Function Attrs: nounwind readonly
declare i32 @memcmp(i8*, i8*, i64) #6

; Function Attrs: noinline nounwind uwtable
define void @argmatch_invalid(i8*, i8*, i64) #3 !dbg !2299 {
  %4 = alloca i8*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i64, align 8
  %7 = alloca i8*, align 8
  store i8* %0, i8** %4, align 8
  call void @llvm.dbg.declare(metadata i8** %4, metadata !2302, metadata !DIExpression()), !dbg !2303
  store i8* %1, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !2304, metadata !DIExpression()), !dbg !2305
  store i64 %2, i64* %6, align 8
  call void @llvm.dbg.declare(metadata i64* %6, metadata !2306, metadata !DIExpression()), !dbg !2307
  call void @llvm.dbg.declare(metadata i8** %7, metadata !2308, metadata !DIExpression()), !dbg !2309
  %8 = load i64, i64* %6, align 8, !dbg !2310
  %9 = icmp eq i64 %8, -1, !dbg !2311
  %10 = zext i1 %9 to i64, !dbg !2310
  %11 = select i1 %9, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.110, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.111, i32 0, i32 0), !dbg !2310
  store i8* %11, i8** %7, align 8, !dbg !2309
  %12 = load i8*, i8** %7, align 8, !dbg !2312
  %13 = load i8*, i8** %5, align 8, !dbg !2313
  %14 = call i8* @quotearg_n_style(i32 0, i32 6, i8* %13), !dbg !2314
  %15 = load i8*, i8** %4, align 8, !dbg !2315
  %16 = call i8* @quote_n(i32 1, i8* %15), !dbg !2316
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %12, i8* %14, i8* %16), !dbg !2317
  ret void, !dbg !2318
}

; Function Attrs: noinline nounwind uwtable
define void @argmatch_valid(i8**, i8*, i64) #3 !dbg !2319 {
  %4 = alloca i8**, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca i8*, align 8
  store i8** %0, i8*** %4, align 8
  call void @llvm.dbg.declare(metadata i8*** %4, metadata !2322, metadata !DIExpression()), !dbg !2323
  store i8* %1, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !2324, metadata !DIExpression()), !dbg !2325
  store i64 %2, i64* %6, align 8
  call void @llvm.dbg.declare(metadata i64* %6, metadata !2326, metadata !DIExpression()), !dbg !2327
  call void @llvm.dbg.declare(metadata i64* %7, metadata !2328, metadata !DIExpression()), !dbg !2329
  call void @llvm.dbg.declare(metadata i8** %8, metadata !2330, metadata !DIExpression()), !dbg !2331
  store i8* null, i8** %8, align 8, !dbg !2331
  %9 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !2332
  %10 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %9, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.2.112, i32 0, i32 0)), !dbg !2333
  store i64 0, i64* %7, align 8, !dbg !2334
  br label %11, !dbg !2336

; <label>:11:                                     ; preds = %50, %3
  %12 = load i8**, i8*** %4, align 8, !dbg !2337
  %13 = load i64, i64* %7, align 8, !dbg !2339
  %14 = getelementptr inbounds i8*, i8** %12, i64 %13, !dbg !2337
  %15 = load i8*, i8** %14, align 8, !dbg !2337
  %16 = icmp ne i8* %15, null, !dbg !2340
  br i1 %16, label %17, label %53, !dbg !2340

; <label>:17:                                     ; preds = %11
  %18 = load i64, i64* %7, align 8, !dbg !2341
  %19 = icmp eq i64 %18, 0, !dbg !2343
  br i1 %19, label %30, label %20, !dbg !2344

; <label>:20:                                     ; preds = %17
  %21 = load i8*, i8** %8, align 8, !dbg !2345
  %22 = load i8*, i8** %5, align 8, !dbg !2346
  %23 = load i64, i64* %6, align 8, !dbg !2347
  %24 = load i64, i64* %7, align 8, !dbg !2348
  %25 = mul i64 %23, %24, !dbg !2349
  %26 = getelementptr inbounds i8, i8* %22, i64 %25, !dbg !2350
  %27 = load i64, i64* %6, align 8, !dbg !2351
  %28 = call i32 @memcmp(i8* %21, i8* %26, i64 %27) #12, !dbg !2352
  %29 = icmp ne i32 %28, 0, !dbg !2352
  br i1 %29, label %30, label %42, !dbg !2353

; <label>:30:                                     ; preds = %20, %17
  %31 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !2354
  %32 = load i8**, i8*** %4, align 8, !dbg !2356
  %33 = load i64, i64* %7, align 8, !dbg !2357
  %34 = getelementptr inbounds i8*, i8** %32, i64 %33, !dbg !2356
  %35 = load i8*, i8** %34, align 8, !dbg !2356
  %36 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %31, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.3.113, i32 0, i32 0), i8* %35), !dbg !2358
  %37 = load i8*, i8** %5, align 8, !dbg !2359
  %38 = load i64, i64* %6, align 8, !dbg !2360
  %39 = load i64, i64* %7, align 8, !dbg !2361
  %40 = mul i64 %38, %39, !dbg !2362
  %41 = getelementptr inbounds i8, i8* %37, i64 %40, !dbg !2363
  store i8* %41, i8** %8, align 8, !dbg !2364
  br label %49, !dbg !2365

; <label>:42:                                     ; preds = %20
  %43 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !2366
  %44 = load i8**, i8*** %4, align 8, !dbg !2368
  %45 = load i64, i64* %7, align 8, !dbg !2369
  %46 = getelementptr inbounds i8*, i8** %44, i64 %45, !dbg !2368
  %47 = load i8*, i8** %46, align 8, !dbg !2368
  %48 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %43, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.4.114, i32 0, i32 0), i8* %47), !dbg !2370
  br label %49

; <label>:49:                                     ; preds = %42, %30
  br label %50, !dbg !2371

; <label>:50:                                     ; preds = %49
  %51 = load i64, i64* %7, align 8, !dbg !2372
  %52 = add i64 %51, 1, !dbg !2372
  store i64 %52, i64* %7, align 8, !dbg !2372
  br label %11, !dbg !2373, !llvm.loop !2374

; <label>:53:                                     ; preds = %11
  %54 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !2376
  %55 = call i32 @putc_unlocked(i32 10, %struct._IO_FILE* %54), !dbg !2376
  ret void, !dbg !2377
}

declare i32 @putc_unlocked(i32, %struct._IO_FILE*) #2

; Function Attrs: noinline nounwind uwtable
define i64 @__xargmatch_internal(i8*, i8*, i8**, i8*, i64, void ()*) #3 !dbg !2378 {
  %7 = alloca i64, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i8*, align 8
  %10 = alloca i8**, align 8
  %11 = alloca i8*, align 8
  %12 = alloca i64, align 8
  %13 = alloca void ()*, align 8
  %14 = alloca i64, align 8
  store i8* %0, i8** %8, align 8
  call void @llvm.dbg.declare(metadata i8** %8, metadata !2381, metadata !DIExpression()), !dbg !2382
  store i8* %1, i8** %9, align 8
  call void @llvm.dbg.declare(metadata i8** %9, metadata !2383, metadata !DIExpression()), !dbg !2384
  store i8** %2, i8*** %10, align 8
  call void @llvm.dbg.declare(metadata i8*** %10, metadata !2385, metadata !DIExpression()), !dbg !2386
  store i8* %3, i8** %11, align 8
  call void @llvm.dbg.declare(metadata i8** %11, metadata !2387, metadata !DIExpression()), !dbg !2388
  store i64 %4, i64* %12, align 8
  call void @llvm.dbg.declare(metadata i64* %12, metadata !2389, metadata !DIExpression()), !dbg !2390
  store void ()* %5, void ()** %13, align 8
  call void @llvm.dbg.declare(metadata void ()** %13, metadata !2391, metadata !DIExpression()), !dbg !2392
  call void @llvm.dbg.declare(metadata i64* %14, metadata !2393, metadata !DIExpression()), !dbg !2394
  %15 = load i8*, i8** %9, align 8, !dbg !2395
  %16 = load i8**, i8*** %10, align 8, !dbg !2396
  %17 = load i8*, i8** %11, align 8, !dbg !2397
  %18 = load i64, i64* %12, align 8, !dbg !2398
  %19 = call i64 @argmatch(i8* %15, i8** %16, i8* %17, i64 %18), !dbg !2399
  store i64 %19, i64* %14, align 8, !dbg !2394
  %20 = load i64, i64* %14, align 8, !dbg !2400
  %21 = icmp sge i64 %20, 0, !dbg !2402
  br i1 %21, label %22, label %24, !dbg !2403

; <label>:22:                                     ; preds = %6
  %23 = load i64, i64* %14, align 8, !dbg !2404
  store i64 %23, i64* %7, align 8, !dbg !2405
  br label %32, !dbg !2405

; <label>:24:                                     ; preds = %6
  %25 = load i8*, i8** %8, align 8, !dbg !2406
  %26 = load i8*, i8** %9, align 8, !dbg !2407
  %27 = load i64, i64* %14, align 8, !dbg !2408
  call void @argmatch_invalid(i8* %25, i8* %26, i64 %27), !dbg !2409
  %28 = load i8**, i8*** %10, align 8, !dbg !2410
  %29 = load i8*, i8** %11, align 8, !dbg !2411
  %30 = load i64, i64* %12, align 8, !dbg !2412
  call void @argmatch_valid(i8** %28, i8* %29, i64 %30), !dbg !2413
  %31 = load void ()*, void ()** %13, align 8, !dbg !2414
  call void %31(), !dbg !2415
  store i64 -1, i64* %7, align 8, !dbg !2416
  br label %32, !dbg !2416

; <label>:32:                                     ; preds = %24, %22
  %33 = load i64, i64* %7, align 8, !dbg !2417
  ret i64 %33, !dbg !2417
}

; Function Attrs: noinline nounwind uwtable
define i8* @argmatch_to_argument(i8*, i8**, i8*, i64) #3 !dbg !2418 {
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i8**, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i64, align 8
  %10 = alloca i64, align 8
  store i8* %0, i8** %6, align 8
  call void @llvm.dbg.declare(metadata i8** %6, metadata !2421, metadata !DIExpression()), !dbg !2422
  store i8** %1, i8*** %7, align 8
  call void @llvm.dbg.declare(metadata i8*** %7, metadata !2423, metadata !DIExpression()), !dbg !2424
  store i8* %2, i8** %8, align 8
  call void @llvm.dbg.declare(metadata i8** %8, metadata !2425, metadata !DIExpression()), !dbg !2426
  store i64 %3, i64* %9, align 8
  call void @llvm.dbg.declare(metadata i64* %9, metadata !2427, metadata !DIExpression()), !dbg !2428
  call void @llvm.dbg.declare(metadata i64* %10, metadata !2429, metadata !DIExpression()), !dbg !2430
  store i64 0, i64* %10, align 8, !dbg !2431
  br label %11, !dbg !2433

; <label>:11:                                     ; preds = %33, %4
  %12 = load i8**, i8*** %7, align 8, !dbg !2434
  %13 = load i64, i64* %10, align 8, !dbg !2436
  %14 = getelementptr inbounds i8*, i8** %12, i64 %13, !dbg !2434
  %15 = load i8*, i8** %14, align 8, !dbg !2434
  %16 = icmp ne i8* %15, null, !dbg !2437
  br i1 %16, label %17, label %36, !dbg !2437

; <label>:17:                                     ; preds = %11
  %18 = load i8*, i8** %6, align 8, !dbg !2438
  %19 = load i8*, i8** %8, align 8, !dbg !2440
  %20 = load i64, i64* %9, align 8, !dbg !2441
  %21 = load i64, i64* %10, align 8, !dbg !2442
  %22 = mul i64 %20, %21, !dbg !2443
  %23 = getelementptr inbounds i8, i8* %19, i64 %22, !dbg !2444
  %24 = load i64, i64* %9, align 8, !dbg !2445
  %25 = call i32 @memcmp(i8* %18, i8* %23, i64 %24) #12, !dbg !2446
  %26 = icmp ne i32 %25, 0, !dbg !2446
  br i1 %26, label %32, label %27, !dbg !2447

; <label>:27:                                     ; preds = %17
  %28 = load i8**, i8*** %7, align 8, !dbg !2448
  %29 = load i64, i64* %10, align 8, !dbg !2449
  %30 = getelementptr inbounds i8*, i8** %28, i64 %29, !dbg !2448
  %31 = load i8*, i8** %30, align 8, !dbg !2448
  store i8* %31, i8** %5, align 8, !dbg !2450
  br label %37, !dbg !2450

; <label>:32:                                     ; preds = %17
  br label %33, !dbg !2451

; <label>:33:                                     ; preds = %32
  %34 = load i64, i64* %10, align 8, !dbg !2452
  %35 = add i64 %34, 1, !dbg !2452
  store i64 %35, i64* %10, align 8, !dbg !2452
  br label %11, !dbg !2453, !llvm.loop !2454

; <label>:36:                                     ; preds = %11
  store i8* null, i8** %5, align 8, !dbg !2456
  br label %37, !dbg !2456

; <label>:37:                                     ; preds = %36, %27
  %38 = load i8*, i8** %5, align 8, !dbg !2457
  ret i8* %38, !dbg !2457
}

; Function Attrs: noinline nounwind uwtable
define i8* @last_component(i8*) #3 !dbg !2458 {
  %2 = alloca i8*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca i8, align 1
  store i8* %0, i8** %2, align 8
  call void @llvm.dbg.declare(metadata i8** %2, metadata !2461, metadata !DIExpression()), !dbg !2462
  call void @llvm.dbg.declare(metadata i8** %3, metadata !2463, metadata !DIExpression()), !dbg !2464
  %6 = load i8*, i8** %2, align 8, !dbg !2465
  %7 = getelementptr inbounds i8, i8* %6, i64 0, !dbg !2466
  store i8* %7, i8** %3, align 8, !dbg !2464
  call void @llvm.dbg.declare(metadata i8** %4, metadata !2467, metadata !DIExpression()), !dbg !2468
  call void @llvm.dbg.declare(metadata i8* %5, metadata !2469, metadata !DIExpression()), !dbg !2470
  store i8 0, i8* %5, align 1, !dbg !2470
  br label %8, !dbg !2471

; <label>:8:                                      ; preds = %13, %1
  %9 = load i8*, i8** %3, align 8, !dbg !2472
  %10 = load i8, i8* %9, align 1, !dbg !2472
  %11 = sext i8 %10 to i32, !dbg !2472
  %12 = icmp eq i32 %11, 47, !dbg !2472
  br i1 %12, label %13, label %16, !dbg !2471

; <label>:13:                                     ; preds = %8
  %14 = load i8*, i8** %3, align 8, !dbg !2473
  %15 = getelementptr inbounds i8, i8* %14, i32 1, !dbg !2473
  store i8* %15, i8** %3, align 8, !dbg !2473
  br label %8, !dbg !2471, !llvm.loop !2474

; <label>:16:                                     ; preds = %8
  %17 = load i8*, i8** %3, align 8, !dbg !2475
  store i8* %17, i8** %4, align 8, !dbg !2477
  br label %18, !dbg !2478

; <label>:18:                                     ; preds = %35, %16
  %19 = load i8*, i8** %4, align 8, !dbg !2479
  %20 = load i8, i8* %19, align 1, !dbg !2481
  %21 = icmp ne i8 %20, 0, !dbg !2482
  br i1 %21, label %22, label %38, !dbg !2482

; <label>:22:                                     ; preds = %18
  %23 = load i8*, i8** %4, align 8, !dbg !2483
  %24 = load i8, i8* %23, align 1, !dbg !2483
  %25 = sext i8 %24 to i32, !dbg !2483
  %26 = icmp eq i32 %25, 47, !dbg !2483
  br i1 %26, label %27, label %28, !dbg !2486

; <label>:27:                                     ; preds = %22
  store i8 1, i8* %5, align 1, !dbg !2487
  br label %34, !dbg !2488

; <label>:28:                                     ; preds = %22
  %29 = load i8, i8* %5, align 1, !dbg !2489
  %30 = trunc i8 %29 to i1, !dbg !2489
  br i1 %30, label %31, label %33, !dbg !2491

; <label>:31:                                     ; preds = %28
  %32 = load i8*, i8** %4, align 8, !dbg !2492
  store i8* %32, i8** %3, align 8, !dbg !2494
  store i8 0, i8* %5, align 1, !dbg !2495
  br label %33, !dbg !2496

; <label>:33:                                     ; preds = %31, %28
  br label %34

; <label>:34:                                     ; preds = %33, %27
  br label %35, !dbg !2497

; <label>:35:                                     ; preds = %34
  %36 = load i8*, i8** %4, align 8, !dbg !2498
  %37 = getelementptr inbounds i8, i8* %36, i32 1, !dbg !2498
  store i8* %37, i8** %4, align 8, !dbg !2498
  br label %18, !dbg !2499, !llvm.loop !2500

; <label>:38:                                     ; preds = %18
  %39 = load i8*, i8** %3, align 8, !dbg !2502
  ret i8* %39, !dbg !2503
}

; Function Attrs: noinline nounwind uwtable
define i64 @base_len(i8*) #3 !dbg !2504 {
  %2 = alloca i8*, align 8
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  store i8* %0, i8** %2, align 8
  call void @llvm.dbg.declare(metadata i8** %2, metadata !2507, metadata !DIExpression()), !dbg !2508
  call void @llvm.dbg.declare(metadata i64* %3, metadata !2509, metadata !DIExpression()), !dbg !2510
  call void @llvm.dbg.declare(metadata i64* %4, metadata !2511, metadata !DIExpression()), !dbg !2512
  store i64 0, i64* %4, align 8, !dbg !2512
  %5 = load i8*, i8** %2, align 8, !dbg !2513
  %6 = call i64 @strlen(i8* %5) #12, !dbg !2515
  store i64 %6, i64* %3, align 8, !dbg !2516
  br label %7, !dbg !2517

; <label>:7:                                      ; preds = %21, %1
  %8 = load i64, i64* %3, align 8, !dbg !2518
  %9 = icmp ult i64 1, %8, !dbg !2520
  br i1 %9, label %10, label %18, !dbg !2521

; <label>:10:                                     ; preds = %7
  %11 = load i8*, i8** %2, align 8, !dbg !2522
  %12 = load i64, i64* %3, align 8, !dbg !2522
  %13 = sub i64 %12, 1, !dbg !2522
  %14 = getelementptr inbounds i8, i8* %11, i64 %13, !dbg !2522
  %15 = load i8, i8* %14, align 1, !dbg !2522
  %16 = sext i8 %15 to i32, !dbg !2522
  %17 = icmp eq i32 %16, 47, !dbg !2522
  br label %18

; <label>:18:                                     ; preds = %10, %7
  %19 = phi i1 [ false, %7 ], [ %17, %10 ]
  br i1 %19, label %20, label %24, !dbg !2523

; <label>:20:                                     ; preds = %18
  br label %21, !dbg !2524

; <label>:21:                                     ; preds = %20
  %22 = load i64, i64* %3, align 8, !dbg !2525
  %23 = add i64 %22, -1, !dbg !2525
  store i64 %23, i64* %3, align 8, !dbg !2525
  br label %7, !dbg !2526, !llvm.loop !2527

; <label>:24:                                     ; preds = %18
  %25 = load i64, i64* %3, align 8, !dbg !2529
  ret i64 %25, !dbg !2530
}

; Function Attrs: noinline nounwind uwtable
define void @close_stdin_set_file_name(i8*) #3 !dbg !2531 {
  %2 = alloca i8*, align 8
  store i8* %0, i8** %2, align 8
  call void @llvm.dbg.declare(metadata i8** %2, metadata !2532, metadata !DIExpression()), !dbg !2533
  %3 = load i8*, i8** %2, align 8, !dbg !2534
  store i8* %3, i8** @file_name, align 8, !dbg !2535
  ret void, !dbg !2536
}

; Function Attrs: noinline nounwind uwtable
define void @close_stdin() #3 !dbg !2537 {
  %1 = alloca i8, align 1
  %2 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8* %1, metadata !2538, metadata !DIExpression()), !dbg !2539
  store i8 0, i8* %1, align 1, !dbg !2539
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !dbg !2540
  %4 = call i64 @freadahead(%struct._IO_FILE* %3), !dbg !2542
  %5 = icmp ugt i64 %4, 0, !dbg !2543
  br i1 %5, label %6, label %16, !dbg !2544

; <label>:6:                                      ; preds = %0
  %7 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !dbg !2545
  %8 = call i32 @rpl_fseeko(%struct._IO_FILE* %7, i64 0, i32 1), !dbg !2548
  %9 = icmp eq i32 %8, 0, !dbg !2549
  br i1 %9, label %10, label %15, !dbg !2550

; <label>:10:                                     ; preds = %6
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !dbg !2551
  %12 = call i32 @rpl_fflush(%struct._IO_FILE* %11), !dbg !2552
  %13 = icmp ne i32 %12, 0, !dbg !2553
  br i1 %13, label %14, label %15, !dbg !2554

; <label>:14:                                     ; preds = %10
  store i8 1, i8* %1, align 1, !dbg !2555
  br label %15, !dbg !2556

; <label>:15:                                     ; preds = %14, %10, %6
  br label %16, !dbg !2557

; <label>:16:                                     ; preds = %15, %0
  %17 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !dbg !2558
  %18 = call i32 @close_stream(%struct._IO_FILE* %17), !dbg !2560
  %19 = icmp ne i32 %18, 0, !dbg !2561
  br i1 %19, label %20, label %21, !dbg !2562

; <label>:20:                                     ; preds = %16
  store i8 1, i8* %1, align 1, !dbg !2563
  br label %21, !dbg !2564

; <label>:21:                                     ; preds = %20, %16
  %22 = load i8, i8* %1, align 1, !dbg !2565
  %23 = trunc i8 %22 to i1, !dbg !2565
  br i1 %23, label %24, label %38, !dbg !2567

; <label>:24:                                     ; preds = %21
  call void @llvm.dbg.declare(metadata i8** %2, metadata !2568, metadata !DIExpression()), !dbg !2570
  store i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.121, i32 0, i32 0), i8** %2, align 8, !dbg !2570
  %25 = load i8*, i8** @file_name, align 8, !dbg !2571
  %26 = icmp ne i8* %25, null, !dbg !2571
  br i1 %26, label %27, label %33, !dbg !2573

; <label>:27:                                     ; preds = %24
  %28 = call i32* @__errno_location() #14, !dbg !2574
  %29 = load i32, i32* %28, align 4, !dbg !2574
  %30 = load i8*, i8** @file_name, align 8, !dbg !2575
  %31 = call i8* @quotearg_colon(i8* %30), !dbg !2576
  %32 = load i8*, i8** %2, align 8, !dbg !2577
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %29, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1.122, i32 0, i32 0), i8* %31, i8* %32), !dbg !2578
  br label %37, !dbg !2578

; <label>:33:                                     ; preds = %24
  %34 = call i32* @__errno_location() #14, !dbg !2579
  %35 = load i32, i32* %34, align 4, !dbg !2579
  %36 = load i8*, i8** %2, align 8, !dbg !2580
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %35, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2.123, i32 0, i32 0), i8* %36), !dbg !2581
  br label %37

; <label>:37:                                     ; preds = %33, %27
  br label %38, !dbg !2582

; <label>:38:                                     ; preds = %37, %21
  call void @close_stdout(), !dbg !2583
  %39 = load i8, i8* %1, align 1, !dbg !2584
  %40 = trunc i8 %39 to i1, !dbg !2584
  br i1 %40, label %41, label %43, !dbg !2586

; <label>:41:                                     ; preds = %38
  %42 = load volatile i32, i32* @exit_failure, align 4, !dbg !2587
  call void @_exit(i32 %42) #13, !dbg !2588
  unreachable, !dbg !2588

; <label>:43:                                     ; preds = %38
  ret void, !dbg !2589
}

; Function Attrs: noreturn
declare void @_exit(i32) #9

; Function Attrs: noinline nounwind uwtable
define void @close_stdout_set_file_name(i8*) #3 !dbg !2590 {
  %2 = alloca i8*, align 8
  store i8* %0, i8** %2, align 8
  call void @llvm.dbg.declare(metadata i8** %2, metadata !2591, metadata !DIExpression()), !dbg !2592
  %3 = load i8*, i8** %2, align 8, !dbg !2593
  store i8* %3, i8** @file_name.124, align 8, !dbg !2594
  ret void, !dbg !2595
}

; Function Attrs: noinline nounwind uwtable
define void @close_stdout_set_ignore_EPIPE(i1 zeroext) #3 !dbg !2596 {
  %2 = alloca i8, align 1
  %3 = zext i1 %0 to i8
  store i8 %3, i8* %2, align 1
  call void @llvm.dbg.declare(metadata i8* %2, metadata !2599, metadata !DIExpression()), !dbg !2600
  %4 = load i8, i8* %2, align 1, !dbg !2601
  %5 = trunc i8 %4 to i1, !dbg !2601
  %6 = zext i1 %5 to i8, !dbg !2602
  store i8 %6, i8* @ignore_EPIPE, align 1, !dbg !2602
  ret void, !dbg !2603
}

; Function Attrs: noinline nounwind uwtable
define void @close_stdout() #3 !dbg !2604 {
  %1 = alloca i8*, align 8
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2605
  %3 = call i32 @close_stream(%struct._IO_FILE* %2), !dbg !2607
  %4 = icmp ne i32 %3, 0, !dbg !2608
  br i1 %4, label %5, label %27, !dbg !2609

; <label>:5:                                      ; preds = %0
  %6 = load i8, i8* @ignore_EPIPE, align 1, !dbg !2610
  %7 = trunc i8 %6 to i1, !dbg !2610
  br i1 %7, label %8, label %12, !dbg !2611

; <label>:8:                                      ; preds = %5
  %9 = call i32* @__errno_location() #14, !dbg !2612
  %10 = load i32, i32* %9, align 4, !dbg !2612
  %11 = icmp eq i32 %10, 32, !dbg !2613
  br i1 %11, label %27, label %12, !dbg !2614

; <label>:12:                                     ; preds = %8, %5
  call void @llvm.dbg.declare(metadata i8** %1, metadata !2615, metadata !DIExpression()), !dbg !2617
  store i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.127, i32 0, i32 0), i8** %1, align 8, !dbg !2617
  %13 = load i8*, i8** @file_name.124, align 8, !dbg !2618
  %14 = icmp ne i8* %13, null, !dbg !2618
  br i1 %14, label %15, label %21, !dbg !2620

; <label>:15:                                     ; preds = %12
  %16 = call i32* @__errno_location() #14, !dbg !2621
  %17 = load i32, i32* %16, align 4, !dbg !2621
  %18 = load i8*, i8** @file_name.124, align 8, !dbg !2622
  %19 = call i8* @quotearg_colon(i8* %18), !dbg !2623
  %20 = load i8*, i8** %1, align 8, !dbg !2624
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %17, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1.128, i32 0, i32 0), i8* %19, i8* %20), !dbg !2625
  br label %25, !dbg !2625

; <label>:21:                                     ; preds = %12
  %22 = call i32* @__errno_location() #14, !dbg !2626
  %23 = load i32, i32* %22, align 4, !dbg !2626
  %24 = load i8*, i8** %1, align 8, !dbg !2627
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %23, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2.129, i32 0, i32 0), i8* %24), !dbg !2628
  br label %25

; <label>:25:                                     ; preds = %21, %15
  %26 = load volatile i32, i32* @exit_failure, align 4, !dbg !2629
  call void @_exit(i32 %26) #13, !dbg !2630
  unreachable, !dbg !2630

; <label>:27:                                     ; preds = %8, %0
  %28 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !2631
  %29 = call i32 @close_stream(%struct._IO_FILE* %28), !dbg !2633
  %30 = icmp ne i32 %29, 0, !dbg !2634
  br i1 %30, label %31, label %33, !dbg !2635

; <label>:31:                                     ; preds = %27
  %32 = load volatile i32, i32* @exit_failure, align 4, !dbg !2636
  call void @_exit(i32 %32) #13, !dbg !2637
  unreachable, !dbg !2637

; <label>:33:                                     ; preds = %27
  ret void, !dbg !2638
}

; Function Attrs: noinline nounwind uwtable
define i32 @rpl_fflush(%struct._IO_FILE*) #3 !dbg !2639 {
  %2 = alloca i32, align 4
  %3 = alloca %struct._IO_FILE*, align 8
  store %struct._IO_FILE* %0, %struct._IO_FILE** %3, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %3, metadata !2682, metadata !DIExpression()), !dbg !2683
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8, !dbg !2684
  %5 = icmp eq %struct._IO_FILE* %4, null, !dbg !2686
  br i1 %5, label %10, label %6, !dbg !2687

; <label>:6:                                      ; preds = %1
  %7 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8, !dbg !2688
  %8 = call i32 @__freading(%struct._IO_FILE* %7) #8, !dbg !2688
  %9 = icmp ne i32 %8, 0, !dbg !2688
  br i1 %9, label %13, label %10, !dbg !2689

; <label>:10:                                     ; preds = %6, %1
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8, !dbg !2690
  %12 = call i32 @fflush(%struct._IO_FILE* %11), !dbg !2691
  store i32 %12, i32* %2, align 4, !dbg !2692
  br label %17, !dbg !2692

; <label>:13:                                     ; preds = %6
  %14 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8, !dbg !2693
  call void @clear_ungetc_buffer_preserving_position(%struct._IO_FILE* %14), !dbg !2694
  %15 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8, !dbg !2695
  %16 = call i32 @fflush(%struct._IO_FILE* %15), !dbg !2696
  store i32 %16, i32* %2, align 4, !dbg !2697
  br label %17, !dbg !2697

; <label>:17:                                     ; preds = %13, %10
  %18 = load i32, i32* %2, align 4, !dbg !2698
  ret i32 %18, !dbg !2698
}

; Function Attrs: nounwind
declare i32 @__freading(%struct._IO_FILE*) #5

declare i32 @fflush(%struct._IO_FILE*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @clear_ungetc_buffer_preserving_position(%struct._IO_FILE*) #3 !dbg !2699 {
  %2 = alloca %struct._IO_FILE*, align 8
  store %struct._IO_FILE* %0, %struct._IO_FILE** %2, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %2, metadata !2702, metadata !DIExpression()), !dbg !2703
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** %2, align 8, !dbg !2704
  %4 = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %3, i32 0, i32 0, !dbg !2706
  %5 = load i32, i32* %4, align 8, !dbg !2706
  %6 = and i32 %5, 256, !dbg !2707
  %7 = icmp ne i32 %6, 0, !dbg !2707
  br i1 %7, label %8, label %11, !dbg !2708

; <label>:8:                                      ; preds = %1
  %9 = load %struct._IO_FILE*, %struct._IO_FILE** %2, align 8, !dbg !2709
  %10 = call i32 @rpl_fseeko(%struct._IO_FILE* %9, i64 0, i32 1), !dbg !2710
  br label %11, !dbg !2710

; <label>:11:                                     ; preds = %8, %1
  ret void, !dbg !2711
}

; Function Attrs: noinline nounwind uwtable
define i8* @file_type(%struct.stat*) #3 !dbg !2712 {
  %2 = alloca i8*, align 8
  %3 = alloca %struct.stat*, align 8
  store %struct.stat* %0, %struct.stat** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.stat** %3, metadata !2738, metadata !DIExpression()), !dbg !2739
  %4 = load %struct.stat*, %struct.stat** %3, align 8, !dbg !2740
  %5 = getelementptr inbounds %struct.stat, %struct.stat* %4, i32 0, i32 3, !dbg !2740
  %6 = load i32, i32* %5, align 8, !dbg !2740
  %7 = and i32 %6, 61440, !dbg !2740
  %8 = icmp eq i32 %7, 32768, !dbg !2740
  br i1 %8, label %9, label %16, !dbg !2742

; <label>:9:                                      ; preds = %1
  %10 = load %struct.stat*, %struct.stat** %3, align 8, !dbg !2743
  %11 = getelementptr inbounds %struct.stat, %struct.stat* %10, i32 0, i32 8, !dbg !2744
  %12 = load i64, i64* %11, align 8, !dbg !2744
  %13 = icmp eq i64 %12, 0, !dbg !2745
  %14 = zext i1 %13 to i64, !dbg !2743
  %15 = select i1 %13, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.136, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.1.137, i32 0, i32 0), !dbg !2743
  store i8* %15, i8** %2, align 8, !dbg !2746
  br label %89, !dbg !2746

; <label>:16:                                     ; preds = %1
  %17 = load %struct.stat*, %struct.stat** %3, align 8, !dbg !2747
  %18 = getelementptr inbounds %struct.stat, %struct.stat* %17, i32 0, i32 3, !dbg !2747
  %19 = load i32, i32* %18, align 8, !dbg !2747
  %20 = and i32 %19, 61440, !dbg !2747
  %21 = icmp eq i32 %20, 16384, !dbg !2747
  br i1 %21, label %22, label %23, !dbg !2749

; <label>:22:                                     ; preds = %16
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2.138, i32 0, i32 0), i8** %2, align 8, !dbg !2750
  br label %89, !dbg !2750

; <label>:23:                                     ; preds = %16
  %24 = load %struct.stat*, %struct.stat** %3, align 8, !dbg !2751
  %25 = getelementptr inbounds %struct.stat, %struct.stat* %24, i32 0, i32 3, !dbg !2751
  %26 = load i32, i32* %25, align 8, !dbg !2751
  %27 = and i32 %26, 61440, !dbg !2751
  %28 = icmp eq i32 %27, 24576, !dbg !2751
  br i1 %28, label %29, label %30, !dbg !2753

; <label>:29:                                     ; preds = %23
  store i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.3.139, i32 0, i32 0), i8** %2, align 8, !dbg !2754
  br label %89, !dbg !2754

; <label>:30:                                     ; preds = %23
  %31 = load %struct.stat*, %struct.stat** %3, align 8, !dbg !2755
  %32 = getelementptr inbounds %struct.stat, %struct.stat* %31, i32 0, i32 3, !dbg !2755
  %33 = load i32, i32* %32, align 8, !dbg !2755
  %34 = and i32 %33, 61440, !dbg !2755
  %35 = icmp eq i32 %34, 8192, !dbg !2755
  br i1 %35, label %36, label %37, !dbg !2757

; <label>:36:                                     ; preds = %30
  store i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4.140, i32 0, i32 0), i8** %2, align 8, !dbg !2758
  br label %89, !dbg !2758

; <label>:37:                                     ; preds = %30
  %38 = load %struct.stat*, %struct.stat** %3, align 8, !dbg !2759
  %39 = getelementptr inbounds %struct.stat, %struct.stat* %38, i32 0, i32 3, !dbg !2759
  %40 = load i32, i32* %39, align 8, !dbg !2759
  %41 = and i32 %40, 61440, !dbg !2759
  %42 = icmp eq i32 %41, 4096, !dbg !2759
  br i1 %42, label %43, label %44, !dbg !2761

; <label>:43:                                     ; preds = %37
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5.141, i32 0, i32 0), i8** %2, align 8, !dbg !2762
  br label %89, !dbg !2762

; <label>:44:                                     ; preds = %37
  %45 = load %struct.stat*, %struct.stat** %3, align 8, !dbg !2763
  %46 = getelementptr inbounds %struct.stat, %struct.stat* %45, i32 0, i32 3, !dbg !2763
  %47 = load i32, i32* %46, align 8, !dbg !2763
  %48 = and i32 %47, 61440, !dbg !2763
  %49 = icmp eq i32 %48, 40960, !dbg !2763
  br i1 %49, label %50, label %51, !dbg !2765

; <label>:50:                                     ; preds = %44
  store i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.6.142, i32 0, i32 0), i8** %2, align 8, !dbg !2766
  br label %89, !dbg !2766

; <label>:51:                                     ; preds = %44
  %52 = load %struct.stat*, %struct.stat** %3, align 8, !dbg !2767
  %53 = getelementptr inbounds %struct.stat, %struct.stat* %52, i32 0, i32 3, !dbg !2767
  %54 = load i32, i32* %53, align 8, !dbg !2767
  %55 = and i32 %54, 61440, !dbg !2767
  %56 = icmp eq i32 %55, 49152, !dbg !2767
  br i1 %56, label %57, label %58, !dbg !2769

; <label>:57:                                     ; preds = %51
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.7.143, i32 0, i32 0), i8** %2, align 8, !dbg !2770
  br label %89, !dbg !2770

; <label>:58:                                     ; preds = %51
  %59 = load %struct.stat*, %struct.stat** %3, align 8, !dbg !2771
  %60 = getelementptr inbounds %struct.stat, %struct.stat* %59, i32 0, i32 3, !dbg !2771
  %61 = load i32, i32* %60, align 8, !dbg !2771
  %62 = load %struct.stat*, %struct.stat** %3, align 8, !dbg !2771
  %63 = getelementptr inbounds %struct.stat, %struct.stat* %62, i32 0, i32 3, !dbg !2771
  %64 = load i32, i32* %63, align 8, !dbg !2771
  %65 = sub i32 %61, %64, !dbg !2771
  %66 = icmp ne i32 %65, 0, !dbg !2771
  br i1 %66, label %67, label %68, !dbg !2773

; <label>:67:                                     ; preds = %58
  store i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.8.144, i32 0, i32 0), i8** %2, align 8, !dbg !2774
  br label %89, !dbg !2774

; <label>:68:                                     ; preds = %58
  %69 = load %struct.stat*, %struct.stat** %3, align 8, !dbg !2775
  %70 = getelementptr inbounds %struct.stat, %struct.stat* %69, i32 0, i32 3, !dbg !2775
  %71 = load i32, i32* %70, align 8, !dbg !2775
  %72 = load %struct.stat*, %struct.stat** %3, align 8, !dbg !2775
  %73 = getelementptr inbounds %struct.stat, %struct.stat* %72, i32 0, i32 3, !dbg !2775
  %74 = load i32, i32* %73, align 8, !dbg !2775
  %75 = sub i32 %71, %74, !dbg !2775
  %76 = icmp ne i32 %75, 0, !dbg !2775
  br i1 %76, label %77, label %78, !dbg !2777

; <label>:77:                                     ; preds = %68
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.9.145, i32 0, i32 0), i8** %2, align 8, !dbg !2778
  br label %89, !dbg !2778

; <label>:78:                                     ; preds = %68
  %79 = load %struct.stat*, %struct.stat** %3, align 8, !dbg !2779
  %80 = getelementptr inbounds %struct.stat, %struct.stat* %79, i32 0, i32 3, !dbg !2779
  %81 = load i32, i32* %80, align 8, !dbg !2779
  %82 = load %struct.stat*, %struct.stat** %3, align 8, !dbg !2779
  %83 = getelementptr inbounds %struct.stat, %struct.stat* %82, i32 0, i32 3, !dbg !2779
  %84 = load i32, i32* %83, align 8, !dbg !2779
  %85 = sub i32 %81, %84, !dbg !2779
  %86 = icmp ne i32 %85, 0, !dbg !2779
  br i1 %86, label %87, label %88, !dbg !2781

; <label>:87:                                     ; preds = %78
  store i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.10.146, i32 0, i32 0), i8** %2, align 8, !dbg !2782
  br label %89, !dbg !2782

; <label>:88:                                     ; preds = %78
  store i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.11.147, i32 0, i32 0), i8** %2, align 8, !dbg !2783
  br label %89, !dbg !2783

; <label>:89:                                     ; preds = %88, %87, %77, %67, %57, %50, %43, %36, %29, %22, %9
  %90 = load i8*, i8** %2, align 8, !dbg !2784
  ret i8* %90, !dbg !2784
}

; Function Attrs: noinline nounwind uwtable
define i32 @rpl_fseeko(%struct._IO_FILE* nonnull, i64, i32) #3 !dbg !2785 {
  %4 = alloca i32, align 4
  %5 = alloca %struct._IO_FILE*, align 8
  %6 = alloca i64, align 8
  %7 = alloca i32, align 4
  %8 = alloca i64, align 8
  store %struct._IO_FILE* %0, %struct._IO_FILE** %5, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %5, metadata !2829, metadata !DIExpression()), !dbg !2830
  store i64 %1, i64* %6, align 8
  call void @llvm.dbg.declare(metadata i64* %6, metadata !2831, metadata !DIExpression()), !dbg !2832
  store i32 %2, i32* %7, align 4
  call void @llvm.dbg.declare(metadata i32* %7, metadata !2833, metadata !DIExpression()), !dbg !2834
  %9 = load %struct._IO_FILE*, %struct._IO_FILE** %5, align 8, !dbg !2835
  %10 = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %9, i32 0, i32 2, !dbg !2837
  %11 = load i8*, i8** %10, align 8, !dbg !2837
  %12 = load %struct._IO_FILE*, %struct._IO_FILE** %5, align 8, !dbg !2838
  %13 = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %12, i32 0, i32 1, !dbg !2839
  %14 = load i8*, i8** %13, align 8, !dbg !2839
  %15 = icmp eq i8* %11, %14, !dbg !2840
  br i1 %15, label %16, label %59, !dbg !2841

; <label>:16:                                     ; preds = %3
  %17 = load %struct._IO_FILE*, %struct._IO_FILE** %5, align 8, !dbg !2842
  %18 = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %17, i32 0, i32 5, !dbg !2843
  %19 = load i8*, i8** %18, align 8, !dbg !2843
  %20 = load %struct._IO_FILE*, %struct._IO_FILE** %5, align 8, !dbg !2844
  %21 = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %20, i32 0, i32 4, !dbg !2845
  %22 = load i8*, i8** %21, align 8, !dbg !2845
  %23 = icmp eq i8* %19, %22, !dbg !2846
  br i1 %23, label %24, label %59, !dbg !2847

; <label>:24:                                     ; preds = %16
  %25 = load %struct._IO_FILE*, %struct._IO_FILE** %5, align 8, !dbg !2848
  %26 = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %25, i32 0, i32 9, !dbg !2849
  %27 = load i8*, i8** %26, align 8, !dbg !2849
  %28 = icmp eq i8* %27, null, !dbg !2850
  br i1 %28, label %29, label %59, !dbg !2851

; <label>:29:                                     ; preds = %24
  call void @llvm.dbg.declare(metadata i64* %8, metadata !2852, metadata !DIExpression()), !dbg !2854
  %30 = load %struct._IO_FILE*, %struct._IO_FILE** %5, align 8, !dbg !2855
  %31 = call i32 @fileno(%struct._IO_FILE* %30) #8, !dbg !2856
  %32 = load i32, i32* %7, align 4, !dbg !2857
  %33 = icmp eq i32 %32, 2, !dbg !2858
  br i1 %33, label %34, label %38, !dbg !2859

; <label>:34:                                     ; preds = %29
  %35 = load i64, i64* %6, align 8, !dbg !2860
  %36 = icmp sgt i64 %35, 0, !dbg !2861
  br i1 %36, label %37, label %38, !dbg !2857

; <label>:37:                                     ; preds = %34
  br label %40, !dbg !2857

; <label>:38:                                     ; preds = %34, %29
  %39 = load i64, i64* %6, align 8, !dbg !2862
  br label %40, !dbg !2857

; <label>:40:                                     ; preds = %38, %37
  %41 = phi i64 [ 0, %37 ], [ %39, %38 ], !dbg !2857
  %42 = load i32, i32* %7, align 4, !dbg !2863
  %43 = call i64 @lseek(i32 %31, i64 %41, i32 %42) #8, !dbg !2864
  store i64 %43, i64* %8, align 8, !dbg !2854
  %44 = load i64, i64* %8, align 8, !dbg !2865
  %45 = icmp eq i64 %44, -1, !dbg !2867
  br i1 %45, label %46, label %47, !dbg !2868

; <label>:46:                                     ; preds = %40
  store i32 -1, i32* %4, align 4, !dbg !2869
  br label %64, !dbg !2869

; <label>:47:                                     ; preds = %40
  %48 = load %struct._IO_FILE*, %struct._IO_FILE** %5, align 8, !dbg !2871
  %49 = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %48, i32 0, i32 0, !dbg !2872
  %50 = load i32, i32* %49, align 8, !dbg !2873
  %51 = and i32 %50, -17, !dbg !2873
  store i32 %51, i32* %49, align 8, !dbg !2873
  %52 = load i32, i32* %7, align 4, !dbg !2874
  %53 = icmp eq i32 %52, 2, !dbg !2876
  br i1 %53, label %54, label %57, !dbg !2877

; <label>:54:                                     ; preds = %47
  %55 = load i64, i64* %6, align 8, !dbg !2878
  %56 = icmp sgt i64 %55, 0, !dbg !2879
  br i1 %56, label %58, label %57, !dbg !2880

; <label>:57:                                     ; preds = %54, %47
  store i32 0, i32* %4, align 4, !dbg !2881
  br label %64, !dbg !2881

; <label>:58:                                     ; preds = %54
  br label %59, !dbg !2882

; <label>:59:                                     ; preds = %58, %24, %16, %3
  %60 = load %struct._IO_FILE*, %struct._IO_FILE** %5, align 8, !dbg !2883
  %61 = load i64, i64* %6, align 8, !dbg !2884
  %62 = load i32, i32* %7, align 4, !dbg !2885
  %63 = call i32 @fseeko(%struct._IO_FILE* %60, i64 %61, i32 %62), !dbg !2886
  store i32 %63, i32* %4, align 4, !dbg !2887
  br label %64, !dbg !2887

; <label>:64:                                     ; preds = %59, %57, %46
  %65 = load i32, i32* %4, align 4, !dbg !2888
  ret i32 %65, !dbg !2888
}

; Function Attrs: nounwind
declare i32 @fileno(%struct._IO_FILE*) #5

; Function Attrs: nounwind
declare i64 @lseek(i32, i64, i32) #5

declare i32 @fseeko(%struct._IO_FILE*, i64, i32) #2

; Function Attrs: noinline nounwind uwtable
define %struct.FTS* @fts_open(i8**, i32, i32 (%struct._ftsent**, %struct._ftsent**)*) #3 !dbg !2889 {
  %4 = alloca %struct.FTS*, align 8
  %5 = alloca i8**, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32 (%struct._ftsent**, %struct._ftsent**)*, align 8
  %8 = alloca %struct.FTS*, align 8
  %9 = alloca %struct._ftsent*, align 8
  %10 = alloca %struct._ftsent*, align 8
  %11 = alloca i64, align 8
  %12 = alloca %struct._ftsent*, align 8
  %13 = alloca %struct._ftsent*, align 8
  %14 = alloca i8, align 1
  %15 = alloca i32, align 4
  %16 = alloca i64, align 8
  %17 = alloca i64, align 8
  store i8** %0, i8*** %5, align 8
  call void @llvm.dbg.declare(metadata i8*** %5, metadata !2895, metadata !DIExpression()), !dbg !2896
  store i32 %1, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !2897, metadata !DIExpression()), !dbg !2898
  store i32 (%struct._ftsent**, %struct._ftsent**)* %2, i32 (%struct._ftsent**, %struct._ftsent**)** %7, align 8
  call void @llvm.dbg.declare(metadata i32 (%struct._ftsent**, %struct._ftsent**)** %7, metadata !2899, metadata !DIExpression()), !dbg !2900
  call void @llvm.dbg.declare(metadata %struct.FTS** %8, metadata !2901, metadata !DIExpression()), !dbg !2902
  call void @llvm.dbg.declare(metadata %struct._ftsent** %9, metadata !2903, metadata !DIExpression()), !dbg !2905
  call void @llvm.dbg.declare(metadata %struct._ftsent** %10, metadata !2906, metadata !DIExpression()), !dbg !2907
  call void @llvm.dbg.declare(metadata i64* %11, metadata !2908, metadata !DIExpression()), !dbg !2909
  call void @llvm.dbg.declare(metadata %struct._ftsent** %12, metadata !2910, metadata !DIExpression()), !dbg !2911
  store %struct._ftsent* null, %struct._ftsent** %12, align 8, !dbg !2911
  call void @llvm.dbg.declare(metadata %struct._ftsent** %13, metadata !2912, metadata !DIExpression()), !dbg !2913
  store %struct._ftsent* null, %struct._ftsent** %13, align 8, !dbg !2913
  call void @llvm.dbg.declare(metadata i8* %14, metadata !2914, metadata !DIExpression()), !dbg !2915
  %18 = load i32, i32* %6, align 4, !dbg !2916
  %19 = and i32 %18, -2048, !dbg !2918
  %20 = icmp ne i32 %19, 0, !dbg !2918
  br i1 %20, label %21, label %23, !dbg !2919

; <label>:21:                                     ; preds = %3
  %22 = call i32* @__errno_location() #14, !dbg !2920
  store i32 22, i32* %22, align 4, !dbg !2920
  store %struct.FTS* null, %struct.FTS** %4, align 8, !dbg !2922
  br label %259, !dbg !2922

; <label>:23:                                     ; preds = %3
  %24 = load i32, i32* %6, align 4, !dbg !2923
  %25 = and i32 %24, 4, !dbg !2925
  %26 = icmp ne i32 %25, 0, !dbg !2925
  br i1 %26, label %27, label %33, !dbg !2926

; <label>:27:                                     ; preds = %23
  %28 = load i32, i32* %6, align 4, !dbg !2927
  %29 = and i32 %28, 512, !dbg !2928
  %30 = icmp ne i32 %29, 0, !dbg !2928
  br i1 %30, label %31, label %33, !dbg !2929

; <label>:31:                                     ; preds = %27
  %32 = call i32* @__errno_location() #14, !dbg !2930
  store i32 22, i32* %32, align 4, !dbg !2930
  store %struct.FTS* null, %struct.FTS** %4, align 8, !dbg !2932
  br label %259, !dbg !2932

; <label>:33:                                     ; preds = %27, %23
  %34 = load i32, i32* %6, align 4, !dbg !2933
  %35 = and i32 %34, 18, !dbg !2935
  %36 = icmp ne i32 %35, 0, !dbg !2935
  br i1 %36, label %39, label %37, !dbg !2936

; <label>:37:                                     ; preds = %33
  %38 = call i32* @__errno_location() #14, !dbg !2937
  store i32 22, i32* %38, align 4, !dbg !2937
  store %struct.FTS* null, %struct.FTS** %4, align 8, !dbg !2939
  br label %259, !dbg !2939

; <label>:39:                                     ; preds = %33
  %40 = call noalias i8* @malloc(i64 128) #8, !dbg !2940
  %41 = bitcast i8* %40 to %struct.FTS*, !dbg !2940
  store %struct.FTS* %41, %struct.FTS** %8, align 8, !dbg !2942
  %42 = icmp eq %struct.FTS* %41, null, !dbg !2943
  br i1 %42, label %43, label %44, !dbg !2944

; <label>:43:                                     ; preds = %39
  store %struct.FTS* null, %struct.FTS** %4, align 8, !dbg !2945
  br label %259, !dbg !2945

; <label>:44:                                     ; preds = %39
  %45 = load %struct.FTS*, %struct.FTS** %8, align 8, !dbg !2946
  %46 = bitcast %struct.FTS* %45 to i8*, !dbg !2947
  call void @llvm.memset.p0i8.i64(i8* %46, i8 0, i64 128, i32 8, i1 false), !dbg !2947
  %47 = load i32 (%struct._ftsent**, %struct._ftsent**)*, i32 (%struct._ftsent**, %struct._ftsent**)** %7, align 8, !dbg !2948
  %48 = load %struct.FTS*, %struct.FTS** %8, align 8, !dbg !2949
  %49 = getelementptr inbounds %struct.FTS, %struct.FTS* %48, i32 0, i32 9, !dbg !2950
  store i32 (%struct._ftsent**, %struct._ftsent**)* %47, i32 (%struct._ftsent**, %struct._ftsent**)** %49, align 8, !dbg !2951
  %50 = load i32, i32* %6, align 4, !dbg !2952
  %51 = load %struct.FTS*, %struct.FTS** %8, align 8, !dbg !2953
  %52 = getelementptr inbounds %struct.FTS, %struct.FTS* %51, i32 0, i32 10, !dbg !2954
  store i32 %50, i32* %52, align 8, !dbg !2955
  %53 = load %struct.FTS*, %struct.FTS** %8, align 8, !dbg !2956
  %54 = getelementptr inbounds %struct.FTS, %struct.FTS* %53, i32 0, i32 10, !dbg !2956
  %55 = load i32, i32* %54, align 8, !dbg !2956
  %56 = and i32 %55, 2, !dbg !2956
  %57 = icmp ne i32 %56, 0, !dbg !2956
  br i1 %57, label %58, label %67, !dbg !2958

; <label>:58:                                     ; preds = %44
  %59 = load %struct.FTS*, %struct.FTS** %8, align 8, !dbg !2959
  %60 = getelementptr inbounds %struct.FTS, %struct.FTS* %59, i32 0, i32 10, !dbg !2959
  %61 = load i32, i32* %60, align 8, !dbg !2959
  %62 = or i32 %61, 4, !dbg !2959
  store i32 %62, i32* %60, align 8, !dbg !2959
  %63 = load %struct.FTS*, %struct.FTS** %8, align 8, !dbg !2961
  %64 = getelementptr inbounds %struct.FTS, %struct.FTS* %63, i32 0, i32 10, !dbg !2961
  %65 = load i32, i32* %64, align 8, !dbg !2961
  %66 = and i32 %65, -513, !dbg !2961
  store i32 %66, i32* %64, align 8, !dbg !2961
  br label %67, !dbg !2962

; <label>:67:                                     ; preds = %58, %44
  %68 = load %struct.FTS*, %struct.FTS** %8, align 8, !dbg !2963
  %69 = getelementptr inbounds %struct.FTS, %struct.FTS* %68, i32 0, i32 6, !dbg !2964
  store i32 -100, i32* %69, align 4, !dbg !2965
  %70 = load %struct.FTS*, %struct.FTS** %8, align 8, !dbg !2966
  %71 = getelementptr inbounds %struct.FTS, %struct.FTS* %70, i32 0, i32 10, !dbg !2966
  %72 = load i32, i32* %71, align 8, !dbg !2966
  %73 = and i32 %72, 512, !dbg !2966
  %74 = icmp ne i32 %73, 0, !dbg !2966
  br i1 %74, label %75, label %85, !dbg !2968

; <label>:75:                                     ; preds = %67
  br i1 true, label %85, label %76, !dbg !2969

; <label>:76:                                     ; preds = %75
  call void @llvm.dbg.declare(metadata i32* %15, metadata !2970, metadata !DIExpression()), !dbg !2972
  %77 = call i32 (i8*, i32, ...) @open_safer(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.150, i32 0, i32 0), i32 0), !dbg !2973
  store i32 %77, i32* %15, align 4, !dbg !2972
  %78 = load i32, i32* %15, align 4, !dbg !2974
  %79 = icmp slt i32 %78, 0, !dbg !2976
  br i1 %79, label %80, label %81, !dbg !2977

; <label>:80:                                     ; preds = %76
  br label %84, !dbg !2978

; <label>:81:                                     ; preds = %76
  %82 = load i32, i32* %15, align 4, !dbg !2980
  %83 = call i32 @close(i32 %82), !dbg !2982
  br label %84

; <label>:84:                                     ; preds = %81, %80
  br label %85, !dbg !2983

; <label>:85:                                     ; preds = %84, %75, %67
  call void @llvm.dbg.declare(metadata i64* %16, metadata !2984, metadata !DIExpression()), !dbg !2986
  %86 = load i8**, i8*** %5, align 8, !dbg !2987
  %87 = call i64 @fts_maxarglen(i8** %86), !dbg !2988
  store i64 %87, i64* %16, align 8, !dbg !2986
  %88 = load %struct.FTS*, %struct.FTS** %8, align 8, !dbg !2989
  %89 = load i64, i64* %16, align 8, !dbg !2991
  %90 = icmp ugt i64 %89, 4096, !dbg !2991
  br i1 %90, label %91, label %93, !dbg !2991

; <label>:91:                                     ; preds = %85
  %92 = load i64, i64* %16, align 8, !dbg !2991
  br label %94, !dbg !2991

; <label>:93:                                     ; preds = %85
  br label %94, !dbg !2991

; <label>:94:                                     ; preds = %93, %91
  %95 = phi i64 [ %92, %91 ], [ 4096, %93 ], !dbg !2991
  %96 = call zeroext i1 @fts_palloc(%struct.FTS* %88, i64 %95), !dbg !2992
  br i1 %96, label %98, label %97, !dbg !2993

; <label>:97:                                     ; preds = %94
  br label %256, !dbg !2994

; <label>:98:                                     ; preds = %94
  %99 = load i8**, i8*** %5, align 8, !dbg !2995
  %100 = load i8*, i8** %99, align 8, !dbg !2997
  %101 = icmp ne i8* %100, null, !dbg !2998
  br i1 %101, label %102, label %110, !dbg !2999

; <label>:102:                                    ; preds = %98
  %103 = load %struct.FTS*, %struct.FTS** %8, align 8, !dbg !3000
  %104 = call %struct._ftsent* @fts_alloc(%struct.FTS* %103, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1.151, i32 0, i32 0), i64 0), !dbg !3003
  store %struct._ftsent* %104, %struct._ftsent** %12, align 8, !dbg !3004
  %105 = icmp eq %struct._ftsent* %104, null, !dbg !3005
  br i1 %105, label %106, label %107, !dbg !3006

; <label>:106:                                    ; preds = %102
  br label %252, !dbg !3007

; <label>:107:                                    ; preds = %102
  %108 = load %struct._ftsent*, %struct._ftsent** %12, align 8, !dbg !3008
  %109 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %108, i32 0, i32 11, !dbg !3009
  store i64 -1, i64* %109, align 8, !dbg !3010
  br label %110, !dbg !3011

; <label>:110:                                    ; preds = %107, %98
  %111 = load i32 (%struct._ftsent**, %struct._ftsent**)*, i32 (%struct._ftsent**, %struct._ftsent**)** %7, align 8, !dbg !3012
  %112 = icmp eq i32 (%struct._ftsent**, %struct._ftsent**)* %111, null, !dbg !3013
  br i1 %112, label %119, label %113, !dbg !3014

; <label>:113:                                    ; preds = %110
  %114 = load %struct.FTS*, %struct.FTS** %8, align 8, !dbg !3015
  %115 = getelementptr inbounds %struct.FTS, %struct.FTS* %114, i32 0, i32 10, !dbg !3015
  %116 = load i32, i32* %115, align 8, !dbg !3015
  %117 = and i32 %116, 1024, !dbg !3015
  %118 = icmp ne i32 %117, 0, !dbg !3014
  br label %119, !dbg !3014

; <label>:119:                                    ; preds = %113, %110
  %120 = phi i1 [ true, %110 ], [ %118, %113 ]
  %121 = zext i1 %120 to i8, !dbg !3016
  store i8 %121, i8* %14, align 1, !dbg !3016
  store %struct._ftsent* null, %struct._ftsent** %10, align 8, !dbg !3017
  store i64 0, i64* %11, align 8, !dbg !3019
  br label %122, !dbg !3020

; <label>:122:                                    ; preds = %185, %119
  %123 = load i8**, i8*** %5, align 8, !dbg !3021
  %124 = load i8*, i8** %123, align 8, !dbg !3023
  %125 = icmp ne i8* %124, null, !dbg !3024
  br i1 %125, label %126, label %190, !dbg !3025

; <label>:126:                                    ; preds = %122
  call void @llvm.dbg.declare(metadata i64* %17, metadata !3026, metadata !DIExpression()), !dbg !3028
  %127 = load i8**, i8*** %5, align 8, !dbg !3029
  %128 = load i8*, i8** %127, align 8, !dbg !3030
  %129 = call i64 @strlen(i8* %128) #12, !dbg !3031
  store i64 %129, i64* %17, align 8, !dbg !3028
  %130 = load %struct.FTS*, %struct.FTS** %8, align 8, !dbg !3032
  %131 = load i8**, i8*** %5, align 8, !dbg !3034
  %132 = load i8*, i8** %131, align 8, !dbg !3035
  %133 = load i64, i64* %17, align 8, !dbg !3036
  %134 = call %struct._ftsent* @fts_alloc(%struct.FTS* %130, i8* %132, i64 %133), !dbg !3037
  store %struct._ftsent* %134, %struct._ftsent** %9, align 8, !dbg !3038
  %135 = icmp eq %struct._ftsent* %134, null, !dbg !3039
  br i1 %135, label %136, label %137, !dbg !3040

; <label>:136:                                    ; preds = %126
  br label %248, !dbg !3041

; <label>:137:                                    ; preds = %126
  %138 = load %struct._ftsent*, %struct._ftsent** %9, align 8, !dbg !3042
  %139 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %138, i32 0, i32 11, !dbg !3043
  store i64 0, i64* %139, align 8, !dbg !3044
  %140 = load %struct._ftsent*, %struct._ftsent** %12, align 8, !dbg !3045
  %141 = load %struct._ftsent*, %struct._ftsent** %9, align 8, !dbg !3046
  %142 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %141, i32 0, i32 1, !dbg !3047
  store %struct._ftsent* %140, %struct._ftsent** %142, align 8, !dbg !3048
  %143 = load %struct._ftsent*, %struct._ftsent** %9, align 8, !dbg !3049
  %144 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %143, i32 0, i32 18, !dbg !3050
  %145 = getelementptr inbounds [1 x i8], [1 x i8]* %144, i32 0, i32 0, !dbg !3049
  %146 = load %struct._ftsent*, %struct._ftsent** %9, align 8, !dbg !3051
  %147 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %146, i32 0, i32 5, !dbg !3052
  store i8* %145, i8** %147, align 8, !dbg !3053
  %148 = load i8, i8* %14, align 1, !dbg !3054
  %149 = trunc i8 %148 to i1, !dbg !3054
  br i1 %149, label %150, label %157, !dbg !3056

; <label>:150:                                    ; preds = %137
  %151 = load %struct._ftsent*, %struct._ftsent** %10, align 8, !dbg !3057
  %152 = icmp ne %struct._ftsent* %151, null, !dbg !3058
  br i1 %152, label %153, label %157, !dbg !3059

; <label>:153:                                    ; preds = %150
  %154 = load %struct._ftsent*, %struct._ftsent** %9, align 8, !dbg !3060
  %155 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %154, i32 0, i32 14, !dbg !3062
  store i16 11, i16* %155, align 8, !dbg !3063
  %156 = load %struct._ftsent*, %struct._ftsent** %9, align 8, !dbg !3064
  call void @fts_set_stat_required(%struct._ftsent* %156, i1 zeroext true), !dbg !3065
  br label %163, !dbg !3066

; <label>:157:                                    ; preds = %150, %137
  %158 = load %struct.FTS*, %struct.FTS** %8, align 8, !dbg !3067
  %159 = load %struct._ftsent*, %struct._ftsent** %9, align 8, !dbg !3069
  %160 = call zeroext i16 @fts_stat(%struct.FTS* %158, %struct._ftsent* %159, i1 zeroext false), !dbg !3070
  %161 = load %struct._ftsent*, %struct._ftsent** %9, align 8, !dbg !3071
  %162 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %161, i32 0, i32 14, !dbg !3072
  store i16 %160, i16* %162, align 8, !dbg !3073
  br label %163

; <label>:163:                                    ; preds = %157, %153
  %164 = load i32 (%struct._ftsent**, %struct._ftsent**)*, i32 (%struct._ftsent**, %struct._ftsent**)** %7, align 8, !dbg !3074
  %165 = icmp ne i32 (%struct._ftsent**, %struct._ftsent**)* %164, null, !dbg !3074
  br i1 %165, label %166, label %171, !dbg !3076

; <label>:166:                                    ; preds = %163
  %167 = load %struct._ftsent*, %struct._ftsent** %10, align 8, !dbg !3077
  %168 = load %struct._ftsent*, %struct._ftsent** %9, align 8, !dbg !3079
  %169 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %168, i32 0, i32 2, !dbg !3080
  store %struct._ftsent* %167, %struct._ftsent** %169, align 8, !dbg !3081
  %170 = load %struct._ftsent*, %struct._ftsent** %9, align 8, !dbg !3082
  store %struct._ftsent* %170, %struct._ftsent** %10, align 8, !dbg !3083
  br label %184, !dbg !3084

; <label>:171:                                    ; preds = %163
  %172 = load %struct._ftsent*, %struct._ftsent** %9, align 8, !dbg !3085
  %173 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %172, i32 0, i32 2, !dbg !3087
  store %struct._ftsent* null, %struct._ftsent** %173, align 8, !dbg !3088
  %174 = load %struct._ftsent*, %struct._ftsent** %10, align 8, !dbg !3089
  %175 = icmp eq %struct._ftsent* %174, null, !dbg !3091
  br i1 %175, label %176, label %178, !dbg !3092

; <label>:176:                                    ; preds = %171
  %177 = load %struct._ftsent*, %struct._ftsent** %9, align 8, !dbg !3093
  store %struct._ftsent* %177, %struct._ftsent** %10, align 8, !dbg !3094
  store %struct._ftsent* %177, %struct._ftsent** %13, align 8, !dbg !3095
  br label %183, !dbg !3096

; <label>:178:                                    ; preds = %171
  %179 = load %struct._ftsent*, %struct._ftsent** %9, align 8, !dbg !3097
  %180 = load %struct._ftsent*, %struct._ftsent** %13, align 8, !dbg !3099
  %181 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %180, i32 0, i32 2, !dbg !3100
  store %struct._ftsent* %179, %struct._ftsent** %181, align 8, !dbg !3101
  %182 = load %struct._ftsent*, %struct._ftsent** %9, align 8, !dbg !3102
  store %struct._ftsent* %182, %struct._ftsent** %13, align 8, !dbg !3103
  br label %183

; <label>:183:                                    ; preds = %178, %176
  br label %184

; <label>:184:                                    ; preds = %183, %166
  br label %185, !dbg !3104

; <label>:185:                                    ; preds = %184
  %186 = load i8**, i8*** %5, align 8, !dbg !3105
  %187 = getelementptr inbounds i8*, i8** %186, i32 1, !dbg !3105
  store i8** %187, i8*** %5, align 8, !dbg !3105
  %188 = load i64, i64* %11, align 8, !dbg !3106
  %189 = add i64 %188, 1, !dbg !3106
  store i64 %189, i64* %11, align 8, !dbg !3106
  br label %122, !dbg !3107, !llvm.loop !3108

; <label>:190:                                    ; preds = %122
  %191 = load i32 (%struct._ftsent**, %struct._ftsent**)*, i32 (%struct._ftsent**, %struct._ftsent**)** %7, align 8, !dbg !3110
  %192 = icmp ne i32 (%struct._ftsent**, %struct._ftsent**)* %191, null, !dbg !3110
  br i1 %192, label %193, label %201, !dbg !3112

; <label>:193:                                    ; preds = %190
  %194 = load i64, i64* %11, align 8, !dbg !3113
  %195 = icmp ugt i64 %194, 1, !dbg !3114
  br i1 %195, label %196, label %201, !dbg !3115

; <label>:196:                                    ; preds = %193
  %197 = load %struct.FTS*, %struct.FTS** %8, align 8, !dbg !3116
  %198 = load %struct._ftsent*, %struct._ftsent** %10, align 8, !dbg !3117
  %199 = load i64, i64* %11, align 8, !dbg !3118
  %200 = call %struct._ftsent* @fts_sort(%struct.FTS* %197, %struct._ftsent* %198, i64 %199), !dbg !3119
  store %struct._ftsent* %200, %struct._ftsent** %10, align 8, !dbg !3120
  br label %201, !dbg !3121

; <label>:201:                                    ; preds = %196, %193, %190
  %202 = load %struct.FTS*, %struct.FTS** %8, align 8, !dbg !3122
  %203 = call %struct._ftsent* @fts_alloc(%struct.FTS* %202, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1.151, i32 0, i32 0), i64 0), !dbg !3124
  %204 = load %struct.FTS*, %struct.FTS** %8, align 8, !dbg !3125
  %205 = getelementptr inbounds %struct.FTS, %struct.FTS* %204, i32 0, i32 0, !dbg !3126
  store %struct._ftsent* %203, %struct._ftsent** %205, align 8, !dbg !3127
  %206 = icmp eq %struct._ftsent* %203, null, !dbg !3128
  br i1 %206, label %207, label %208, !dbg !3129

; <label>:207:                                    ; preds = %201
  br label %248, !dbg !3130

; <label>:208:                                    ; preds = %201
  %209 = load %struct._ftsent*, %struct._ftsent** %10, align 8, !dbg !3131
  %210 = load %struct.FTS*, %struct.FTS** %8, align 8, !dbg !3132
  %211 = getelementptr inbounds %struct.FTS, %struct.FTS* %210, i32 0, i32 0, !dbg !3133
  %212 = load %struct._ftsent*, %struct._ftsent** %211, align 8, !dbg !3133
  %213 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %212, i32 0, i32 2, !dbg !3134
  store %struct._ftsent* %209, %struct._ftsent** %213, align 8, !dbg !3135
  %214 = load %struct.FTS*, %struct.FTS** %8, align 8, !dbg !3136
  %215 = getelementptr inbounds %struct.FTS, %struct.FTS* %214, i32 0, i32 0, !dbg !3137
  %216 = load %struct._ftsent*, %struct._ftsent** %215, align 8, !dbg !3137
  %217 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %216, i32 0, i32 14, !dbg !3138
  store i16 9, i16* %217, align 8, !dbg !3139
  %218 = load %struct.FTS*, %struct.FTS** %8, align 8, !dbg !3140
  %219 = call zeroext i1 @setup_dir(%struct.FTS* %218), !dbg !3142
  br i1 %219, label %221, label %220, !dbg !3143

; <label>:220:                                    ; preds = %208
  br label %248, !dbg !3144

; <label>:221:                                    ; preds = %208
  %222 = load %struct.FTS*, %struct.FTS** %8, align 8, !dbg !3145
  %223 = getelementptr inbounds %struct.FTS, %struct.FTS* %222, i32 0, i32 10, !dbg !3145
  %224 = load i32, i32* %223, align 8, !dbg !3145
  %225 = and i32 %224, 4, !dbg !3145
  %226 = icmp ne i32 %225, 0, !dbg !3145
  br i1 %226, label %244, label %227, !dbg !3147

; <label>:227:                                    ; preds = %221
  %228 = load %struct.FTS*, %struct.FTS** %8, align 8, !dbg !3148
  %229 = getelementptr inbounds %struct.FTS, %struct.FTS* %228, i32 0, i32 10, !dbg !3148
  %230 = load i32, i32* %229, align 8, !dbg !3148
  %231 = and i32 %230, 512, !dbg !3148
  %232 = icmp ne i32 %231, 0, !dbg !3148
  br i1 %232, label %244, label %233, !dbg !3149

; <label>:233:                                    ; preds = %227
  %234 = load %struct.FTS*, %struct.FTS** %8, align 8, !dbg !3150
  %235 = call i32 @diropen(%struct.FTS* %234, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.150, i32 0, i32 0)), !dbg !3151
  %236 = load %struct.FTS*, %struct.FTS** %8, align 8, !dbg !3152
  %237 = getelementptr inbounds %struct.FTS, %struct.FTS* %236, i32 0, i32 5, !dbg !3153
  store i32 %235, i32* %237, align 8, !dbg !3154
  %238 = icmp slt i32 %235, 0, !dbg !3155
  br i1 %238, label %239, label %244, !dbg !3156

; <label>:239:                                    ; preds = %233
  %240 = load %struct.FTS*, %struct.FTS** %8, align 8, !dbg !3157
  %241 = getelementptr inbounds %struct.FTS, %struct.FTS* %240, i32 0, i32 10, !dbg !3157
  %242 = load i32, i32* %241, align 8, !dbg !3157
  %243 = or i32 %242, 4, !dbg !3157
  store i32 %243, i32* %241, align 8, !dbg !3157
  br label %244, !dbg !3157

; <label>:244:                                    ; preds = %239, %233, %227, %221
  %245 = load %struct.FTS*, %struct.FTS** %8, align 8, !dbg !3158
  %246 = getelementptr inbounds %struct.FTS, %struct.FTS* %245, i32 0, i32 13, !dbg !3159
  call void @i_ring_init(%struct.I_ring* %246, i32 -1), !dbg !3160
  %247 = load %struct.FTS*, %struct.FTS** %8, align 8, !dbg !3161
  store %struct.FTS* %247, %struct.FTS** %4, align 8, !dbg !3162
  br label %259, !dbg !3162

; <label>:248:                                    ; preds = %220, %207, %136
  %249 = load %struct._ftsent*, %struct._ftsent** %10, align 8, !dbg !3163
  call void @fts_lfree(%struct._ftsent* %249), !dbg !3164
  %250 = load %struct._ftsent*, %struct._ftsent** %12, align 8, !dbg !3165
  %251 = bitcast %struct._ftsent* %250 to i8*, !dbg !3165
  call void @free(i8* %251) #8, !dbg !3166
  br label %252, !dbg !3166

; <label>:252:                                    ; preds = %248, %106
  %253 = load %struct.FTS*, %struct.FTS** %8, align 8, !dbg !3167
  %254 = getelementptr inbounds %struct.FTS, %struct.FTS* %253, i32 0, i32 4, !dbg !3168
  %255 = load i8*, i8** %254, align 8, !dbg !3168
  call void @free(i8* %255) #8, !dbg !3169
  br label %256, !dbg !3169

; <label>:256:                                    ; preds = %252, %97
  %257 = load %struct.FTS*, %struct.FTS** %8, align 8, !dbg !3170
  %258 = bitcast %struct.FTS* %257 to i8*, !dbg !3170
  call void @free(i8* %258) #8, !dbg !3171
  store %struct.FTS* null, %struct.FTS** %4, align 8, !dbg !3172
  br label %259, !dbg !3172

; <label>:259:                                    ; preds = %256, %244, %43, %37, %31, %21
  %260 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !3173
  ret %struct.FTS* %260, !dbg !3173
}

; Function Attrs: nounwind
declare noalias i8* @malloc(i64) #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i32, i1) #10

; Function Attrs: noinline nounwind uwtable
define internal i64 @fts_maxarglen(i8**) #3 !dbg !3174 {
  %2 = alloca i8**, align 8
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  store i8** %0, i8*** %2, align 8
  call void @llvm.dbg.declare(metadata i8*** %2, metadata !3177, metadata !DIExpression()), !dbg !3178
  call void @llvm.dbg.declare(metadata i64* %3, metadata !3179, metadata !DIExpression()), !dbg !3180
  call void @llvm.dbg.declare(metadata i64* %4, metadata !3181, metadata !DIExpression()), !dbg !3182
  store i64 0, i64* %4, align 8, !dbg !3183
  br label %5, !dbg !3185

; <label>:5:                                      ; preds = %18, %1
  %6 = load i8**, i8*** %2, align 8, !dbg !3186
  %7 = load i8*, i8** %6, align 8, !dbg !3188
  %8 = icmp ne i8* %7, null, !dbg !3189
  br i1 %8, label %9, label %21, !dbg !3189

; <label>:9:                                      ; preds = %5
  %10 = load i8**, i8*** %2, align 8, !dbg !3190
  %11 = load i8*, i8** %10, align 8, !dbg !3192
  %12 = call i64 @strlen(i8* %11) #12, !dbg !3193
  store i64 %12, i64* %3, align 8, !dbg !3194
  %13 = load i64, i64* %4, align 8, !dbg !3195
  %14 = icmp ugt i64 %12, %13, !dbg !3196
  br i1 %14, label %15, label %17, !dbg !3197

; <label>:15:                                     ; preds = %9
  %16 = load i64, i64* %3, align 8, !dbg !3198
  store i64 %16, i64* %4, align 8, !dbg !3199
  br label %17, !dbg !3200

; <label>:17:                                     ; preds = %15, %9
  br label %18, !dbg !3195

; <label>:18:                                     ; preds = %17
  %19 = load i8**, i8*** %2, align 8, !dbg !3201
  %20 = getelementptr inbounds i8*, i8** %19, i32 1, !dbg !3201
  store i8** %20, i8*** %2, align 8, !dbg !3201
  br label %5, !dbg !3202, !llvm.loop !3203

; <label>:21:                                     ; preds = %5
  %22 = load i64, i64* %4, align 8, !dbg !3205
  %23 = add i64 %22, 1, !dbg !3206
  ret i64 %23, !dbg !3207
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i1 @fts_palloc(%struct.FTS*, i64) #3 !dbg !3208 {
  %3 = alloca i1, align 1
  %4 = alloca %struct.FTS*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i64, align 8
  store %struct.FTS* %0, %struct.FTS** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.FTS** %4, metadata !3211, metadata !DIExpression()), !dbg !3212
  store i64 %1, i64* %5, align 8
  call void @llvm.dbg.declare(metadata i64* %5, metadata !3213, metadata !DIExpression()), !dbg !3214
  call void @llvm.dbg.declare(metadata i8** %6, metadata !3215, metadata !DIExpression()), !dbg !3216
  call void @llvm.dbg.declare(metadata i64* %7, metadata !3217, metadata !DIExpression()), !dbg !3218
  %8 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !3219
  %9 = getelementptr inbounds %struct.FTS, %struct.FTS* %8, i32 0, i32 7, !dbg !3220
  %10 = load i64, i64* %9, align 8, !dbg !3220
  %11 = load i64, i64* %5, align 8, !dbg !3221
  %12 = add i64 %10, %11, !dbg !3222
  %13 = add i64 %12, 256, !dbg !3223
  store i64 %13, i64* %7, align 8, !dbg !3218
  %14 = load i64, i64* %7, align 8, !dbg !3224
  %15 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !3226
  %16 = getelementptr inbounds %struct.FTS, %struct.FTS* %15, i32 0, i32 7, !dbg !3227
  %17 = load i64, i64* %16, align 8, !dbg !3227
  %18 = icmp ult i64 %14, %17, !dbg !3228
  br i1 %18, label %19, label %26, !dbg !3229

; <label>:19:                                     ; preds = %2
  %20 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !3230
  %21 = getelementptr inbounds %struct.FTS, %struct.FTS* %20, i32 0, i32 4, !dbg !3232
  %22 = load i8*, i8** %21, align 8, !dbg !3232
  call void @free(i8* %22) #8, !dbg !3233
  %23 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !3234
  %24 = getelementptr inbounds %struct.FTS, %struct.FTS* %23, i32 0, i32 4, !dbg !3235
  store i8* null, i8** %24, align 8, !dbg !3236
  %25 = call i32* @__errno_location() #14, !dbg !3237
  store i32 36, i32* %25, align 4, !dbg !3237
  store i1 false, i1* %3, align 1, !dbg !3238
  br label %49, !dbg !3238

; <label>:26:                                     ; preds = %2
  %27 = load i64, i64* %7, align 8, !dbg !3239
  %28 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !3240
  %29 = getelementptr inbounds %struct.FTS, %struct.FTS* %28, i32 0, i32 7, !dbg !3241
  store i64 %27, i64* %29, align 8, !dbg !3242
  %30 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !3243
  %31 = getelementptr inbounds %struct.FTS, %struct.FTS* %30, i32 0, i32 4, !dbg !3244
  %32 = load i8*, i8** %31, align 8, !dbg !3244
  %33 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !3245
  %34 = getelementptr inbounds %struct.FTS, %struct.FTS* %33, i32 0, i32 7, !dbg !3246
  %35 = load i64, i64* %34, align 8, !dbg !3246
  %36 = call i8* @realloc(i8* %32, i64 %35) #8, !dbg !3247
  store i8* %36, i8** %6, align 8, !dbg !3248
  %37 = load i8*, i8** %6, align 8, !dbg !3249
  %38 = icmp eq i8* %37, null, !dbg !3251
  br i1 %38, label %39, label %45, !dbg !3252

; <label>:39:                                     ; preds = %26
  %40 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !3253
  %41 = getelementptr inbounds %struct.FTS, %struct.FTS* %40, i32 0, i32 4, !dbg !3255
  %42 = load i8*, i8** %41, align 8, !dbg !3255
  call void @free(i8* %42) #8, !dbg !3256
  %43 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !3257
  %44 = getelementptr inbounds %struct.FTS, %struct.FTS* %43, i32 0, i32 4, !dbg !3258
  store i8* null, i8** %44, align 8, !dbg !3259
  store i1 false, i1* %3, align 1, !dbg !3260
  br label %49, !dbg !3260

; <label>:45:                                     ; preds = %26
  %46 = load i8*, i8** %6, align 8, !dbg !3261
  %47 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !3262
  %48 = getelementptr inbounds %struct.FTS, %struct.FTS* %47, i32 0, i32 4, !dbg !3263
  store i8* %46, i8** %48, align 8, !dbg !3264
  store i1 true, i1* %3, align 1, !dbg !3265
  br label %49, !dbg !3265

; <label>:49:                                     ; preds = %45, %39, %19
  %50 = load i1, i1* %3, align 1, !dbg !3266
  ret i1 %50, !dbg !3266
}

; Function Attrs: noinline nounwind uwtable
define internal %struct._ftsent* @fts_alloc(%struct.FTS*, i8*, i64) #3 !dbg !3267 {
  %4 = alloca %struct._ftsent*, align 8
  %5 = alloca %struct.FTS*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i64, align 8
  %8 = alloca %struct._ftsent*, align 8
  %9 = alloca i64, align 8
  store %struct.FTS* %0, %struct.FTS** %5, align 8
  call void @llvm.dbg.declare(metadata %struct.FTS** %5, metadata !3270, metadata !DIExpression()), !dbg !3271
  store i8* %1, i8** %6, align 8
  call void @llvm.dbg.declare(metadata i8** %6, metadata !3272, metadata !DIExpression()), !dbg !3273
  store i64 %2, i64* %7, align 8
  call void @llvm.dbg.declare(metadata i64* %7, metadata !3274, metadata !DIExpression()), !dbg !3275
  call void @llvm.dbg.declare(metadata %struct._ftsent** %8, metadata !3276, metadata !DIExpression()), !dbg !3277
  call void @llvm.dbg.declare(metadata i64* %9, metadata !3278, metadata !DIExpression()), !dbg !3279
  %10 = load i64, i64* %7, align 8, !dbg !3280
  %11 = add i64 264, %10, !dbg !3281
  store i64 %11, i64* %9, align 8, !dbg !3282
  %12 = load i64, i64* %9, align 8, !dbg !3283
  %13 = call noalias i8* @malloc(i64 %12) #8, !dbg !3285
  %14 = bitcast i8* %13 to %struct._ftsent*, !dbg !3285
  store %struct._ftsent* %14, %struct._ftsent** %8, align 8, !dbg !3286
  %15 = icmp eq %struct._ftsent* %14, null, !dbg !3287
  br i1 %15, label %16, label %17, !dbg !3288

; <label>:16:                                     ; preds = %3
  store %struct._ftsent* null, %struct._ftsent** %4, align 8, !dbg !3289
  br label %49, !dbg !3289

; <label>:17:                                     ; preds = %3
  %18 = load %struct._ftsent*, %struct._ftsent** %8, align 8, !dbg !3290
  %19 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %18, i32 0, i32 18, !dbg !3291
  %20 = getelementptr inbounds [1 x i8], [1 x i8]* %19, i32 0, i32 0, !dbg !3292
  %21 = load i8*, i8** %6, align 8, !dbg !3293
  %22 = load i64, i64* %7, align 8, !dbg !3294
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %20, i8* %21, i64 %22, i32 1, i1 false), !dbg !3292
  %23 = load %struct._ftsent*, %struct._ftsent** %8, align 8, !dbg !3295
  %24 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %23, i32 0, i32 18, !dbg !3296
  %25 = load i64, i64* %7, align 8, !dbg !3297
  %26 = getelementptr inbounds [1 x i8], [1 x i8]* %24, i64 0, i64 %25, !dbg !3295
  store i8 0, i8* %26, align 1, !dbg !3298
  %27 = load i64, i64* %7, align 8, !dbg !3299
  %28 = load %struct._ftsent*, %struct._ftsent** %8, align 8, !dbg !3300
  %29 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %28, i32 0, i32 12, !dbg !3301
  store i64 %27, i64* %29, align 8, !dbg !3302
  %30 = load %struct.FTS*, %struct.FTS** %5, align 8, !dbg !3303
  %31 = load %struct._ftsent*, %struct._ftsent** %8, align 8, !dbg !3304
  %32 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %31, i32 0, i32 10, !dbg !3305
  store %struct.FTS* %30, %struct.FTS** %32, align 8, !dbg !3306
  %33 = load %struct.FTS*, %struct.FTS** %5, align 8, !dbg !3307
  %34 = getelementptr inbounds %struct.FTS, %struct.FTS* %33, i32 0, i32 4, !dbg !3308
  %35 = load i8*, i8** %34, align 8, !dbg !3308
  %36 = load %struct._ftsent*, %struct._ftsent** %8, align 8, !dbg !3309
  %37 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %36, i32 0, i32 6, !dbg !3310
  store i8* %35, i8** %37, align 8, !dbg !3311
  %38 = load %struct._ftsent*, %struct._ftsent** %8, align 8, !dbg !3312
  %39 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %38, i32 0, i32 7, !dbg !3313
  store i32 0, i32* %39, align 8, !dbg !3314
  %40 = load %struct._ftsent*, %struct._ftsent** %8, align 8, !dbg !3315
  %41 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %40, i32 0, i32 15, !dbg !3316
  store i16 0, i16* %41, align 2, !dbg !3317
  %42 = load %struct._ftsent*, %struct._ftsent** %8, align 8, !dbg !3318
  %43 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %42, i32 0, i32 16, !dbg !3319
  store i16 3, i16* %43, align 4, !dbg !3320
  %44 = load %struct._ftsent*, %struct._ftsent** %8, align 8, !dbg !3321
  %45 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %44, i32 0, i32 3, !dbg !3322
  store i64 0, i64* %45, align 8, !dbg !3323
  %46 = load %struct._ftsent*, %struct._ftsent** %8, align 8, !dbg !3324
  %47 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %46, i32 0, i32 4, !dbg !3325
  store i8* null, i8** %47, align 8, !dbg !3326
  %48 = load %struct._ftsent*, %struct._ftsent** %8, align 8, !dbg !3327
  store %struct._ftsent* %48, %struct._ftsent** %4, align 8, !dbg !3328
  br label %49, !dbg !3328

; <label>:49:                                     ; preds = %17, %16
  %50 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !3329
  ret %struct._ftsent* %50, !dbg !3329
}

; Function Attrs: noinline nounwind uwtable
define internal void @fts_set_stat_required(%struct._ftsent*, i1 zeroext) #3 !dbg !3330 {
  %3 = alloca %struct._ftsent*, align 8
  %4 = alloca i8, align 1
  store %struct._ftsent* %0, %struct._ftsent** %3, align 8
  call void @llvm.dbg.declare(metadata %struct._ftsent** %3, metadata !3333, metadata !DIExpression()), !dbg !3334
  %5 = zext i1 %1 to i8
  store i8 %5, i8* %4, align 1
  call void @llvm.dbg.declare(metadata i8* %4, metadata !3335, metadata !DIExpression()), !dbg !3336
  br label %6, !dbg !3337, !llvm.loop !3338

; <label>:6:                                      ; preds = %2
  %7 = load %struct._ftsent*, %struct._ftsent** %3, align 8, !dbg !3339
  %8 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %7, i32 0, i32 14, !dbg !3339
  %9 = load i16, i16* %8, align 8, !dbg !3339
  %10 = zext i16 %9 to i32, !dbg !3339
  %11 = icmp eq i32 %10, 11, !dbg !3339
  br i1 %11, label %13, label %12, !dbg !3342

; <label>:12:                                     ; preds = %6
  call void @abort() #11, !dbg !3339
  unreachable, !dbg !3339

; <label>:13:                                     ; preds = %6
  br label %14, !dbg !3342

; <label>:14:                                     ; preds = %13
  %15 = load i8, i8* %4, align 1, !dbg !3343
  %16 = trunc i8 %15 to i1, !dbg !3343
  %17 = zext i1 %16 to i64, !dbg !3343
  %18 = select i1 %16, i32 2, i32 1, !dbg !3343
  %19 = sext i32 %18 to i64, !dbg !3344
  %20 = load %struct._ftsent*, %struct._ftsent** %3, align 8, !dbg !3345
  %21 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %20, i32 0, i32 17, !dbg !3346
  %22 = getelementptr inbounds [1 x %struct.stat], [1 x %struct.stat]* %21, i32 0, i32 0, !dbg !3347
  %23 = getelementptr inbounds %struct.stat, %struct.stat* %22, i32 0, i32 8, !dbg !3347
  store i64 %19, i64* %23, align 8, !dbg !3348
  ret void, !dbg !3349
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i16 @fts_stat(%struct.FTS*, %struct._ftsent*, i1 zeroext) #3 !dbg !3350 {
  %4 = alloca i16, align 2
  %5 = alloca %struct.FTS*, align 8
  %6 = alloca %struct._ftsent*, align 8
  %7 = alloca i8, align 1
  %8 = alloca %struct.stat*, align 8
  %9 = alloca i32, align 4
  store %struct.FTS* %0, %struct.FTS** %5, align 8
  call void @llvm.dbg.declare(metadata %struct.FTS** %5, metadata !3353, metadata !DIExpression()), !dbg !3354
  store %struct._ftsent* %1, %struct._ftsent** %6, align 8
  call void @llvm.dbg.declare(metadata %struct._ftsent** %6, metadata !3355, metadata !DIExpression()), !dbg !3356
  %10 = zext i1 %2 to i8
  store i8 %10, i8* %7, align 1
  call void @llvm.dbg.declare(metadata i8* %7, metadata !3357, metadata !DIExpression()), !dbg !3358
  call void @llvm.dbg.declare(metadata %struct.stat** %8, metadata !3359, metadata !DIExpression()), !dbg !3361
  %11 = load %struct._ftsent*, %struct._ftsent** %6, align 8, !dbg !3362
  %12 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %11, i32 0, i32 17, !dbg !3363
  %13 = getelementptr inbounds [1 x %struct.stat], [1 x %struct.stat]* %12, i32 0, i32 0, !dbg !3362
  store %struct.stat* %13, %struct.stat** %8, align 8, !dbg !3361
  call void @llvm.dbg.declare(metadata i32* %9, metadata !3364, metadata !DIExpression()), !dbg !3365
  %14 = load %struct._ftsent*, %struct._ftsent** %6, align 8, !dbg !3366
  %15 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %14, i32 0, i32 11, !dbg !3368
  %16 = load i64, i64* %15, align 8, !dbg !3368
  %17 = icmp eq i64 %16, 0, !dbg !3369
  br i1 %17, label %18, label %25, !dbg !3370

; <label>:18:                                     ; preds = %3
  %19 = load %struct.FTS*, %struct.FTS** %5, align 8, !dbg !3371
  %20 = getelementptr inbounds %struct.FTS, %struct.FTS* %19, i32 0, i32 10, !dbg !3371
  %21 = load i32, i32* %20, align 8, !dbg !3371
  %22 = and i32 %21, 1, !dbg !3371
  %23 = icmp ne i32 %22, 0, !dbg !3371
  br i1 %23, label %24, label %25, !dbg !3372

; <label>:24:                                     ; preds = %18
  store i8 1, i8* %7, align 1, !dbg !3373
  br label %25, !dbg !3374

; <label>:25:                                     ; preds = %24, %18, %3
  %26 = load %struct.FTS*, %struct.FTS** %5, align 8, !dbg !3375
  %27 = getelementptr inbounds %struct.FTS, %struct.FTS* %26, i32 0, i32 10, !dbg !3375
  %28 = load i32, i32* %27, align 8, !dbg !3375
  %29 = and i32 %28, 2, !dbg !3375
  %30 = icmp ne i32 %29, 0, !dbg !3375
  br i1 %30, label %34, label %31, !dbg !3377

; <label>:31:                                     ; preds = %25
  %32 = load i8, i8* %7, align 1, !dbg !3378
  %33 = trunc i8 %32 to i1, !dbg !3378
  br i1 %33, label %34, label %61, !dbg !3379

; <label>:34:                                     ; preds = %31, %25
  %35 = load %struct._ftsent*, %struct._ftsent** %6, align 8, !dbg !3380
  %36 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %35, i32 0, i32 5, !dbg !3383
  %37 = load i8*, i8** %36, align 8, !dbg !3383
  %38 = load %struct.stat*, %struct.stat** %8, align 8, !dbg !3384
  %39 = call i32 @stat(i8* %37, %struct.stat* %38) #8, !dbg !3385
  %40 = icmp ne i32 %39, 0, !dbg !3385
  br i1 %40, label %41, label %60, !dbg !3386

; <label>:41:                                     ; preds = %34
  %42 = call i32* @__errno_location() #14, !dbg !3387
  %43 = load i32, i32* %42, align 4, !dbg !3387
  store i32 %43, i32* %9, align 4, !dbg !3389
  %44 = call i32* @__errno_location() #14, !dbg !3390
  %45 = load i32, i32* %44, align 4, !dbg !3390
  %46 = icmp eq i32 %45, 2, !dbg !3392
  br i1 %46, label %47, label %56, !dbg !3393

; <label>:47:                                     ; preds = %41
  %48 = load %struct._ftsent*, %struct._ftsent** %6, align 8, !dbg !3394
  %49 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %48, i32 0, i32 5, !dbg !3395
  %50 = load i8*, i8** %49, align 8, !dbg !3395
  %51 = load %struct.stat*, %struct.stat** %8, align 8, !dbg !3396
  %52 = call i32 @lstat(i8* %50, %struct.stat* %51) #8, !dbg !3397
  %53 = icmp eq i32 %52, 0, !dbg !3398
  br i1 %53, label %54, label %56, !dbg !3399

; <label>:54:                                     ; preds = %47
  %55 = call i32* @__errno_location() #14, !dbg !3400
  store i32 0, i32* %55, align 4, !dbg !3400
  store i16 13, i16* %4, align 2, !dbg !3402
  br label %150, !dbg !3402

; <label>:56:                                     ; preds = %47, %41
  %57 = load i32, i32* %9, align 4, !dbg !3403
  %58 = load %struct._ftsent*, %struct._ftsent** %6, align 8, !dbg !3404
  %59 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %58, i32 0, i32 7, !dbg !3405
  store i32 %57, i32* %59, align 8, !dbg !3406
  br label %76, !dbg !3407

; <label>:60:                                     ; preds = %34
  br label %80, !dbg !3408

; <label>:61:                                     ; preds = %31
  %62 = load %struct.FTS*, %struct.FTS** %5, align 8, !dbg !3409
  %63 = getelementptr inbounds %struct.FTS, %struct.FTS* %62, i32 0, i32 6, !dbg !3411
  %64 = load i32, i32* %63, align 4, !dbg !3411
  %65 = load %struct._ftsent*, %struct._ftsent** %6, align 8, !dbg !3412
  %66 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %65, i32 0, i32 5, !dbg !3413
  %67 = load i8*, i8** %66, align 8, !dbg !3413
  %68 = load %struct.stat*, %struct.stat** %8, align 8, !dbg !3414
  %69 = call i32 @fstatat(i32 %64, i8* %67, %struct.stat* %68, i32 256) #8, !dbg !3415
  %70 = icmp ne i32 %69, 0, !dbg !3415
  br i1 %70, label %71, label %79, !dbg !3416

; <label>:71:                                     ; preds = %61
  %72 = call i32* @__errno_location() #14, !dbg !3417
  %73 = load i32, i32* %72, align 4, !dbg !3417
  %74 = load %struct._ftsent*, %struct._ftsent** %6, align 8, !dbg !3419
  %75 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %74, i32 0, i32 7, !dbg !3420
  store i32 %73, i32* %75, align 8, !dbg !3421
  br label %76, !dbg !3419

; <label>:76:                                     ; preds = %71, %56
  %77 = load %struct.stat*, %struct.stat** %8, align 8, !dbg !3422
  %78 = bitcast %struct.stat* %77 to i8*, !dbg !3423
  call void @llvm.memset.p0i8.i64(i8* %78, i8 0, i64 144, i32 8, i1 false), !dbg !3423
  store i16 10, i16* %4, align 2, !dbg !3424
  br label %150, !dbg !3424

; <label>:79:                                     ; preds = %61
  br label %80

; <label>:80:                                     ; preds = %79, %60
  %81 = load %struct.stat*, %struct.stat** %8, align 8, !dbg !3425
  %82 = getelementptr inbounds %struct.stat, %struct.stat* %81, i32 0, i32 3, !dbg !3425
  %83 = load i32, i32* %82, align 8, !dbg !3425
  %84 = and i32 %83, 61440, !dbg !3425
  %85 = icmp eq i32 %84, 16384, !dbg !3425
  br i1 %85, label %86, label %135, !dbg !3427

; <label>:86:                                     ; preds = %80
  %87 = load %struct.stat*, %struct.stat** %8, align 8, !dbg !3428
  %88 = getelementptr inbounds %struct.stat, %struct.stat* %87, i32 0, i32 2, !dbg !3430
  %89 = load i64, i64* %88, align 8, !dbg !3430
  %90 = load %struct.FTS*, %struct.FTS** %5, align 8, !dbg !3431
  %91 = getelementptr inbounds %struct.FTS, %struct.FTS* %90, i32 0, i32 10, !dbg !3431
  %92 = load i32, i32* %91, align 8, !dbg !3431
  %93 = and i32 %92, 32, !dbg !3431
  %94 = icmp ne i32 %93, 0, !dbg !3431
  %95 = zext i1 %94 to i64, !dbg !3431
  %96 = select i1 %94, i32 0, i32 2, !dbg !3431
  %97 = sext i32 %96 to i64, !dbg !3432
  %98 = sub i64 %89, %97, !dbg !3433
  %99 = load %struct._ftsent*, %struct._ftsent** %6, align 8, !dbg !3434
  %100 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %99, i32 0, i32 13, !dbg !3435
  store i64 %98, i64* %100, align 8, !dbg !3436
  %101 = load %struct._ftsent*, %struct._ftsent** %6, align 8, !dbg !3437
  %102 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %101, i32 0, i32 18, !dbg !3437
  %103 = getelementptr inbounds [1 x i8], [1 x i8]* %102, i64 0, i64 0, !dbg !3437
  %104 = load i8, i8* %103, align 8, !dbg !3437
  %105 = sext i8 %104 to i32, !dbg !3437
  %106 = icmp eq i32 %105, 46, !dbg !3437
  br i1 %106, label %107, label %134, !dbg !3437

; <label>:107:                                    ; preds = %86
  %108 = load %struct._ftsent*, %struct._ftsent** %6, align 8, !dbg !3437
  %109 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %108, i32 0, i32 18, !dbg !3437
  %110 = getelementptr inbounds [1 x i8], [1 x i8]* %109, i64 0, i64 1, !dbg !3437
  %111 = load i8, i8* %110, align 1, !dbg !3437
  %112 = icmp ne i8 %111, 0, !dbg !3437
  br i1 %112, label %113, label %126, !dbg !3437

; <label>:113:                                    ; preds = %107
  %114 = load %struct._ftsent*, %struct._ftsent** %6, align 8, !dbg !3437
  %115 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %114, i32 0, i32 18, !dbg !3437
  %116 = getelementptr inbounds [1 x i8], [1 x i8]* %115, i64 0, i64 1, !dbg !3437
  %117 = load i8, i8* %116, align 1, !dbg !3437
  %118 = sext i8 %117 to i32, !dbg !3437
  %119 = icmp eq i32 %118, 46, !dbg !3437
  br i1 %119, label %120, label %134, !dbg !3437

; <label>:120:                                    ; preds = %113
  %121 = load %struct._ftsent*, %struct._ftsent** %6, align 8, !dbg !3437
  %122 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %121, i32 0, i32 18, !dbg !3437
  %123 = getelementptr inbounds [1 x i8], [1 x i8]* %122, i64 0, i64 2, !dbg !3437
  %124 = load i8, i8* %123, align 2, !dbg !3437
  %125 = icmp ne i8 %124, 0, !dbg !3437
  br i1 %125, label %134, label %126, !dbg !3439

; <label>:126:                                    ; preds = %120, %107
  %127 = load %struct._ftsent*, %struct._ftsent** %6, align 8, !dbg !3440
  %128 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %127, i32 0, i32 11, !dbg !3442
  %129 = load i64, i64* %128, align 8, !dbg !3442
  %130 = icmp eq i64 %129, 0, !dbg !3443
  %131 = zext i1 %130 to i64, !dbg !3440
  %132 = select i1 %130, i32 1, i32 5, !dbg !3440
  %133 = trunc i32 %132 to i16, !dbg !3444
  store i16 %133, i16* %4, align 2, !dbg !3445
  br label %150, !dbg !3445

; <label>:134:                                    ; preds = %120, %113, %86
  store i16 1, i16* %4, align 2, !dbg !3446
  br label %150, !dbg !3446

; <label>:135:                                    ; preds = %80
  %136 = load %struct.stat*, %struct.stat** %8, align 8, !dbg !3447
  %137 = getelementptr inbounds %struct.stat, %struct.stat* %136, i32 0, i32 3, !dbg !3447
  %138 = load i32, i32* %137, align 8, !dbg !3447
  %139 = and i32 %138, 61440, !dbg !3447
  %140 = icmp eq i32 %139, 40960, !dbg !3447
  br i1 %140, label %141, label %142, !dbg !3449

; <label>:141:                                    ; preds = %135
  store i16 12, i16* %4, align 2, !dbg !3450
  br label %150, !dbg !3450

; <label>:142:                                    ; preds = %135
  %143 = load %struct.stat*, %struct.stat** %8, align 8, !dbg !3451
  %144 = getelementptr inbounds %struct.stat, %struct.stat* %143, i32 0, i32 3, !dbg !3451
  %145 = load i32, i32* %144, align 8, !dbg !3451
  %146 = and i32 %145, 61440, !dbg !3451
  %147 = icmp eq i32 %146, 32768, !dbg !3451
  br i1 %147, label %148, label %149, !dbg !3453

; <label>:148:                                    ; preds = %142
  store i16 8, i16* %4, align 2, !dbg !3454
  br label %150, !dbg !3454

; <label>:149:                                    ; preds = %142
  store i16 3, i16* %4, align 2, !dbg !3455
  br label %150, !dbg !3455

; <label>:150:                                    ; preds = %149, %148, %141, %134, %126, %76, %54
  %151 = load i16, i16* %4, align 2, !dbg !3456
  ret i16 %151, !dbg !3456
}

; Function Attrs: noinline nounwind uwtable
define internal %struct._ftsent* @fts_sort(%struct.FTS*, %struct._ftsent*, i64) #3 !dbg !3457 {
  %4 = alloca %struct._ftsent*, align 8
  %5 = alloca %struct.FTS*, align 8
  %6 = alloca %struct._ftsent*, align 8
  %7 = alloca i64, align 8
  %8 = alloca %struct._ftsent**, align 8
  %9 = alloca %struct._ftsent*, align 8
  %10 = alloca %struct._ftsent*, align 8
  %11 = alloca i32 (i8*, i8*)*, align 8
  %12 = alloca %struct._ftsent**, align 8
  store %struct.FTS* %0, %struct.FTS** %5, align 8
  call void @llvm.dbg.declare(metadata %struct.FTS** %5, metadata !3460, metadata !DIExpression()), !dbg !3461
  store %struct._ftsent* %1, %struct._ftsent** %6, align 8
  call void @llvm.dbg.declare(metadata %struct._ftsent** %6, metadata !3462, metadata !DIExpression()), !dbg !3463
  store i64 %2, i64* %7, align 8
  call void @llvm.dbg.declare(metadata i64* %7, metadata !3464, metadata !DIExpression()), !dbg !3465
  call void @llvm.dbg.declare(metadata %struct._ftsent*** %8, metadata !3466, metadata !DIExpression()), !dbg !3468
  call void @llvm.dbg.declare(metadata %struct._ftsent** %9, metadata !3469, metadata !DIExpression()), !dbg !3470
  call void @llvm.dbg.declare(metadata %struct._ftsent** %10, metadata !3471, metadata !DIExpression()), !dbg !3472
  call void @llvm.dbg.declare(metadata i32 (i8*, i8*)** %11, metadata !3473, metadata !DIExpression()), !dbg !3474
  %13 = ptrtoint %struct._ftsent** %10 to i64, !dbg !3475
  %14 = bitcast %struct._ftsent** %10 to i8*, !dbg !3476
  %15 = ptrtoint i8* %14 to i64, !dbg !3477
  %16 = icmp eq i64 %13, %15, !dbg !3478
  br i1 %16, label %17, label %22, !dbg !3479

; <label>:17:                                     ; preds = %3
  %18 = load %struct.FTS*, %struct.FTS** %5, align 8, !dbg !3480
  %19 = getelementptr inbounds %struct.FTS, %struct.FTS* %18, i32 0, i32 9, !dbg !3481
  %20 = load i32 (%struct._ftsent**, %struct._ftsent**)*, i32 (%struct._ftsent**, %struct._ftsent**)** %19, align 8, !dbg !3481
  %21 = bitcast i32 (%struct._ftsent**, %struct._ftsent**)* %20 to i32 (i8*, i8*)*, !dbg !3482
  br label %23, !dbg !3479

; <label>:22:                                     ; preds = %3
  br label %23, !dbg !3479

; <label>:23:                                     ; preds = %22, %17
  %24 = phi i32 (i8*, i8*)* [ %21, %17 ], [ @fts_compar, %22 ], !dbg !3479
  store i32 (i8*, i8*)* %24, i32 (i8*, i8*)** %11, align 8, !dbg !3474
  %25 = load i64, i64* %7, align 8, !dbg !3483
  %26 = load %struct.FTS*, %struct.FTS** %5, align 8, !dbg !3485
  %27 = getelementptr inbounds %struct.FTS, %struct.FTS* %26, i32 0, i32 8, !dbg !3486
  %28 = load i64, i64* %27, align 8, !dbg !3486
  %29 = icmp ugt i64 %25, %28, !dbg !3487
  br i1 %29, label %30, label %65, !dbg !3488

; <label>:30:                                     ; preds = %23
  call void @llvm.dbg.declare(metadata %struct._ftsent*** %12, metadata !3489, metadata !DIExpression()), !dbg !3491
  %31 = load i64, i64* %7, align 8, !dbg !3492
  %32 = add i64 %31, 40, !dbg !3493
  %33 = load %struct.FTS*, %struct.FTS** %5, align 8, !dbg !3494
  %34 = getelementptr inbounds %struct.FTS, %struct.FTS* %33, i32 0, i32 8, !dbg !3495
  store i64 %32, i64* %34, align 8, !dbg !3496
  %35 = load %struct.FTS*, %struct.FTS** %5, align 8, !dbg !3497
  %36 = getelementptr inbounds %struct.FTS, %struct.FTS* %35, i32 0, i32 8, !dbg !3499
  %37 = load i64, i64* %36, align 8, !dbg !3499
  %38 = icmp ult i64 2305843009213693951, %37, !dbg !3500
  br i1 %38, label %51, label %39, !dbg !3501

; <label>:39:                                     ; preds = %30
  %40 = load %struct.FTS*, %struct.FTS** %5, align 8, !dbg !3502
  %41 = getelementptr inbounds %struct.FTS, %struct.FTS* %40, i32 0, i32 2, !dbg !3503
  %42 = load %struct._ftsent**, %struct._ftsent*** %41, align 8, !dbg !3503
  %43 = bitcast %struct._ftsent** %42 to i8*, !dbg !3502
  %44 = load %struct.FTS*, %struct.FTS** %5, align 8, !dbg !3504
  %45 = getelementptr inbounds %struct.FTS, %struct.FTS* %44, i32 0, i32 8, !dbg !3505
  %46 = load i64, i64* %45, align 8, !dbg !3505
  %47 = mul i64 %46, 8, !dbg !3506
  %48 = call i8* @realloc(i8* %43, i64 %47) #8, !dbg !3507
  %49 = bitcast i8* %48 to %struct._ftsent**, !dbg !3507
  store %struct._ftsent** %49, %struct._ftsent*** %12, align 8, !dbg !3508
  %50 = icmp ne %struct._ftsent** %49, null, !dbg !3508
  br i1 %50, label %61, label %51, !dbg !3509

; <label>:51:                                     ; preds = %39, %30
  %52 = load %struct.FTS*, %struct.FTS** %5, align 8, !dbg !3510
  %53 = getelementptr inbounds %struct.FTS, %struct.FTS* %52, i32 0, i32 2, !dbg !3512
  %54 = load %struct._ftsent**, %struct._ftsent*** %53, align 8, !dbg !3512
  %55 = bitcast %struct._ftsent** %54 to i8*, !dbg !3510
  call void @free(i8* %55) #8, !dbg !3513
  %56 = load %struct.FTS*, %struct.FTS** %5, align 8, !dbg !3514
  %57 = getelementptr inbounds %struct.FTS, %struct.FTS* %56, i32 0, i32 2, !dbg !3515
  store %struct._ftsent** null, %struct._ftsent*** %57, align 8, !dbg !3516
  %58 = load %struct.FTS*, %struct.FTS** %5, align 8, !dbg !3517
  %59 = getelementptr inbounds %struct.FTS, %struct.FTS* %58, i32 0, i32 8, !dbg !3518
  store i64 0, i64* %59, align 8, !dbg !3519
  %60 = load %struct._ftsent*, %struct._ftsent** %6, align 8, !dbg !3520
  store %struct._ftsent* %60, %struct._ftsent** %4, align 8, !dbg !3521
  br label %113, !dbg !3521

; <label>:61:                                     ; preds = %39
  %62 = load %struct._ftsent**, %struct._ftsent*** %12, align 8, !dbg !3522
  %63 = load %struct.FTS*, %struct.FTS** %5, align 8, !dbg !3523
  %64 = getelementptr inbounds %struct.FTS, %struct.FTS* %63, i32 0, i32 2, !dbg !3524
  store %struct._ftsent** %62, %struct._ftsent*** %64, align 8, !dbg !3525
  br label %65, !dbg !3526

; <label>:65:                                     ; preds = %61, %23
  %66 = load %struct.FTS*, %struct.FTS** %5, align 8, !dbg !3527
  %67 = getelementptr inbounds %struct.FTS, %struct.FTS* %66, i32 0, i32 2, !dbg !3529
  %68 = load %struct._ftsent**, %struct._ftsent*** %67, align 8, !dbg !3529
  store %struct._ftsent** %68, %struct._ftsent*** %8, align 8, !dbg !3530
  %69 = load %struct._ftsent*, %struct._ftsent** %6, align 8, !dbg !3531
  store %struct._ftsent* %69, %struct._ftsent** %9, align 8, !dbg !3532
  br label %70, !dbg !3533

; <label>:70:                                     ; preds = %77, %65
  %71 = load %struct._ftsent*, %struct._ftsent** %9, align 8, !dbg !3534
  %72 = icmp ne %struct._ftsent* %71, null, !dbg !3536
  br i1 %72, label %73, label %81, !dbg !3536

; <label>:73:                                     ; preds = %70
  %74 = load %struct._ftsent*, %struct._ftsent** %9, align 8, !dbg !3537
  %75 = load %struct._ftsent**, %struct._ftsent*** %8, align 8, !dbg !3538
  %76 = getelementptr inbounds %struct._ftsent*, %struct._ftsent** %75, i32 1, !dbg !3538
  store %struct._ftsent** %76, %struct._ftsent*** %8, align 8, !dbg !3538
  store %struct._ftsent* %74, %struct._ftsent** %75, align 8, !dbg !3539
  br label %77, !dbg !3540

; <label>:77:                                     ; preds = %73
  %78 = load %struct._ftsent*, %struct._ftsent** %9, align 8, !dbg !3541
  %79 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %78, i32 0, i32 2, !dbg !3542
  %80 = load %struct._ftsent*, %struct._ftsent** %79, align 8, !dbg !3542
  store %struct._ftsent* %80, %struct._ftsent** %9, align 8, !dbg !3543
  br label %70, !dbg !3544, !llvm.loop !3545

; <label>:81:                                     ; preds = %70
  %82 = load %struct.FTS*, %struct.FTS** %5, align 8, !dbg !3547
  %83 = getelementptr inbounds %struct.FTS, %struct.FTS* %82, i32 0, i32 2, !dbg !3548
  %84 = load %struct._ftsent**, %struct._ftsent*** %83, align 8, !dbg !3548
  %85 = bitcast %struct._ftsent** %84 to i8*, !dbg !3549
  %86 = load i64, i64* %7, align 8, !dbg !3550
  %87 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %11, align 8, !dbg !3551
  call void @qsort(i8* %85, i64 %86, i64 8, i32 (i8*, i8*)* %87), !dbg !3552
  %88 = load %struct.FTS*, %struct.FTS** %5, align 8, !dbg !3553
  %89 = getelementptr inbounds %struct.FTS, %struct.FTS* %88, i32 0, i32 2, !dbg !3555
  %90 = load %struct._ftsent**, %struct._ftsent*** %89, align 8, !dbg !3555
  store %struct._ftsent** %90, %struct._ftsent*** %8, align 8, !dbg !3556
  %91 = load %struct._ftsent*, %struct._ftsent** %90, align 8, !dbg !3557
  store %struct._ftsent* %91, %struct._ftsent** %6, align 8, !dbg !3558
  br label %92, !dbg !3559

; <label>:92:                                     ; preds = %104, %81
  %93 = load i64, i64* %7, align 8, !dbg !3560
  %94 = add i64 %93, -1, !dbg !3560
  store i64 %94, i64* %7, align 8, !dbg !3560
  %95 = icmp ne i64 %94, 0, !dbg !3562
  br i1 %95, label %96, label %107, !dbg !3562

; <label>:96:                                     ; preds = %92
  %97 = load %struct._ftsent**, %struct._ftsent*** %8, align 8, !dbg !3563
  %98 = getelementptr inbounds %struct._ftsent*, %struct._ftsent** %97, i64 1, !dbg !3563
  %99 = load %struct._ftsent*, %struct._ftsent** %98, align 8, !dbg !3563
  %100 = load %struct._ftsent**, %struct._ftsent*** %8, align 8, !dbg !3564
  %101 = getelementptr inbounds %struct._ftsent*, %struct._ftsent** %100, i64 0, !dbg !3564
  %102 = load %struct._ftsent*, %struct._ftsent** %101, align 8, !dbg !3564
  %103 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %102, i32 0, i32 2, !dbg !3565
  store %struct._ftsent* %99, %struct._ftsent** %103, align 8, !dbg !3566
  br label %104, !dbg !3564

; <label>:104:                                    ; preds = %96
  %105 = load %struct._ftsent**, %struct._ftsent*** %8, align 8, !dbg !3567
  %106 = getelementptr inbounds %struct._ftsent*, %struct._ftsent** %105, i32 1, !dbg !3567
  store %struct._ftsent** %106, %struct._ftsent*** %8, align 8, !dbg !3567
  br label %92, !dbg !3568, !llvm.loop !3569

; <label>:107:                                    ; preds = %92
  %108 = load %struct._ftsent**, %struct._ftsent*** %8, align 8, !dbg !3571
  %109 = getelementptr inbounds %struct._ftsent*, %struct._ftsent** %108, i64 0, !dbg !3571
  %110 = load %struct._ftsent*, %struct._ftsent** %109, align 8, !dbg !3571
  %111 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %110, i32 0, i32 2, !dbg !3572
  store %struct._ftsent* null, %struct._ftsent** %111, align 8, !dbg !3573
  %112 = load %struct._ftsent*, %struct._ftsent** %6, align 8, !dbg !3574
  store %struct._ftsent* %112, %struct._ftsent** %4, align 8, !dbg !3575
  br label %113, !dbg !3575

; <label>:113:                                    ; preds = %107, %51
  %114 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !3576
  ret %struct._ftsent* %114, !dbg !3576
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i1 @setup_dir(%struct.FTS*) #3 !dbg !290 {
  %2 = alloca i1, align 1
  %3 = alloca %struct.FTS*, align 8
  store %struct.FTS* %0, %struct.FTS** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.FTS** %3, metadata !3577, metadata !DIExpression()), !dbg !3578
  %4 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !3579
  %5 = getelementptr inbounds %struct.FTS, %struct.FTS* %4, i32 0, i32 10, !dbg !3581
  %6 = load i32, i32* %5, align 8, !dbg !3581
  %7 = and i32 %6, 258, !dbg !3582
  %8 = icmp ne i32 %7, 0, !dbg !3582
  br i1 %8, label %9, label %21, !dbg !3583

; <label>:9:                                      ; preds = %1
  %10 = call %struct.hash_table* @hash_initialize(i64 31, %struct.hash_tuning* null, i64 (i8*, i64)* @AD_hash, i1 (i8*, i8*)* @AD_compare, void (i8*)* @free), !dbg !3584
  %11 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !3586
  %12 = getelementptr inbounds %struct.FTS, %struct.FTS* %11, i32 0, i32 12, !dbg !3587
  %13 = bitcast %union.anon* %12 to %struct.hash_table**, !dbg !3588
  store %struct.hash_table* %10, %struct.hash_table** %13, align 8, !dbg !3589
  %14 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !3590
  %15 = getelementptr inbounds %struct.FTS, %struct.FTS* %14, i32 0, i32 12, !dbg !3592
  %16 = bitcast %union.anon* %15 to %struct.hash_table**, !dbg !3593
  %17 = load %struct.hash_table*, %struct.hash_table** %16, align 8, !dbg !3593
  %18 = icmp ne %struct.hash_table* %17, null, !dbg !3590
  br i1 %18, label %20, label %19, !dbg !3594

; <label>:19:                                     ; preds = %9
  store i1 false, i1* %2, align 1, !dbg !3595
  br label %39, !dbg !3595

; <label>:20:                                     ; preds = %9
  br label %38, !dbg !3596

; <label>:21:                                     ; preds = %1
  %22 = call noalias i8* @malloc(i64 32) #8, !dbg !3597
  %23 = bitcast i8* %22 to %struct.cycle_check_state*, !dbg !3597
  %24 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !3599
  %25 = getelementptr inbounds %struct.FTS, %struct.FTS* %24, i32 0, i32 12, !dbg !3600
  %26 = bitcast %union.anon* %25 to %struct.cycle_check_state**, !dbg !3601
  store %struct.cycle_check_state* %23, %struct.cycle_check_state** %26, align 8, !dbg !3602
  %27 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !3603
  %28 = getelementptr inbounds %struct.FTS, %struct.FTS* %27, i32 0, i32 12, !dbg !3605
  %29 = bitcast %union.anon* %28 to %struct.cycle_check_state**, !dbg !3606
  %30 = load %struct.cycle_check_state*, %struct.cycle_check_state** %29, align 8, !dbg !3606
  %31 = icmp ne %struct.cycle_check_state* %30, null, !dbg !3603
  br i1 %31, label %33, label %32, !dbg !3607

; <label>:32:                                     ; preds = %21
  store i1 false, i1* %2, align 1, !dbg !3608
  br label %39, !dbg !3608

; <label>:33:                                     ; preds = %21
  %34 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !3609
  %35 = getelementptr inbounds %struct.FTS, %struct.FTS* %34, i32 0, i32 12, !dbg !3610
  %36 = bitcast %union.anon* %35 to %struct.cycle_check_state**, !dbg !3611
  %37 = load %struct.cycle_check_state*, %struct.cycle_check_state** %36, align 8, !dbg !3611
  call void @cycle_check_init(%struct.cycle_check_state* %37), !dbg !3612
  br label %38

; <label>:38:                                     ; preds = %33, %20
  store i1 true, i1* %2, align 1, !dbg !3613
  br label %39, !dbg !3613

; <label>:39:                                     ; preds = %38, %32, %19
  %40 = load i1, i1* %2, align 1, !dbg !3614
  ret i1 %40, !dbg !3614
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @diropen(%struct.FTS*, i8*) #3 !dbg !3615 {
  %3 = alloca %struct.FTS*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  store %struct.FTS* %0, %struct.FTS** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.FTS** %3, metadata !3620, metadata !DIExpression()), !dbg !3621
  store i8* %1, i8** %4, align 8
  call void @llvm.dbg.declare(metadata i8** %4, metadata !3622, metadata !DIExpression()), !dbg !3623
  call void @llvm.dbg.declare(metadata i32* %5, metadata !3624, metadata !DIExpression()), !dbg !3625
  %7 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !3626
  %8 = getelementptr inbounds %struct.FTS, %struct.FTS* %7, i32 0, i32 10, !dbg !3626
  %9 = load i32, i32* %8, align 8, !dbg !3626
  %10 = and i32 %9, 16, !dbg !3626
  %11 = icmp ne i32 %10, 0, !dbg !3626
  %12 = zext i1 %11 to i64, !dbg !3626
  %13 = select i1 %11, i32 131072, i32 0, !dbg !3626
  %14 = or i32 67840, %13, !dbg !3627
  store i32 %14, i32* %5, align 4, !dbg !3625
  call void @llvm.dbg.declare(metadata i32* %6, metadata !3628, metadata !DIExpression()), !dbg !3629
  %15 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !3630
  %16 = getelementptr inbounds %struct.FTS, %struct.FTS* %15, i32 0, i32 10, !dbg !3630
  %17 = load i32, i32* %16, align 8, !dbg !3630
  %18 = and i32 %17, 512, !dbg !3630
  %19 = icmp ne i32 %18, 0, !dbg !3630
  br i1 %19, label %20, label %27, !dbg !3630

; <label>:20:                                     ; preds = %2
  %21 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !3631
  %22 = getelementptr inbounds %struct.FTS, %struct.FTS* %21, i32 0, i32 6, !dbg !3632
  %23 = load i32, i32* %22, align 4, !dbg !3632
  %24 = load i8*, i8** %4, align 8, !dbg !3633
  %25 = load i32, i32* %5, align 4, !dbg !3634
  %26 = call i32 (i32, i8*, i32, ...) @openat_safer(i32 %23, i8* %24, i32 %25), !dbg !3635
  br label %31, !dbg !3630

; <label>:27:                                     ; preds = %2
  %28 = load i8*, i8** %4, align 8, !dbg !3636
  %29 = load i32, i32* %5, align 4, !dbg !3637
  %30 = call i32 (i8*, i32, ...) @open_safer(i8* %28, i32 %29), !dbg !3638
  br label %31, !dbg !3630

; <label>:31:                                     ; preds = %27, %20
  %32 = phi i32 [ %26, %20 ], [ %30, %27 ], !dbg !3630
  store i32 %32, i32* %6, align 4, !dbg !3629
  %33 = load i32, i32* %6, align 4, !dbg !3639
  %34 = icmp sle i32 0, %33, !dbg !3641
  br i1 %34, label %35, label %38, !dbg !3642

; <label>:35:                                     ; preds = %31
  %36 = load i32, i32* %6, align 4, !dbg !3643
  %37 = call i32 @set_cloexec_flag(i32 %36, i1 zeroext true), !dbg !3644
  br label %38, !dbg !3644

; <label>:38:                                     ; preds = %35, %31
  %39 = load i32, i32* %6, align 4, !dbg !3645
  ret i32 %39, !dbg !3646
}

; Function Attrs: noinline nounwind uwtable
define internal void @fts_lfree(%struct._ftsent*) #3 !dbg !3647 {
  %2 = alloca %struct._ftsent*, align 8
  %3 = alloca %struct._ftsent*, align 8
  store %struct._ftsent* %0, %struct._ftsent** %2, align 8
  call void @llvm.dbg.declare(metadata %struct._ftsent** %2, metadata !3650, metadata !DIExpression()), !dbg !3651
  call void @llvm.dbg.declare(metadata %struct._ftsent** %3, metadata !3652, metadata !DIExpression()), !dbg !3653
  br label %4, !dbg !3654

; <label>:4:                                      ; preds = %7, %1
  %5 = load %struct._ftsent*, %struct._ftsent** %2, align 8, !dbg !3655
  store %struct._ftsent* %5, %struct._ftsent** %3, align 8, !dbg !3656
  %6 = icmp ne %struct._ftsent* %5, null, !dbg !3654
  br i1 %6, label %7, label %13, !dbg !3654

; <label>:7:                                      ; preds = %4
  %8 = load %struct._ftsent*, %struct._ftsent** %2, align 8, !dbg !3657
  %9 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %8, i32 0, i32 2, !dbg !3659
  %10 = load %struct._ftsent*, %struct._ftsent** %9, align 8, !dbg !3659
  store %struct._ftsent* %10, %struct._ftsent** %2, align 8, !dbg !3660
  %11 = load %struct._ftsent*, %struct._ftsent** %3, align 8, !dbg !3661
  %12 = bitcast %struct._ftsent* %11 to i8*, !dbg !3661
  call void @free(i8* %12) #8, !dbg !3662
  br label %4, !dbg !3654, !llvm.loop !3663

; <label>:13:                                     ; preds = %4
  ret void, !dbg !3665
}

; Function Attrs: nounwind
declare void @free(i8*) #5

; Function Attrs: noinline nounwind uwtable
define internal i64 @AD_hash(i8*, i64) #3 !dbg !3666 {
  %3 = alloca i8*, align 8
  %4 = alloca i64, align 8
  %5 = alloca %struct.Active_dir*, align 8
  store i8* %0, i8** %3, align 8
  call void @llvm.dbg.declare(metadata i8** %3, metadata !3669, metadata !DIExpression()), !dbg !3670
  store i64 %1, i64* %4, align 8
  call void @llvm.dbg.declare(metadata i64* %4, metadata !3671, metadata !DIExpression()), !dbg !3672
  call void @llvm.dbg.declare(metadata %struct.Active_dir** %5, metadata !3673, metadata !DIExpression()), !dbg !3681
  %6 = load i8*, i8** %3, align 8, !dbg !3682
  %7 = bitcast i8* %6 to %struct.Active_dir*, !dbg !3682
  store %struct.Active_dir* %7, %struct.Active_dir** %5, align 8, !dbg !3681
  %8 = load %struct.Active_dir*, %struct.Active_dir** %5, align 8, !dbg !3683
  %9 = getelementptr inbounds %struct.Active_dir, %struct.Active_dir* %8, i32 0, i32 1, !dbg !3684
  %10 = load i64, i64* %9, align 8, !dbg !3684
  %11 = load i64, i64* %4, align 8, !dbg !3685
  %12 = urem i64 %10, %11, !dbg !3686
  ret i64 %12, !dbg !3687
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i1 @AD_compare(i8*, i8*) #3 !dbg !3688 {
  %3 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca %struct.Active_dir*, align 8
  %6 = alloca %struct.Active_dir*, align 8
  store i8* %0, i8** %3, align 8
  call void @llvm.dbg.declare(metadata i8** %3, metadata !3691, metadata !DIExpression()), !dbg !3692
  store i8* %1, i8** %4, align 8
  call void @llvm.dbg.declare(metadata i8** %4, metadata !3693, metadata !DIExpression()), !dbg !3694
  call void @llvm.dbg.declare(metadata %struct.Active_dir** %5, metadata !3695, metadata !DIExpression()), !dbg !3696
  %7 = load i8*, i8** %3, align 8, !dbg !3697
  %8 = bitcast i8* %7 to %struct.Active_dir*, !dbg !3697
  store %struct.Active_dir* %8, %struct.Active_dir** %5, align 8, !dbg !3696
  call void @llvm.dbg.declare(metadata %struct.Active_dir** %6, metadata !3698, metadata !DIExpression()), !dbg !3699
  %9 = load i8*, i8** %4, align 8, !dbg !3700
  %10 = bitcast i8* %9 to %struct.Active_dir*, !dbg !3700
  store %struct.Active_dir* %10, %struct.Active_dir** %6, align 8, !dbg !3699
  %11 = load %struct.Active_dir*, %struct.Active_dir** %5, align 8, !dbg !3701
  %12 = getelementptr inbounds %struct.Active_dir, %struct.Active_dir* %11, i32 0, i32 1, !dbg !3702
  %13 = load i64, i64* %12, align 8, !dbg !3702
  %14 = load %struct.Active_dir*, %struct.Active_dir** %6, align 8, !dbg !3703
  %15 = getelementptr inbounds %struct.Active_dir, %struct.Active_dir* %14, i32 0, i32 1, !dbg !3704
  %16 = load i64, i64* %15, align 8, !dbg !3704
  %17 = icmp eq i64 %13, %16, !dbg !3705
  br i1 %17, label %18, label %26, !dbg !3706

; <label>:18:                                     ; preds = %2
  %19 = load %struct.Active_dir*, %struct.Active_dir** %5, align 8, !dbg !3707
  %20 = getelementptr inbounds %struct.Active_dir, %struct.Active_dir* %19, i32 0, i32 0, !dbg !3708
  %21 = load i64, i64* %20, align 8, !dbg !3708
  %22 = load %struct.Active_dir*, %struct.Active_dir** %6, align 8, !dbg !3709
  %23 = getelementptr inbounds %struct.Active_dir, %struct.Active_dir* %22, i32 0, i32 0, !dbg !3710
  %24 = load i64, i64* %23, align 8, !dbg !3710
  %25 = icmp eq i64 %21, %24, !dbg !3711
  br label %26

; <label>:26:                                     ; preds = %18, %2
  %27 = phi i1 [ false, %2 ], [ %25, %18 ]
  ret i1 %27, !dbg !3712
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @fts_compar(i8*, i8*) #3 !dbg !3713 {
  %3 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca %struct._ftsent**, align 8
  %6 = alloca %struct._ftsent**, align 8
  store i8* %0, i8** %3, align 8
  call void @llvm.dbg.declare(metadata i8** %3, metadata !3714, metadata !DIExpression()), !dbg !3715
  store i8* %1, i8** %4, align 8
  call void @llvm.dbg.declare(metadata i8** %4, metadata !3716, metadata !DIExpression()), !dbg !3717
  call void @llvm.dbg.declare(metadata %struct._ftsent*** %5, metadata !3718, metadata !DIExpression()), !dbg !3719
  %7 = load i8*, i8** %3, align 8, !dbg !3720
  %8 = bitcast i8* %7 to %struct._ftsent**, !dbg !3721
  store %struct._ftsent** %8, %struct._ftsent*** %5, align 8, !dbg !3719
  call void @llvm.dbg.declare(metadata %struct._ftsent*** %6, metadata !3722, metadata !DIExpression()), !dbg !3723
  %9 = load i8*, i8** %4, align 8, !dbg !3724
  %10 = bitcast i8* %9 to %struct._ftsent**, !dbg !3725
  store %struct._ftsent** %10, %struct._ftsent*** %6, align 8, !dbg !3723
  %11 = load %struct._ftsent**, %struct._ftsent*** %5, align 8, !dbg !3726
  %12 = getelementptr inbounds %struct._ftsent*, %struct._ftsent** %11, i64 0, !dbg !3726
  %13 = load %struct._ftsent*, %struct._ftsent** %12, align 8, !dbg !3726
  %14 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %13, i32 0, i32 10, !dbg !3727
  %15 = load %struct.FTS*, %struct.FTS** %14, align 8, !dbg !3727
  %16 = getelementptr inbounds %struct.FTS, %struct.FTS* %15, i32 0, i32 9, !dbg !3728
  %17 = load i32 (%struct._ftsent**, %struct._ftsent**)*, i32 (%struct._ftsent**, %struct._ftsent**)** %16, align 8, !dbg !3728
  %18 = load %struct._ftsent**, %struct._ftsent*** %5, align 8, !dbg !3729
  %19 = load %struct._ftsent**, %struct._ftsent*** %6, align 8, !dbg !3730
  %20 = call i32 %17(%struct._ftsent** %18, %struct._ftsent** %19), !dbg !3726
  ret i32 %20, !dbg !3731
}

; Function Attrs: nounwind
declare i8* @realloc(i8*, i64) #5

declare void @qsort(i8*, i64, i64, i32 (i8*, i8*)*) #2

; Function Attrs: nounwind
declare i32 @stat(i8*, %struct.stat*) #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i32, i1) #10

; Function Attrs: noinline nounwind uwtable
define i32 @fts_close(%struct.FTS*) #3 !dbg !3732 {
  %2 = alloca i32, align 4
  %3 = alloca %struct.FTS*, align 8
  %4 = alloca %struct._ftsent*, align 8
  %5 = alloca %struct._ftsent*, align 8
  %6 = alloca i32, align 4
  store %struct.FTS* %0, %struct.FTS** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.FTS** %3, metadata !3735, metadata !DIExpression()), !dbg !3736
  call void @llvm.dbg.declare(metadata %struct._ftsent** %4, metadata !3737, metadata !DIExpression()), !dbg !3738
  call void @llvm.dbg.declare(metadata %struct._ftsent** %5, metadata !3739, metadata !DIExpression()), !dbg !3740
  call void @llvm.dbg.declare(metadata i32* %6, metadata !3741, metadata !DIExpression()), !dbg !3742
  store i32 0, i32* %6, align 4, !dbg !3742
  %7 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !3743
  %8 = getelementptr inbounds %struct.FTS, %struct.FTS* %7, i32 0, i32 0, !dbg !3745
  %9 = load %struct._ftsent*, %struct._ftsent** %8, align 8, !dbg !3745
  %10 = icmp ne %struct._ftsent* %9, null, !dbg !3743
  br i1 %10, label %11, label %41, !dbg !3746

; <label>:11:                                     ; preds = %1
  %12 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !3747
  %13 = getelementptr inbounds %struct.FTS, %struct.FTS* %12, i32 0, i32 0, !dbg !3750
  %14 = load %struct._ftsent*, %struct._ftsent** %13, align 8, !dbg !3750
  store %struct._ftsent* %14, %struct._ftsent** %5, align 8, !dbg !3751
  br label %15, !dbg !3752

; <label>:15:                                     ; preds = %34, %11
  %16 = load %struct._ftsent*, %struct._ftsent** %5, align 8, !dbg !3753
  %17 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %16, i32 0, i32 11, !dbg !3755
  %18 = load i64, i64* %17, align 8, !dbg !3755
  %19 = icmp sge i64 %18, 0, !dbg !3756
  br i1 %19, label %20, label %38, !dbg !3757

; <label>:20:                                     ; preds = %15
  %21 = load %struct._ftsent*, %struct._ftsent** %5, align 8, !dbg !3758
  store %struct._ftsent* %21, %struct._ftsent** %4, align 8, !dbg !3760
  %22 = load %struct._ftsent*, %struct._ftsent** %5, align 8, !dbg !3761
  %23 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %22, i32 0, i32 2, !dbg !3762
  %24 = load %struct._ftsent*, %struct._ftsent** %23, align 8, !dbg !3762
  %25 = icmp ne %struct._ftsent* %24, null, !dbg !3763
  br i1 %25, label %26, label %30, !dbg !3761

; <label>:26:                                     ; preds = %20
  %27 = load %struct._ftsent*, %struct._ftsent** %5, align 8, !dbg !3764
  %28 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %27, i32 0, i32 2, !dbg !3765
  %29 = load %struct._ftsent*, %struct._ftsent** %28, align 8, !dbg !3765
  br label %34, !dbg !3761

; <label>:30:                                     ; preds = %20
  %31 = load %struct._ftsent*, %struct._ftsent** %5, align 8, !dbg !3766
  %32 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %31, i32 0, i32 1, !dbg !3767
  %33 = load %struct._ftsent*, %struct._ftsent** %32, align 8, !dbg !3767
  br label %34, !dbg !3761

; <label>:34:                                     ; preds = %30, %26
  %35 = phi %struct._ftsent* [ %29, %26 ], [ %33, %30 ], !dbg !3761
  store %struct._ftsent* %35, %struct._ftsent** %5, align 8, !dbg !3768
  %36 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !3769
  %37 = bitcast %struct._ftsent* %36 to i8*, !dbg !3769
  call void @free(i8* %37) #8, !dbg !3770
  br label %15, !dbg !3771, !llvm.loop !3772

; <label>:38:                                     ; preds = %15
  %39 = load %struct._ftsent*, %struct._ftsent** %5, align 8, !dbg !3774
  %40 = bitcast %struct._ftsent* %39 to i8*, !dbg !3774
  call void @free(i8* %40) #8, !dbg !3775
  br label %41, !dbg !3776

; <label>:41:                                     ; preds = %38, %1
  %42 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !3777
  %43 = getelementptr inbounds %struct.FTS, %struct.FTS* %42, i32 0, i32 1, !dbg !3779
  %44 = load %struct._ftsent*, %struct._ftsent** %43, align 8, !dbg !3779
  %45 = icmp ne %struct._ftsent* %44, null, !dbg !3777
  br i1 %45, label %46, label %50, !dbg !3780

; <label>:46:                                     ; preds = %41
  %47 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !3781
  %48 = getelementptr inbounds %struct.FTS, %struct.FTS* %47, i32 0, i32 1, !dbg !3782
  %49 = load %struct._ftsent*, %struct._ftsent** %48, align 8, !dbg !3782
  call void @fts_lfree(%struct._ftsent* %49), !dbg !3783
  br label %50, !dbg !3783

; <label>:50:                                     ; preds = %46, %41
  %51 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !3784
  %52 = getelementptr inbounds %struct.FTS, %struct.FTS* %51, i32 0, i32 2, !dbg !3785
  %53 = load %struct._ftsent**, %struct._ftsent*** %52, align 8, !dbg !3785
  %54 = bitcast %struct._ftsent** %53 to i8*, !dbg !3784
  call void @free(i8* %54) #8, !dbg !3786
  %55 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !3787
  %56 = getelementptr inbounds %struct.FTS, %struct.FTS* %55, i32 0, i32 4, !dbg !3788
  %57 = load i8*, i8** %56, align 8, !dbg !3788
  call void @free(i8* %57) #8, !dbg !3789
  %58 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !3790
  %59 = getelementptr inbounds %struct.FTS, %struct.FTS* %58, i32 0, i32 10, !dbg !3790
  %60 = load i32, i32* %59, align 8, !dbg !3790
  %61 = and i32 %60, 512, !dbg !3790
  %62 = icmp ne i32 %61, 0, !dbg !3790
  br i1 %62, label %63, label %79, !dbg !3792

; <label>:63:                                     ; preds = %50
  %64 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !3793
  %65 = getelementptr inbounds %struct.FTS, %struct.FTS* %64, i32 0, i32 6, !dbg !3796
  %66 = load i32, i32* %65, align 4, !dbg !3796
  %67 = icmp sle i32 0, %66, !dbg !3797
  br i1 %67, label %68, label %78, !dbg !3798

; <label>:68:                                     ; preds = %63
  %69 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !3799
  %70 = getelementptr inbounds %struct.FTS, %struct.FTS* %69, i32 0, i32 6, !dbg !3801
  %71 = load i32, i32* %70, align 4, !dbg !3801
  %72 = call i32 @close(i32 %71), !dbg !3802
  %73 = icmp ne i32 %72, 0, !dbg !3802
  br i1 %73, label %74, label %77, !dbg !3803

; <label>:74:                                     ; preds = %68
  %75 = call i32* @__errno_location() #14, !dbg !3804
  %76 = load i32, i32* %75, align 4, !dbg !3804
  store i32 %76, i32* %6, align 4, !dbg !3805
  br label %77, !dbg !3806

; <label>:77:                                     ; preds = %74, %68
  br label %78, !dbg !3807

; <label>:78:                                     ; preds = %77, %63
  br label %109, !dbg !3808

; <label>:79:                                     ; preds = %50
  %80 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !3809
  %81 = getelementptr inbounds %struct.FTS, %struct.FTS* %80, i32 0, i32 10, !dbg !3809
  %82 = load i32, i32* %81, align 8, !dbg !3809
  %83 = and i32 %82, 4, !dbg !3809
  %84 = icmp ne i32 %83, 0, !dbg !3809
  br i1 %84, label %108, label %85, !dbg !3811

; <label>:85:                                     ; preds = %79
  %86 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !3812
  %87 = getelementptr inbounds %struct.FTS, %struct.FTS* %86, i32 0, i32 5, !dbg !3815
  %88 = load i32, i32* %87, align 8, !dbg !3815
  %89 = call i32 @fchdir(i32 %88) #8, !dbg !3816
  %90 = icmp ne i32 %89, 0, !dbg !3816
  br i1 %90, label %91, label %94, !dbg !3817

; <label>:91:                                     ; preds = %85
  %92 = call i32* @__errno_location() #14, !dbg !3818
  %93 = load i32, i32* %92, align 4, !dbg !3818
  store i32 %93, i32* %6, align 4, !dbg !3819
  br label %94, !dbg !3820

; <label>:94:                                     ; preds = %91, %85
  %95 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !3821
  %96 = getelementptr inbounds %struct.FTS, %struct.FTS* %95, i32 0, i32 5, !dbg !3823
  %97 = load i32, i32* %96, align 8, !dbg !3823
  %98 = call i32 @close(i32 %97), !dbg !3824
  %99 = icmp ne i32 %98, 0, !dbg !3824
  br i1 %99, label %100, label %107, !dbg !3825

; <label>:100:                                    ; preds = %94
  %101 = load i32, i32* %6, align 4, !dbg !3826
  %102 = icmp eq i32 %101, 0, !dbg !3828
  br i1 %102, label %103, label %106, !dbg !3829

; <label>:103:                                    ; preds = %100
  %104 = call i32* @__errno_location() #14, !dbg !3830
  %105 = load i32, i32* %104, align 4, !dbg !3830
  store i32 %105, i32* %6, align 4, !dbg !3831
  br label %106, !dbg !3832

; <label>:106:                                    ; preds = %103, %100
  br label %107, !dbg !3833

; <label>:107:                                    ; preds = %106, %94
  br label %108, !dbg !3834

; <label>:108:                                    ; preds = %107, %79
  br label %109

; <label>:109:                                    ; preds = %108, %78
  %110 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !3835
  %111 = getelementptr inbounds %struct.FTS, %struct.FTS* %110, i32 0, i32 13, !dbg !3836
  call void @fd_ring_clear(%struct.I_ring* %111), !dbg !3837
  %112 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !3838
  %113 = getelementptr inbounds %struct.FTS, %struct.FTS* %112, i32 0, i32 11, !dbg !3840
  %114 = load %struct.hash_table*, %struct.hash_table** %113, align 8, !dbg !3840
  %115 = icmp ne %struct.hash_table* %114, null, !dbg !3838
  br i1 %115, label %116, label %120, !dbg !3841

; <label>:116:                                    ; preds = %109
  %117 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !3842
  %118 = getelementptr inbounds %struct.FTS, %struct.FTS* %117, i32 0, i32 11, !dbg !3843
  %119 = load %struct.hash_table*, %struct.hash_table** %118, align 8, !dbg !3843
  call void @hash_free(%struct.hash_table* %119), !dbg !3844
  br label %120, !dbg !3844

; <label>:120:                                    ; preds = %116, %109
  %121 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !3845
  call void @free_dir(%struct.FTS* %121), !dbg !3846
  %122 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !3847
  %123 = bitcast %struct.FTS* %122 to i8*, !dbg !3847
  call void @free(i8* %123) #8, !dbg !3848
  %124 = load i32, i32* %6, align 4, !dbg !3849
  %125 = icmp ne i32 %124, 0, !dbg !3849
  br i1 %125, label %126, label %129, !dbg !3851

; <label>:126:                                    ; preds = %120
  %127 = load i32, i32* %6, align 4, !dbg !3852
  %128 = call i32* @__errno_location() #14, !dbg !3852
  store i32 %127, i32* %128, align 4, !dbg !3852
  store i32 -1, i32* %2, align 4, !dbg !3854
  br label %130, !dbg !3854

; <label>:129:                                    ; preds = %120
  store i32 0, i32* %2, align 4, !dbg !3855
  br label %130, !dbg !3855

; <label>:130:                                    ; preds = %129, %126
  %131 = load i32, i32* %2, align 4, !dbg !3856
  ret i32 %131, !dbg !3856
}

; Function Attrs: nounwind
declare i32 @fchdir(i32) #5

; Function Attrs: noinline nounwind uwtable
define internal void @fd_ring_clear(%struct.I_ring*) #3 !dbg !3857 {
  %2 = alloca %struct.I_ring*, align 8
  %3 = alloca i32, align 4
  store %struct.I_ring* %0, %struct.I_ring** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.I_ring** %2, metadata !3861, metadata !DIExpression()), !dbg !3862
  br label %4, !dbg !3863

; <label>:4:                                      ; preds = %16, %1
  %5 = load %struct.I_ring*, %struct.I_ring** %2, align 8, !dbg !3864
  %6 = call zeroext i1 @i_ring_empty(%struct.I_ring* %5), !dbg !3865
  %7 = xor i1 %6, true, !dbg !3866
  br i1 %7, label %8, label %17, !dbg !3863

; <label>:8:                                      ; preds = %4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !3867, metadata !DIExpression()), !dbg !3869
  %9 = load %struct.I_ring*, %struct.I_ring** %2, align 8, !dbg !3870
  %10 = call i32 @i_ring_pop(%struct.I_ring* %9), !dbg !3871
  store i32 %10, i32* %3, align 4, !dbg !3869
  %11 = load i32, i32* %3, align 4, !dbg !3872
  %12 = icmp sle i32 0, %11, !dbg !3874
  br i1 %12, label %13, label %16, !dbg !3875

; <label>:13:                                     ; preds = %8
  %14 = load i32, i32* %3, align 4, !dbg !3876
  %15 = call i32 @close(i32 %14), !dbg !3877
  br label %16, !dbg !3877

; <label>:16:                                     ; preds = %13, %8
  br label %4, !dbg !3863, !llvm.loop !3878

; <label>:17:                                     ; preds = %4
  ret void, !dbg !3880
}

; Function Attrs: noinline nounwind uwtable
define internal void @free_dir(%struct.FTS*) #3 !dbg !3881 {
  %2 = alloca %struct.FTS*, align 8
  store %struct.FTS* %0, %struct.FTS** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.FTS** %2, metadata !3884, metadata !DIExpression()), !dbg !3885
  %3 = load %struct.FTS*, %struct.FTS** %2, align 8, !dbg !3886
  %4 = getelementptr inbounds %struct.FTS, %struct.FTS* %3, i32 0, i32 10, !dbg !3888
  %5 = load i32, i32* %4, align 8, !dbg !3888
  %6 = and i32 %5, 258, !dbg !3889
  %7 = icmp ne i32 %6, 0, !dbg !3889
  br i1 %7, label %8, label %20, !dbg !3890

; <label>:8:                                      ; preds = %1
  %9 = load %struct.FTS*, %struct.FTS** %2, align 8, !dbg !3891
  %10 = getelementptr inbounds %struct.FTS, %struct.FTS* %9, i32 0, i32 12, !dbg !3894
  %11 = bitcast %union.anon* %10 to %struct.hash_table**, !dbg !3895
  %12 = load %struct.hash_table*, %struct.hash_table** %11, align 8, !dbg !3895
  %13 = icmp ne %struct.hash_table* %12, null, !dbg !3891
  br i1 %13, label %14, label %19, !dbg !3896

; <label>:14:                                     ; preds = %8
  %15 = load %struct.FTS*, %struct.FTS** %2, align 8, !dbg !3897
  %16 = getelementptr inbounds %struct.FTS, %struct.FTS* %15, i32 0, i32 12, !dbg !3898
  %17 = bitcast %union.anon* %16 to %struct.hash_table**, !dbg !3899
  %18 = load %struct.hash_table*, %struct.hash_table** %17, align 8, !dbg !3899
  call void @hash_free(%struct.hash_table* %18), !dbg !3900
  br label %19, !dbg !3900

; <label>:19:                                     ; preds = %14, %8
  br label %26, !dbg !3901

; <label>:20:                                     ; preds = %1
  %21 = load %struct.FTS*, %struct.FTS** %2, align 8, !dbg !3902
  %22 = getelementptr inbounds %struct.FTS, %struct.FTS* %21, i32 0, i32 12, !dbg !3903
  %23 = bitcast %union.anon* %22 to %struct.cycle_check_state**, !dbg !3904
  %24 = load %struct.cycle_check_state*, %struct.cycle_check_state** %23, align 8, !dbg !3904
  %25 = bitcast %struct.cycle_check_state* %24 to i8*, !dbg !3902
  call void @free(i8* %25) #8, !dbg !3905
  br label %26

; <label>:26:                                     ; preds = %20, %19
  ret void, !dbg !3906
}

; Function Attrs: noinline nounwind uwtable
define %struct._ftsent* @fts_read(%struct.FTS*) #3 !dbg !3907 {
  %2 = alloca %struct._ftsent*, align 8
  %3 = alloca %struct.FTS*, align 8
  %4 = alloca %struct._ftsent*, align 8
  %5 = alloca %struct._ftsent*, align 8
  %6 = alloca i16, align 2
  %7 = alloca i8*, align 8
  %8 = alloca %struct._ftsent*, align 8
  %9 = alloca i32, align 4
  store %struct.FTS* %0, %struct.FTS** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.FTS** %3, metadata !3910, metadata !DIExpression()), !dbg !3911
  call void @llvm.dbg.declare(metadata %struct._ftsent** %4, metadata !3912, metadata !DIExpression()), !dbg !3913
  call void @llvm.dbg.declare(metadata %struct._ftsent** %5, metadata !3914, metadata !DIExpression()), !dbg !3915
  call void @llvm.dbg.declare(metadata i16* %6, metadata !3916, metadata !DIExpression()), !dbg !3917
  call void @llvm.dbg.declare(metadata i8** %7, metadata !3918, metadata !DIExpression()), !dbg !3919
  %10 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !3920
  %11 = getelementptr inbounds %struct.FTS, %struct.FTS* %10, i32 0, i32 0, !dbg !3922
  %12 = load %struct._ftsent*, %struct._ftsent** %11, align 8, !dbg !3922
  %13 = icmp eq %struct._ftsent* %12, null, !dbg !3923
  br i1 %13, label %20, label %14, !dbg !3924

; <label>:14:                                     ; preds = %1
  %15 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !3925
  %16 = getelementptr inbounds %struct.FTS, %struct.FTS* %15, i32 0, i32 10, !dbg !3925
  %17 = load i32, i32* %16, align 8, !dbg !3925
  %18 = and i32 %17, 8192, !dbg !3925
  %19 = icmp ne i32 %18, 0, !dbg !3925
  br i1 %19, label %20, label %21, !dbg !3926

; <label>:20:                                     ; preds = %14, %1
  store %struct._ftsent* null, %struct._ftsent** %2, align 8, !dbg !3927
  br label %751, !dbg !3927

; <label>:21:                                     ; preds = %14
  %22 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !3928
  %23 = getelementptr inbounds %struct.FTS, %struct.FTS* %22, i32 0, i32 0, !dbg !3929
  %24 = load %struct._ftsent*, %struct._ftsent** %23, align 8, !dbg !3929
  store %struct._ftsent* %24, %struct._ftsent** %4, align 8, !dbg !3930
  %25 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !3931
  %26 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %25, i32 0, i32 16, !dbg !3932
  %27 = load i16, i16* %26, align 4, !dbg !3932
  store i16 %27, i16* %6, align 2, !dbg !3933
  %28 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !3934
  %29 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %28, i32 0, i32 16, !dbg !3935
  store i16 3, i16* %29, align 4, !dbg !3936
  %30 = load i16, i16* %6, align 2, !dbg !3937
  %31 = zext i16 %30 to i32, !dbg !3937
  %32 = icmp eq i32 %31, 1, !dbg !3939
  br i1 %32, label %33, label %40, !dbg !3940

; <label>:33:                                     ; preds = %21
  %34 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !3941
  %35 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !3943
  %36 = call zeroext i16 @fts_stat(%struct.FTS* %34, %struct._ftsent* %35, i1 zeroext false), !dbg !3944
  %37 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !3945
  %38 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %37, i32 0, i32 14, !dbg !3946
  store i16 %36, i16* %38, align 8, !dbg !3947
  %39 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !3948
  store %struct._ftsent* %39, %struct._ftsent** %2, align 8, !dbg !3949
  br label %751, !dbg !3949

; <label>:40:                                     ; preds = %21
  %41 = load i16, i16* %6, align 2, !dbg !3950
  %42 = zext i16 %41 to i32, !dbg !3950
  %43 = icmp eq i32 %42, 2, !dbg !3952
  br i1 %43, label %44, label %95, !dbg !3953

; <label>:44:                                     ; preds = %40
  %45 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !3954
  %46 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %45, i32 0, i32 14, !dbg !3955
  %47 = load i16, i16* %46, align 8, !dbg !3955
  %48 = zext i16 %47 to i32, !dbg !3954
  %49 = icmp eq i32 %48, 12, !dbg !3956
  br i1 %49, label %56, label %50, !dbg !3957

; <label>:50:                                     ; preds = %44
  %51 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !3958
  %52 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %51, i32 0, i32 14, !dbg !3959
  %53 = load i16, i16* %52, align 8, !dbg !3959
  %54 = zext i16 %53 to i32, !dbg !3958
  %55 = icmp eq i32 %54, 13, !dbg !3960
  br i1 %55, label %56, label %95, !dbg !3961

; <label>:56:                                     ; preds = %50, %44
  %57 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !3962
  %58 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !3964
  %59 = call zeroext i16 @fts_stat(%struct.FTS* %57, %struct._ftsent* %58, i1 zeroext true), !dbg !3965
  %60 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !3966
  %61 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %60, i32 0, i32 14, !dbg !3967
  store i16 %59, i16* %61, align 8, !dbg !3968
  %62 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !3969
  %63 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %62, i32 0, i32 14, !dbg !3971
  %64 = load i16, i16* %63, align 8, !dbg !3971
  %65 = zext i16 %64 to i32, !dbg !3969
  %66 = icmp eq i32 %65, 1, !dbg !3972
  br i1 %66, label %67, label %94, !dbg !3973

; <label>:67:                                     ; preds = %56
  %68 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !3974
  %69 = getelementptr inbounds %struct.FTS, %struct.FTS* %68, i32 0, i32 10, !dbg !3974
  %70 = load i32, i32* %69, align 8, !dbg !3974
  %71 = and i32 %70, 4, !dbg !3974
  %72 = icmp ne i32 %71, 0, !dbg !3974
  br i1 %72, label %94, label %73, !dbg !3975

; <label>:73:                                     ; preds = %67
  %74 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !3976
  %75 = call i32 @diropen(%struct.FTS* %74, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.150, i32 0, i32 0)), !dbg !3979
  %76 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !3980
  %77 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %76, i32 0, i32 8, !dbg !3981
  store i32 %75, i32* %77, align 4, !dbg !3982
  %78 = icmp slt i32 %75, 0, !dbg !3983
  br i1 %78, label %79, label %86, !dbg !3984

; <label>:79:                                     ; preds = %73
  %80 = call i32* @__errno_location() #14, !dbg !3985
  %81 = load i32, i32* %80, align 4, !dbg !3985
  %82 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !3987
  %83 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %82, i32 0, i32 7, !dbg !3988
  store i32 %81, i32* %83, align 8, !dbg !3989
  %84 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !3990
  %85 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %84, i32 0, i32 14, !dbg !3991
  store i16 7, i16* %85, align 8, !dbg !3992
  br label %93, !dbg !3993

; <label>:86:                                     ; preds = %73
  %87 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !3994
  %88 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %87, i32 0, i32 15, !dbg !3995
  %89 = load i16, i16* %88, align 2, !dbg !3996
  %90 = zext i16 %89 to i32, !dbg !3996
  %91 = or i32 %90, 2, !dbg !3996
  %92 = trunc i32 %91 to i16, !dbg !3996
  store i16 %92, i16* %88, align 2, !dbg !3996
  br label %93

; <label>:93:                                     ; preds = %86, %79
  br label %94, !dbg !3997

; <label>:94:                                     ; preds = %93, %67, %56
  br label %432, !dbg !3998

; <label>:95:                                     ; preds = %50, %40
  %96 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !3999
  %97 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %96, i32 0, i32 14, !dbg !4001
  %98 = load i16, i16* %97, align 8, !dbg !4001
  %99 = zext i16 %98 to i32, !dbg !3999
  %100 = icmp eq i32 %99, 1, !dbg !4002
  br i1 %100, label %101, label %257, !dbg !4003

; <label>:101:                                    ; preds = %95
  %102 = load i16, i16* %6, align 2, !dbg !4004
  %103 = zext i16 %102 to i32, !dbg !4004
  %104 = icmp eq i32 %103, 4, !dbg !4007
  br i1 %104, label %121, label %105, !dbg !4008

; <label>:105:                                    ; preds = %101
  %106 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !4009
  %107 = getelementptr inbounds %struct.FTS, %struct.FTS* %106, i32 0, i32 10, !dbg !4009
  %108 = load i32, i32* %107, align 8, !dbg !4009
  %109 = and i32 %108, 64, !dbg !4009
  %110 = icmp ne i32 %109, 0, !dbg !4009
  br i1 %110, label %111, label %152, !dbg !4010

; <label>:111:                                    ; preds = %105
  %112 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !4011
  %113 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %112, i32 0, i32 17, !dbg !4012
  %114 = getelementptr inbounds [1 x %struct.stat], [1 x %struct.stat]* %113, i32 0, i32 0, !dbg !4013
  %115 = getelementptr inbounds %struct.stat, %struct.stat* %114, i32 0, i32 0, !dbg !4013
  %116 = load i64, i64* %115, align 8, !dbg !4013
  %117 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !4014
  %118 = getelementptr inbounds %struct.FTS, %struct.FTS* %117, i32 0, i32 3, !dbg !4015
  %119 = load i64, i64* %118, align 8, !dbg !4015
  %120 = icmp ne i64 %116, %119, !dbg !4016
  br i1 %120, label %121, label %152, !dbg !4017

; <label>:121:                                    ; preds = %111, %101
  %122 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !4018
  %123 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %122, i32 0, i32 15, !dbg !4021
  %124 = load i16, i16* %123, align 2, !dbg !4021
  %125 = zext i16 %124 to i32, !dbg !4018
  %126 = and i32 %125, 2, !dbg !4022
  %127 = icmp ne i32 %126, 0, !dbg !4022
  br i1 %127, label %128, label %133, !dbg !4023

; <label>:128:                                    ; preds = %121
  %129 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !4024
  %130 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %129, i32 0, i32 8, !dbg !4025
  %131 = load i32, i32* %130, align 4, !dbg !4025
  %132 = call i32 @close(i32 %131), !dbg !4026
  br label %133, !dbg !4027

; <label>:133:                                    ; preds = %128, %121
  %134 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !4028
  %135 = getelementptr inbounds %struct.FTS, %struct.FTS* %134, i32 0, i32 1, !dbg !4030
  %136 = load %struct._ftsent*, %struct._ftsent** %135, align 8, !dbg !4030
  %137 = icmp ne %struct._ftsent* %136, null, !dbg !4028
  br i1 %137, label %138, label %144, !dbg !4031

; <label>:138:                                    ; preds = %133
  %139 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !4032
  %140 = getelementptr inbounds %struct.FTS, %struct.FTS* %139, i32 0, i32 1, !dbg !4034
  %141 = load %struct._ftsent*, %struct._ftsent** %140, align 8, !dbg !4034
  call void @fts_lfree(%struct._ftsent* %141), !dbg !4035
  %142 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !4036
  %143 = getelementptr inbounds %struct.FTS, %struct.FTS* %142, i32 0, i32 1, !dbg !4037
  store %struct._ftsent* null, %struct._ftsent** %143, align 8, !dbg !4038
  br label %144, !dbg !4039

; <label>:144:                                    ; preds = %138, %133
  %145 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !4040
  %146 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %145, i32 0, i32 14, !dbg !4041
  store i16 6, i16* %146, align 8, !dbg !4042
  br label %147, !dbg !4043, !llvm.loop !4044

; <label>:147:                                    ; preds = %144
  %148 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !4045
  %149 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !4045
  call void @leave_dir(%struct.FTS* %148, %struct._ftsent* %149), !dbg !4045
  br label %150, !dbg !4045

; <label>:150:                                    ; preds = %147
  %151 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !4047
  store %struct._ftsent* %151, %struct._ftsent** %2, align 8, !dbg !4048
  br label %751, !dbg !4048

; <label>:152:                                    ; preds = %111, %105
  %153 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !4049
  %154 = getelementptr inbounds %struct.FTS, %struct.FTS* %153, i32 0, i32 1, !dbg !4051
  %155 = load %struct._ftsent*, %struct._ftsent** %154, align 8, !dbg !4051
  %156 = icmp ne %struct._ftsent* %155, null, !dbg !4052
  br i1 %156, label %157, label %173, !dbg !4053

; <label>:157:                                    ; preds = %152
  %158 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !4054
  %159 = getelementptr inbounds %struct.FTS, %struct.FTS* %158, i32 0, i32 10, !dbg !4054
  %160 = load i32, i32* %159, align 8, !dbg !4054
  %161 = and i32 %160, 4096, !dbg !4054
  %162 = icmp ne i32 %161, 0, !dbg !4054
  br i1 %162, label %163, label %173, !dbg !4055

; <label>:163:                                    ; preds = %157
  %164 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !4056
  %165 = getelementptr inbounds %struct.FTS, %struct.FTS* %164, i32 0, i32 10, !dbg !4056
  %166 = load i32, i32* %165, align 8, !dbg !4056
  %167 = and i32 %166, -4097, !dbg !4056
  store i32 %167, i32* %165, align 8, !dbg !4056
  %168 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !4058
  %169 = getelementptr inbounds %struct.FTS, %struct.FTS* %168, i32 0, i32 1, !dbg !4059
  %170 = load %struct._ftsent*, %struct._ftsent** %169, align 8, !dbg !4059
  call void @fts_lfree(%struct._ftsent* %170), !dbg !4060
  %171 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !4061
  %172 = getelementptr inbounds %struct.FTS, %struct.FTS* %171, i32 0, i32 1, !dbg !4062
  store %struct._ftsent* null, %struct._ftsent** %172, align 8, !dbg !4063
  br label %173, !dbg !4064

; <label>:173:                                    ; preds = %163, %157, %152
  %174 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !4065
  %175 = getelementptr inbounds %struct.FTS, %struct.FTS* %174, i32 0, i32 1, !dbg !4067
  %176 = load %struct._ftsent*, %struct._ftsent** %175, align 8, !dbg !4067
  %177 = icmp ne %struct._ftsent* %176, null, !dbg !4068
  br i1 %177, label %178, label %217, !dbg !4069

; <label>:178:                                    ; preds = %173
  %179 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !4070
  %180 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !4073
  %181 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !4074
  %182 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %181, i32 0, i32 5, !dbg !4075
  %183 = load i8*, i8** %182, align 8, !dbg !4075
  %184 = call i32 @fts_safe_changedir(%struct.FTS* %179, %struct._ftsent* %180, i32 -1, i8* %183), !dbg !4076
  %185 = icmp ne i32 %184, 0, !dbg !4076
  br i1 %185, label %186, label %216, !dbg !4077

; <label>:186:                                    ; preds = %178
  %187 = call i32* @__errno_location() #14, !dbg !4078
  %188 = load i32, i32* %187, align 4, !dbg !4078
  %189 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !4080
  %190 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %189, i32 0, i32 7, !dbg !4081
  store i32 %188, i32* %190, align 8, !dbg !4082
  %191 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !4083
  %192 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %191, i32 0, i32 15, !dbg !4084
  %193 = load i16, i16* %192, align 2, !dbg !4085
  %194 = zext i16 %193 to i32, !dbg !4085
  %195 = or i32 %194, 1, !dbg !4085
  %196 = trunc i32 %195 to i16, !dbg !4085
  store i16 %196, i16* %192, align 2, !dbg !4085
  %197 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !4086
  %198 = getelementptr inbounds %struct.FTS, %struct.FTS* %197, i32 0, i32 1, !dbg !4088
  %199 = load %struct._ftsent*, %struct._ftsent** %198, align 8, !dbg !4088
  store %struct._ftsent* %199, %struct._ftsent** %4, align 8, !dbg !4089
  br label %200, !dbg !4090

; <label>:200:                                    ; preds = %211, %186
  %201 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !4091
  %202 = icmp ne %struct._ftsent* %201, null, !dbg !4093
  br i1 %202, label %203, label %215, !dbg !4094

; <label>:203:                                    ; preds = %200
  %204 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !4095
  %205 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %204, i32 0, i32 1, !dbg !4096
  %206 = load %struct._ftsent*, %struct._ftsent** %205, align 8, !dbg !4096
  %207 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %206, i32 0, i32 5, !dbg !4097
  %208 = load i8*, i8** %207, align 8, !dbg !4097
  %209 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !4098
  %210 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %209, i32 0, i32 5, !dbg !4099
  store i8* %208, i8** %210, align 8, !dbg !4100
  br label %211, !dbg !4098

; <label>:211:                                    ; preds = %203
  %212 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !4101
  %213 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %212, i32 0, i32 2, !dbg !4102
  %214 = load %struct._ftsent*, %struct._ftsent** %213, align 8, !dbg !4102
  store %struct._ftsent* %214, %struct._ftsent** %4, align 8, !dbg !4103
  br label %200, !dbg !4104, !llvm.loop !4105

; <label>:215:                                    ; preds = %200
  br label %216, !dbg !4107

; <label>:216:                                    ; preds = %215, %178
  br label %251, !dbg !4108

; <label>:217:                                    ; preds = %173
  %218 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !4109
  %219 = call %struct._ftsent* @fts_build(%struct.FTS* %218, i32 3), !dbg !4111
  %220 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !4112
  %221 = getelementptr inbounds %struct.FTS, %struct.FTS* %220, i32 0, i32 1, !dbg !4113
  store %struct._ftsent* %219, %struct._ftsent** %221, align 8, !dbg !4114
  %222 = icmp eq %struct._ftsent* %219, null, !dbg !4115
  br i1 %222, label %223, label %250, !dbg !4116

; <label>:223:                                    ; preds = %217
  %224 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !4117
  %225 = getelementptr inbounds %struct.FTS, %struct.FTS* %224, i32 0, i32 10, !dbg !4117
  %226 = load i32, i32* %225, align 8, !dbg !4117
  %227 = and i32 %226, 8192, !dbg !4117
  %228 = icmp ne i32 %227, 0, !dbg !4117
  br i1 %228, label %229, label %230, !dbg !4120

; <label>:229:                                    ; preds = %223
  store %struct._ftsent* null, %struct._ftsent** %2, align 8, !dbg !4121
  br label %751, !dbg !4121

; <label>:230:                                    ; preds = %223
  %231 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !4122
  %232 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %231, i32 0, i32 7, !dbg !4124
  %233 = load i32, i32* %232, align 8, !dbg !4124
  %234 = icmp ne i32 %233, 0, !dbg !4122
  br i1 %234, label %235, label %244, !dbg !4125

; <label>:235:                                    ; preds = %230
  %236 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !4126
  %237 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %236, i32 0, i32 14, !dbg !4127
  %238 = load i16, i16* %237, align 8, !dbg !4127
  %239 = zext i16 %238 to i32, !dbg !4126
  %240 = icmp ne i32 %239, 4, !dbg !4128
  br i1 %240, label %241, label %244, !dbg !4129

; <label>:241:                                    ; preds = %235
  %242 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !4130
  %243 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %242, i32 0, i32 14, !dbg !4131
  store i16 7, i16* %243, align 8, !dbg !4132
  br label %244, !dbg !4130

; <label>:244:                                    ; preds = %241, %235, %230
  br label %245, !dbg !4133, !llvm.loop !4134

; <label>:245:                                    ; preds = %244
  %246 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !4135
  %247 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !4135
  call void @leave_dir(%struct.FTS* %246, %struct._ftsent* %247), !dbg !4135
  br label %248, !dbg !4135

; <label>:248:                                    ; preds = %245
  %249 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !4137
  store %struct._ftsent* %249, %struct._ftsent** %2, align 8, !dbg !4138
  br label %751, !dbg !4138

; <label>:250:                                    ; preds = %217
  br label %251

; <label>:251:                                    ; preds = %250, %216
  %252 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !4139
  %253 = getelementptr inbounds %struct.FTS, %struct.FTS* %252, i32 0, i32 1, !dbg !4140
  %254 = load %struct._ftsent*, %struct._ftsent** %253, align 8, !dbg !4140
  store %struct._ftsent* %254, %struct._ftsent** %4, align 8, !dbg !4141
  %255 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !4142
  %256 = getelementptr inbounds %struct.FTS, %struct.FTS* %255, i32 0, i32 1, !dbg !4143
  store %struct._ftsent* null, %struct._ftsent** %256, align 8, !dbg !4144
  br label %387, !dbg !4145

; <label>:257:                                    ; preds = %95
  br label %258, !dbg !4146

; <label>:258:                                    ; preds = %338, %257
  %259 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !4147
  store %struct._ftsent* %259, %struct._ftsent** %5, align 8, !dbg !4148
  %260 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !4149
  %261 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %260, i32 0, i32 2, !dbg !4151
  %262 = load %struct._ftsent*, %struct._ftsent** %261, align 8, !dbg !4151
  store %struct._ftsent* %262, %struct._ftsent** %4, align 8, !dbg !4152
  %263 = icmp ne %struct._ftsent* %262, null, !dbg !4153
  br i1 %263, label %264, label %547, !dbg !4154

; <label>:264:                                    ; preds = %258
  %265 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !4155
  %266 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !4157
  %267 = getelementptr inbounds %struct.FTS, %struct.FTS* %266, i32 0, i32 0, !dbg !4158
  store %struct._ftsent* %265, %struct._ftsent** %267, align 8, !dbg !4159
  %268 = load %struct._ftsent*, %struct._ftsent** %5, align 8, !dbg !4160
  %269 = bitcast %struct._ftsent* %268 to i8*, !dbg !4160
  call void @free(i8* %269) #8, !dbg !4161
  %270 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !4162
  %271 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %270, i32 0, i32 11, !dbg !4164
  %272 = load i64, i64* %271, align 8, !dbg !4164
  %273 = icmp eq i64 %272, 0, !dbg !4165
  br i1 %273, label %274, label %332, !dbg !4166

; <label>:274:                                    ; preds = %264
  %275 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !4167
  %276 = getelementptr inbounds %struct.FTS, %struct.FTS* %275, i32 0, i32 13, !dbg !4167
  call void @fd_ring_clear(%struct.I_ring* %276), !dbg !4167
  %277 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !4167
  %278 = getelementptr inbounds %struct.FTS, %struct.FTS* %277, i32 0, i32 10, !dbg !4167
  %279 = load i32, i32* %278, align 8, !dbg !4167
  %280 = and i32 %279, 4, !dbg !4167
  %281 = icmp ne i32 %280, 0, !dbg !4167
  br i1 %281, label %319, label %282, !dbg !4167

; <label>:282:                                    ; preds = %274
  %283 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !4167
  %284 = getelementptr inbounds %struct.FTS, %struct.FTS* %283, i32 0, i32 10, !dbg !4167
  %285 = load i32, i32* %284, align 8, !dbg !4167
  %286 = and i32 %285, 512, !dbg !4167
  %287 = icmp ne i32 %286, 0, !dbg !4167
  br i1 %287, label %288, label %302, !dbg !4167

; <label>:288:                                    ; preds = %282
  %289 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !4167
  %290 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !4167
  %291 = getelementptr inbounds %struct.FTS, %struct.FTS* %290, i32 0, i32 10, !dbg !4167
  %292 = load i32, i32* %291, align 8, !dbg !4167
  %293 = and i32 %292, 512, !dbg !4167
  %294 = icmp ne i32 %293, 0, !dbg !4167
  br i1 %294, label %295, label %296, !dbg !4167

; <label>:295:                                    ; preds = %288
  br label %300, !dbg !4167

; <label>:296:                                    ; preds = %288
  %297 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !4167
  %298 = getelementptr inbounds %struct.FTS, %struct.FTS* %297, i32 0, i32 5, !dbg !4167
  %299 = load i32, i32* %298, align 8, !dbg !4167
  br label %300, !dbg !4167

; <label>:300:                                    ; preds = %296, %295
  %301 = phi i32 [ -100, %295 ], [ %299, %296 ], !dbg !4167
  call void @cwd_advance_fd(%struct.FTS* %289, i32 %301, i1 zeroext true), !dbg !4167
  br label %316, !dbg !4167

; <label>:302:                                    ; preds = %282
  %303 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !4167
  %304 = getelementptr inbounds %struct.FTS, %struct.FTS* %303, i32 0, i32 10, !dbg !4167
  %305 = load i32, i32* %304, align 8, !dbg !4167
  %306 = and i32 %305, 512, !dbg !4167
  %307 = icmp ne i32 %306, 0, !dbg !4167
  br i1 %307, label %308, label %309, !dbg !4167

; <label>:308:                                    ; preds = %302
  br label %313, !dbg !4167

; <label>:309:                                    ; preds = %302
  %310 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !4167
  %311 = getelementptr inbounds %struct.FTS, %struct.FTS* %310, i32 0, i32 5, !dbg !4167
  %312 = load i32, i32* %311, align 8, !dbg !4167
  br label %313, !dbg !4167

; <label>:313:                                    ; preds = %309, %308
  %314 = phi i32 [ -100, %308 ], [ %312, %309 ], !dbg !4167
  %315 = call i32 @fchdir(i32 %314) #8, !dbg !4167
  br label %316, !dbg !4167

; <label>:316:                                    ; preds = %313, %300
  %317 = phi i32 [ 0, %300 ], [ %315, %313 ], !dbg !4167
  %318 = icmp ne i32 %317, 0, !dbg !4167
  br label %319

; <label>:319:                                    ; preds = %316, %274
  %320 = phi i1 [ false, %274 ], [ %318, %316 ]
  br i1 %320, label %321, label %326, !dbg !4170

; <label>:321:                                    ; preds = %319
  %322 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !4171
  %323 = getelementptr inbounds %struct.FTS, %struct.FTS* %322, i32 0, i32 10, !dbg !4171
  %324 = load i32, i32* %323, align 8, !dbg !4171
  %325 = or i32 %324, 8192, !dbg !4171
  store i32 %325, i32* %323, align 8, !dbg !4171
  store %struct._ftsent* null, %struct._ftsent** %2, align 8, !dbg !4173
  br label %751, !dbg !4173

; <label>:326:                                    ; preds = %319
  %327 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !4174
  call void @free_dir(%struct.FTS* %327), !dbg !4175
  %328 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !4176
  %329 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !4177
  call void @fts_load(%struct.FTS* %328, %struct._ftsent* %329), !dbg !4178
  %330 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !4179
  %331 = call zeroext i1 @setup_dir(%struct.FTS* %330), !dbg !4180
  br label %432, !dbg !4181

; <label>:332:                                    ; preds = %264
  %333 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !4182
  %334 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %333, i32 0, i32 16, !dbg !4184
  %335 = load i16, i16* %334, align 4, !dbg !4184
  %336 = zext i16 %335 to i32, !dbg !4182
  %337 = icmp eq i32 %336, 4, !dbg !4185
  br i1 %337, label %338, label %339, !dbg !4186

; <label>:338:                                    ; preds = %332
  br label %258, !dbg !4187

; <label>:339:                                    ; preds = %332
  %340 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !4188
  %341 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %340, i32 0, i32 16, !dbg !4190
  %342 = load i16, i16* %341, align 4, !dbg !4190
  %343 = zext i16 %342 to i32, !dbg !4188
  %344 = icmp eq i32 %343, 2, !dbg !4191
  br i1 %344, label %345, label %386, !dbg !4192

; <label>:345:                                    ; preds = %339
  %346 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !4193
  %347 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !4195
  %348 = call zeroext i16 @fts_stat(%struct.FTS* %346, %struct._ftsent* %347, i1 zeroext true), !dbg !4196
  %349 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !4197
  %350 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %349, i32 0, i32 14, !dbg !4198
  store i16 %348, i16* %350, align 8, !dbg !4199
  %351 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !4200
  %352 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %351, i32 0, i32 14, !dbg !4202
  %353 = load i16, i16* %352, align 8, !dbg !4202
  %354 = zext i16 %353 to i32, !dbg !4200
  %355 = icmp eq i32 %354, 1, !dbg !4203
  br i1 %355, label %356, label %383, !dbg !4204

; <label>:356:                                    ; preds = %345
  %357 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !4205
  %358 = getelementptr inbounds %struct.FTS, %struct.FTS* %357, i32 0, i32 10, !dbg !4205
  %359 = load i32, i32* %358, align 8, !dbg !4205
  %360 = and i32 %359, 4, !dbg !4205
  %361 = icmp ne i32 %360, 0, !dbg !4205
  br i1 %361, label %383, label %362, !dbg !4206

; <label>:362:                                    ; preds = %356
  %363 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !4207
  %364 = call i32 @diropen(%struct.FTS* %363, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.150, i32 0, i32 0)), !dbg !4210
  %365 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !4211
  %366 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %365, i32 0, i32 8, !dbg !4212
  store i32 %364, i32* %366, align 4, !dbg !4213
  %367 = icmp slt i32 %364, 0, !dbg !4214
  br i1 %367, label %368, label %375, !dbg !4215

; <label>:368:                                    ; preds = %362
  %369 = call i32* @__errno_location() #14, !dbg !4216
  %370 = load i32, i32* %369, align 4, !dbg !4216
  %371 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !4218
  %372 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %371, i32 0, i32 7, !dbg !4219
  store i32 %370, i32* %372, align 8, !dbg !4220
  %373 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !4221
  %374 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %373, i32 0, i32 14, !dbg !4222
  store i16 7, i16* %374, align 8, !dbg !4223
  br label %382, !dbg !4224

; <label>:375:                                    ; preds = %362
  %376 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !4225
  %377 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %376, i32 0, i32 15, !dbg !4226
  %378 = load i16, i16* %377, align 2, !dbg !4227
  %379 = zext i16 %378 to i32, !dbg !4227
  %380 = or i32 %379, 2, !dbg !4227
  %381 = trunc i32 %380 to i16, !dbg !4227
  store i16 %381, i16* %377, align 2, !dbg !4227
  br label %382

; <label>:382:                                    ; preds = %375, %368
  br label %383, !dbg !4228

; <label>:383:                                    ; preds = %382, %356, %345
  %384 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !4229
  %385 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %384, i32 0, i32 16, !dbg !4230
  store i16 3, i16* %385, align 4, !dbg !4231
  br label %386, !dbg !4232

; <label>:386:                                    ; preds = %383, %339
  br label %387, !dbg !4233

; <label>:387:                                    ; preds = %386, %251
  %388 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !4234
  %389 = getelementptr inbounds %struct.FTS, %struct.FTS* %388, i32 0, i32 4, !dbg !4235
  %390 = load i8*, i8** %389, align 8, !dbg !4235
  %391 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !4236
  %392 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %391, i32 0, i32 1, !dbg !4236
  %393 = load %struct._ftsent*, %struct._ftsent** %392, align 8, !dbg !4236
  %394 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %393, i32 0, i32 6, !dbg !4236
  %395 = load i8*, i8** %394, align 8, !dbg !4236
  %396 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !4236
  %397 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %396, i32 0, i32 1, !dbg !4236
  %398 = load %struct._ftsent*, %struct._ftsent** %397, align 8, !dbg !4236
  %399 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %398, i32 0, i32 9, !dbg !4236
  %400 = load i64, i64* %399, align 8, !dbg !4236
  %401 = sub i64 %400, 1, !dbg !4236
  %402 = getelementptr inbounds i8, i8* %395, i64 %401, !dbg !4236
  %403 = load i8, i8* %402, align 1, !dbg !4236
  %404 = sext i8 %403 to i32, !dbg !4236
  %405 = icmp eq i32 %404, 47, !dbg !4236
  br i1 %405, label %406, label %413, !dbg !4236

; <label>:406:                                    ; preds = %387
  %407 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !4236
  %408 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %407, i32 0, i32 1, !dbg !4236
  %409 = load %struct._ftsent*, %struct._ftsent** %408, align 8, !dbg !4236
  %410 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %409, i32 0, i32 9, !dbg !4236
  %411 = load i64, i64* %410, align 8, !dbg !4236
  %412 = sub i64 %411, 1, !dbg !4236
  br label %419, !dbg !4236

; <label>:413:                                    ; preds = %387
  %414 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !4236
  %415 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %414, i32 0, i32 1, !dbg !4236
  %416 = load %struct._ftsent*, %struct._ftsent** %415, align 8, !dbg !4236
  %417 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %416, i32 0, i32 9, !dbg !4236
  %418 = load i64, i64* %417, align 8, !dbg !4236
  br label %419, !dbg !4236

; <label>:419:                                    ; preds = %413, %406
  %420 = phi i64 [ %412, %406 ], [ %418, %413 ], !dbg !4236
  %421 = getelementptr inbounds i8, i8* %390, i64 %420, !dbg !4237
  store i8* %421, i8** %7, align 8, !dbg !4238
  %422 = load i8*, i8** %7, align 8, !dbg !4239
  %423 = getelementptr inbounds i8, i8* %422, i32 1, !dbg !4239
  store i8* %423, i8** %7, align 8, !dbg !4239
  store i8 47, i8* %422, align 1, !dbg !4240
  %424 = load i8*, i8** %7, align 8, !dbg !4241
  %425 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !4242
  %426 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %425, i32 0, i32 18, !dbg !4243
  %427 = getelementptr inbounds [1 x i8], [1 x i8]* %426, i32 0, i32 0, !dbg !4244
  %428 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !4245
  %429 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %428, i32 0, i32 12, !dbg !4246
  %430 = load i64, i64* %429, align 8, !dbg !4246
  %431 = add i64 %430, 1, !dbg !4247
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %424, i8* %427, i64 %431, i32 1, i1 false), !dbg !4244
  br label %432, !dbg !4244

; <label>:432:                                    ; preds = %419, %326, %94
  %433 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !4248
  %434 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !4249
  %435 = getelementptr inbounds %struct.FTS, %struct.FTS* %434, i32 0, i32 0, !dbg !4250
  store %struct._ftsent* %433, %struct._ftsent** %435, align 8, !dbg !4251
  %436 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !4252
  %437 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %436, i32 0, i32 14, !dbg !4254
  %438 = load i16, i16* %437, align 8, !dbg !4254
  %439 = zext i16 %438 to i32, !dbg !4252
  %440 = icmp eq i32 %439, 11, !dbg !4255
  br i1 %440, label %441, label %519, !dbg !4256

; <label>:441:                                    ; preds = %432
  %442 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !4257
  %443 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %442, i32 0, i32 17, !dbg !4260
  %444 = getelementptr inbounds [1 x %struct.stat], [1 x %struct.stat]* %443, i32 0, i32 0, !dbg !4261
  %445 = getelementptr inbounds %struct.stat, %struct.stat* %444, i32 0, i32 8, !dbg !4261
  %446 = load i64, i64* %445, align 8, !dbg !4261
  %447 = icmp eq i64 %446, 2, !dbg !4262
  br i1 %447, label %448, label %507, !dbg !4263

; <label>:448:                                    ; preds = %441
  call void @llvm.dbg.declare(metadata %struct._ftsent** %8, metadata !4264, metadata !DIExpression()), !dbg !4266
  %449 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !4267
  %450 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %449, i32 0, i32 1, !dbg !4268
  %451 = load %struct._ftsent*, %struct._ftsent** %450, align 8, !dbg !4268
  store %struct._ftsent* %451, %struct._ftsent** %8, align 8, !dbg !4266
  %452 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !4269
  %453 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %452, i32 0, i32 11, !dbg !4271
  %454 = load i64, i64* %453, align 8, !dbg !4271
  %455 = icmp slt i64 0, %454, !dbg !4272
  br i1 %455, label %456, label %477, !dbg !4273

; <label>:456:                                    ; preds = %448
  %457 = load %struct._ftsent*, %struct._ftsent** %8, align 8, !dbg !4274
  %458 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %457, i32 0, i32 13, !dbg !4275
  %459 = load i64, i64* %458, align 8, !dbg !4275
  %460 = icmp eq i64 %459, 0, !dbg !4276
  br i1 %460, label %461, label %477, !dbg !4277

; <label>:461:                                    ; preds = %456
  %462 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !4278
  %463 = getelementptr inbounds %struct.FTS, %struct.FTS* %462, i32 0, i32 10, !dbg !4278
  %464 = load i32, i32* %463, align 8, !dbg !4278
  %465 = and i32 %464, 8, !dbg !4278
  %466 = icmp ne i32 %465, 0, !dbg !4278
  br i1 %466, label %467, label %477, !dbg !4279

; <label>:467:                                    ; preds = %461
  %468 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !4280
  %469 = getelementptr inbounds %struct.FTS, %struct.FTS* %468, i32 0, i32 10, !dbg !4280
  %470 = load i32, i32* %469, align 8, !dbg !4280
  %471 = and i32 %470, 16, !dbg !4280
  %472 = icmp ne i32 %471, 0, !dbg !4280
  br i1 %472, label %473, label %477, !dbg !4281

; <label>:473:                                    ; preds = %467
  %474 = load %struct._ftsent*, %struct._ftsent** %8, align 8, !dbg !4282
  %475 = call zeroext i1 @link_count_optimize_ok(%struct._ftsent* %474), !dbg !4283
  br i1 %475, label %476, label %477, !dbg !4284

; <label>:476:                                    ; preds = %473
  br label %506, !dbg !4285

; <label>:477:                                    ; preds = %473, %467, %461, %456, %448
  %478 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !4287
  %479 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !4289
  %480 = call zeroext i16 @fts_stat(%struct.FTS* %478, %struct._ftsent* %479, i1 zeroext false), !dbg !4290
  %481 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !4291
  %482 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %481, i32 0, i32 14, !dbg !4292
  store i16 %480, i16* %482, align 8, !dbg !4293
  %483 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !4294
  %484 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %483, i32 0, i32 17, !dbg !4294
  %485 = getelementptr inbounds [1 x %struct.stat], [1 x %struct.stat]* %484, i32 0, i32 0, !dbg !4294
  %486 = getelementptr inbounds %struct.stat, %struct.stat* %485, i32 0, i32 3, !dbg !4294
  %487 = load i32, i32* %486, align 8, !dbg !4294
  %488 = and i32 %487, 61440, !dbg !4294
  %489 = icmp eq i32 %488, 16384, !dbg !4294
  br i1 %489, label %490, label %505, !dbg !4296

; <label>:490:                                    ; preds = %477
  %491 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !4297
  %492 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %491, i32 0, i32 11, !dbg !4298
  %493 = load i64, i64* %492, align 8, !dbg !4298
  %494 = icmp ne i64 %493, 0, !dbg !4299
  br i1 %494, label %495, label %505, !dbg !4300

; <label>:495:                                    ; preds = %490
  %496 = load %struct._ftsent*, %struct._ftsent** %8, align 8, !dbg !4301
  %497 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %496, i32 0, i32 13, !dbg !4302
  %498 = load i64, i64* %497, align 8, !dbg !4302
  %499 = icmp ne i64 %498, 0, !dbg !4301
  br i1 %499, label %500, label %505, !dbg !4303

; <label>:500:                                    ; preds = %495
  %501 = load %struct._ftsent*, %struct._ftsent** %8, align 8, !dbg !4304
  %502 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %501, i32 0, i32 13, !dbg !4305
  %503 = load i64, i64* %502, align 8, !dbg !4306
  %504 = add i64 %503, -1, !dbg !4306
  store i64 %504, i64* %502, align 8, !dbg !4306
  br label %505, !dbg !4304

; <label>:505:                                    ; preds = %500, %495, %490, %477
  br label %506

; <label>:506:                                    ; preds = %505, %476
  br label %518, !dbg !4307

; <label>:507:                                    ; preds = %441
  br label %508, !dbg !4308, !llvm.loop !4309

; <label>:508:                                    ; preds = %507
  %509 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !4310
  %510 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %509, i32 0, i32 17, !dbg !4310
  %511 = getelementptr inbounds [1 x %struct.stat], [1 x %struct.stat]* %510, i32 0, i32 0, !dbg !4310
  %512 = getelementptr inbounds %struct.stat, %struct.stat* %511, i32 0, i32 8, !dbg !4310
  %513 = load i64, i64* %512, align 8, !dbg !4310
  %514 = icmp eq i64 %513, 1, !dbg !4310
  br i1 %514, label %516, label %515, !dbg !4313

; <label>:515:                                    ; preds = %508
  call void @abort() #11, !dbg !4310
  unreachable, !dbg !4310

; <label>:516:                                    ; preds = %508
  br label %517, !dbg !4313

; <label>:517:                                    ; preds = %516
  br label %518

; <label>:518:                                    ; preds = %517, %506
  br label %519, !dbg !4314

; <label>:519:                                    ; preds = %518, %432
  %520 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !4315
  %521 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %520, i32 0, i32 14, !dbg !4317
  %522 = load i16, i16* %521, align 8, !dbg !4317
  %523 = zext i16 %522 to i32, !dbg !4315
  %524 = icmp eq i32 %523, 1, !dbg !4318
  br i1 %524, label %525, label %545, !dbg !4319

; <label>:525:                                    ; preds = %519
  %526 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !4320
  %527 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %526, i32 0, i32 11, !dbg !4323
  %528 = load i64, i64* %527, align 8, !dbg !4323
  %529 = icmp eq i64 %528, 0, !dbg !4324
  br i1 %529, label %530, label %538, !dbg !4325

; <label>:530:                                    ; preds = %525
  %531 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !4326
  %532 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %531, i32 0, i32 17, !dbg !4327
  %533 = getelementptr inbounds [1 x %struct.stat], [1 x %struct.stat]* %532, i32 0, i32 0, !dbg !4328
  %534 = getelementptr inbounds %struct.stat, %struct.stat* %533, i32 0, i32 0, !dbg !4328
  %535 = load i64, i64* %534, align 8, !dbg !4328
  %536 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !4329
  %537 = getelementptr inbounds %struct.FTS, %struct.FTS* %536, i32 0, i32 3, !dbg !4330
  store i64 %535, i64* %537, align 8, !dbg !4331
  br label %538, !dbg !4329

; <label>:538:                                    ; preds = %530, %525
  %539 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !4332
  %540 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !4334
  %541 = call zeroext i1 @enter_dir(%struct.FTS* %539, %struct._ftsent* %540), !dbg !4335
  br i1 %541, label %544, label %542, !dbg !4336

; <label>:542:                                    ; preds = %538
  %543 = call i32* @__errno_location() #14, !dbg !4337
  store i32 12, i32* %543, align 4, !dbg !4337
  store %struct._ftsent* null, %struct._ftsent** %2, align 8, !dbg !4339
  br label %751, !dbg !4339

; <label>:544:                                    ; preds = %538
  br label %545, !dbg !4340

; <label>:545:                                    ; preds = %544, %519
  %546 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !4341
  store %struct._ftsent* %546, %struct._ftsent** %2, align 8, !dbg !4342
  br label %751, !dbg !4342

; <label>:547:                                    ; preds = %258
  %548 = load %struct._ftsent*, %struct._ftsent** %5, align 8, !dbg !4343
  %549 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %548, i32 0, i32 1, !dbg !4344
  %550 = load %struct._ftsent*, %struct._ftsent** %549, align 8, !dbg !4344
  store %struct._ftsent* %550, %struct._ftsent** %4, align 8, !dbg !4345
  %551 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !4346
  %552 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !4347
  %553 = getelementptr inbounds %struct.FTS, %struct.FTS* %552, i32 0, i32 0, !dbg !4348
  store %struct._ftsent* %551, %struct._ftsent** %553, align 8, !dbg !4349
  %554 = load %struct._ftsent*, %struct._ftsent** %5, align 8, !dbg !4350
  %555 = bitcast %struct._ftsent* %554 to i8*, !dbg !4350
  call void @free(i8* %555) #8, !dbg !4351
  %556 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !4352
  %557 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %556, i32 0, i32 11, !dbg !4354
  %558 = load i64, i64* %557, align 8, !dbg !4354
  %559 = icmp eq i64 %558, -1, !dbg !4355
  br i1 %559, label %560, label %566, !dbg !4356

; <label>:560:                                    ; preds = %547
  %561 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !4357
  %562 = bitcast %struct._ftsent* %561 to i8*, !dbg !4357
  call void @free(i8* %562) #8, !dbg !4359
  %563 = call i32* @__errno_location() #14, !dbg !4360
  store i32 0, i32* %563, align 4, !dbg !4360
  %564 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !4361
  %565 = getelementptr inbounds %struct.FTS, %struct.FTS* %564, i32 0, i32 0, !dbg !4362
  store %struct._ftsent* null, %struct._ftsent** %565, align 8, !dbg !4363
  store %struct._ftsent* null, %struct._ftsent** %2, align 8, !dbg !4364
  br label %751, !dbg !4364

; <label>:566:                                    ; preds = %547
  br label %567, !dbg !4365, !llvm.loop !4366

; <label>:567:                                    ; preds = %566
  %568 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !4367
  %569 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %568, i32 0, i32 14, !dbg !4367
  %570 = load i16, i16* %569, align 8, !dbg !4367
  %571 = zext i16 %570 to i32, !dbg !4367
  %572 = icmp ne i32 %571, 11, !dbg !4367
  br i1 %572, label %574, label %573, !dbg !4370

; <label>:573:                                    ; preds = %567
  call void @abort() #11, !dbg !4367
  unreachable, !dbg !4367

; <label>:574:                                    ; preds = %567
  br label %575, !dbg !4370

; <label>:575:                                    ; preds = %574
  %576 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !4371
  %577 = getelementptr inbounds %struct.FTS, %struct.FTS* %576, i32 0, i32 4, !dbg !4372
  %578 = load i8*, i8** %577, align 8, !dbg !4372
  %579 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !4373
  %580 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %579, i32 0, i32 9, !dbg !4374
  %581 = load i64, i64* %580, align 8, !dbg !4374
  %582 = getelementptr inbounds i8, i8* %578, i64 %581, !dbg !4371
  store i8 0, i8* %582, align 1, !dbg !4375
  %583 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !4376
  %584 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %583, i32 0, i32 11, !dbg !4378
  %585 = load i64, i64* %584, align 8, !dbg !4378
  %586 = icmp eq i64 %585, 0, !dbg !4379
  br i1 %586, label %587, label %644, !dbg !4380

; <label>:587:                                    ; preds = %575
  %588 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !4381
  %589 = getelementptr inbounds %struct.FTS, %struct.FTS* %588, i32 0, i32 13, !dbg !4381
  call void @fd_ring_clear(%struct.I_ring* %589), !dbg !4381
  %590 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !4381
  %591 = getelementptr inbounds %struct.FTS, %struct.FTS* %590, i32 0, i32 10, !dbg !4381
  %592 = load i32, i32* %591, align 8, !dbg !4381
  %593 = and i32 %592, 4, !dbg !4381
  %594 = icmp ne i32 %593, 0, !dbg !4381
  br i1 %594, label %632, label %595, !dbg !4381

; <label>:595:                                    ; preds = %587
  %596 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !4381
  %597 = getelementptr inbounds %struct.FTS, %struct.FTS* %596, i32 0, i32 10, !dbg !4381
  %598 = load i32, i32* %597, align 8, !dbg !4381
  %599 = and i32 %598, 512, !dbg !4381
  %600 = icmp ne i32 %599, 0, !dbg !4381
  br i1 %600, label %601, label %615, !dbg !4381

; <label>:601:                                    ; preds = %595
  %602 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !4381
  %603 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !4381
  %604 = getelementptr inbounds %struct.FTS, %struct.FTS* %603, i32 0, i32 10, !dbg !4381
  %605 = load i32, i32* %604, align 8, !dbg !4381
  %606 = and i32 %605, 512, !dbg !4381
  %607 = icmp ne i32 %606, 0, !dbg !4381
  br i1 %607, label %608, label %609, !dbg !4381

; <label>:608:                                    ; preds = %601
  br label %613, !dbg !4381

; <label>:609:                                    ; preds = %601
  %610 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !4381
  %611 = getelementptr inbounds %struct.FTS, %struct.FTS* %610, i32 0, i32 5, !dbg !4381
  %612 = load i32, i32* %611, align 8, !dbg !4381
  br label %613, !dbg !4381

; <label>:613:                                    ; preds = %609, %608
  %614 = phi i32 [ -100, %608 ], [ %612, %609 ], !dbg !4381
  call void @cwd_advance_fd(%struct.FTS* %602, i32 %614, i1 zeroext true), !dbg !4381
  br label %629, !dbg !4381

; <label>:615:                                    ; preds = %595
  %616 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !4381
  %617 = getelementptr inbounds %struct.FTS, %struct.FTS* %616, i32 0, i32 10, !dbg !4381
  %618 = load i32, i32* %617, align 8, !dbg !4381
  %619 = and i32 %618, 512, !dbg !4381
  %620 = icmp ne i32 %619, 0, !dbg !4381
  br i1 %620, label %621, label %622, !dbg !4381

; <label>:621:                                    ; preds = %615
  br label %626, !dbg !4381

; <label>:622:                                    ; preds = %615
  %623 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !4381
  %624 = getelementptr inbounds %struct.FTS, %struct.FTS* %623, i32 0, i32 5, !dbg !4381
  %625 = load i32, i32* %624, align 8, !dbg !4381
  br label %626, !dbg !4381

; <label>:626:                                    ; preds = %622, %621
  %627 = phi i32 [ -100, %621 ], [ %625, %622 ], !dbg !4381
  %628 = call i32 @fchdir(i32 %627) #8, !dbg !4381
  br label %629, !dbg !4381

; <label>:629:                                    ; preds = %626, %613
  %630 = phi i32 [ 0, %613 ], [ %628, %626 ], !dbg !4381
  %631 = icmp ne i32 %630, 0, !dbg !4381
  br label %632

; <label>:632:                                    ; preds = %629, %587
  %633 = phi i1 [ false, %587 ], [ %631, %629 ]
  br i1 %633, label %634, label %643, !dbg !4384

; <label>:634:                                    ; preds = %632
  %635 = call i32* @__errno_location() #14, !dbg !4385
  %636 = load i32, i32* %635, align 4, !dbg !4385
  %637 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !4387
  %638 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %637, i32 0, i32 7, !dbg !4388
  store i32 %636, i32* %638, align 8, !dbg !4389
  %639 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !4390
  %640 = getelementptr inbounds %struct.FTS, %struct.FTS* %639, i32 0, i32 10, !dbg !4390
  %641 = load i32, i32* %640, align 8, !dbg !4390
  %642 = or i32 %641, 8192, !dbg !4390
  store i32 %642, i32* %640, align 8, !dbg !4390
  br label %643, !dbg !4391

; <label>:643:                                    ; preds = %634, %632
  br label %721, !dbg !4392

; <label>:644:                                    ; preds = %575
  %645 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !4393
  %646 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %645, i32 0, i32 15, !dbg !4395
  %647 = load i16, i16* %646, align 2, !dbg !4395
  %648 = zext i16 %647 to i32, !dbg !4393
  %649 = and i32 %648, 2, !dbg !4396
  %650 = icmp ne i32 %649, 0, !dbg !4396
  br i1 %650, label %651, label %696, !dbg !4397

; <label>:651:                                    ; preds = %644
  %652 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !4398
  %653 = getelementptr inbounds %struct.FTS, %struct.FTS* %652, i32 0, i32 10, !dbg !4398
  %654 = load i32, i32* %653, align 8, !dbg !4398
  %655 = and i32 %654, 4, !dbg !4398
  %656 = icmp ne i32 %655, 0, !dbg !4398
  br i1 %656, label %691, label %657, !dbg !4398

; <label>:657:                                    ; preds = %651
  %658 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !4398
  %659 = getelementptr inbounds %struct.FTS, %struct.FTS* %658, i32 0, i32 10, !dbg !4398
  %660 = load i32, i32* %659, align 8, !dbg !4398
  %661 = and i32 %660, 512, !dbg !4398
  %662 = icmp ne i32 %661, 0, !dbg !4398
  br i1 %662, label %663, label %668, !dbg !4401

; <label>:663:                                    ; preds = %657
  %664 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !4398
  %665 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !4398
  %666 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %665, i32 0, i32 8, !dbg !4398
  %667 = load i32, i32* %666, align 4, !dbg !4398
  call void @cwd_advance_fd(%struct.FTS* %664, i32 %667, i1 zeroext true), !dbg !4398
  br i1 false, label %674, label %691, !dbg !4398

; <label>:668:                                    ; preds = %657
  %669 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !4398
  %670 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %669, i32 0, i32 8, !dbg !4398
  %671 = load i32, i32* %670, align 4, !dbg !4398
  %672 = call i32 @fchdir(i32 %671) #8, !dbg !4398
  %673 = icmp ne i32 %672, 0, !dbg !4398
  br i1 %673, label %674, label %691, !dbg !4401

; <label>:674:                                    ; preds = %668, %663
  call void @llvm.dbg.declare(metadata i32* %9, metadata !4402, metadata !DIExpression()), !dbg !4404
  %675 = call i32* @__errno_location() #14, !dbg !4405
  %676 = load i32, i32* %675, align 4, !dbg !4405
  store i32 %676, i32* %9, align 4, !dbg !4404
  %677 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !4406
  %678 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %677, i32 0, i32 8, !dbg !4407
  %679 = load i32, i32* %678, align 4, !dbg !4407
  %680 = call i32 @close(i32 %679), !dbg !4408
  %681 = load i32, i32* %9, align 4, !dbg !4409
  %682 = call i32* @__errno_location() #14, !dbg !4409
  store i32 %681, i32* %682, align 4, !dbg !4409
  %683 = call i32* @__errno_location() #14, !dbg !4410
  %684 = load i32, i32* %683, align 4, !dbg !4410
  %685 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !4411
  %686 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %685, i32 0, i32 7, !dbg !4412
  store i32 %684, i32* %686, align 8, !dbg !4413
  %687 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !4414
  %688 = getelementptr inbounds %struct.FTS, %struct.FTS* %687, i32 0, i32 10, !dbg !4414
  %689 = load i32, i32* %688, align 8, !dbg !4414
  %690 = or i32 %689, 8192, !dbg !4414
  store i32 %690, i32* %688, align 8, !dbg !4414
  br label %691, !dbg !4415

; <label>:691:                                    ; preds = %674, %668, %663, %651
  %692 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !4416
  %693 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %692, i32 0, i32 8, !dbg !4417
  %694 = load i32, i32* %693, align 4, !dbg !4417
  %695 = call i32 @close(i32 %694), !dbg !4418
  br label %720, !dbg !4419

; <label>:696:                                    ; preds = %644
  %697 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !4420
  %698 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %697, i32 0, i32 15, !dbg !4422
  %699 = load i16, i16* %698, align 2, !dbg !4422
  %700 = zext i16 %699 to i32, !dbg !4420
  %701 = and i32 %700, 1, !dbg !4423
  %702 = icmp ne i32 %701, 0, !dbg !4423
  br i1 %702, label %719, label %703, !dbg !4424

; <label>:703:                                    ; preds = %696
  %704 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !4425
  %705 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !4426
  %706 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %705, i32 0, i32 1, !dbg !4427
  %707 = load %struct._ftsent*, %struct._ftsent** %706, align 8, !dbg !4427
  %708 = call i32 @fts_safe_changedir(%struct.FTS* %704, %struct._ftsent* %707, i32 -1, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2.156, i32 0, i32 0)), !dbg !4428
  %709 = icmp ne i32 %708, 0, !dbg !4428
  br i1 %709, label %710, label %719, !dbg !4429

; <label>:710:                                    ; preds = %703
  %711 = call i32* @__errno_location() #14, !dbg !4430
  %712 = load i32, i32* %711, align 4, !dbg !4430
  %713 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !4432
  %714 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %713, i32 0, i32 7, !dbg !4433
  store i32 %712, i32* %714, align 8, !dbg !4434
  %715 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !4435
  %716 = getelementptr inbounds %struct.FTS, %struct.FTS* %715, i32 0, i32 10, !dbg !4435
  %717 = load i32, i32* %716, align 8, !dbg !4435
  %718 = or i32 %717, 8192, !dbg !4435
  store i32 %718, i32* %716, align 8, !dbg !4435
  br label %719, !dbg !4436

; <label>:719:                                    ; preds = %710, %703, %696
  br label %720

; <label>:720:                                    ; preds = %719, %691
  br label %721

; <label>:721:                                    ; preds = %720, %643
  %722 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !4437
  %723 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %722, i32 0, i32 7, !dbg !4438
  %724 = load i32, i32* %723, align 8, !dbg !4438
  %725 = icmp ne i32 %724, 0, !dbg !4437
  %726 = zext i1 %725 to i64, !dbg !4437
  %727 = select i1 %725, i32 7, i32 6, !dbg !4437
  %728 = trunc i32 %727 to i16, !dbg !4437
  %729 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !4439
  %730 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %729, i32 0, i32 14, !dbg !4440
  store i16 %728, i16* %730, align 8, !dbg !4441
  %731 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !4442
  %732 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %731, i32 0, i32 7, !dbg !4444
  %733 = load i32, i32* %732, align 8, !dbg !4444
  %734 = icmp eq i32 %733, 0, !dbg !4445
  br i1 %734, label %735, label %740, !dbg !4446

; <label>:735:                                    ; preds = %721
  br label %736, !dbg !4447, !llvm.loop !4448

; <label>:736:                                    ; preds = %735
  %737 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !4449
  %738 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !4449
  call void @leave_dir(%struct.FTS* %737, %struct._ftsent* %738), !dbg !4449
  br label %739, !dbg !4449

; <label>:739:                                    ; preds = %736
  br label %740, !dbg !4449

; <label>:740:                                    ; preds = %739, %721
  %741 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !4451
  %742 = getelementptr inbounds %struct.FTS, %struct.FTS* %741, i32 0, i32 10, !dbg !4451
  %743 = load i32, i32* %742, align 8, !dbg !4451
  %744 = and i32 %743, 8192, !dbg !4451
  %745 = icmp ne i32 %744, 0, !dbg !4451
  br i1 %745, label %746, label %747, !dbg !4451

; <label>:746:                                    ; preds = %740
  br label %749, !dbg !4451

; <label>:747:                                    ; preds = %740
  %748 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !4452
  br label %749, !dbg !4451

; <label>:749:                                    ; preds = %747, %746
  %750 = phi %struct._ftsent* [ null, %746 ], [ %748, %747 ], !dbg !4451
  store %struct._ftsent* %750, %struct._ftsent** %2, align 8, !dbg !4453
  br label %751, !dbg !4453

; <label>:751:                                    ; preds = %749, %560, %545, %542, %321, %248, %229, %150, %33, %20
  %752 = load %struct._ftsent*, %struct._ftsent** %2, align 8, !dbg !4454
  ret %struct._ftsent* %752, !dbg !4454
}

; Function Attrs: noinline nounwind uwtable
define internal void @leave_dir(%struct.FTS*, %struct._ftsent*) #3 !dbg !4455 {
  %3 = alloca %struct.FTS*, align 8
  %4 = alloca %struct._ftsent*, align 8
  %5 = alloca %struct.stat*, align 8
  %6 = alloca %struct.Active_dir, align 8
  %7 = alloca i8*, align 8
  %8 = alloca %struct._ftsent*, align 8
  store %struct.FTS* %0, %struct.FTS** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.FTS** %3, metadata !4458, metadata !DIExpression()), !dbg !4459
  store %struct._ftsent* %1, %struct._ftsent** %4, align 8
  call void @llvm.dbg.declare(metadata %struct._ftsent** %4, metadata !4460, metadata !DIExpression()), !dbg !4461
  call void @llvm.dbg.declare(metadata %struct.stat** %5, metadata !4462, metadata !DIExpression()), !dbg !4465
  %9 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !4466
  %10 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %9, i32 0, i32 17, !dbg !4467
  %11 = getelementptr inbounds [1 x %struct.stat], [1 x %struct.stat]* %10, i32 0, i32 0, !dbg !4466
  store %struct.stat* %11, %struct.stat** %5, align 8, !dbg !4465
  %12 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !4468
  %13 = getelementptr inbounds %struct.FTS, %struct.FTS* %12, i32 0, i32 10, !dbg !4470
  %14 = load i32, i32* %13, align 8, !dbg !4470
  %15 = and i32 %14, 258, !dbg !4471
  %16 = icmp ne i32 %15, 0, !dbg !4471
  br i1 %16, label %17, label %37, !dbg !4472

; <label>:17:                                     ; preds = %2
  call void @llvm.dbg.declare(metadata %struct.Active_dir* %6, metadata !4473, metadata !DIExpression()), !dbg !4475
  call void @llvm.dbg.declare(metadata i8** %7, metadata !4476, metadata !DIExpression()), !dbg !4477
  %18 = load %struct.stat*, %struct.stat** %5, align 8, !dbg !4478
  %19 = getelementptr inbounds %struct.stat, %struct.stat* %18, i32 0, i32 0, !dbg !4479
  %20 = load i64, i64* %19, align 8, !dbg !4479
  %21 = getelementptr inbounds %struct.Active_dir, %struct.Active_dir* %6, i32 0, i32 0, !dbg !4480
  store i64 %20, i64* %21, align 8, !dbg !4481
  %22 = load %struct.stat*, %struct.stat** %5, align 8, !dbg !4482
  %23 = getelementptr inbounds %struct.stat, %struct.stat* %22, i32 0, i32 1, !dbg !4483
  %24 = load i64, i64* %23, align 8, !dbg !4483
  %25 = getelementptr inbounds %struct.Active_dir, %struct.Active_dir* %6, i32 0, i32 1, !dbg !4484
  store i64 %24, i64* %25, align 8, !dbg !4485
  %26 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !4486
  %27 = getelementptr inbounds %struct.FTS, %struct.FTS* %26, i32 0, i32 12, !dbg !4487
  %28 = bitcast %union.anon* %27 to %struct.hash_table**, !dbg !4488
  %29 = load %struct.hash_table*, %struct.hash_table** %28, align 8, !dbg !4488
  %30 = bitcast %struct.Active_dir* %6 to i8*, !dbg !4489
  %31 = call i8* @hash_delete(%struct.hash_table* %29, i8* %30), !dbg !4490
  store i8* %31, i8** %7, align 8, !dbg !4491
  %32 = load i8*, i8** %7, align 8, !dbg !4492
  %33 = icmp ne i8* %32, null, !dbg !4492
  br i1 %33, label %35, label %34, !dbg !4494

; <label>:34:                                     ; preds = %17
  call void @abort() #11, !dbg !4495
  unreachable, !dbg !4495

; <label>:35:                                     ; preds = %17
  %36 = load i8*, i8** %7, align 8, !dbg !4496
  call void @free(i8* %36) #8, !dbg !4497
  br label %108, !dbg !4498

; <label>:37:                                     ; preds = %2
  call void @llvm.dbg.declare(metadata %struct._ftsent** %8, metadata !4499, metadata !DIExpression()), !dbg !4501
  %38 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !4502
  %39 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %38, i32 0, i32 1, !dbg !4503
  %40 = load %struct._ftsent*, %struct._ftsent** %39, align 8, !dbg !4503
  store %struct._ftsent* %40, %struct._ftsent** %8, align 8, !dbg !4501
  %41 = load %struct._ftsent*, %struct._ftsent** %8, align 8, !dbg !4504
  %42 = icmp ne %struct._ftsent* %41, null, !dbg !4506
  br i1 %42, label %43, label %107, !dbg !4507

; <label>:43:                                     ; preds = %37
  %44 = load %struct._ftsent*, %struct._ftsent** %8, align 8, !dbg !4508
  %45 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %44, i32 0, i32 11, !dbg !4509
  %46 = load i64, i64* %45, align 8, !dbg !4509
  %47 = icmp sle i64 0, %46, !dbg !4510
  br i1 %47, label %48, label %107, !dbg !4511

; <label>:48:                                     ; preds = %43
  br label %49, !dbg !4512, !llvm.loop !4513

; <label>:49:                                     ; preds = %48
  %50 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !4514
  %51 = getelementptr inbounds %struct.FTS, %struct.FTS* %50, i32 0, i32 12, !dbg !4514
  %52 = bitcast %union.anon* %51 to %struct.cycle_check_state**, !dbg !4514
  %53 = load %struct.cycle_check_state*, %struct.cycle_check_state** %52, align 8, !dbg !4514
  %54 = getelementptr inbounds %struct.cycle_check_state, %struct.cycle_check_state* %53, i32 0, i32 1, !dbg !4514
  %55 = load i64, i64* %54, align 8, !dbg !4514
  %56 = icmp eq i64 %55, 0, !dbg !4514
  br i1 %56, label %57, label %58, !dbg !4517

; <label>:57:                                     ; preds = %49
  call void @abort() #11, !dbg !4514
  unreachable, !dbg !4514

; <label>:58:                                     ; preds = %49
  %59 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !4518
  %60 = getelementptr inbounds %struct.FTS, %struct.FTS* %59, i32 0, i32 12, !dbg !4518
  %61 = bitcast %union.anon* %60 to %struct.cycle_check_state**, !dbg !4518
  %62 = load %struct.cycle_check_state*, %struct.cycle_check_state** %61, align 8, !dbg !4518
  %63 = getelementptr inbounds %struct.cycle_check_state, %struct.cycle_check_state* %62, i32 0, i32 0, !dbg !4518
  %64 = getelementptr inbounds %struct.dev_ino, %struct.dev_ino* %63, i32 0, i32 0, !dbg !4518
  %65 = load i64, i64* %64, align 8, !dbg !4518
  %66 = load %struct.stat*, %struct.stat** %5, align 8, !dbg !4518
  %67 = getelementptr inbounds %struct.stat, %struct.stat* %66, i32 0, i32 1, !dbg !4518
  %68 = load i64, i64* %67, align 8, !dbg !4518
  %69 = icmp eq i64 %65, %68, !dbg !4518
  br i1 %69, label %70, label %105, !dbg !4518

; <label>:70:                                     ; preds = %58
  %71 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !4518
  %72 = getelementptr inbounds %struct.FTS, %struct.FTS* %71, i32 0, i32 12, !dbg !4518
  %73 = bitcast %union.anon* %72 to %struct.cycle_check_state**, !dbg !4518
  %74 = load %struct.cycle_check_state*, %struct.cycle_check_state** %73, align 8, !dbg !4518
  %75 = getelementptr inbounds %struct.cycle_check_state, %struct.cycle_check_state* %74, i32 0, i32 0, !dbg !4518
  %76 = getelementptr inbounds %struct.dev_ino, %struct.dev_ino* %75, i32 0, i32 1, !dbg !4518
  %77 = load i64, i64* %76, align 8, !dbg !4518
  %78 = load %struct.stat*, %struct.stat** %5, align 8, !dbg !4518
  %79 = getelementptr inbounds %struct.stat, %struct.stat* %78, i32 0, i32 0, !dbg !4518
  %80 = load i64, i64* %79, align 8, !dbg !4518
  %81 = icmp eq i64 %77, %80, !dbg !4518
  br i1 %81, label %82, label %105, !dbg !4517

; <label>:82:                                     ; preds = %70
  %83 = load %struct._ftsent*, %struct._ftsent** %8, align 8, !dbg !4520
  %84 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %83, i32 0, i32 17, !dbg !4520
  %85 = getelementptr inbounds [1 x %struct.stat], [1 x %struct.stat]* %84, i32 0, i32 0, !dbg !4520
  %86 = getelementptr inbounds %struct.stat, %struct.stat* %85, i32 0, i32 0, !dbg !4520
  %87 = load i64, i64* %86, align 8, !dbg !4520
  %88 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !4520
  %89 = getelementptr inbounds %struct.FTS, %struct.FTS* %88, i32 0, i32 12, !dbg !4520
  %90 = bitcast %union.anon* %89 to %struct.cycle_check_state**, !dbg !4520
  %91 = load %struct.cycle_check_state*, %struct.cycle_check_state** %90, align 8, !dbg !4520
  %92 = getelementptr inbounds %struct.cycle_check_state, %struct.cycle_check_state* %91, i32 0, i32 0, !dbg !4520
  %93 = getelementptr inbounds %struct.dev_ino, %struct.dev_ino* %92, i32 0, i32 1, !dbg !4520
  store i64 %87, i64* %93, align 8, !dbg !4520
  %94 = load %struct._ftsent*, %struct._ftsent** %8, align 8, !dbg !4520
  %95 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %94, i32 0, i32 17, !dbg !4520
  %96 = getelementptr inbounds [1 x %struct.stat], [1 x %struct.stat]* %95, i32 0, i32 0, !dbg !4520
  %97 = getelementptr inbounds %struct.stat, %struct.stat* %96, i32 0, i32 1, !dbg !4520
  %98 = load i64, i64* %97, align 8, !dbg !4520
  %99 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !4520
  %100 = getelementptr inbounds %struct.FTS, %struct.FTS* %99, i32 0, i32 12, !dbg !4520
  %101 = bitcast %union.anon* %100 to %struct.cycle_check_state**, !dbg !4520
  %102 = load %struct.cycle_check_state*, %struct.cycle_check_state** %101, align 8, !dbg !4520
  %103 = getelementptr inbounds %struct.cycle_check_state, %struct.cycle_check_state* %102, i32 0, i32 0, !dbg !4520
  %104 = getelementptr inbounds %struct.dev_ino, %struct.dev_ino* %103, i32 0, i32 0, !dbg !4520
  store i64 %98, i64* %104, align 8, !dbg !4520
  br label %105, !dbg !4520

; <label>:105:                                    ; preds = %82, %70, %58
  br label %106, !dbg !4517

; <label>:106:                                    ; preds = %105
  br label %107, !dbg !4517

; <label>:107:                                    ; preds = %106, %43, %37
  br label %108

; <label>:108:                                    ; preds = %107, %35
  ret void, !dbg !4522
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @fts_safe_changedir(%struct.FTS*, %struct._ftsent*, i32, i8*) #3 !dbg !4523 {
  %5 = alloca i32, align 4
  %6 = alloca %struct.FTS*, align 8
  %7 = alloca %struct._ftsent*, align 8
  %8 = alloca i32, align 4
  %9 = alloca i8*, align 8
  %10 = alloca i32, align 4
  %11 = alloca i8, align 1
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca %struct.stat, align 8
  %15 = alloca i32, align 4
  store %struct.FTS* %0, %struct.FTS** %6, align 8
  call void @llvm.dbg.declare(metadata %struct.FTS** %6, metadata !4526, metadata !DIExpression()), !dbg !4527
  store %struct._ftsent* %1, %struct._ftsent** %7, align 8
  call void @llvm.dbg.declare(metadata %struct._ftsent** %7, metadata !4528, metadata !DIExpression()), !dbg !4529
  store i32 %2, i32* %8, align 4
  call void @llvm.dbg.declare(metadata i32* %8, metadata !4530, metadata !DIExpression()), !dbg !4531
  store i8* %3, i8** %9, align 8
  call void @llvm.dbg.declare(metadata i8** %9, metadata !4532, metadata !DIExpression()), !dbg !4533
  call void @llvm.dbg.declare(metadata i32* %10, metadata !4534, metadata !DIExpression()), !dbg !4535
  call void @llvm.dbg.declare(metadata i8* %11, metadata !4536, metadata !DIExpression()), !dbg !4537
  %16 = load i8*, i8** %9, align 8, !dbg !4538
  %17 = icmp ne i8* %16, null, !dbg !4538
  br i1 %17, label %18, label %22, !dbg !4539

; <label>:18:                                     ; preds = %4
  %19 = load i8*, i8** %9, align 8, !dbg !4540
  %20 = call i32 @strcmp(i8* %19, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2.156, i32 0, i32 0)) #12, !dbg !4540
  %21 = icmp eq i32 %20, 0, !dbg !4540
  br label %22

; <label>:22:                                     ; preds = %18, %4
  %23 = phi i1 [ false, %4 ], [ %21, %18 ]
  %24 = zext i1 %23 to i8, !dbg !4537
  store i8 %24, i8* %11, align 1, !dbg !4537
  call void @llvm.dbg.declare(metadata i32* %12, metadata !4541, metadata !DIExpression()), !dbg !4542
  %25 = load %struct.FTS*, %struct.FTS** %6, align 8, !dbg !4543
  %26 = getelementptr inbounds %struct.FTS, %struct.FTS* %25, i32 0, i32 10, !dbg !4543
  %27 = load i32, i32* %26, align 8, !dbg !4543
  %28 = and i32 %27, 4, !dbg !4543
  %29 = icmp ne i32 %28, 0, !dbg !4543
  br i1 %29, label %30, label %43, !dbg !4545

; <label>:30:                                     ; preds = %22
  %31 = load %struct.FTS*, %struct.FTS** %6, align 8, !dbg !4546
  %32 = getelementptr inbounds %struct.FTS, %struct.FTS* %31, i32 0, i32 10, !dbg !4546
  %33 = load i32, i32* %32, align 8, !dbg !4546
  %34 = and i32 %33, 512, !dbg !4546
  %35 = icmp ne i32 %34, 0, !dbg !4546
  br i1 %35, label %36, label %42, !dbg !4549

; <label>:36:                                     ; preds = %30
  %37 = load i32, i32* %8, align 4, !dbg !4550
  %38 = icmp sle i32 0, %37, !dbg !4551
  br i1 %38, label %39, label %42, !dbg !4552

; <label>:39:                                     ; preds = %36
  %40 = load i32, i32* %8, align 4, !dbg !4553
  %41 = call i32 @close(i32 %40), !dbg !4554
  br label %42, !dbg !4554

; <label>:42:                                     ; preds = %39, %36, %30
  store i32 0, i32* %5, align 4, !dbg !4555
  br label %145, !dbg !4555

; <label>:43:                                     ; preds = %22
  %44 = load i32, i32* %8, align 4, !dbg !4556
  %45 = icmp slt i32 %44, 0, !dbg !4558
  br i1 %45, label %46, label %69, !dbg !4559

; <label>:46:                                     ; preds = %43
  %47 = load i8, i8* %11, align 1, !dbg !4560
  %48 = trunc i8 %47 to i1, !dbg !4560
  br i1 %48, label %49, label %69, !dbg !4561

; <label>:49:                                     ; preds = %46
  %50 = load %struct.FTS*, %struct.FTS** %6, align 8, !dbg !4562
  %51 = getelementptr inbounds %struct.FTS, %struct.FTS* %50, i32 0, i32 10, !dbg !4562
  %52 = load i32, i32* %51, align 8, !dbg !4562
  %53 = and i32 %52, 512, !dbg !4562
  %54 = icmp ne i32 %53, 0, !dbg !4562
  br i1 %54, label %55, label %69, !dbg !4563

; <label>:55:                                     ; preds = %49
  %56 = load %struct.FTS*, %struct.FTS** %6, align 8, !dbg !4564
  %57 = getelementptr inbounds %struct.FTS, %struct.FTS* %56, i32 0, i32 13, !dbg !4567
  %58 = call zeroext i1 @i_ring_empty(%struct.I_ring* %57), !dbg !4568
  br i1 %58, label %68, label %59, !dbg !4569

; <label>:59:                                     ; preds = %55
  call void @llvm.dbg.declare(metadata i32* %13, metadata !4570, metadata !DIExpression()), !dbg !4572
  %60 = load %struct.FTS*, %struct.FTS** %6, align 8, !dbg !4573
  %61 = getelementptr inbounds %struct.FTS, %struct.FTS* %60, i32 0, i32 13, !dbg !4574
  %62 = call i32 @i_ring_pop(%struct.I_ring* %61), !dbg !4575
  store i32 %62, i32* %13, align 4, !dbg !4576
  store i8 1, i8* %11, align 1, !dbg !4577
  %63 = load i32, i32* %13, align 4, !dbg !4578
  %64 = icmp sle i32 0, %63, !dbg !4580
  br i1 %64, label %65, label %67, !dbg !4581

; <label>:65:                                     ; preds = %59
  %66 = load i32, i32* %13, align 4, !dbg !4582
  store i32 %66, i32* %8, align 4, !dbg !4584
  store i8* null, i8** %9, align 8, !dbg !4585
  br label %67, !dbg !4586

; <label>:67:                                     ; preds = %65, %59
  br label %68, !dbg !4587

; <label>:68:                                     ; preds = %67, %55
  br label %69, !dbg !4588

; <label>:69:                                     ; preds = %68, %49, %46, %43
  %70 = load i32, i32* %8, align 4, !dbg !4589
  store i32 %70, i32* %12, align 4, !dbg !4590
  %71 = load i32, i32* %8, align 4, !dbg !4591
  %72 = icmp slt i32 %71, 0, !dbg !4593
  br i1 %72, label %73, label %79, !dbg !4594

; <label>:73:                                     ; preds = %69
  %74 = load %struct.FTS*, %struct.FTS** %6, align 8, !dbg !4595
  %75 = load i8*, i8** %9, align 8, !dbg !4596
  %76 = call i32 @diropen(%struct.FTS* %74, i8* %75), !dbg !4597
  store i32 %76, i32* %12, align 4, !dbg !4598
  %77 = icmp slt i32 %76, 0, !dbg !4599
  br i1 %77, label %78, label %79, !dbg !4600

; <label>:78:                                     ; preds = %73
  store i32 -1, i32* %5, align 4, !dbg !4601
  br label %145, !dbg !4601

; <label>:79:                                     ; preds = %73, %69
  %80 = load %struct.FTS*, %struct.FTS** %6, align 8, !dbg !4602
  %81 = getelementptr inbounds %struct.FTS, %struct.FTS* %80, i32 0, i32 10, !dbg !4602
  %82 = load i32, i32* %81, align 8, !dbg !4602
  %83 = and i32 %82, 2, !dbg !4602
  %84 = icmp ne i32 %83, 0, !dbg !4602
  br i1 %84, label %92, label %85, !dbg !4604

; <label>:85:                                     ; preds = %79
  %86 = load i8*, i8** %9, align 8, !dbg !4605
  %87 = icmp ne i8* %86, null, !dbg !4605
  br i1 %87, label %88, label %118, !dbg !4606

; <label>:88:                                     ; preds = %85
  %89 = load i8*, i8** %9, align 8, !dbg !4607
  %90 = call i32 @strcmp(i8* %89, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2.156, i32 0, i32 0)) #12, !dbg !4607
  %91 = icmp eq i32 %90, 0, !dbg !4607
  br i1 %91, label %92, label %118, !dbg !4608

; <label>:92:                                     ; preds = %88, %79
  call void @llvm.dbg.declare(metadata %struct.stat* %14, metadata !4609, metadata !DIExpression()), !dbg !4611
  %93 = load i32, i32* %12, align 4, !dbg !4612
  %94 = call i32 @fstat(i32 %93, %struct.stat* %14) #8, !dbg !4614
  %95 = icmp ne i32 %94, 0, !dbg !4614
  br i1 %95, label %96, label %97, !dbg !4615

; <label>:96:                                     ; preds = %92
  store i32 -1, i32* %10, align 4, !dbg !4616
  br label %133, !dbg !4618

; <label>:97:                                     ; preds = %92
  %98 = load %struct._ftsent*, %struct._ftsent** %7, align 8, !dbg !4619
  %99 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %98, i32 0, i32 17, !dbg !4621
  %100 = getelementptr inbounds [1 x %struct.stat], [1 x %struct.stat]* %99, i32 0, i32 0, !dbg !4622
  %101 = getelementptr inbounds %struct.stat, %struct.stat* %100, i32 0, i32 0, !dbg !4622
  %102 = load i64, i64* %101, align 8, !dbg !4622
  %103 = getelementptr inbounds %struct.stat, %struct.stat* %14, i32 0, i32 0, !dbg !4623
  %104 = load i64, i64* %103, align 8, !dbg !4623
  %105 = icmp ne i64 %102, %104, !dbg !4624
  br i1 %105, label %115, label %106, !dbg !4625

; <label>:106:                                    ; preds = %97
  %107 = load %struct._ftsent*, %struct._ftsent** %7, align 8, !dbg !4626
  %108 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %107, i32 0, i32 17, !dbg !4627
  %109 = getelementptr inbounds [1 x %struct.stat], [1 x %struct.stat]* %108, i32 0, i32 0, !dbg !4628
  %110 = getelementptr inbounds %struct.stat, %struct.stat* %109, i32 0, i32 1, !dbg !4628
  %111 = load i64, i64* %110, align 8, !dbg !4628
  %112 = getelementptr inbounds %struct.stat, %struct.stat* %14, i32 0, i32 1, !dbg !4629
  %113 = load i64, i64* %112, align 8, !dbg !4629
  %114 = icmp ne i64 %111, %113, !dbg !4630
  br i1 %114, label %115, label %117, !dbg !4631

; <label>:115:                                    ; preds = %106, %97
  %116 = call i32* @__errno_location() #14, !dbg !4632
  store i32 2, i32* %116, align 4, !dbg !4632
  store i32 -1, i32* %10, align 4, !dbg !4634
  br label %133, !dbg !4635

; <label>:117:                                    ; preds = %106
  br label %118, !dbg !4636

; <label>:118:                                    ; preds = %117, %88, %85
  %119 = load %struct.FTS*, %struct.FTS** %6, align 8, !dbg !4637
  %120 = getelementptr inbounds %struct.FTS, %struct.FTS* %119, i32 0, i32 10, !dbg !4637
  %121 = load i32, i32* %120, align 8, !dbg !4637
  %122 = and i32 %121, 512, !dbg !4637
  %123 = icmp ne i32 %122, 0, !dbg !4637
  br i1 %123, label %124, label %130, !dbg !4639

; <label>:124:                                    ; preds = %118
  %125 = load %struct.FTS*, %struct.FTS** %6, align 8, !dbg !4640
  %126 = load i32, i32* %12, align 4, !dbg !4642
  %127 = load i8, i8* %11, align 1, !dbg !4643
  %128 = trunc i8 %127 to i1, !dbg !4643
  %129 = xor i1 %128, true, !dbg !4644
  call void @cwd_advance_fd(%struct.FTS* %125, i32 %126, i1 zeroext %129), !dbg !4645
  store i32 0, i32* %5, align 4, !dbg !4646
  br label %145, !dbg !4646

; <label>:130:                                    ; preds = %118
  %131 = load i32, i32* %12, align 4, !dbg !4647
  %132 = call i32 @fchdir(i32 %131) #8, !dbg !4648
  store i32 %132, i32* %10, align 4, !dbg !4649
  br label %133, !dbg !4650

; <label>:133:                                    ; preds = %130, %115, %96
  %134 = load i32, i32* %8, align 4, !dbg !4651
  %135 = icmp slt i32 %134, 0, !dbg !4653
  br i1 %135, label %136, label %143, !dbg !4654

; <label>:136:                                    ; preds = %133
  call void @llvm.dbg.declare(metadata i32* %15, metadata !4655, metadata !DIExpression()), !dbg !4657
  %137 = call i32* @__errno_location() #14, !dbg !4658
  %138 = load i32, i32* %137, align 4, !dbg !4658
  store i32 %138, i32* %15, align 4, !dbg !4657
  %139 = load i32, i32* %12, align 4, !dbg !4659
  %140 = call i32 @close(i32 %139), !dbg !4660
  %141 = load i32, i32* %15, align 4, !dbg !4661
  %142 = call i32* @__errno_location() #14, !dbg !4661
  store i32 %141, i32* %142, align 4, !dbg !4661
  br label %143, !dbg !4662

; <label>:143:                                    ; preds = %136, %133
  %144 = load i32, i32* %10, align 4, !dbg !4663
  store i32 %144, i32* %5, align 4, !dbg !4664
  br label %145, !dbg !4664

; <label>:145:                                    ; preds = %143, %124, %78, %42
  %146 = load i32, i32* %5, align 4, !dbg !4665
  ret i32 %146, !dbg !4665
}

; Function Attrs: noinline nounwind uwtable
define internal %struct._ftsent* @fts_build(%struct.FTS*, i32) #3 !dbg !4666 {
  %3 = alloca %struct._ftsent*, align 8
  %4 = alloca %struct.FTS*, align 8
  %5 = alloca i32, align 4
  %6 = alloca %struct.dirent*, align 8
  %7 = alloca %struct._ftsent*, align 8
  %8 = alloca %struct._ftsent*, align 8
  %9 = alloca i64, align 8
  %10 = alloca %struct._ftsent*, align 8
  %11 = alloca %struct._ftsent*, align 8
  %12 = alloca %struct.__dirstream*, align 8
  %13 = alloca i8*, align 8
  %14 = alloca i32, align 4
  %15 = alloca i8, align 1
  %16 = alloca i8, align 1
  %17 = alloca i64, align 8
  %18 = alloca i64, align 8
  %19 = alloca i8, align 1
  %20 = alloca i64, align 8
  %21 = alloca i64, align 8
  %22 = alloca i64, align 8
  %23 = alloca i8*, align 8
  %24 = alloca i32, align 4
  %25 = alloca i8, align 1
  %26 = alloca i8, align 1
  store %struct.FTS* %0, %struct.FTS** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.FTS** %4, metadata !4669, metadata !DIExpression()), !dbg !4670
  store i32 %1, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !4671, metadata !DIExpression()), !dbg !4672
  call void @llvm.dbg.declare(metadata %struct.dirent** %6, metadata !4673, metadata !DIExpression()), !dbg !4683
  call void @llvm.dbg.declare(metadata %struct._ftsent** %7, metadata !4684, metadata !DIExpression()), !dbg !4685
  call void @llvm.dbg.declare(metadata %struct._ftsent** %8, metadata !4686, metadata !DIExpression()), !dbg !4687
  call void @llvm.dbg.declare(metadata i64* %9, metadata !4688, metadata !DIExpression()), !dbg !4689
  call void @llvm.dbg.declare(metadata %struct._ftsent** %10, metadata !4690, metadata !DIExpression()), !dbg !4691
  call void @llvm.dbg.declare(metadata %struct._ftsent** %11, metadata !4692, metadata !DIExpression()), !dbg !4693
  call void @llvm.dbg.declare(metadata %struct.__dirstream** %12, metadata !4694, metadata !DIExpression()), !dbg !4698
  call void @llvm.dbg.declare(metadata i8** %13, metadata !4699, metadata !DIExpression()), !dbg !4700
  call void @llvm.dbg.declare(metadata i32* %14, metadata !4701, metadata !DIExpression()), !dbg !4702
  call void @llvm.dbg.declare(metadata i8* %15, metadata !4703, metadata !DIExpression()), !dbg !4704
  call void @llvm.dbg.declare(metadata i8* %16, metadata !4705, metadata !DIExpression()), !dbg !4706
  call void @llvm.dbg.declare(metadata i64* %17, metadata !4707, metadata !DIExpression()), !dbg !4708
  call void @llvm.dbg.declare(metadata i64* %18, metadata !4709, metadata !DIExpression()), !dbg !4710
  call void @llvm.dbg.declare(metadata i8* %19, metadata !4711, metadata !DIExpression()), !dbg !4712
  call void @llvm.dbg.declare(metadata i64* %20, metadata !4713, metadata !DIExpression()), !dbg !4714
  call void @llvm.dbg.declare(metadata i64* %21, metadata !4715, metadata !DIExpression()), !dbg !4716
  call void @llvm.dbg.declare(metadata i64* %22, metadata !4717, metadata !DIExpression()), !dbg !4718
  call void @llvm.dbg.declare(metadata i8** %23, metadata !4719, metadata !DIExpression()), !dbg !4720
  %27 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !4721
  %28 = getelementptr inbounds %struct.FTS, %struct.FTS* %27, i32 0, i32 0, !dbg !4722
  %29 = load %struct._ftsent*, %struct._ftsent** %28, align 8, !dbg !4722
  store %struct._ftsent* %29, %struct._ftsent** %10, align 8, !dbg !4723
  %30 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !4724
  %31 = getelementptr inbounds %struct.FTS, %struct.FTS* %30, i32 0, i32 10, !dbg !4724
  %32 = load i32, i32* %31, align 8, !dbg !4724
  %33 = and i32 %32, 4, !dbg !4724
  %34 = icmp ne i32 %33, 0, !dbg !4724
  br i1 %34, label %49, label %35, !dbg !4724

; <label>:35:                                     ; preds = %2
  %36 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !4724
  %37 = getelementptr inbounds %struct.FTS, %struct.FTS* %36, i32 0, i32 10, !dbg !4724
  %38 = load i32, i32* %37, align 8, !dbg !4724
  %39 = and i32 %38, 512, !dbg !4724
  %40 = icmp ne i32 %39, 0, !dbg !4724
  br i1 %40, label %41, label %49, !dbg !4724

; <label>:41:                                     ; preds = %35
  %42 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !4724
  %43 = getelementptr inbounds %struct.FTS, %struct.FTS* %42, i32 0, i32 6, !dbg !4724
  %44 = load i32, i32* %43, align 4, !dbg !4724
  %45 = load %struct._ftsent*, %struct._ftsent** %10, align 8, !dbg !4724
  %46 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %45, i32 0, i32 5, !dbg !4724
  %47 = load i8*, i8** %46, align 8, !dbg !4724
  %48 = call %struct.__dirstream* @opendirat(i32 %44, i8* %47), !dbg !4724
  br label %54, !dbg !4724

; <label>:49:                                     ; preds = %35, %2
  %50 = load %struct._ftsent*, %struct._ftsent** %10, align 8, !dbg !4724
  %51 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %50, i32 0, i32 5, !dbg !4724
  %52 = load i8*, i8** %51, align 8, !dbg !4724
  %53 = call %struct.__dirstream* @opendir_safer(i8* %52), !dbg !4724
  br label %54, !dbg !4724

; <label>:54:                                     ; preds = %49, %41
  %55 = phi %struct.__dirstream* [ %48, %41 ], [ %53, %49 ], !dbg !4724
  store %struct.__dirstream* %55, %struct.__dirstream** %12, align 8, !dbg !4726
  %56 = icmp eq %struct.__dirstream* %55, null, !dbg !4727
  br i1 %56, label %57, label %68, !dbg !4728

; <label>:57:                                     ; preds = %54
  %58 = load i32, i32* %5, align 4, !dbg !4729
  %59 = icmp eq i32 %58, 3, !dbg !4732
  br i1 %59, label %60, label %67, !dbg !4733

; <label>:60:                                     ; preds = %57
  %61 = load %struct._ftsent*, %struct._ftsent** %10, align 8, !dbg !4734
  %62 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %61, i32 0, i32 14, !dbg !4736
  store i16 4, i16* %62, align 8, !dbg !4737
  %63 = call i32* @__errno_location() #14, !dbg !4738
  %64 = load i32, i32* %63, align 4, !dbg !4738
  %65 = load %struct._ftsent*, %struct._ftsent** %10, align 8, !dbg !4739
  %66 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %65, i32 0, i32 7, !dbg !4740
  store i32 %64, i32* %66, align 8, !dbg !4741
  br label %67, !dbg !4742

; <label>:67:                                     ; preds = %60, %57
  store %struct._ftsent* null, %struct._ftsent** %3, align 8, !dbg !4743
  br label %713, !dbg !4743

; <label>:68:                                     ; preds = %54
  %69 = load %struct._ftsent*, %struct._ftsent** %10, align 8, !dbg !4744
  %70 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %69, i32 0, i32 14, !dbg !4746
  %71 = load i16, i16* %70, align 8, !dbg !4746
  %72 = zext i16 %71 to i32, !dbg !4744
  %73 = icmp eq i32 %72, 11, !dbg !4747
  br i1 %73, label %74, label %80, !dbg !4748

; <label>:74:                                     ; preds = %68
  %75 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !4749
  %76 = load %struct._ftsent*, %struct._ftsent** %10, align 8, !dbg !4750
  %77 = call zeroext i16 @fts_stat(%struct.FTS* %75, %struct._ftsent* %76, i1 zeroext false), !dbg !4751
  %78 = load %struct._ftsent*, %struct._ftsent** %10, align 8, !dbg !4752
  %79 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %78, i32 0, i32 14, !dbg !4753
  store i16 %77, i16* %79, align 8, !dbg !4754
  br label %101, !dbg !4752

; <label>:80:                                     ; preds = %68
  %81 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !4755
  %82 = getelementptr inbounds %struct.FTS, %struct.FTS* %81, i32 0, i32 10, !dbg !4757
  %83 = load i32, i32* %82, align 8, !dbg !4757
  %84 = and i32 %83, 256, !dbg !4758
  %85 = icmp ne i32 %84, 0, !dbg !4758
  br i1 %85, label %86, label %100, !dbg !4759

; <label>:86:                                     ; preds = %80
  br label %87, !dbg !4760, !llvm.loop !4762

; <label>:87:                                     ; preds = %86
  %88 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !4763
  %89 = load %struct._ftsent*, %struct._ftsent** %10, align 8, !dbg !4763
  call void @leave_dir(%struct.FTS* %88, %struct._ftsent* %89), !dbg !4763
  br label %90, !dbg !4763

; <label>:90:                                     ; preds = %87
  %91 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !4765
  %92 = load %struct._ftsent*, %struct._ftsent** %10, align 8, !dbg !4766
  %93 = call zeroext i16 @fts_stat(%struct.FTS* %91, %struct._ftsent* %92, i1 zeroext false), !dbg !4767
  %94 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !4768
  %95 = load %struct._ftsent*, %struct._ftsent** %10, align 8, !dbg !4770
  %96 = call zeroext i1 @enter_dir(%struct.FTS* %94, %struct._ftsent* %95), !dbg !4771
  br i1 %96, label %99, label %97, !dbg !4772

; <label>:97:                                     ; preds = %90
  %98 = call i32* @__errno_location() #14, !dbg !4773
  store i32 12, i32* %98, align 4, !dbg !4773
  store %struct._ftsent* null, %struct._ftsent** %3, align 8, !dbg !4775
  br label %713, !dbg !4775

; <label>:99:                                     ; preds = %90
  br label %100, !dbg !4776

; <label>:100:                                    ; preds = %99, %80
  br label %101

; <label>:101:                                    ; preds = %100, %74
  %102 = load i32, i32* %5, align 4, !dbg !4777
  %103 = icmp eq i32 %102, 2, !dbg !4779
  br i1 %103, label %104, label %105, !dbg !4780

; <label>:104:                                    ; preds = %101
  store i64 0, i64* %18, align 8, !dbg !4781
  store i8 0, i8* %19, align 1, !dbg !4783
  br label %134, !dbg !4784

; <label>:105:                                    ; preds = %101
  %106 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !4785
  %107 = getelementptr inbounds %struct.FTS, %struct.FTS* %106, i32 0, i32 10, !dbg !4785
  %108 = load i32, i32* %107, align 8, !dbg !4785
  %109 = and i32 %108, 8, !dbg !4785
  %110 = icmp ne i32 %109, 0, !dbg !4785
  br i1 %110, label %111, label %132, !dbg !4787

; <label>:111:                                    ; preds = %105
  %112 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !4788
  %113 = getelementptr inbounds %struct.FTS, %struct.FTS* %112, i32 0, i32 10, !dbg !4788
  %114 = load i32, i32* %113, align 8, !dbg !4788
  %115 = and i32 %114, 16, !dbg !4788
  %116 = icmp ne i32 %115, 0, !dbg !4788
  br i1 %116, label %117, label %132, !dbg !4789

; <label>:117:                                    ; preds = %111
  %118 = load %struct._ftsent*, %struct._ftsent** %10, align 8, !dbg !4790
  %119 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %118, i32 0, i32 17, !dbg !4792
  %120 = getelementptr inbounds [1 x %struct.stat], [1 x %struct.stat]* %119, i32 0, i32 0, !dbg !4793
  %121 = getelementptr inbounds %struct.stat, %struct.stat* %120, i32 0, i32 2, !dbg !4793
  %122 = load i64, i64* %121, align 8, !dbg !4793
  %123 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !4794
  %124 = getelementptr inbounds %struct.FTS, %struct.FTS* %123, i32 0, i32 10, !dbg !4794
  %125 = load i32, i32* %124, align 8, !dbg !4794
  %126 = and i32 %125, 32, !dbg !4794
  %127 = icmp ne i32 %126, 0, !dbg !4794
  %128 = zext i1 %127 to i64, !dbg !4794
  %129 = select i1 %127, i32 0, i32 2, !dbg !4794
  %130 = sext i32 %129 to i64, !dbg !4795
  %131 = sub i64 %122, %130, !dbg !4796
  store i64 %131, i64* %18, align 8, !dbg !4797
  store i8 1, i8* %19, align 1, !dbg !4798
  br label %133, !dbg !4799

; <label>:132:                                    ; preds = %111, %105
  store i64 -1, i64* %18, align 8, !dbg !4800
  store i8 0, i8* %19, align 1, !dbg !4802
  br label %133

; <label>:133:                                    ; preds = %132, %117
  br label %134

; <label>:134:                                    ; preds = %133, %104
  %135 = load i64, i64* %18, align 8, !dbg !4803
  %136 = icmp ne i64 %135, 0, !dbg !4803
  br i1 %136, label %140, label %137, !dbg !4805

; <label>:137:                                    ; preds = %134
  %138 = load i32, i32* %5, align 4, !dbg !4806
  %139 = icmp eq i32 %138, 3, !dbg !4807
  br i1 %139, label %140, label %199, !dbg !4808

; <label>:140:                                    ; preds = %137, %134
  call void @llvm.dbg.declare(metadata i32* %24, metadata !4809, metadata !DIExpression()), !dbg !4811
  %141 = load %struct.__dirstream*, %struct.__dirstream** %12, align 8, !dbg !4812
  %142 = call i32 @dirfd(%struct.__dirstream* %141) #8, !dbg !4813
  store i32 %142, i32* %24, align 4, !dbg !4811
  %143 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !4814
  %144 = getelementptr inbounds %struct.FTS, %struct.FTS* %143, i32 0, i32 10, !dbg !4814
  %145 = load i32, i32* %144, align 8, !dbg !4814
  %146 = and i32 %145, 512, !dbg !4814
  %147 = icmp ne i32 %146, 0, !dbg !4814
  br i1 %147, label %148, label %156, !dbg !4816

; <label>:148:                                    ; preds = %140
  %149 = load i32, i32* %24, align 4, !dbg !4817
  %150 = icmp sle i32 0, %149, !dbg !4818
  br i1 %150, label %151, label %156, !dbg !4819

; <label>:151:                                    ; preds = %148
  %152 = load i32, i32* %24, align 4, !dbg !4820
  %153 = call i32 @dup_safer(i32 %152), !dbg !4822
  store i32 %153, i32* %24, align 4, !dbg !4823
  %154 = load i32, i32* %24, align 4, !dbg !4824
  %155 = call i32 @set_cloexec_flag(i32 %154, i1 zeroext true), !dbg !4825
  br label %156, !dbg !4826

; <label>:156:                                    ; preds = %151, %148, %140
  %157 = load i32, i32* %24, align 4, !dbg !4827
  %158 = icmp slt i32 %157, 0, !dbg !4829
  br i1 %158, label %165, label %159, !dbg !4830

; <label>:159:                                    ; preds = %156
  %160 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !4831
  %161 = load %struct._ftsent*, %struct._ftsent** %10, align 8, !dbg !4832
  %162 = load i32, i32* %24, align 4, !dbg !4833
  %163 = call i32 @fts_safe_changedir(%struct.FTS* %160, %struct._ftsent* %161, i32 %162, i8* null), !dbg !4834
  %164 = icmp ne i32 %163, 0, !dbg !4834
  br i1 %164, label %165, label %197, !dbg !4835

; <label>:165:                                    ; preds = %159, %156
  %166 = load i64, i64* %18, align 8, !dbg !4836
  %167 = icmp ne i64 %166, 0, !dbg !4836
  br i1 %167, label %168, label %176, !dbg !4839

; <label>:168:                                    ; preds = %165
  %169 = load i32, i32* %5, align 4, !dbg !4840
  %170 = icmp eq i32 %169, 3, !dbg !4841
  br i1 %170, label %171, label %176, !dbg !4842

; <label>:171:                                    ; preds = %168
  %172 = call i32* @__errno_location() #14, !dbg !4843
  %173 = load i32, i32* %172, align 4, !dbg !4843
  %174 = load %struct._ftsent*, %struct._ftsent** %10, align 8, !dbg !4844
  %175 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %174, i32 0, i32 7, !dbg !4845
  store i32 %173, i32* %175, align 8, !dbg !4846
  br label %176, !dbg !4844

; <label>:176:                                    ; preds = %171, %168, %165
  %177 = load %struct._ftsent*, %struct._ftsent** %10, align 8, !dbg !4847
  %178 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %177, i32 0, i32 15, !dbg !4848
  %179 = load i16, i16* %178, align 2, !dbg !4849
  %180 = zext i16 %179 to i32, !dbg !4849
  %181 = or i32 %180, 1, !dbg !4849
  %182 = trunc i32 %181 to i16, !dbg !4849
  store i16 %182, i16* %178, align 2, !dbg !4849
  store i8 0, i8* %15, align 1, !dbg !4850
  %183 = load %struct.__dirstream*, %struct.__dirstream** %12, align 8, !dbg !4851
  %184 = call i32 @closedir(%struct.__dirstream* %183), !dbg !4852
  %185 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !4853
  %186 = getelementptr inbounds %struct.FTS, %struct.FTS* %185, i32 0, i32 10, !dbg !4853
  %187 = load i32, i32* %186, align 8, !dbg !4853
  %188 = and i32 %187, 512, !dbg !4853
  %189 = icmp ne i32 %188, 0, !dbg !4853
  br i1 %189, label %190, label %196, !dbg !4855

; <label>:190:                                    ; preds = %176
  %191 = load i32, i32* %24, align 4, !dbg !4856
  %192 = icmp sle i32 0, %191, !dbg !4857
  br i1 %192, label %193, label %196, !dbg !4858

; <label>:193:                                    ; preds = %190
  %194 = load i32, i32* %24, align 4, !dbg !4859
  %195 = call i32 @close(i32 %194), !dbg !4860
  br label %196, !dbg !4860

; <label>:196:                                    ; preds = %193, %190, %176
  store %struct.__dirstream* null, %struct.__dirstream** %12, align 8, !dbg !4861
  br label %198, !dbg !4862

; <label>:197:                                    ; preds = %159
  store i8 1, i8* %15, align 1, !dbg !4863
  br label %198

; <label>:198:                                    ; preds = %197, %196
  br label %200, !dbg !4864

; <label>:199:                                    ; preds = %137
  store i8 0, i8* %15, align 1, !dbg !4865
  br label %200

; <label>:200:                                    ; preds = %199, %198
  %201 = load %struct._ftsent*, %struct._ftsent** %10, align 8, !dbg !4866
  %202 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %201, i32 0, i32 6, !dbg !4866
  %203 = load i8*, i8** %202, align 8, !dbg !4866
  %204 = load %struct._ftsent*, %struct._ftsent** %10, align 8, !dbg !4866
  %205 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %204, i32 0, i32 9, !dbg !4866
  %206 = load i64, i64* %205, align 8, !dbg !4866
  %207 = sub i64 %206, 1, !dbg !4866
  %208 = getelementptr inbounds i8, i8* %203, i64 %207, !dbg !4866
  %209 = load i8, i8* %208, align 1, !dbg !4866
  %210 = sext i8 %209 to i32, !dbg !4866
  %211 = icmp eq i32 %210, 47, !dbg !4866
  br i1 %211, label %212, label %217, !dbg !4866

; <label>:212:                                    ; preds = %200
  %213 = load %struct._ftsent*, %struct._ftsent** %10, align 8, !dbg !4866
  %214 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %213, i32 0, i32 9, !dbg !4866
  %215 = load i64, i64* %214, align 8, !dbg !4866
  %216 = sub i64 %215, 1, !dbg !4866
  br label %221, !dbg !4866

; <label>:217:                                    ; preds = %200
  %218 = load %struct._ftsent*, %struct._ftsent** %10, align 8, !dbg !4866
  %219 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %218, i32 0, i32 9, !dbg !4866
  %220 = load i64, i64* %219, align 8, !dbg !4866
  br label %221, !dbg !4866

; <label>:221:                                    ; preds = %217, %212
  %222 = phi i64 [ %216, %212 ], [ %220, %217 ], !dbg !4866
  store i64 %222, i64* %20, align 8, !dbg !4867
  %223 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !4868
  %224 = getelementptr inbounds %struct.FTS, %struct.FTS* %223, i32 0, i32 10, !dbg !4868
  %225 = load i32, i32* %224, align 8, !dbg !4868
  %226 = and i32 %225, 4, !dbg !4868
  %227 = icmp ne i32 %226, 0, !dbg !4868
  br i1 %227, label %228, label %236, !dbg !4870

; <label>:228:                                    ; preds = %221
  %229 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !4871
  %230 = getelementptr inbounds %struct.FTS, %struct.FTS* %229, i32 0, i32 4, !dbg !4873
  %231 = load i8*, i8** %230, align 8, !dbg !4873
  %232 = load i64, i64* %20, align 8, !dbg !4874
  %233 = getelementptr inbounds i8, i8* %231, i64 %232, !dbg !4875
  store i8* %233, i8** %23, align 8, !dbg !4876
  %234 = load i8*, i8** %23, align 8, !dbg !4877
  %235 = getelementptr inbounds i8, i8* %234, i32 1, !dbg !4877
  store i8* %235, i8** %23, align 8, !dbg !4877
  store i8 47, i8* %234, align 1, !dbg !4878
  br label %237, !dbg !4879

; <label>:236:                                    ; preds = %221
  store i8* null, i8** %23, align 8, !dbg !4880
  br label %237

; <label>:237:                                    ; preds = %236, %228
  %238 = load i64, i64* %20, align 8, !dbg !4882
  %239 = add i64 %238, 1, !dbg !4882
  store i64 %239, i64* %20, align 8, !dbg !4882
  %240 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !4883
  %241 = getelementptr inbounds %struct.FTS, %struct.FTS* %240, i32 0, i32 7, !dbg !4884
  %242 = load i64, i64* %241, align 8, !dbg !4884
  %243 = load i64, i64* %20, align 8, !dbg !4885
  %244 = sub i64 %242, %243, !dbg !4886
  store i64 %244, i64* %21, align 8, !dbg !4887
  %245 = load %struct._ftsent*, %struct._ftsent** %10, align 8, !dbg !4888
  %246 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %245, i32 0, i32 11, !dbg !4889
  %247 = load i64, i64* %246, align 8, !dbg !4889
  %248 = add nsw i64 %247, 1, !dbg !4890
  store i64 %248, i64* %17, align 8, !dbg !4891
  store i8 0, i8* %16, align 1, !dbg !4892
  store %struct._ftsent* null, %struct._ftsent** %11, align 8, !dbg !4893
  store %struct._ftsent* null, %struct._ftsent** %8, align 8, !dbg !4895
  store i64 0, i64* %9, align 8, !dbg !4896
  br label %249, !dbg !4897

; <label>:249:                                    ; preds = %548, %290, %237
  %250 = load %struct.__dirstream*, %struct.__dirstream** %12, align 8, !dbg !4898
  %251 = icmp ne %struct.__dirstream* %250, null, !dbg !4898
  br i1 %251, label %252, label %256, !dbg !4900

; <label>:252:                                    ; preds = %249
  %253 = load %struct.__dirstream*, %struct.__dirstream** %12, align 8, !dbg !4901
  %254 = call %struct.dirent* @readdir(%struct.__dirstream* %253), !dbg !4902
  store %struct.dirent* %254, %struct.dirent** %6, align 8, !dbg !4903
  %255 = icmp ne %struct.dirent* %254, null, !dbg !4900
  br label %256

; <label>:256:                                    ; preds = %252, %249
  %257 = phi i1 [ false, %249 ], [ %255, %252 ]
  br i1 %257, label %258, label %551, !dbg !4904

; <label>:258:                                    ; preds = %256
  call void @llvm.dbg.declare(metadata i8* %25, metadata !4905, metadata !DIExpression()), !dbg !4907
  %259 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !4908
  %260 = getelementptr inbounds %struct.FTS, %struct.FTS* %259, i32 0, i32 10, !dbg !4908
  %261 = load i32, i32* %260, align 8, !dbg !4908
  %262 = and i32 %261, 32, !dbg !4908
  %263 = icmp ne i32 %262, 0, !dbg !4908
  br i1 %263, label %291, label %264, !dbg !4910

; <label>:264:                                    ; preds = %258
  %265 = load %struct.dirent*, %struct.dirent** %6, align 8, !dbg !4911
  %266 = getelementptr inbounds %struct.dirent, %struct.dirent* %265, i32 0, i32 4, !dbg !4911
  %267 = getelementptr inbounds [256 x i8], [256 x i8]* %266, i64 0, i64 0, !dbg !4911
  %268 = load i8, i8* %267, align 1, !dbg !4911
  %269 = sext i8 %268 to i32, !dbg !4911
  %270 = icmp eq i32 %269, 46, !dbg !4911
  br i1 %270, label %271, label %291, !dbg !4911

; <label>:271:                                    ; preds = %264
  %272 = load %struct.dirent*, %struct.dirent** %6, align 8, !dbg !4911
  %273 = getelementptr inbounds %struct.dirent, %struct.dirent* %272, i32 0, i32 4, !dbg !4911
  %274 = getelementptr inbounds [256 x i8], [256 x i8]* %273, i64 0, i64 1, !dbg !4911
  %275 = load i8, i8* %274, align 1, !dbg !4911
  %276 = icmp ne i8 %275, 0, !dbg !4911
  br i1 %276, label %277, label %290, !dbg !4911

; <label>:277:                                    ; preds = %271
  %278 = load %struct.dirent*, %struct.dirent** %6, align 8, !dbg !4911
  %279 = getelementptr inbounds %struct.dirent, %struct.dirent* %278, i32 0, i32 4, !dbg !4911
  %280 = getelementptr inbounds [256 x i8], [256 x i8]* %279, i64 0, i64 1, !dbg !4911
  %281 = load i8, i8* %280, align 1, !dbg !4911
  %282 = sext i8 %281 to i32, !dbg !4911
  %283 = icmp eq i32 %282, 46, !dbg !4911
  br i1 %283, label %284, label %291, !dbg !4911

; <label>:284:                                    ; preds = %277
  %285 = load %struct.dirent*, %struct.dirent** %6, align 8, !dbg !4911
  %286 = getelementptr inbounds %struct.dirent, %struct.dirent* %285, i32 0, i32 4, !dbg !4911
  %287 = getelementptr inbounds [256 x i8], [256 x i8]* %286, i64 0, i64 2, !dbg !4911
  %288 = load i8, i8* %287, align 1, !dbg !4911
  %289 = icmp ne i8 %288, 0, !dbg !4911
  br i1 %289, label %291, label %290, !dbg !4912

; <label>:290:                                    ; preds = %284, %271
  br label %249, !dbg !4913, !llvm.loop !4914

; <label>:291:                                    ; preds = %284, %277, %264, %258
  %292 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !4916
  %293 = load %struct.dirent*, %struct.dirent** %6, align 8, !dbg !4918
  %294 = getelementptr inbounds %struct.dirent, %struct.dirent* %293, i32 0, i32 4, !dbg !4919
  %295 = getelementptr inbounds [256 x i8], [256 x i8]* %294, i32 0, i32 0, !dbg !4918
  %296 = load %struct.dirent*, %struct.dirent** %6, align 8, !dbg !4920
  %297 = getelementptr inbounds %struct.dirent, %struct.dirent* %296, i32 0, i32 4, !dbg !4920
  %298 = getelementptr inbounds [256 x i8], [256 x i8]* %297, i32 0, i32 0, !dbg !4920
  %299 = call i64 @strlen(i8* %298) #12, !dbg !4920
  %300 = call %struct._ftsent* @fts_alloc(%struct.FTS* %292, i8* %295, i64 %299), !dbg !4921
  store %struct._ftsent* %300, %struct._ftsent** %7, align 8, !dbg !4922
  %301 = icmp eq %struct._ftsent* %300, null, !dbg !4923
  br i1 %301, label %302, label %303, !dbg !4924

; <label>:302:                                    ; preds = %291
  br label %324, !dbg !4925

; <label>:303:                                    ; preds = %291
  %304 = load %struct.dirent*, %struct.dirent** %6, align 8, !dbg !4926
  %305 = getelementptr inbounds %struct.dirent, %struct.dirent* %304, i32 0, i32 4, !dbg !4926
  %306 = getelementptr inbounds [256 x i8], [256 x i8]* %305, i32 0, i32 0, !dbg !4926
  %307 = call i64 @strlen(i8* %306) #12, !dbg !4926
  %308 = load i64, i64* %21, align 8, !dbg !4928
  %309 = icmp uge i64 %307, %308, !dbg !4929
  br i1 %309, label %310, label %365, !dbg !4930

; <label>:310:                                    ; preds = %303
  %311 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !4931
  %312 = getelementptr inbounds %struct.FTS, %struct.FTS* %311, i32 0, i32 4, !dbg !4933
  %313 = load i8*, i8** %312, align 8, !dbg !4933
  store i8* %313, i8** %13, align 8, !dbg !4934
  %314 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !4935
  %315 = load %struct.dirent*, %struct.dirent** %6, align 8, !dbg !4937
  %316 = getelementptr inbounds %struct.dirent, %struct.dirent* %315, i32 0, i32 4, !dbg !4937
  %317 = getelementptr inbounds [256 x i8], [256 x i8]* %316, i32 0, i32 0, !dbg !4937
  %318 = call i64 @strlen(i8* %317) #12, !dbg !4937
  %319 = load i64, i64* %20, align 8, !dbg !4938
  %320 = add i64 %318, %319, !dbg !4939
  %321 = add i64 %320, 1, !dbg !4940
  %322 = call zeroext i1 @fts_palloc(%struct.FTS* %314, i64 %321), !dbg !4941
  br i1 %322, label %340, label %323, !dbg !4942

; <label>:323:                                    ; preds = %310
  br label %324, !dbg !4943

; <label>:324:                                    ; preds = %323, %302
  %325 = call i32* @__errno_location() #14, !dbg !4944
  %326 = load i32, i32* %325, align 4, !dbg !4944
  store i32 %326, i32* %14, align 4, !dbg !4946
  %327 = load %struct._ftsent*, %struct._ftsent** %7, align 8, !dbg !4947
  %328 = bitcast %struct._ftsent* %327 to i8*, !dbg !4947
  call void @free(i8* %328) #8, !dbg !4948
  %329 = load %struct._ftsent*, %struct._ftsent** %8, align 8, !dbg !4949
  call void @fts_lfree(%struct._ftsent* %329), !dbg !4950
  %330 = load %struct.__dirstream*, %struct.__dirstream** %12, align 8, !dbg !4951
  %331 = call i32 @closedir(%struct.__dirstream* %330), !dbg !4952
  %332 = load %struct._ftsent*, %struct._ftsent** %10, align 8, !dbg !4953
  %333 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %332, i32 0, i32 14, !dbg !4954
  store i16 7, i16* %333, align 8, !dbg !4955
  %334 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !4956
  %335 = getelementptr inbounds %struct.FTS, %struct.FTS* %334, i32 0, i32 10, !dbg !4956
  %336 = load i32, i32* %335, align 8, !dbg !4956
  %337 = or i32 %336, 8192, !dbg !4956
  store i32 %337, i32* %335, align 8, !dbg !4956
  %338 = load i32, i32* %14, align 4, !dbg !4957
  %339 = call i32* @__errno_location() #14, !dbg !4957
  store i32 %338, i32* %339, align 4, !dbg !4957
  store %struct._ftsent* null, %struct._ftsent** %3, align 8, !dbg !4958
  br label %713, !dbg !4958

; <label>:340:                                    ; preds = %310
  %341 = load i8*, i8** %13, align 8, !dbg !4959
  %342 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !4961
  %343 = getelementptr inbounds %struct.FTS, %struct.FTS* %342, i32 0, i32 4, !dbg !4962
  %344 = load i8*, i8** %343, align 8, !dbg !4962
  %345 = icmp ne i8* %341, %344, !dbg !4963
  br i1 %345, label %346, label %359, !dbg !4964

; <label>:346:                                    ; preds = %340
  store i8 1, i8* %16, align 1, !dbg !4965
  %347 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !4967
  %348 = getelementptr inbounds %struct.FTS, %struct.FTS* %347, i32 0, i32 10, !dbg !4967
  %349 = load i32, i32* %348, align 8, !dbg !4967
  %350 = and i32 %349, 4, !dbg !4967
  %351 = icmp ne i32 %350, 0, !dbg !4967
  br i1 %351, label %352, label %358, !dbg !4969

; <label>:352:                                    ; preds = %346
  %353 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !4970
  %354 = getelementptr inbounds %struct.FTS, %struct.FTS* %353, i32 0, i32 4, !dbg !4971
  %355 = load i8*, i8** %354, align 8, !dbg !4971
  %356 = load i64, i64* %20, align 8, !dbg !4972
  %357 = getelementptr inbounds i8, i8* %355, i64 %356, !dbg !4973
  store i8* %357, i8** %23, align 8, !dbg !4974
  br label %358, !dbg !4975

; <label>:358:                                    ; preds = %352, %346
  br label %359, !dbg !4976

; <label>:359:                                    ; preds = %358, %340
  %360 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !4977
  %361 = getelementptr inbounds %struct.FTS, %struct.FTS* %360, i32 0, i32 7, !dbg !4978
  %362 = load i64, i64* %361, align 8, !dbg !4978
  %363 = load i64, i64* %20, align 8, !dbg !4979
  %364 = sub i64 %362, %363, !dbg !4980
  store i64 %364, i64* %21, align 8, !dbg !4981
  br label %365, !dbg !4982

; <label>:365:                                    ; preds = %359, %303
  %366 = load i64, i64* %20, align 8, !dbg !4983
  %367 = load %struct.dirent*, %struct.dirent** %6, align 8, !dbg !4984
  %368 = getelementptr inbounds %struct.dirent, %struct.dirent* %367, i32 0, i32 4, !dbg !4984
  %369 = getelementptr inbounds [256 x i8], [256 x i8]* %368, i32 0, i32 0, !dbg !4984
  %370 = call i64 @strlen(i8* %369) #12, !dbg !4984
  %371 = add i64 %366, %370, !dbg !4985
  store i64 %371, i64* %22, align 8, !dbg !4986
  %372 = load i64, i64* %22, align 8, !dbg !4987
  %373 = load i64, i64* %20, align 8, !dbg !4989
  %374 = icmp ult i64 %372, %373, !dbg !4990
  br i1 %374, label %375, label %388, !dbg !4991

; <label>:375:                                    ; preds = %365
  %376 = load %struct._ftsent*, %struct._ftsent** %7, align 8, !dbg !4992
  %377 = bitcast %struct._ftsent* %376 to i8*, !dbg !4992
  call void @free(i8* %377) #8, !dbg !4994
  %378 = load %struct._ftsent*, %struct._ftsent** %8, align 8, !dbg !4995
  call void @fts_lfree(%struct._ftsent* %378), !dbg !4996
  %379 = load %struct.__dirstream*, %struct.__dirstream** %12, align 8, !dbg !4997
  %380 = call i32 @closedir(%struct.__dirstream* %379), !dbg !4998
  %381 = load %struct._ftsent*, %struct._ftsent** %10, align 8, !dbg !4999
  %382 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %381, i32 0, i32 14, !dbg !5000
  store i16 7, i16* %382, align 8, !dbg !5001
  %383 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !5002
  %384 = getelementptr inbounds %struct.FTS, %struct.FTS* %383, i32 0, i32 10, !dbg !5002
  %385 = load i32, i32* %384, align 8, !dbg !5002
  %386 = or i32 %385, 8192, !dbg !5002
  store i32 %386, i32* %384, align 8, !dbg !5002
  %387 = call i32* @__errno_location() #14, !dbg !5003
  store i32 36, i32* %387, align 4, !dbg !5003
  store %struct._ftsent* null, %struct._ftsent** %3, align 8, !dbg !5004
  br label %713, !dbg !5004

; <label>:388:                                    ; preds = %365
  %389 = load i64, i64* %17, align 8, !dbg !5005
  %390 = load %struct._ftsent*, %struct._ftsent** %7, align 8, !dbg !5006
  %391 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %390, i32 0, i32 11, !dbg !5007
  store i64 %389, i64* %391, align 8, !dbg !5008
  %392 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !5009
  %393 = getelementptr inbounds %struct.FTS, %struct.FTS* %392, i32 0, i32 0, !dbg !5010
  %394 = load %struct._ftsent*, %struct._ftsent** %393, align 8, !dbg !5010
  %395 = load %struct._ftsent*, %struct._ftsent** %7, align 8, !dbg !5011
  %396 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %395, i32 0, i32 1, !dbg !5012
  store %struct._ftsent* %394, %struct._ftsent** %396, align 8, !dbg !5013
  %397 = load i64, i64* %22, align 8, !dbg !5014
  %398 = load %struct._ftsent*, %struct._ftsent** %7, align 8, !dbg !5015
  %399 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %398, i32 0, i32 9, !dbg !5016
  store i64 %397, i64* %399, align 8, !dbg !5017
  %400 = load %struct.dirent*, %struct.dirent** %6, align 8, !dbg !5018
  %401 = getelementptr inbounds %struct.dirent, %struct.dirent* %400, i32 0, i32 0, !dbg !5018
  %402 = load i64, i64* %401, align 8, !dbg !5018
  %403 = load %struct._ftsent*, %struct._ftsent** %7, align 8, !dbg !5019
  %404 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %403, i32 0, i32 17, !dbg !5020
  %405 = getelementptr inbounds [1 x %struct.stat], [1 x %struct.stat]* %404, i32 0, i32 0, !dbg !5021
  %406 = getelementptr inbounds %struct.stat, %struct.stat* %405, i32 0, i32 1, !dbg !5021
  store i64 %402, i64* %406, align 8, !dbg !5022
  %407 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !5023
  %408 = getelementptr inbounds %struct.FTS, %struct.FTS* %407, i32 0, i32 10, !dbg !5023
  %409 = load i32, i32* %408, align 8, !dbg !5023
  %410 = and i32 %409, 4, !dbg !5023
  %411 = icmp ne i32 %410, 0, !dbg !5023
  br i1 %411, label %412, label %426, !dbg !5025

; <label>:412:                                    ; preds = %388
  %413 = load %struct._ftsent*, %struct._ftsent** %7, align 8, !dbg !5026
  %414 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %413, i32 0, i32 6, !dbg !5028
  %415 = load i8*, i8** %414, align 8, !dbg !5028
  %416 = load %struct._ftsent*, %struct._ftsent** %7, align 8, !dbg !5029
  %417 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %416, i32 0, i32 5, !dbg !5030
  store i8* %415, i8** %417, align 8, !dbg !5031
  %418 = load i8*, i8** %23, align 8, !dbg !5032
  %419 = load %struct._ftsent*, %struct._ftsent** %7, align 8, !dbg !5033
  %420 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %419, i32 0, i32 18, !dbg !5034
  %421 = getelementptr inbounds [1 x i8], [1 x i8]* %420, i32 0, i32 0, !dbg !5035
  %422 = load %struct._ftsent*, %struct._ftsent** %7, align 8, !dbg !5036
  %423 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %422, i32 0, i32 12, !dbg !5037
  %424 = load i64, i64* %423, align 8, !dbg !5037
  %425 = add i64 %424, 1, !dbg !5038
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %418, i8* %421, i64 %425, i32 1, i1 false), !dbg !5035
  br label %432, !dbg !5039

; <label>:426:                                    ; preds = %388
  %427 = load %struct._ftsent*, %struct._ftsent** %7, align 8, !dbg !5040
  %428 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %427, i32 0, i32 18, !dbg !5041
  %429 = getelementptr inbounds [1 x i8], [1 x i8]* %428, i32 0, i32 0, !dbg !5040
  %430 = load %struct._ftsent*, %struct._ftsent** %7, align 8, !dbg !5042
  %431 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %430, i32 0, i32 5, !dbg !5043
  store i8* %429, i8** %431, align 8, !dbg !5044
  br label %432

; <label>:432:                                    ; preds = %426, %412
  %433 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !5045
  %434 = getelementptr inbounds %struct.FTS, %struct.FTS* %433, i32 0, i32 9, !dbg !5047
  %435 = load i32 (%struct._ftsent**, %struct._ftsent**)*, i32 (%struct._ftsent**, %struct._ftsent**)** %434, align 8, !dbg !5047
  %436 = icmp eq i32 (%struct._ftsent**, %struct._ftsent**)* %435, null, !dbg !5048
  br i1 %436, label %443, label %437, !dbg !5049

; <label>:437:                                    ; preds = %432
  %438 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !5050
  %439 = getelementptr inbounds %struct.FTS, %struct.FTS* %438, i32 0, i32 10, !dbg !5050
  %440 = load i32, i32* %439, align 8, !dbg !5050
  %441 = and i32 %440, 1024, !dbg !5050
  %442 = icmp ne i32 %441, 0, !dbg !5050
  br i1 %442, label %443, label %498, !dbg !5051

; <label>:443:                                    ; preds = %437, %432
  call void @llvm.dbg.declare(metadata i8* %26, metadata !5052, metadata !DIExpression()), !dbg !5054
  %444 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !5055
  %445 = getelementptr inbounds %struct.FTS, %struct.FTS* %444, i32 0, i32 10, !dbg !5055
  %446 = load i32, i32* %445, align 8, !dbg !5055
  %447 = and i32 %446, 16, !dbg !5055
  %448 = icmp ne i32 %447, 0, !dbg !5055
  br i1 %448, label %449, label %468, !dbg !5056

; <label>:449:                                    ; preds = %443
  %450 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !5057
  %451 = getelementptr inbounds %struct.FTS, %struct.FTS* %450, i32 0, i32 10, !dbg !5057
  %452 = load i32, i32* %451, align 8, !dbg !5057
  %453 = and i32 %452, 8, !dbg !5057
  %454 = icmp ne i32 %453, 0, !dbg !5057
  br i1 %454, label %455, label %468, !dbg !5058

; <label>:455:                                    ; preds = %449
  %456 = load %struct.dirent*, %struct.dirent** %6, align 8, !dbg !5059
  %457 = getelementptr inbounds %struct.dirent, %struct.dirent* %456, i32 0, i32 3, !dbg !5059
  %458 = load i8, i8* %457, align 2, !dbg !5059
  %459 = zext i8 %458 to i32, !dbg !5059
  %460 = icmp ne i32 %459, 0, !dbg !5059
  br i1 %460, label %461, label %468, !dbg !5060

; <label>:461:                                    ; preds = %455
  %462 = load %struct.dirent*, %struct.dirent** %6, align 8, !dbg !5061
  %463 = getelementptr inbounds %struct.dirent, %struct.dirent* %462, i32 0, i32 3, !dbg !5061
  %464 = load i8, i8* %463, align 2, !dbg !5061
  %465 = zext i8 %464 to i32, !dbg !5061
  %466 = icmp eq i32 %465, 4, !dbg !5061
  %467 = xor i1 %466, true, !dbg !5062
  br label %468

; <label>:468:                                    ; preds = %461, %455, %449, %443
  %469 = phi i1 [ false, %455 ], [ false, %449 ], [ false, %443 ], [ %467, %461 ]
  %470 = zext i1 %469 to i8, !dbg !5054
  store i8 %470, i8* %26, align 1, !dbg !5054
  %471 = load %struct._ftsent*, %struct._ftsent** %7, align 8, !dbg !5063
  %472 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %471, i32 0, i32 14, !dbg !5064
  store i16 11, i16* %472, align 8, !dbg !5065
  %473 = load %struct._ftsent*, %struct._ftsent** %7, align 8, !dbg !5066
  %474 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %473, i32 0, i32 17, !dbg !5067
  %475 = getelementptr inbounds [1 x %struct.stat], [1 x %struct.stat]* %474, i32 0, i32 0, !dbg !5066
  %476 = load %struct.dirent*, %struct.dirent** %6, align 8, !dbg !5068
  %477 = getelementptr inbounds %struct.dirent, %struct.dirent* %476, i32 0, i32 3, !dbg !5068
  %478 = load i8, i8* %477, align 2, !dbg !5068
  %479 = zext i8 %478 to i32, !dbg !5068
  call void @set_stat_type(%struct.stat* %475, i32 %479), !dbg !5069
  %480 = load %struct._ftsent*, %struct._ftsent** %7, align 8, !dbg !5070
  %481 = load i8, i8* %26, align 1, !dbg !5071
  %482 = trunc i8 %481 to i1, !dbg !5071
  %483 = xor i1 %482, true, !dbg !5072
  call void @fts_set_stat_required(%struct._ftsent* %480, i1 zeroext %483), !dbg !5073
  %484 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !5074
  %485 = getelementptr inbounds %struct.FTS, %struct.FTS* %484, i32 0, i32 10, !dbg !5074
  %486 = load i32, i32* %485, align 8, !dbg !5074
  %487 = and i32 %486, 16, !dbg !5074
  %488 = icmp ne i32 %487, 0, !dbg !5074
  br i1 %488, label %489, label %495, !dbg !5075

; <label>:489:                                    ; preds = %468
  %490 = load %struct.dirent*, %struct.dirent** %6, align 8, !dbg !5076
  %491 = getelementptr inbounds %struct.dirent, %struct.dirent* %490, i32 0, i32 3, !dbg !5076
  %492 = load i8, i8* %491, align 2, !dbg !5076
  %493 = zext i8 %492 to i32, !dbg !5076
  %494 = icmp eq i32 %493, 4, !dbg !5076
  br label %495

; <label>:495:                                    ; preds = %489, %468
  %496 = phi i1 [ false, %468 ], [ %494, %489 ]
  %497 = zext i1 %496 to i8, !dbg !5077
  store i8 %497, i8* %25, align 1, !dbg !5077
  br label %524, !dbg !5078

; <label>:498:                                    ; preds = %437
  %499 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !5079
  %500 = load %struct._ftsent*, %struct._ftsent** %7, align 8, !dbg !5081
  %501 = call zeroext i16 @fts_stat(%struct.FTS* %499, %struct._ftsent* %500, i1 zeroext false), !dbg !5082
  %502 = load %struct._ftsent*, %struct._ftsent** %7, align 8, !dbg !5083
  %503 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %502, i32 0, i32 14, !dbg !5084
  store i16 %501, i16* %503, align 8, !dbg !5085
  %504 = load %struct._ftsent*, %struct._ftsent** %7, align 8, !dbg !5086
  %505 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %504, i32 0, i32 14, !dbg !5087
  %506 = load i16, i16* %505, align 8, !dbg !5087
  %507 = zext i16 %506 to i32, !dbg !5086
  %508 = icmp eq i32 %507, 1, !dbg !5088
  br i1 %508, label %521, label %509, !dbg !5089

; <label>:509:                                    ; preds = %498
  %510 = load %struct._ftsent*, %struct._ftsent** %7, align 8, !dbg !5090
  %511 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %510, i32 0, i32 14, !dbg !5091
  %512 = load i16, i16* %511, align 8, !dbg !5091
  %513 = zext i16 %512 to i32, !dbg !5090
  %514 = icmp eq i32 %513, 2, !dbg !5092
  br i1 %514, label %521, label %515, !dbg !5093

; <label>:515:                                    ; preds = %509
  %516 = load %struct._ftsent*, %struct._ftsent** %7, align 8, !dbg !5094
  %517 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %516, i32 0, i32 14, !dbg !5095
  %518 = load i16, i16* %517, align 8, !dbg !5095
  %519 = zext i16 %518 to i32, !dbg !5094
  %520 = icmp eq i32 %519, 5, !dbg !5096
  br label %521, !dbg !5093

; <label>:521:                                    ; preds = %515, %509, %498
  %522 = phi i1 [ true, %509 ], [ true, %498 ], [ %520, %515 ]
  %523 = zext i1 %522 to i8, !dbg !5097
  store i8 %523, i8* %25, align 1, !dbg !5097
  br label %524

; <label>:524:                                    ; preds = %521, %495
  %525 = load i64, i64* %18, align 8, !dbg !5098
  %526 = icmp ugt i64 %525, 0, !dbg !5100
  br i1 %526, label %527, label %536, !dbg !5101

; <label>:527:                                    ; preds = %524
  %528 = load i8, i8* %25, align 1, !dbg !5102
  %529 = trunc i8 %528 to i1, !dbg !5102
  br i1 %529, label %530, label %536, !dbg !5103

; <label>:530:                                    ; preds = %527
  %531 = load i8, i8* %19, align 1, !dbg !5104
  %532 = trunc i8 %531 to i1, !dbg !5104
  %533 = zext i1 %532 to i64, !dbg !5104
  %534 = load i64, i64* %18, align 8, !dbg !5105
  %535 = sub i64 %534, %533, !dbg !5105
  store i64 %535, i64* %18, align 8, !dbg !5105
  br label %536, !dbg !5106

; <label>:536:                                    ; preds = %530, %527, %524
  %537 = load %struct._ftsent*, %struct._ftsent** %7, align 8, !dbg !5107
  %538 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %537, i32 0, i32 2, !dbg !5108
  store %struct._ftsent* null, %struct._ftsent** %538, align 8, !dbg !5109
  %539 = load %struct._ftsent*, %struct._ftsent** %8, align 8, !dbg !5110
  %540 = icmp eq %struct._ftsent* %539, null, !dbg !5112
  br i1 %540, label %541, label %543, !dbg !5113

; <label>:541:                                    ; preds = %536
  %542 = load %struct._ftsent*, %struct._ftsent** %7, align 8, !dbg !5114
  store %struct._ftsent* %542, %struct._ftsent** %11, align 8, !dbg !5115
  store %struct._ftsent* %542, %struct._ftsent** %8, align 8, !dbg !5116
  br label %548, !dbg !5117

; <label>:543:                                    ; preds = %536
  %544 = load %struct._ftsent*, %struct._ftsent** %7, align 8, !dbg !5118
  %545 = load %struct._ftsent*, %struct._ftsent** %11, align 8, !dbg !5120
  %546 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %545, i32 0, i32 2, !dbg !5121
  store %struct._ftsent* %544, %struct._ftsent** %546, align 8, !dbg !5122
  %547 = load %struct._ftsent*, %struct._ftsent** %7, align 8, !dbg !5123
  store %struct._ftsent* %547, %struct._ftsent** %11, align 8, !dbg !5124
  br label %548

; <label>:548:                                    ; preds = %543, %541
  %549 = load i64, i64* %9, align 8, !dbg !5125
  %550 = add i64 %549, 1, !dbg !5125
  store i64 %550, i64* %9, align 8, !dbg !5125
  br label %249, !dbg !5126, !llvm.loop !4914

; <label>:551:                                    ; preds = %256
  %552 = load %struct.__dirstream*, %struct.__dirstream** %12, align 8, !dbg !5127
  %553 = icmp ne %struct.__dirstream* %552, null, !dbg !5127
  br i1 %553, label %554, label %557, !dbg !5129

; <label>:554:                                    ; preds = %551
  %555 = load %struct.__dirstream*, %struct.__dirstream** %12, align 8, !dbg !5130
  %556 = call i32 @closedir(%struct.__dirstream* %555), !dbg !5131
  br label %557, !dbg !5131

; <label>:557:                                    ; preds = %554, %551
  %558 = load i8, i8* %16, align 1, !dbg !5132
  %559 = trunc i8 %558 to i1, !dbg !5132
  br i1 %559, label %560, label %563, !dbg !5134

; <label>:560:                                    ; preds = %557
  %561 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !5135
  %562 = load %struct._ftsent*, %struct._ftsent** %8, align 8, !dbg !5136
  call void @fts_padjust(%struct.FTS* %561, %struct._ftsent* %562), !dbg !5137
  br label %563, !dbg !5137

; <label>:563:                                    ; preds = %560, %557
  %564 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !5138
  %565 = getelementptr inbounds %struct.FTS, %struct.FTS* %564, i32 0, i32 10, !dbg !5138
  %566 = load i32, i32* %565, align 8, !dbg !5138
  %567 = and i32 %566, 4, !dbg !5138
  %568 = icmp ne i32 %567, 0, !dbg !5138
  br i1 %568, label %569, label %583, !dbg !5140

; <label>:569:                                    ; preds = %563
  %570 = load i64, i64* %20, align 8, !dbg !5141
  %571 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !5144
  %572 = getelementptr inbounds %struct.FTS, %struct.FTS* %571, i32 0, i32 7, !dbg !5145
  %573 = load i64, i64* %572, align 8, !dbg !5145
  %574 = icmp eq i64 %570, %573, !dbg !5146
  br i1 %574, label %578, label %575, !dbg !5147

; <label>:575:                                    ; preds = %569
  %576 = load i64, i64* %9, align 8, !dbg !5148
  %577 = icmp eq i64 %576, 0, !dbg !5149
  br i1 %577, label %578, label %581, !dbg !5150

; <label>:578:                                    ; preds = %575, %569
  %579 = load i8*, i8** %23, align 8, !dbg !5151
  %580 = getelementptr inbounds i8, i8* %579, i32 -1, !dbg !5151
  store i8* %580, i8** %23, align 8, !dbg !5151
  br label %581, !dbg !5151

; <label>:581:                                    ; preds = %578, %575
  %582 = load i8*, i8** %23, align 8, !dbg !5152
  store i8 0, i8* %582, align 1, !dbg !5153
  br label %583, !dbg !5154

; <label>:583:                                    ; preds = %581, %563
  %584 = load i8, i8* %15, align 1, !dbg !5155
  %585 = trunc i8 %584 to i1, !dbg !5155
  br i1 %585, label %586, label %659, !dbg !5157

; <label>:586:                                    ; preds = %583
  %587 = load i32, i32* %5, align 4, !dbg !5158
  %588 = icmp eq i32 %587, 1, !dbg !5159
  br i1 %588, label %592, label %589, !dbg !5160

; <label>:589:                                    ; preds = %586
  %590 = load i64, i64* %9, align 8, !dbg !5161
  %591 = icmp ne i64 %590, 0, !dbg !5161
  br i1 %591, label %659, label %592, !dbg !5162

; <label>:592:                                    ; preds = %589, %586
  %593 = load %struct._ftsent*, %struct._ftsent** %10, align 8, !dbg !5163
  %594 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %593, i32 0, i32 11, !dbg !5164
  %595 = load i64, i64* %594, align 8, !dbg !5164
  %596 = icmp eq i64 %595, 0, !dbg !5165
  br i1 %596, label %597, label %644, !dbg !5166

; <label>:597:                                    ; preds = %592
  %598 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !5167
  %599 = getelementptr inbounds %struct.FTS, %struct.FTS* %598, i32 0, i32 13, !dbg !5167
  call void @fd_ring_clear(%struct.I_ring* %599), !dbg !5167
  %600 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !5167
  %601 = getelementptr inbounds %struct.FTS, %struct.FTS* %600, i32 0, i32 10, !dbg !5167
  %602 = load i32, i32* %601, align 8, !dbg !5167
  %603 = and i32 %602, 4, !dbg !5167
  %604 = icmp ne i32 %603, 0, !dbg !5167
  br i1 %604, label %642, label %605, !dbg !5167

; <label>:605:                                    ; preds = %597
  %606 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !5167
  %607 = getelementptr inbounds %struct.FTS, %struct.FTS* %606, i32 0, i32 10, !dbg !5167
  %608 = load i32, i32* %607, align 8, !dbg !5167
  %609 = and i32 %608, 512, !dbg !5167
  %610 = icmp ne i32 %609, 0, !dbg !5167
  br i1 %610, label %611, label %625, !dbg !5167

; <label>:611:                                    ; preds = %605
  %612 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !5167
  %613 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !5167
  %614 = getelementptr inbounds %struct.FTS, %struct.FTS* %613, i32 0, i32 10, !dbg !5167
  %615 = load i32, i32* %614, align 8, !dbg !5167
  %616 = and i32 %615, 512, !dbg !5167
  %617 = icmp ne i32 %616, 0, !dbg !5167
  br i1 %617, label %618, label %619, !dbg !5167

; <label>:618:                                    ; preds = %611
  br label %623, !dbg !5167

; <label>:619:                                    ; preds = %611
  %620 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !5167
  %621 = getelementptr inbounds %struct.FTS, %struct.FTS* %620, i32 0, i32 5, !dbg !5167
  %622 = load i32, i32* %621, align 8, !dbg !5167
  br label %623, !dbg !5167

; <label>:623:                                    ; preds = %619, %618
  %624 = phi i32 [ -100, %618 ], [ %622, %619 ], !dbg !5167
  call void @cwd_advance_fd(%struct.FTS* %612, i32 %624, i1 zeroext true), !dbg !5167
  br label %639, !dbg !5167

; <label>:625:                                    ; preds = %605
  %626 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !5167
  %627 = getelementptr inbounds %struct.FTS, %struct.FTS* %626, i32 0, i32 10, !dbg !5167
  %628 = load i32, i32* %627, align 8, !dbg !5167
  %629 = and i32 %628, 512, !dbg !5167
  %630 = icmp ne i32 %629, 0, !dbg !5167
  br i1 %630, label %631, label %632, !dbg !5167

; <label>:631:                                    ; preds = %625
  br label %636, !dbg !5167

; <label>:632:                                    ; preds = %625
  %633 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !5167
  %634 = getelementptr inbounds %struct.FTS, %struct.FTS* %633, i32 0, i32 5, !dbg !5167
  %635 = load i32, i32* %634, align 8, !dbg !5167
  br label %636, !dbg !5167

; <label>:636:                                    ; preds = %632, %631
  %637 = phi i32 [ -100, %631 ], [ %635, %632 ], !dbg !5167
  %638 = call i32 @fchdir(i32 %637) #8, !dbg !5167
  br label %639, !dbg !5167

; <label>:639:                                    ; preds = %636, %623
  %640 = phi i32 [ 0, %623 ], [ %638, %636 ], !dbg !5167
  %641 = icmp ne i32 %640, 0, !dbg !5167
  br label %642

; <label>:642:                                    ; preds = %639, %597
  %643 = phi i1 [ false, %597 ], [ %641, %639 ]
  br i1 %643, label %651, label %659, !dbg !5163

; <label>:644:                                    ; preds = %592
  %645 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !5168
  %646 = load %struct._ftsent*, %struct._ftsent** %10, align 8, !dbg !5169
  %647 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %646, i32 0, i32 1, !dbg !5170
  %648 = load %struct._ftsent*, %struct._ftsent** %647, align 8, !dbg !5170
  %649 = call i32 @fts_safe_changedir(%struct.FTS* %645, %struct._ftsent* %648, i32 -1, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2.156, i32 0, i32 0)), !dbg !5171
  %650 = icmp ne i32 %649, 0, !dbg !5171
  br i1 %650, label %651, label %659, !dbg !5166

; <label>:651:                                    ; preds = %644, %642
  %652 = load %struct._ftsent*, %struct._ftsent** %10, align 8, !dbg !5172
  %653 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %652, i32 0, i32 14, !dbg !5174
  store i16 7, i16* %653, align 8, !dbg !5175
  %654 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !5176
  %655 = getelementptr inbounds %struct.FTS, %struct.FTS* %654, i32 0, i32 10, !dbg !5176
  %656 = load i32, i32* %655, align 8, !dbg !5176
  %657 = or i32 %656, 8192, !dbg !5176
  store i32 %657, i32* %655, align 8, !dbg !5176
  %658 = load %struct._ftsent*, %struct._ftsent** %8, align 8, !dbg !5177
  call void @fts_lfree(%struct._ftsent* %658), !dbg !5178
  store %struct._ftsent* null, %struct._ftsent** %3, align 8, !dbg !5179
  br label %713, !dbg !5179

; <label>:659:                                    ; preds = %644, %642, %589, %583
  %660 = load i64, i64* %9, align 8, !dbg !5180
  %661 = icmp ne i64 %660, 0, !dbg !5180
  br i1 %661, label %670, label %662, !dbg !5182

; <label>:662:                                    ; preds = %659
  %663 = load i32, i32* %5, align 4, !dbg !5183
  %664 = icmp eq i32 %663, 3, !dbg !5186
  br i1 %664, label %665, label %668, !dbg !5187

; <label>:665:                                    ; preds = %662
  %666 = load %struct._ftsent*, %struct._ftsent** %10, align 8, !dbg !5188
  %667 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %666, i32 0, i32 14, !dbg !5189
  store i16 6, i16* %667, align 8, !dbg !5190
  br label %668, !dbg !5188

; <label>:668:                                    ; preds = %665, %662
  %669 = load %struct._ftsent*, %struct._ftsent** %8, align 8, !dbg !5191
  call void @fts_lfree(%struct._ftsent* %669), !dbg !5192
  store %struct._ftsent* null, %struct._ftsent** %3, align 8, !dbg !5193
  br label %713, !dbg !5193

; <label>:670:                                    ; preds = %659
  %671 = load i64, i64* %9, align 8, !dbg !5194
  %672 = icmp ugt i64 %671, 10000, !dbg !5196
  br i1 %672, label %673, label %698, !dbg !5197

; <label>:673:                                    ; preds = %670
  %674 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !5198
  %675 = getelementptr inbounds %struct.FTS, %struct.FTS* %674, i32 0, i32 9, !dbg !5199
  %676 = load i32 (%struct._ftsent**, %struct._ftsent**)*, i32 (%struct._ftsent**, %struct._ftsent**)** %675, align 8, !dbg !5199
  %677 = icmp ne i32 (%struct._ftsent**, %struct._ftsent**)* %676, null, !dbg !5198
  br i1 %677, label %698, label %678, !dbg !5200

; <label>:678:                                    ; preds = %673
  %679 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !5201
  %680 = getelementptr inbounds %struct.FTS, %struct.FTS* %679, i32 0, i32 10, !dbg !5201
  %681 = load i32, i32* %680, align 8, !dbg !5201
  %682 = and i32 %681, 512, !dbg !5201
  %683 = icmp ne i32 %682, 0, !dbg !5201
  br i1 %683, label %684, label %698, !dbg !5202

; <label>:684:                                    ; preds = %678
  %685 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !5203
  %686 = getelementptr inbounds %struct.FTS, %struct.FTS* %685, i32 0, i32 6, !dbg !5204
  %687 = load i32, i32* %686, align 4, !dbg !5204
  %688 = call zeroext i1 @dirent_inode_sort_may_be_useful(i32 %687), !dbg !5205
  br i1 %688, label %689, label %698, !dbg !5206

; <label>:689:                                    ; preds = %684
  %690 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !5207
  %691 = getelementptr inbounds %struct.FTS, %struct.FTS* %690, i32 0, i32 9, !dbg !5209
  store i32 (%struct._ftsent**, %struct._ftsent**)* @fts_compare_ino, i32 (%struct._ftsent**, %struct._ftsent**)** %691, align 8, !dbg !5210
  %692 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !5211
  %693 = load %struct._ftsent*, %struct._ftsent** %8, align 8, !dbg !5212
  %694 = load i64, i64* %9, align 8, !dbg !5213
  %695 = call %struct._ftsent* @fts_sort(%struct.FTS* %692, %struct._ftsent* %693, i64 %694), !dbg !5214
  store %struct._ftsent* %695, %struct._ftsent** %8, align 8, !dbg !5215
  %696 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !5216
  %697 = getelementptr inbounds %struct.FTS, %struct.FTS* %696, i32 0, i32 9, !dbg !5217
  store i32 (%struct._ftsent**, %struct._ftsent**)* null, i32 (%struct._ftsent**, %struct._ftsent**)** %697, align 8, !dbg !5218
  br label %698, !dbg !5219

; <label>:698:                                    ; preds = %689, %684, %678, %673, %670
  %699 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !5220
  %700 = getelementptr inbounds %struct.FTS, %struct.FTS* %699, i32 0, i32 9, !dbg !5222
  %701 = load i32 (%struct._ftsent**, %struct._ftsent**)*, i32 (%struct._ftsent**, %struct._ftsent**)** %700, align 8, !dbg !5222
  %702 = icmp ne i32 (%struct._ftsent**, %struct._ftsent**)* %701, null, !dbg !5220
  br i1 %702, label %703, label %711, !dbg !5223

; <label>:703:                                    ; preds = %698
  %704 = load i64, i64* %9, align 8, !dbg !5224
  %705 = icmp ugt i64 %704, 1, !dbg !5225
  br i1 %705, label %706, label %711, !dbg !5226

; <label>:706:                                    ; preds = %703
  %707 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !5227
  %708 = load %struct._ftsent*, %struct._ftsent** %8, align 8, !dbg !5228
  %709 = load i64, i64* %9, align 8, !dbg !5229
  %710 = call %struct._ftsent* @fts_sort(%struct.FTS* %707, %struct._ftsent* %708, i64 %709), !dbg !5230
  store %struct._ftsent* %710, %struct._ftsent** %8, align 8, !dbg !5231
  br label %711, !dbg !5232

; <label>:711:                                    ; preds = %706, %703, %698
  %712 = load %struct._ftsent*, %struct._ftsent** %8, align 8, !dbg !5233
  store %struct._ftsent* %712, %struct._ftsent** %3, align 8, !dbg !5234
  br label %713, !dbg !5234

; <label>:713:                                    ; preds = %711, %668, %651, %375, %324, %97, %67
  %714 = load %struct._ftsent*, %struct._ftsent** %3, align 8, !dbg !5235
  ret %struct._ftsent* %714, !dbg !5235
}

; Function Attrs: noinline nounwind uwtable
define internal void @cwd_advance_fd(%struct.FTS*, i32, i1 zeroext) #3 !dbg !5236 {
  %4 = alloca %struct.FTS*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i8, align 1
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  store %struct.FTS* %0, %struct.FTS** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.FTS** %4, metadata !5239, metadata !DIExpression()), !dbg !5240
  store i32 %1, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !5241, metadata !DIExpression()), !dbg !5242
  %9 = zext i1 %2 to i8
  store i8 %9, i8* %6, align 1
  call void @llvm.dbg.declare(metadata i8* %6, metadata !5243, metadata !DIExpression()), !dbg !5244
  call void @llvm.dbg.declare(metadata i32* %7, metadata !5245, metadata !DIExpression()), !dbg !5246
  %10 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !5247
  %11 = getelementptr inbounds %struct.FTS, %struct.FTS* %10, i32 0, i32 6, !dbg !5248
  %12 = load i32, i32* %11, align 4, !dbg !5248
  store i32 %12, i32* %7, align 4, !dbg !5246
  br label %13, !dbg !5249, !llvm.loop !5250

; <label>:13:                                     ; preds = %3
  %14 = load i32, i32* %7, align 4, !dbg !5251
  %15 = load i32, i32* %5, align 4, !dbg !5251
  %16 = icmp ne i32 %14, %15, !dbg !5251
  br i1 %16, label %21, label %17, !dbg !5251

; <label>:17:                                     ; preds = %13
  %18 = load i32, i32* %7, align 4, !dbg !5251
  %19 = icmp eq i32 %18, -100, !dbg !5251
  br i1 %19, label %21, label %20, !dbg !5254

; <label>:20:                                     ; preds = %17
  call void @abort() #11, !dbg !5251
  unreachable, !dbg !5251

; <label>:21:                                     ; preds = %17, %13
  br label %22, !dbg !5254

; <label>:22:                                     ; preds = %21
  %23 = load i8, i8* %6, align 1, !dbg !5255
  %24 = trunc i8 %23 to i1, !dbg !5255
  br i1 %24, label %25, label %36, !dbg !5257

; <label>:25:                                     ; preds = %22
  call void @llvm.dbg.declare(metadata i32* %8, metadata !5258, metadata !DIExpression()), !dbg !5260
  %26 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !5261
  %27 = getelementptr inbounds %struct.FTS, %struct.FTS* %26, i32 0, i32 13, !dbg !5262
  %28 = load i32, i32* %7, align 4, !dbg !5263
  %29 = call i32 @i_ring_push(%struct.I_ring* %27, i32 %28), !dbg !5264
  store i32 %29, i32* %8, align 4, !dbg !5260
  %30 = load i32, i32* %8, align 4, !dbg !5265
  %31 = icmp sle i32 0, %30, !dbg !5267
  br i1 %31, label %32, label %35, !dbg !5268

; <label>:32:                                     ; preds = %25
  %33 = load i32, i32* %8, align 4, !dbg !5269
  %34 = call i32 @close(i32 %33), !dbg !5270
  br label %35, !dbg !5270

; <label>:35:                                     ; preds = %32, %25
  br label %50, !dbg !5271

; <label>:36:                                     ; preds = %22
  %37 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !5272
  %38 = getelementptr inbounds %struct.FTS, %struct.FTS* %37, i32 0, i32 10, !dbg !5272
  %39 = load i32, i32* %38, align 8, !dbg !5272
  %40 = and i32 %39, 4, !dbg !5272
  %41 = icmp ne i32 %40, 0, !dbg !5272
  br i1 %41, label %49, label %42, !dbg !5274

; <label>:42:                                     ; preds = %36
  %43 = load i32, i32* %7, align 4, !dbg !5275
  %44 = icmp sle i32 0, %43, !dbg !5278
  br i1 %44, label %45, label %48, !dbg !5279

; <label>:45:                                     ; preds = %42
  %46 = load i32, i32* %7, align 4, !dbg !5280
  %47 = call i32 @close(i32 %46), !dbg !5281
  br label %48, !dbg !5281

; <label>:48:                                     ; preds = %45, %42
  br label %49, !dbg !5282

; <label>:49:                                     ; preds = %48, %36
  br label %50

; <label>:50:                                     ; preds = %49, %35
  %51 = load i32, i32* %5, align 4, !dbg !5283
  %52 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !5284
  %53 = getelementptr inbounds %struct.FTS, %struct.FTS* %52, i32 0, i32 6, !dbg !5285
  store i32 %51, i32* %53, align 4, !dbg !5286
  ret void, !dbg !5287
}

; Function Attrs: noinline nounwind uwtable
define internal void @fts_load(%struct.FTS*, %struct._ftsent*) #3 !dbg !5288 {
  %3 = alloca %struct.FTS*, align 8
  %4 = alloca %struct._ftsent*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i8*, align 8
  store %struct.FTS* %0, %struct.FTS** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.FTS** %3, metadata !5289, metadata !DIExpression()), !dbg !5290
  store %struct._ftsent* %1, %struct._ftsent** %4, align 8
  call void @llvm.dbg.declare(metadata %struct._ftsent** %4, metadata !5291, metadata !DIExpression()), !dbg !5292
  call void @llvm.dbg.declare(metadata i64* %5, metadata !5293, metadata !DIExpression()), !dbg !5294
  call void @llvm.dbg.declare(metadata i8** %6, metadata !5295, metadata !DIExpression()), !dbg !5296
  %7 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !5297
  %8 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %7, i32 0, i32 12, !dbg !5298
  %9 = load i64, i64* %8, align 8, !dbg !5298
  %10 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !5299
  %11 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %10, i32 0, i32 9, !dbg !5300
  store i64 %9, i64* %11, align 8, !dbg !5301
  store i64 %9, i64* %5, align 8, !dbg !5302
  %12 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !5303
  %13 = getelementptr inbounds %struct.FTS, %struct.FTS* %12, i32 0, i32 4, !dbg !5304
  %14 = load i8*, i8** %13, align 8, !dbg !5304
  %15 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !5305
  %16 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %15, i32 0, i32 18, !dbg !5306
  %17 = getelementptr inbounds [1 x i8], [1 x i8]* %16, i32 0, i32 0, !dbg !5307
  %18 = load i64, i64* %5, align 8, !dbg !5308
  %19 = add i64 %18, 1, !dbg !5309
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %14, i8* %17, i64 %19, i32 1, i1 false), !dbg !5307
  %20 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !5310
  %21 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %20, i32 0, i32 18, !dbg !5312
  %22 = getelementptr inbounds [1 x i8], [1 x i8]* %21, i32 0, i32 0, !dbg !5310
  %23 = call i8* @strrchr(i8* %22, i32 47) #12, !dbg !5313
  store i8* %23, i8** %6, align 8, !dbg !5314
  %24 = icmp ne i8* %23, null, !dbg !5314
  br i1 %24, label %25, label %50, !dbg !5315

; <label>:25:                                     ; preds = %2
  %26 = load i8*, i8** %6, align 8, !dbg !5316
  %27 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !5317
  %28 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %27, i32 0, i32 18, !dbg !5318
  %29 = getelementptr inbounds [1 x i8], [1 x i8]* %28, i32 0, i32 0, !dbg !5317
  %30 = icmp ne i8* %26, %29, !dbg !5319
  br i1 %30, label %37, label %31, !dbg !5320

; <label>:31:                                     ; preds = %25
  %32 = load i8*, i8** %6, align 8, !dbg !5321
  %33 = getelementptr inbounds i8, i8* %32, i64 1, !dbg !5321
  %34 = load i8, i8* %33, align 1, !dbg !5321
  %35 = sext i8 %34 to i32, !dbg !5321
  %36 = icmp ne i32 %35, 0, !dbg !5321
  br i1 %36, label %37, label %50, !dbg !5322

; <label>:37:                                     ; preds = %31, %25
  %38 = load i8*, i8** %6, align 8, !dbg !5323
  %39 = getelementptr inbounds i8, i8* %38, i32 1, !dbg !5323
  store i8* %39, i8** %6, align 8, !dbg !5323
  %40 = call i64 @strlen(i8* %39) #12, !dbg !5325
  store i64 %40, i64* %5, align 8, !dbg !5326
  %41 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !5327
  %42 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %41, i32 0, i32 18, !dbg !5328
  %43 = getelementptr inbounds [1 x i8], [1 x i8]* %42, i32 0, i32 0, !dbg !5329
  %44 = load i8*, i8** %6, align 8, !dbg !5330
  %45 = load i64, i64* %5, align 8, !dbg !5331
  %46 = add i64 %45, 1, !dbg !5332
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %43, i8* %44, i64 %46, i32 1, i1 false), !dbg !5329
  %47 = load i64, i64* %5, align 8, !dbg !5333
  %48 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !5334
  %49 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %48, i32 0, i32 12, !dbg !5335
  store i64 %47, i64* %49, align 8, !dbg !5336
  br label %50, !dbg !5337

; <label>:50:                                     ; preds = %37, %31, %2
  %51 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !5338
  %52 = getelementptr inbounds %struct.FTS, %struct.FTS* %51, i32 0, i32 4, !dbg !5339
  %53 = load i8*, i8** %52, align 8, !dbg !5339
  %54 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !5340
  %55 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %54, i32 0, i32 6, !dbg !5341
  store i8* %53, i8** %55, align 8, !dbg !5342
  %56 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !5343
  %57 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %56, i32 0, i32 5, !dbg !5344
  store i8* %53, i8** %57, align 8, !dbg !5345
  ret void, !dbg !5346
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i1 @link_count_optimize_ok(%struct._ftsent*) #3 !dbg !5347 {
  %2 = alloca i1, align 1
  %3 = alloca %struct._ftsent*, align 8
  %4 = alloca %struct.FTS*, align 8
  %5 = alloca %struct.hash_table*, align 8
  %6 = alloca %struct.LCO_ent, align 8
  %7 = alloca %struct.LCO_ent*, align 8
  %8 = alloca i8, align 1
  %9 = alloca %struct.LCO_ent*, align 8
  store %struct._ftsent* %0, %struct._ftsent** %3, align 8
  call void @llvm.dbg.declare(metadata %struct._ftsent** %3, metadata !5350, metadata !DIExpression()), !dbg !5351
  call void @llvm.dbg.declare(metadata %struct.FTS** %4, metadata !5352, metadata !DIExpression()), !dbg !5353
  %10 = load %struct._ftsent*, %struct._ftsent** %3, align 8, !dbg !5354
  %11 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %10, i32 0, i32 10, !dbg !5355
  %12 = load %struct.FTS*, %struct.FTS** %11, align 8, !dbg !5355
  store %struct.FTS* %12, %struct.FTS** %4, align 8, !dbg !5353
  call void @llvm.dbg.declare(metadata %struct.hash_table** %5, metadata !5356, metadata !DIExpression()), !dbg !5359
  %13 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !5360
  %14 = getelementptr inbounds %struct.FTS, %struct.FTS* %13, i32 0, i32 11, !dbg !5361
  %15 = load %struct.hash_table*, %struct.hash_table** %14, align 8, !dbg !5361
  store %struct.hash_table* %15, %struct.hash_table** %5, align 8, !dbg !5359
  call void @llvm.dbg.declare(metadata %struct.LCO_ent* %6, metadata !5362, metadata !DIExpression()), !dbg !5367
  call void @llvm.dbg.declare(metadata %struct.LCO_ent** %7, metadata !5368, metadata !DIExpression()), !dbg !5370
  call void @llvm.dbg.declare(metadata i8* %8, metadata !5371, metadata !DIExpression()), !dbg !5372
  call void @llvm.dbg.declare(metadata %struct.LCO_ent** %9, metadata !5373, metadata !DIExpression()), !dbg !5374
  %16 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !5375
  %17 = getelementptr inbounds %struct.FTS, %struct.FTS* %16, i32 0, i32 10, !dbg !5375
  %18 = load i32, i32* %17, align 8, !dbg !5375
  %19 = and i32 %18, 512, !dbg !5375
  %20 = icmp ne i32 %19, 0, !dbg !5375
  br i1 %20, label %22, label %21, !dbg !5377

; <label>:21:                                     ; preds = %1
  store i1 false, i1* %2, align 1, !dbg !5378
  br label %95, !dbg !5378

; <label>:22:                                     ; preds = %1
  %23 = load %struct.hash_table*, %struct.hash_table** %5, align 8, !dbg !5379
  %24 = icmp eq %struct.hash_table* %23, null, !dbg !5381
  br i1 %24, label %25, label %33, !dbg !5382

; <label>:25:                                     ; preds = %22
  %26 = call %struct.hash_table* @hash_initialize(i64 13, %struct.hash_tuning* null, i64 (i8*, i64)* @LCO_hash, i1 (i8*, i8*)* @LCO_compare, void (i8*)* @free), !dbg !5383
  %27 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !5385
  %28 = getelementptr inbounds %struct.FTS, %struct.FTS* %27, i32 0, i32 11, !dbg !5386
  store %struct.hash_table* %26, %struct.hash_table** %28, align 8, !dbg !5387
  store %struct.hash_table* %26, %struct.hash_table** %5, align 8, !dbg !5388
  %29 = load %struct.hash_table*, %struct.hash_table** %5, align 8, !dbg !5389
  %30 = icmp eq %struct.hash_table* %29, null, !dbg !5391
  br i1 %30, label %31, label %32, !dbg !5392

; <label>:31:                                     ; preds = %25
  store i1 false, i1* %2, align 1, !dbg !5393
  br label %95, !dbg !5393

; <label>:32:                                     ; preds = %25
  br label %33, !dbg !5394

; <label>:33:                                     ; preds = %32, %22
  %34 = load %struct._ftsent*, %struct._ftsent** %3, align 8, !dbg !5395
  %35 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %34, i32 0, i32 17, !dbg !5396
  %36 = getelementptr inbounds [1 x %struct.stat], [1 x %struct.stat]* %35, i32 0, i32 0, !dbg !5397
  %37 = getelementptr inbounds %struct.stat, %struct.stat* %36, i32 0, i32 0, !dbg !5397
  %38 = load i64, i64* %37, align 8, !dbg !5397
  %39 = getelementptr inbounds %struct.LCO_ent, %struct.LCO_ent* %6, i32 0, i32 0, !dbg !5398
  store i64 %38, i64* %39, align 8, !dbg !5399
  %40 = load %struct.hash_table*, %struct.hash_table** %5, align 8, !dbg !5400
  %41 = bitcast %struct.LCO_ent* %6 to i8*, !dbg !5401
  %42 = call i8* @hash_lookup(%struct.hash_table* %40, i8* %41), !dbg !5402
  %43 = bitcast i8* %42 to %struct.LCO_ent*, !dbg !5402
  store %struct.LCO_ent* %43, %struct.LCO_ent** %7, align 8, !dbg !5403
  %44 = load %struct.LCO_ent*, %struct.LCO_ent** %7, align 8, !dbg !5404
  %45 = icmp ne %struct.LCO_ent* %44, null, !dbg !5404
  br i1 %45, label %46, label %51, !dbg !5406

; <label>:46:                                     ; preds = %33
  %47 = load %struct.LCO_ent*, %struct.LCO_ent** %7, align 8, !dbg !5407
  %48 = getelementptr inbounds %struct.LCO_ent, %struct.LCO_ent* %47, i32 0, i32 1, !dbg !5408
  %49 = load i8, i8* %48, align 8, !dbg !5408
  %50 = trunc i8 %49 to i1, !dbg !5408
  store i1 %50, i1* %2, align 1, !dbg !5409
  br label %95, !dbg !5409

; <label>:51:                                     ; preds = %33
  %52 = call noalias i8* @malloc(i64 16) #8, !dbg !5410
  %53 = bitcast i8* %52 to %struct.LCO_ent*, !dbg !5410
  store %struct.LCO_ent* %53, %struct.LCO_ent** %9, align 8, !dbg !5411
  %54 = load %struct.LCO_ent*, %struct.LCO_ent** %9, align 8, !dbg !5412
  %55 = icmp eq %struct.LCO_ent* %54, null, !dbg !5414
  br i1 %55, label %56, label %57, !dbg !5415

; <label>:56:                                     ; preds = %51
  store i1 false, i1* %2, align 1, !dbg !5416
  br label %95, !dbg !5416

; <label>:57:                                     ; preds = %51
  %58 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !5417
  %59 = getelementptr inbounds %struct.FTS, %struct.FTS* %58, i32 0, i32 6, !dbg !5418
  %60 = load i32, i32* %59, align 4, !dbg !5418
  %61 = call zeroext i1 @leaf_optimization_applies(i32 %60), !dbg !5419
  %62 = zext i1 %61 to i8, !dbg !5420
  store i8 %62, i8* %8, align 1, !dbg !5420
  %63 = load i8, i8* %8, align 1, !dbg !5421
  %64 = trunc i8 %63 to i1, !dbg !5421
  %65 = load %struct.LCO_ent*, %struct.LCO_ent** %9, align 8, !dbg !5422
  %66 = getelementptr inbounds %struct.LCO_ent, %struct.LCO_ent* %65, i32 0, i32 1, !dbg !5423
  %67 = zext i1 %64 to i8, !dbg !5424
  store i8 %67, i8* %66, align 8, !dbg !5424
  %68 = load %struct._ftsent*, %struct._ftsent** %3, align 8, !dbg !5425
  %69 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %68, i32 0, i32 17, !dbg !5426
  %70 = getelementptr inbounds [1 x %struct.stat], [1 x %struct.stat]* %69, i32 0, i32 0, !dbg !5427
  %71 = getelementptr inbounds %struct.stat, %struct.stat* %70, i32 0, i32 0, !dbg !5427
  %72 = load i64, i64* %71, align 8, !dbg !5427
  %73 = load %struct.LCO_ent*, %struct.LCO_ent** %9, align 8, !dbg !5428
  %74 = getelementptr inbounds %struct.LCO_ent, %struct.LCO_ent* %73, i32 0, i32 0, !dbg !5429
  store i64 %72, i64* %74, align 8, !dbg !5430
  %75 = load %struct.hash_table*, %struct.hash_table** %5, align 8, !dbg !5431
  %76 = load %struct.LCO_ent*, %struct.LCO_ent** %9, align 8, !dbg !5432
  %77 = bitcast %struct.LCO_ent* %76 to i8*, !dbg !5432
  %78 = call i8* @hash_insert(%struct.hash_table* %75, i8* %77), !dbg !5433
  %79 = bitcast i8* %78 to %struct.LCO_ent*, !dbg !5433
  store %struct.LCO_ent* %79, %struct.LCO_ent** %7, align 8, !dbg !5434
  %80 = load %struct.LCO_ent*, %struct.LCO_ent** %7, align 8, !dbg !5435
  %81 = icmp eq %struct.LCO_ent* %80, null, !dbg !5437
  br i1 %81, label %82, label %85, !dbg !5438

; <label>:82:                                     ; preds = %57
  %83 = load %struct.LCO_ent*, %struct.LCO_ent** %9, align 8, !dbg !5439
  %84 = bitcast %struct.LCO_ent* %83 to i8*, !dbg !5439
  call void @free(i8* %84) #8, !dbg !5441
  store i1 false, i1* %2, align 1, !dbg !5442
  br label %95, !dbg !5442

; <label>:85:                                     ; preds = %57
  br label %86, !dbg !5443, !llvm.loop !5444

; <label>:86:                                     ; preds = %85
  %87 = load %struct.LCO_ent*, %struct.LCO_ent** %7, align 8, !dbg !5445
  %88 = load %struct.LCO_ent*, %struct.LCO_ent** %9, align 8, !dbg !5445
  %89 = icmp eq %struct.LCO_ent* %87, %88, !dbg !5445
  br i1 %89, label %91, label %90, !dbg !5448

; <label>:90:                                     ; preds = %86
  call void @abort() #11, !dbg !5445
  unreachable, !dbg !5445

; <label>:91:                                     ; preds = %86
  br label %92, !dbg !5448

; <label>:92:                                     ; preds = %91
  %93 = load i8, i8* %8, align 1, !dbg !5449
  %94 = trunc i8 %93 to i1, !dbg !5449
  store i1 %94, i1* %2, align 1, !dbg !5450
  br label %95, !dbg !5450

; <label>:95:                                     ; preds = %92, %82, %56, %46, %31, %21
  %96 = load i1, i1* %2, align 1, !dbg !5451
  ret i1 %96, !dbg !5451
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i1 @enter_dir(%struct.FTS*, %struct._ftsent*) #3 !dbg !5452 {
  %3 = alloca i1, align 1
  %4 = alloca %struct.FTS*, align 8
  %5 = alloca %struct._ftsent*, align 8
  %6 = alloca %struct.stat*, align 8
  %7 = alloca %struct.Active_dir*, align 8
  %8 = alloca %struct.Active_dir*, align 8
  store %struct.FTS* %0, %struct.FTS** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.FTS** %4, metadata !5455, metadata !DIExpression()), !dbg !5456
  store %struct._ftsent* %1, %struct._ftsent** %5, align 8
  call void @llvm.dbg.declare(metadata %struct._ftsent** %5, metadata !5457, metadata !DIExpression()), !dbg !5458
  %9 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !5459
  %10 = getelementptr inbounds %struct.FTS, %struct.FTS* %9, i32 0, i32 10, !dbg !5461
  %11 = load i32, i32* %10, align 8, !dbg !5461
  %12 = and i32 %11, 258, !dbg !5462
  %13 = icmp ne i32 %12, 0, !dbg !5462
  br i1 %13, label %14, label %63, !dbg !5463

; <label>:14:                                     ; preds = %2
  call void @llvm.dbg.declare(metadata %struct.stat** %6, metadata !5464, metadata !DIExpression()), !dbg !5466
  %15 = load %struct._ftsent*, %struct._ftsent** %5, align 8, !dbg !5467
  %16 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %15, i32 0, i32 17, !dbg !5468
  %17 = getelementptr inbounds [1 x %struct.stat], [1 x %struct.stat]* %16, i32 0, i32 0, !dbg !5467
  store %struct.stat* %17, %struct.stat** %6, align 8, !dbg !5466
  call void @llvm.dbg.declare(metadata %struct.Active_dir** %7, metadata !5469, metadata !DIExpression()), !dbg !5471
  %18 = call noalias i8* @malloc(i64 24) #8, !dbg !5472
  %19 = bitcast i8* %18 to %struct.Active_dir*, !dbg !5472
  store %struct.Active_dir* %19, %struct.Active_dir** %7, align 8, !dbg !5471
  call void @llvm.dbg.declare(metadata %struct.Active_dir** %8, metadata !5473, metadata !DIExpression()), !dbg !5474
  %20 = load %struct.Active_dir*, %struct.Active_dir** %7, align 8, !dbg !5475
  %21 = icmp ne %struct.Active_dir* %20, null, !dbg !5475
  br i1 %21, label %23, label %22, !dbg !5477

; <label>:22:                                     ; preds = %14
  store i1 false, i1* %3, align 1, !dbg !5478
  br label %80, !dbg !5478

; <label>:23:                                     ; preds = %14
  %24 = load %struct.stat*, %struct.stat** %6, align 8, !dbg !5479
  %25 = getelementptr inbounds %struct.stat, %struct.stat* %24, i32 0, i32 0, !dbg !5480
  %26 = load i64, i64* %25, align 8, !dbg !5480
  %27 = load %struct.Active_dir*, %struct.Active_dir** %7, align 8, !dbg !5481
  %28 = getelementptr inbounds %struct.Active_dir, %struct.Active_dir* %27, i32 0, i32 0, !dbg !5482
  store i64 %26, i64* %28, align 8, !dbg !5483
  %29 = load %struct.stat*, %struct.stat** %6, align 8, !dbg !5484
  %30 = getelementptr inbounds %struct.stat, %struct.stat* %29, i32 0, i32 1, !dbg !5485
  %31 = load i64, i64* %30, align 8, !dbg !5485
  %32 = load %struct.Active_dir*, %struct.Active_dir** %7, align 8, !dbg !5486
  %33 = getelementptr inbounds %struct.Active_dir, %struct.Active_dir* %32, i32 0, i32 1, !dbg !5487
  store i64 %31, i64* %33, align 8, !dbg !5488
  %34 = load %struct._ftsent*, %struct._ftsent** %5, align 8, !dbg !5489
  %35 = load %struct.Active_dir*, %struct.Active_dir** %7, align 8, !dbg !5490
  %36 = getelementptr inbounds %struct.Active_dir, %struct.Active_dir* %35, i32 0, i32 2, !dbg !5491
  store %struct._ftsent* %34, %struct._ftsent** %36, align 8, !dbg !5492
  %37 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !5493
  %38 = getelementptr inbounds %struct.FTS, %struct.FTS* %37, i32 0, i32 12, !dbg !5494
  %39 = bitcast %union.anon* %38 to %struct.hash_table**, !dbg !5495
  %40 = load %struct.hash_table*, %struct.hash_table** %39, align 8, !dbg !5495
  %41 = load %struct.Active_dir*, %struct.Active_dir** %7, align 8, !dbg !5496
  %42 = bitcast %struct.Active_dir* %41 to i8*, !dbg !5496
  %43 = call i8* @hash_insert(%struct.hash_table* %40, i8* %42), !dbg !5497
  %44 = bitcast i8* %43 to %struct.Active_dir*, !dbg !5497
  store %struct.Active_dir* %44, %struct.Active_dir** %8, align 8, !dbg !5498
  %45 = load %struct.Active_dir*, %struct.Active_dir** %8, align 8, !dbg !5499
  %46 = load %struct.Active_dir*, %struct.Active_dir** %7, align 8, !dbg !5501
  %47 = icmp ne %struct.Active_dir* %45, %46, !dbg !5502
  br i1 %47, label %48, label %62, !dbg !5503

; <label>:48:                                     ; preds = %23
  %49 = load %struct.Active_dir*, %struct.Active_dir** %7, align 8, !dbg !5504
  %50 = bitcast %struct.Active_dir* %49 to i8*, !dbg !5504
  call void @free(i8* %50) #8, !dbg !5506
  %51 = load %struct.Active_dir*, %struct.Active_dir** %8, align 8, !dbg !5507
  %52 = icmp ne %struct.Active_dir* %51, null, !dbg !5507
  br i1 %52, label %54, label %53, !dbg !5509

; <label>:53:                                     ; preds = %48
  store i1 false, i1* %3, align 1, !dbg !5510
  br label %80, !dbg !5510

; <label>:54:                                     ; preds = %48
  %55 = load %struct.Active_dir*, %struct.Active_dir** %8, align 8, !dbg !5511
  %56 = getelementptr inbounds %struct.Active_dir, %struct.Active_dir* %55, i32 0, i32 2, !dbg !5512
  %57 = load %struct._ftsent*, %struct._ftsent** %56, align 8, !dbg !5512
  %58 = load %struct._ftsent*, %struct._ftsent** %5, align 8, !dbg !5513
  %59 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %58, i32 0, i32 0, !dbg !5514
  store %struct._ftsent* %57, %struct._ftsent** %59, align 8, !dbg !5515
  %60 = load %struct._ftsent*, %struct._ftsent** %5, align 8, !dbg !5516
  %61 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %60, i32 0, i32 14, !dbg !5517
  store i16 2, i16* %61, align 8, !dbg !5518
  br label %62, !dbg !5519

; <label>:62:                                     ; preds = %54, %23
  br label %79, !dbg !5520

; <label>:63:                                     ; preds = %2
  %64 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !5521
  %65 = getelementptr inbounds %struct.FTS, %struct.FTS* %64, i32 0, i32 12, !dbg !5524
  %66 = bitcast %union.anon* %65 to %struct.cycle_check_state**, !dbg !5525
  %67 = load %struct.cycle_check_state*, %struct.cycle_check_state** %66, align 8, !dbg !5525
  %68 = load %struct._ftsent*, %struct._ftsent** %5, align 8, !dbg !5526
  %69 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %68, i32 0, i32 17, !dbg !5527
  %70 = getelementptr inbounds [1 x %struct.stat], [1 x %struct.stat]* %69, i32 0, i32 0, !dbg !5526
  %71 = call zeroext i1 @cycle_check(%struct.cycle_check_state* %67, %struct.stat* %70), !dbg !5528
  br i1 %71, label %72, label %78, !dbg !5529

; <label>:72:                                     ; preds = %63
  %73 = load %struct._ftsent*, %struct._ftsent** %5, align 8, !dbg !5530
  %74 = load %struct._ftsent*, %struct._ftsent** %5, align 8, !dbg !5532
  %75 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %74, i32 0, i32 0, !dbg !5533
  store %struct._ftsent* %73, %struct._ftsent** %75, align 8, !dbg !5534
  %76 = load %struct._ftsent*, %struct._ftsent** %5, align 8, !dbg !5535
  %77 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %76, i32 0, i32 14, !dbg !5536
  store i16 2, i16* %77, align 8, !dbg !5537
  br label %78, !dbg !5538

; <label>:78:                                     ; preds = %72, %63
  br label %79

; <label>:79:                                     ; preds = %78, %62
  store i1 true, i1* %3, align 1, !dbg !5539
  br label %80, !dbg !5539

; <label>:80:                                     ; preds = %79, %53, %22
  %81 = load i1, i1* %3, align 1, !dbg !5540
  ret i1 %81, !dbg !5540
}

; Function Attrs: noinline nounwind uwtable
define internal i64 @LCO_hash(i8*, i64) #3 !dbg !5541 {
  %3 = alloca i8*, align 8
  %4 = alloca i64, align 8
  %5 = alloca %struct.LCO_ent*, align 8
  store i8* %0, i8** %3, align 8
  call void @llvm.dbg.declare(metadata i8** %3, metadata !5542, metadata !DIExpression()), !dbg !5543
  store i64 %1, i64* %4, align 8
  call void @llvm.dbg.declare(metadata i64* %4, metadata !5544, metadata !DIExpression()), !dbg !5545
  call void @llvm.dbg.declare(metadata %struct.LCO_ent** %5, metadata !5546, metadata !DIExpression()), !dbg !5549
  %6 = load i8*, i8** %3, align 8, !dbg !5550
  %7 = bitcast i8* %6 to %struct.LCO_ent*, !dbg !5550
  store %struct.LCO_ent* %7, %struct.LCO_ent** %5, align 8, !dbg !5549
  %8 = load %struct.LCO_ent*, %struct.LCO_ent** %5, align 8, !dbg !5551
  %9 = getelementptr inbounds %struct.LCO_ent, %struct.LCO_ent* %8, i32 0, i32 0, !dbg !5552
  %10 = load i64, i64* %9, align 8, !dbg !5552
  %11 = load i64, i64* %4, align 8, !dbg !5553
  %12 = urem i64 %10, %11, !dbg !5554
  ret i64 %12, !dbg !5555
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i1 @LCO_compare(i8*, i8*) #3 !dbg !5556 {
  %3 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca %struct.LCO_ent*, align 8
  %6 = alloca %struct.LCO_ent*, align 8
  store i8* %0, i8** %3, align 8
  call void @llvm.dbg.declare(metadata i8** %3, metadata !5557, metadata !DIExpression()), !dbg !5558
  store i8* %1, i8** %4, align 8
  call void @llvm.dbg.declare(metadata i8** %4, metadata !5559, metadata !DIExpression()), !dbg !5560
  call void @llvm.dbg.declare(metadata %struct.LCO_ent** %5, metadata !5561, metadata !DIExpression()), !dbg !5562
  %7 = load i8*, i8** %3, align 8, !dbg !5563
  %8 = bitcast i8* %7 to %struct.LCO_ent*, !dbg !5563
  store %struct.LCO_ent* %8, %struct.LCO_ent** %5, align 8, !dbg !5562
  call void @llvm.dbg.declare(metadata %struct.LCO_ent** %6, metadata !5564, metadata !DIExpression()), !dbg !5565
  %9 = load i8*, i8** %4, align 8, !dbg !5566
  %10 = bitcast i8* %9 to %struct.LCO_ent*, !dbg !5566
  store %struct.LCO_ent* %10, %struct.LCO_ent** %6, align 8, !dbg !5565
  %11 = load %struct.LCO_ent*, %struct.LCO_ent** %5, align 8, !dbg !5567
  %12 = getelementptr inbounds %struct.LCO_ent, %struct.LCO_ent* %11, i32 0, i32 0, !dbg !5568
  %13 = load i64, i64* %12, align 8, !dbg !5568
  %14 = load %struct.LCO_ent*, %struct.LCO_ent** %6, align 8, !dbg !5569
  %15 = getelementptr inbounds %struct.LCO_ent, %struct.LCO_ent* %14, i32 0, i32 0, !dbg !5570
  %16 = load i64, i64* %15, align 8, !dbg !5570
  %17 = icmp eq i64 %13, %16, !dbg !5571
  ret i1 %17, !dbg !5572
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i1 @leaf_optimization_applies(i32) #3 !dbg !5573 {
  %2 = alloca i1, align 1
  %3 = alloca i32, align 4
  %4 = alloca %struct.statfs, align 8
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !5574, metadata !DIExpression()), !dbg !5575
  call void @llvm.dbg.declare(metadata %struct.statfs* %4, metadata !5576, metadata !DIExpression()), !dbg !5603
  %5 = load i32, i32* %3, align 4, !dbg !5604
  %6 = call i32 @fstatfs(i32 %5, %struct.statfs* %4) #8, !dbg !5606
  %7 = icmp ne i32 %6, 0, !dbg !5607
  br i1 %7, label %8, label %9, !dbg !5608

; <label>:8:                                      ; preds = %1
  store i1 false, i1* %2, align 1, !dbg !5609
  br label %15, !dbg !5609

; <label>:9:                                      ; preds = %1
  %10 = getelementptr inbounds %struct.statfs, %struct.statfs* %4, i32 0, i32 0, !dbg !5610
  %11 = load i64, i64* %10, align 8, !dbg !5610
  switch i64 %11, label %14 [
    i64 1382369651, label %12
    i64 40864, label %13
  ], !dbg !5611

; <label>:12:                                     ; preds = %9
  store i1 true, i1* %2, align 1, !dbg !5612
  br label %15, !dbg !5612

; <label>:13:                                     ; preds = %9
  br label %14, !dbg !5612

; <label>:14:                                     ; preds = %9, %13
  store i1 false, i1* %2, align 1, !dbg !5614
  br label %15, !dbg !5614

; <label>:15:                                     ; preds = %14, %12, %8
  %16 = load i1, i1* %2, align 1, !dbg !5615
  ret i1 %16, !dbg !5615
}

; Function Attrs: nounwind
declare i32 @fstatfs(i32, %struct.statfs*) #5

; Function Attrs: noinline nounwind uwtable
define internal %struct.__dirstream* @opendirat(i32, i8*) #3 !dbg !5616 {
  %3 = alloca %struct.__dirstream*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i8*, align 8
  %6 = alloca i32, align 4
  %7 = alloca %struct.__dirstream*, align 8
  %8 = alloca i32, align 4
  store i32 %0, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !5619, metadata !DIExpression()), !dbg !5620
  store i8* %1, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !5621, metadata !DIExpression()), !dbg !5622
  call void @llvm.dbg.declare(metadata i32* %6, metadata !5623, metadata !DIExpression()), !dbg !5624
  %9 = load i32, i32* %4, align 4, !dbg !5625
  %10 = load i8*, i8** %5, align 8, !dbg !5626
  %11 = call i32 (i32, i8*, i32, ...) @openat_safer(i32 %9, i8* %10, i32 67840), !dbg !5627
  store i32 %11, i32* %6, align 4, !dbg !5624
  call void @llvm.dbg.declare(metadata %struct.__dirstream** %7, metadata !5628, metadata !DIExpression()), !dbg !5629
  %12 = load i32, i32* %6, align 4, !dbg !5630
  %13 = icmp slt i32 %12, 0, !dbg !5632
  br i1 %13, label %14, label %15, !dbg !5633

; <label>:14:                                     ; preds = %2
  store %struct.__dirstream* null, %struct.__dirstream** %3, align 8, !dbg !5634
  br label %31, !dbg !5634

; <label>:15:                                     ; preds = %2
  %16 = load i32, i32* %6, align 4, !dbg !5635
  %17 = call i32 @set_cloexec_flag(i32 %16, i1 zeroext true), !dbg !5636
  %18 = load i32, i32* %6, align 4, !dbg !5637
  %19 = call %struct.__dirstream* @fdopendir(i32 %18), !dbg !5638
  store %struct.__dirstream* %19, %struct.__dirstream** %7, align 8, !dbg !5639
  %20 = load %struct.__dirstream*, %struct.__dirstream** %7, align 8, !dbg !5640
  %21 = icmp eq %struct.__dirstream* %20, null, !dbg !5642
  br i1 %21, label %22, label %29, !dbg !5643

; <label>:22:                                     ; preds = %15
  call void @llvm.dbg.declare(metadata i32* %8, metadata !5644, metadata !DIExpression()), !dbg !5646
  %23 = call i32* @__errno_location() #14, !dbg !5647
  %24 = load i32, i32* %23, align 4, !dbg !5647
  store i32 %24, i32* %8, align 4, !dbg !5646
  %25 = load i32, i32* %6, align 4, !dbg !5648
  %26 = call i32 @close(i32 %25), !dbg !5649
  %27 = load i32, i32* %8, align 4, !dbg !5650
  %28 = call i32* @__errno_location() #14, !dbg !5651
  store i32 %27, i32* %28, align 4, !dbg !5652
  br label %29, !dbg !5653

; <label>:29:                                     ; preds = %22, %15
  %30 = load %struct.__dirstream*, %struct.__dirstream** %7, align 8, !dbg !5654
  store %struct.__dirstream* %30, %struct.__dirstream** %3, align 8, !dbg !5655
  br label %31, !dbg !5655

; <label>:31:                                     ; preds = %29, %14
  %32 = load %struct.__dirstream*, %struct.__dirstream** %3, align 8, !dbg !5656
  ret %struct.__dirstream* %32, !dbg !5656
}

; Function Attrs: nounwind
declare i32 @dirfd(%struct.__dirstream*) #5

; Function Attrs: noinline nounwind uwtable
define internal void @set_stat_type(%struct.stat*, i32) #3 !dbg !5657 {
  %3 = alloca %struct.stat*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  store %struct.stat* %0, %struct.stat** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.stat** %3, metadata !5660, metadata !DIExpression()), !dbg !5661
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !5662, metadata !DIExpression()), !dbg !5663
  call void @llvm.dbg.declare(metadata i32* %5, metadata !5664, metadata !DIExpression()), !dbg !5666
  %6 = load i32, i32* %4, align 4, !dbg !5667
  switch i32 %6, label %14 [
    i32 6, label %7
    i32 2, label %8
    i32 4, label %9
    i32 1, label %10
    i32 10, label %11
    i32 8, label %12
    i32 12, label %13
  ], !dbg !5668

; <label>:7:                                      ; preds = %2
  store i32 24576, i32* %5, align 4, !dbg !5669
  br label %15, !dbg !5671

; <label>:8:                                      ; preds = %2
  store i32 8192, i32* %5, align 4, !dbg !5672
  br label %15, !dbg !5673

; <label>:9:                                      ; preds = %2
  store i32 16384, i32* %5, align 4, !dbg !5674
  br label %15, !dbg !5675

; <label>:10:                                     ; preds = %2
  store i32 4096, i32* %5, align 4, !dbg !5676
  br label %15, !dbg !5677

; <label>:11:                                     ; preds = %2
  store i32 40960, i32* %5, align 4, !dbg !5678
  br label %15, !dbg !5679

; <label>:12:                                     ; preds = %2
  store i32 32768, i32* %5, align 4, !dbg !5680
  br label %15, !dbg !5681

; <label>:13:                                     ; preds = %2
  store i32 49152, i32* %5, align 4, !dbg !5682
  br label %15, !dbg !5683

; <label>:14:                                     ; preds = %2
  store i32 0, i32* %5, align 4, !dbg !5684
  br label %15, !dbg !5685

; <label>:15:                                     ; preds = %14, %13, %12, %11, %10, %9, %8, %7
  %16 = load i32, i32* %5, align 4, !dbg !5686
  %17 = load %struct.stat*, %struct.stat** %3, align 8, !dbg !5687
  %18 = getelementptr inbounds %struct.stat, %struct.stat* %17, i32 0, i32 3, !dbg !5688
  store i32 %16, i32* %18, align 8, !dbg !5689
  ret void, !dbg !5690
}

; Function Attrs: noinline nounwind uwtable
define internal void @fts_padjust(%struct.FTS*, %struct._ftsent*) #3 !dbg !5691 {
  %3 = alloca %struct.FTS*, align 8
  %4 = alloca %struct._ftsent*, align 8
  %5 = alloca %struct._ftsent*, align 8
  %6 = alloca i8*, align 8
  store %struct.FTS* %0, %struct.FTS** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.FTS** %3, metadata !5692, metadata !DIExpression()), !dbg !5693
  store %struct._ftsent* %1, %struct._ftsent** %4, align 8
  call void @llvm.dbg.declare(metadata %struct._ftsent** %4, metadata !5694, metadata !DIExpression()), !dbg !5695
  call void @llvm.dbg.declare(metadata %struct._ftsent** %5, metadata !5696, metadata !DIExpression()), !dbg !5697
  call void @llvm.dbg.declare(metadata i8** %6, metadata !5698, metadata !DIExpression()), !dbg !5699
  %7 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !5700
  %8 = getelementptr inbounds %struct.FTS, %struct.FTS* %7, i32 0, i32 4, !dbg !5701
  %9 = load i8*, i8** %8, align 8, !dbg !5701
  store i8* %9, i8** %6, align 8, !dbg !5699
  %10 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !5702
  %11 = getelementptr inbounds %struct.FTS, %struct.FTS* %10, i32 0, i32 1, !dbg !5704
  %12 = load %struct._ftsent*, %struct._ftsent** %11, align 8, !dbg !5704
  store %struct._ftsent* %12, %struct._ftsent** %5, align 8, !dbg !5705
  br label %13, !dbg !5706

; <label>:13:                                     ; preds = %44, %2
  %14 = load %struct._ftsent*, %struct._ftsent** %5, align 8, !dbg !5707
  %15 = icmp ne %struct._ftsent* %14, null, !dbg !5709
  br i1 %15, label %16, label %48, !dbg !5709

; <label>:16:                                     ; preds = %13
  br label %17, !dbg !5710, !llvm.loop !5711

; <label>:17:                                     ; preds = %16
  %18 = load %struct._ftsent*, %struct._ftsent** %5, align 8, !dbg !5712
  %19 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %18, i32 0, i32 5, !dbg !5712
  %20 = load i8*, i8** %19, align 8, !dbg !5712
  %21 = load %struct._ftsent*, %struct._ftsent** %5, align 8, !dbg !5712
  %22 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %21, i32 0, i32 18, !dbg !5712
  %23 = getelementptr inbounds [1 x i8], [1 x i8]* %22, i32 0, i32 0, !dbg !5712
  %24 = icmp ne i8* %20, %23, !dbg !5712
  br i1 %24, label %25, label %39, !dbg !5715

; <label>:25:                                     ; preds = %17
  %26 = load i8*, i8** %6, align 8, !dbg !5716
  %27 = load %struct._ftsent*, %struct._ftsent** %5, align 8, !dbg !5716
  %28 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %27, i32 0, i32 5, !dbg !5716
  %29 = load i8*, i8** %28, align 8, !dbg !5716
  %30 = load %struct._ftsent*, %struct._ftsent** %5, align 8, !dbg !5716
  %31 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %30, i32 0, i32 6, !dbg !5716
  %32 = load i8*, i8** %31, align 8, !dbg !5716
  %33 = ptrtoint i8* %29 to i64, !dbg !5716
  %34 = ptrtoint i8* %32 to i64, !dbg !5716
  %35 = sub i64 %33, %34, !dbg !5716
  %36 = getelementptr inbounds i8, i8* %26, i64 %35, !dbg !5716
  %37 = load %struct._ftsent*, %struct._ftsent** %5, align 8, !dbg !5716
  %38 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %37, i32 0, i32 5, !dbg !5716
  store i8* %36, i8** %38, align 8, !dbg !5716
  br label %39, !dbg !5716

; <label>:39:                                     ; preds = %25, %17
  %40 = load i8*, i8** %6, align 8, !dbg !5715
  %41 = load %struct._ftsent*, %struct._ftsent** %5, align 8, !dbg !5715
  %42 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %41, i32 0, i32 6, !dbg !5715
  store i8* %40, i8** %42, align 8, !dbg !5715
  br label %43, !dbg !5715

; <label>:43:                                     ; preds = %39
  br label %44, !dbg !5715

; <label>:44:                                     ; preds = %43
  %45 = load %struct._ftsent*, %struct._ftsent** %5, align 8, !dbg !5718
  %46 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %45, i32 0, i32 2, !dbg !5719
  %47 = load %struct._ftsent*, %struct._ftsent** %46, align 8, !dbg !5719
  store %struct._ftsent* %47, %struct._ftsent** %5, align 8, !dbg !5720
  br label %13, !dbg !5721, !llvm.loop !5722

; <label>:48:                                     ; preds = %13
  %49 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !5724
  store %struct._ftsent* %49, %struct._ftsent** %5, align 8, !dbg !5726
  br label %50, !dbg !5727

; <label>:50:                                     ; preds = %95, %48
  %51 = load %struct._ftsent*, %struct._ftsent** %5, align 8, !dbg !5728
  %52 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %51, i32 0, i32 11, !dbg !5730
  %53 = load i64, i64* %52, align 8, !dbg !5730
  %54 = icmp sge i64 %53, 0, !dbg !5731
  br i1 %54, label %55, label %97, !dbg !5732

; <label>:55:                                     ; preds = %50
  br label %56, !dbg !5733, !llvm.loop !5735

; <label>:56:                                     ; preds = %55
  %57 = load %struct._ftsent*, %struct._ftsent** %5, align 8, !dbg !5736
  %58 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %57, i32 0, i32 5, !dbg !5736
  %59 = load i8*, i8** %58, align 8, !dbg !5736
  %60 = load %struct._ftsent*, %struct._ftsent** %5, align 8, !dbg !5736
  %61 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %60, i32 0, i32 18, !dbg !5736
  %62 = getelementptr inbounds [1 x i8], [1 x i8]* %61, i32 0, i32 0, !dbg !5736
  %63 = icmp ne i8* %59, %62, !dbg !5736
  br i1 %63, label %64, label %78, !dbg !5739

; <label>:64:                                     ; preds = %56
  %65 = load i8*, i8** %6, align 8, !dbg !5740
  %66 = load %struct._ftsent*, %struct._ftsent** %5, align 8, !dbg !5740
  %67 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %66, i32 0, i32 5, !dbg !5740
  %68 = load i8*, i8** %67, align 8, !dbg !5740
  %69 = load %struct._ftsent*, %struct._ftsent** %5, align 8, !dbg !5740
  %70 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %69, i32 0, i32 6, !dbg !5740
  %71 = load i8*, i8** %70, align 8, !dbg !5740
  %72 = ptrtoint i8* %68 to i64, !dbg !5740
  %73 = ptrtoint i8* %71 to i64, !dbg !5740
  %74 = sub i64 %72, %73, !dbg !5740
  %75 = getelementptr inbounds i8, i8* %65, i64 %74, !dbg !5740
  %76 = load %struct._ftsent*, %struct._ftsent** %5, align 8, !dbg !5740
  %77 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %76, i32 0, i32 5, !dbg !5740
  store i8* %75, i8** %77, align 8, !dbg !5740
  br label %78, !dbg !5740

; <label>:78:                                     ; preds = %64, %56
  %79 = load i8*, i8** %6, align 8, !dbg !5739
  %80 = load %struct._ftsent*, %struct._ftsent** %5, align 8, !dbg !5739
  %81 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %80, i32 0, i32 6, !dbg !5739
  store i8* %79, i8** %81, align 8, !dbg !5739
  br label %82, !dbg !5739

; <label>:82:                                     ; preds = %78
  %83 = load %struct._ftsent*, %struct._ftsent** %5, align 8, !dbg !5742
  %84 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %83, i32 0, i32 2, !dbg !5743
  %85 = load %struct._ftsent*, %struct._ftsent** %84, align 8, !dbg !5743
  %86 = icmp ne %struct._ftsent* %85, null, !dbg !5742
  br i1 %86, label %87, label %91, !dbg !5742

; <label>:87:                                     ; preds = %82
  %88 = load %struct._ftsent*, %struct._ftsent** %5, align 8, !dbg !5744
  %89 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %88, i32 0, i32 2, !dbg !5745
  %90 = load %struct._ftsent*, %struct._ftsent** %89, align 8, !dbg !5745
  br label %95, !dbg !5742

; <label>:91:                                     ; preds = %82
  %92 = load %struct._ftsent*, %struct._ftsent** %5, align 8, !dbg !5746
  %93 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %92, i32 0, i32 1, !dbg !5747
  %94 = load %struct._ftsent*, %struct._ftsent** %93, align 8, !dbg !5747
  br label %95, !dbg !5742

; <label>:95:                                     ; preds = %91, %87
  %96 = phi %struct._ftsent* [ %90, %87 ], [ %94, %91 ], !dbg !5742
  store %struct._ftsent* %96, %struct._ftsent** %5, align 8, !dbg !5748
  br label %50, !dbg !5749, !llvm.loop !5750

; <label>:97:                                     ; preds = %50
  ret void, !dbg !5752
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i1 @dirent_inode_sort_may_be_useful(i32) #3 !dbg !5753 {
  %2 = alloca i1, align 1
  %3 = alloca i32, align 4
  %4 = alloca %struct.statfs, align 8
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !5754, metadata !DIExpression()), !dbg !5755
  call void @llvm.dbg.declare(metadata %struct.statfs* %4, metadata !5756, metadata !DIExpression()), !dbg !5757
  %5 = load i32, i32* %3, align 4, !dbg !5758
  %6 = call i32 @fstatfs(i32 %5, %struct.statfs* %4) #8, !dbg !5760
  %7 = icmp ne i32 %6, 0, !dbg !5761
  br i1 %7, label %8, label %9, !dbg !5762

; <label>:8:                                      ; preds = %1
  store i1 true, i1* %2, align 1, !dbg !5763
  br label %14, !dbg !5763

; <label>:9:                                      ; preds = %1
  %10 = getelementptr inbounds %struct.statfs, %struct.statfs* %4, i32 0, i32 0, !dbg !5764
  %11 = load i64, i64* %10, align 8, !dbg !5764
  switch i64 %11, label %13 [
    i64 16914836, label %12
    i64 26985, label %12
  ], !dbg !5765

; <label>:12:                                     ; preds = %9, %9
  store i1 false, i1* %2, align 1, !dbg !5766
  br label %14, !dbg !5766

; <label>:13:                                     ; preds = %9
  store i1 true, i1* %2, align 1, !dbg !5768
  br label %14, !dbg !5768

; <label>:14:                                     ; preds = %13, %12, %8
  %15 = load i1, i1* %2, align 1, !dbg !5769
  ret i1 %15, !dbg !5769
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @fts_compare_ino(%struct._ftsent**, %struct._ftsent**) #3 !dbg !5770 {
  %3 = alloca %struct._ftsent**, align 8
  %4 = alloca %struct._ftsent**, align 8
  store %struct._ftsent** %0, %struct._ftsent*** %3, align 8
  call void @llvm.dbg.declare(metadata %struct._ftsent*** %3, metadata !5771, metadata !DIExpression()), !dbg !5772
  store %struct._ftsent** %1, %struct._ftsent*** %4, align 8
  call void @llvm.dbg.declare(metadata %struct._ftsent*** %4, metadata !5773, metadata !DIExpression()), !dbg !5774
  %5 = load %struct._ftsent**, %struct._ftsent*** %3, align 8, !dbg !5775
  %6 = getelementptr inbounds %struct._ftsent*, %struct._ftsent** %5, i64 0, !dbg !5775
  %7 = load %struct._ftsent*, %struct._ftsent** %6, align 8, !dbg !5775
  %8 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %7, i32 0, i32 17, !dbg !5776
  %9 = getelementptr inbounds [1 x %struct.stat], [1 x %struct.stat]* %8, i32 0, i32 0, !dbg !5777
  %10 = getelementptr inbounds %struct.stat, %struct.stat* %9, i32 0, i32 1, !dbg !5777
  %11 = load i64, i64* %10, align 8, !dbg !5777
  %12 = load %struct._ftsent**, %struct._ftsent*** %4, align 8, !dbg !5778
  %13 = getelementptr inbounds %struct._ftsent*, %struct._ftsent** %12, i64 0, !dbg !5778
  %14 = load %struct._ftsent*, %struct._ftsent** %13, align 8, !dbg !5778
  %15 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %14, i32 0, i32 17, !dbg !5779
  %16 = getelementptr inbounds [1 x %struct.stat], [1 x %struct.stat]* %15, i32 0, i32 0, !dbg !5780
  %17 = getelementptr inbounds %struct.stat, %struct.stat* %16, i32 0, i32 1, !dbg !5780
  %18 = load i64, i64* %17, align 8, !dbg !5780
  %19 = icmp ult i64 %11, %18, !dbg !5781
  br i1 %19, label %20, label %21, !dbg !5775

; <label>:20:                                     ; preds = %2
  br label %39, !dbg !5775

; <label>:21:                                     ; preds = %2
  %22 = load %struct._ftsent**, %struct._ftsent*** %4, align 8, !dbg !5782
  %23 = getelementptr inbounds %struct._ftsent*, %struct._ftsent** %22, i64 0, !dbg !5782
  %24 = load %struct._ftsent*, %struct._ftsent** %23, align 8, !dbg !5782
  %25 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %24, i32 0, i32 17, !dbg !5783
  %26 = getelementptr inbounds [1 x %struct.stat], [1 x %struct.stat]* %25, i32 0, i32 0, !dbg !5784
  %27 = getelementptr inbounds %struct.stat, %struct.stat* %26, i32 0, i32 1, !dbg !5784
  %28 = load i64, i64* %27, align 8, !dbg !5784
  %29 = load %struct._ftsent**, %struct._ftsent*** %3, align 8, !dbg !5785
  %30 = getelementptr inbounds %struct._ftsent*, %struct._ftsent** %29, i64 0, !dbg !5785
  %31 = load %struct._ftsent*, %struct._ftsent** %30, align 8, !dbg !5785
  %32 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %31, i32 0, i32 17, !dbg !5786
  %33 = getelementptr inbounds [1 x %struct.stat], [1 x %struct.stat]* %32, i32 0, i32 0, !dbg !5787
  %34 = getelementptr inbounds %struct.stat, %struct.stat* %33, i32 0, i32 1, !dbg !5787
  %35 = load i64, i64* %34, align 8, !dbg !5787
  %36 = icmp ult i64 %28, %35, !dbg !5788
  %37 = zext i1 %36 to i64, !dbg !5782
  %38 = select i1 %36, i32 1, i32 0, !dbg !5782
  br label %39, !dbg !5775

; <label>:39:                                     ; preds = %21, %20
  %40 = phi i32 [ -1, %20 ], [ %38, %21 ], !dbg !5775
  ret i32 %40, !dbg !5789
}

; Function Attrs: nounwind
declare i32 @fstat(i32, %struct.stat*) #5

; Function Attrs: noinline nounwind uwtable
define i32 @fts_set(%struct.FTS*, %struct._ftsent*, i32) #3 !dbg !5790 {
  %4 = alloca i32, align 4
  %5 = alloca %struct.FTS*, align 8
  %6 = alloca %struct._ftsent*, align 8
  %7 = alloca i32, align 4
  store %struct.FTS* %0, %struct.FTS** %5, align 8
  call void @llvm.dbg.declare(metadata %struct.FTS** %5, metadata !5793, metadata !DIExpression()), !dbg !5794
  store %struct._ftsent* %1, %struct._ftsent** %6, align 8
  call void @llvm.dbg.declare(metadata %struct._ftsent** %6, metadata !5795, metadata !DIExpression()), !dbg !5796
  store i32 %2, i32* %7, align 4
  call void @llvm.dbg.declare(metadata i32* %7, metadata !5797, metadata !DIExpression()), !dbg !5798
  %8 = load i32, i32* %7, align 4, !dbg !5799
  %9 = icmp ne i32 %8, 0, !dbg !5801
  br i1 %9, label %10, label %24, !dbg !5802

; <label>:10:                                     ; preds = %3
  %11 = load i32, i32* %7, align 4, !dbg !5803
  %12 = icmp ne i32 %11, 1, !dbg !5804
  br i1 %12, label %13, label %24, !dbg !5805

; <label>:13:                                     ; preds = %10
  %14 = load i32, i32* %7, align 4, !dbg !5806
  %15 = icmp ne i32 %14, 2, !dbg !5807
  br i1 %15, label %16, label %24, !dbg !5808

; <label>:16:                                     ; preds = %13
  %17 = load i32, i32* %7, align 4, !dbg !5809
  %18 = icmp ne i32 %17, 3, !dbg !5810
  br i1 %18, label %19, label %24, !dbg !5811

; <label>:19:                                     ; preds = %16
  %20 = load i32, i32* %7, align 4, !dbg !5812
  %21 = icmp ne i32 %20, 4, !dbg !5813
  br i1 %21, label %22, label %24, !dbg !5814

; <label>:22:                                     ; preds = %19
  %23 = call i32* @__errno_location() #14, !dbg !5815
  store i32 22, i32* %23, align 4, !dbg !5815
  store i32 1, i32* %4, align 4, !dbg !5817
  br label %29, !dbg !5817

; <label>:24:                                     ; preds = %19, %16, %13, %10, %3
  %25 = load i32, i32* %7, align 4, !dbg !5818
  %26 = trunc i32 %25 to i16, !dbg !5818
  %27 = load %struct._ftsent*, %struct._ftsent** %6, align 8, !dbg !5819
  %28 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %27, i32 0, i32 16, !dbg !5820
  store i16 %26, i16* %28, align 4, !dbg !5821
  store i32 0, i32* %4, align 4, !dbg !5822
  br label %29, !dbg !5822

; <label>:29:                                     ; preds = %24, %22
  %30 = load i32, i32* %4, align 4, !dbg !5823
  ret i32 %30, !dbg !5823
}

; Function Attrs: noinline nounwind uwtable
define %struct._ftsent* @fts_children(%struct.FTS*, i32) #3 !dbg !5824 {
  %3 = alloca %struct._ftsent*, align 8
  %4 = alloca %struct.FTS*, align 8
  %5 = alloca i32, align 4
  %6 = alloca %struct._ftsent*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  store %struct.FTS* %0, %struct.FTS** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.FTS** %4, metadata !5825, metadata !DIExpression()), !dbg !5826
  store i32 %1, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !5827, metadata !DIExpression()), !dbg !5828
  call void @llvm.dbg.declare(metadata %struct._ftsent** %6, metadata !5829, metadata !DIExpression()), !dbg !5830
  call void @llvm.dbg.declare(metadata i32* %7, metadata !5831, metadata !DIExpression()), !dbg !5832
  %9 = load i32, i32* %5, align 4, !dbg !5833
  %10 = icmp ne i32 %9, 0, !dbg !5835
  br i1 %10, label %11, label %16, !dbg !5836

; <label>:11:                                     ; preds = %2
  %12 = load i32, i32* %5, align 4, !dbg !5837
  %13 = icmp ne i32 %12, 4096, !dbg !5838
  br i1 %13, label %14, label %16, !dbg !5839

; <label>:14:                                     ; preds = %11
  %15 = call i32* @__errno_location() #14, !dbg !5840
  store i32 22, i32* %15, align 4, !dbg !5840
  store %struct._ftsent* null, %struct._ftsent** %3, align 8, !dbg !5842
  br label %126, !dbg !5842

; <label>:16:                                     ; preds = %11, %2
  %17 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !5843
  %18 = getelementptr inbounds %struct.FTS, %struct.FTS* %17, i32 0, i32 0, !dbg !5844
  %19 = load %struct._ftsent*, %struct._ftsent** %18, align 8, !dbg !5844
  store %struct._ftsent* %19, %struct._ftsent** %6, align 8, !dbg !5845
  %20 = call i32* @__errno_location() #14, !dbg !5846
  store i32 0, i32* %20, align 4, !dbg !5846
  %21 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !5847
  %22 = getelementptr inbounds %struct.FTS, %struct.FTS* %21, i32 0, i32 10, !dbg !5847
  %23 = load i32, i32* %22, align 8, !dbg !5847
  %24 = and i32 %23, 8192, !dbg !5847
  %25 = icmp ne i32 %24, 0, !dbg !5847
  br i1 %25, label %26, label %27, !dbg !5849

; <label>:26:                                     ; preds = %16
  store %struct._ftsent* null, %struct._ftsent** %3, align 8, !dbg !5850
  br label %126, !dbg !5850

; <label>:27:                                     ; preds = %16
  %28 = load %struct._ftsent*, %struct._ftsent** %6, align 8, !dbg !5851
  %29 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %28, i32 0, i32 14, !dbg !5853
  %30 = load i16, i16* %29, align 8, !dbg !5853
  %31 = zext i16 %30 to i32, !dbg !5851
  %32 = icmp eq i32 %31, 9, !dbg !5854
  br i1 %32, label %33, label %37, !dbg !5855

; <label>:33:                                     ; preds = %27
  %34 = load %struct._ftsent*, %struct._ftsent** %6, align 8, !dbg !5856
  %35 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %34, i32 0, i32 2, !dbg !5857
  %36 = load %struct._ftsent*, %struct._ftsent** %35, align 8, !dbg !5857
  store %struct._ftsent* %36, %struct._ftsent** %3, align 8, !dbg !5858
  br label %126, !dbg !5858

; <label>:37:                                     ; preds = %27
  %38 = load %struct._ftsent*, %struct._ftsent** %6, align 8, !dbg !5859
  %39 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %38, i32 0, i32 14, !dbg !5861
  %40 = load i16, i16* %39, align 8, !dbg !5861
  %41 = zext i16 %40 to i32, !dbg !5859
  %42 = icmp ne i32 %41, 1, !dbg !5862
  br i1 %42, label %43, label %44, !dbg !5863

; <label>:43:                                     ; preds = %37
  store %struct._ftsent* null, %struct._ftsent** %3, align 8, !dbg !5864
  br label %126, !dbg !5864

; <label>:44:                                     ; preds = %37
  %45 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !5865
  %46 = getelementptr inbounds %struct.FTS, %struct.FTS* %45, i32 0, i32 1, !dbg !5867
  %47 = load %struct._ftsent*, %struct._ftsent** %46, align 8, !dbg !5867
  %48 = icmp ne %struct._ftsent* %47, null, !dbg !5868
  br i1 %48, label %49, label %53, !dbg !5869

; <label>:49:                                     ; preds = %44
  %50 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !5870
  %51 = getelementptr inbounds %struct.FTS, %struct.FTS* %50, i32 0, i32 1, !dbg !5871
  %52 = load %struct._ftsent*, %struct._ftsent** %51, align 8, !dbg !5871
  call void @fts_lfree(%struct._ftsent* %52), !dbg !5872
  br label %53, !dbg !5872

; <label>:53:                                     ; preds = %49, %44
  %54 = load i32, i32* %5, align 4, !dbg !5873
  %55 = icmp eq i32 %54, 4096, !dbg !5875
  br i1 %55, label %56, label %61, !dbg !5876

; <label>:56:                                     ; preds = %53
  %57 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !5877
  %58 = getelementptr inbounds %struct.FTS, %struct.FTS* %57, i32 0, i32 10, !dbg !5877
  %59 = load i32, i32* %58, align 8, !dbg !5877
  %60 = or i32 %59, 4096, !dbg !5877
  store i32 %60, i32* %58, align 8, !dbg !5877
  store i32 2, i32* %5, align 4, !dbg !5879
  br label %62, !dbg !5880

; <label>:61:                                     ; preds = %53
  store i32 1, i32* %5, align 4, !dbg !5881
  br label %62

; <label>:62:                                     ; preds = %61, %56
  %63 = load %struct._ftsent*, %struct._ftsent** %6, align 8, !dbg !5882
  %64 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %63, i32 0, i32 11, !dbg !5884
  %65 = load i64, i64* %64, align 8, !dbg !5884
  %66 = icmp ne i64 %65, 0, !dbg !5885
  br i1 %66, label %81, label %67, !dbg !5886

; <label>:67:                                     ; preds = %62
  %68 = load %struct._ftsent*, %struct._ftsent** %6, align 8, !dbg !5887
  %69 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %68, i32 0, i32 5, !dbg !5888
  %70 = load i8*, i8** %69, align 8, !dbg !5888
  %71 = getelementptr inbounds i8, i8* %70, i64 0, !dbg !5887
  %72 = load i8, i8* %71, align 1, !dbg !5887
  %73 = sext i8 %72 to i32, !dbg !5887
  %74 = icmp eq i32 %73, 47, !dbg !5889
  br i1 %74, label %81, label %75, !dbg !5890

; <label>:75:                                     ; preds = %67
  %76 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !5891
  %77 = getelementptr inbounds %struct.FTS, %struct.FTS* %76, i32 0, i32 10, !dbg !5891
  %78 = load i32, i32* %77, align 8, !dbg !5891
  %79 = and i32 %78, 4, !dbg !5891
  %80 = icmp ne i32 %79, 0, !dbg !5891
  br i1 %80, label %81, label %87, !dbg !5892

; <label>:81:                                     ; preds = %75, %67, %62
  %82 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !5893
  %83 = load i32, i32* %5, align 4, !dbg !5894
  %84 = call %struct._ftsent* @fts_build(%struct.FTS* %82, i32 %83), !dbg !5895
  %85 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !5896
  %86 = getelementptr inbounds %struct.FTS, %struct.FTS* %85, i32 0, i32 1, !dbg !5897
  store %struct._ftsent* %84, %struct._ftsent** %86, align 8, !dbg !5898
  store %struct._ftsent* %84, %struct._ftsent** %3, align 8, !dbg !5899
  br label %126, !dbg !5899

; <label>:87:                                     ; preds = %75
  %88 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !5900
  %89 = call i32 @diropen(%struct.FTS* %88, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.150, i32 0, i32 0)), !dbg !5902
  store i32 %89, i32* %7, align 4, !dbg !5903
  %90 = icmp slt i32 %89, 0, !dbg !5904
  br i1 %90, label %91, label %94, !dbg !5905

; <label>:91:                                     ; preds = %87
  %92 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !5906
  %93 = getelementptr inbounds %struct.FTS, %struct.FTS* %92, i32 0, i32 1, !dbg !5907
  store %struct._ftsent* null, %struct._ftsent** %93, align 8, !dbg !5908
  store %struct._ftsent* null, %struct._ftsent** %3, align 8, !dbg !5909
  br label %126, !dbg !5909

; <label>:94:                                     ; preds = %87
  %95 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !5910
  %96 = load i32, i32* %5, align 4, !dbg !5911
  %97 = call %struct._ftsent* @fts_build(%struct.FTS* %95, i32 %96), !dbg !5912
  %98 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !5913
  %99 = getelementptr inbounds %struct.FTS, %struct.FTS* %98, i32 0, i32 1, !dbg !5914
  store %struct._ftsent* %97, %struct._ftsent** %99, align 8, !dbg !5915
  %100 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !5916
  %101 = getelementptr inbounds %struct.FTS, %struct.FTS* %100, i32 0, i32 10, !dbg !5916
  %102 = load i32, i32* %101, align 8, !dbg !5916
  %103 = and i32 %102, 512, !dbg !5916
  %104 = icmp ne i32 %103, 0, !dbg !5916
  br i1 %104, label %105, label %108, !dbg !5918

; <label>:105:                                    ; preds = %94
  %106 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !5919
  %107 = load i32, i32* %7, align 4, !dbg !5921
  call void @cwd_advance_fd(%struct.FTS* %106, i32 %107, i1 zeroext true), !dbg !5922
  br label %122, !dbg !5923

; <label>:108:                                    ; preds = %94
  %109 = load i32, i32* %7, align 4, !dbg !5924
  %110 = call i32 @fchdir(i32 %109) #8, !dbg !5927
  %111 = icmp ne i32 %110, 0, !dbg !5927
  br i1 %111, label %112, label %119, !dbg !5928

; <label>:112:                                    ; preds = %108
  call void @llvm.dbg.declare(metadata i32* %8, metadata !5929, metadata !DIExpression()), !dbg !5931
  %113 = call i32* @__errno_location() #14, !dbg !5932
  %114 = load i32, i32* %113, align 4, !dbg !5932
  store i32 %114, i32* %8, align 4, !dbg !5931
  %115 = load i32, i32* %7, align 4, !dbg !5933
  %116 = call i32 @close(i32 %115), !dbg !5934
  %117 = load i32, i32* %8, align 4, !dbg !5935
  %118 = call i32* @__errno_location() #14, !dbg !5935
  store i32 %117, i32* %118, align 4, !dbg !5935
  store %struct._ftsent* null, %struct._ftsent** %3, align 8, !dbg !5936
  br label %126, !dbg !5936

; <label>:119:                                    ; preds = %108
  %120 = load i32, i32* %7, align 4, !dbg !5937
  %121 = call i32 @close(i32 %120), !dbg !5938
  br label %122

; <label>:122:                                    ; preds = %119, %105
  %123 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !5939
  %124 = getelementptr inbounds %struct.FTS, %struct.FTS* %123, i32 0, i32 1, !dbg !5940
  %125 = load %struct._ftsent*, %struct._ftsent** %124, align 8, !dbg !5940
  store %struct._ftsent* %125, %struct._ftsent** %3, align 8, !dbg !5941
  br label %126, !dbg !5941

; <label>:126:                                    ; preds = %122, %112, %91, %81, %43, %33, %26, %14
  %127 = load %struct._ftsent*, %struct._ftsent** %3, align 8, !dbg !5942
  ret %struct._ftsent* %127, !dbg !5942
}

; Function Attrs: noinline nounwind uwtable
define i64 @hash_get_n_buckets(%struct.hash_table*) #3 !dbg !5943 {
  %2 = alloca %struct.hash_table*, align 8
  store %struct.hash_table* %0, %struct.hash_table** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.hash_table** %2, metadata !5977, metadata !DIExpression()), !dbg !5978
  %3 = load %struct.hash_table*, %struct.hash_table** %2, align 8, !dbg !5979
  %4 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %3, i32 0, i32 2, !dbg !5980
  %5 = load i64, i64* %4, align 8, !dbg !5980
  ret i64 %5, !dbg !5981
}

; Function Attrs: noinline nounwind uwtable
define i64 @hash_get_n_buckets_used(%struct.hash_table*) #3 !dbg !5982 {
  %2 = alloca %struct.hash_table*, align 8
  store %struct.hash_table* %0, %struct.hash_table** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.hash_table** %2, metadata !5983, metadata !DIExpression()), !dbg !5984
  %3 = load %struct.hash_table*, %struct.hash_table** %2, align 8, !dbg !5985
  %4 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %3, i32 0, i32 3, !dbg !5986
  %5 = load i64, i64* %4, align 8, !dbg !5986
  ret i64 %5, !dbg !5987
}

; Function Attrs: noinline nounwind uwtable
define i64 @hash_get_n_entries(%struct.hash_table*) #3 !dbg !5988 {
  %2 = alloca %struct.hash_table*, align 8
  store %struct.hash_table* %0, %struct.hash_table** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.hash_table** %2, metadata !5989, metadata !DIExpression()), !dbg !5990
  %3 = load %struct.hash_table*, %struct.hash_table** %2, align 8, !dbg !5991
  %4 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %3, i32 0, i32 4, !dbg !5992
  %5 = load i64, i64* %4, align 8, !dbg !5992
  ret i64 %5, !dbg !5993
}

; Function Attrs: noinline nounwind uwtable
define i64 @hash_get_max_bucket_length(%struct.hash_table*) #3 !dbg !5994 {
  %2 = alloca %struct.hash_table*, align 8
  %3 = alloca %struct.hash_entry*, align 8
  %4 = alloca i64, align 8
  %5 = alloca %struct.hash_entry*, align 8
  %6 = alloca i64, align 8
  store %struct.hash_table* %0, %struct.hash_table** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.hash_table** %2, metadata !5995, metadata !DIExpression()), !dbg !5996
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %3, metadata !5997, metadata !DIExpression()), !dbg !5998
  call void @llvm.dbg.declare(metadata i64* %4, metadata !5999, metadata !DIExpression()), !dbg !6000
  store i64 0, i64* %4, align 8, !dbg !6000
  %7 = load %struct.hash_table*, %struct.hash_table** %2, align 8, !dbg !6001
  %8 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %7, i32 0, i32 0, !dbg !6003
  %9 = load %struct.hash_entry*, %struct.hash_entry** %8, align 8, !dbg !6003
  store %struct.hash_entry* %9, %struct.hash_entry** %3, align 8, !dbg !6004
  br label %10, !dbg !6005

; <label>:10:                                     ; preds = %40, %1
  %11 = load %struct.hash_entry*, %struct.hash_entry** %3, align 8, !dbg !6006
  %12 = load %struct.hash_table*, %struct.hash_table** %2, align 8, !dbg !6008
  %13 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %12, i32 0, i32 1, !dbg !6009
  %14 = load %struct.hash_entry*, %struct.hash_entry** %13, align 8, !dbg !6009
  %15 = icmp ult %struct.hash_entry* %11, %14, !dbg !6010
  br i1 %15, label %16, label %43, !dbg !6011

; <label>:16:                                     ; preds = %10
  %17 = load %struct.hash_entry*, %struct.hash_entry** %3, align 8, !dbg !6012
  %18 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %17, i32 0, i32 0, !dbg !6015
  %19 = load i8*, i8** %18, align 8, !dbg !6015
  %20 = icmp ne i8* %19, null, !dbg !6012
  br i1 %20, label %21, label %39, !dbg !6016

; <label>:21:                                     ; preds = %16
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %5, metadata !6017, metadata !DIExpression()), !dbg !6019
  %22 = load %struct.hash_entry*, %struct.hash_entry** %3, align 8, !dbg !6020
  store %struct.hash_entry* %22, %struct.hash_entry** %5, align 8, !dbg !6019
  call void @llvm.dbg.declare(metadata i64* %6, metadata !6021, metadata !DIExpression()), !dbg !6022
  store i64 1, i64* %6, align 8, !dbg !6022
  br label %23, !dbg !6023

; <label>:23:                                     ; preds = %29, %21
  %24 = load %struct.hash_entry*, %struct.hash_entry** %5, align 8, !dbg !6024
  %25 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %24, i32 0, i32 1, !dbg !6025
  %26 = load %struct.hash_entry*, %struct.hash_entry** %25, align 8, !dbg !6025
  store %struct.hash_entry* %26, %struct.hash_entry** %5, align 8, !dbg !6026
  %27 = load %struct.hash_entry*, %struct.hash_entry** %5, align 8, !dbg !6027
  %28 = icmp ne %struct.hash_entry* %27, null, !dbg !6023
  br i1 %28, label %29, label %32, !dbg !6023

; <label>:29:                                     ; preds = %23
  %30 = load i64, i64* %6, align 8, !dbg !6028
  %31 = add i64 %30, 1, !dbg !6028
  store i64 %31, i64* %6, align 8, !dbg !6028
  br label %23, !dbg !6023, !llvm.loop !6029

; <label>:32:                                     ; preds = %23
  %33 = load i64, i64* %6, align 8, !dbg !6030
  %34 = load i64, i64* %4, align 8, !dbg !6032
  %35 = icmp ugt i64 %33, %34, !dbg !6033
  br i1 %35, label %36, label %38, !dbg !6034

; <label>:36:                                     ; preds = %32
  %37 = load i64, i64* %6, align 8, !dbg !6035
  store i64 %37, i64* %4, align 8, !dbg !6036
  br label %38, !dbg !6037

; <label>:38:                                     ; preds = %36, %32
  br label %39, !dbg !6038

; <label>:39:                                     ; preds = %38, %16
  br label %40, !dbg !6039

; <label>:40:                                     ; preds = %39
  %41 = load %struct.hash_entry*, %struct.hash_entry** %3, align 8, !dbg !6040
  %42 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %41, i32 1, !dbg !6040
  store %struct.hash_entry* %42, %struct.hash_entry** %3, align 8, !dbg !6040
  br label %10, !dbg !6041, !llvm.loop !6042

; <label>:43:                                     ; preds = %10
  %44 = load i64, i64* %4, align 8, !dbg !6044
  ret i64 %44, !dbg !6045
}

; Function Attrs: noinline nounwind uwtable
define zeroext i1 @hash_table_ok(%struct.hash_table*) #3 !dbg !6046 {
  %2 = alloca i1, align 1
  %3 = alloca %struct.hash_table*, align 8
  %4 = alloca %struct.hash_entry*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca %struct.hash_entry*, align 8
  store %struct.hash_table* %0, %struct.hash_table** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.hash_table** %3, metadata !6049, metadata !DIExpression()), !dbg !6050
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %4, metadata !6051, metadata !DIExpression()), !dbg !6052
  call void @llvm.dbg.declare(metadata i64* %5, metadata !6053, metadata !DIExpression()), !dbg !6054
  store i64 0, i64* %5, align 8, !dbg !6054
  call void @llvm.dbg.declare(metadata i64* %6, metadata !6055, metadata !DIExpression()), !dbg !6056
  store i64 0, i64* %6, align 8, !dbg !6056
  %8 = load %struct.hash_table*, %struct.hash_table** %3, align 8, !dbg !6057
  %9 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %8, i32 0, i32 0, !dbg !6059
  %10 = load %struct.hash_entry*, %struct.hash_entry** %9, align 8, !dbg !6059
  store %struct.hash_entry* %10, %struct.hash_entry** %4, align 8, !dbg !6060
  br label %11, !dbg !6061

; <label>:11:                                     ; preds = %39, %1
  %12 = load %struct.hash_entry*, %struct.hash_entry** %4, align 8, !dbg !6062
  %13 = load %struct.hash_table*, %struct.hash_table** %3, align 8, !dbg !6064
  %14 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %13, i32 0, i32 1, !dbg !6065
  %15 = load %struct.hash_entry*, %struct.hash_entry** %14, align 8, !dbg !6065
  %16 = icmp ult %struct.hash_entry* %12, %15, !dbg !6066
  br i1 %16, label %17, label %42, !dbg !6067

; <label>:17:                                     ; preds = %11
  %18 = load %struct.hash_entry*, %struct.hash_entry** %4, align 8, !dbg !6068
  %19 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %18, i32 0, i32 0, !dbg !6071
  %20 = load i8*, i8** %19, align 8, !dbg !6071
  %21 = icmp ne i8* %20, null, !dbg !6068
  br i1 %21, label %22, label %38, !dbg !6072

; <label>:22:                                     ; preds = %17
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %7, metadata !6073, metadata !DIExpression()), !dbg !6075
  %23 = load %struct.hash_entry*, %struct.hash_entry** %4, align 8, !dbg !6076
  store %struct.hash_entry* %23, %struct.hash_entry** %7, align 8, !dbg !6075
  %24 = load i64, i64* %5, align 8, !dbg !6077
  %25 = add i64 %24, 1, !dbg !6077
  store i64 %25, i64* %5, align 8, !dbg !6077
  %26 = load i64, i64* %6, align 8, !dbg !6078
  %27 = add i64 %26, 1, !dbg !6078
  store i64 %27, i64* %6, align 8, !dbg !6078
  br label %28, !dbg !6079

; <label>:28:                                     ; preds = %34, %22
  %29 = load %struct.hash_entry*, %struct.hash_entry** %7, align 8, !dbg !6080
  %30 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %29, i32 0, i32 1, !dbg !6081
  %31 = load %struct.hash_entry*, %struct.hash_entry** %30, align 8, !dbg !6081
  store %struct.hash_entry* %31, %struct.hash_entry** %7, align 8, !dbg !6082
  %32 = load %struct.hash_entry*, %struct.hash_entry** %7, align 8, !dbg !6083
  %33 = icmp ne %struct.hash_entry* %32, null, !dbg !6079
  br i1 %33, label %34, label %37, !dbg !6079

; <label>:34:                                     ; preds = %28
  %35 = load i64, i64* %6, align 8, !dbg !6084
  %36 = add i64 %35, 1, !dbg !6084
  store i64 %36, i64* %6, align 8, !dbg !6084
  br label %28, !dbg !6079, !llvm.loop !6085

; <label>:37:                                     ; preds = %28
  br label %38, !dbg !6086

; <label>:38:                                     ; preds = %37, %17
  br label %39, !dbg !6087

; <label>:39:                                     ; preds = %38
  %40 = load %struct.hash_entry*, %struct.hash_entry** %4, align 8, !dbg !6088
  %41 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %40, i32 1, !dbg !6088
  store %struct.hash_entry* %41, %struct.hash_entry** %4, align 8, !dbg !6088
  br label %11, !dbg !6089, !llvm.loop !6090

; <label>:42:                                     ; preds = %11
  %43 = load i64, i64* %5, align 8, !dbg !6092
  %44 = load %struct.hash_table*, %struct.hash_table** %3, align 8, !dbg !6094
  %45 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %44, i32 0, i32 3, !dbg !6095
  %46 = load i64, i64* %45, align 8, !dbg !6095
  %47 = icmp eq i64 %43, %46, !dbg !6096
  br i1 %47, label %48, label %55, !dbg !6097

; <label>:48:                                     ; preds = %42
  %49 = load i64, i64* %6, align 8, !dbg !6098
  %50 = load %struct.hash_table*, %struct.hash_table** %3, align 8, !dbg !6099
  %51 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %50, i32 0, i32 4, !dbg !6100
  %52 = load i64, i64* %51, align 8, !dbg !6100
  %53 = icmp eq i64 %49, %52, !dbg !6101
  br i1 %53, label %54, label %55, !dbg !6102

; <label>:54:                                     ; preds = %48
  store i1 true, i1* %2, align 1, !dbg !6103
  br label %56, !dbg !6103

; <label>:55:                                     ; preds = %48, %42
  store i1 false, i1* %2, align 1, !dbg !6104
  br label %56, !dbg !6104

; <label>:56:                                     ; preds = %55, %54
  %57 = load i1, i1* %2, align 1, !dbg !6105
  ret i1 %57, !dbg !6105
}

; Function Attrs: noinline nounwind uwtable
define void @hash_print_statistics(%struct.hash_table*, %struct._IO_FILE*) #3 !dbg !6106 {
  %3 = alloca %struct.hash_table*, align 8
  %4 = alloca %struct._IO_FILE*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  store %struct.hash_table* %0, %struct.hash_table** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.hash_table** %3, metadata !6149, metadata !DIExpression()), !dbg !6150
  store %struct._IO_FILE* %1, %struct._IO_FILE** %4, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %4, metadata !6151, metadata !DIExpression()), !dbg !6152
  call void @llvm.dbg.declare(metadata i64* %5, metadata !6153, metadata !DIExpression()), !dbg !6154
  %9 = load %struct.hash_table*, %struct.hash_table** %3, align 8, !dbg !6155
  %10 = call i64 @hash_get_n_entries(%struct.hash_table* %9), !dbg !6156
  store i64 %10, i64* %5, align 8, !dbg !6154
  call void @llvm.dbg.declare(metadata i64* %6, metadata !6157, metadata !DIExpression()), !dbg !6158
  %11 = load %struct.hash_table*, %struct.hash_table** %3, align 8, !dbg !6159
  %12 = call i64 @hash_get_n_buckets(%struct.hash_table* %11), !dbg !6160
  store i64 %12, i64* %6, align 8, !dbg !6158
  call void @llvm.dbg.declare(metadata i64* %7, metadata !6161, metadata !DIExpression()), !dbg !6162
  %13 = load %struct.hash_table*, %struct.hash_table** %3, align 8, !dbg !6163
  %14 = call i64 @hash_get_n_buckets_used(%struct.hash_table* %13), !dbg !6164
  store i64 %14, i64* %7, align 8, !dbg !6162
  call void @llvm.dbg.declare(metadata i64* %8, metadata !6165, metadata !DIExpression()), !dbg !6166
  %15 = load %struct.hash_table*, %struct.hash_table** %3, align 8, !dbg !6167
  %16 = call i64 @hash_get_max_bucket_length(%struct.hash_table* %15), !dbg !6168
  store i64 %16, i64* %8, align 8, !dbg !6166
  %17 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8, !dbg !6169
  %18 = load i64, i64* %5, align 8, !dbg !6170
  %19 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %17, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.159, i32 0, i32 0), i64 %18), !dbg !6171
  %20 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8, !dbg !6172
  %21 = load i64, i64* %6, align 8, !dbg !6173
  %22 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %20, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.1.160, i32 0, i32 0), i64 %21), !dbg !6174
  %23 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8, !dbg !6175
  %24 = load i64, i64* %7, align 8, !dbg !6176
  %25 = load i64, i64* %7, align 8, !dbg !6177
  %26 = uitofp i64 %25 to double, !dbg !6177
  %27 = fmul double 1.000000e+02, %26, !dbg !6178
  %28 = load i64, i64* %6, align 8, !dbg !6179
  %29 = uitofp i64 %28 to double, !dbg !6179
  %30 = fdiv double %27, %29, !dbg !6180
  %31 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %23, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.2.161, i32 0, i32 0), i64 %24, double %30), !dbg !6181
  %32 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8, !dbg !6182
  %33 = load i64, i64* %8, align 8, !dbg !6183
  %34 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %32, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.162, i32 0, i32 0), i64 %33), !dbg !6184
  ret void, !dbg !6185
}

; Function Attrs: noinline nounwind uwtable
define i8* @hash_lookup(%struct.hash_table*, i8*) #3 !dbg !6186 {
  %3 = alloca i8*, align 8
  %4 = alloca %struct.hash_table*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca %struct.hash_entry*, align 8
  %7 = alloca %struct.hash_entry*, align 8
  store %struct.hash_table* %0, %struct.hash_table** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.hash_table** %4, metadata !6189, metadata !DIExpression()), !dbg !6190
  store i8* %1, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !6191, metadata !DIExpression()), !dbg !6192
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %6, metadata !6193, metadata !DIExpression()), !dbg !6194
  %8 = load %struct.hash_table*, %struct.hash_table** %4, align 8, !dbg !6195
  %9 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %8, i32 0, i32 0, !dbg !6196
  %10 = load %struct.hash_entry*, %struct.hash_entry** %9, align 8, !dbg !6196
  %11 = load %struct.hash_table*, %struct.hash_table** %4, align 8, !dbg !6197
  %12 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %11, i32 0, i32 6, !dbg !6198
  %13 = load i64 (i8*, i64)*, i64 (i8*, i64)** %12, align 8, !dbg !6198
  %14 = load i8*, i8** %5, align 8, !dbg !6199
  %15 = load %struct.hash_table*, %struct.hash_table** %4, align 8, !dbg !6200
  %16 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %15, i32 0, i32 2, !dbg !6201
  %17 = load i64, i64* %16, align 8, !dbg !6201
  %18 = call i64 %13(i8* %14, i64 %17), !dbg !6197
  %19 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %10, i64 %18, !dbg !6202
  store %struct.hash_entry* %19, %struct.hash_entry** %6, align 8, !dbg !6194
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %7, metadata !6203, metadata !DIExpression()), !dbg !6204
  %20 = load %struct.hash_entry*, %struct.hash_entry** %6, align 8, !dbg !6205
  %21 = load %struct.hash_table*, %struct.hash_table** %4, align 8, !dbg !6207
  %22 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %21, i32 0, i32 1, !dbg !6208
  %23 = load %struct.hash_entry*, %struct.hash_entry** %22, align 8, !dbg !6208
  %24 = icmp ult %struct.hash_entry* %20, %23, !dbg !6209
  br i1 %24, label %26, label %25, !dbg !6210

; <label>:25:                                     ; preds = %2
  call void @abort() #11, !dbg !6211
  unreachable, !dbg !6211

; <label>:26:                                     ; preds = %2
  %27 = load %struct.hash_entry*, %struct.hash_entry** %6, align 8, !dbg !6212
  %28 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %27, i32 0, i32 0, !dbg !6214
  %29 = load i8*, i8** %28, align 8, !dbg !6214
  %30 = icmp eq i8* %29, null, !dbg !6215
  br i1 %30, label %31, label %32, !dbg !6216

; <label>:31:                                     ; preds = %26
  store i8* null, i8** %3, align 8, !dbg !6217
  br label %62, !dbg !6217

; <label>:32:                                     ; preds = %26
  %33 = load %struct.hash_entry*, %struct.hash_entry** %6, align 8, !dbg !6218
  store %struct.hash_entry* %33, %struct.hash_entry** %7, align 8, !dbg !6220
  br label %34, !dbg !6221

; <label>:34:                                     ; preds = %57, %32
  %35 = load %struct.hash_entry*, %struct.hash_entry** %7, align 8, !dbg !6222
  %36 = icmp ne %struct.hash_entry* %35, null, !dbg !6224
  br i1 %36, label %37, label %61, !dbg !6224

; <label>:37:                                     ; preds = %34
  %38 = load i8*, i8** %5, align 8, !dbg !6225
  %39 = load %struct.hash_entry*, %struct.hash_entry** %7, align 8, !dbg !6227
  %40 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %39, i32 0, i32 0, !dbg !6228
  %41 = load i8*, i8** %40, align 8, !dbg !6228
  %42 = icmp eq i8* %38, %41, !dbg !6229
  br i1 %42, label %52, label %43, !dbg !6230

; <label>:43:                                     ; preds = %37
  %44 = load %struct.hash_table*, %struct.hash_table** %4, align 8, !dbg !6231
  %45 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %44, i32 0, i32 7, !dbg !6232
  %46 = load i1 (i8*, i8*)*, i1 (i8*, i8*)** %45, align 8, !dbg !6232
  %47 = load i8*, i8** %5, align 8, !dbg !6233
  %48 = load %struct.hash_entry*, %struct.hash_entry** %7, align 8, !dbg !6234
  %49 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %48, i32 0, i32 0, !dbg !6235
  %50 = load i8*, i8** %49, align 8, !dbg !6235
  %51 = call zeroext i1 %46(i8* %47, i8* %50), !dbg !6231
  br i1 %51, label %52, label %56, !dbg !6236

; <label>:52:                                     ; preds = %43, %37
  %53 = load %struct.hash_entry*, %struct.hash_entry** %7, align 8, !dbg !6237
  %54 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %53, i32 0, i32 0, !dbg !6238
  %55 = load i8*, i8** %54, align 8, !dbg !6238
  store i8* %55, i8** %3, align 8, !dbg !6239
  br label %62, !dbg !6239

; <label>:56:                                     ; preds = %43
  br label %57, !dbg !6240

; <label>:57:                                     ; preds = %56
  %58 = load %struct.hash_entry*, %struct.hash_entry** %7, align 8, !dbg !6241
  %59 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %58, i32 0, i32 1, !dbg !6242
  %60 = load %struct.hash_entry*, %struct.hash_entry** %59, align 8, !dbg !6242
  store %struct.hash_entry* %60, %struct.hash_entry** %7, align 8, !dbg !6243
  br label %34, !dbg !6244, !llvm.loop !6245

; <label>:61:                                     ; preds = %34
  store i8* null, i8** %3, align 8, !dbg !6247
  br label %62, !dbg !6247

; <label>:62:                                     ; preds = %61, %52, %31
  %63 = load i8*, i8** %3, align 8, !dbg !6248
  ret i8* %63, !dbg !6248
}

; Function Attrs: noinline nounwind uwtable
define i8* @hash_get_first(%struct.hash_table*) #3 !dbg !6249 {
  %2 = alloca i8*, align 8
  %3 = alloca %struct.hash_table*, align 8
  %4 = alloca %struct.hash_entry*, align 8
  store %struct.hash_table* %0, %struct.hash_table** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.hash_table** %3, metadata !6252, metadata !DIExpression()), !dbg !6253
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %4, metadata !6254, metadata !DIExpression()), !dbg !6255
  %5 = load %struct.hash_table*, %struct.hash_table** %3, align 8, !dbg !6256
  %6 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %5, i32 0, i32 4, !dbg !6258
  %7 = load i64, i64* %6, align 8, !dbg !6258
  %8 = icmp eq i64 %7, 0, !dbg !6259
  br i1 %8, label %9, label %10, !dbg !6260

; <label>:9:                                      ; preds = %1
  store i8* null, i8** %2, align 8, !dbg !6261
  br label %35, !dbg !6261

; <label>:10:                                     ; preds = %1
  %11 = load %struct.hash_table*, %struct.hash_table** %3, align 8, !dbg !6262
  %12 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %11, i32 0, i32 0, !dbg !6264
  %13 = load %struct.hash_entry*, %struct.hash_entry** %12, align 8, !dbg !6264
  store %struct.hash_entry* %13, %struct.hash_entry** %4, align 8, !dbg !6265
  br label %14, !dbg !6266

; <label>:14:                                     ; preds = %32, %10
  %15 = load %struct.hash_entry*, %struct.hash_entry** %4, align 8, !dbg !6267
  %16 = load %struct.hash_table*, %struct.hash_table** %3, align 8, !dbg !6270
  %17 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %16, i32 0, i32 1, !dbg !6271
  %18 = load %struct.hash_entry*, %struct.hash_entry** %17, align 8, !dbg !6271
  %19 = icmp ult %struct.hash_entry* %15, %18, !dbg !6272
  br i1 %19, label %21, label %20, !dbg !6273

; <label>:20:                                     ; preds = %14
  call void @abort() #11, !dbg !6274
  unreachable, !dbg !6274

; <label>:21:                                     ; preds = %14
  %22 = load %struct.hash_entry*, %struct.hash_entry** %4, align 8, !dbg !6275
  %23 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %22, i32 0, i32 0, !dbg !6277
  %24 = load i8*, i8** %23, align 8, !dbg !6277
  %25 = icmp ne i8* %24, null, !dbg !6275
  br i1 %25, label %26, label %30, !dbg !6278

; <label>:26:                                     ; preds = %21
  %27 = load %struct.hash_entry*, %struct.hash_entry** %4, align 8, !dbg !6279
  %28 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %27, i32 0, i32 0, !dbg !6280
  %29 = load i8*, i8** %28, align 8, !dbg !6280
  store i8* %29, i8** %2, align 8, !dbg !6281
  br label %35, !dbg !6281

; <label>:30:                                     ; preds = %21
  br label %31

; <label>:31:                                     ; preds = %30
  br label %32, !dbg !6282

; <label>:32:                                     ; preds = %31
  %33 = load %struct.hash_entry*, %struct.hash_entry** %4, align 8, !dbg !6283
  %34 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %33, i32 1, !dbg !6283
  store %struct.hash_entry* %34, %struct.hash_entry** %4, align 8, !dbg !6283
  br label %14, !dbg !6284, !llvm.loop !6285

; <label>:35:                                     ; preds = %26, %9
  %36 = load i8*, i8** %2, align 8, !dbg !6288
  ret i8* %36, !dbg !6288
}

; Function Attrs: noinline nounwind uwtable
define i8* @hash_get_next(%struct.hash_table*, i8*) #3 !dbg !6289 {
  %3 = alloca i8*, align 8
  %4 = alloca %struct.hash_table*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca %struct.hash_entry*, align 8
  %7 = alloca %struct.hash_entry*, align 8
  store %struct.hash_table* %0, %struct.hash_table** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.hash_table** %4, metadata !6290, metadata !DIExpression()), !dbg !6291
  store i8* %1, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !6292, metadata !DIExpression()), !dbg !6293
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %6, metadata !6294, metadata !DIExpression()), !dbg !6295
  %8 = load %struct.hash_table*, %struct.hash_table** %4, align 8, !dbg !6296
  %9 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %8, i32 0, i32 0, !dbg !6297
  %10 = load %struct.hash_entry*, %struct.hash_entry** %9, align 8, !dbg !6297
  %11 = load %struct.hash_table*, %struct.hash_table** %4, align 8, !dbg !6298
  %12 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %11, i32 0, i32 6, !dbg !6299
  %13 = load i64 (i8*, i64)*, i64 (i8*, i64)** %12, align 8, !dbg !6299
  %14 = load i8*, i8** %5, align 8, !dbg !6300
  %15 = load %struct.hash_table*, %struct.hash_table** %4, align 8, !dbg !6301
  %16 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %15, i32 0, i32 2, !dbg !6302
  %17 = load i64, i64* %16, align 8, !dbg !6302
  %18 = call i64 %13(i8* %14, i64 %17), !dbg !6298
  %19 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %10, i64 %18, !dbg !6303
  store %struct.hash_entry* %19, %struct.hash_entry** %6, align 8, !dbg !6295
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %7, metadata !6304, metadata !DIExpression()), !dbg !6305
  %20 = load %struct.hash_entry*, %struct.hash_entry** %6, align 8, !dbg !6306
  %21 = load %struct.hash_table*, %struct.hash_table** %4, align 8, !dbg !6308
  %22 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %21, i32 0, i32 1, !dbg !6309
  %23 = load %struct.hash_entry*, %struct.hash_entry** %22, align 8, !dbg !6309
  %24 = icmp ult %struct.hash_entry* %20, %23, !dbg !6310
  br i1 %24, label %26, label %25, !dbg !6311

; <label>:25:                                     ; preds = %2
  call void @abort() #11, !dbg !6312
  unreachable, !dbg !6312

; <label>:26:                                     ; preds = %2
  %27 = load %struct.hash_entry*, %struct.hash_entry** %6, align 8, !dbg !6313
  store %struct.hash_entry* %27, %struct.hash_entry** %7, align 8, !dbg !6315
  br label %28, !dbg !6316

; <label>:28:                                     ; preds = %49, %26
  %29 = load %struct.hash_entry*, %struct.hash_entry** %7, align 8, !dbg !6317
  %30 = icmp ne %struct.hash_entry* %29, null, !dbg !6319
  br i1 %30, label %31, label %53, !dbg !6319

; <label>:31:                                     ; preds = %28
  %32 = load %struct.hash_entry*, %struct.hash_entry** %7, align 8, !dbg !6320
  %33 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %32, i32 0, i32 0, !dbg !6322
  %34 = load i8*, i8** %33, align 8, !dbg !6322
  %35 = load i8*, i8** %5, align 8, !dbg !6323
  %36 = icmp eq i8* %34, %35, !dbg !6324
  br i1 %36, label %37, label %48, !dbg !6325

; <label>:37:                                     ; preds = %31
  %38 = load %struct.hash_entry*, %struct.hash_entry** %7, align 8, !dbg !6326
  %39 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %38, i32 0, i32 1, !dbg !6327
  %40 = load %struct.hash_entry*, %struct.hash_entry** %39, align 8, !dbg !6327
  %41 = icmp ne %struct.hash_entry* %40, null, !dbg !6326
  br i1 %41, label %42, label %48, !dbg !6328

; <label>:42:                                     ; preds = %37
  %43 = load %struct.hash_entry*, %struct.hash_entry** %7, align 8, !dbg !6329
  %44 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %43, i32 0, i32 1, !dbg !6330
  %45 = load %struct.hash_entry*, %struct.hash_entry** %44, align 8, !dbg !6330
  %46 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %45, i32 0, i32 0, !dbg !6331
  %47 = load i8*, i8** %46, align 8, !dbg !6331
  store i8* %47, i8** %3, align 8, !dbg !6332
  br label %72, !dbg !6332

; <label>:48:                                     ; preds = %37, %31
  br label %49, !dbg !6327

; <label>:49:                                     ; preds = %48
  %50 = load %struct.hash_entry*, %struct.hash_entry** %7, align 8, !dbg !6333
  %51 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %50, i32 0, i32 1, !dbg !6334
  %52 = load %struct.hash_entry*, %struct.hash_entry** %51, align 8, !dbg !6334
  store %struct.hash_entry* %52, %struct.hash_entry** %7, align 8, !dbg !6335
  br label %28, !dbg !6336, !llvm.loop !6337

; <label>:53:                                     ; preds = %28
  br label %54, !dbg !6339

; <label>:54:                                     ; preds = %70, %53
  %55 = load %struct.hash_entry*, %struct.hash_entry** %6, align 8, !dbg !6340
  %56 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %55, i32 1, !dbg !6340
  store %struct.hash_entry* %56, %struct.hash_entry** %6, align 8, !dbg !6340
  %57 = load %struct.hash_table*, %struct.hash_table** %4, align 8, !dbg !6341
  %58 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %57, i32 0, i32 1, !dbg !6342
  %59 = load %struct.hash_entry*, %struct.hash_entry** %58, align 8, !dbg !6342
  %60 = icmp ult %struct.hash_entry* %56, %59, !dbg !6343
  br i1 %60, label %61, label %71, !dbg !6339

; <label>:61:                                     ; preds = %54
  %62 = load %struct.hash_entry*, %struct.hash_entry** %6, align 8, !dbg !6344
  %63 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %62, i32 0, i32 0, !dbg !6346
  %64 = load i8*, i8** %63, align 8, !dbg !6346
  %65 = icmp ne i8* %64, null, !dbg !6344
  br i1 %65, label %66, label %70, !dbg !6347

; <label>:66:                                     ; preds = %61
  %67 = load %struct.hash_entry*, %struct.hash_entry** %6, align 8, !dbg !6348
  %68 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %67, i32 0, i32 0, !dbg !6349
  %69 = load i8*, i8** %68, align 8, !dbg !6349
  store i8* %69, i8** %3, align 8, !dbg !6350
  br label %72, !dbg !6350

; <label>:70:                                     ; preds = %61
  br label %54, !dbg !6339, !llvm.loop !6351

; <label>:71:                                     ; preds = %54
  store i8* null, i8** %3, align 8, !dbg !6353
  br label %72, !dbg !6353

; <label>:72:                                     ; preds = %71, %66, %42
  %73 = load i8*, i8** %3, align 8, !dbg !6354
  ret i8* %73, !dbg !6354
}

; Function Attrs: noinline nounwind uwtable
define i64 @hash_get_entries(%struct.hash_table*, i8**, i64) #3 !dbg !6355 {
  %4 = alloca i64, align 8
  %5 = alloca %struct.hash_table*, align 8
  %6 = alloca i8**, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca %struct.hash_entry*, align 8
  %10 = alloca %struct.hash_entry*, align 8
  store %struct.hash_table* %0, %struct.hash_table** %5, align 8
  call void @llvm.dbg.declare(metadata %struct.hash_table** %5, metadata !6359, metadata !DIExpression()), !dbg !6360
  store i8** %1, i8*** %6, align 8
  call void @llvm.dbg.declare(metadata i8*** %6, metadata !6361, metadata !DIExpression()), !dbg !6362
  store i64 %2, i64* %7, align 8
  call void @llvm.dbg.declare(metadata i64* %7, metadata !6363, metadata !DIExpression()), !dbg !6364
  call void @llvm.dbg.declare(metadata i64* %8, metadata !6365, metadata !DIExpression()), !dbg !6366
  store i64 0, i64* %8, align 8, !dbg !6366
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %9, metadata !6367, metadata !DIExpression()), !dbg !6368
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %10, metadata !6369, metadata !DIExpression()), !dbg !6370
  %11 = load %struct.hash_table*, %struct.hash_table** %5, align 8, !dbg !6371
  %12 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %11, i32 0, i32 0, !dbg !6373
  %13 = load %struct.hash_entry*, %struct.hash_entry** %12, align 8, !dbg !6373
  store %struct.hash_entry* %13, %struct.hash_entry** %9, align 8, !dbg !6374
  br label %14, !dbg !6375

; <label>:14:                                     ; preds = %50, %3
  %15 = load %struct.hash_entry*, %struct.hash_entry** %9, align 8, !dbg !6376
  %16 = load %struct.hash_table*, %struct.hash_table** %5, align 8, !dbg !6378
  %17 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %16, i32 0, i32 1, !dbg !6379
  %18 = load %struct.hash_entry*, %struct.hash_entry** %17, align 8, !dbg !6379
  %19 = icmp ult %struct.hash_entry* %15, %18, !dbg !6380
  br i1 %19, label %20, label %53, !dbg !6381

; <label>:20:                                     ; preds = %14
  %21 = load %struct.hash_entry*, %struct.hash_entry** %9, align 8, !dbg !6382
  %22 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %21, i32 0, i32 0, !dbg !6385
  %23 = load i8*, i8** %22, align 8, !dbg !6385
  %24 = icmp ne i8* %23, null, !dbg !6382
  br i1 %24, label %25, label %49, !dbg !6386

; <label>:25:                                     ; preds = %20
  %26 = load %struct.hash_entry*, %struct.hash_entry** %9, align 8, !dbg !6387
  store %struct.hash_entry* %26, %struct.hash_entry** %10, align 8, !dbg !6390
  br label %27, !dbg !6391

; <label>:27:                                     ; preds = %44, %25
  %28 = load %struct.hash_entry*, %struct.hash_entry** %10, align 8, !dbg !6392
  %29 = icmp ne %struct.hash_entry* %28, null, !dbg !6394
  br i1 %29, label %30, label %48, !dbg !6394

; <label>:30:                                     ; preds = %27
  %31 = load i64, i64* %8, align 8, !dbg !6395
  %32 = load i64, i64* %7, align 8, !dbg !6398
  %33 = icmp uge i64 %31, %32, !dbg !6399
  br i1 %33, label %34, label %36, !dbg !6400

; <label>:34:                                     ; preds = %30
  %35 = load i64, i64* %8, align 8, !dbg !6401
  store i64 %35, i64* %4, align 8, !dbg !6402
  br label %55, !dbg !6402

; <label>:36:                                     ; preds = %30
  %37 = load %struct.hash_entry*, %struct.hash_entry** %10, align 8, !dbg !6403
  %38 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %37, i32 0, i32 0, !dbg !6404
  %39 = load i8*, i8** %38, align 8, !dbg !6404
  %40 = load i8**, i8*** %6, align 8, !dbg !6405
  %41 = load i64, i64* %8, align 8, !dbg !6406
  %42 = add i64 %41, 1, !dbg !6406
  store i64 %42, i64* %8, align 8, !dbg !6406
  %43 = getelementptr inbounds i8*, i8** %40, i64 %41, !dbg !6405
  store i8* %39, i8** %43, align 8, !dbg !6407
  br label %44, !dbg !6408

; <label>:44:                                     ; preds = %36
  %45 = load %struct.hash_entry*, %struct.hash_entry** %10, align 8, !dbg !6409
  %46 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %45, i32 0, i32 1, !dbg !6410
  %47 = load %struct.hash_entry*, %struct.hash_entry** %46, align 8, !dbg !6410
  store %struct.hash_entry* %47, %struct.hash_entry** %10, align 8, !dbg !6411
  br label %27, !dbg !6412, !llvm.loop !6413

; <label>:48:                                     ; preds = %27
  br label %49, !dbg !6415

; <label>:49:                                     ; preds = %48, %20
  br label %50, !dbg !6416

; <label>:50:                                     ; preds = %49
  %51 = load %struct.hash_entry*, %struct.hash_entry** %9, align 8, !dbg !6417
  %52 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %51, i32 1, !dbg !6417
  store %struct.hash_entry* %52, %struct.hash_entry** %9, align 8, !dbg !6417
  br label %14, !dbg !6418, !llvm.loop !6419

; <label>:53:                                     ; preds = %14
  %54 = load i64, i64* %8, align 8, !dbg !6421
  store i64 %54, i64* %4, align 8, !dbg !6422
  br label %55, !dbg !6422

; <label>:55:                                     ; preds = %53, %34
  %56 = load i64, i64* %4, align 8, !dbg !6423
  ret i64 %56, !dbg !6423
}

; Function Attrs: noinline nounwind uwtable
define i64 @hash_do_for_each(%struct.hash_table*, i1 (i8*, i8*)*, i8*) #3 !dbg !6424 {
  %4 = alloca i64, align 8
  %5 = alloca %struct.hash_table*, align 8
  %6 = alloca i1 (i8*, i8*)*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i64, align 8
  %9 = alloca %struct.hash_entry*, align 8
  %10 = alloca %struct.hash_entry*, align 8
  store %struct.hash_table* %0, %struct.hash_table** %5, align 8
  call void @llvm.dbg.declare(metadata %struct.hash_table** %5, metadata !6431, metadata !DIExpression()), !dbg !6432
  store i1 (i8*, i8*)* %1, i1 (i8*, i8*)** %6, align 8
  call void @llvm.dbg.declare(metadata i1 (i8*, i8*)** %6, metadata !6433, metadata !DIExpression()), !dbg !6434
  store i8* %2, i8** %7, align 8
  call void @llvm.dbg.declare(metadata i8** %7, metadata !6435, metadata !DIExpression()), !dbg !6436
  call void @llvm.dbg.declare(metadata i64* %8, metadata !6437, metadata !DIExpression()), !dbg !6438
  store i64 0, i64* %8, align 8, !dbg !6438
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %9, metadata !6439, metadata !DIExpression()), !dbg !6440
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %10, metadata !6441, metadata !DIExpression()), !dbg !6442
  %11 = load %struct.hash_table*, %struct.hash_table** %5, align 8, !dbg !6443
  %12 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %11, i32 0, i32 0, !dbg !6445
  %13 = load %struct.hash_entry*, %struct.hash_entry** %12, align 8, !dbg !6445
  store %struct.hash_entry* %13, %struct.hash_entry** %9, align 8, !dbg !6446
  br label %14, !dbg !6447

; <label>:14:                                     ; preds = %48, %3
  %15 = load %struct.hash_entry*, %struct.hash_entry** %9, align 8, !dbg !6448
  %16 = load %struct.hash_table*, %struct.hash_table** %5, align 8, !dbg !6450
  %17 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %16, i32 0, i32 1, !dbg !6451
  %18 = load %struct.hash_entry*, %struct.hash_entry** %17, align 8, !dbg !6451
  %19 = icmp ult %struct.hash_entry* %15, %18, !dbg !6452
  br i1 %19, label %20, label %51, !dbg !6453

; <label>:20:                                     ; preds = %14
  %21 = load %struct.hash_entry*, %struct.hash_entry** %9, align 8, !dbg !6454
  %22 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %21, i32 0, i32 0, !dbg !6457
  %23 = load i8*, i8** %22, align 8, !dbg !6457
  %24 = icmp ne i8* %23, null, !dbg !6454
  br i1 %24, label %25, label %47, !dbg !6458

; <label>:25:                                     ; preds = %20
  %26 = load %struct.hash_entry*, %struct.hash_entry** %9, align 8, !dbg !6459
  store %struct.hash_entry* %26, %struct.hash_entry** %10, align 8, !dbg !6462
  br label %27, !dbg !6463

; <label>:27:                                     ; preds = %42, %25
  %28 = load %struct.hash_entry*, %struct.hash_entry** %10, align 8, !dbg !6464
  %29 = icmp ne %struct.hash_entry* %28, null, !dbg !6466
  br i1 %29, label %30, label %46, !dbg !6466

; <label>:30:                                     ; preds = %27
  %31 = load i1 (i8*, i8*)*, i1 (i8*, i8*)** %6, align 8, !dbg !6467
  %32 = load %struct.hash_entry*, %struct.hash_entry** %10, align 8, !dbg !6470
  %33 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %32, i32 0, i32 0, !dbg !6471
  %34 = load i8*, i8** %33, align 8, !dbg !6471
  %35 = load i8*, i8** %7, align 8, !dbg !6472
  %36 = call zeroext i1 %31(i8* %34, i8* %35), !dbg !6467
  br i1 %36, label %39, label %37, !dbg !6473

; <label>:37:                                     ; preds = %30
  %38 = load i64, i64* %8, align 8, !dbg !6474
  store i64 %38, i64* %4, align 8, !dbg !6475
  br label %53, !dbg !6475

; <label>:39:                                     ; preds = %30
  %40 = load i64, i64* %8, align 8, !dbg !6476
  %41 = add i64 %40, 1, !dbg !6476
  store i64 %41, i64* %8, align 8, !dbg !6476
  br label %42, !dbg !6477

; <label>:42:                                     ; preds = %39
  %43 = load %struct.hash_entry*, %struct.hash_entry** %10, align 8, !dbg !6478
  %44 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %43, i32 0, i32 1, !dbg !6479
  %45 = load %struct.hash_entry*, %struct.hash_entry** %44, align 8, !dbg !6479
  store %struct.hash_entry* %45, %struct.hash_entry** %10, align 8, !dbg !6480
  br label %27, !dbg !6481, !llvm.loop !6482

; <label>:46:                                     ; preds = %27
  br label %47, !dbg !6484

; <label>:47:                                     ; preds = %46, %20
  br label %48, !dbg !6485

; <label>:48:                                     ; preds = %47
  %49 = load %struct.hash_entry*, %struct.hash_entry** %9, align 8, !dbg !6486
  %50 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %49, i32 1, !dbg !6486
  store %struct.hash_entry* %50, %struct.hash_entry** %9, align 8, !dbg !6486
  br label %14, !dbg !6487, !llvm.loop !6488

; <label>:51:                                     ; preds = %14
  %52 = load i64, i64* %8, align 8, !dbg !6490
  store i64 %52, i64* %4, align 8, !dbg !6491
  br label %53, !dbg !6491

; <label>:53:                                     ; preds = %51, %37
  %54 = load i64, i64* %4, align 8, !dbg !6492
  ret i64 %54, !dbg !6492
}

; Function Attrs: noinline nounwind uwtable
define i64 @hash_string(i8*, i64) #3 !dbg !6493 {
  %3 = alloca i8*, align 8
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = alloca i8, align 1
  store i8* %0, i8** %3, align 8
  call void @llvm.dbg.declare(metadata i8** %3, metadata !6496, metadata !DIExpression()), !dbg !6497
  store i64 %1, i64* %4, align 8
  call void @llvm.dbg.declare(metadata i64* %4, metadata !6498, metadata !DIExpression()), !dbg !6499
  call void @llvm.dbg.declare(metadata i64* %5, metadata !6500, metadata !DIExpression()), !dbg !6501
  store i64 0, i64* %5, align 8, !dbg !6501
  call void @llvm.dbg.declare(metadata i8* %6, metadata !6502, metadata !DIExpression()), !dbg !6503
  br label %7, !dbg !6504

; <label>:7:                                      ; preds = %19, %2
  %8 = load i8*, i8** %3, align 8, !dbg !6505
  %9 = load i8, i8* %8, align 1, !dbg !6508
  store i8 %9, i8* %6, align 1, !dbg !6509
  %10 = icmp ne i8 %9, 0, !dbg !6510
  br i1 %10, label %11, label %22, !dbg !6510

; <label>:11:                                     ; preds = %7
  %12 = load i64, i64* %5, align 8, !dbg !6511
  %13 = mul i64 %12, 31, !dbg !6512
  %14 = load i8, i8* %6, align 1, !dbg !6513
  %15 = zext i8 %14 to i64, !dbg !6513
  %16 = add i64 %13, %15, !dbg !6514
  %17 = load i64, i64* %4, align 8, !dbg !6515
  %18 = urem i64 %16, %17, !dbg !6516
  store i64 %18, i64* %5, align 8, !dbg !6517
  br label %19, !dbg !6518

; <label>:19:                                     ; preds = %11
  %20 = load i8*, i8** %3, align 8, !dbg !6519
  %21 = getelementptr inbounds i8, i8* %20, i32 1, !dbg !6519
  store i8* %21, i8** %3, align 8, !dbg !6519
  br label %7, !dbg !6520, !llvm.loop !6521

; <label>:22:                                     ; preds = %7
  %23 = load i64, i64* %5, align 8, !dbg !6523
  ret i64 %23, !dbg !6524
}

; Function Attrs: noinline nounwind uwtable
define void @hash_reset_tuning(%struct.hash_tuning*) #3 !dbg !6525 {
  %2 = alloca %struct.hash_tuning*, align 8
  store %struct.hash_tuning* %0, %struct.hash_tuning** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.hash_tuning** %2, metadata !6529, metadata !DIExpression()), !dbg !6530
  %3 = load %struct.hash_tuning*, %struct.hash_tuning** %2, align 8, !dbg !6531
  %4 = bitcast %struct.hash_tuning* %3 to i8*, !dbg !6532
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %4, i8* bitcast (%struct.hash_tuning* @default_tuning to i8*), i64 20, i32 4, i1 false), !dbg !6532
  ret void, !dbg !6533
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i32, i1) #10

; Function Attrs: noinline nounwind uwtable
define %struct.hash_table* @hash_initialize(i64, %struct.hash_tuning*, i64 (i8*, i64)*, i1 (i8*, i8*)*, void (i8*)*) #3 !dbg !6534 {
  %6 = alloca %struct.hash_table*, align 8
  %7 = alloca i64, align 8
  %8 = alloca %struct.hash_tuning*, align 8
  %9 = alloca i64 (i8*, i64)*, align 8
  %10 = alloca i1 (i8*, i8*)*, align 8
  %11 = alloca void (i8*)*, align 8
  %12 = alloca %struct.hash_table*, align 8
  store i64 %0, i64* %7, align 8
  call void @llvm.dbg.declare(metadata i64* %7, metadata !6538, metadata !DIExpression()), !dbg !6539
  store %struct.hash_tuning* %1, %struct.hash_tuning** %8, align 8
  call void @llvm.dbg.declare(metadata %struct.hash_tuning** %8, metadata !6540, metadata !DIExpression()), !dbg !6541
  store i64 (i8*, i64)* %2, i64 (i8*, i64)** %9, align 8
  call void @llvm.dbg.declare(metadata i64 (i8*, i64)** %9, metadata !6542, metadata !DIExpression()), !dbg !6543
  store i1 (i8*, i8*)* %3, i1 (i8*, i8*)** %10, align 8
  call void @llvm.dbg.declare(metadata i1 (i8*, i8*)** %10, metadata !6544, metadata !DIExpression()), !dbg !6545
  store void (i8*)* %4, void (i8*)** %11, align 8
  call void @llvm.dbg.declare(metadata void (i8*)** %11, metadata !6546, metadata !DIExpression()), !dbg !6547
  call void @llvm.dbg.declare(metadata %struct.hash_table** %12, metadata !6548, metadata !DIExpression()), !dbg !6549
  %13 = load i64 (i8*, i64)*, i64 (i8*, i64)** %9, align 8, !dbg !6550
  %14 = icmp eq i64 (i8*, i64)* %13, null, !dbg !6552
  br i1 %14, label %15, label %16, !dbg !6553

; <label>:15:                                     ; preds = %5
  store i64 (i8*, i64)* @raw_hasher, i64 (i8*, i64)** %9, align 8, !dbg !6554
  br label %16, !dbg !6555

; <label>:16:                                     ; preds = %15, %5
  %17 = load i1 (i8*, i8*)*, i1 (i8*, i8*)** %10, align 8, !dbg !6556
  %18 = icmp eq i1 (i8*, i8*)* %17, null, !dbg !6558
  br i1 %18, label %19, label %20, !dbg !6559

; <label>:19:                                     ; preds = %16
  store i1 (i8*, i8*)* @raw_comparator, i1 (i8*, i8*)** %10, align 8, !dbg !6560
  br label %20, !dbg !6561

; <label>:20:                                     ; preds = %19, %16
  %21 = call noalias i8* @malloc(i64 80) #8, !dbg !6562
  %22 = bitcast i8* %21 to %struct.hash_table*, !dbg !6562
  store %struct.hash_table* %22, %struct.hash_table** %12, align 8, !dbg !6563
  %23 = load %struct.hash_table*, %struct.hash_table** %12, align 8, !dbg !6564
  %24 = icmp eq %struct.hash_table* %23, null, !dbg !6566
  br i1 %24, label %25, label %26, !dbg !6567

; <label>:25:                                     ; preds = %20
  store %struct.hash_table* null, %struct.hash_table** %6, align 8, !dbg !6568
  br label %90, !dbg !6568

; <label>:26:                                     ; preds = %20
  %27 = load %struct.hash_tuning*, %struct.hash_tuning** %8, align 8, !dbg !6569
  %28 = icmp ne %struct.hash_tuning* %27, null, !dbg !6569
  br i1 %28, label %30, label %29, !dbg !6571

; <label>:29:                                     ; preds = %26
  store %struct.hash_tuning* @default_tuning, %struct.hash_tuning** %8, align 8, !dbg !6572
  br label %30, !dbg !6573

; <label>:30:                                     ; preds = %29, %26
  %31 = load %struct.hash_tuning*, %struct.hash_tuning** %8, align 8, !dbg !6574
  %32 = load %struct.hash_table*, %struct.hash_table** %12, align 8, !dbg !6575
  %33 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %32, i32 0, i32 5, !dbg !6576
  store %struct.hash_tuning* %31, %struct.hash_tuning** %33, align 8, !dbg !6577
  %34 = load %struct.hash_table*, %struct.hash_table** %12, align 8, !dbg !6578
  %35 = call zeroext i1 @check_tuning(%struct.hash_table* %34), !dbg !6580
  br i1 %35, label %37, label %36, !dbg !6581

; <label>:36:                                     ; preds = %30
  br label %87, !dbg !6582

; <label>:37:                                     ; preds = %30
  %38 = load i64, i64* %7, align 8, !dbg !6584
  %39 = load %struct.hash_tuning*, %struct.hash_tuning** %8, align 8, !dbg !6585
  %40 = call i64 @compute_bucket_size(i64 %38, %struct.hash_tuning* %39), !dbg !6586
  %41 = load %struct.hash_table*, %struct.hash_table** %12, align 8, !dbg !6587
  %42 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %41, i32 0, i32 2, !dbg !6588
  store i64 %40, i64* %42, align 8, !dbg !6589
  %43 = load %struct.hash_table*, %struct.hash_table** %12, align 8, !dbg !6590
  %44 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %43, i32 0, i32 2, !dbg !6592
  %45 = load i64, i64* %44, align 8, !dbg !6592
  %46 = icmp ne i64 %45, 0, !dbg !6590
  br i1 %46, label %48, label %47, !dbg !6593

; <label>:47:                                     ; preds = %37
  br label %87, !dbg !6594

; <label>:48:                                     ; preds = %37
  %49 = load %struct.hash_table*, %struct.hash_table** %12, align 8, !dbg !6595
  %50 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %49, i32 0, i32 2, !dbg !6596
  %51 = load i64, i64* %50, align 8, !dbg !6596
  %52 = call noalias i8* @calloc(i64 %51, i64 16) #8, !dbg !6597
  %53 = bitcast i8* %52 to %struct.hash_entry*, !dbg !6597
  %54 = load %struct.hash_table*, %struct.hash_table** %12, align 8, !dbg !6598
  %55 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %54, i32 0, i32 0, !dbg !6599
  store %struct.hash_entry* %53, %struct.hash_entry** %55, align 8, !dbg !6600
  %56 = load %struct.hash_table*, %struct.hash_table** %12, align 8, !dbg !6601
  %57 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %56, i32 0, i32 0, !dbg !6603
  %58 = load %struct.hash_entry*, %struct.hash_entry** %57, align 8, !dbg !6603
  %59 = icmp eq %struct.hash_entry* %58, null, !dbg !6604
  br i1 %59, label %60, label %61, !dbg !6605

; <label>:60:                                     ; preds = %48
  br label %87, !dbg !6606

; <label>:61:                                     ; preds = %48
  %62 = load %struct.hash_table*, %struct.hash_table** %12, align 8, !dbg !6607
  %63 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %62, i32 0, i32 0, !dbg !6608
  %64 = load %struct.hash_entry*, %struct.hash_entry** %63, align 8, !dbg !6608
  %65 = load %struct.hash_table*, %struct.hash_table** %12, align 8, !dbg !6609
  %66 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %65, i32 0, i32 2, !dbg !6610
  %67 = load i64, i64* %66, align 8, !dbg !6610
  %68 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %64, i64 %67, !dbg !6611
  %69 = load %struct.hash_table*, %struct.hash_table** %12, align 8, !dbg !6612
  %70 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %69, i32 0, i32 1, !dbg !6613
  store %struct.hash_entry* %68, %struct.hash_entry** %70, align 8, !dbg !6614
  %71 = load %struct.hash_table*, %struct.hash_table** %12, align 8, !dbg !6615
  %72 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %71, i32 0, i32 3, !dbg !6616
  store i64 0, i64* %72, align 8, !dbg !6617
  %73 = load %struct.hash_table*, %struct.hash_table** %12, align 8, !dbg !6618
  %74 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %73, i32 0, i32 4, !dbg !6619
  store i64 0, i64* %74, align 8, !dbg !6620
  %75 = load i64 (i8*, i64)*, i64 (i8*, i64)** %9, align 8, !dbg !6621
  %76 = load %struct.hash_table*, %struct.hash_table** %12, align 8, !dbg !6622
  %77 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %76, i32 0, i32 6, !dbg !6623
  store i64 (i8*, i64)* %75, i64 (i8*, i64)** %77, align 8, !dbg !6624
  %78 = load i1 (i8*, i8*)*, i1 (i8*, i8*)** %10, align 8, !dbg !6625
  %79 = load %struct.hash_table*, %struct.hash_table** %12, align 8, !dbg !6626
  %80 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %79, i32 0, i32 7, !dbg !6627
  store i1 (i8*, i8*)* %78, i1 (i8*, i8*)** %80, align 8, !dbg !6628
  %81 = load void (i8*)*, void (i8*)** %11, align 8, !dbg !6629
  %82 = load %struct.hash_table*, %struct.hash_table** %12, align 8, !dbg !6630
  %83 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %82, i32 0, i32 8, !dbg !6631
  store void (i8*)* %81, void (i8*)** %83, align 8, !dbg !6632
  %84 = load %struct.hash_table*, %struct.hash_table** %12, align 8, !dbg !6633
  %85 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %84, i32 0, i32 9, !dbg !6634
  store %struct.hash_entry* null, %struct.hash_entry** %85, align 8, !dbg !6635
  %86 = load %struct.hash_table*, %struct.hash_table** %12, align 8, !dbg !6636
  store %struct.hash_table* %86, %struct.hash_table** %6, align 8, !dbg !6637
  br label %90, !dbg !6637

; <label>:87:                                     ; preds = %60, %47, %36
  %88 = load %struct.hash_table*, %struct.hash_table** %12, align 8, !dbg !6638
  %89 = bitcast %struct.hash_table* %88 to i8*, !dbg !6638
  call void @free(i8* %89) #8, !dbg !6639
  store %struct.hash_table* null, %struct.hash_table** %6, align 8, !dbg !6640
  br label %90, !dbg !6640

; <label>:90:                                     ; preds = %87, %61, %25
  %91 = load %struct.hash_table*, %struct.hash_table** %6, align 8, !dbg !6641
  ret %struct.hash_table* %91, !dbg !6641
}

; Function Attrs: noinline nounwind uwtable
define internal i64 @raw_hasher(i8*, i64) #3 !dbg !6642 {
  %3 = alloca i8*, align 8
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  store i8* %0, i8** %3, align 8
  call void @llvm.dbg.declare(metadata i8** %3, metadata !6643, metadata !DIExpression()), !dbg !6644
  store i64 %1, i64* %4, align 8
  call void @llvm.dbg.declare(metadata i64* %4, metadata !6645, metadata !DIExpression()), !dbg !6646
  call void @llvm.dbg.declare(metadata i64* %5, metadata !6647, metadata !DIExpression()), !dbg !6648
  %6 = load i8*, i8** %3, align 8, !dbg !6649
  %7 = ptrtoint i8* %6 to i64, !dbg !6650
  %8 = call i64 @rotr_sz(i64 %7, i32 3), !dbg !6651
  store i64 %8, i64* %5, align 8, !dbg !6648
  %9 = load i64, i64* %5, align 8, !dbg !6652
  %10 = load i64, i64* %4, align 8, !dbg !6653
  %11 = urem i64 %9, %10, !dbg !6654
  ret i64 %11, !dbg !6655
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i1 @raw_comparator(i8*, i8*) #3 !dbg !6656 {
  %3 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  store i8* %0, i8** %3, align 8
  call void @llvm.dbg.declare(metadata i8** %3, metadata !6657, metadata !DIExpression()), !dbg !6658
  store i8* %1, i8** %4, align 8
  call void @llvm.dbg.declare(metadata i8** %4, metadata !6659, metadata !DIExpression()), !dbg !6660
  %5 = load i8*, i8** %3, align 8, !dbg !6661
  %6 = load i8*, i8** %4, align 8, !dbg !6662
  %7 = icmp eq i8* %5, %6, !dbg !6663
  ret i1 %7, !dbg !6664
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i1 @check_tuning(%struct.hash_table*) #3 !dbg !6665 {
  %2 = alloca i1, align 1
  %3 = alloca %struct.hash_table*, align 8
  %4 = alloca %struct.hash_tuning*, align 8
  %5 = alloca float, align 4
  store %struct.hash_table* %0, %struct.hash_table** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.hash_table** %3, metadata !6668, metadata !DIExpression()), !dbg !6669
  call void @llvm.dbg.declare(metadata %struct.hash_tuning** %4, metadata !6670, metadata !DIExpression()), !dbg !6671
  %6 = load %struct.hash_table*, %struct.hash_table** %3, align 8, !dbg !6672
  %7 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %6, i32 0, i32 5, !dbg !6673
  %8 = load %struct.hash_tuning*, %struct.hash_tuning** %7, align 8, !dbg !6673
  store %struct.hash_tuning* %8, %struct.hash_tuning** %4, align 8, !dbg !6671
  call void @llvm.dbg.declare(metadata float* %5, metadata !6674, metadata !DIExpression()), !dbg !6675
  %9 = load %struct.hash_tuning*, %struct.hash_tuning** %4, align 8, !dbg !6676
  %10 = icmp eq %struct.hash_tuning* %9, @default_tuning, !dbg !6678
  br i1 %10, label %11, label %12, !dbg !6679

; <label>:11:                                     ; preds = %1
  store i1 true, i1* %2, align 1, !dbg !6680
  br label %66, !dbg !6680

; <label>:12:                                     ; preds = %1
  store float 0x3FB99999A0000000, float* %5, align 4, !dbg !6681
  %13 = load float, float* %5, align 4, !dbg !6682
  %14 = load %struct.hash_tuning*, %struct.hash_tuning** %4, align 8, !dbg !6684
  %15 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %14, i32 0, i32 2, !dbg !6685
  %16 = load float, float* %15, align 4, !dbg !6685
  %17 = fcmp olt float %13, %16, !dbg !6686
  br i1 %17, label %18, label %63, !dbg !6687

; <label>:18:                                     ; preds = %12
  %19 = load %struct.hash_tuning*, %struct.hash_tuning** %4, align 8, !dbg !6688
  %20 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %19, i32 0, i32 2, !dbg !6689
  %21 = load float, float* %20, align 4, !dbg !6689
  %22 = load float, float* %5, align 4, !dbg !6690
  %23 = fsub float 1.000000e+00, %22, !dbg !6691
  %24 = fcmp olt float %21, %23, !dbg !6692
  br i1 %24, label %25, label %63, !dbg !6693

; <label>:25:                                     ; preds = %18
  %26 = load float, float* %5, align 4, !dbg !6694
  %27 = fadd float 1.000000e+00, %26, !dbg !6695
  %28 = load %struct.hash_tuning*, %struct.hash_tuning** %4, align 8, !dbg !6696
  %29 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %28, i32 0, i32 3, !dbg !6697
  %30 = load float, float* %29, align 4, !dbg !6697
  %31 = fcmp olt float %27, %30, !dbg !6698
  br i1 %31, label %32, label %63, !dbg !6699

; <label>:32:                                     ; preds = %25
  %33 = load %struct.hash_tuning*, %struct.hash_tuning** %4, align 8, !dbg !6700
  %34 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %33, i32 0, i32 0, !dbg !6701
  %35 = load float, float* %34, align 4, !dbg !6701
  %36 = fcmp ole float 0.000000e+00, %35, !dbg !6702
  br i1 %36, label %37, label %63, !dbg !6703

; <label>:37:                                     ; preds = %32
  %38 = load %struct.hash_tuning*, %struct.hash_tuning** %4, align 8, !dbg !6704
  %39 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %38, i32 0, i32 0, !dbg !6705
  %40 = load float, float* %39, align 4, !dbg !6705
  %41 = load float, float* %5, align 4, !dbg !6706
  %42 = fadd float %40, %41, !dbg !6707
  %43 = load %struct.hash_tuning*, %struct.hash_tuning** %4, align 8, !dbg !6708
  %44 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %43, i32 0, i32 1, !dbg !6709
  %45 = load float, float* %44, align 4, !dbg !6709
  %46 = fcmp olt float %42, %45, !dbg !6710
  br i1 %46, label %47, label %63, !dbg !6711

; <label>:47:                                     ; preds = %37
  %48 = load %struct.hash_tuning*, %struct.hash_tuning** %4, align 8, !dbg !6712
  %49 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %48, i32 0, i32 1, !dbg !6713
  %50 = load float, float* %49, align 4, !dbg !6713
  %51 = fcmp ole float %50, 1.000000e+00, !dbg !6714
  br i1 %51, label %52, label %63, !dbg !6715

; <label>:52:                                     ; preds = %47
  %53 = load %struct.hash_tuning*, %struct.hash_tuning** %4, align 8, !dbg !6716
  %54 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %53, i32 0, i32 0, !dbg !6717
  %55 = load float, float* %54, align 4, !dbg !6717
  %56 = load float, float* %5, align 4, !dbg !6718
  %57 = fadd float %55, %56, !dbg !6719
  %58 = load %struct.hash_tuning*, %struct.hash_tuning** %4, align 8, !dbg !6720
  %59 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %58, i32 0, i32 2, !dbg !6721
  %60 = load float, float* %59, align 4, !dbg !6721
  %61 = fcmp olt float %57, %60, !dbg !6722
  br i1 %61, label %62, label %63, !dbg !6723

; <label>:62:                                     ; preds = %52
  store i1 true, i1* %2, align 1, !dbg !6724
  br label %66, !dbg !6724

; <label>:63:                                     ; preds = %52, %47, %37, %32, %25, %18, %12
  %64 = load %struct.hash_table*, %struct.hash_table** %3, align 8, !dbg !6725
  %65 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %64, i32 0, i32 5, !dbg !6726
  store %struct.hash_tuning* @default_tuning, %struct.hash_tuning** %65, align 8, !dbg !6727
  store i1 false, i1* %2, align 1, !dbg !6728
  br label %66, !dbg !6728

; <label>:66:                                     ; preds = %63, %62, %11
  %67 = load i1, i1* %2, align 1, !dbg !6729
  ret i1 %67, !dbg !6729
}

; Function Attrs: noinline nounwind uwtable
define internal i64 @compute_bucket_size(i64, %struct.hash_tuning*) #3 !dbg !6730 {
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = alloca %struct.hash_tuning*, align 8
  %6 = alloca float, align 4
  store i64 %0, i64* %4, align 8
  call void @llvm.dbg.declare(metadata i64* %4, metadata !6733, metadata !DIExpression()), !dbg !6734
  store %struct.hash_tuning* %1, %struct.hash_tuning** %5, align 8
  call void @llvm.dbg.declare(metadata %struct.hash_tuning** %5, metadata !6735, metadata !DIExpression()), !dbg !6736
  %7 = load %struct.hash_tuning*, %struct.hash_tuning** %5, align 8, !dbg !6737
  %8 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %7, i32 0, i32 4, !dbg !6739
  %9 = load i8, i8* %8, align 4, !dbg !6739
  %10 = trunc i8 %9 to i1, !dbg !6739
  br i1 %10, label %24, label %11, !dbg !6740

; <label>:11:                                     ; preds = %2
  call void @llvm.dbg.declare(metadata float* %6, metadata !6741, metadata !DIExpression()), !dbg !6743
  %12 = load i64, i64* %4, align 8, !dbg !6744
  %13 = uitofp i64 %12 to float, !dbg !6744
  %14 = load %struct.hash_tuning*, %struct.hash_tuning** %5, align 8, !dbg !6745
  %15 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %14, i32 0, i32 2, !dbg !6746
  %16 = load float, float* %15, align 4, !dbg !6746
  %17 = fdiv float %13, %16, !dbg !6747
  store float %17, float* %6, align 4, !dbg !6743
  %18 = load float, float* %6, align 4, !dbg !6748
  %19 = fcmp ole float 0x43F0000000000000, %18, !dbg !6750
  br i1 %19, label %20, label %21, !dbg !6751

; <label>:20:                                     ; preds = %11
  store i64 0, i64* %3, align 8, !dbg !6752
  br label %32, !dbg !6752

; <label>:21:                                     ; preds = %11
  %22 = load float, float* %6, align 4, !dbg !6753
  %23 = fptoui float %22 to i64, !dbg !6753
  store i64 %23, i64* %4, align 8, !dbg !6754
  br label %24, !dbg !6755

; <label>:24:                                     ; preds = %21, %2
  %25 = load i64, i64* %4, align 8, !dbg !6756
  %26 = call i64 @next_prime(i64 %25), !dbg !6757
  store i64 %26, i64* %4, align 8, !dbg !6758
  %27 = load i64, i64* %4, align 8, !dbg !6759
  %28 = icmp ult i64 2305843009213693951, %27, !dbg !6759
  br i1 %28, label %29, label %30, !dbg !6761

; <label>:29:                                     ; preds = %24
  store i64 0, i64* %3, align 8, !dbg !6762
  br label %32, !dbg !6762

; <label>:30:                                     ; preds = %24
  %31 = load i64, i64* %4, align 8, !dbg !6763
  store i64 %31, i64* %3, align 8, !dbg !6764
  br label %32, !dbg !6764

; <label>:32:                                     ; preds = %30, %29, %20
  %33 = load i64, i64* %3, align 8, !dbg !6765
  ret i64 %33, !dbg !6765
}

; Function Attrs: nounwind
declare noalias i8* @calloc(i64, i64) #5

; Function Attrs: noinline nounwind uwtable
define internal i64 @next_prime(i64) #3 !dbg !6766 {
  %2 = alloca i64, align 8
  store i64 %0, i64* %2, align 8
  call void @llvm.dbg.declare(metadata i64* %2, metadata !6769, metadata !DIExpression()), !dbg !6770
  %3 = load i64, i64* %2, align 8, !dbg !6771
  %4 = icmp ult i64 %3, 10, !dbg !6773
  br i1 %4, label %5, label %6, !dbg !6774

; <label>:5:                                      ; preds = %1
  store i64 10, i64* %2, align 8, !dbg !6775
  br label %6, !dbg !6776

; <label>:6:                                      ; preds = %5, %1
  %7 = load i64, i64* %2, align 8, !dbg !6777
  %8 = or i64 %7, 1, !dbg !6777
  store i64 %8, i64* %2, align 8, !dbg !6777
  br label %9, !dbg !6778

; <label>:9:                                      ; preds = %18, %6
  %10 = load i64, i64* %2, align 8, !dbg !6779
  %11 = icmp ne i64 -1, %10, !dbg !6780
  br i1 %11, label %12, label %16, !dbg !6781

; <label>:12:                                     ; preds = %9
  %13 = load i64, i64* %2, align 8, !dbg !6782
  %14 = call zeroext i1 @is_prime(i64 %13), !dbg !6783
  %15 = xor i1 %14, true, !dbg !6784
  br label %16

; <label>:16:                                     ; preds = %12, %9
  %17 = phi i1 [ false, %9 ], [ %15, %12 ]
  br i1 %17, label %18, label %21, !dbg !6778

; <label>:18:                                     ; preds = %16
  %19 = load i64, i64* %2, align 8, !dbg !6785
  %20 = add i64 %19, 2, !dbg !6785
  store i64 %20, i64* %2, align 8, !dbg !6785
  br label %9, !dbg !6778, !llvm.loop !6786

; <label>:21:                                     ; preds = %16
  %22 = load i64, i64* %2, align 8, !dbg !6788
  ret i64 %22, !dbg !6789
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i1 @is_prime(i64) #3 !dbg !6790 {
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  store i64 %0, i64* %2, align 8
  call void @llvm.dbg.declare(metadata i64* %2, metadata !6793, metadata !DIExpression()), !dbg !6794
  call void @llvm.dbg.declare(metadata i64* %3, metadata !6795, metadata !DIExpression()), !dbg !6796
  store i64 3, i64* %3, align 8, !dbg !6796
  call void @llvm.dbg.declare(metadata i64* %4, metadata !6797, metadata !DIExpression()), !dbg !6798
  %5 = load i64, i64* %3, align 8, !dbg !6799
  %6 = load i64, i64* %3, align 8, !dbg !6800
  %7 = mul i64 %5, %6, !dbg !6801
  store i64 %7, i64* %4, align 8, !dbg !6798
  br label %8, !dbg !6802

; <label>:8:                                      ; preds = %19, %1
  %9 = load i64, i64* %4, align 8, !dbg !6803
  %10 = load i64, i64* %2, align 8, !dbg !6804
  %11 = icmp ult i64 %9, %10, !dbg !6805
  br i1 %11, label %12, label %17, !dbg !6806

; <label>:12:                                     ; preds = %8
  %13 = load i64, i64* %2, align 8, !dbg !6807
  %14 = load i64, i64* %3, align 8, !dbg !6808
  %15 = urem i64 %13, %14, !dbg !6809
  %16 = icmp ne i64 %15, 0, !dbg !6806
  br label %17

; <label>:17:                                     ; preds = %12, %8
  %18 = phi i1 [ false, %8 ], [ %16, %12 ]
  br i1 %18, label %19, label %28, !dbg !6802

; <label>:19:                                     ; preds = %17
  %20 = load i64, i64* %3, align 8, !dbg !6810
  %21 = add i64 %20, 1, !dbg !6810
  store i64 %21, i64* %3, align 8, !dbg !6810
  %22 = load i64, i64* %3, align 8, !dbg !6812
  %23 = mul i64 4, %22, !dbg !6813
  %24 = load i64, i64* %4, align 8, !dbg !6814
  %25 = add i64 %24, %23, !dbg !6814
  store i64 %25, i64* %4, align 8, !dbg !6814
  %26 = load i64, i64* %3, align 8, !dbg !6815
  %27 = add i64 %26, 1, !dbg !6815
  store i64 %27, i64* %3, align 8, !dbg !6815
  br label %8, !dbg !6802, !llvm.loop !6816

; <label>:28:                                     ; preds = %17
  %29 = load i64, i64* %2, align 8, !dbg !6818
  %30 = load i64, i64* %3, align 8, !dbg !6819
  %31 = urem i64 %29, %30, !dbg !6820
  %32 = icmp ne i64 %31, 0, !dbg !6818
  %33 = zext i1 %32 to i64, !dbg !6818
  %34 = select i1 %32, i32 1, i32 0, !dbg !6818
  %35 = icmp ne i32 %34, 0, !dbg !6821
  ret i1 %35, !dbg !6822
}

; Function Attrs: noinline nounwind uwtable
define internal i64 @rotr_sz(i64, i32) #3 !dbg !6823 {
  %3 = alloca i64, align 8
  %4 = alloca i32, align 4
  store i64 %0, i64* %3, align 8
  call void @llvm.dbg.declare(metadata i64* %3, metadata !6827, metadata !DIExpression()), !dbg !6828
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !6829, metadata !DIExpression()), !dbg !6830
  %5 = load i64, i64* %3, align 8, !dbg !6831
  %6 = load i32, i32* %4, align 4, !dbg !6832
  %7 = zext i32 %6 to i64, !dbg !6833
  %8 = lshr i64 %5, %7, !dbg !6833
  %9 = load i64, i64* %3, align 8, !dbg !6834
  %10 = load i32, i32* %4, align 4, !dbg !6835
  %11 = sext i32 %10 to i64, !dbg !6835
  %12 = sub i64 64, %11, !dbg !6836
  %13 = shl i64 %9, %12, !dbg !6837
  %14 = or i64 %8, %13, !dbg !6838
  ret i64 %14, !dbg !6839
}

; Function Attrs: noinline nounwind uwtable
define void @hash_clear(%struct.hash_table*) #3 !dbg !6840 {
  %2 = alloca %struct.hash_table*, align 8
  %3 = alloca %struct.hash_entry*, align 8
  %4 = alloca %struct.hash_entry*, align 8
  %5 = alloca %struct.hash_entry*, align 8
  store %struct.hash_table* %0, %struct.hash_table** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.hash_table** %2, metadata !6843, metadata !DIExpression()), !dbg !6844
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %3, metadata !6845, metadata !DIExpression()), !dbg !6846
  %6 = load %struct.hash_table*, %struct.hash_table** %2, align 8, !dbg !6847
  %7 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %6, i32 0, i32 0, !dbg !6849
  %8 = load %struct.hash_entry*, %struct.hash_entry** %7, align 8, !dbg !6849
  store %struct.hash_entry* %8, %struct.hash_entry** %3, align 8, !dbg !6850
  br label %9, !dbg !6851

; <label>:9:                                      ; preds = %73, %1
  %10 = load %struct.hash_entry*, %struct.hash_entry** %3, align 8, !dbg !6852
  %11 = load %struct.hash_table*, %struct.hash_table** %2, align 8, !dbg !6854
  %12 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %11, i32 0, i32 1, !dbg !6855
  %13 = load %struct.hash_entry*, %struct.hash_entry** %12, align 8, !dbg !6855
  %14 = icmp ult %struct.hash_entry* %10, %13, !dbg !6856
  br i1 %14, label %15, label %76, !dbg !6857

; <label>:15:                                     ; preds = %9
  %16 = load %struct.hash_entry*, %struct.hash_entry** %3, align 8, !dbg !6858
  %17 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %16, i32 0, i32 0, !dbg !6861
  %18 = load i8*, i8** %17, align 8, !dbg !6861
  %19 = icmp ne i8* %18, null, !dbg !6858
  br i1 %19, label %20, label %72, !dbg !6862

; <label>:20:                                     ; preds = %15
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %4, metadata !6863, metadata !DIExpression()), !dbg !6865
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %5, metadata !6866, metadata !DIExpression()), !dbg !6867
  %21 = load %struct.hash_entry*, %struct.hash_entry** %3, align 8, !dbg !6868
  %22 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %21, i32 0, i32 1, !dbg !6870
  %23 = load %struct.hash_entry*, %struct.hash_entry** %22, align 8, !dbg !6870
  store %struct.hash_entry* %23, %struct.hash_entry** %4, align 8, !dbg !6871
  br label %24, !dbg !6872

; <label>:24:                                     ; preds = %53, %20
  %25 = load %struct.hash_entry*, %struct.hash_entry** %4, align 8, !dbg !6873
  %26 = icmp ne %struct.hash_entry* %25, null, !dbg !6875
  br i1 %26, label %27, label %55, !dbg !6875

; <label>:27:                                     ; preds = %24
  %28 = load %struct.hash_table*, %struct.hash_table** %2, align 8, !dbg !6876
  %29 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %28, i32 0, i32 8, !dbg !6879
  %30 = load void (i8*)*, void (i8*)** %29, align 8, !dbg !6879
  %31 = icmp ne void (i8*)* %30, null, !dbg !6876
  br i1 %31, label %32, label %39, !dbg !6880

; <label>:32:                                     ; preds = %27
  %33 = load %struct.hash_table*, %struct.hash_table** %2, align 8, !dbg !6881
  %34 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %33, i32 0, i32 8, !dbg !6882
  %35 = load void (i8*)*, void (i8*)** %34, align 8, !dbg !6882
  %36 = load %struct.hash_entry*, %struct.hash_entry** %4, align 8, !dbg !6883
  %37 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %36, i32 0, i32 0, !dbg !6884
  %38 = load i8*, i8** %37, align 8, !dbg !6884
  call void %35(i8* %38), !dbg !6881
  br label %39, !dbg !6881

; <label>:39:                                     ; preds = %32, %27
  %40 = load %struct.hash_entry*, %struct.hash_entry** %4, align 8, !dbg !6885
  %41 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %40, i32 0, i32 0, !dbg !6886
  store i8* null, i8** %41, align 8, !dbg !6887
  %42 = load %struct.hash_entry*, %struct.hash_entry** %4, align 8, !dbg !6888
  %43 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %42, i32 0, i32 1, !dbg !6889
  %44 = load %struct.hash_entry*, %struct.hash_entry** %43, align 8, !dbg !6889
  store %struct.hash_entry* %44, %struct.hash_entry** %5, align 8, !dbg !6890
  %45 = load %struct.hash_table*, %struct.hash_table** %2, align 8, !dbg !6891
  %46 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %45, i32 0, i32 9, !dbg !6892
  %47 = load %struct.hash_entry*, %struct.hash_entry** %46, align 8, !dbg !6892
  %48 = load %struct.hash_entry*, %struct.hash_entry** %4, align 8, !dbg !6893
  %49 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %48, i32 0, i32 1, !dbg !6894
  store %struct.hash_entry* %47, %struct.hash_entry** %49, align 8, !dbg !6895
  %50 = load %struct.hash_entry*, %struct.hash_entry** %4, align 8, !dbg !6896
  %51 = load %struct.hash_table*, %struct.hash_table** %2, align 8, !dbg !6897
  %52 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %51, i32 0, i32 9, !dbg !6898
  store %struct.hash_entry* %50, %struct.hash_entry** %52, align 8, !dbg !6899
  br label %53, !dbg !6900

; <label>:53:                                     ; preds = %39
  %54 = load %struct.hash_entry*, %struct.hash_entry** %5, align 8, !dbg !6901
  store %struct.hash_entry* %54, %struct.hash_entry** %4, align 8, !dbg !6902
  br label %24, !dbg !6903, !llvm.loop !6904

; <label>:55:                                     ; preds = %24
  %56 = load %struct.hash_table*, %struct.hash_table** %2, align 8, !dbg !6906
  %57 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %56, i32 0, i32 8, !dbg !6908
  %58 = load void (i8*)*, void (i8*)** %57, align 8, !dbg !6908
  %59 = icmp ne void (i8*)* %58, null, !dbg !6906
  br i1 %59, label %60, label %67, !dbg !6909

; <label>:60:                                     ; preds = %55
  %61 = load %struct.hash_table*, %struct.hash_table** %2, align 8, !dbg !6910
  %62 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %61, i32 0, i32 8, !dbg !6911
  %63 = load void (i8*)*, void (i8*)** %62, align 8, !dbg !6911
  %64 = load %struct.hash_entry*, %struct.hash_entry** %3, align 8, !dbg !6912
  %65 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %64, i32 0, i32 0, !dbg !6913
  %66 = load i8*, i8** %65, align 8, !dbg !6913
  call void %63(i8* %66), !dbg !6910
  br label %67, !dbg !6910

; <label>:67:                                     ; preds = %60, %55
  %68 = load %struct.hash_entry*, %struct.hash_entry** %3, align 8, !dbg !6914
  %69 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %68, i32 0, i32 0, !dbg !6915
  store i8* null, i8** %69, align 8, !dbg !6916
  %70 = load %struct.hash_entry*, %struct.hash_entry** %3, align 8, !dbg !6917
  %71 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %70, i32 0, i32 1, !dbg !6918
  store %struct.hash_entry* null, %struct.hash_entry** %71, align 8, !dbg !6919
  br label %72, !dbg !6920

; <label>:72:                                     ; preds = %67, %15
  br label %73, !dbg !6921

; <label>:73:                                     ; preds = %72
  %74 = load %struct.hash_entry*, %struct.hash_entry** %3, align 8, !dbg !6922
  %75 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %74, i32 1, !dbg !6922
  store %struct.hash_entry* %75, %struct.hash_entry** %3, align 8, !dbg !6922
  br label %9, !dbg !6923, !llvm.loop !6924

; <label>:76:                                     ; preds = %9
  %77 = load %struct.hash_table*, %struct.hash_table** %2, align 8, !dbg !6926
  %78 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %77, i32 0, i32 3, !dbg !6927
  store i64 0, i64* %78, align 8, !dbg !6928
  %79 = load %struct.hash_table*, %struct.hash_table** %2, align 8, !dbg !6929
  %80 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %79, i32 0, i32 4, !dbg !6930
  store i64 0, i64* %80, align 8, !dbg !6931
  ret void, !dbg !6932
}

; Function Attrs: noinline nounwind uwtable
define void @hash_free(%struct.hash_table*) #3 !dbg !6933 {
  %2 = alloca %struct.hash_table*, align 8
  %3 = alloca %struct.hash_entry*, align 8
  %4 = alloca %struct.hash_entry*, align 8
  %5 = alloca %struct.hash_entry*, align 8
  store %struct.hash_table* %0, %struct.hash_table** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.hash_table** %2, metadata !6934, metadata !DIExpression()), !dbg !6935
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %3, metadata !6936, metadata !DIExpression()), !dbg !6937
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %4, metadata !6938, metadata !DIExpression()), !dbg !6939
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %5, metadata !6940, metadata !DIExpression()), !dbg !6941
  %6 = load %struct.hash_table*, %struct.hash_table** %2, align 8, !dbg !6942
  %7 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %6, i32 0, i32 8, !dbg !6944
  %8 = load void (i8*)*, void (i8*)** %7, align 8, !dbg !6944
  %9 = icmp ne void (i8*)* %8, null, !dbg !6942
  br i1 %9, label %10, label %52, !dbg !6945

; <label>:10:                                     ; preds = %1
  %11 = load %struct.hash_table*, %struct.hash_table** %2, align 8, !dbg !6946
  %12 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %11, i32 0, i32 4, !dbg !6947
  %13 = load i64, i64* %12, align 8, !dbg !6947
  %14 = icmp ne i64 %13, 0, !dbg !6946
  br i1 %14, label %15, label %52, !dbg !6948

; <label>:15:                                     ; preds = %10
  %16 = load %struct.hash_table*, %struct.hash_table** %2, align 8, !dbg !6949
  %17 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %16, i32 0, i32 0, !dbg !6952
  %18 = load %struct.hash_entry*, %struct.hash_entry** %17, align 8, !dbg !6952
  store %struct.hash_entry* %18, %struct.hash_entry** %3, align 8, !dbg !6953
  br label %19, !dbg !6954

; <label>:19:                                     ; preds = %48, %15
  %20 = load %struct.hash_entry*, %struct.hash_entry** %3, align 8, !dbg !6955
  %21 = load %struct.hash_table*, %struct.hash_table** %2, align 8, !dbg !6957
  %22 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %21, i32 0, i32 1, !dbg !6958
  %23 = load %struct.hash_entry*, %struct.hash_entry** %22, align 8, !dbg !6958
  %24 = icmp ult %struct.hash_entry* %20, %23, !dbg !6959
  br i1 %24, label %25, label %51, !dbg !6960

; <label>:25:                                     ; preds = %19
  %26 = load %struct.hash_entry*, %struct.hash_entry** %3, align 8, !dbg !6961
  %27 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %26, i32 0, i32 0, !dbg !6964
  %28 = load i8*, i8** %27, align 8, !dbg !6964
  %29 = icmp ne i8* %28, null, !dbg !6961
  br i1 %29, label %30, label %47, !dbg !6965

; <label>:30:                                     ; preds = %25
  %31 = load %struct.hash_entry*, %struct.hash_entry** %3, align 8, !dbg !6966
  store %struct.hash_entry* %31, %struct.hash_entry** %4, align 8, !dbg !6969
  br label %32, !dbg !6970

; <label>:32:                                     ; preds = %42, %30
  %33 = load %struct.hash_entry*, %struct.hash_entry** %4, align 8, !dbg !6971
  %34 = icmp ne %struct.hash_entry* %33, null, !dbg !6973
  br i1 %34, label %35, label %46, !dbg !6973

; <label>:35:                                     ; preds = %32
  %36 = load %struct.hash_table*, %struct.hash_table** %2, align 8, !dbg !6974
  %37 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %36, i32 0, i32 8, !dbg !6975
  %38 = load void (i8*)*, void (i8*)** %37, align 8, !dbg !6975
  %39 = load %struct.hash_entry*, %struct.hash_entry** %4, align 8, !dbg !6976
  %40 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %39, i32 0, i32 0, !dbg !6977
  %41 = load i8*, i8** %40, align 8, !dbg !6977
  call void %38(i8* %41), !dbg !6974
  br label %42, !dbg !6974

; <label>:42:                                     ; preds = %35
  %43 = load %struct.hash_entry*, %struct.hash_entry** %4, align 8, !dbg !6978
  %44 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %43, i32 0, i32 1, !dbg !6979
  %45 = load %struct.hash_entry*, %struct.hash_entry** %44, align 8, !dbg !6979
  store %struct.hash_entry* %45, %struct.hash_entry** %4, align 8, !dbg !6980
  br label %32, !dbg !6981, !llvm.loop !6982

; <label>:46:                                     ; preds = %32
  br label %47, !dbg !6984

; <label>:47:                                     ; preds = %46, %25
  br label %48, !dbg !6985

; <label>:48:                                     ; preds = %47
  %49 = load %struct.hash_entry*, %struct.hash_entry** %3, align 8, !dbg !6986
  %50 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %49, i32 1, !dbg !6986
  store %struct.hash_entry* %50, %struct.hash_entry** %3, align 8, !dbg !6986
  br label %19, !dbg !6987, !llvm.loop !6988

; <label>:51:                                     ; preds = %19
  br label %52, !dbg !6990

; <label>:52:                                     ; preds = %51, %10, %1
  %53 = load %struct.hash_table*, %struct.hash_table** %2, align 8, !dbg !6991
  %54 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %53, i32 0, i32 0, !dbg !6993
  %55 = load %struct.hash_entry*, %struct.hash_entry** %54, align 8, !dbg !6993
  store %struct.hash_entry* %55, %struct.hash_entry** %3, align 8, !dbg !6994
  br label %56, !dbg !6995

; <label>:56:                                     ; preds = %78, %52
  %57 = load %struct.hash_entry*, %struct.hash_entry** %3, align 8, !dbg !6996
  %58 = load %struct.hash_table*, %struct.hash_table** %2, align 8, !dbg !6998
  %59 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %58, i32 0, i32 1, !dbg !6999
  %60 = load %struct.hash_entry*, %struct.hash_entry** %59, align 8, !dbg !6999
  %61 = icmp ult %struct.hash_entry* %57, %60, !dbg !7000
  br i1 %61, label %62, label %81, !dbg !7001

; <label>:62:                                     ; preds = %56
  %63 = load %struct.hash_entry*, %struct.hash_entry** %3, align 8, !dbg !7002
  %64 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %63, i32 0, i32 1, !dbg !7005
  %65 = load %struct.hash_entry*, %struct.hash_entry** %64, align 8, !dbg !7005
  store %struct.hash_entry* %65, %struct.hash_entry** %4, align 8, !dbg !7006
  br label %66, !dbg !7007

; <label>:66:                                     ; preds = %75, %62
  %67 = load %struct.hash_entry*, %struct.hash_entry** %4, align 8, !dbg !7008
  %68 = icmp ne %struct.hash_entry* %67, null, !dbg !7010
  br i1 %68, label %69, label %77, !dbg !7010

; <label>:69:                                     ; preds = %66
  %70 = load %struct.hash_entry*, %struct.hash_entry** %4, align 8, !dbg !7011
  %71 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %70, i32 0, i32 1, !dbg !7013
  %72 = load %struct.hash_entry*, %struct.hash_entry** %71, align 8, !dbg !7013
  store %struct.hash_entry* %72, %struct.hash_entry** %5, align 8, !dbg !7014
  %73 = load %struct.hash_entry*, %struct.hash_entry** %4, align 8, !dbg !7015
  %74 = bitcast %struct.hash_entry* %73 to i8*, !dbg !7015
  call void @free(i8* %74) #8, !dbg !7016
  br label %75, !dbg !7017

; <label>:75:                                     ; preds = %69
  %76 = load %struct.hash_entry*, %struct.hash_entry** %5, align 8, !dbg !7018
  store %struct.hash_entry* %76, %struct.hash_entry** %4, align 8, !dbg !7019
  br label %66, !dbg !7020, !llvm.loop !7021

; <label>:77:                                     ; preds = %66
  br label %78, !dbg !7023

; <label>:78:                                     ; preds = %77
  %79 = load %struct.hash_entry*, %struct.hash_entry** %3, align 8, !dbg !7024
  %80 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %79, i32 1, !dbg !7024
  store %struct.hash_entry* %80, %struct.hash_entry** %3, align 8, !dbg !7024
  br label %56, !dbg !7025, !llvm.loop !7026

; <label>:81:                                     ; preds = %56
  %82 = load %struct.hash_table*, %struct.hash_table** %2, align 8, !dbg !7028
  %83 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %82, i32 0, i32 9, !dbg !7030
  %84 = load %struct.hash_entry*, %struct.hash_entry** %83, align 8, !dbg !7030
  store %struct.hash_entry* %84, %struct.hash_entry** %4, align 8, !dbg !7031
  br label %85, !dbg !7032

; <label>:85:                                     ; preds = %94, %81
  %86 = load %struct.hash_entry*, %struct.hash_entry** %4, align 8, !dbg !7033
  %87 = icmp ne %struct.hash_entry* %86, null, !dbg !7035
  br i1 %87, label %88, label %96, !dbg !7035

; <label>:88:                                     ; preds = %85
  %89 = load %struct.hash_entry*, %struct.hash_entry** %4, align 8, !dbg !7036
  %90 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %89, i32 0, i32 1, !dbg !7038
  %91 = load %struct.hash_entry*, %struct.hash_entry** %90, align 8, !dbg !7038
  store %struct.hash_entry* %91, %struct.hash_entry** %5, align 8, !dbg !7039
  %92 = load %struct.hash_entry*, %struct.hash_entry** %4, align 8, !dbg !7040
  %93 = bitcast %struct.hash_entry* %92 to i8*, !dbg !7040
  call void @free(i8* %93) #8, !dbg !7041
  br label %94, !dbg !7042

; <label>:94:                                     ; preds = %88
  %95 = load %struct.hash_entry*, %struct.hash_entry** %5, align 8, !dbg !7043
  store %struct.hash_entry* %95, %struct.hash_entry** %4, align 8, !dbg !7044
  br label %85, !dbg !7045, !llvm.loop !7046

; <label>:96:                                     ; preds = %85
  %97 = load %struct.hash_table*, %struct.hash_table** %2, align 8, !dbg !7048
  %98 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %97, i32 0, i32 0, !dbg !7049
  %99 = load %struct.hash_entry*, %struct.hash_entry** %98, align 8, !dbg !7049
  %100 = bitcast %struct.hash_entry* %99 to i8*, !dbg !7048
  call void @free(i8* %100) #8, !dbg !7050
  %101 = load %struct.hash_table*, %struct.hash_table** %2, align 8, !dbg !7051
  %102 = bitcast %struct.hash_table* %101 to i8*, !dbg !7051
  call void @free(i8* %102) #8, !dbg !7052
  ret void, !dbg !7053
}

; Function Attrs: noinline nounwind uwtable
define zeroext i1 @hash_rehash(%struct.hash_table*, i64) #3 !dbg !7054 {
  %3 = alloca i1, align 1
  %4 = alloca %struct.hash_table*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %struct.hash_table, align 8
  %7 = alloca %struct.hash_table*, align 8
  %8 = alloca i64, align 8
  store %struct.hash_table* %0, %struct.hash_table** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.hash_table** %4, metadata !7057, metadata !DIExpression()), !dbg !7058
  store i64 %1, i64* %5, align 8
  call void @llvm.dbg.declare(metadata i64* %5, metadata !7059, metadata !DIExpression()), !dbg !7060
  call void @llvm.dbg.declare(metadata %struct.hash_table* %6, metadata !7061, metadata !DIExpression()), !dbg !7062
  call void @llvm.dbg.declare(metadata %struct.hash_table** %7, metadata !7063, metadata !DIExpression()), !dbg !7064
  call void @llvm.dbg.declare(metadata i64* %8, metadata !7065, metadata !DIExpression()), !dbg !7066
  %9 = load i64, i64* %5, align 8, !dbg !7067
  %10 = load %struct.hash_table*, %struct.hash_table** %4, align 8, !dbg !7068
  %11 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %10, i32 0, i32 5, !dbg !7069
  %12 = load %struct.hash_tuning*, %struct.hash_tuning** %11, align 8, !dbg !7069
  %13 = call i64 @compute_bucket_size(i64 %9, %struct.hash_tuning* %12), !dbg !7070
  store i64 %13, i64* %8, align 8, !dbg !7066
  %14 = load i64, i64* %8, align 8, !dbg !7071
  %15 = icmp ne i64 %14, 0, !dbg !7071
  br i1 %15, label %17, label %16, !dbg !7073

; <label>:16:                                     ; preds = %2
  store i1 false, i1* %3, align 1, !dbg !7074
  br label %127, !dbg !7074

; <label>:17:                                     ; preds = %2
  %18 = load i64, i64* %8, align 8, !dbg !7075
  %19 = load %struct.hash_table*, %struct.hash_table** %4, align 8, !dbg !7077
  %20 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %19, i32 0, i32 2, !dbg !7078
  %21 = load i64, i64* %20, align 8, !dbg !7078
  %22 = icmp eq i64 %18, %21, !dbg !7079
  br i1 %22, label %23, label %24, !dbg !7080

; <label>:23:                                     ; preds = %17
  store i1 true, i1* %3, align 1, !dbg !7081
  br label %127, !dbg !7081

; <label>:24:                                     ; preds = %17
  store %struct.hash_table* %6, %struct.hash_table** %7, align 8, !dbg !7082
  %25 = load i64, i64* %8, align 8, !dbg !7083
  %26 = call noalias i8* @calloc(i64 %25, i64 16) #8, !dbg !7084
  %27 = bitcast i8* %26 to %struct.hash_entry*, !dbg !7084
  %28 = load %struct.hash_table*, %struct.hash_table** %7, align 8, !dbg !7085
  %29 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %28, i32 0, i32 0, !dbg !7086
  store %struct.hash_entry* %27, %struct.hash_entry** %29, align 8, !dbg !7087
  %30 = load %struct.hash_table*, %struct.hash_table** %7, align 8, !dbg !7088
  %31 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %30, i32 0, i32 0, !dbg !7090
  %32 = load %struct.hash_entry*, %struct.hash_entry** %31, align 8, !dbg !7090
  %33 = icmp eq %struct.hash_entry* %32, null, !dbg !7091
  br i1 %33, label %34, label %35, !dbg !7092

; <label>:34:                                     ; preds = %24
  store i1 false, i1* %3, align 1, !dbg !7093
  br label %127, !dbg !7093

; <label>:35:                                     ; preds = %24
  %36 = load i64, i64* %8, align 8, !dbg !7094
  %37 = load %struct.hash_table*, %struct.hash_table** %7, align 8, !dbg !7095
  %38 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %37, i32 0, i32 2, !dbg !7096
  store i64 %36, i64* %38, align 8, !dbg !7097
  %39 = load %struct.hash_table*, %struct.hash_table** %7, align 8, !dbg !7098
  %40 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %39, i32 0, i32 0, !dbg !7099
  %41 = load %struct.hash_entry*, %struct.hash_entry** %40, align 8, !dbg !7099
  %42 = load i64, i64* %8, align 8, !dbg !7100
  %43 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %41, i64 %42, !dbg !7101
  %44 = load %struct.hash_table*, %struct.hash_table** %7, align 8, !dbg !7102
  %45 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %44, i32 0, i32 1, !dbg !7103
  store %struct.hash_entry* %43, %struct.hash_entry** %45, align 8, !dbg !7104
  %46 = load %struct.hash_table*, %struct.hash_table** %7, align 8, !dbg !7105
  %47 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %46, i32 0, i32 3, !dbg !7106
  store i64 0, i64* %47, align 8, !dbg !7107
  %48 = load %struct.hash_table*, %struct.hash_table** %7, align 8, !dbg !7108
  %49 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %48, i32 0, i32 4, !dbg !7109
  store i64 0, i64* %49, align 8, !dbg !7110
  %50 = load %struct.hash_table*, %struct.hash_table** %4, align 8, !dbg !7111
  %51 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %50, i32 0, i32 5, !dbg !7112
  %52 = load %struct.hash_tuning*, %struct.hash_tuning** %51, align 8, !dbg !7112
  %53 = load %struct.hash_table*, %struct.hash_table** %7, align 8, !dbg !7113
  %54 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %53, i32 0, i32 5, !dbg !7114
  store %struct.hash_tuning* %52, %struct.hash_tuning** %54, align 8, !dbg !7115
  %55 = load %struct.hash_table*, %struct.hash_table** %4, align 8, !dbg !7116
  %56 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %55, i32 0, i32 6, !dbg !7117
  %57 = load i64 (i8*, i64)*, i64 (i8*, i64)** %56, align 8, !dbg !7117
  %58 = load %struct.hash_table*, %struct.hash_table** %7, align 8, !dbg !7118
  %59 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %58, i32 0, i32 6, !dbg !7119
  store i64 (i8*, i64)* %57, i64 (i8*, i64)** %59, align 8, !dbg !7120
  %60 = load %struct.hash_table*, %struct.hash_table** %4, align 8, !dbg !7121
  %61 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %60, i32 0, i32 7, !dbg !7122
  %62 = load i1 (i8*, i8*)*, i1 (i8*, i8*)** %61, align 8, !dbg !7122
  %63 = load %struct.hash_table*, %struct.hash_table** %7, align 8, !dbg !7123
  %64 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %63, i32 0, i32 7, !dbg !7124
  store i1 (i8*, i8*)* %62, i1 (i8*, i8*)** %64, align 8, !dbg !7125
  %65 = load %struct.hash_table*, %struct.hash_table** %4, align 8, !dbg !7126
  %66 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %65, i32 0, i32 8, !dbg !7127
  %67 = load void (i8*)*, void (i8*)** %66, align 8, !dbg !7127
  %68 = load %struct.hash_table*, %struct.hash_table** %7, align 8, !dbg !7128
  %69 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %68, i32 0, i32 8, !dbg !7129
  store void (i8*)* %67, void (i8*)** %69, align 8, !dbg !7130
  %70 = load %struct.hash_table*, %struct.hash_table** %4, align 8, !dbg !7131
  %71 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %70, i32 0, i32 9, !dbg !7132
  %72 = load %struct.hash_entry*, %struct.hash_entry** %71, align 8, !dbg !7132
  %73 = load %struct.hash_table*, %struct.hash_table** %7, align 8, !dbg !7133
  %74 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %73, i32 0, i32 9, !dbg !7134
  store %struct.hash_entry* %72, %struct.hash_entry** %74, align 8, !dbg !7135
  %75 = load %struct.hash_table*, %struct.hash_table** %7, align 8, !dbg !7136
  %76 = load %struct.hash_table*, %struct.hash_table** %4, align 8, !dbg !7138
  %77 = call zeroext i1 @transfer_entries(%struct.hash_table* %75, %struct.hash_table* %76, i1 zeroext false), !dbg !7139
  br i1 %77, label %78, label %108, !dbg !7140

; <label>:78:                                     ; preds = %35
  %79 = load %struct.hash_table*, %struct.hash_table** %4, align 8, !dbg !7141
  %80 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %79, i32 0, i32 0, !dbg !7143
  %81 = load %struct.hash_entry*, %struct.hash_entry** %80, align 8, !dbg !7143
  %82 = bitcast %struct.hash_entry* %81 to i8*, !dbg !7141
  call void @free(i8* %82) #8, !dbg !7144
  %83 = load %struct.hash_table*, %struct.hash_table** %7, align 8, !dbg !7145
  %84 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %83, i32 0, i32 0, !dbg !7146
  %85 = load %struct.hash_entry*, %struct.hash_entry** %84, align 8, !dbg !7146
  %86 = load %struct.hash_table*, %struct.hash_table** %4, align 8, !dbg !7147
  %87 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %86, i32 0, i32 0, !dbg !7148
  store %struct.hash_entry* %85, %struct.hash_entry** %87, align 8, !dbg !7149
  %88 = load %struct.hash_table*, %struct.hash_table** %7, align 8, !dbg !7150
  %89 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %88, i32 0, i32 1, !dbg !7151
  %90 = load %struct.hash_entry*, %struct.hash_entry** %89, align 8, !dbg !7151
  %91 = load %struct.hash_table*, %struct.hash_table** %4, align 8, !dbg !7152
  %92 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %91, i32 0, i32 1, !dbg !7153
  store %struct.hash_entry* %90, %struct.hash_entry** %92, align 8, !dbg !7154
  %93 = load %struct.hash_table*, %struct.hash_table** %7, align 8, !dbg !7155
  %94 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %93, i32 0, i32 2, !dbg !7156
  %95 = load i64, i64* %94, align 8, !dbg !7156
  %96 = load %struct.hash_table*, %struct.hash_table** %4, align 8, !dbg !7157
  %97 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %96, i32 0, i32 2, !dbg !7158
  store i64 %95, i64* %97, align 8, !dbg !7159
  %98 = load %struct.hash_table*, %struct.hash_table** %7, align 8, !dbg !7160
  %99 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %98, i32 0, i32 3, !dbg !7161
  %100 = load i64, i64* %99, align 8, !dbg !7161
  %101 = load %struct.hash_table*, %struct.hash_table** %4, align 8, !dbg !7162
  %102 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %101, i32 0, i32 3, !dbg !7163
  store i64 %100, i64* %102, align 8, !dbg !7164
  %103 = load %struct.hash_table*, %struct.hash_table** %7, align 8, !dbg !7165
  %104 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %103, i32 0, i32 9, !dbg !7166
  %105 = load %struct.hash_entry*, %struct.hash_entry** %104, align 8, !dbg !7166
  %106 = load %struct.hash_table*, %struct.hash_table** %4, align 8, !dbg !7167
  %107 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %106, i32 0, i32 9, !dbg !7168
  store %struct.hash_entry* %105, %struct.hash_entry** %107, align 8, !dbg !7169
  store i1 true, i1* %3, align 1, !dbg !7170
  br label %127, !dbg !7170

; <label>:108:                                    ; preds = %35
  %109 = load %struct.hash_table*, %struct.hash_table** %7, align 8, !dbg !7171
  %110 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %109, i32 0, i32 9, !dbg !7172
  %111 = load %struct.hash_entry*, %struct.hash_entry** %110, align 8, !dbg !7172
  %112 = load %struct.hash_table*, %struct.hash_table** %4, align 8, !dbg !7173
  %113 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %112, i32 0, i32 9, !dbg !7174
  store %struct.hash_entry* %111, %struct.hash_entry** %113, align 8, !dbg !7175
  %114 = load %struct.hash_table*, %struct.hash_table** %4, align 8, !dbg !7176
  %115 = load %struct.hash_table*, %struct.hash_table** %7, align 8, !dbg !7178
  %116 = call zeroext i1 @transfer_entries(%struct.hash_table* %114, %struct.hash_table* %115, i1 zeroext true), !dbg !7179
  br i1 %116, label %117, label %121, !dbg !7180

; <label>:117:                                    ; preds = %108
  %118 = load %struct.hash_table*, %struct.hash_table** %4, align 8, !dbg !7181
  %119 = load %struct.hash_table*, %struct.hash_table** %7, align 8, !dbg !7182
  %120 = call zeroext i1 @transfer_entries(%struct.hash_table* %118, %struct.hash_table* %119, i1 zeroext false), !dbg !7183
  br i1 %120, label %122, label %121, !dbg !7184

; <label>:121:                                    ; preds = %117, %108
  call void @abort() #11, !dbg !7185
  unreachable, !dbg !7185

; <label>:122:                                    ; preds = %117
  %123 = load %struct.hash_table*, %struct.hash_table** %7, align 8, !dbg !7186
  %124 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %123, i32 0, i32 0, !dbg !7187
  %125 = load %struct.hash_entry*, %struct.hash_entry** %124, align 8, !dbg !7187
  %126 = bitcast %struct.hash_entry* %125 to i8*, !dbg !7186
  call void @free(i8* %126) #8, !dbg !7188
  store i1 false, i1* %3, align 1, !dbg !7189
  br label %127, !dbg !7189

; <label>:127:                                    ; preds = %122, %78, %34, %23, %16
  %128 = load i1, i1* %3, align 1, !dbg !7190
  ret i1 %128, !dbg !7190
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i1 @transfer_entries(%struct.hash_table*, %struct.hash_table*, i1 zeroext) #3 !dbg !7191 {
  %4 = alloca i1, align 1
  %5 = alloca %struct.hash_table*, align 8
  %6 = alloca %struct.hash_table*, align 8
  %7 = alloca i8, align 1
  %8 = alloca %struct.hash_entry*, align 8
  %9 = alloca %struct.hash_entry*, align 8
  %10 = alloca %struct.hash_entry*, align 8
  %11 = alloca i8*, align 8
  %12 = alloca %struct.hash_entry*, align 8
  %13 = alloca %struct.hash_entry*, align 8
  store %struct.hash_table* %0, %struct.hash_table** %5, align 8
  call void @llvm.dbg.declare(metadata %struct.hash_table** %5, metadata !7194, metadata !DIExpression()), !dbg !7195
  store %struct.hash_table* %1, %struct.hash_table** %6, align 8
  call void @llvm.dbg.declare(metadata %struct.hash_table** %6, metadata !7196, metadata !DIExpression()), !dbg !7197
  %14 = zext i1 %2 to i8
  store i8 %14, i8* %7, align 1
  call void @llvm.dbg.declare(metadata i8* %7, metadata !7198, metadata !DIExpression()), !dbg !7199
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %8, metadata !7200, metadata !DIExpression()), !dbg !7201
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %9, metadata !7202, metadata !DIExpression()), !dbg !7203
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %10, metadata !7204, metadata !DIExpression()), !dbg !7205
  %15 = load %struct.hash_table*, %struct.hash_table** %6, align 8, !dbg !7206
  %16 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %15, i32 0, i32 0, !dbg !7208
  %17 = load %struct.hash_entry*, %struct.hash_entry** %16, align 8, !dbg !7208
  store %struct.hash_entry* %17, %struct.hash_entry** %8, align 8, !dbg !7209
  br label %18, !dbg !7210

; <label>:18:                                     ; preds = %155, %3
  %19 = load %struct.hash_entry*, %struct.hash_entry** %8, align 8, !dbg !7211
  %20 = load %struct.hash_table*, %struct.hash_table** %6, align 8, !dbg !7213
  %21 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %20, i32 0, i32 1, !dbg !7214
  %22 = load %struct.hash_entry*, %struct.hash_entry** %21, align 8, !dbg !7214
  %23 = icmp ult %struct.hash_entry* %19, %22, !dbg !7215
  br i1 %23, label %24, label %158, !dbg !7216

; <label>:24:                                     ; preds = %18
  %25 = load %struct.hash_entry*, %struct.hash_entry** %8, align 8, !dbg !7217
  %26 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %25, i32 0, i32 0, !dbg !7219
  %27 = load i8*, i8** %26, align 8, !dbg !7219
  %28 = icmp ne i8* %27, null, !dbg !7217
  br i1 %28, label %29, label %154, !dbg !7220

; <label>:29:                                     ; preds = %24
  call void @llvm.dbg.declare(metadata i8** %11, metadata !7221, metadata !DIExpression()), !dbg !7223
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %12, metadata !7224, metadata !DIExpression()), !dbg !7225
  %30 = load %struct.hash_entry*, %struct.hash_entry** %8, align 8, !dbg !7226
  %31 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %30, i32 0, i32 1, !dbg !7228
  %32 = load %struct.hash_entry*, %struct.hash_entry** %31, align 8, !dbg !7228
  store %struct.hash_entry* %32, %struct.hash_entry** %9, align 8, !dbg !7229
  br label %33, !dbg !7230

; <label>:33:                                     ; preds = %86, %29
  %34 = load %struct.hash_entry*, %struct.hash_entry** %9, align 8, !dbg !7231
  %35 = icmp ne %struct.hash_entry* %34, null, !dbg !7233
  br i1 %35, label %36, label %88, !dbg !7233

; <label>:36:                                     ; preds = %33
  %37 = load %struct.hash_entry*, %struct.hash_entry** %9, align 8, !dbg !7234
  %38 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %37, i32 0, i32 0, !dbg !7236
  %39 = load i8*, i8** %38, align 8, !dbg !7236
  store i8* %39, i8** %11, align 8, !dbg !7237
  %40 = load %struct.hash_table*, %struct.hash_table** %5, align 8, !dbg !7238
  %41 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %40, i32 0, i32 0, !dbg !7239
  %42 = load %struct.hash_entry*, %struct.hash_entry** %41, align 8, !dbg !7239
  %43 = load %struct.hash_table*, %struct.hash_table** %5, align 8, !dbg !7240
  %44 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %43, i32 0, i32 6, !dbg !7241
  %45 = load i64 (i8*, i64)*, i64 (i8*, i64)** %44, align 8, !dbg !7241
  %46 = load i8*, i8** %11, align 8, !dbg !7242
  %47 = load %struct.hash_table*, %struct.hash_table** %5, align 8, !dbg !7243
  %48 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %47, i32 0, i32 2, !dbg !7244
  %49 = load i64, i64* %48, align 8, !dbg !7244
  %50 = call i64 %45(i8* %46, i64 %49), !dbg !7240
  %51 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %42, i64 %50, !dbg !7245
  store %struct.hash_entry* %51, %struct.hash_entry** %12, align 8, !dbg !7246
  %52 = load %struct.hash_entry*, %struct.hash_entry** %12, align 8, !dbg !7247
  %53 = load %struct.hash_table*, %struct.hash_table** %5, align 8, !dbg !7249
  %54 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %53, i32 0, i32 1, !dbg !7250
  %55 = load %struct.hash_entry*, %struct.hash_entry** %54, align 8, !dbg !7250
  %56 = icmp ult %struct.hash_entry* %52, %55, !dbg !7251
  br i1 %56, label %58, label %57, !dbg !7252

; <label>:57:                                     ; preds = %36
  call void @abort() #11, !dbg !7253
  unreachable, !dbg !7253

; <label>:58:                                     ; preds = %36
  %59 = load %struct.hash_entry*, %struct.hash_entry** %9, align 8, !dbg !7254
  %60 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %59, i32 0, i32 1, !dbg !7255
  %61 = load %struct.hash_entry*, %struct.hash_entry** %60, align 8, !dbg !7255
  store %struct.hash_entry* %61, %struct.hash_entry** %10, align 8, !dbg !7256
  %62 = load %struct.hash_entry*, %struct.hash_entry** %12, align 8, !dbg !7257
  %63 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %62, i32 0, i32 0, !dbg !7259
  %64 = load i8*, i8** %63, align 8, !dbg !7259
  %65 = icmp ne i8* %64, null, !dbg !7257
  br i1 %65, label %66, label %75, !dbg !7260

; <label>:66:                                     ; preds = %58
  %67 = load %struct.hash_entry*, %struct.hash_entry** %12, align 8, !dbg !7261
  %68 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %67, i32 0, i32 1, !dbg !7263
  %69 = load %struct.hash_entry*, %struct.hash_entry** %68, align 8, !dbg !7263
  %70 = load %struct.hash_entry*, %struct.hash_entry** %9, align 8, !dbg !7264
  %71 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %70, i32 0, i32 1, !dbg !7265
  store %struct.hash_entry* %69, %struct.hash_entry** %71, align 8, !dbg !7266
  %72 = load %struct.hash_entry*, %struct.hash_entry** %9, align 8, !dbg !7267
  %73 = load %struct.hash_entry*, %struct.hash_entry** %12, align 8, !dbg !7268
  %74 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %73, i32 0, i32 1, !dbg !7269
  store %struct.hash_entry* %72, %struct.hash_entry** %74, align 8, !dbg !7270
  br label %85, !dbg !7271

; <label>:75:                                     ; preds = %58
  %76 = load i8*, i8** %11, align 8, !dbg !7272
  %77 = load %struct.hash_entry*, %struct.hash_entry** %12, align 8, !dbg !7274
  %78 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %77, i32 0, i32 0, !dbg !7275
  store i8* %76, i8** %78, align 8, !dbg !7276
  %79 = load %struct.hash_table*, %struct.hash_table** %5, align 8, !dbg !7277
  %80 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %79, i32 0, i32 3, !dbg !7278
  %81 = load i64, i64* %80, align 8, !dbg !7279
  %82 = add i64 %81, 1, !dbg !7279
  store i64 %82, i64* %80, align 8, !dbg !7279
  %83 = load %struct.hash_table*, %struct.hash_table** %5, align 8, !dbg !7280
  %84 = load %struct.hash_entry*, %struct.hash_entry** %9, align 8, !dbg !7281
  call void @free_entry(%struct.hash_table* %83, %struct.hash_entry* %84), !dbg !7282
  br label %85

; <label>:85:                                     ; preds = %75, %66
  br label %86, !dbg !7283

; <label>:86:                                     ; preds = %85
  %87 = load %struct.hash_entry*, %struct.hash_entry** %10, align 8, !dbg !7284
  store %struct.hash_entry* %87, %struct.hash_entry** %9, align 8, !dbg !7285
  br label %33, !dbg !7286, !llvm.loop !7287

; <label>:88:                                     ; preds = %33
  %89 = load %struct.hash_entry*, %struct.hash_entry** %8, align 8, !dbg !7289
  %90 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %89, i32 0, i32 0, !dbg !7290
  %91 = load i8*, i8** %90, align 8, !dbg !7290
  store i8* %91, i8** %11, align 8, !dbg !7291
  %92 = load %struct.hash_entry*, %struct.hash_entry** %8, align 8, !dbg !7292
  %93 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %92, i32 0, i32 1, !dbg !7293
  store %struct.hash_entry* null, %struct.hash_entry** %93, align 8, !dbg !7294
  %94 = load i8, i8* %7, align 1, !dbg !7295
  %95 = trunc i8 %94 to i1, !dbg !7295
  br i1 %95, label %96, label %97, !dbg !7297

; <label>:96:                                     ; preds = %88
  br label %155, !dbg !7298

; <label>:97:                                     ; preds = %88
  %98 = load %struct.hash_table*, %struct.hash_table** %5, align 8, !dbg !7299
  %99 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %98, i32 0, i32 0, !dbg !7300
  %100 = load %struct.hash_entry*, %struct.hash_entry** %99, align 8, !dbg !7300
  %101 = load %struct.hash_table*, %struct.hash_table** %5, align 8, !dbg !7301
  %102 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %101, i32 0, i32 6, !dbg !7302
  %103 = load i64 (i8*, i64)*, i64 (i8*, i64)** %102, align 8, !dbg !7302
  %104 = load i8*, i8** %11, align 8, !dbg !7303
  %105 = load %struct.hash_table*, %struct.hash_table** %5, align 8, !dbg !7304
  %106 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %105, i32 0, i32 2, !dbg !7305
  %107 = load i64, i64* %106, align 8, !dbg !7305
  %108 = call i64 %103(i8* %104, i64 %107), !dbg !7301
  %109 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %100, i64 %108, !dbg !7306
  store %struct.hash_entry* %109, %struct.hash_entry** %12, align 8, !dbg !7307
  %110 = load %struct.hash_entry*, %struct.hash_entry** %12, align 8, !dbg !7308
  %111 = load %struct.hash_table*, %struct.hash_table** %5, align 8, !dbg !7310
  %112 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %111, i32 0, i32 1, !dbg !7311
  %113 = load %struct.hash_entry*, %struct.hash_entry** %112, align 8, !dbg !7311
  %114 = icmp ult %struct.hash_entry* %110, %113, !dbg !7312
  br i1 %114, label %116, label %115, !dbg !7313

; <label>:115:                                    ; preds = %97
  call void @abort() #11, !dbg !7314
  unreachable, !dbg !7314

; <label>:116:                                    ; preds = %97
  %117 = load %struct.hash_entry*, %struct.hash_entry** %12, align 8, !dbg !7315
  %118 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %117, i32 0, i32 0, !dbg !7317
  %119 = load i8*, i8** %118, align 8, !dbg !7317
  %120 = icmp ne i8* %119, null, !dbg !7315
  br i1 %120, label %121, label %139, !dbg !7318

; <label>:121:                                    ; preds = %116
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %13, metadata !7319, metadata !DIExpression()), !dbg !7321
  %122 = load %struct.hash_table*, %struct.hash_table** %5, align 8, !dbg !7322
  %123 = call %struct.hash_entry* @allocate_entry(%struct.hash_table* %122), !dbg !7323
  store %struct.hash_entry* %123, %struct.hash_entry** %13, align 8, !dbg !7321
  %124 = load %struct.hash_entry*, %struct.hash_entry** %13, align 8, !dbg !7324
  %125 = icmp eq %struct.hash_entry* %124, null, !dbg !7326
  br i1 %125, label %126, label %127, !dbg !7327

; <label>:126:                                    ; preds = %121
  store i1 false, i1* %4, align 1, !dbg !7328
  br label %159, !dbg !7328

; <label>:127:                                    ; preds = %121
  %128 = load i8*, i8** %11, align 8, !dbg !7329
  %129 = load %struct.hash_entry*, %struct.hash_entry** %13, align 8, !dbg !7330
  %130 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %129, i32 0, i32 0, !dbg !7331
  store i8* %128, i8** %130, align 8, !dbg !7332
  %131 = load %struct.hash_entry*, %struct.hash_entry** %12, align 8, !dbg !7333
  %132 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %131, i32 0, i32 1, !dbg !7334
  %133 = load %struct.hash_entry*, %struct.hash_entry** %132, align 8, !dbg !7334
  %134 = load %struct.hash_entry*, %struct.hash_entry** %13, align 8, !dbg !7335
  %135 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %134, i32 0, i32 1, !dbg !7336
  store %struct.hash_entry* %133, %struct.hash_entry** %135, align 8, !dbg !7337
  %136 = load %struct.hash_entry*, %struct.hash_entry** %13, align 8, !dbg !7338
  %137 = load %struct.hash_entry*, %struct.hash_entry** %12, align 8, !dbg !7339
  %138 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %137, i32 0, i32 1, !dbg !7340
  store %struct.hash_entry* %136, %struct.hash_entry** %138, align 8, !dbg !7341
  br label %147, !dbg !7342

; <label>:139:                                    ; preds = %116
  %140 = load i8*, i8** %11, align 8, !dbg !7343
  %141 = load %struct.hash_entry*, %struct.hash_entry** %12, align 8, !dbg !7345
  %142 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %141, i32 0, i32 0, !dbg !7346
  store i8* %140, i8** %142, align 8, !dbg !7347
  %143 = load %struct.hash_table*, %struct.hash_table** %5, align 8, !dbg !7348
  %144 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %143, i32 0, i32 3, !dbg !7349
  %145 = load i64, i64* %144, align 8, !dbg !7350
  %146 = add i64 %145, 1, !dbg !7350
  store i64 %146, i64* %144, align 8, !dbg !7350
  br label %147

; <label>:147:                                    ; preds = %139, %127
  %148 = load %struct.hash_entry*, %struct.hash_entry** %8, align 8, !dbg !7351
  %149 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %148, i32 0, i32 0, !dbg !7352
  store i8* null, i8** %149, align 8, !dbg !7353
  %150 = load %struct.hash_table*, %struct.hash_table** %6, align 8, !dbg !7354
  %151 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %150, i32 0, i32 3, !dbg !7355
  %152 = load i64, i64* %151, align 8, !dbg !7356
  %153 = add i64 %152, -1, !dbg !7356
  store i64 %153, i64* %151, align 8, !dbg !7356
  br label %154, !dbg !7357

; <label>:154:                                    ; preds = %147, %24
  br label %155, !dbg !7219

; <label>:155:                                    ; preds = %154, %96
  %156 = load %struct.hash_entry*, %struct.hash_entry** %8, align 8, !dbg !7358
  %157 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %156, i32 1, !dbg !7358
  store %struct.hash_entry* %157, %struct.hash_entry** %8, align 8, !dbg !7358
  br label %18, !dbg !7359, !llvm.loop !7360

; <label>:158:                                    ; preds = %18
  store i1 true, i1* %4, align 1, !dbg !7362
  br label %159, !dbg !7362

; <label>:159:                                    ; preds = %158, %126
  %160 = load i1, i1* %4, align 1, !dbg !7363
  ret i1 %160, !dbg !7363
}

; Function Attrs: noinline nounwind uwtable
define internal void @free_entry(%struct.hash_table*, %struct.hash_entry*) #3 !dbg !7364 {
  %3 = alloca %struct.hash_table*, align 8
  %4 = alloca %struct.hash_entry*, align 8
  store %struct.hash_table* %0, %struct.hash_table** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.hash_table** %3, metadata !7367, metadata !DIExpression()), !dbg !7368
  store %struct.hash_entry* %1, %struct.hash_entry** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %4, metadata !7369, metadata !DIExpression()), !dbg !7370
  %5 = load %struct.hash_entry*, %struct.hash_entry** %4, align 8, !dbg !7371
  %6 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %5, i32 0, i32 0, !dbg !7372
  store i8* null, i8** %6, align 8, !dbg !7373
  %7 = load %struct.hash_table*, %struct.hash_table** %3, align 8, !dbg !7374
  %8 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %7, i32 0, i32 9, !dbg !7375
  %9 = load %struct.hash_entry*, %struct.hash_entry** %8, align 8, !dbg !7375
  %10 = load %struct.hash_entry*, %struct.hash_entry** %4, align 8, !dbg !7376
  %11 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %10, i32 0, i32 1, !dbg !7377
  store %struct.hash_entry* %9, %struct.hash_entry** %11, align 8, !dbg !7378
  %12 = load %struct.hash_entry*, %struct.hash_entry** %4, align 8, !dbg !7379
  %13 = load %struct.hash_table*, %struct.hash_table** %3, align 8, !dbg !7380
  %14 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %13, i32 0, i32 9, !dbg !7381
  store %struct.hash_entry* %12, %struct.hash_entry** %14, align 8, !dbg !7382
  ret void, !dbg !7383
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.hash_entry* @allocate_entry(%struct.hash_table*) #3 !dbg !7384 {
  %2 = alloca %struct.hash_table*, align 8
  %3 = alloca %struct.hash_entry*, align 8
  store %struct.hash_table* %0, %struct.hash_table** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.hash_table** %2, metadata !7387, metadata !DIExpression()), !dbg !7388
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %3, metadata !7389, metadata !DIExpression()), !dbg !7390
  %4 = load %struct.hash_table*, %struct.hash_table** %2, align 8, !dbg !7391
  %5 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %4, i32 0, i32 9, !dbg !7393
  %6 = load %struct.hash_entry*, %struct.hash_entry** %5, align 8, !dbg !7393
  %7 = icmp ne %struct.hash_entry* %6, null, !dbg !7391
  br i1 %7, label %8, label %17, !dbg !7394

; <label>:8:                                      ; preds = %1
  %9 = load %struct.hash_table*, %struct.hash_table** %2, align 8, !dbg !7395
  %10 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %9, i32 0, i32 9, !dbg !7397
  %11 = load %struct.hash_entry*, %struct.hash_entry** %10, align 8, !dbg !7397
  store %struct.hash_entry* %11, %struct.hash_entry** %3, align 8, !dbg !7398
  %12 = load %struct.hash_entry*, %struct.hash_entry** %3, align 8, !dbg !7399
  %13 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %12, i32 0, i32 1, !dbg !7400
  %14 = load %struct.hash_entry*, %struct.hash_entry** %13, align 8, !dbg !7400
  %15 = load %struct.hash_table*, %struct.hash_table** %2, align 8, !dbg !7401
  %16 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %15, i32 0, i32 9, !dbg !7402
  store %struct.hash_entry* %14, %struct.hash_entry** %16, align 8, !dbg !7403
  br label %20, !dbg !7404

; <label>:17:                                     ; preds = %1
  %18 = call noalias i8* @malloc(i64 16) #8, !dbg !7405
  %19 = bitcast i8* %18 to %struct.hash_entry*, !dbg !7405
  store %struct.hash_entry* %19, %struct.hash_entry** %3, align 8, !dbg !7407
  br label %20

; <label>:20:                                     ; preds = %17, %8
  %21 = load %struct.hash_entry*, %struct.hash_entry** %3, align 8, !dbg !7408
  ret %struct.hash_entry* %21, !dbg !7409
}

; Function Attrs: noinline nounwind uwtable
define i8* @hash_insert(%struct.hash_table*, i8*) #3 !dbg !7410 {
  %3 = alloca i8*, align 8
  %4 = alloca %struct.hash_table*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca %struct.hash_entry*, align 8
  %8 = alloca %struct.hash_tuning*, align 8
  %9 = alloca float, align 4
  %10 = alloca %struct.hash_entry*, align 8
  store %struct.hash_table* %0, %struct.hash_table** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.hash_table** %4, metadata !7413, metadata !DIExpression()), !dbg !7414
  store i8* %1, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !7415, metadata !DIExpression()), !dbg !7416
  call void @llvm.dbg.declare(metadata i8** %6, metadata !7417, metadata !DIExpression()), !dbg !7418
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %7, metadata !7419, metadata !DIExpression()), !dbg !7420
  %11 = load i8*, i8** %5, align 8, !dbg !7421
  %12 = icmp ne i8* %11, null, !dbg !7421
  br i1 %12, label %14, label %13, !dbg !7423

; <label>:13:                                     ; preds = %2
  call void @abort() #11, !dbg !7424
  unreachable, !dbg !7424

; <label>:14:                                     ; preds = %2
  %15 = load %struct.hash_table*, %struct.hash_table** %4, align 8, !dbg !7425
  %16 = load i8*, i8** %5, align 8, !dbg !7427
  %17 = call i8* @hash_find_entry(%struct.hash_table* %15, i8* %16, %struct.hash_entry** %7, i1 zeroext false), !dbg !7428
  store i8* %17, i8** %6, align 8, !dbg !7429
  %18 = icmp ne i8* %17, null, !dbg !7430
  br i1 %18, label %19, label %21, !dbg !7431

; <label>:19:                                     ; preds = %14
  %20 = load i8*, i8** %6, align 8, !dbg !7432
  store i8* %20, i8** %3, align 8, !dbg !7433
  br label %145, !dbg !7433

; <label>:21:                                     ; preds = %14
  %22 = load %struct.hash_table*, %struct.hash_table** %4, align 8, !dbg !7434
  %23 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %22, i32 0, i32 3, !dbg !7436
  %24 = load i64, i64* %23, align 8, !dbg !7436
  %25 = uitofp i64 %24 to float, !dbg !7434
  %26 = load %struct.hash_table*, %struct.hash_table** %4, align 8, !dbg !7437
  %27 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %26, i32 0, i32 5, !dbg !7438
  %28 = load %struct.hash_tuning*, %struct.hash_tuning** %27, align 8, !dbg !7438
  %29 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %28, i32 0, i32 2, !dbg !7439
  %30 = load float, float* %29, align 4, !dbg !7439
  %31 = load %struct.hash_table*, %struct.hash_table** %4, align 8, !dbg !7440
  %32 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %31, i32 0, i32 2, !dbg !7441
  %33 = load i64, i64* %32, align 8, !dbg !7441
  %34 = uitofp i64 %33 to float, !dbg !7440
  %35 = fmul float %30, %34, !dbg !7442
  %36 = fcmp ogt float %25, %35, !dbg !7443
  br i1 %36, label %37, label %104, !dbg !7444

; <label>:37:                                     ; preds = %21
  %38 = load %struct.hash_table*, %struct.hash_table** %4, align 8, !dbg !7445
  %39 = call zeroext i1 @check_tuning(%struct.hash_table* %38), !dbg !7447
  %40 = load %struct.hash_table*, %struct.hash_table** %4, align 8, !dbg !7448
  %41 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %40, i32 0, i32 3, !dbg !7450
  %42 = load i64, i64* %41, align 8, !dbg !7450
  %43 = uitofp i64 %42 to float, !dbg !7448
  %44 = load %struct.hash_table*, %struct.hash_table** %4, align 8, !dbg !7451
  %45 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %44, i32 0, i32 5, !dbg !7452
  %46 = load %struct.hash_tuning*, %struct.hash_tuning** %45, align 8, !dbg !7452
  %47 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %46, i32 0, i32 2, !dbg !7453
  %48 = load float, float* %47, align 4, !dbg !7453
  %49 = load %struct.hash_table*, %struct.hash_table** %4, align 8, !dbg !7454
  %50 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %49, i32 0, i32 2, !dbg !7455
  %51 = load i64, i64* %50, align 8, !dbg !7455
  %52 = uitofp i64 %51 to float, !dbg !7454
  %53 = fmul float %48, %52, !dbg !7456
  %54 = fcmp ogt float %43, %53, !dbg !7457
  br i1 %54, label %55, label %103, !dbg !7458

; <label>:55:                                     ; preds = %37
  call void @llvm.dbg.declare(metadata %struct.hash_tuning** %8, metadata !7459, metadata !DIExpression()), !dbg !7461
  %56 = load %struct.hash_table*, %struct.hash_table** %4, align 8, !dbg !7462
  %57 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %56, i32 0, i32 5, !dbg !7463
  %58 = load %struct.hash_tuning*, %struct.hash_tuning** %57, align 8, !dbg !7463
  store %struct.hash_tuning* %58, %struct.hash_tuning** %8, align 8, !dbg !7461
  call void @llvm.dbg.declare(metadata float* %9, metadata !7464, metadata !DIExpression()), !dbg !7465
  %59 = load %struct.hash_tuning*, %struct.hash_tuning** %8, align 8, !dbg !7466
  %60 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %59, i32 0, i32 4, !dbg !7467
  %61 = load i8, i8* %60, align 4, !dbg !7467
  %62 = trunc i8 %61 to i1, !dbg !7467
  br i1 %62, label %63, label %72, !dbg !7466

; <label>:63:                                     ; preds = %55
  %64 = load %struct.hash_table*, %struct.hash_table** %4, align 8, !dbg !7468
  %65 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %64, i32 0, i32 2, !dbg !7469
  %66 = load i64, i64* %65, align 8, !dbg !7469
  %67 = uitofp i64 %66 to float, !dbg !7468
  %68 = load %struct.hash_tuning*, %struct.hash_tuning** %8, align 8, !dbg !7470
  %69 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %68, i32 0, i32 3, !dbg !7471
  %70 = load float, float* %69, align 4, !dbg !7471
  %71 = fmul float %67, %70, !dbg !7472
  br label %85, !dbg !7466

; <label>:72:                                     ; preds = %55
  %73 = load %struct.hash_table*, %struct.hash_table** %4, align 8, !dbg !7473
  %74 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %73, i32 0, i32 2, !dbg !7474
  %75 = load i64, i64* %74, align 8, !dbg !7474
  %76 = uitofp i64 %75 to float, !dbg !7473
  %77 = load %struct.hash_tuning*, %struct.hash_tuning** %8, align 8, !dbg !7475
  %78 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %77, i32 0, i32 3, !dbg !7476
  %79 = load float, float* %78, align 4, !dbg !7476
  %80 = fmul float %76, %79, !dbg !7477
  %81 = load %struct.hash_tuning*, %struct.hash_tuning** %8, align 8, !dbg !7478
  %82 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %81, i32 0, i32 2, !dbg !7479
  %83 = load float, float* %82, align 4, !dbg !7479
  %84 = fmul float %80, %83, !dbg !7480
  br label %85, !dbg !7466

; <label>:85:                                     ; preds = %72, %63
  %86 = phi float [ %71, %63 ], [ %84, %72 ], !dbg !7466
  store float %86, float* %9, align 4, !dbg !7465
  %87 = load float, float* %9, align 4, !dbg !7481
  %88 = fcmp ole float 0x43F0000000000000, %87, !dbg !7483
  br i1 %88, label %89, label %90, !dbg !7484

; <label>:89:                                     ; preds = %85
  store i8* null, i8** %3, align 8, !dbg !7485
  br label %145, !dbg !7485

; <label>:90:                                     ; preds = %85
  %91 = load %struct.hash_table*, %struct.hash_table** %4, align 8, !dbg !7486
  %92 = load float, float* %9, align 4, !dbg !7488
  %93 = fptoui float %92 to i64, !dbg !7488
  %94 = call zeroext i1 @hash_rehash(%struct.hash_table* %91, i64 %93), !dbg !7489
  br i1 %94, label %96, label %95, !dbg !7490

; <label>:95:                                     ; preds = %90
  store i8* null, i8** %3, align 8, !dbg !7491
  br label %145, !dbg !7491

; <label>:96:                                     ; preds = %90
  %97 = load %struct.hash_table*, %struct.hash_table** %4, align 8, !dbg !7492
  %98 = load i8*, i8** %5, align 8, !dbg !7494
  %99 = call i8* @hash_find_entry(%struct.hash_table* %97, i8* %98, %struct.hash_entry** %7, i1 zeroext false), !dbg !7495
  %100 = icmp ne i8* %99, null, !dbg !7496
  br i1 %100, label %101, label %102, !dbg !7497

; <label>:101:                                    ; preds = %96
  call void @abort() #11, !dbg !7498
  unreachable, !dbg !7498

; <label>:102:                                    ; preds = %96
  br label %103, !dbg !7499

; <label>:103:                                    ; preds = %102, %37
  br label %104, !dbg !7500

; <label>:104:                                    ; preds = %103, %21
  %105 = load %struct.hash_entry*, %struct.hash_entry** %7, align 8, !dbg !7501
  %106 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %105, i32 0, i32 0, !dbg !7503
  %107 = load i8*, i8** %106, align 8, !dbg !7503
  %108 = icmp ne i8* %107, null, !dbg !7501
  br i1 %108, label %109, label %132, !dbg !7504

; <label>:109:                                    ; preds = %104
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %10, metadata !7505, metadata !DIExpression()), !dbg !7507
  %110 = load %struct.hash_table*, %struct.hash_table** %4, align 8, !dbg !7508
  %111 = call %struct.hash_entry* @allocate_entry(%struct.hash_table* %110), !dbg !7509
  store %struct.hash_entry* %111, %struct.hash_entry** %10, align 8, !dbg !7507
  %112 = load %struct.hash_entry*, %struct.hash_entry** %10, align 8, !dbg !7510
  %113 = icmp eq %struct.hash_entry* %112, null, !dbg !7512
  br i1 %113, label %114, label %115, !dbg !7513

; <label>:114:                                    ; preds = %109
  store i8* null, i8** %3, align 8, !dbg !7514
  br label %145, !dbg !7514

; <label>:115:                                    ; preds = %109
  %116 = load i8*, i8** %5, align 8, !dbg !7515
  %117 = load %struct.hash_entry*, %struct.hash_entry** %10, align 8, !dbg !7516
  %118 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %117, i32 0, i32 0, !dbg !7517
  store i8* %116, i8** %118, align 8, !dbg !7518
  %119 = load %struct.hash_entry*, %struct.hash_entry** %7, align 8, !dbg !7519
  %120 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %119, i32 0, i32 1, !dbg !7520
  %121 = load %struct.hash_entry*, %struct.hash_entry** %120, align 8, !dbg !7520
  %122 = load %struct.hash_entry*, %struct.hash_entry** %10, align 8, !dbg !7521
  %123 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %122, i32 0, i32 1, !dbg !7522
  store %struct.hash_entry* %121, %struct.hash_entry** %123, align 8, !dbg !7523
  %124 = load %struct.hash_entry*, %struct.hash_entry** %10, align 8, !dbg !7524
  %125 = load %struct.hash_entry*, %struct.hash_entry** %7, align 8, !dbg !7525
  %126 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %125, i32 0, i32 1, !dbg !7526
  store %struct.hash_entry* %124, %struct.hash_entry** %126, align 8, !dbg !7527
  %127 = load %struct.hash_table*, %struct.hash_table** %4, align 8, !dbg !7528
  %128 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %127, i32 0, i32 4, !dbg !7529
  %129 = load i64, i64* %128, align 8, !dbg !7530
  %130 = add i64 %129, 1, !dbg !7530
  store i64 %130, i64* %128, align 8, !dbg !7530
  %131 = load i8*, i8** %5, align 8, !dbg !7531
  store i8* %131, i8** %3, align 8, !dbg !7532
  br label %145, !dbg !7532

; <label>:132:                                    ; preds = %104
  %133 = load i8*, i8** %5, align 8, !dbg !7533
  %134 = load %struct.hash_entry*, %struct.hash_entry** %7, align 8, !dbg !7534
  %135 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %134, i32 0, i32 0, !dbg !7535
  store i8* %133, i8** %135, align 8, !dbg !7536
  %136 = load %struct.hash_table*, %struct.hash_table** %4, align 8, !dbg !7537
  %137 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %136, i32 0, i32 4, !dbg !7538
  %138 = load i64, i64* %137, align 8, !dbg !7539
  %139 = add i64 %138, 1, !dbg !7539
  store i64 %139, i64* %137, align 8, !dbg !7539
  %140 = load %struct.hash_table*, %struct.hash_table** %4, align 8, !dbg !7540
  %141 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %140, i32 0, i32 3, !dbg !7541
  %142 = load i64, i64* %141, align 8, !dbg !7542
  %143 = add i64 %142, 1, !dbg !7542
  store i64 %143, i64* %141, align 8, !dbg !7542
  %144 = load i8*, i8** %5, align 8, !dbg !7543
  store i8* %144, i8** %3, align 8, !dbg !7544
  br label %145, !dbg !7544

; <label>:145:                                    ; preds = %132, %115, %114, %95, %89, %19
  %146 = load i8*, i8** %3, align 8, !dbg !7545
  ret i8* %146, !dbg !7545
}

; Function Attrs: noinline nounwind uwtable
define internal i8* @hash_find_entry(%struct.hash_table*, i8*, %struct.hash_entry**, i1 zeroext) #3 !dbg !7546 {
  %5 = alloca i8*, align 8
  %6 = alloca %struct.hash_table*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca %struct.hash_entry**, align 8
  %9 = alloca i8, align 1
  %10 = alloca %struct.hash_entry*, align 8
  %11 = alloca %struct.hash_entry*, align 8
  %12 = alloca i8*, align 8
  %13 = alloca %struct.hash_entry*, align 8
  %14 = alloca i8*, align 8
  %15 = alloca %struct.hash_entry*, align 8
  store %struct.hash_table* %0, %struct.hash_table** %6, align 8
  call void @llvm.dbg.declare(metadata %struct.hash_table** %6, metadata !7550, metadata !DIExpression()), !dbg !7551
  store i8* %1, i8** %7, align 8
  call void @llvm.dbg.declare(metadata i8** %7, metadata !7552, metadata !DIExpression()), !dbg !7553
  store %struct.hash_entry** %2, %struct.hash_entry*** %8, align 8
  call void @llvm.dbg.declare(metadata %struct.hash_entry*** %8, metadata !7554, metadata !DIExpression()), !dbg !7555
  %16 = zext i1 %3 to i8
  store i8 %16, i8* %9, align 1
  call void @llvm.dbg.declare(metadata i8* %9, metadata !7556, metadata !DIExpression()), !dbg !7557
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %10, metadata !7558, metadata !DIExpression()), !dbg !7559
  %17 = load %struct.hash_table*, %struct.hash_table** %6, align 8, !dbg !7560
  %18 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %17, i32 0, i32 0, !dbg !7561
  %19 = load %struct.hash_entry*, %struct.hash_entry** %18, align 8, !dbg !7561
  %20 = load %struct.hash_table*, %struct.hash_table** %6, align 8, !dbg !7562
  %21 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %20, i32 0, i32 6, !dbg !7563
  %22 = load i64 (i8*, i64)*, i64 (i8*, i64)** %21, align 8, !dbg !7563
  %23 = load i8*, i8** %7, align 8, !dbg !7564
  %24 = load %struct.hash_table*, %struct.hash_table** %6, align 8, !dbg !7565
  %25 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %24, i32 0, i32 2, !dbg !7566
  %26 = load i64, i64* %25, align 8, !dbg !7566
  %27 = call i64 %22(i8* %23, i64 %26), !dbg !7562
  %28 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %19, i64 %27, !dbg !7567
  store %struct.hash_entry* %28, %struct.hash_entry** %10, align 8, !dbg !7559
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %11, metadata !7568, metadata !DIExpression()), !dbg !7569
  %29 = load %struct.hash_entry*, %struct.hash_entry** %10, align 8, !dbg !7570
  %30 = load %struct.hash_table*, %struct.hash_table** %6, align 8, !dbg !7572
  %31 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %30, i32 0, i32 1, !dbg !7573
  %32 = load %struct.hash_entry*, %struct.hash_entry** %31, align 8, !dbg !7573
  %33 = icmp ult %struct.hash_entry* %29, %32, !dbg !7574
  br i1 %33, label %35, label %34, !dbg !7575

; <label>:34:                                     ; preds = %4
  call void @abort() #11, !dbg !7576
  unreachable, !dbg !7576

; <label>:35:                                     ; preds = %4
  %36 = load %struct.hash_entry*, %struct.hash_entry** %10, align 8, !dbg !7577
  %37 = load %struct.hash_entry**, %struct.hash_entry*** %8, align 8, !dbg !7578
  store %struct.hash_entry* %36, %struct.hash_entry** %37, align 8, !dbg !7579
  %38 = load %struct.hash_entry*, %struct.hash_entry** %10, align 8, !dbg !7580
  %39 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %38, i32 0, i32 0, !dbg !7582
  %40 = load i8*, i8** %39, align 8, !dbg !7582
  %41 = icmp eq i8* %40, null, !dbg !7583
  br i1 %41, label %42, label %43, !dbg !7584

; <label>:42:                                     ; preds = %35
  store i8* null, i8** %5, align 8, !dbg !7585
  br label %138, !dbg !7585

; <label>:43:                                     ; preds = %35
  %44 = load i8*, i8** %7, align 8, !dbg !7586
  %45 = load %struct.hash_entry*, %struct.hash_entry** %10, align 8, !dbg !7588
  %46 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %45, i32 0, i32 0, !dbg !7589
  %47 = load i8*, i8** %46, align 8, !dbg !7589
  %48 = icmp eq i8* %44, %47, !dbg !7590
  br i1 %48, label %58, label %49, !dbg !7591

; <label>:49:                                     ; preds = %43
  %50 = load %struct.hash_table*, %struct.hash_table** %6, align 8, !dbg !7592
  %51 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %50, i32 0, i32 7, !dbg !7593
  %52 = load i1 (i8*, i8*)*, i1 (i8*, i8*)** %51, align 8, !dbg !7593
  %53 = load i8*, i8** %7, align 8, !dbg !7594
  %54 = load %struct.hash_entry*, %struct.hash_entry** %10, align 8, !dbg !7595
  %55 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %54, i32 0, i32 0, !dbg !7596
  %56 = load i8*, i8** %55, align 8, !dbg !7596
  %57 = call zeroext i1 %52(i8* %53, i8* %56), !dbg !7592
  br i1 %57, label %58, label %85, !dbg !7597

; <label>:58:                                     ; preds = %49, %43
  call void @llvm.dbg.declare(metadata i8** %12, metadata !7598, metadata !DIExpression()), !dbg !7600
  %59 = load %struct.hash_entry*, %struct.hash_entry** %10, align 8, !dbg !7601
  %60 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %59, i32 0, i32 0, !dbg !7602
  %61 = load i8*, i8** %60, align 8, !dbg !7602
  store i8* %61, i8** %12, align 8, !dbg !7600
  %62 = load i8, i8* %9, align 1, !dbg !7603
  %63 = trunc i8 %62 to i1, !dbg !7603
  br i1 %63, label %64, label %83, !dbg !7605

; <label>:64:                                     ; preds = %58
  %65 = load %struct.hash_entry*, %struct.hash_entry** %10, align 8, !dbg !7606
  %66 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %65, i32 0, i32 1, !dbg !7609
  %67 = load %struct.hash_entry*, %struct.hash_entry** %66, align 8, !dbg !7609
  %68 = icmp ne %struct.hash_entry* %67, null, !dbg !7606
  br i1 %68, label %69, label %79, !dbg !7610

; <label>:69:                                     ; preds = %64
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %13, metadata !7611, metadata !DIExpression()), !dbg !7613
  %70 = load %struct.hash_entry*, %struct.hash_entry** %10, align 8, !dbg !7614
  %71 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %70, i32 0, i32 1, !dbg !7615
  %72 = load %struct.hash_entry*, %struct.hash_entry** %71, align 8, !dbg !7615
  store %struct.hash_entry* %72, %struct.hash_entry** %13, align 8, !dbg !7613
  %73 = load %struct.hash_entry*, %struct.hash_entry** %10, align 8, !dbg !7616
  %74 = load %struct.hash_entry*, %struct.hash_entry** %13, align 8, !dbg !7617
  %75 = bitcast %struct.hash_entry* %73 to i8*, !dbg !7618
  %76 = bitcast %struct.hash_entry* %74 to i8*, !dbg !7618
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %75, i8* %76, i64 16, i32 8, i1 false), !dbg !7618
  %77 = load %struct.hash_table*, %struct.hash_table** %6, align 8, !dbg !7619
  %78 = load %struct.hash_entry*, %struct.hash_entry** %13, align 8, !dbg !7620
  call void @free_entry(%struct.hash_table* %77, %struct.hash_entry* %78), !dbg !7621
  br label %82, !dbg !7622

; <label>:79:                                     ; preds = %64
  %80 = load %struct.hash_entry*, %struct.hash_entry** %10, align 8, !dbg !7623
  %81 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %80, i32 0, i32 0, !dbg !7625
  store i8* null, i8** %81, align 8, !dbg !7626
  br label %82

; <label>:82:                                     ; preds = %79, %69
  br label %83, !dbg !7627

; <label>:83:                                     ; preds = %82, %58
  %84 = load i8*, i8** %12, align 8, !dbg !7628
  store i8* %84, i8** %5, align 8, !dbg !7629
  br label %138, !dbg !7629

; <label>:85:                                     ; preds = %49
  %86 = load %struct.hash_entry*, %struct.hash_entry** %10, align 8, !dbg !7630
  store %struct.hash_entry* %86, %struct.hash_entry** %11, align 8, !dbg !7632
  br label %87, !dbg !7633

; <label>:87:                                     ; preds = %133, %85
  %88 = load %struct.hash_entry*, %struct.hash_entry** %11, align 8, !dbg !7634
  %89 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %88, i32 0, i32 1, !dbg !7636
  %90 = load %struct.hash_entry*, %struct.hash_entry** %89, align 8, !dbg !7636
  %91 = icmp ne %struct.hash_entry* %90, null, !dbg !7637
  br i1 %91, label %92, label %137, !dbg !7637

; <label>:92:                                     ; preds = %87
  %93 = load i8*, i8** %7, align 8, !dbg !7638
  %94 = load %struct.hash_entry*, %struct.hash_entry** %11, align 8, !dbg !7641
  %95 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %94, i32 0, i32 1, !dbg !7642
  %96 = load %struct.hash_entry*, %struct.hash_entry** %95, align 8, !dbg !7642
  %97 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %96, i32 0, i32 0, !dbg !7643
  %98 = load i8*, i8** %97, align 8, !dbg !7643
  %99 = icmp eq i8* %93, %98, !dbg !7644
  br i1 %99, label %111, label %100, !dbg !7645

; <label>:100:                                    ; preds = %92
  %101 = load %struct.hash_table*, %struct.hash_table** %6, align 8, !dbg !7646
  %102 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %101, i32 0, i32 7, !dbg !7647
  %103 = load i1 (i8*, i8*)*, i1 (i8*, i8*)** %102, align 8, !dbg !7647
  %104 = load i8*, i8** %7, align 8, !dbg !7648
  %105 = load %struct.hash_entry*, %struct.hash_entry** %11, align 8, !dbg !7649
  %106 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %105, i32 0, i32 1, !dbg !7650
  %107 = load %struct.hash_entry*, %struct.hash_entry** %106, align 8, !dbg !7650
  %108 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %107, i32 0, i32 0, !dbg !7651
  %109 = load i8*, i8** %108, align 8, !dbg !7651
  %110 = call zeroext i1 %103(i8* %104, i8* %109), !dbg !7646
  br i1 %110, label %111, label %132, !dbg !7652

; <label>:111:                                    ; preds = %100, %92
  call void @llvm.dbg.declare(metadata i8** %14, metadata !7653, metadata !DIExpression()), !dbg !7655
  %112 = load %struct.hash_entry*, %struct.hash_entry** %11, align 8, !dbg !7656
  %113 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %112, i32 0, i32 1, !dbg !7657
  %114 = load %struct.hash_entry*, %struct.hash_entry** %113, align 8, !dbg !7657
  %115 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %114, i32 0, i32 0, !dbg !7658
  %116 = load i8*, i8** %115, align 8, !dbg !7658
  store i8* %116, i8** %14, align 8, !dbg !7655
  %117 = load i8, i8* %9, align 1, !dbg !7659
  %118 = trunc i8 %117 to i1, !dbg !7659
  br i1 %118, label %119, label %130, !dbg !7661

; <label>:119:                                    ; preds = %111
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %15, metadata !7662, metadata !DIExpression()), !dbg !7664
  %120 = load %struct.hash_entry*, %struct.hash_entry** %11, align 8, !dbg !7665
  %121 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %120, i32 0, i32 1, !dbg !7666
  %122 = load %struct.hash_entry*, %struct.hash_entry** %121, align 8, !dbg !7666
  store %struct.hash_entry* %122, %struct.hash_entry** %15, align 8, !dbg !7664
  %123 = load %struct.hash_entry*, %struct.hash_entry** %15, align 8, !dbg !7667
  %124 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %123, i32 0, i32 1, !dbg !7668
  %125 = load %struct.hash_entry*, %struct.hash_entry** %124, align 8, !dbg !7668
  %126 = load %struct.hash_entry*, %struct.hash_entry** %11, align 8, !dbg !7669
  %127 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %126, i32 0, i32 1, !dbg !7670
  store %struct.hash_entry* %125, %struct.hash_entry** %127, align 8, !dbg !7671
  %128 = load %struct.hash_table*, %struct.hash_table** %6, align 8, !dbg !7672
  %129 = load %struct.hash_entry*, %struct.hash_entry** %15, align 8, !dbg !7673
  call void @free_entry(%struct.hash_table* %128, %struct.hash_entry* %129), !dbg !7674
  br label %130, !dbg !7675

; <label>:130:                                    ; preds = %119, %111
  %131 = load i8*, i8** %14, align 8, !dbg !7676
  store i8* %131, i8** %5, align 8, !dbg !7677
  br label %138, !dbg !7677

; <label>:132:                                    ; preds = %100
  br label %133, !dbg !7678

; <label>:133:                                    ; preds = %132
  %134 = load %struct.hash_entry*, %struct.hash_entry** %11, align 8, !dbg !7679
  %135 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %134, i32 0, i32 1, !dbg !7680
  %136 = load %struct.hash_entry*, %struct.hash_entry** %135, align 8, !dbg !7680
  store %struct.hash_entry* %136, %struct.hash_entry** %11, align 8, !dbg !7681
  br label %87, !dbg !7682, !llvm.loop !7683

; <label>:137:                                    ; preds = %87
  store i8* null, i8** %5, align 8, !dbg !7685
  br label %138, !dbg !7685

; <label>:138:                                    ; preds = %137, %130, %83, %42
  %139 = load i8*, i8** %5, align 8, !dbg !7686
  ret i8* %139, !dbg !7686
}

; Function Attrs: noinline nounwind uwtable
define i8* @hash_delete(%struct.hash_table*, i8*) #3 !dbg !7687 {
  %3 = alloca i8*, align 8
  %4 = alloca %struct.hash_table*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca %struct.hash_entry*, align 8
  %8 = alloca %struct.hash_tuning*, align 8
  %9 = alloca i64, align 8
  %10 = alloca %struct.hash_entry*, align 8
  %11 = alloca %struct.hash_entry*, align 8
  store %struct.hash_table* %0, %struct.hash_table** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.hash_table** %4, metadata !7688, metadata !DIExpression()), !dbg !7689
  store i8* %1, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !7690, metadata !DIExpression()), !dbg !7691
  call void @llvm.dbg.declare(metadata i8** %6, metadata !7692, metadata !DIExpression()), !dbg !7693
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %7, metadata !7694, metadata !DIExpression()), !dbg !7695
  %12 = load %struct.hash_table*, %struct.hash_table** %4, align 8, !dbg !7696
  %13 = load i8*, i8** %5, align 8, !dbg !7697
  %14 = call i8* @hash_find_entry(%struct.hash_table* %12, i8* %13, %struct.hash_entry** %7, i1 zeroext true), !dbg !7698
  store i8* %14, i8** %6, align 8, !dbg !7699
  %15 = load i8*, i8** %6, align 8, !dbg !7700
  %16 = icmp ne i8* %15, null, !dbg !7700
  br i1 %16, label %18, label %17, !dbg !7702

; <label>:17:                                     ; preds = %2
  store i8* null, i8** %3, align 8, !dbg !7703
  br label %123, !dbg !7703

; <label>:18:                                     ; preds = %2
  %19 = load %struct.hash_table*, %struct.hash_table** %4, align 8, !dbg !7704
  %20 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %19, i32 0, i32 4, !dbg !7705
  %21 = load i64, i64* %20, align 8, !dbg !7706
  %22 = add i64 %21, -1, !dbg !7706
  store i64 %22, i64* %20, align 8, !dbg !7706
  %23 = load %struct.hash_entry*, %struct.hash_entry** %7, align 8, !dbg !7707
  %24 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %23, i32 0, i32 0, !dbg !7709
  %25 = load i8*, i8** %24, align 8, !dbg !7709
  %26 = icmp ne i8* %25, null, !dbg !7707
  br i1 %26, label %121, label %27, !dbg !7710

; <label>:27:                                     ; preds = %18
  %28 = load %struct.hash_table*, %struct.hash_table** %4, align 8, !dbg !7711
  %29 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %28, i32 0, i32 3, !dbg !7713
  %30 = load i64, i64* %29, align 8, !dbg !7714
  %31 = add i64 %30, -1, !dbg !7714
  store i64 %31, i64* %29, align 8, !dbg !7714
  %32 = load %struct.hash_table*, %struct.hash_table** %4, align 8, !dbg !7715
  %33 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %32, i32 0, i32 3, !dbg !7717
  %34 = load i64, i64* %33, align 8, !dbg !7717
  %35 = uitofp i64 %34 to float, !dbg !7715
  %36 = load %struct.hash_table*, %struct.hash_table** %4, align 8, !dbg !7718
  %37 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %36, i32 0, i32 5, !dbg !7719
  %38 = load %struct.hash_tuning*, %struct.hash_tuning** %37, align 8, !dbg !7719
  %39 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %38, i32 0, i32 0, !dbg !7720
  %40 = load float, float* %39, align 4, !dbg !7720
  %41 = load %struct.hash_table*, %struct.hash_table** %4, align 8, !dbg !7721
  %42 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %41, i32 0, i32 2, !dbg !7722
  %43 = load i64, i64* %42, align 8, !dbg !7722
  %44 = uitofp i64 %43 to float, !dbg !7721
  %45 = fmul float %40, %44, !dbg !7723
  %46 = fcmp olt float %35, %45, !dbg !7724
  br i1 %46, label %47, label %120, !dbg !7725

; <label>:47:                                     ; preds = %27
  %48 = load %struct.hash_table*, %struct.hash_table** %4, align 8, !dbg !7726
  %49 = call zeroext i1 @check_tuning(%struct.hash_table* %48), !dbg !7728
  %50 = load %struct.hash_table*, %struct.hash_table** %4, align 8, !dbg !7729
  %51 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %50, i32 0, i32 3, !dbg !7731
  %52 = load i64, i64* %51, align 8, !dbg !7731
  %53 = uitofp i64 %52 to float, !dbg !7729
  %54 = load %struct.hash_table*, %struct.hash_table** %4, align 8, !dbg !7732
  %55 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %54, i32 0, i32 5, !dbg !7733
  %56 = load %struct.hash_tuning*, %struct.hash_tuning** %55, align 8, !dbg !7733
  %57 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %56, i32 0, i32 0, !dbg !7734
  %58 = load float, float* %57, align 4, !dbg !7734
  %59 = load %struct.hash_table*, %struct.hash_table** %4, align 8, !dbg !7735
  %60 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %59, i32 0, i32 2, !dbg !7736
  %61 = load i64, i64* %60, align 8, !dbg !7736
  %62 = uitofp i64 %61 to float, !dbg !7735
  %63 = fmul float %58, %62, !dbg !7737
  %64 = fcmp olt float %53, %63, !dbg !7738
  br i1 %64, label %65, label %119, !dbg !7739

; <label>:65:                                     ; preds = %47
  call void @llvm.dbg.declare(metadata %struct.hash_tuning** %8, metadata !7740, metadata !DIExpression()), !dbg !7742
  %66 = load %struct.hash_table*, %struct.hash_table** %4, align 8, !dbg !7743
  %67 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %66, i32 0, i32 5, !dbg !7744
  %68 = load %struct.hash_tuning*, %struct.hash_tuning** %67, align 8, !dbg !7744
  store %struct.hash_tuning* %68, %struct.hash_tuning** %8, align 8, !dbg !7742
  call void @llvm.dbg.declare(metadata i64* %9, metadata !7745, metadata !DIExpression()), !dbg !7746
  %69 = load %struct.hash_tuning*, %struct.hash_tuning** %8, align 8, !dbg !7747
  %70 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %69, i32 0, i32 4, !dbg !7748
  %71 = load i8, i8* %70, align 4, !dbg !7748
  %72 = trunc i8 %71 to i1, !dbg !7748
  br i1 %72, label %73, label %82, !dbg !7747

; <label>:73:                                     ; preds = %65
  %74 = load %struct.hash_table*, %struct.hash_table** %4, align 8, !dbg !7749
  %75 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %74, i32 0, i32 2, !dbg !7750
  %76 = load i64, i64* %75, align 8, !dbg !7750
  %77 = uitofp i64 %76 to float, !dbg !7749
  %78 = load %struct.hash_tuning*, %struct.hash_tuning** %8, align 8, !dbg !7751
  %79 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %78, i32 0, i32 1, !dbg !7752
  %80 = load float, float* %79, align 4, !dbg !7752
  %81 = fmul float %77, %80, !dbg !7753
  br label %95, !dbg !7747

; <label>:82:                                     ; preds = %65
  %83 = load %struct.hash_table*, %struct.hash_table** %4, align 8, !dbg !7754
  %84 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %83, i32 0, i32 2, !dbg !7755
  %85 = load i64, i64* %84, align 8, !dbg !7755
  %86 = uitofp i64 %85 to float, !dbg !7754
  %87 = load %struct.hash_tuning*, %struct.hash_tuning** %8, align 8, !dbg !7756
  %88 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %87, i32 0, i32 1, !dbg !7757
  %89 = load float, float* %88, align 4, !dbg !7757
  %90 = fmul float %86, %89, !dbg !7758
  %91 = load %struct.hash_tuning*, %struct.hash_tuning** %8, align 8, !dbg !7759
  %92 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %91, i32 0, i32 2, !dbg !7760
  %93 = load float, float* %92, align 4, !dbg !7760
  %94 = fmul float %90, %93, !dbg !7761
  br label %95, !dbg !7747

; <label>:95:                                     ; preds = %82, %73
  %96 = phi float [ %81, %73 ], [ %94, %82 ], !dbg !7747
  %97 = fptoui float %96 to i64, !dbg !7762
  store i64 %97, i64* %9, align 8, !dbg !7746
  %98 = load %struct.hash_table*, %struct.hash_table** %4, align 8, !dbg !7763
  %99 = load i64, i64* %9, align 8, !dbg !7765
  %100 = call zeroext i1 @hash_rehash(%struct.hash_table* %98, i64 %99), !dbg !7766
  br i1 %100, label %118, label %101, !dbg !7767

; <label>:101:                                    ; preds = %95
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %10, metadata !7768, metadata !DIExpression()), !dbg !7770
  %102 = load %struct.hash_table*, %struct.hash_table** %4, align 8, !dbg !7771
  %103 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %102, i32 0, i32 9, !dbg !7772
  %104 = load %struct.hash_entry*, %struct.hash_entry** %103, align 8, !dbg !7772
  store %struct.hash_entry* %104, %struct.hash_entry** %10, align 8, !dbg !7770
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %11, metadata !7773, metadata !DIExpression()), !dbg !7774
  br label %105, !dbg !7775

; <label>:105:                                    ; preds = %108, %101
  %106 = load %struct.hash_entry*, %struct.hash_entry** %10, align 8, !dbg !7776
  %107 = icmp ne %struct.hash_entry* %106, null, !dbg !7775
  br i1 %107, label %108, label %115, !dbg !7775

; <label>:108:                                    ; preds = %105
  %109 = load %struct.hash_entry*, %struct.hash_entry** %10, align 8, !dbg !7777
  %110 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %109, i32 0, i32 1, !dbg !7779
  %111 = load %struct.hash_entry*, %struct.hash_entry** %110, align 8, !dbg !7779
  store %struct.hash_entry* %111, %struct.hash_entry** %11, align 8, !dbg !7780
  %112 = load %struct.hash_entry*, %struct.hash_entry** %10, align 8, !dbg !7781
  %113 = bitcast %struct.hash_entry* %112 to i8*, !dbg !7781
  call void @free(i8* %113) #8, !dbg !7782
  %114 = load %struct.hash_entry*, %struct.hash_entry** %11, align 8, !dbg !7783
  store %struct.hash_entry* %114, %struct.hash_entry** %10, align 8, !dbg !7784
  br label %105, !dbg !7775, !llvm.loop !7785

; <label>:115:                                    ; preds = %105
  %116 = load %struct.hash_table*, %struct.hash_table** %4, align 8, !dbg !7787
  %117 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %116, i32 0, i32 9, !dbg !7788
  store %struct.hash_entry* null, %struct.hash_entry** %117, align 8, !dbg !7789
  br label %118, !dbg !7790

; <label>:118:                                    ; preds = %115, %95
  br label %119, !dbg !7791

; <label>:119:                                    ; preds = %118, %47
  br label %120, !dbg !7792

; <label>:120:                                    ; preds = %119, %27
  br label %121, !dbg !7793

; <label>:121:                                    ; preds = %120, %18
  %122 = load i8*, i8** %6, align 8, !dbg !7794
  store i8* %122, i8** %3, align 8, !dbg !7795
  br label %123, !dbg !7795

; <label>:123:                                    ; preds = %121, %17
  %124 = load i8*, i8** %3, align 8, !dbg !7796
  ret i8* %124, !dbg !7796
}

; Function Attrs: noinline nounwind uwtable
define void @i_ring_init(%struct.I_ring*, i32) #3 !dbg !7797 {
  %3 = alloca %struct.I_ring*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  store %struct.I_ring* %0, %struct.I_ring** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.I_ring** %3, metadata !7809, metadata !DIExpression()), !dbg !7810
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !7811, metadata !DIExpression()), !dbg !7812
  call void @llvm.dbg.declare(metadata i32* %5, metadata !7813, metadata !DIExpression()), !dbg !7814
  %6 = load %struct.I_ring*, %struct.I_ring** %3, align 8, !dbg !7815
  %7 = getelementptr inbounds %struct.I_ring, %struct.I_ring* %6, i32 0, i32 4, !dbg !7816
  store i8 1, i8* %7, align 4, !dbg !7817
  %8 = load %struct.I_ring*, %struct.I_ring** %3, align 8, !dbg !7818
  %9 = getelementptr inbounds %struct.I_ring, %struct.I_ring* %8, i32 0, i32 2, !dbg !7819
  store i32 0, i32* %9, align 4, !dbg !7820
  %10 = load %struct.I_ring*, %struct.I_ring** %3, align 8, !dbg !7821
  %11 = getelementptr inbounds %struct.I_ring, %struct.I_ring* %10, i32 0, i32 3, !dbg !7822
  store i32 0, i32* %11, align 4, !dbg !7823
  store i32 0, i32* %5, align 4, !dbg !7824
  br label %12, !dbg !7826

; <label>:12:                                     ; preds = %22, %2
  %13 = load i32, i32* %5, align 4, !dbg !7827
  %14 = icmp slt i32 %13, 4, !dbg !7829
  br i1 %14, label %15, label %25, !dbg !7830

; <label>:15:                                     ; preds = %12
  %16 = load i32, i32* %4, align 4, !dbg !7831
  %17 = load %struct.I_ring*, %struct.I_ring** %3, align 8, !dbg !7832
  %18 = getelementptr inbounds %struct.I_ring, %struct.I_ring* %17, i32 0, i32 0, !dbg !7833
  %19 = load i32, i32* %5, align 4, !dbg !7834
  %20 = sext i32 %19 to i64, !dbg !7832
  %21 = getelementptr inbounds [4 x i32], [4 x i32]* %18, i64 0, i64 %20, !dbg !7832
  store i32 %16, i32* %21, align 4, !dbg !7835
  br label %22, !dbg !7832

; <label>:22:                                     ; preds = %15
  %23 = load i32, i32* %5, align 4, !dbg !7836
  %24 = add nsw i32 %23, 1, !dbg !7836
  store i32 %24, i32* %5, align 4, !dbg !7836
  br label %12, !dbg !7837, !llvm.loop !7838

; <label>:25:                                     ; preds = %12
  %26 = load i32, i32* %4, align 4, !dbg !7840
  %27 = load %struct.I_ring*, %struct.I_ring** %3, align 8, !dbg !7841
  %28 = getelementptr inbounds %struct.I_ring, %struct.I_ring* %27, i32 0, i32 1, !dbg !7842
  store i32 %26, i32* %28, align 4, !dbg !7843
  ret void, !dbg !7844
}

; Function Attrs: noinline nounwind uwtable
define zeroext i1 @i_ring_empty(%struct.I_ring*) #3 !dbg !7845 {
  %2 = alloca %struct.I_ring*, align 8
  store %struct.I_ring* %0, %struct.I_ring** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.I_ring** %2, metadata !7850, metadata !DIExpression()), !dbg !7851
  %3 = load %struct.I_ring*, %struct.I_ring** %2, align 8, !dbg !7852
  %4 = getelementptr inbounds %struct.I_ring, %struct.I_ring* %3, i32 0, i32 4, !dbg !7853
  %5 = load i8, i8* %4, align 4, !dbg !7853
  %6 = trunc i8 %5 to i1, !dbg !7853
  ret i1 %6, !dbg !7854
}

; Function Attrs: noinline nounwind uwtable
define i32 @i_ring_push(%struct.I_ring*, i32) #3 !dbg !7855 {
  %3 = alloca %struct.I_ring*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  store %struct.I_ring* %0, %struct.I_ring** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.I_ring** %3, metadata !7858, metadata !DIExpression()), !dbg !7859
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !7860, metadata !DIExpression()), !dbg !7861
  call void @llvm.dbg.declare(metadata i32* %5, metadata !7862, metadata !DIExpression()), !dbg !7863
  %7 = load %struct.I_ring*, %struct.I_ring** %3, align 8, !dbg !7864
  %8 = getelementptr inbounds %struct.I_ring, %struct.I_ring* %7, i32 0, i32 2, !dbg !7865
  %9 = load i32, i32* %8, align 4, !dbg !7865
  %10 = load %struct.I_ring*, %struct.I_ring** %3, align 8, !dbg !7866
  %11 = getelementptr inbounds %struct.I_ring, %struct.I_ring* %10, i32 0, i32 4, !dbg !7867
  %12 = load i8, i8* %11, align 4, !dbg !7867
  %13 = trunc i8 %12 to i1, !dbg !7867
  %14 = xor i1 %13, true, !dbg !7868
  %15 = zext i1 %14 to i32, !dbg !7868
  %16 = add i32 %9, %15, !dbg !7869
  %17 = urem i32 %16, 4, !dbg !7870
  store i32 %17, i32* %5, align 4, !dbg !7863
  call void @llvm.dbg.declare(metadata i32* %6, metadata !7871, metadata !DIExpression()), !dbg !7872
  %18 = load %struct.I_ring*, %struct.I_ring** %3, align 8, !dbg !7873
  %19 = getelementptr inbounds %struct.I_ring, %struct.I_ring* %18, i32 0, i32 0, !dbg !7874
  %20 = load i32, i32* %5, align 4, !dbg !7875
  %21 = zext i32 %20 to i64, !dbg !7873
  %22 = getelementptr inbounds [4 x i32], [4 x i32]* %19, i64 0, i64 %21, !dbg !7873
  %23 = load i32, i32* %22, align 4, !dbg !7873
  store i32 %23, i32* %6, align 4, !dbg !7872
  %24 = load i32, i32* %4, align 4, !dbg !7876
  %25 = load %struct.I_ring*, %struct.I_ring** %3, align 8, !dbg !7877
  %26 = getelementptr inbounds %struct.I_ring, %struct.I_ring* %25, i32 0, i32 0, !dbg !7878
  %27 = load i32, i32* %5, align 4, !dbg !7879
  %28 = zext i32 %27 to i64, !dbg !7877
  %29 = getelementptr inbounds [4 x i32], [4 x i32]* %26, i64 0, i64 %28, !dbg !7877
  store i32 %24, i32* %29, align 4, !dbg !7880
  %30 = load i32, i32* %5, align 4, !dbg !7881
  %31 = load %struct.I_ring*, %struct.I_ring** %3, align 8, !dbg !7882
  %32 = getelementptr inbounds %struct.I_ring, %struct.I_ring* %31, i32 0, i32 2, !dbg !7883
  store i32 %30, i32* %32, align 4, !dbg !7884
  %33 = load i32, i32* %5, align 4, !dbg !7885
  %34 = load %struct.I_ring*, %struct.I_ring** %3, align 8, !dbg !7887
  %35 = getelementptr inbounds %struct.I_ring, %struct.I_ring* %34, i32 0, i32 3, !dbg !7888
  %36 = load i32, i32* %35, align 4, !dbg !7888
  %37 = icmp eq i32 %33, %36, !dbg !7889
  br i1 %37, label %38, label %52, !dbg !7890

; <label>:38:                                     ; preds = %2
  %39 = load %struct.I_ring*, %struct.I_ring** %3, align 8, !dbg !7891
  %40 = getelementptr inbounds %struct.I_ring, %struct.I_ring* %39, i32 0, i32 3, !dbg !7892
  %41 = load i32, i32* %40, align 4, !dbg !7892
  %42 = load %struct.I_ring*, %struct.I_ring** %3, align 8, !dbg !7893
  %43 = getelementptr inbounds %struct.I_ring, %struct.I_ring* %42, i32 0, i32 4, !dbg !7894
  %44 = load i8, i8* %43, align 4, !dbg !7894
  %45 = trunc i8 %44 to i1, !dbg !7894
  %46 = xor i1 %45, true, !dbg !7895
  %47 = zext i1 %46 to i32, !dbg !7895
  %48 = add i32 %41, %47, !dbg !7896
  %49 = urem i32 %48, 4, !dbg !7897
  %50 = load %struct.I_ring*, %struct.I_ring** %3, align 8, !dbg !7898
  %51 = getelementptr inbounds %struct.I_ring, %struct.I_ring* %50, i32 0, i32 3, !dbg !7899
  store i32 %49, i32* %51, align 4, !dbg !7900
  br label %52, !dbg !7898

; <label>:52:                                     ; preds = %38, %2
  %53 = load %struct.I_ring*, %struct.I_ring** %3, align 8, !dbg !7901
  %54 = getelementptr inbounds %struct.I_ring, %struct.I_ring* %53, i32 0, i32 4, !dbg !7902
  store i8 0, i8* %54, align 4, !dbg !7903
  %55 = load i32, i32* %6, align 4, !dbg !7904
  ret i32 %55, !dbg !7905
}

; Function Attrs: noinline nounwind uwtable
define i32 @i_ring_pop(%struct.I_ring*) #3 !dbg !7906 {
  %2 = alloca %struct.I_ring*, align 8
  %3 = alloca i32, align 4
  store %struct.I_ring* %0, %struct.I_ring** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.I_ring** %2, metadata !7909, metadata !DIExpression()), !dbg !7910
  call void @llvm.dbg.declare(metadata i32* %3, metadata !7911, metadata !DIExpression()), !dbg !7912
  %4 = load %struct.I_ring*, %struct.I_ring** %2, align 8, !dbg !7913
  %5 = call zeroext i1 @i_ring_empty(%struct.I_ring* %4), !dbg !7915
  br i1 %5, label %6, label %7, !dbg !7916

; <label>:6:                                      ; preds = %1
  call void @abort() #11, !dbg !7917
  unreachable, !dbg !7917

; <label>:7:                                      ; preds = %1
  %8 = load %struct.I_ring*, %struct.I_ring** %2, align 8, !dbg !7918
  %9 = getelementptr inbounds %struct.I_ring, %struct.I_ring* %8, i32 0, i32 0, !dbg !7919
  %10 = load %struct.I_ring*, %struct.I_ring** %2, align 8, !dbg !7920
  %11 = getelementptr inbounds %struct.I_ring, %struct.I_ring* %10, i32 0, i32 2, !dbg !7921
  %12 = load i32, i32* %11, align 4, !dbg !7921
  %13 = zext i32 %12 to i64, !dbg !7918
  %14 = getelementptr inbounds [4 x i32], [4 x i32]* %9, i64 0, i64 %13, !dbg !7918
  %15 = load i32, i32* %14, align 4, !dbg !7918
  store i32 %15, i32* %3, align 4, !dbg !7922
  %16 = load %struct.I_ring*, %struct.I_ring** %2, align 8, !dbg !7923
  %17 = getelementptr inbounds %struct.I_ring, %struct.I_ring* %16, i32 0, i32 1, !dbg !7924
  %18 = load i32, i32* %17, align 4, !dbg !7924
  %19 = load %struct.I_ring*, %struct.I_ring** %2, align 8, !dbg !7925
  %20 = getelementptr inbounds %struct.I_ring, %struct.I_ring* %19, i32 0, i32 0, !dbg !7926
  %21 = load %struct.I_ring*, %struct.I_ring** %2, align 8, !dbg !7927
  %22 = getelementptr inbounds %struct.I_ring, %struct.I_ring* %21, i32 0, i32 2, !dbg !7928
  %23 = load i32, i32* %22, align 4, !dbg !7928
  %24 = zext i32 %23 to i64, !dbg !7925
  %25 = getelementptr inbounds [4 x i32], [4 x i32]* %20, i64 0, i64 %24, !dbg !7925
  store i32 %18, i32* %25, align 4, !dbg !7929
  %26 = load %struct.I_ring*, %struct.I_ring** %2, align 8, !dbg !7930
  %27 = getelementptr inbounds %struct.I_ring, %struct.I_ring* %26, i32 0, i32 2, !dbg !7932
  %28 = load i32, i32* %27, align 4, !dbg !7932
  %29 = load %struct.I_ring*, %struct.I_ring** %2, align 8, !dbg !7933
  %30 = getelementptr inbounds %struct.I_ring, %struct.I_ring* %29, i32 0, i32 3, !dbg !7934
  %31 = load i32, i32* %30, align 4, !dbg !7934
  %32 = icmp eq i32 %28, %31, !dbg !7935
  br i1 %32, label %33, label %36, !dbg !7936

; <label>:33:                                     ; preds = %7
  %34 = load %struct.I_ring*, %struct.I_ring** %2, align 8, !dbg !7937
  %35 = getelementptr inbounds %struct.I_ring, %struct.I_ring* %34, i32 0, i32 4, !dbg !7938
  store i8 1, i8* %35, align 4, !dbg !7939
  br label %45, !dbg !7937

; <label>:36:                                     ; preds = %7
  %37 = load %struct.I_ring*, %struct.I_ring** %2, align 8, !dbg !7940
  %38 = getelementptr inbounds %struct.I_ring, %struct.I_ring* %37, i32 0, i32 2, !dbg !7941
  %39 = load i32, i32* %38, align 4, !dbg !7941
  %40 = add i32 %39, 4, !dbg !7942
  %41 = sub i32 %40, 1, !dbg !7943
  %42 = urem i32 %41, 4, !dbg !7944
  %43 = load %struct.I_ring*, %struct.I_ring** %2, align 8, !dbg !7945
  %44 = getelementptr inbounds %struct.I_ring, %struct.I_ring* %43, i32 0, i32 2, !dbg !7946
  store i32 %42, i32* %44, align 4, !dbg !7947
  br label %45

; <label>:45:                                     ; preds = %36, %33
  %46 = load i32, i32* %3, align 4, !dbg !7948
  ret i32 %46, !dbg !7949
}

; Function Attrs: noinline nounwind uwtable
define i32 @open_safer(i8*, i32, ...) #3 !dbg !7950 {
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca [1 x %struct.__va_list_tag], align 16
  store i8* %0, i8** %3, align 8
  call void @llvm.dbg.declare(metadata i8** %3, metadata !7953, metadata !DIExpression()), !dbg !7954
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !7955, metadata !DIExpression()), !dbg !7956
  call void @llvm.dbg.declare(metadata i32* %5, metadata !7957, metadata !DIExpression()), !dbg !7958
  store i32 0, i32* %5, align 4, !dbg !7958
  %7 = load i32, i32* %4, align 4, !dbg !7959
  %8 = and i32 %7, 64, !dbg !7961
  %9 = icmp ne i32 %8, 0, !dbg !7961
  br i1 %9, label %10, label %33, !dbg !7962

; <label>:10:                                     ; preds = %2
  call void @llvm.dbg.declare(metadata [1 x %struct.__va_list_tag]* %6, metadata !7963, metadata !DIExpression()), !dbg !7974
  %11 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %6, i32 0, i32 0, !dbg !7975
  %12 = bitcast %struct.__va_list_tag* %11 to i8*, !dbg !7975
  call void @llvm.va_start(i8* %12), !dbg !7975
  %13 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %6, i32 0, i32 0, !dbg !7976
  %14 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %13, i32 0, i32 0, !dbg !7976
  %15 = load i32, i32* %14, align 16, !dbg !7976
  %16 = icmp ule i32 %15, 40, !dbg !7976
  br i1 %16, label %17, label %23, !dbg !7976

; <label>:17:                                     ; preds = %10
  %18 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %13, i32 0, i32 3, !dbg !7976
  %19 = load i8*, i8** %18, align 16, !dbg !7976
  %20 = getelementptr i8, i8* %19, i32 %15, !dbg !7976
  %21 = bitcast i8* %20 to i32*, !dbg !7976
  %22 = add i32 %15, 8, !dbg !7976
  store i32 %22, i32* %14, align 16, !dbg !7976
  br label %28, !dbg !7976

; <label>:23:                                     ; preds = %10
  %24 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %13, i32 0, i32 2, !dbg !7976
  %25 = load i8*, i8** %24, align 8, !dbg !7976
  %26 = bitcast i8* %25 to i32*, !dbg !7976
  %27 = getelementptr i8, i8* %25, i32 8, !dbg !7976
  store i8* %27, i8** %24, align 8, !dbg !7976
  br label %28, !dbg !7976

; <label>:28:                                     ; preds = %23, %17
  %29 = phi i32* [ %21, %17 ], [ %26, %23 ], !dbg !7976
  %30 = load i32, i32* %29, align 4, !dbg !7976
  store i32 %30, i32* %5, align 4, !dbg !7977
  %31 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %6, i32 0, i32 0, !dbg !7978
  %32 = bitcast %struct.__va_list_tag* %31 to i8*, !dbg !7978
  call void @llvm.va_end(i8* %32), !dbg !7978
  br label %33, !dbg !7979

; <label>:33:                                     ; preds = %28, %2
  %34 = load i8*, i8** %3, align 8, !dbg !7980
  %35 = load i32, i32* %4, align 4, !dbg !7981
  %36 = load i32, i32* %5, align 4, !dbg !7982
  %37 = call i32 (i8*, i32, ...) @open(i8* %34, i32 %35, i32 %36), !dbg !7983
  %38 = call i32 @fd_safer(i32 %37), !dbg !7984
  ret i32 %38, !dbg !7985
}

declare i32 @open(i8*, i32, ...) #2

; Function Attrs: noinline nounwind uwtable
define i32 @openat_safer(i32, i8*, i32, ...) #3 !dbg !7986 {
  %4 = alloca i32, align 4
  %5 = alloca i8*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca [1 x %struct.__va_list_tag], align 16
  store i32 %0, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !7989, metadata !DIExpression()), !dbg !7990
  store i8* %1, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !7991, metadata !DIExpression()), !dbg !7992
  store i32 %2, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !7993, metadata !DIExpression()), !dbg !7994
  call void @llvm.dbg.declare(metadata i32* %7, metadata !7995, metadata !DIExpression()), !dbg !7996
  store i32 0, i32* %7, align 4, !dbg !7996
  %9 = load i32, i32* %6, align 4, !dbg !7997
  %10 = and i32 %9, 64, !dbg !7999
  %11 = icmp ne i32 %10, 0, !dbg !7999
  br i1 %11, label %12, label %35, !dbg !8000

; <label>:12:                                     ; preds = %3
  call void @llvm.dbg.declare(metadata [1 x %struct.__va_list_tag]* %8, metadata !8001, metadata !DIExpression()), !dbg !8012
  %13 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %8, i32 0, i32 0, !dbg !8013
  %14 = bitcast %struct.__va_list_tag* %13 to i8*, !dbg !8013
  call void @llvm.va_start(i8* %14), !dbg !8013
  %15 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %8, i32 0, i32 0, !dbg !8014
  %16 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %15, i32 0, i32 0, !dbg !8014
  %17 = load i32, i32* %16, align 16, !dbg !8014
  %18 = icmp ule i32 %17, 40, !dbg !8014
  br i1 %18, label %19, label %25, !dbg !8014

; <label>:19:                                     ; preds = %12
  %20 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %15, i32 0, i32 3, !dbg !8014
  %21 = load i8*, i8** %20, align 16, !dbg !8014
  %22 = getelementptr i8, i8* %21, i32 %17, !dbg !8014
  %23 = bitcast i8* %22 to i32*, !dbg !8014
  %24 = add i32 %17, 8, !dbg !8014
  store i32 %24, i32* %16, align 16, !dbg !8014
  br label %30, !dbg !8014

; <label>:25:                                     ; preds = %12
  %26 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %15, i32 0, i32 2, !dbg !8014
  %27 = load i8*, i8** %26, align 8, !dbg !8014
  %28 = bitcast i8* %27 to i32*, !dbg !8014
  %29 = getelementptr i8, i8* %27, i32 8, !dbg !8014
  store i8* %29, i8** %26, align 8, !dbg !8014
  br label %30, !dbg !8014

; <label>:30:                                     ; preds = %25, %19
  %31 = phi i32* [ %23, %19 ], [ %28, %25 ], !dbg !8014
  %32 = load i32, i32* %31, align 4, !dbg !8014
  store i32 %32, i32* %7, align 4, !dbg !8015
  %33 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %8, i32 0, i32 0, !dbg !8016
  %34 = bitcast %struct.__va_list_tag* %33 to i8*, !dbg !8016
  call void @llvm.va_end(i8* %34), !dbg !8016
  br label %35, !dbg !8017

; <label>:35:                                     ; preds = %30, %3
  %36 = load i32, i32* %4, align 4, !dbg !8018
  %37 = load i8*, i8** %5, align 8, !dbg !8019
  %38 = load i32, i32* %6, align 4, !dbg !8020
  %39 = load i32, i32* %7, align 4, !dbg !8021
  %40 = call i32 (i32, i8*, i32, ...) @openat(i32 %36, i8* %37, i32 %38, i32 %39), !dbg !8022
  %41 = call i32 @fd_safer(i32 %40), !dbg !8023
  ret i32 %41, !dbg !8024
}

; Function Attrs: noinline nounwind uwtable
define %struct.__dirstream* @opendir_safer(i8*) #3 !dbg !8025 {
  %2 = alloca i8*, align 8
  %3 = alloca %struct.__dirstream*, align 8
  %4 = alloca i32, align 4
  %5 = alloca %struct.__dirstream*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  store i8* %0, i8** %2, align 8
  call void @llvm.dbg.declare(metadata i8** %2, metadata !8028, metadata !DIExpression()), !dbg !8029
  call void @llvm.dbg.declare(metadata %struct.__dirstream** %3, metadata !8030, metadata !DIExpression()), !dbg !8031
  %8 = load i8*, i8** %2, align 8, !dbg !8032
  %9 = call %struct.__dirstream* @opendir(i8* %8), !dbg !8033
  store %struct.__dirstream* %9, %struct.__dirstream** %3, align 8, !dbg !8031
  %10 = load %struct.__dirstream*, %struct.__dirstream** %3, align 8, !dbg !8034
  %11 = icmp ne %struct.__dirstream* %10, null, !dbg !8034
  br i1 %11, label %12, label %39, !dbg !8036

; <label>:12:                                     ; preds = %1
  call void @llvm.dbg.declare(metadata i32* %4, metadata !8037, metadata !DIExpression()), !dbg !8039
  %13 = load %struct.__dirstream*, %struct.__dirstream** %3, align 8, !dbg !8040
  %14 = call i32 @dirfd(%struct.__dirstream* %13) #8, !dbg !8041
  store i32 %14, i32* %4, align 4, !dbg !8039
  %15 = load i32, i32* %4, align 4, !dbg !8042
  %16 = icmp sle i32 0, %15, !dbg !8044
  br i1 %16, label %17, label %38, !dbg !8045

; <label>:17:                                     ; preds = %12
  %18 = load i32, i32* %4, align 4, !dbg !8046
  %19 = icmp sle i32 %18, 2, !dbg !8047
  br i1 %19, label %20, label %38, !dbg !8048

; <label>:20:                                     ; preds = %17
  call void @llvm.dbg.declare(metadata %struct.__dirstream** %5, metadata !8049, metadata !DIExpression()), !dbg !8051
  call void @llvm.dbg.declare(metadata i32* %6, metadata !8052, metadata !DIExpression()), !dbg !8053
  call void @llvm.dbg.declare(metadata i32* %7, metadata !8054, metadata !DIExpression()), !dbg !8055
  %21 = load i32, i32* %4, align 4, !dbg !8056
  %22 = call i32 @dup_safer(i32 %21), !dbg !8057
  store i32 %22, i32* %7, align 4, !dbg !8055
  %23 = load i32, i32* %7, align 4, !dbg !8058
  %24 = call %struct.__dirstream* @fdopendir(i32 %23), !dbg !8059
  store %struct.__dirstream* %24, %struct.__dirstream** %5, align 8, !dbg !8060
  %25 = call i32* @__errno_location() #14, !dbg !8061
  %26 = load i32, i32* %25, align 4, !dbg !8061
  store i32 %26, i32* %6, align 4, !dbg !8062
  %27 = load %struct.__dirstream*, %struct.__dirstream** %5, align 8, !dbg !8063
  %28 = icmp ne %struct.__dirstream* %27, null, !dbg !8063
  br i1 %28, label %32, label %29, !dbg !8065

; <label>:29:                                     ; preds = %20
  %30 = load i32, i32* %7, align 4, !dbg !8066
  %31 = call i32 @close(i32 %30), !dbg !8067
  br label %32, !dbg !8067

; <label>:32:                                     ; preds = %29, %20
  %33 = load %struct.__dirstream*, %struct.__dirstream** %3, align 8, !dbg !8068
  %34 = call i32 @closedir(%struct.__dirstream* %33), !dbg !8069
  %35 = load i32, i32* %6, align 4, !dbg !8070
  %36 = call i32* @__errno_location() #14, !dbg !8071
  store i32 %35, i32* %36, align 4, !dbg !8072
  %37 = load %struct.__dirstream*, %struct.__dirstream** %5, align 8, !dbg !8073
  store %struct.__dirstream* %37, %struct.__dirstream** %3, align 8, !dbg !8074
  br label %38, !dbg !8075

; <label>:38:                                     ; preds = %32, %17, %12
  br label %39, !dbg !8076

; <label>:39:                                     ; preds = %38, %1
  %40 = load %struct.__dirstream*, %struct.__dirstream** %3, align 8, !dbg !8077
  ret %struct.__dirstream* %40, !dbg !8078
}

declare %struct.__dirstream* @opendir(i8*) #2

; Function Attrs: noinline nounwind uwtable
define i8* @quote_n(i32, i8*) #3 !dbg !8079 {
  %3 = alloca i32, align 4
  %4 = alloca i8*, align 8
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !8082, metadata !DIExpression()), !dbg !8083
  store i8* %1, i8** %4, align 8
  call void @llvm.dbg.declare(metadata i8** %4, metadata !8084, metadata !DIExpression()), !dbg !8085
  %5 = load i32, i32* %3, align 4, !dbg !8086
  %6 = load i8*, i8** %4, align 8, !dbg !8087
  %7 = call i8* @quotearg_n_style(i32 %5, i32 6, i8* %6), !dbg !8088
  ret i8* %7, !dbg !8089
}

; Function Attrs: noinline nounwind uwtable
define i8* @quote(i8*) #3 !dbg !8090 {
  %2 = alloca i8*, align 8
  store i8* %0, i8** %2, align 8
  call void @llvm.dbg.declare(metadata i8** %2, metadata !8093, metadata !DIExpression()), !dbg !8094
  %3 = load i8*, i8** %2, align 8, !dbg !8095
  %4 = call i8* @quote_n(i32 0, i8* %3), !dbg !8096
  ret i8* %4, !dbg !8097
}

; Function Attrs: noinline nounwind uwtable
define %struct.quoting_options* @clone_quoting_options(%struct.quoting_options*) #3 !dbg !8098 {
  %2 = alloca %struct.quoting_options*, align 8
  %3 = alloca i32, align 4
  %4 = alloca %struct.quoting_options*, align 8
  store %struct.quoting_options* %0, %struct.quoting_options** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %2, metadata !8102, metadata !DIExpression()), !dbg !8103
  call void @llvm.dbg.declare(metadata i32* %3, metadata !8104, metadata !DIExpression()), !dbg !8105
  %5 = call i32* @__errno_location() #14, !dbg !8106
  %6 = load i32, i32* %5, align 4, !dbg !8106
  store i32 %6, i32* %3, align 4, !dbg !8105
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %4, metadata !8107, metadata !DIExpression()), !dbg !8108
  %7 = load %struct.quoting_options*, %struct.quoting_options** %2, align 8, !dbg !8109
  %8 = icmp ne %struct.quoting_options* %7, null, !dbg !8109
  br i1 %8, label %9, label %11, !dbg !8109

; <label>:9:                                      ; preds = %1
  %10 = load %struct.quoting_options*, %struct.quoting_options** %2, align 8, !dbg !8110
  br label %12, !dbg !8109

; <label>:11:                                     ; preds = %1
  br label %12, !dbg !8109

; <label>:12:                                     ; preds = %11, %9
  %13 = phi %struct.quoting_options* [ %10, %9 ], [ @default_quoting_options, %11 ], !dbg !8109
  %14 = bitcast %struct.quoting_options* %13 to i8*, !dbg !8109
  %15 = call noalias i8* @xmemdup(i8* %14, i64 56), !dbg !8111
  %16 = bitcast i8* %15 to %struct.quoting_options*, !dbg !8111
  store %struct.quoting_options* %16, %struct.quoting_options** %4, align 8, !dbg !8108
  %17 = load i32, i32* %3, align 4, !dbg !8112
  %18 = call i32* @__errno_location() #14, !dbg !8113
  store i32 %17, i32* %18, align 4, !dbg !8114
  %19 = load %struct.quoting_options*, %struct.quoting_options** %4, align 8, !dbg !8115
  ret %struct.quoting_options* %19, !dbg !8116
}

; Function Attrs: noinline nounwind uwtable
define i32 @get_quoting_style(%struct.quoting_options*) #3 !dbg !8117 {
  %2 = alloca %struct.quoting_options*, align 8
  store %struct.quoting_options* %0, %struct.quoting_options** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %2, metadata !8120, metadata !DIExpression()), !dbg !8121
  %3 = load %struct.quoting_options*, %struct.quoting_options** %2, align 8, !dbg !8122
  %4 = icmp ne %struct.quoting_options* %3, null, !dbg !8122
  br i1 %4, label %5, label %7, !dbg !8122

; <label>:5:                                      ; preds = %1
  %6 = load %struct.quoting_options*, %struct.quoting_options** %2, align 8, !dbg !8123
  br label %8, !dbg !8122

; <label>:7:                                      ; preds = %1
  br label %8, !dbg !8122

; <label>:8:                                      ; preds = %7, %5
  %9 = phi %struct.quoting_options* [ %6, %5 ], [ @default_quoting_options, %7 ], !dbg !8122
  %10 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %9, i32 0, i32 0, !dbg !8124
  %11 = load i32, i32* %10, align 8, !dbg !8124
  ret i32 %11, !dbg !8125
}

; Function Attrs: noinline nounwind uwtable
define void @set_quoting_style(%struct.quoting_options*, i32) #3 !dbg !8126 {
  %3 = alloca %struct.quoting_options*, align 8
  %4 = alloca i32, align 4
  store %struct.quoting_options* %0, %struct.quoting_options** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %3, metadata !8129, metadata !DIExpression()), !dbg !8130
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !8131, metadata !DIExpression()), !dbg !8132
  %5 = load i32, i32* %4, align 4, !dbg !8133
  %6 = load %struct.quoting_options*, %struct.quoting_options** %3, align 8, !dbg !8134
  %7 = icmp ne %struct.quoting_options* %6, null, !dbg !8134
  br i1 %7, label %8, label %10, !dbg !8134

; <label>:8:                                      ; preds = %2
  %9 = load %struct.quoting_options*, %struct.quoting_options** %3, align 8, !dbg !8135
  br label %11, !dbg !8134

; <label>:10:                                     ; preds = %2
  br label %11, !dbg !8134

; <label>:11:                                     ; preds = %10, %8
  %12 = phi %struct.quoting_options* [ %9, %8 ], [ @default_quoting_options, %10 ], !dbg !8134
  %13 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %12, i32 0, i32 0, !dbg !8136
  store i32 %5, i32* %13, align 8, !dbg !8137
  ret void, !dbg !8138
}

; Function Attrs: noinline nounwind uwtable
define i32 @set_char_quoting(%struct.quoting_options*, i8 signext, i32) #3 !dbg !8139 {
  %4 = alloca %struct.quoting_options*, align 8
  %5 = alloca i8, align 1
  %6 = alloca i32, align 4
  %7 = alloca i8, align 1
  %8 = alloca i32*, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  store %struct.quoting_options* %0, %struct.quoting_options** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %4, metadata !8142, metadata !DIExpression()), !dbg !8143
  store i8 %1, i8* %5, align 1
  call void @llvm.dbg.declare(metadata i8* %5, metadata !8144, metadata !DIExpression()), !dbg !8145
  store i32 %2, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !8146, metadata !DIExpression()), !dbg !8147
  call void @llvm.dbg.declare(metadata i8* %7, metadata !8148, metadata !DIExpression()), !dbg !8149
  %11 = load i8, i8* %5, align 1, !dbg !8150
  store i8 %11, i8* %7, align 1, !dbg !8149
  call void @llvm.dbg.declare(metadata i32** %8, metadata !8151, metadata !DIExpression()), !dbg !8153
  %12 = load %struct.quoting_options*, %struct.quoting_options** %4, align 8, !dbg !8154
  %13 = icmp ne %struct.quoting_options* %12, null, !dbg !8154
  br i1 %13, label %14, label %16, !dbg !8154

; <label>:14:                                     ; preds = %3
  %15 = load %struct.quoting_options*, %struct.quoting_options** %4, align 8, !dbg !8155
  br label %17, !dbg !8154

; <label>:16:                                     ; preds = %3
  br label %17, !dbg !8154

; <label>:17:                                     ; preds = %16, %14
  %18 = phi %struct.quoting_options* [ %15, %14 ], [ @default_quoting_options, %16 ], !dbg !8154
  %19 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %18, i32 0, i32 2, !dbg !8156
  %20 = getelementptr inbounds [8 x i32], [8 x i32]* %19, i32 0, i32 0, !dbg !8157
  %21 = load i8, i8* %7, align 1, !dbg !8158
  %22 = zext i8 %21 to i64, !dbg !8158
  %23 = udiv i64 %22, 32, !dbg !8159
  %24 = getelementptr inbounds i32, i32* %20, i64 %23, !dbg !8160
  store i32* %24, i32** %8, align 8, !dbg !8153
  call void @llvm.dbg.declare(metadata i32* %9, metadata !8161, metadata !DIExpression()), !dbg !8162
  %25 = load i8, i8* %7, align 1, !dbg !8163
  %26 = zext i8 %25 to i64, !dbg !8163
  %27 = urem i64 %26, 32, !dbg !8164
  %28 = trunc i64 %27 to i32, !dbg !8163
  store i32 %28, i32* %9, align 4, !dbg !8162
  call void @llvm.dbg.declare(metadata i32* %10, metadata !8165, metadata !DIExpression()), !dbg !8166
  %29 = load i32*, i32** %8, align 8, !dbg !8167
  %30 = load i32, i32* %29, align 4, !dbg !8168
  %31 = load i32, i32* %9, align 4, !dbg !8169
  %32 = lshr i32 %30, %31, !dbg !8170
  %33 = and i32 %32, 1, !dbg !8171
  store i32 %33, i32* %10, align 4, !dbg !8166
  %34 = load i32, i32* %6, align 4, !dbg !8172
  %35 = and i32 %34, 1, !dbg !8173
  %36 = load i32, i32* %10, align 4, !dbg !8174
  %37 = xor i32 %35, %36, !dbg !8175
  %38 = load i32, i32* %9, align 4, !dbg !8176
  %39 = shl i32 %37, %38, !dbg !8177
  %40 = load i32*, i32** %8, align 8, !dbg !8178
  %41 = load i32, i32* %40, align 4, !dbg !8179
  %42 = xor i32 %41, %39, !dbg !8179
  store i32 %42, i32* %40, align 4, !dbg !8179
  %43 = load i32, i32* %10, align 4, !dbg !8180
  ret i32 %43, !dbg !8181
}

; Function Attrs: noinline nounwind uwtable
define i32 @set_quoting_flags(%struct.quoting_options*, i32) #3 !dbg !8182 {
  %3 = alloca %struct.quoting_options*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  store %struct.quoting_options* %0, %struct.quoting_options** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %3, metadata !8185, metadata !DIExpression()), !dbg !8186
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !8187, metadata !DIExpression()), !dbg !8188
  call void @llvm.dbg.declare(metadata i32* %5, metadata !8189, metadata !DIExpression()), !dbg !8190
  %6 = load %struct.quoting_options*, %struct.quoting_options** %3, align 8, !dbg !8191
  %7 = icmp ne %struct.quoting_options* %6, null, !dbg !8191
  br i1 %7, label %9, label %8, !dbg !8193

; <label>:8:                                      ; preds = %2
  store %struct.quoting_options* @default_quoting_options, %struct.quoting_options** %3, align 8, !dbg !8194
  br label %9, !dbg !8195

; <label>:9:                                      ; preds = %8, %2
  %10 = load %struct.quoting_options*, %struct.quoting_options** %3, align 8, !dbg !8196
  %11 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %10, i32 0, i32 1, !dbg !8197
  %12 = load i32, i32* %11, align 4, !dbg !8197
  store i32 %12, i32* %5, align 4, !dbg !8198
  %13 = load i32, i32* %4, align 4, !dbg !8199
  %14 = load %struct.quoting_options*, %struct.quoting_options** %3, align 8, !dbg !8200
  %15 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %14, i32 0, i32 1, !dbg !8201
  store i32 %13, i32* %15, align 4, !dbg !8202
  %16 = load i32, i32* %5, align 4, !dbg !8203
  ret i32 %16, !dbg !8204
}

; Function Attrs: noinline nounwind uwtable
define void @set_custom_quoting(%struct.quoting_options*, i8*, i8*) #3 !dbg !8205 {
  %4 = alloca %struct.quoting_options*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  store %struct.quoting_options* %0, %struct.quoting_options** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %4, metadata !8208, metadata !DIExpression()), !dbg !8209
  store i8* %1, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !8210, metadata !DIExpression()), !dbg !8211
  store i8* %2, i8** %6, align 8
  call void @llvm.dbg.declare(metadata i8** %6, metadata !8212, metadata !DIExpression()), !dbg !8213
  %7 = load %struct.quoting_options*, %struct.quoting_options** %4, align 8, !dbg !8214
  %8 = icmp ne %struct.quoting_options* %7, null, !dbg !8214
  br i1 %8, label %10, label %9, !dbg !8216

; <label>:9:                                      ; preds = %3
  store %struct.quoting_options* @default_quoting_options, %struct.quoting_options** %4, align 8, !dbg !8217
  br label %10, !dbg !8218

; <label>:10:                                     ; preds = %9, %3
  %11 = load %struct.quoting_options*, %struct.quoting_options** %4, align 8, !dbg !8219
  %12 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %11, i32 0, i32 0, !dbg !8220
  store i32 8, i32* %12, align 8, !dbg !8221
  %13 = load i8*, i8** %5, align 8, !dbg !8222
  %14 = icmp ne i8* %13, null, !dbg !8222
  br i1 %14, label %15, label %18, !dbg !8224

; <label>:15:                                     ; preds = %10
  %16 = load i8*, i8** %6, align 8, !dbg !8225
  %17 = icmp ne i8* %16, null, !dbg !8225
  br i1 %17, label %19, label %18, !dbg !8226

; <label>:18:                                     ; preds = %15, %10
  call void @abort() #11, !dbg !8227
  unreachable, !dbg !8227

; <label>:19:                                     ; preds = %15
  %20 = load i8*, i8** %5, align 8, !dbg !8228
  %21 = load %struct.quoting_options*, %struct.quoting_options** %4, align 8, !dbg !8229
  %22 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %21, i32 0, i32 3, !dbg !8230
  store i8* %20, i8** %22, align 8, !dbg !8231
  %23 = load i8*, i8** %6, align 8, !dbg !8232
  %24 = load %struct.quoting_options*, %struct.quoting_options** %4, align 8, !dbg !8233
  %25 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %24, i32 0, i32 4, !dbg !8234
  store i8* %23, i8** %25, align 8, !dbg !8235
  ret void, !dbg !8236
}

; Function Attrs: noinline nounwind uwtable
define i64 @quotearg_buffer(i8*, i64, i8*, i64, %struct.quoting_options*) #3 !dbg !8237 {
  %6 = alloca i8*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i64, align 8
  %10 = alloca %struct.quoting_options*, align 8
  %11 = alloca %struct.quoting_options*, align 8
  %12 = alloca i32, align 4
  %13 = alloca i64, align 8
  store i8* %0, i8** %6, align 8
  call void @llvm.dbg.declare(metadata i8** %6, metadata !8242, metadata !DIExpression()), !dbg !8243
  store i64 %1, i64* %7, align 8
  call void @llvm.dbg.declare(metadata i64* %7, metadata !8244, metadata !DIExpression()), !dbg !8245
  store i8* %2, i8** %8, align 8
  call void @llvm.dbg.declare(metadata i8** %8, metadata !8246, metadata !DIExpression()), !dbg !8247
  store i64 %3, i64* %9, align 8
  call void @llvm.dbg.declare(metadata i64* %9, metadata !8248, metadata !DIExpression()), !dbg !8249
  store %struct.quoting_options* %4, %struct.quoting_options** %10, align 8
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %10, metadata !8250, metadata !DIExpression()), !dbg !8251
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %11, metadata !8252, metadata !DIExpression()), !dbg !8253
  %14 = load %struct.quoting_options*, %struct.quoting_options** %10, align 8, !dbg !8254
  %15 = icmp ne %struct.quoting_options* %14, null, !dbg !8254
  br i1 %15, label %16, label %18, !dbg !8254

; <label>:16:                                     ; preds = %5
  %17 = load %struct.quoting_options*, %struct.quoting_options** %10, align 8, !dbg !8255
  br label %19, !dbg !8254

; <label>:18:                                     ; preds = %5
  br label %19, !dbg !8254

; <label>:19:                                     ; preds = %18, %16
  %20 = phi %struct.quoting_options* [ %17, %16 ], [ @default_quoting_options, %18 ], !dbg !8254
  store %struct.quoting_options* %20, %struct.quoting_options** %11, align 8, !dbg !8253
  call void @llvm.dbg.declare(metadata i32* %12, metadata !8256, metadata !DIExpression()), !dbg !8257
  %21 = call i32* @__errno_location() #14, !dbg !8258
  %22 = load i32, i32* %21, align 4, !dbg !8258
  store i32 %22, i32* %12, align 4, !dbg !8257
  call void @llvm.dbg.declare(metadata i64* %13, metadata !8259, metadata !DIExpression()), !dbg !8260
  %23 = load i8*, i8** %6, align 8, !dbg !8261
  %24 = load i64, i64* %7, align 8, !dbg !8262
  %25 = load i8*, i8** %8, align 8, !dbg !8263
  %26 = load i64, i64* %9, align 8, !dbg !8264
  %27 = load %struct.quoting_options*, %struct.quoting_options** %11, align 8, !dbg !8265
  %28 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %27, i32 0, i32 0, !dbg !8266
  %29 = load i32, i32* %28, align 8, !dbg !8266
  %30 = load %struct.quoting_options*, %struct.quoting_options** %11, align 8, !dbg !8267
  %31 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %30, i32 0, i32 1, !dbg !8268
  %32 = load i32, i32* %31, align 4, !dbg !8268
  %33 = load %struct.quoting_options*, %struct.quoting_options** %11, align 8, !dbg !8269
  %34 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %33, i32 0, i32 2, !dbg !8270
  %35 = getelementptr inbounds [8 x i32], [8 x i32]* %34, i32 0, i32 0, !dbg !8269
  %36 = load %struct.quoting_options*, %struct.quoting_options** %11, align 8, !dbg !8271
  %37 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %36, i32 0, i32 3, !dbg !8272
  %38 = load i8*, i8** %37, align 8, !dbg !8272
  %39 = load %struct.quoting_options*, %struct.quoting_options** %11, align 8, !dbg !8273
  %40 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %39, i32 0, i32 4, !dbg !8274
  %41 = load i8*, i8** %40, align 8, !dbg !8274
  %42 = call i64 @quotearg_buffer_restyled(i8* %23, i64 %24, i8* %25, i64 %26, i32 %29, i32 %32, i32* %35, i8* %38, i8* %41), !dbg !8275
  store i64 %42, i64* %13, align 8, !dbg !8260
  %43 = load i32, i32* %12, align 4, !dbg !8276
  %44 = call i32* @__errno_location() #14, !dbg !8277
  store i32 %43, i32* %44, align 4, !dbg !8278
  %45 = load i64, i64* %13, align 8, !dbg !8279
  ret i64 %45, !dbg !8280
}

; Function Attrs: noinline nounwind uwtable
define internal i64 @quotearg_buffer_restyled(i8*, i64, i8*, i64, i32, i32, i32*, i8*, i8*) #3 !dbg !8281 {
  %10 = alloca i64, align 8
  %11 = alloca i8*, align 8
  %12 = alloca i64, align 8
  %13 = alloca i8*, align 8
  %14 = alloca i64, align 8
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32*, align 8
  %18 = alloca i8*, align 8
  %19 = alloca i8*, align 8
  %20 = alloca i64, align 8
  %21 = alloca i64, align 8
  %22 = alloca i8*, align 8
  %23 = alloca i64, align 8
  %24 = alloca i8, align 1
  %25 = alloca i8, align 1
  %26 = alloca i8, align 1
  %27 = alloca i8, align 1
  %28 = alloca i8, align 1
  %29 = alloca i8, align 1
  %30 = alloca i64, align 8
  %31 = alloca i8, align 1
  %32 = alloca %struct.__mbstate_t, align 4
  %33 = alloca i32, align 4
  %34 = alloca i64, align 8
  %35 = alloca i64, align 8
  %36 = alloca i64, align 8
  store i8* %0, i8** %11, align 8
  call void @llvm.dbg.declare(metadata i8** %11, metadata !8286, metadata !DIExpression()), !dbg !8287
  store i64 %1, i64* %12, align 8
  call void @llvm.dbg.declare(metadata i64* %12, metadata !8288, metadata !DIExpression()), !dbg !8289
  store i8* %2, i8** %13, align 8
  call void @llvm.dbg.declare(metadata i8** %13, metadata !8290, metadata !DIExpression()), !dbg !8291
  store i64 %3, i64* %14, align 8
  call void @llvm.dbg.declare(metadata i64* %14, metadata !8292, metadata !DIExpression()), !dbg !8293
  store i32 %4, i32* %15, align 4
  call void @llvm.dbg.declare(metadata i32* %15, metadata !8294, metadata !DIExpression()), !dbg !8295
  store i32 %5, i32* %16, align 4
  call void @llvm.dbg.declare(metadata i32* %16, metadata !8296, metadata !DIExpression()), !dbg !8297
  store i32* %6, i32** %17, align 8
  call void @llvm.dbg.declare(metadata i32** %17, metadata !8298, metadata !DIExpression()), !dbg !8299
  store i8* %7, i8** %18, align 8
  call void @llvm.dbg.declare(metadata i8** %18, metadata !8300, metadata !DIExpression()), !dbg !8301
  store i8* %8, i8** %19, align 8
  call void @llvm.dbg.declare(metadata i8** %19, metadata !8302, metadata !DIExpression()), !dbg !8303
  call void @llvm.dbg.declare(metadata i64* %20, metadata !8304, metadata !DIExpression()), !dbg !8305
  call void @llvm.dbg.declare(metadata i64* %21, metadata !8306, metadata !DIExpression()), !dbg !8307
  store i64 0, i64* %21, align 8, !dbg !8307
  call void @llvm.dbg.declare(metadata i8** %22, metadata !8308, metadata !DIExpression()), !dbg !8309
  store i8* null, i8** %22, align 8, !dbg !8309
  call void @llvm.dbg.declare(metadata i64* %23, metadata !8310, metadata !DIExpression()), !dbg !8311
  store i64 0, i64* %23, align 8, !dbg !8311
  call void @llvm.dbg.declare(metadata i8* %24, metadata !8312, metadata !DIExpression()), !dbg !8313
  store i8 0, i8* %24, align 1, !dbg !8313
  call void @llvm.dbg.declare(metadata i8* %25, metadata !8314, metadata !DIExpression()), !dbg !8315
  %37 = call i64 @__ctype_get_mb_cur_max() #8, !dbg !8316
  %38 = icmp eq i64 %37, 1, !dbg !8317
  %39 = zext i1 %38 to i8, !dbg !8315
  store i8 %39, i8* %25, align 1, !dbg !8315
  call void @llvm.dbg.declare(metadata i8* %26, metadata !8318, metadata !DIExpression()), !dbg !8319
  %40 = load i32, i32* %16, align 4, !dbg !8320
  %41 = and i32 %40, 2, !dbg !8321
  %42 = icmp ne i32 %41, 0, !dbg !8322
  %43 = zext i1 %42 to i8, !dbg !8319
  store i8 %43, i8* %26, align 1, !dbg !8319
  %44 = load i32, i32* %15, align 4, !dbg !8323
  switch i32 %44, label %123 [
    i32 4, label %45
    i32 3, label %46
    i32 5, label %63
    i32 6, label %64
    i32 7, label %64
    i32 8, label %64
    i32 1, label %104
    i32 2, label %105
    i32 0, label %122
  ], !dbg !8324

; <label>:45:                                     ; preds = %9
  store i32 3, i32* %15, align 4, !dbg !8325
  store i8 1, i8* %26, align 1, !dbg !8327
  br label %46, !dbg !8328

; <label>:46:                                     ; preds = %9, %45
  %47 = load i8, i8* %26, align 1, !dbg !8329
  %48 = trunc i8 %47 to i1, !dbg !8329
  br i1 %48, label %62, label %49, !dbg !8331

; <label>:49:                                     ; preds = %46
  br label %50, !dbg !8332, !llvm.loop !8333

; <label>:50:                                     ; preds = %49
  %51 = load i64, i64* %21, align 8, !dbg !8334
  %52 = load i64, i64* %12, align 8, !dbg !8334
  %53 = icmp ult i64 %51, %52, !dbg !8334
  br i1 %53, label %54, label %58, !dbg !8337

; <label>:54:                                     ; preds = %50
  %55 = load i8*, i8** %11, align 8, !dbg !8334
  %56 = load i64, i64* %21, align 8, !dbg !8334
  %57 = getelementptr inbounds i8, i8* %55, i64 %56, !dbg !8334
  store i8 34, i8* %57, align 1, !dbg !8334
  br label %58, !dbg !8334

; <label>:58:                                     ; preds = %54, %50
  %59 = load i64, i64* %21, align 8, !dbg !8337
  %60 = add i64 %59, 1, !dbg !8337
  store i64 %60, i64* %21, align 8, !dbg !8337
  br label %61, !dbg !8337

; <label>:61:                                     ; preds = %58
  br label %62, !dbg !8337

; <label>:62:                                     ; preds = %61, %46
  store i8 1, i8* %24, align 1, !dbg !8338
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8.199, i32 0, i32 0), i8** %22, align 8, !dbg !8339
  store i64 1, i64* %23, align 8, !dbg !8340
  br label %124, !dbg !8341

; <label>:63:                                     ; preds = %9
  store i8 1, i8* %24, align 1, !dbg !8342
  store i8 0, i8* %26, align 1, !dbg !8343
  br label %124, !dbg !8344

; <label>:64:                                     ; preds = %9, %9, %9
  %65 = load i32, i32* %15, align 4, !dbg !8345
  %66 = icmp ne i32 %65, 8, !dbg !8348
  br i1 %66, label %67, label %72, !dbg !8349

; <label>:67:                                     ; preds = %64
  %68 = load i32, i32* %15, align 4, !dbg !8350
  %69 = call i8* @gettext_quote(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9.200, i32 0, i32 0), i32 %68), !dbg !8352
  store i8* %69, i8** %18, align 8, !dbg !8353
  %70 = load i32, i32* %15, align 4, !dbg !8354
  %71 = call i8* @gettext_quote(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.201, i32 0, i32 0), i32 %70), !dbg !8355
  store i8* %71, i8** %19, align 8, !dbg !8356
  br label %72, !dbg !8357

; <label>:72:                                     ; preds = %67, %64
  %73 = load i8, i8* %26, align 1, !dbg !8358
  %74 = trunc i8 %73 to i1, !dbg !8358
  br i1 %74, label %100, label %75, !dbg !8360

; <label>:75:                                     ; preds = %72
  %76 = load i8*, i8** %18, align 8, !dbg !8361
  store i8* %76, i8** %22, align 8, !dbg !8363
  br label %77, !dbg !8364

; <label>:77:                                     ; preds = %96, %75
  %78 = load i8*, i8** %22, align 8, !dbg !8365
  %79 = load i8, i8* %78, align 1, !dbg !8367
  %80 = icmp ne i8 %79, 0, !dbg !8368
  br i1 %80, label %81, label %99, !dbg !8368

; <label>:81:                                     ; preds = %77
  br label %82, !dbg !8369, !llvm.loop !8370

; <label>:82:                                     ; preds = %81
  %83 = load i64, i64* %21, align 8, !dbg !8371
  %84 = load i64, i64* %12, align 8, !dbg !8371
  %85 = icmp ult i64 %83, %84, !dbg !8371
  br i1 %85, label %86, label %92, !dbg !8374

; <label>:86:                                     ; preds = %82
  %87 = load i8*, i8** %22, align 8, !dbg !8371
  %88 = load i8, i8* %87, align 1, !dbg !8371
  %89 = load i8*, i8** %11, align 8, !dbg !8371
  %90 = load i64, i64* %21, align 8, !dbg !8371
  %91 = getelementptr inbounds i8, i8* %89, i64 %90, !dbg !8371
  store i8 %88, i8* %91, align 1, !dbg !8371
  br label %92, !dbg !8371

; <label>:92:                                     ; preds = %86, %82
  %93 = load i64, i64* %21, align 8, !dbg !8374
  %94 = add i64 %93, 1, !dbg !8374
  store i64 %94, i64* %21, align 8, !dbg !8374
  br label %95, !dbg !8374

; <label>:95:                                     ; preds = %92
  br label %96, !dbg !8374

; <label>:96:                                     ; preds = %95
  %97 = load i8*, i8** %22, align 8, !dbg !8375
  %98 = getelementptr inbounds i8, i8* %97, i32 1, !dbg !8375
  store i8* %98, i8** %22, align 8, !dbg !8375
  br label %77, !dbg !8376, !llvm.loop !8377

; <label>:99:                                     ; preds = %77
  br label %100, !dbg !8378

; <label>:100:                                    ; preds = %99, %72
  store i8 1, i8* %24, align 1, !dbg !8379
  %101 = load i8*, i8** %19, align 8, !dbg !8380
  store i8* %101, i8** %22, align 8, !dbg !8381
  %102 = load i8*, i8** %22, align 8, !dbg !8382
  %103 = call i64 @strlen(i8* %102) #12, !dbg !8383
  store i64 %103, i64* %23, align 8, !dbg !8384
  br label %124, !dbg !8385

; <label>:104:                                    ; preds = %9
  store i32 2, i32* %15, align 4, !dbg !8386
  store i8 1, i8* %26, align 1, !dbg !8387
  br label %105, !dbg !8388

; <label>:105:                                    ; preds = %9, %104
  %106 = load i8, i8* %26, align 1, !dbg !8389
  %107 = trunc i8 %106 to i1, !dbg !8389
  br i1 %107, label %121, label %108, !dbg !8391

; <label>:108:                                    ; preds = %105
  br label %109, !dbg !8392, !llvm.loop !8393

; <label>:109:                                    ; preds = %108
  %110 = load i64, i64* %21, align 8, !dbg !8394
  %111 = load i64, i64* %12, align 8, !dbg !8394
  %112 = icmp ult i64 %110, %111, !dbg !8394
  br i1 %112, label %113, label %117, !dbg !8397

; <label>:113:                                    ; preds = %109
  %114 = load i8*, i8** %11, align 8, !dbg !8394
  %115 = load i64, i64* %21, align 8, !dbg !8394
  %116 = getelementptr inbounds i8, i8* %114, i64 %115, !dbg !8394
  store i8 39, i8* %116, align 1, !dbg !8394
  br label %117, !dbg !8394

; <label>:117:                                    ; preds = %113, %109
  %118 = load i64, i64* %21, align 8, !dbg !8397
  %119 = add i64 %118, 1, !dbg !8397
  store i64 %119, i64* %21, align 8, !dbg !8397
  br label %120, !dbg !8397

; <label>:120:                                    ; preds = %117
  br label %121, !dbg !8397

; <label>:121:                                    ; preds = %120, %105
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.201, i32 0, i32 0), i8** %22, align 8, !dbg !8398
  store i64 1, i64* %23, align 8, !dbg !8399
  br label %124, !dbg !8400

; <label>:122:                                    ; preds = %9
  store i8 0, i8* %26, align 1, !dbg !8401
  br label %124, !dbg !8402

; <label>:123:                                    ; preds = %9
  call void @abort() #11, !dbg !8403
  unreachable, !dbg !8403

; <label>:124:                                    ; preds = %122, %121, %100, %63, %62
  store i64 0, i64* %20, align 8, !dbg !8404
  br label %125, !dbg !8406

; <label>:125:                                    ; preds = %743, %124
  %126 = load i64, i64* %14, align 8, !dbg !8407
  %127 = icmp eq i64 %126, -1, !dbg !8409
  br i1 %127, label %128, label %136, !dbg !8407

; <label>:128:                                    ; preds = %125
  %129 = load i8*, i8** %13, align 8, !dbg !8410
  %130 = load i64, i64* %20, align 8, !dbg !8411
  %131 = getelementptr inbounds i8, i8* %129, i64 %130, !dbg !8410
  %132 = load i8, i8* %131, align 1, !dbg !8410
  %133 = sext i8 %132 to i32, !dbg !8410
  %134 = icmp eq i32 %133, 0, !dbg !8412
  %135 = zext i1 %134 to i32, !dbg !8412
  br label %141, !dbg !8407

; <label>:136:                                    ; preds = %125
  %137 = load i64, i64* %20, align 8, !dbg !8413
  %138 = load i64, i64* %14, align 8, !dbg !8414
  %139 = icmp eq i64 %137, %138, !dbg !8415
  %140 = zext i1 %139 to i32, !dbg !8415
  br label %141, !dbg !8407

; <label>:141:                                    ; preds = %136, %128
  %142 = phi i32 [ %135, %128 ], [ %140, %136 ], !dbg !8407
  %143 = icmp ne i32 %142, 0, !dbg !8416
  %144 = xor i1 %143, true, !dbg !8416
  br i1 %144, label %145, label %746, !dbg !8417

; <label>:145:                                    ; preds = %141
  call void @llvm.dbg.declare(metadata i8* %27, metadata !8418, metadata !DIExpression()), !dbg !8420
  call void @llvm.dbg.declare(metadata i8* %28, metadata !8421, metadata !DIExpression()), !dbg !8422
  call void @llvm.dbg.declare(metadata i8* %29, metadata !8423, metadata !DIExpression()), !dbg !8424
  store i8 0, i8* %29, align 1, !dbg !8424
  %146 = load i8, i8* %24, align 1, !dbg !8425
  %147 = trunc i8 %146 to i1, !dbg !8425
  br i1 %147, label %148, label %170, !dbg !8427

; <label>:148:                                    ; preds = %145
  %149 = load i64, i64* %23, align 8, !dbg !8428
  %150 = icmp ne i64 %149, 0, !dbg !8428
  br i1 %150, label %151, label %170, !dbg !8429

; <label>:151:                                    ; preds = %148
  %152 = load i64, i64* %20, align 8, !dbg !8430
  %153 = load i64, i64* %23, align 8, !dbg !8431
  %154 = add i64 %152, %153, !dbg !8432
  %155 = load i64, i64* %14, align 8, !dbg !8433
  %156 = icmp ule i64 %154, %155, !dbg !8434
  br i1 %156, label %157, label %170, !dbg !8435

; <label>:157:                                    ; preds = %151
  %158 = load i8*, i8** %13, align 8, !dbg !8436
  %159 = load i64, i64* %20, align 8, !dbg !8437
  %160 = getelementptr inbounds i8, i8* %158, i64 %159, !dbg !8438
  %161 = load i8*, i8** %22, align 8, !dbg !8439
  %162 = load i64, i64* %23, align 8, !dbg !8440
  %163 = call i32 @memcmp(i8* %160, i8* %161, i64 %162) #12, !dbg !8441
  %164 = icmp eq i32 %163, 0, !dbg !8442
  br i1 %164, label %165, label %170, !dbg !8443

; <label>:165:                                    ; preds = %157
  %166 = load i8, i8* %26, align 1, !dbg !8444
  %167 = trunc i8 %166 to i1, !dbg !8444
  br i1 %167, label %168, label %169, !dbg !8447

; <label>:168:                                    ; preds = %165
  br label %796, !dbg !8448

; <label>:169:                                    ; preds = %165
  store i8 1, i8* %29, align 1, !dbg !8449
  br label %170, !dbg !8450

; <label>:170:                                    ; preds = %169, %157, %151, %148, %145
  %171 = load i8*, i8** %13, align 8, !dbg !8451
  %172 = load i64, i64* %20, align 8, !dbg !8452
  %173 = getelementptr inbounds i8, i8* %171, i64 %172, !dbg !8451
  %174 = load i8, i8* %173, align 1, !dbg !8451
  store i8 %174, i8* %27, align 1, !dbg !8453
  %175 = load i8, i8* %27, align 1, !dbg !8454
  %176 = zext i8 %175 to i32, !dbg !8454
  switch i32 %176, label %452 [
    i32 0, label %177
    i32 63, label %250
    i32 7, label %346
    i32 8, label %347
    i32 12, label %348
    i32 10, label %349
    i32 13, label %350
    i32 9, label %351
    i32 11, label %352
    i32 92, label %353
    i32 123, label %379
    i32 125, label %379
    i32 35, label %393
    i32 126, label %393
    i32 32, label %398
    i32 33, label %398
    i32 34, label %398
    i32 36, label %398
    i32 38, label %398
    i32 40, label %398
    i32 41, label %398
    i32 42, label %398
    i32 59, label %398
    i32 60, label %398
    i32 61, label %398
    i32 62, label %398
    i32 91, label %398
    i32 94, label %398
    i32 96, label %398
    i32 124, label %398
    i32 39, label %406
    i32 37, label %451
    i32 43, label %451
    i32 44, label %451
    i32 45, label %451
    i32 46, label %451
    i32 47, label %451
    i32 48, label %451
    i32 49, label %451
    i32 50, label %451
    i32 51, label %451
    i32 52, label %451
    i32 53, label %451
    i32 54, label %451
    i32 55, label %451
    i32 56, label %451
    i32 57, label %451
    i32 58, label %451
    i32 65, label %451
    i32 66, label %451
    i32 67, label %451
    i32 68, label %451
    i32 69, label %451
    i32 70, label %451
    i32 71, label %451
    i32 72, label %451
    i32 73, label %451
    i32 74, label %451
    i32 75, label %451
    i32 76, label %451
    i32 77, label %451
    i32 78, label %451
    i32 79, label %451
    i32 80, label %451
    i32 81, label %451
    i32 82, label %451
    i32 83, label %451
    i32 84, label %451
    i32 85, label %451
    i32 86, label %451
    i32 87, label %451
    i32 88, label %451
    i32 89, label %451
    i32 90, label %451
    i32 93, label %451
    i32 95, label %451
    i32 97, label %451
    i32 98, label %451
    i32 99, label %451
    i32 100, label %451
    i32 101, label %451
    i32 102, label %451
    i32 103, label %451
    i32 104, label %451
    i32 105, label %451
    i32 106, label %451
    i32 107, label %451
    i32 108, label %451
    i32 109, label %451
    i32 110, label %451
    i32 111, label %451
    i32 112, label %451
    i32 113, label %451
    i32 114, label %451
    i32 115, label %451
    i32 116, label %451
    i32 117, label %451
    i32 118, label %451
    i32 119, label %451
    i32 120, label %451
    i32 121, label %451
    i32 122, label %451
  ], !dbg !8455

; <label>:177:                                    ; preds = %170
  %178 = load i8, i8* %24, align 1, !dbg !8456
  %179 = trunc i8 %178 to i1, !dbg !8456
  br i1 %179, label %180, label %243, !dbg !8459

; <label>:180:                                    ; preds = %177
  %181 = load i8, i8* %26, align 1, !dbg !8460
  %182 = trunc i8 %181 to i1, !dbg !8460
  br i1 %182, label %183, label %184, !dbg !8463

; <label>:183:                                    ; preds = %180
  br label %796, !dbg !8464

; <label>:184:                                    ; preds = %180
  br label %185, !dbg !8465, !llvm.loop !8466

; <label>:185:                                    ; preds = %184
  %186 = load i64, i64* %21, align 8, !dbg !8467
  %187 = load i64, i64* %12, align 8, !dbg !8467
  %188 = icmp ult i64 %186, %187, !dbg !8467
  br i1 %188, label %189, label %193, !dbg !8470

; <label>:189:                                    ; preds = %185
  %190 = load i8*, i8** %11, align 8, !dbg !8467
  %191 = load i64, i64* %21, align 8, !dbg !8467
  %192 = getelementptr inbounds i8, i8* %190, i64 %191, !dbg !8467
  store i8 92, i8* %192, align 1, !dbg !8467
  br label %193, !dbg !8467

; <label>:193:                                    ; preds = %189, %185
  %194 = load i64, i64* %21, align 8, !dbg !8470
  %195 = add i64 %194, 1, !dbg !8470
  store i64 %195, i64* %21, align 8, !dbg !8470
  br label %196, !dbg !8470

; <label>:196:                                    ; preds = %193
  %197 = load i64, i64* %20, align 8, !dbg !8471
  %198 = add i64 %197, 1, !dbg !8473
  %199 = load i64, i64* %14, align 8, !dbg !8474
  %200 = icmp ult i64 %198, %199, !dbg !8475
  br i1 %200, label %201, label %242, !dbg !8476

; <label>:201:                                    ; preds = %196
  %202 = load i8*, i8** %13, align 8, !dbg !8477
  %203 = load i64, i64* %20, align 8, !dbg !8478
  %204 = add i64 %203, 1, !dbg !8479
  %205 = getelementptr inbounds i8, i8* %202, i64 %204, !dbg !8477
  %206 = load i8, i8* %205, align 1, !dbg !8477
  %207 = sext i8 %206 to i32, !dbg !8477
  %208 = icmp sle i32 48, %207, !dbg !8480
  br i1 %208, label %209, label %242, !dbg !8481

; <label>:209:                                    ; preds = %201
  %210 = load i8*, i8** %13, align 8, !dbg !8482
  %211 = load i64, i64* %20, align 8, !dbg !8483
  %212 = add i64 %211, 1, !dbg !8484
  %213 = getelementptr inbounds i8, i8* %210, i64 %212, !dbg !8482
  %214 = load i8, i8* %213, align 1, !dbg !8482
  %215 = sext i8 %214 to i32, !dbg !8482
  %216 = icmp sle i32 %215, 57, !dbg !8485
  br i1 %216, label %217, label %242, !dbg !8486

; <label>:217:                                    ; preds = %209
  br label %218, !dbg !8487, !llvm.loop !8489

; <label>:218:                                    ; preds = %217
  %219 = load i64, i64* %21, align 8, !dbg !8490
  %220 = load i64, i64* %12, align 8, !dbg !8490
  %221 = icmp ult i64 %219, %220, !dbg !8490
  br i1 %221, label %222, label %226, !dbg !8493

; <label>:222:                                    ; preds = %218
  %223 = load i8*, i8** %11, align 8, !dbg !8490
  %224 = load i64, i64* %21, align 8, !dbg !8490
  %225 = getelementptr inbounds i8, i8* %223, i64 %224, !dbg !8490
  store i8 48, i8* %225, align 1, !dbg !8490
  br label %226, !dbg !8490

; <label>:226:                                    ; preds = %222, %218
  %227 = load i64, i64* %21, align 8, !dbg !8493
  %228 = add i64 %227, 1, !dbg !8493
  store i64 %228, i64* %21, align 8, !dbg !8493
  br label %229, !dbg !8493

; <label>:229:                                    ; preds = %226
  br label %230, !dbg !8494, !llvm.loop !8495

; <label>:230:                                    ; preds = %229
  %231 = load i64, i64* %21, align 8, !dbg !8496
  %232 = load i64, i64* %12, align 8, !dbg !8496
  %233 = icmp ult i64 %231, %232, !dbg !8496
  br i1 %233, label %234, label %238, !dbg !8499

; <label>:234:                                    ; preds = %230
  %235 = load i8*, i8** %11, align 8, !dbg !8496
  %236 = load i64, i64* %21, align 8, !dbg !8496
  %237 = getelementptr inbounds i8, i8* %235, i64 %236, !dbg !8496
  store i8 48, i8* %237, align 1, !dbg !8496
  br label %238, !dbg !8496

; <label>:238:                                    ; preds = %234, %230
  %239 = load i64, i64* %21, align 8, !dbg !8499
  %240 = add i64 %239, 1, !dbg !8499
  store i64 %240, i64* %21, align 8, !dbg !8499
  br label %241, !dbg !8499

; <label>:241:                                    ; preds = %238
  br label %242, !dbg !8500

; <label>:242:                                    ; preds = %241, %209, %201, %196
  store i8 48, i8* %27, align 1, !dbg !8501
  br label %249, !dbg !8502

; <label>:243:                                    ; preds = %177
  %244 = load i32, i32* %16, align 4, !dbg !8503
  %245 = and i32 %244, 1, !dbg !8505
  %246 = icmp ne i32 %245, 0, !dbg !8505
  br i1 %246, label %247, label %248, !dbg !8506

; <label>:247:                                    ; preds = %243
  br label %743, !dbg !8507

; <label>:248:                                    ; preds = %243
  br label %249

; <label>:249:                                    ; preds = %248, %242
  br label %684, !dbg !8508

; <label>:250:                                    ; preds = %170
  %251 = load i32, i32* %15, align 4, !dbg !8509
  switch i32 %251, label %344 [
    i32 2, label %252
    i32 3, label %257
  ], !dbg !8510

; <label>:252:                                    ; preds = %250
  %253 = load i8, i8* %26, align 1, !dbg !8511
  %254 = trunc i8 %253 to i1, !dbg !8511
  br i1 %254, label %255, label %256, !dbg !8514

; <label>:255:                                    ; preds = %252
  br label %796, !dbg !8515

; <label>:256:                                    ; preds = %252
  br label %345, !dbg !8516

; <label>:257:                                    ; preds = %250
  %258 = load i32, i32* %16, align 4, !dbg !8517
  %259 = and i32 %258, 4, !dbg !8519
  %260 = icmp ne i32 %259, 0, !dbg !8519
  br i1 %260, label %261, label %343, !dbg !8520

; <label>:261:                                    ; preds = %257
  %262 = load i64, i64* %20, align 8, !dbg !8521
  %263 = add i64 %262, 2, !dbg !8522
  %264 = load i64, i64* %14, align 8, !dbg !8523
  %265 = icmp ult i64 %263, %264, !dbg !8524
  br i1 %265, label %266, label %343, !dbg !8525

; <label>:266:                                    ; preds = %261
  %267 = load i8*, i8** %13, align 8, !dbg !8526
  %268 = load i64, i64* %20, align 8, !dbg !8527
  %269 = add i64 %268, 1, !dbg !8528
  %270 = getelementptr inbounds i8, i8* %267, i64 %269, !dbg !8526
  %271 = load i8, i8* %270, align 1, !dbg !8526
  %272 = sext i8 %271 to i32, !dbg !8526
  %273 = icmp eq i32 %272, 63, !dbg !8529
  br i1 %273, label %274, label %343, !dbg !8530

; <label>:274:                                    ; preds = %266
  %275 = load i8*, i8** %13, align 8, !dbg !8531
  %276 = load i64, i64* %20, align 8, !dbg !8532
  %277 = add i64 %276, 2, !dbg !8533
  %278 = getelementptr inbounds i8, i8* %275, i64 %277, !dbg !8531
  %279 = load i8, i8* %278, align 1, !dbg !8531
  %280 = sext i8 %279 to i32, !dbg !8531
  switch i32 %280, label %341 [
    i32 33, label %281
    i32 39, label %281
    i32 40, label %281
    i32 41, label %281
    i32 45, label %281
    i32 47, label %281
    i32 60, label %281
    i32 61, label %281
    i32 62, label %281
  ], !dbg !8534

; <label>:281:                                    ; preds = %274, %274, %274, %274, %274, %274, %274, %274, %274
  %282 = load i8, i8* %26, align 1, !dbg !8535
  %283 = trunc i8 %282 to i1, !dbg !8535
  br i1 %283, label %284, label %285, !dbg !8538

; <label>:284:                                    ; preds = %281
  br label %796, !dbg !8539

; <label>:285:                                    ; preds = %281
  %286 = load i8*, i8** %13, align 8, !dbg !8540
  %287 = load i64, i64* %20, align 8, !dbg !8541
  %288 = add i64 %287, 2, !dbg !8542
  %289 = getelementptr inbounds i8, i8* %286, i64 %288, !dbg !8540
  %290 = load i8, i8* %289, align 1, !dbg !8540
  store i8 %290, i8* %27, align 1, !dbg !8543
  %291 = load i64, i64* %20, align 8, !dbg !8544
  %292 = add i64 %291, 2, !dbg !8544
  store i64 %292, i64* %20, align 8, !dbg !8544
  br label %293, !dbg !8545, !llvm.loop !8546

; <label>:293:                                    ; preds = %285
  %294 = load i64, i64* %21, align 8, !dbg !8547
  %295 = load i64, i64* %12, align 8, !dbg !8547
  %296 = icmp ult i64 %294, %295, !dbg !8547
  br i1 %296, label %297, label %301, !dbg !8550

; <label>:297:                                    ; preds = %293
  %298 = load i8*, i8** %11, align 8, !dbg !8547
  %299 = load i64, i64* %21, align 8, !dbg !8547
  %300 = getelementptr inbounds i8, i8* %298, i64 %299, !dbg !8547
  store i8 63, i8* %300, align 1, !dbg !8547
  br label %301, !dbg !8547

; <label>:301:                                    ; preds = %297, %293
  %302 = load i64, i64* %21, align 8, !dbg !8550
  %303 = add i64 %302, 1, !dbg !8550
  store i64 %303, i64* %21, align 8, !dbg !8550
  br label %304, !dbg !8550

; <label>:304:                                    ; preds = %301
  br label %305, !dbg !8551, !llvm.loop !8552

; <label>:305:                                    ; preds = %304
  %306 = load i64, i64* %21, align 8, !dbg !8553
  %307 = load i64, i64* %12, align 8, !dbg !8553
  %308 = icmp ult i64 %306, %307, !dbg !8553
  br i1 %308, label %309, label %313, !dbg !8556

; <label>:309:                                    ; preds = %305
  %310 = load i8*, i8** %11, align 8, !dbg !8553
  %311 = load i64, i64* %21, align 8, !dbg !8553
  %312 = getelementptr inbounds i8, i8* %310, i64 %311, !dbg !8553
  store i8 34, i8* %312, align 1, !dbg !8553
  br label %313, !dbg !8553

; <label>:313:                                    ; preds = %309, %305
  %314 = load i64, i64* %21, align 8, !dbg !8556
  %315 = add i64 %314, 1, !dbg !8556
  store i64 %315, i64* %21, align 8, !dbg !8556
  br label %316, !dbg !8556

; <label>:316:                                    ; preds = %313
  br label %317, !dbg !8557, !llvm.loop !8558

; <label>:317:                                    ; preds = %316
  %318 = load i64, i64* %21, align 8, !dbg !8559
  %319 = load i64, i64* %12, align 8, !dbg !8559
  %320 = icmp ult i64 %318, %319, !dbg !8559
  br i1 %320, label %321, label %325, !dbg !8562

; <label>:321:                                    ; preds = %317
  %322 = load i8*, i8** %11, align 8, !dbg !8559
  %323 = load i64, i64* %21, align 8, !dbg !8559
  %324 = getelementptr inbounds i8, i8* %322, i64 %323, !dbg !8559
  store i8 34, i8* %324, align 1, !dbg !8559
  br label %325, !dbg !8559

; <label>:325:                                    ; preds = %321, %317
  %326 = load i64, i64* %21, align 8, !dbg !8562
  %327 = add i64 %326, 1, !dbg !8562
  store i64 %327, i64* %21, align 8, !dbg !8562
  br label %328, !dbg !8562

; <label>:328:                                    ; preds = %325
  br label %329, !dbg !8563, !llvm.loop !8564

; <label>:329:                                    ; preds = %328
  %330 = load i64, i64* %21, align 8, !dbg !8565
  %331 = load i64, i64* %12, align 8, !dbg !8565
  %332 = icmp ult i64 %330, %331, !dbg !8565
  br i1 %332, label %333, label %337, !dbg !8568

; <label>:333:                                    ; preds = %329
  %334 = load i8*, i8** %11, align 8, !dbg !8565
  %335 = load i64, i64* %21, align 8, !dbg !8565
  %336 = getelementptr inbounds i8, i8* %334, i64 %335, !dbg !8565
  store i8 63, i8* %336, align 1, !dbg !8565
  br label %337, !dbg !8565

; <label>:337:                                    ; preds = %333, %329
  %338 = load i64, i64* %21, align 8, !dbg !8568
  %339 = add i64 %338, 1, !dbg !8568
  store i64 %339, i64* %21, align 8, !dbg !8568
  br label %340, !dbg !8568

; <label>:340:                                    ; preds = %337
  br label %342, !dbg !8569

; <label>:341:                                    ; preds = %274
  br label %342, !dbg !8570

; <label>:342:                                    ; preds = %341, %340
  br label %343, !dbg !8571

; <label>:343:                                    ; preds = %342, %266, %261, %257
  br label %345, !dbg !8572

; <label>:344:                                    ; preds = %250
  br label %345, !dbg !8573

; <label>:345:                                    ; preds = %344, %343, %256
  br label %684, !dbg !8574

; <label>:346:                                    ; preds = %170
  store i8 97, i8* %28, align 1, !dbg !8575
  br label %373, !dbg !8576

; <label>:347:                                    ; preds = %170
  store i8 98, i8* %28, align 1, !dbg !8577
  br label %373, !dbg !8578

; <label>:348:                                    ; preds = %170
  store i8 102, i8* %28, align 1, !dbg !8579
  br label %373, !dbg !8580

; <label>:349:                                    ; preds = %170
  store i8 110, i8* %28, align 1, !dbg !8581
  br label %365, !dbg !8582

; <label>:350:                                    ; preds = %170
  store i8 114, i8* %28, align 1, !dbg !8583
  br label %365, !dbg !8584

; <label>:351:                                    ; preds = %170
  store i8 116, i8* %28, align 1, !dbg !8585
  br label %365, !dbg !8586

; <label>:352:                                    ; preds = %170
  store i8 118, i8* %28, align 1, !dbg !8587
  br label %373, !dbg !8588

; <label>:353:                                    ; preds = %170
  %354 = load i8, i8* %27, align 1, !dbg !8589
  store i8 %354, i8* %28, align 1, !dbg !8590
  %355 = load i8, i8* %24, align 1, !dbg !8591
  %356 = trunc i8 %355 to i1, !dbg !8591
  br i1 %356, label %357, label %364, !dbg !8593

; <label>:357:                                    ; preds = %353
  %358 = load i8, i8* %26, align 1, !dbg !8594
  %359 = trunc i8 %358 to i1, !dbg !8594
  br i1 %359, label %360, label %364, !dbg !8595

; <label>:360:                                    ; preds = %357
  %361 = load i64, i64* %23, align 8, !dbg !8596
  %362 = icmp ne i64 %361, 0, !dbg !8596
  br i1 %362, label %363, label %364, !dbg !8597

; <label>:363:                                    ; preds = %360
  br label %729, !dbg !8598

; <label>:364:                                    ; preds = %360, %357, %353
  br label %365, !dbg !8596

; <label>:365:                                    ; preds = %364, %351, %350, %349
  %366 = load i32, i32* %15, align 4, !dbg !8599
  %367 = icmp eq i32 %366, 2, !dbg !8601
  br i1 %367, label %368, label %372, !dbg !8602

; <label>:368:                                    ; preds = %365
  %369 = load i8, i8* %26, align 1, !dbg !8603
  %370 = trunc i8 %369 to i1, !dbg !8603
  br i1 %370, label %371, label %372, !dbg !8604

; <label>:371:                                    ; preds = %368
  br label %796, !dbg !8605

; <label>:372:                                    ; preds = %368, %365
  br label %373, !dbg !8603

; <label>:373:                                    ; preds = %372, %352, %348, %347, %346
  %374 = load i8, i8* %24, align 1, !dbg !8606
  %375 = trunc i8 %374 to i1, !dbg !8606
  br i1 %375, label %376, label %378, !dbg !8608

; <label>:376:                                    ; preds = %373
  %377 = load i8, i8* %28, align 1, !dbg !8609
  store i8 %377, i8* %27, align 1, !dbg !8611
  br label %712, !dbg !8612

; <label>:378:                                    ; preds = %373
  br label %684, !dbg !8613

; <label>:379:                                    ; preds = %170, %170
  %380 = load i64, i64* %14, align 8, !dbg !8614
  %381 = icmp eq i64 %380, -1, !dbg !8616
  br i1 %381, label %382, label %388, !dbg !8617

; <label>:382:                                    ; preds = %379
  %383 = load i8*, i8** %13, align 8, !dbg !8618
  %384 = getelementptr inbounds i8, i8* %383, i64 1, !dbg !8618
  %385 = load i8, i8* %384, align 1, !dbg !8618
  %386 = sext i8 %385 to i32, !dbg !8618
  %387 = icmp eq i32 %386, 0, !dbg !8619
  br i1 %387, label %392, label %391, !dbg !8614

; <label>:388:                                    ; preds = %379
  %389 = load i64, i64* %14, align 8, !dbg !8620
  %390 = icmp eq i64 %389, 1, !dbg !8621
  br i1 %390, label %392, label %391, !dbg !8617

; <label>:391:                                    ; preds = %388, %382
  br label %684, !dbg !8622

; <label>:392:                                    ; preds = %388, %382
  br label %393, !dbg !8623

; <label>:393:                                    ; preds = %170, %170, %392
  %394 = load i64, i64* %20, align 8, !dbg !8624
  %395 = icmp ne i64 %394, 0, !dbg !8626
  br i1 %395, label %396, label %397, !dbg !8627

; <label>:396:                                    ; preds = %393
  br label %684, !dbg !8628

; <label>:397:                                    ; preds = %393
  br label %398, !dbg !8629

; <label>:398:                                    ; preds = %170, %170, %170, %170, %170, %170, %170, %170, %170, %170, %170, %170, %170, %170, %170, %170, %397
  %399 = load i32, i32* %15, align 4, !dbg !8630
  %400 = icmp eq i32 %399, 2, !dbg !8632
  br i1 %400, label %401, label %405, !dbg !8633

; <label>:401:                                    ; preds = %398
  %402 = load i8, i8* %26, align 1, !dbg !8634
  %403 = trunc i8 %402 to i1, !dbg !8634
  br i1 %403, label %404, label %405, !dbg !8635

; <label>:404:                                    ; preds = %401
  br label %796, !dbg !8636

; <label>:405:                                    ; preds = %401, %398
  br label %684, !dbg !8637

; <label>:406:                                    ; preds = %170
  %407 = load i32, i32* %15, align 4, !dbg !8638
  %408 = icmp eq i32 %407, 2, !dbg !8640
  br i1 %408, label %409, label %450, !dbg !8641

; <label>:409:                                    ; preds = %406
  %410 = load i8, i8* %26, align 1, !dbg !8642
  %411 = trunc i8 %410 to i1, !dbg !8642
  br i1 %411, label %412, label %413, !dbg !8645

; <label>:412:                                    ; preds = %409
  br label %796, !dbg !8646

; <label>:413:                                    ; preds = %409
  br label %414, !dbg !8647, !llvm.loop !8648

; <label>:414:                                    ; preds = %413
  %415 = load i64, i64* %21, align 8, !dbg !8649
  %416 = load i64, i64* %12, align 8, !dbg !8649
  %417 = icmp ult i64 %415, %416, !dbg !8649
  br i1 %417, label %418, label %422, !dbg !8652

; <label>:418:                                    ; preds = %414
  %419 = load i8*, i8** %11, align 8, !dbg !8649
  %420 = load i64, i64* %21, align 8, !dbg !8649
  %421 = getelementptr inbounds i8, i8* %419, i64 %420, !dbg !8649
  store i8 39, i8* %421, align 1, !dbg !8649
  br label %422, !dbg !8649

; <label>:422:                                    ; preds = %418, %414
  %423 = load i64, i64* %21, align 8, !dbg !8652
  %424 = add i64 %423, 1, !dbg !8652
  store i64 %424, i64* %21, align 8, !dbg !8652
  br label %425, !dbg !8652

; <label>:425:                                    ; preds = %422
  br label %426, !dbg !8653, !llvm.loop !8654

; <label>:426:                                    ; preds = %425
  %427 = load i64, i64* %21, align 8, !dbg !8655
  %428 = load i64, i64* %12, align 8, !dbg !8655
  %429 = icmp ult i64 %427, %428, !dbg !8655
  br i1 %429, label %430, label %434, !dbg !8658

; <label>:430:                                    ; preds = %426
  %431 = load i8*, i8** %11, align 8, !dbg !8655
  %432 = load i64, i64* %21, align 8, !dbg !8655
  %433 = getelementptr inbounds i8, i8* %431, i64 %432, !dbg !8655
  store i8 92, i8* %433, align 1, !dbg !8655
  br label %434, !dbg !8655

; <label>:434:                                    ; preds = %430, %426
  %435 = load i64, i64* %21, align 8, !dbg !8658
  %436 = add i64 %435, 1, !dbg !8658
  store i64 %436, i64* %21, align 8, !dbg !8658
  br label %437, !dbg !8658

; <label>:437:                                    ; preds = %434
  br label %438, !dbg !8659, !llvm.loop !8660

; <label>:438:                                    ; preds = %437
  %439 = load i64, i64* %21, align 8, !dbg !8661
  %440 = load i64, i64* %12, align 8, !dbg !8661
  %441 = icmp ult i64 %439, %440, !dbg !8661
  br i1 %441, label %442, label %446, !dbg !8664

; <label>:442:                                    ; preds = %438
  %443 = load i8*, i8** %11, align 8, !dbg !8661
  %444 = load i64, i64* %21, align 8, !dbg !8661
  %445 = getelementptr inbounds i8, i8* %443, i64 %444, !dbg !8661
  store i8 39, i8* %445, align 1, !dbg !8661
  br label %446, !dbg !8661

; <label>:446:                                    ; preds = %442, %438
  %447 = load i64, i64* %21, align 8, !dbg !8664
  %448 = add i64 %447, 1, !dbg !8664
  store i64 %448, i64* %21, align 8, !dbg !8664
  br label %449, !dbg !8664

; <label>:449:                                    ; preds = %446
  br label %450, !dbg !8665

; <label>:450:                                    ; preds = %449, %406
  br label %684, !dbg !8666

; <label>:451:                                    ; preds = %170, %170, %170, %170, %170, %170, %170, %170, %170, %170, %170, %170, %170, %170, %170, %170, %170, %170, %170, %170, %170, %170, %170, %170, %170, %170, %170, %170, %170, %170, %170, %170, %170, %170, %170, %170, %170, %170, %170, %170, %170, %170, %170, %170, %170, %170, %170, %170, %170, %170, %170, %170, %170, %170, %170, %170, %170, %170, %170, %170, %170, %170, %170, %170, %170, %170, %170, %170, %170, %170, %170
  br label %684, !dbg !8667

; <label>:452:                                    ; preds = %170
  call void @llvm.dbg.declare(metadata i64* %30, metadata !8668, metadata !DIExpression()), !dbg !8670
  call void @llvm.dbg.declare(metadata i8* %31, metadata !8671, metadata !DIExpression()), !dbg !8672
  %453 = load i8, i8* %25, align 1, !dbg !8673
  %454 = trunc i8 %453 to i1, !dbg !8673
  br i1 %454, label %455, label %467, !dbg !8675

; <label>:455:                                    ; preds = %452
  store i64 1, i64* %30, align 8, !dbg !8676
  %456 = call i16** @__ctype_b_loc() #14, !dbg !8678
  %457 = load i16*, i16** %456, align 8, !dbg !8678
  %458 = load i8, i8* %27, align 1, !dbg !8678
  %459 = zext i8 %458 to i32, !dbg !8678
  %460 = sext i32 %459 to i64, !dbg !8678
  %461 = getelementptr inbounds i16, i16* %457, i64 %460, !dbg !8678
  %462 = load i16, i16* %461, align 2, !dbg !8678
  %463 = zext i16 %462 to i32, !dbg !8678
  %464 = and i32 %463, 16384, !dbg !8678
  %465 = icmp ne i32 %464, 0, !dbg !8679
  %466 = zext i1 %465 to i8, !dbg !8680
  store i8 %466, i8* %31, align 1, !dbg !8680
  br label %564, !dbg !8681

; <label>:467:                                    ; preds = %452
  call void @llvm.dbg.declare(metadata %struct.__mbstate_t* %32, metadata !8682, metadata !DIExpression()), !dbg !8697
  %468 = bitcast %struct.__mbstate_t* %32 to i8*, !dbg !8698
  call void @llvm.memset.p0i8.i64(i8* %468, i8 0, i64 8, i32 4, i1 false), !dbg !8698
  store i64 0, i64* %30, align 8, !dbg !8699
  store i8 1, i8* %31, align 1, !dbg !8700
  %469 = load i64, i64* %14, align 8, !dbg !8701
  %470 = icmp eq i64 %469, -1, !dbg !8703
  br i1 %470, label %471, label %474, !dbg !8704

; <label>:471:                                    ; preds = %467
  %472 = load i8*, i8** %13, align 8, !dbg !8705
  %473 = call i64 @strlen(i8* %472) #12, !dbg !8706
  store i64 %473, i64* %14, align 8, !dbg !8707
  br label %474, !dbg !8708

; <label>:474:                                    ; preds = %471, %467
  br label %475, !dbg !8709, !llvm.loop !8710

; <label>:475:                                    ; preds = %559, %474
  call void @llvm.dbg.declare(metadata i32* %33, metadata !8712, metadata !DIExpression()), !dbg !8715
  call void @llvm.dbg.declare(metadata i64* %34, metadata !8716, metadata !DIExpression()), !dbg !8717
  %476 = load i8*, i8** %13, align 8, !dbg !8718
  %477 = load i64, i64* %20, align 8, !dbg !8719
  %478 = load i64, i64* %30, align 8, !dbg !8720
  %479 = add i64 %477, %478, !dbg !8721
  %480 = getelementptr inbounds i8, i8* %476, i64 %479, !dbg !8718
  %481 = load i64, i64* %14, align 8, !dbg !8722
  %482 = load i64, i64* %20, align 8, !dbg !8723
  %483 = load i64, i64* %30, align 8, !dbg !8724
  %484 = add i64 %482, %483, !dbg !8725
  %485 = sub i64 %481, %484, !dbg !8726
  %486 = call i64 @mbrtowc(i32* %33, i8* %480, i64 %485, %struct.__mbstate_t* %32) #8, !dbg !8727
  store i64 %486, i64* %34, align 8, !dbg !8717
  %487 = load i64, i64* %34, align 8, !dbg !8728
  %488 = icmp eq i64 %487, 0, !dbg !8730
  br i1 %488, label %489, label %490, !dbg !8731

; <label>:489:                                    ; preds = %475
  br label %563, !dbg !8732

; <label>:490:                                    ; preds = %475
  %491 = load i64, i64* %34, align 8, !dbg !8733
  %492 = icmp eq i64 %491, -1, !dbg !8735
  br i1 %492, label %493, label %494, !dbg !8736

; <label>:493:                                    ; preds = %490
  store i8 0, i8* %31, align 1, !dbg !8737
  br label %563, !dbg !8739

; <label>:494:                                    ; preds = %490
  %495 = load i64, i64* %34, align 8, !dbg !8740
  %496 = icmp eq i64 %495, -2, !dbg !8742
  br i1 %496, label %497, label %519, !dbg !8743

; <label>:497:                                    ; preds = %494
  store i8 0, i8* %31, align 1, !dbg !8744
  br label %498, !dbg !8746

; <label>:498:                                    ; preds = %515, %497
  %499 = load i64, i64* %20, align 8, !dbg !8747
  %500 = load i64, i64* %30, align 8, !dbg !8748
  %501 = add i64 %499, %500, !dbg !8749
  %502 = load i64, i64* %14, align 8, !dbg !8750
  %503 = icmp ult i64 %501, %502, !dbg !8751
  br i1 %503, label %504, label %513, !dbg !8752

; <label>:504:                                    ; preds = %498
  %505 = load i8*, i8** %13, align 8, !dbg !8753
  %506 = load i64, i64* %20, align 8, !dbg !8754
  %507 = load i64, i64* %30, align 8, !dbg !8755
  %508 = add i64 %506, %507, !dbg !8756
  %509 = getelementptr inbounds i8, i8* %505, i64 %508, !dbg !8753
  %510 = load i8, i8* %509, align 1, !dbg !8753
  %511 = sext i8 %510 to i32, !dbg !8753
  %512 = icmp ne i32 %511, 0, !dbg !8752
  br label %513

; <label>:513:                                    ; preds = %504, %498
  %514 = phi i1 [ false, %498 ], [ %512, %504 ]
  br i1 %514, label %515, label %518, !dbg !8746

; <label>:515:                                    ; preds = %513
  %516 = load i64, i64* %30, align 8, !dbg !8757
  %517 = add i64 %516, 1, !dbg !8757
  store i64 %517, i64* %30, align 8, !dbg !8757
  br label %498, !dbg !8746, !llvm.loop !8758

; <label>:518:                                    ; preds = %513
  br label %563, !dbg !8759

; <label>:519:                                    ; preds = %494
  %520 = load i8, i8* %26, align 1, !dbg !8760
  %521 = trunc i8 %520 to i1, !dbg !8760
  br i1 %521, label %522, label %547, !dbg !8763

; <label>:522:                                    ; preds = %519
  %523 = load i32, i32* %15, align 4, !dbg !8764
  %524 = icmp eq i32 %523, 2, !dbg !8765
  br i1 %524, label %525, label %547, !dbg !8766

; <label>:525:                                    ; preds = %522
  call void @llvm.dbg.declare(metadata i64* %35, metadata !8767, metadata !DIExpression()), !dbg !8769
  store i64 1, i64* %35, align 8, !dbg !8770
  br label %526, !dbg !8772

; <label>:526:                                    ; preds = %543, %525
  %527 = load i64, i64* %35, align 8, !dbg !8773
  %528 = load i64, i64* %34, align 8, !dbg !8775
  %529 = icmp ult i64 %527, %528, !dbg !8776
  br i1 %529, label %530, label %546, !dbg !8777

; <label>:530:                                    ; preds = %526
  %531 = load i8*, i8** %13, align 8, !dbg !8778
  %532 = load i64, i64* %20, align 8, !dbg !8779
  %533 = load i64, i64* %30, align 8, !dbg !8780
  %534 = add i64 %532, %533, !dbg !8781
  %535 = load i64, i64* %35, align 8, !dbg !8782
  %536 = add i64 %534, %535, !dbg !8783
  %537 = getelementptr inbounds i8, i8* %531, i64 %536, !dbg !8778
  %538 = load i8, i8* %537, align 1, !dbg !8778
  %539 = sext i8 %538 to i32, !dbg !8778
  switch i32 %539, label %541 [
    i32 91, label %540
    i32 92, label %540
    i32 94, label %540
    i32 96, label %540
    i32 124, label %540
  ], !dbg !8784

; <label>:540:                                    ; preds = %530, %530, %530, %530, %530
  br label %796, !dbg !8785

; <label>:541:                                    ; preds = %530
  br label %542, !dbg !8787

; <label>:542:                                    ; preds = %541
  br label %543, !dbg !8788

; <label>:543:                                    ; preds = %542
  %544 = load i64, i64* %35, align 8, !dbg !8789
  %545 = add i64 %544, 1, !dbg !8789
  store i64 %545, i64* %35, align 8, !dbg !8789
  br label %526, !dbg !8790, !llvm.loop !8791

; <label>:546:                                    ; preds = %526
  br label %547, !dbg !8793

; <label>:547:                                    ; preds = %546, %522, %519
  %548 = load i32, i32* %33, align 4, !dbg !8794
  %549 = call i32 @iswprint(i32 %548) #8, !dbg !8796
  %550 = icmp ne i32 %549, 0, !dbg !8796
  br i1 %550, label %552, label %551, !dbg !8797

; <label>:551:                                    ; preds = %547
  store i8 0, i8* %31, align 1, !dbg !8798
  br label %552, !dbg !8799

; <label>:552:                                    ; preds = %551, %547
  %553 = load i64, i64* %34, align 8, !dbg !8800
  %554 = load i64, i64* %30, align 8, !dbg !8801
  %555 = add i64 %554, %553, !dbg !8801
  store i64 %555, i64* %30, align 8, !dbg !8801
  br label %556

; <label>:556:                                    ; preds = %552
  br label %557

; <label>:557:                                    ; preds = %556
  br label %558

; <label>:558:                                    ; preds = %557
  br label %559, !dbg !8802

; <label>:559:                                    ; preds = %558
  %560 = call i32 @mbsinit(%struct.__mbstate_t* %32) #12, !dbg !8803
  %561 = icmp ne i32 %560, 0, !dbg !8804
  %562 = xor i1 %561, true, !dbg !8804
  br i1 %562, label %475, label %563, !dbg !8802, !llvm.loop !8710

; <label>:563:                                    ; preds = %559, %518, %493, %489
  br label %564

; <label>:564:                                    ; preds = %563, %455
  %565 = load i64, i64* %30, align 8, !dbg !8805
  %566 = icmp ult i64 1, %565, !dbg !8807
  br i1 %566, label %573, label %567, !dbg !8808

; <label>:567:                                    ; preds = %564
  %568 = load i8, i8* %24, align 1, !dbg !8809
  %569 = trunc i8 %568 to i1, !dbg !8809
  br i1 %569, label %570, label %683, !dbg !8810

; <label>:570:                                    ; preds = %567
  %571 = load i8, i8* %31, align 1, !dbg !8811
  %572 = trunc i8 %571 to i1, !dbg !8811
  br i1 %572, label %683, label %573, !dbg !8812

; <label>:573:                                    ; preds = %570, %564
  call void @llvm.dbg.declare(metadata i64* %36, metadata !8813, metadata !DIExpression()), !dbg !8815
  %574 = load i64, i64* %20, align 8, !dbg !8816
  %575 = load i64, i64* %30, align 8, !dbg !8817
  %576 = add i64 %574, %575, !dbg !8818
  store i64 %576, i64* %36, align 8, !dbg !8815
  br label %577, !dbg !8819

; <label>:577:                                    ; preds = %676, %573
  %578 = load i8, i8* %24, align 1, !dbg !8820
  %579 = trunc i8 %578 to i1, !dbg !8820
  br i1 %579, label %580, label %640, !dbg !8825

; <label>:580:                                    ; preds = %577
  %581 = load i8, i8* %31, align 1, !dbg !8826
  %582 = trunc i8 %581 to i1, !dbg !8826
  br i1 %582, label %640, label %583, !dbg !8827

; <label>:583:                                    ; preds = %580
  %584 = load i8, i8* %26, align 1, !dbg !8828
  %585 = trunc i8 %584 to i1, !dbg !8828
  br i1 %585, label %586, label %587, !dbg !8831

; <label>:586:                                    ; preds = %583
  br label %796, !dbg !8832

; <label>:587:                                    ; preds = %583
  br label %588, !dbg !8833, !llvm.loop !8834

; <label>:588:                                    ; preds = %587
  %589 = load i64, i64* %21, align 8, !dbg !8835
  %590 = load i64, i64* %12, align 8, !dbg !8835
  %591 = icmp ult i64 %589, %590, !dbg !8835
  br i1 %591, label %592, label %596, !dbg !8838

; <label>:592:                                    ; preds = %588
  %593 = load i8*, i8** %11, align 8, !dbg !8835
  %594 = load i64, i64* %21, align 8, !dbg !8835
  %595 = getelementptr inbounds i8, i8* %593, i64 %594, !dbg !8835
  store i8 92, i8* %595, align 1, !dbg !8835
  br label %596, !dbg !8835

; <label>:596:                                    ; preds = %592, %588
  %597 = load i64, i64* %21, align 8, !dbg !8838
  %598 = add i64 %597, 1, !dbg !8838
  store i64 %598, i64* %21, align 8, !dbg !8838
  br label %599, !dbg !8838

; <label>:599:                                    ; preds = %596
  br label %600, !dbg !8839, !llvm.loop !8840

; <label>:600:                                    ; preds = %599
  %601 = load i64, i64* %21, align 8, !dbg !8841
  %602 = load i64, i64* %12, align 8, !dbg !8841
  %603 = icmp ult i64 %601, %602, !dbg !8841
  br i1 %603, label %604, label %613, !dbg !8844

; <label>:604:                                    ; preds = %600
  %605 = load i8, i8* %27, align 1, !dbg !8841
  %606 = zext i8 %605 to i32, !dbg !8841
  %607 = ashr i32 %606, 6, !dbg !8841
  %608 = add nsw i32 48, %607, !dbg !8841
  %609 = trunc i32 %608 to i8, !dbg !8841
  %610 = load i8*, i8** %11, align 8, !dbg !8841
  %611 = load i64, i64* %21, align 8, !dbg !8841
  %612 = getelementptr inbounds i8, i8* %610, i64 %611, !dbg !8841
  store i8 %609, i8* %612, align 1, !dbg !8841
  br label %613, !dbg !8841

; <label>:613:                                    ; preds = %604, %600
  %614 = load i64, i64* %21, align 8, !dbg !8844
  %615 = add i64 %614, 1, !dbg !8844
  store i64 %615, i64* %21, align 8, !dbg !8844
  br label %616, !dbg !8844

; <label>:616:                                    ; preds = %613
  br label %617, !dbg !8845, !llvm.loop !8846

; <label>:617:                                    ; preds = %616
  %618 = load i64, i64* %21, align 8, !dbg !8847
  %619 = load i64, i64* %12, align 8, !dbg !8847
  %620 = icmp ult i64 %618, %619, !dbg !8847
  br i1 %620, label %621, label %631, !dbg !8850

; <label>:621:                                    ; preds = %617
  %622 = load i8, i8* %27, align 1, !dbg !8847
  %623 = zext i8 %622 to i32, !dbg !8847
  %624 = ashr i32 %623, 3, !dbg !8847
  %625 = and i32 %624, 7, !dbg !8847
  %626 = add nsw i32 48, %625, !dbg !8847
  %627 = trunc i32 %626 to i8, !dbg !8847
  %628 = load i8*, i8** %11, align 8, !dbg !8847
  %629 = load i64, i64* %21, align 8, !dbg !8847
  %630 = getelementptr inbounds i8, i8* %628, i64 %629, !dbg !8847
  store i8 %627, i8* %630, align 1, !dbg !8847
  br label %631, !dbg !8847

; <label>:631:                                    ; preds = %621, %617
  %632 = load i64, i64* %21, align 8, !dbg !8850
  %633 = add i64 %632, 1, !dbg !8850
  store i64 %633, i64* %21, align 8, !dbg !8850
  br label %634, !dbg !8850

; <label>:634:                                    ; preds = %631
  %635 = load i8, i8* %27, align 1, !dbg !8851
  %636 = zext i8 %635 to i32, !dbg !8851
  %637 = and i32 %636, 7, !dbg !8852
  %638 = add nsw i32 48, %637, !dbg !8853
  %639 = trunc i32 %638 to i8, !dbg !8854
  store i8 %639, i8* %27, align 1, !dbg !8855
  br label %657, !dbg !8856

; <label>:640:                                    ; preds = %580, %577
  %641 = load i8, i8* %29, align 1, !dbg !8857
  %642 = trunc i8 %641 to i1, !dbg !8857
  br i1 %642, label %643, label %656, !dbg !8859

; <label>:643:                                    ; preds = %640
  br label %644, !dbg !8860, !llvm.loop !8862

; <label>:644:                                    ; preds = %643
  %645 = load i64, i64* %21, align 8, !dbg !8863
  %646 = load i64, i64* %12, align 8, !dbg !8863
  %647 = icmp ult i64 %645, %646, !dbg !8863
  br i1 %647, label %648, label %652, !dbg !8866

; <label>:648:                                    ; preds = %644
  %649 = load i8*, i8** %11, align 8, !dbg !8863
  %650 = load i64, i64* %21, align 8, !dbg !8863
  %651 = getelementptr inbounds i8, i8* %649, i64 %650, !dbg !8863
  store i8 92, i8* %651, align 1, !dbg !8863
  br label %652, !dbg !8863

; <label>:652:                                    ; preds = %648, %644
  %653 = load i64, i64* %21, align 8, !dbg !8866
  %654 = add i64 %653, 1, !dbg !8866
  store i64 %654, i64* %21, align 8, !dbg !8866
  br label %655, !dbg !8866

; <label>:655:                                    ; preds = %652
  store i8 0, i8* %29, align 1, !dbg !8867
  br label %656, !dbg !8868

; <label>:656:                                    ; preds = %655, %640
  br label %657

; <label>:657:                                    ; preds = %656, %634
  %658 = load i64, i64* %36, align 8, !dbg !8869
  %659 = load i64, i64* %20, align 8, !dbg !8871
  %660 = add i64 %659, 1, !dbg !8872
  %661 = icmp ule i64 %658, %660, !dbg !8873
  br i1 %661, label %662, label %663, !dbg !8874

; <label>:662:                                    ; preds = %657
  br label %682, !dbg !8875

; <label>:663:                                    ; preds = %657
  br label %664, !dbg !8876, !llvm.loop !8877

; <label>:664:                                    ; preds = %663
  %665 = load i64, i64* %21, align 8, !dbg !8878
  %666 = load i64, i64* %12, align 8, !dbg !8878
  %667 = icmp ult i64 %665, %666, !dbg !8878
  br i1 %667, label %668, label %673, !dbg !8881

; <label>:668:                                    ; preds = %664
  %669 = load i8, i8* %27, align 1, !dbg !8878
  %670 = load i8*, i8** %11, align 8, !dbg !8878
  %671 = load i64, i64* %21, align 8, !dbg !8878
  %672 = getelementptr inbounds i8, i8* %670, i64 %671, !dbg !8878
  store i8 %669, i8* %672, align 1, !dbg !8878
  br label %673, !dbg !8878

; <label>:673:                                    ; preds = %668, %664
  %674 = load i64, i64* %21, align 8, !dbg !8881
  %675 = add i64 %674, 1, !dbg !8881
  store i64 %675, i64* %21, align 8, !dbg !8881
  br label %676, !dbg !8881

; <label>:676:                                    ; preds = %673
  %677 = load i8*, i8** %13, align 8, !dbg !8882
  %678 = load i64, i64* %20, align 8, !dbg !8883
  %679 = add i64 %678, 1, !dbg !8883
  store i64 %679, i64* %20, align 8, !dbg !8883
  %680 = getelementptr inbounds i8, i8* %677, i64 %679, !dbg !8882
  %681 = load i8, i8* %680, align 1, !dbg !8882
  store i8 %681, i8* %27, align 1, !dbg !8884
  br label %577, !dbg !8885, !llvm.loop !8886

; <label>:682:                                    ; preds = %662
  br label %729, !dbg !8889

; <label>:683:                                    ; preds = %570, %567
  br label %684, !dbg !8890

; <label>:684:                                    ; preds = %683, %451, %450, %405, %396, %391, %378, %345, %249
  %685 = load i8, i8* %24, align 1, !dbg !8891
  %686 = trunc i8 %685 to i1, !dbg !8891
  br i1 %686, label %690, label %687, !dbg !8893

; <label>:687:                                    ; preds = %684
  %688 = load i8, i8* %26, align 1, !dbg !8894
  %689 = trunc i8 %688 to i1, !dbg !8894
  br i1 %689, label %690, label %707, !dbg !8895

; <label>:690:                                    ; preds = %687, %684
  %691 = load i32*, i32** %17, align 8, !dbg !8896
  %692 = icmp ne i32* %691, null, !dbg !8896
  br i1 %692, label %693, label %707, !dbg !8897

; <label>:693:                                    ; preds = %690
  %694 = load i32*, i32** %17, align 8, !dbg !8898
  %695 = load i8, i8* %27, align 1, !dbg !8899
  %696 = zext i8 %695 to i64, !dbg !8899
  %697 = udiv i64 %696, 32, !dbg !8900
  %698 = getelementptr inbounds i32, i32* %694, i64 %697, !dbg !8898
  %699 = load i32, i32* %698, align 4, !dbg !8898
  %700 = load i8, i8* %27, align 1, !dbg !8901
  %701 = zext i8 %700 to i64, !dbg !8901
  %702 = urem i64 %701, 32, !dbg !8902
  %703 = trunc i64 %702 to i32, !dbg !8903
  %704 = shl i32 1, %703, !dbg !8903
  %705 = and i32 %699, %704, !dbg !8904
  %706 = icmp ne i32 %705, 0, !dbg !8904
  br i1 %706, label %711, label %707, !dbg !8905

; <label>:707:                                    ; preds = %693, %690, %687
  %708 = load i8, i8* %29, align 1, !dbg !8906
  %709 = trunc i8 %708 to i1, !dbg !8906
  br i1 %709, label %711, label %710, !dbg !8907

; <label>:710:                                    ; preds = %707
  br label %729, !dbg !8908

; <label>:711:                                    ; preds = %707, %693
  br label %712, !dbg !8906

; <label>:712:                                    ; preds = %711, %376
  %713 = load i8, i8* %26, align 1, !dbg !8909
  %714 = trunc i8 %713 to i1, !dbg !8909
  br i1 %714, label %715, label %716, !dbg !8911

; <label>:715:                                    ; preds = %712
  br label %796, !dbg !8912

; <label>:716:                                    ; preds = %712
  br label %717, !dbg !8913, !llvm.loop !8914

; <label>:717:                                    ; preds = %716
  %718 = load i64, i64* %21, align 8, !dbg !8915
  %719 = load i64, i64* %12, align 8, !dbg !8915
  %720 = icmp ult i64 %718, %719, !dbg !8915
  br i1 %720, label %721, label %725, !dbg !8918

; <label>:721:                                    ; preds = %717
  %722 = load i8*, i8** %11, align 8, !dbg !8915
  %723 = load i64, i64* %21, align 8, !dbg !8915
  %724 = getelementptr inbounds i8, i8* %722, i64 %723, !dbg !8915
  store i8 92, i8* %724, align 1, !dbg !8915
  br label %725, !dbg !8915

; <label>:725:                                    ; preds = %721, %717
  %726 = load i64, i64* %21, align 8, !dbg !8918
  %727 = add i64 %726, 1, !dbg !8918
  store i64 %727, i64* %21, align 8, !dbg !8918
  br label %728, !dbg !8918

; <label>:728:                                    ; preds = %725
  br label %729, !dbg !8918

; <label>:729:                                    ; preds = %728, %710, %682, %363
  br label %730, !dbg !8919, !llvm.loop !8920

; <label>:730:                                    ; preds = %729
  %731 = load i64, i64* %21, align 8, !dbg !8921
  %732 = load i64, i64* %12, align 8, !dbg !8921
  %733 = icmp ult i64 %731, %732, !dbg !8921
  br i1 %733, label %734, label %739, !dbg !8924

; <label>:734:                                    ; preds = %730
  %735 = load i8, i8* %27, align 1, !dbg !8921
  %736 = load i8*, i8** %11, align 8, !dbg !8921
  %737 = load i64, i64* %21, align 8, !dbg !8921
  %738 = getelementptr inbounds i8, i8* %736, i64 %737, !dbg !8921
  store i8 %735, i8* %738, align 1, !dbg !8921
  br label %739, !dbg !8921

; <label>:739:                                    ; preds = %734, %730
  %740 = load i64, i64* %21, align 8, !dbg !8924
  %741 = add i64 %740, 1, !dbg !8924
  store i64 %741, i64* %21, align 8, !dbg !8924
  br label %742, !dbg !8924

; <label>:742:                                    ; preds = %739
  br label %743, !dbg !8925

; <label>:743:                                    ; preds = %742, %247
  %744 = load i64, i64* %20, align 8, !dbg !8926
  %745 = add i64 %744, 1, !dbg !8926
  store i64 %745, i64* %20, align 8, !dbg !8926
  br label %125, !dbg !8927, !llvm.loop !8928

; <label>:746:                                    ; preds = %141
  %747 = load i64, i64* %21, align 8, !dbg !8930
  %748 = icmp eq i64 %747, 0, !dbg !8932
  br i1 %748, label %749, label %756, !dbg !8933

; <label>:749:                                    ; preds = %746
  %750 = load i32, i32* %15, align 4, !dbg !8934
  %751 = icmp eq i32 %750, 2, !dbg !8935
  br i1 %751, label %752, label %756, !dbg !8936

; <label>:752:                                    ; preds = %749
  %753 = load i8, i8* %26, align 1, !dbg !8937
  %754 = trunc i8 %753 to i1, !dbg !8937
  br i1 %754, label %755, label %756, !dbg !8938

; <label>:755:                                    ; preds = %752
  br label %796, !dbg !8939

; <label>:756:                                    ; preds = %752, %749, %746
  %757 = load i8*, i8** %22, align 8, !dbg !8940
  %758 = icmp ne i8* %757, null, !dbg !8940
  br i1 %758, label %759, label %786, !dbg !8942

; <label>:759:                                    ; preds = %756
  %760 = load i8, i8* %26, align 1, !dbg !8943
  %761 = trunc i8 %760 to i1, !dbg !8943
  br i1 %761, label %786, label %762, !dbg !8944

; <label>:762:                                    ; preds = %759
  br label %763, !dbg !8945

; <label>:763:                                    ; preds = %782, %762
  %764 = load i8*, i8** %22, align 8, !dbg !8946
  %765 = load i8, i8* %764, align 1, !dbg !8949
  %766 = icmp ne i8 %765, 0, !dbg !8950
  br i1 %766, label %767, label %785, !dbg !8950

; <label>:767:                                    ; preds = %763
  br label %768, !dbg !8951, !llvm.loop !8952

; <label>:768:                                    ; preds = %767
  %769 = load i64, i64* %21, align 8, !dbg !8953
  %770 = load i64, i64* %12, align 8, !dbg !8953
  %771 = icmp ult i64 %769, %770, !dbg !8953
  br i1 %771, label %772, label %778, !dbg !8956

; <label>:772:                                    ; preds = %768
  %773 = load i8*, i8** %22, align 8, !dbg !8953
  %774 = load i8, i8* %773, align 1, !dbg !8953
  %775 = load i8*, i8** %11, align 8, !dbg !8953
  %776 = load i64, i64* %21, align 8, !dbg !8953
  %777 = getelementptr inbounds i8, i8* %775, i64 %776, !dbg !8953
  store i8 %774, i8* %777, align 1, !dbg !8953
  br label %778, !dbg !8953

; <label>:778:                                    ; preds = %772, %768
  %779 = load i64, i64* %21, align 8, !dbg !8956
  %780 = add i64 %779, 1, !dbg !8956
  store i64 %780, i64* %21, align 8, !dbg !8956
  br label %781, !dbg !8956

; <label>:781:                                    ; preds = %778
  br label %782, !dbg !8956

; <label>:782:                                    ; preds = %781
  %783 = load i8*, i8** %22, align 8, !dbg !8957
  %784 = getelementptr inbounds i8, i8* %783, i32 1, !dbg !8957
  store i8* %784, i8** %22, align 8, !dbg !8957
  br label %763, !dbg !8958, !llvm.loop !8959

; <label>:785:                                    ; preds = %763
  br label %786, !dbg !8960

; <label>:786:                                    ; preds = %785, %759, %756
  %787 = load i64, i64* %21, align 8, !dbg !8961
  %788 = load i64, i64* %12, align 8, !dbg !8963
  %789 = icmp ult i64 %787, %788, !dbg !8964
  br i1 %789, label %790, label %794, !dbg !8965

; <label>:790:                                    ; preds = %786
  %791 = load i8*, i8** %11, align 8, !dbg !8966
  %792 = load i64, i64* %21, align 8, !dbg !8967
  %793 = getelementptr inbounds i8, i8* %791, i64 %792, !dbg !8966
  store i8 0, i8* %793, align 1, !dbg !8968
  br label %794, !dbg !8966

; <label>:794:                                    ; preds = %790, %786
  %795 = load i64, i64* %21, align 8, !dbg !8969
  store i64 %795, i64* %10, align 8, !dbg !8970
  br label %807, !dbg !8970

; <label>:796:                                    ; preds = %755, %715, %586, %540, %412, %404, %371, %284, %255, %183, %168
  %797 = load i8*, i8** %11, align 8, !dbg !8971
  %798 = load i64, i64* %12, align 8, !dbg !8972
  %799 = load i8*, i8** %13, align 8, !dbg !8973
  %800 = load i64, i64* %14, align 8, !dbg !8974
  %801 = load i32, i32* %15, align 4, !dbg !8975
  %802 = load i32, i32* %16, align 4, !dbg !8976
  %803 = and i32 %802, -3, !dbg !8977
  %804 = load i8*, i8** %18, align 8, !dbg !8978
  %805 = load i8*, i8** %19, align 8, !dbg !8979
  %806 = call i64 @quotearg_buffer_restyled(i8* %797, i64 %798, i8* %799, i64 %800, i32 %801, i32 %803, i32* null, i8* %804, i8* %805), !dbg !8980
  store i64 %806, i64* %10, align 8, !dbg !8981
  br label %807, !dbg !8981

; <label>:807:                                    ; preds = %796, %794
  %808 = load i64, i64* %10, align 8, !dbg !8982
  ret i64 %808, !dbg !8982
}

; Function Attrs: nounwind
declare i64 @__ctype_get_mb_cur_max() #5

; Function Attrs: noinline nounwind uwtable
define internal i8* @gettext_quote(i8*, i32) #3 !dbg !8983 {
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i8*, align 8
  store i8* %0, i8** %3, align 8
  call void @llvm.dbg.declare(metadata i8** %3, metadata !8986, metadata !DIExpression()), !dbg !8987
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !8988, metadata !DIExpression()), !dbg !8989
  call void @llvm.dbg.declare(metadata i8** %5, metadata !8990, metadata !DIExpression()), !dbg !8991
  %6 = load i8*, i8** %3, align 8, !dbg !8992
  store i8* %6, i8** %5, align 8, !dbg !8991
  %7 = load i8*, i8** %5, align 8, !dbg !8993
  %8 = load i8*, i8** %3, align 8, !dbg !8995
  %9 = icmp eq i8* %7, %8, !dbg !8996
  br i1 %9, label %10, label %14, !dbg !8997

; <label>:10:                                     ; preds = %2
  %11 = load i32, i32* %4, align 4, !dbg !8998
  %12 = icmp eq i32 %11, 7, !dbg !8999
  br i1 %12, label %13, label %14, !dbg !9000

; <label>:13:                                     ; preds = %10
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8.199, i32 0, i32 0), i8** %5, align 8, !dbg !9001
  br label %14, !dbg !9002

; <label>:14:                                     ; preds = %13, %10, %2
  %15 = load i8*, i8** %5, align 8, !dbg !9003
  ret i8* %15, !dbg !9004
}

; Function Attrs: nounwind readnone
declare i16** @__ctype_b_loc() #7

; Function Attrs: nounwind
declare i64 @mbrtowc(i32*, i8*, i64, %struct.__mbstate_t*) #5

; Function Attrs: nounwind
declare i32 @iswprint(i32) #5

; Function Attrs: nounwind readonly
declare i32 @mbsinit(%struct.__mbstate_t*) #6

; Function Attrs: noinline nounwind uwtable
define i8* @quotearg_alloc(i8*, i64, %struct.quoting_options*) #3 !dbg !9005 {
  %4 = alloca i8*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %struct.quoting_options*, align 8
  store i8* %0, i8** %4, align 8
  call void @llvm.dbg.declare(metadata i8** %4, metadata !9008, metadata !DIExpression()), !dbg !9009
  store i64 %1, i64* %5, align 8
  call void @llvm.dbg.declare(metadata i64* %5, metadata !9010, metadata !DIExpression()), !dbg !9011
  store %struct.quoting_options* %2, %struct.quoting_options** %6, align 8
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %6, metadata !9012, metadata !DIExpression()), !dbg !9013
  %7 = load i8*, i8** %4, align 8, !dbg !9014
  %8 = load i64, i64* %5, align 8, !dbg !9015
  %9 = load %struct.quoting_options*, %struct.quoting_options** %6, align 8, !dbg !9016
  %10 = call i8* @quotearg_alloc_mem(i8* %7, i64 %8, i64* null, %struct.quoting_options* %9), !dbg !9017
  ret i8* %10, !dbg !9018
}

; Function Attrs: noinline nounwind uwtable
define i8* @quotearg_alloc_mem(i8*, i64, i64*, %struct.quoting_options*) #3 !dbg !9019 {
  %5 = alloca i8*, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64*, align 8
  %8 = alloca %struct.quoting_options*, align 8
  %9 = alloca %struct.quoting_options*, align 8
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i64, align 8
  %13 = alloca i8*, align 8
  store i8* %0, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !9022, metadata !DIExpression()), !dbg !9023
  store i64 %1, i64* %6, align 8
  call void @llvm.dbg.declare(metadata i64* %6, metadata !9024, metadata !DIExpression()), !dbg !9025
  store i64* %2, i64** %7, align 8
  call void @llvm.dbg.declare(metadata i64** %7, metadata !9026, metadata !DIExpression()), !dbg !9027
  store %struct.quoting_options* %3, %struct.quoting_options** %8, align 8
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %8, metadata !9028, metadata !DIExpression()), !dbg !9029
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %9, metadata !9030, metadata !DIExpression()), !dbg !9031
  %14 = load %struct.quoting_options*, %struct.quoting_options** %8, align 8, !dbg !9032
  %15 = icmp ne %struct.quoting_options* %14, null, !dbg !9032
  br i1 %15, label %16, label %18, !dbg !9032

; <label>:16:                                     ; preds = %4
  %17 = load %struct.quoting_options*, %struct.quoting_options** %8, align 8, !dbg !9033
  br label %19, !dbg !9032

; <label>:18:                                     ; preds = %4
  br label %19, !dbg !9032

; <label>:19:                                     ; preds = %18, %16
  %20 = phi %struct.quoting_options* [ %17, %16 ], [ @default_quoting_options, %18 ], !dbg !9032
  store %struct.quoting_options* %20, %struct.quoting_options** %9, align 8, !dbg !9031
  call void @llvm.dbg.declare(metadata i32* %10, metadata !9034, metadata !DIExpression()), !dbg !9035
  %21 = call i32* @__errno_location() #14, !dbg !9036
  %22 = load i32, i32* %21, align 4, !dbg !9036
  store i32 %22, i32* %10, align 4, !dbg !9035
  call void @llvm.dbg.declare(metadata i32* %11, metadata !9037, metadata !DIExpression()), !dbg !9038
  %23 = load %struct.quoting_options*, %struct.quoting_options** %9, align 8, !dbg !9039
  %24 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %23, i32 0, i32 1, !dbg !9040
  %25 = load i32, i32* %24, align 4, !dbg !9040
  %26 = load i64*, i64** %7, align 8, !dbg !9041
  %27 = icmp ne i64* %26, null, !dbg !9041
  %28 = zext i1 %27 to i64, !dbg !9041
  %29 = select i1 %27, i32 0, i32 1, !dbg !9041
  %30 = or i32 %25, %29, !dbg !9042
  store i32 %30, i32* %11, align 4, !dbg !9038
  call void @llvm.dbg.declare(metadata i64* %12, metadata !9043, metadata !DIExpression()), !dbg !9044
  %31 = load i8*, i8** %5, align 8, !dbg !9045
  %32 = load i64, i64* %6, align 8, !dbg !9046
  %33 = load %struct.quoting_options*, %struct.quoting_options** %9, align 8, !dbg !9047
  %34 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %33, i32 0, i32 0, !dbg !9048
  %35 = load i32, i32* %34, align 8, !dbg !9048
  %36 = load i32, i32* %11, align 4, !dbg !9049
  %37 = load %struct.quoting_options*, %struct.quoting_options** %9, align 8, !dbg !9050
  %38 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %37, i32 0, i32 2, !dbg !9051
  %39 = getelementptr inbounds [8 x i32], [8 x i32]* %38, i32 0, i32 0, !dbg !9050
  %40 = load %struct.quoting_options*, %struct.quoting_options** %9, align 8, !dbg !9052
  %41 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %40, i32 0, i32 3, !dbg !9053
  %42 = load i8*, i8** %41, align 8, !dbg !9053
  %43 = load %struct.quoting_options*, %struct.quoting_options** %9, align 8, !dbg !9054
  %44 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %43, i32 0, i32 4, !dbg !9055
  %45 = load i8*, i8** %44, align 8, !dbg !9055
  %46 = call i64 @quotearg_buffer_restyled(i8* null, i64 0, i8* %31, i64 %32, i32 %35, i32 %36, i32* %39, i8* %42, i8* %45), !dbg !9056
  %47 = add i64 %46, 1, !dbg !9057
  store i64 %47, i64* %12, align 8, !dbg !9044
  call void @llvm.dbg.declare(metadata i8** %13, metadata !9058, metadata !DIExpression()), !dbg !9059
  %48 = load i64, i64* %12, align 8, !dbg !9060
  %49 = call noalias i8* @xcharalloc(i64 %48), !dbg !9061
  store i8* %49, i8** %13, align 8, !dbg !9059
  %50 = load i8*, i8** %13, align 8, !dbg !9062
  %51 = load i64, i64* %12, align 8, !dbg !9063
  %52 = load i8*, i8** %5, align 8, !dbg !9064
  %53 = load i64, i64* %6, align 8, !dbg !9065
  %54 = load %struct.quoting_options*, %struct.quoting_options** %9, align 8, !dbg !9066
  %55 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %54, i32 0, i32 0, !dbg !9067
  %56 = load i32, i32* %55, align 8, !dbg !9067
  %57 = load i32, i32* %11, align 4, !dbg !9068
  %58 = load %struct.quoting_options*, %struct.quoting_options** %9, align 8, !dbg !9069
  %59 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %58, i32 0, i32 2, !dbg !9070
  %60 = getelementptr inbounds [8 x i32], [8 x i32]* %59, i32 0, i32 0, !dbg !9069
  %61 = load %struct.quoting_options*, %struct.quoting_options** %9, align 8, !dbg !9071
  %62 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %61, i32 0, i32 3, !dbg !9072
  %63 = load i8*, i8** %62, align 8, !dbg !9072
  %64 = load %struct.quoting_options*, %struct.quoting_options** %9, align 8, !dbg !9073
  %65 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %64, i32 0, i32 4, !dbg !9074
  %66 = load i8*, i8** %65, align 8, !dbg !9074
  %67 = call i64 @quotearg_buffer_restyled(i8* %50, i64 %51, i8* %52, i64 %53, i32 %56, i32 %57, i32* %60, i8* %63, i8* %66), !dbg !9075
  %68 = load i32, i32* %10, align 4, !dbg !9076
  %69 = call i32* @__errno_location() #14, !dbg !9077
  store i32 %68, i32* %69, align 4, !dbg !9078
  %70 = load i64*, i64** %7, align 8, !dbg !9079
  %71 = icmp ne i64* %70, null, !dbg !9079
  br i1 %71, label %72, label %76, !dbg !9081

; <label>:72:                                     ; preds = %19
  %73 = load i64, i64* %12, align 8, !dbg !9082
  %74 = sub i64 %73, 1, !dbg !9083
  %75 = load i64*, i64** %7, align 8, !dbg !9084
  store i64 %74, i64* %75, align 8, !dbg !9085
  br label %76, !dbg !9086

; <label>:76:                                     ; preds = %72, %19
  %77 = load i8*, i8** %13, align 8, !dbg !9087
  ret i8* %77, !dbg !9088
}

; Function Attrs: noinline nounwind uwtable
define void @quotearg_free() #3 !dbg !9089 {
  %1 = alloca %struct.slotvec*, align 8
  %2 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata %struct.slotvec** %1, metadata !9090, metadata !DIExpression()), !dbg !9091
  %3 = load %struct.slotvec*, %struct.slotvec** @slotvec, align 8, !dbg !9092
  store %struct.slotvec* %3, %struct.slotvec** %1, align 8, !dbg !9091
  call void @llvm.dbg.declare(metadata i32* %2, metadata !9093, metadata !DIExpression()), !dbg !9094
  store i32 1, i32* %2, align 4, !dbg !9095
  br label %4, !dbg !9097

; <label>:4:                                      ; preds = %15, %0
  %5 = load i32, i32* %2, align 4, !dbg !9098
  %6 = load i32, i32* @nslots, align 4, !dbg !9100
  %7 = icmp ult i32 %5, %6, !dbg !9101
  br i1 %7, label %8, label %18, !dbg !9102

; <label>:8:                                      ; preds = %4
  %9 = load %struct.slotvec*, %struct.slotvec** %1, align 8, !dbg !9103
  %10 = load i32, i32* %2, align 4, !dbg !9104
  %11 = zext i32 %10 to i64, !dbg !9103
  %12 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %9, i64 %11, !dbg !9103
  %13 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %12, i32 0, i32 1, !dbg !9105
  %14 = load i8*, i8** %13, align 8, !dbg !9105
  call void @free(i8* %14) #8, !dbg !9106
  br label %15, !dbg !9106

; <label>:15:                                     ; preds = %8
  %16 = load i32, i32* %2, align 4, !dbg !9107
  %17 = add i32 %16, 1, !dbg !9107
  store i32 %17, i32* %2, align 4, !dbg !9107
  br label %4, !dbg !9108, !llvm.loop !9109

; <label>:18:                                     ; preds = %4
  %19 = load %struct.slotvec*, %struct.slotvec** %1, align 8, !dbg !9111
  %20 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %19, i64 0, !dbg !9111
  %21 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %20, i32 0, i32 1, !dbg !9113
  %22 = load i8*, i8** %21, align 8, !dbg !9113
  %23 = icmp ne i8* %22, getelementptr inbounds ([256 x i8], [256 x i8]* @slot0, i32 0, i32 0), !dbg !9114
  br i1 %23, label %24, label %29, !dbg !9115

; <label>:24:                                     ; preds = %18
  %25 = load %struct.slotvec*, %struct.slotvec** %1, align 8, !dbg !9116
  %26 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %25, i64 0, !dbg !9116
  %27 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %26, i32 0, i32 1, !dbg !9118
  %28 = load i8*, i8** %27, align 8, !dbg !9118
  call void @free(i8* %28) #8, !dbg !9119
  store i64 256, i64* getelementptr inbounds (%struct.slotvec, %struct.slotvec* @slotvec0, i32 0, i32 0), align 8, !dbg !9120
  store i8* getelementptr inbounds ([256 x i8], [256 x i8]* @slot0, i32 0, i32 0), i8** getelementptr inbounds (%struct.slotvec, %struct.slotvec* @slotvec0, i32 0, i32 1), align 8, !dbg !9121
  br label %29, !dbg !9122

; <label>:29:                                     ; preds = %24, %18
  %30 = load %struct.slotvec*, %struct.slotvec** %1, align 8, !dbg !9123
  %31 = icmp ne %struct.slotvec* %30, @slotvec0, !dbg !9125
  br i1 %31, label %32, label %35, !dbg !9126

; <label>:32:                                     ; preds = %29
  %33 = load %struct.slotvec*, %struct.slotvec** %1, align 8, !dbg !9127
  %34 = bitcast %struct.slotvec* %33 to i8*, !dbg !9127
  call void @free(i8* %34) #8, !dbg !9129
  store %struct.slotvec* @slotvec0, %struct.slotvec** @slotvec, align 8, !dbg !9130
  br label %35, !dbg !9131

; <label>:35:                                     ; preds = %32, %29
  store i32 1, i32* @nslots, align 4, !dbg !9132
  ret void, !dbg !9133
}

; Function Attrs: noinline nounwind uwtable
define i8* @quotearg_n(i32, i8*) #3 !dbg !9134 {
  %3 = alloca i32, align 4
  %4 = alloca i8*, align 8
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !9137, metadata !DIExpression()), !dbg !9138
  store i8* %1, i8** %4, align 8
  call void @llvm.dbg.declare(metadata i8** %4, metadata !9139, metadata !DIExpression()), !dbg !9140
  %5 = load i32, i32* %3, align 4, !dbg !9141
  %6 = load i8*, i8** %4, align 8, !dbg !9142
  %7 = call i8* @quotearg_n_options(i32 %5, i8* %6, i64 -1, %struct.quoting_options* @default_quoting_options), !dbg !9143
  ret i8* %7, !dbg !9144
}

; Function Attrs: noinline nounwind uwtable
define internal i8* @quotearg_n_options(i32, i8*, i64, %struct.quoting_options*) #3 !dbg !9145 {
  %5 = alloca i32, align 4
  %6 = alloca i8*, align 8
  %7 = alloca i64, align 8
  %8 = alloca %struct.quoting_options*, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca %struct.slotvec*, align 8
  %12 = alloca i64, align 8
  %13 = alloca i8, align 1
  %14 = alloca i64, align 8
  %15 = alloca i8*, align 8
  %16 = alloca i32, align 4
  %17 = alloca i64, align 8
  store i32 %0, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !9148, metadata !DIExpression()), !dbg !9149
  store i8* %1, i8** %6, align 8
  call void @llvm.dbg.declare(metadata i8** %6, metadata !9150, metadata !DIExpression()), !dbg !9151
  store i64 %2, i64* %7, align 8
  call void @llvm.dbg.declare(metadata i64* %7, metadata !9152, metadata !DIExpression()), !dbg !9153
  store %struct.quoting_options* %3, %struct.quoting_options** %8, align 8
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %8, metadata !9154, metadata !DIExpression()), !dbg !9155
  call void @llvm.dbg.declare(metadata i32* %9, metadata !9156, metadata !DIExpression()), !dbg !9157
  %18 = call i32* @__errno_location() #14, !dbg !9158
  %19 = load i32, i32* %18, align 4, !dbg !9158
  store i32 %19, i32* %9, align 4, !dbg !9157
  call void @llvm.dbg.declare(metadata i32* %10, metadata !9159, metadata !DIExpression()), !dbg !9160
  %20 = load i32, i32* %5, align 4, !dbg !9161
  store i32 %20, i32* %10, align 4, !dbg !9160
  call void @llvm.dbg.declare(metadata %struct.slotvec** %11, metadata !9162, metadata !DIExpression()), !dbg !9163
  %21 = load %struct.slotvec*, %struct.slotvec** @slotvec, align 8, !dbg !9164
  store %struct.slotvec* %21, %struct.slotvec** %11, align 8, !dbg !9163
  %22 = load i32, i32* %5, align 4, !dbg !9165
  %23 = icmp slt i32 %22, 0, !dbg !9167
  br i1 %23, label %24, label %25, !dbg !9168

; <label>:24:                                     ; preds = %4
  call void @abort() #11, !dbg !9169
  unreachable, !dbg !9169

; <label>:25:                                     ; preds = %4
  %26 = load i32, i32* @nslots, align 4, !dbg !9170
  %27 = load i32, i32* %10, align 4, !dbg !9172
  %28 = icmp ule i32 %26, %27, !dbg !9173
  br i1 %28, label %29, label %70, !dbg !9174

; <label>:29:                                     ; preds = %25
  call void @llvm.dbg.declare(metadata i64* %12, metadata !9175, metadata !DIExpression()), !dbg !9177
  %30 = load i32, i32* %10, align 4, !dbg !9178
  %31 = add i32 %30, 1, !dbg !9179
  %32 = zext i32 %31 to i64, !dbg !9178
  store i64 %32, i64* %12, align 8, !dbg !9177
  call void @llvm.dbg.declare(metadata i8* %13, metadata !9180, metadata !DIExpression()), !dbg !9181
  %33 = load %struct.slotvec*, %struct.slotvec** %11, align 8, !dbg !9182
  %34 = icmp eq %struct.slotvec* %33, @slotvec0, !dbg !9183
  %35 = zext i1 %34 to i8, !dbg !9181
  store i8 %35, i8* %13, align 1, !dbg !9181
  %36 = load i64, i64* %12, align 8, !dbg !9184
  %37 = icmp ult i64 1152921504606846975, %36, !dbg !9184
  br i1 %37, label %38, label %39, !dbg !9186

; <label>:38:                                     ; preds = %29
  call void @xalloc_die() #13, !dbg !9187
  unreachable, !dbg !9187

; <label>:39:                                     ; preds = %29
  %40 = load i8, i8* %13, align 1, !dbg !9188
  %41 = trunc i8 %40 to i1, !dbg !9188
  br i1 %41, label %42, label %43, !dbg !9188

; <label>:42:                                     ; preds = %39
  br label %45, !dbg !9188

; <label>:43:                                     ; preds = %39
  %44 = load %struct.slotvec*, %struct.slotvec** %11, align 8, !dbg !9189
  br label %45, !dbg !9188

; <label>:45:                                     ; preds = %43, %42
  %46 = phi %struct.slotvec* [ null, %42 ], [ %44, %43 ], !dbg !9188
  %47 = bitcast %struct.slotvec* %46 to i8*, !dbg !9188
  %48 = load i64, i64* %12, align 8, !dbg !9190
  %49 = mul i64 %48, 16, !dbg !9191
  %50 = call i8* @xrealloc(i8* %47, i64 %49), !dbg !9192
  %51 = bitcast i8* %50 to %struct.slotvec*, !dbg !9192
  store %struct.slotvec* %51, %struct.slotvec** %11, align 8, !dbg !9193
  store %struct.slotvec* %51, %struct.slotvec** @slotvec, align 8, !dbg !9194
  %52 = load i8, i8* %13, align 1, !dbg !9195
  %53 = trunc i8 %52 to i1, !dbg !9195
  br i1 %53, label %54, label %57, !dbg !9197

; <label>:54:                                     ; preds = %45
  %55 = load %struct.slotvec*, %struct.slotvec** %11, align 8, !dbg !9198
  %56 = bitcast %struct.slotvec* %55 to i8*, !dbg !9199
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %56, i8* bitcast (%struct.slotvec* @slotvec0 to i8*), i64 16, i32 8, i1 false), !dbg !9199
  br label %57, !dbg !9200

; <label>:57:                                     ; preds = %54, %45
  %58 = load %struct.slotvec*, %struct.slotvec** %11, align 8, !dbg !9201
  %59 = load i32, i32* @nslots, align 4, !dbg !9202
  %60 = zext i32 %59 to i64, !dbg !9203
  %61 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %58, i64 %60, !dbg !9203
  %62 = bitcast %struct.slotvec* %61 to i8*, !dbg !9204
  %63 = load i64, i64* %12, align 8, !dbg !9205
  %64 = load i32, i32* @nslots, align 4, !dbg !9206
  %65 = zext i32 %64 to i64, !dbg !9206
  %66 = sub i64 %63, %65, !dbg !9207
  %67 = mul i64 %66, 16, !dbg !9208
  call void @llvm.memset.p0i8.i64(i8* %62, i8 0, i64 %67, i32 8, i1 false), !dbg !9204
  %68 = load i64, i64* %12, align 8, !dbg !9209
  %69 = trunc i64 %68 to i32, !dbg !9209
  store i32 %69, i32* @nslots, align 4, !dbg !9210
  br label %70, !dbg !9211

; <label>:70:                                     ; preds = %57, %25
  call void @llvm.dbg.declare(metadata i64* %14, metadata !9212, metadata !DIExpression()), !dbg !9214
  %71 = load %struct.slotvec*, %struct.slotvec** %11, align 8, !dbg !9215
  %72 = load i32, i32* %5, align 4, !dbg !9216
  %73 = sext i32 %72 to i64, !dbg !9215
  %74 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %71, i64 %73, !dbg !9215
  %75 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %74, i32 0, i32 0, !dbg !9217
  %76 = load i64, i64* %75, align 8, !dbg !9217
  store i64 %76, i64* %14, align 8, !dbg !9214
  call void @llvm.dbg.declare(metadata i8** %15, metadata !9218, metadata !DIExpression()), !dbg !9219
  %77 = load %struct.slotvec*, %struct.slotvec** %11, align 8, !dbg !9220
  %78 = load i32, i32* %5, align 4, !dbg !9221
  %79 = sext i32 %78 to i64, !dbg !9220
  %80 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %77, i64 %79, !dbg !9220
  %81 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %80, i32 0, i32 1, !dbg !9222
  %82 = load i8*, i8** %81, align 8, !dbg !9222
  store i8* %82, i8** %15, align 8, !dbg !9219
  call void @llvm.dbg.declare(metadata i32* %16, metadata !9223, metadata !DIExpression()), !dbg !9224
  %83 = load %struct.quoting_options*, %struct.quoting_options** %8, align 8, !dbg !9225
  %84 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %83, i32 0, i32 1, !dbg !9226
  %85 = load i32, i32* %84, align 4, !dbg !9226
  %86 = or i32 %85, 1, !dbg !9227
  store i32 %86, i32* %16, align 4, !dbg !9224
  call void @llvm.dbg.declare(metadata i64* %17, metadata !9228, metadata !DIExpression()), !dbg !9229
  %87 = load i8*, i8** %15, align 8, !dbg !9230
  %88 = load i64, i64* %14, align 8, !dbg !9231
  %89 = load i8*, i8** %6, align 8, !dbg !9232
  %90 = load i64, i64* %7, align 8, !dbg !9233
  %91 = load %struct.quoting_options*, %struct.quoting_options** %8, align 8, !dbg !9234
  %92 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %91, i32 0, i32 0, !dbg !9235
  %93 = load i32, i32* %92, align 8, !dbg !9235
  %94 = load i32, i32* %16, align 4, !dbg !9236
  %95 = load %struct.quoting_options*, %struct.quoting_options** %8, align 8, !dbg !9237
  %96 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %95, i32 0, i32 2, !dbg !9238
  %97 = getelementptr inbounds [8 x i32], [8 x i32]* %96, i32 0, i32 0, !dbg !9237
  %98 = load %struct.quoting_options*, %struct.quoting_options** %8, align 8, !dbg !9239
  %99 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %98, i32 0, i32 3, !dbg !9240
  %100 = load i8*, i8** %99, align 8, !dbg !9240
  %101 = load %struct.quoting_options*, %struct.quoting_options** %8, align 8, !dbg !9241
  %102 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %101, i32 0, i32 4, !dbg !9242
  %103 = load i8*, i8** %102, align 8, !dbg !9242
  %104 = call i64 @quotearg_buffer_restyled(i8* %87, i64 %88, i8* %89, i64 %90, i32 %93, i32 %94, i32* %97, i8* %100, i8* %103), !dbg !9243
  store i64 %104, i64* %17, align 8, !dbg !9229
  %105 = load i64, i64* %14, align 8, !dbg !9244
  %106 = load i64, i64* %17, align 8, !dbg !9246
  %107 = icmp ule i64 %105, %106, !dbg !9247
  br i1 %107, label %108, label %146, !dbg !9248

; <label>:108:                                    ; preds = %70
  %109 = load i64, i64* %17, align 8, !dbg !9249
  %110 = add i64 %109, 1, !dbg !9251
  store i64 %110, i64* %14, align 8, !dbg !9252
  %111 = load %struct.slotvec*, %struct.slotvec** %11, align 8, !dbg !9253
  %112 = load i32, i32* %5, align 4, !dbg !9254
  %113 = sext i32 %112 to i64, !dbg !9253
  %114 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %111, i64 %113, !dbg !9253
  %115 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %114, i32 0, i32 0, !dbg !9255
  store i64 %110, i64* %115, align 8, !dbg !9256
  %116 = load i8*, i8** %15, align 8, !dbg !9257
  %117 = icmp ne i8* %116, getelementptr inbounds ([256 x i8], [256 x i8]* @slot0, i32 0, i32 0), !dbg !9259
  br i1 %117, label %118, label %120, !dbg !9260

; <label>:118:                                    ; preds = %108
  %119 = load i8*, i8** %15, align 8, !dbg !9261
  call void @free(i8* %119) #8, !dbg !9262
  br label %120, !dbg !9262

; <label>:120:                                    ; preds = %118, %108
  %121 = load i64, i64* %14, align 8, !dbg !9263
  %122 = call noalias i8* @xcharalloc(i64 %121), !dbg !9264
  store i8* %122, i8** %15, align 8, !dbg !9265
  %123 = load %struct.slotvec*, %struct.slotvec** %11, align 8, !dbg !9266
  %124 = load i32, i32* %5, align 4, !dbg !9267
  %125 = sext i32 %124 to i64, !dbg !9266
  %126 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %123, i64 %125, !dbg !9266
  %127 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %126, i32 0, i32 1, !dbg !9268
  store i8* %122, i8** %127, align 8, !dbg !9269
  %128 = load i8*, i8** %15, align 8, !dbg !9270
  %129 = load i64, i64* %14, align 8, !dbg !9271
  %130 = load i8*, i8** %6, align 8, !dbg !9272
  %131 = load i64, i64* %7, align 8, !dbg !9273
  %132 = load %struct.quoting_options*, %struct.quoting_options** %8, align 8, !dbg !9274
  %133 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %132, i32 0, i32 0, !dbg !9275
  %134 = load i32, i32* %133, align 8, !dbg !9275
  %135 = load i32, i32* %16, align 4, !dbg !9276
  %136 = load %struct.quoting_options*, %struct.quoting_options** %8, align 8, !dbg !9277
  %137 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %136, i32 0, i32 2, !dbg !9278
  %138 = getelementptr inbounds [8 x i32], [8 x i32]* %137, i32 0, i32 0, !dbg !9277
  %139 = load %struct.quoting_options*, %struct.quoting_options** %8, align 8, !dbg !9279
  %140 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %139, i32 0, i32 3, !dbg !9280
  %141 = load i8*, i8** %140, align 8, !dbg !9280
  %142 = load %struct.quoting_options*, %struct.quoting_options** %8, align 8, !dbg !9281
  %143 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %142, i32 0, i32 4, !dbg !9282
  %144 = load i8*, i8** %143, align 8, !dbg !9282
  %145 = call i64 @quotearg_buffer_restyled(i8* %128, i64 %129, i8* %130, i64 %131, i32 %134, i32 %135, i32* %138, i8* %141, i8* %144), !dbg !9283
  br label %146, !dbg !9284

; <label>:146:                                    ; preds = %120, %70
  %147 = load i32, i32* %9, align 4, !dbg !9285
  %148 = call i32* @__errno_location() #14, !dbg !9286
  store i32 %147, i32* %148, align 4, !dbg !9287
  %149 = load i8*, i8** %15, align 8, !dbg !9288
  ret i8* %149, !dbg !9289
}

; Function Attrs: noinline nounwind uwtable
define i8* @quotearg_n_mem(i32, i8*, i64) #3 !dbg !9290 {
  %4 = alloca i32, align 4
  %5 = alloca i8*, align 8
  %6 = alloca i64, align 8
  store i32 %0, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !9293, metadata !DIExpression()), !dbg !9294
  store i8* %1, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !9295, metadata !DIExpression()), !dbg !9296
  store i64 %2, i64* %6, align 8
  call void @llvm.dbg.declare(metadata i64* %6, metadata !9297, metadata !DIExpression()), !dbg !9298
  %7 = load i32, i32* %4, align 4, !dbg !9299
  %8 = load i8*, i8** %5, align 8, !dbg !9300
  %9 = load i64, i64* %6, align 8, !dbg !9301
  %10 = call i8* @quotearg_n_options(i32 %7, i8* %8, i64 %9, %struct.quoting_options* @default_quoting_options), !dbg !9302
  ret i8* %10, !dbg !9303
}

; Function Attrs: noinline nounwind uwtable
define i8* @quotearg(i8*) #3 !dbg !9304 {
  %2 = alloca i8*, align 8
  store i8* %0, i8** %2, align 8
  call void @llvm.dbg.declare(metadata i8** %2, metadata !9305, metadata !DIExpression()), !dbg !9306
  %3 = load i8*, i8** %2, align 8, !dbg !9307
  %4 = call i8* @quotearg_n(i32 0, i8* %3), !dbg !9308
  ret i8* %4, !dbg !9309
}

; Function Attrs: noinline nounwind uwtable
define i8* @quotearg_mem(i8*, i64) #3 !dbg !9310 {
  %3 = alloca i8*, align 8
  %4 = alloca i64, align 8
  store i8* %0, i8** %3, align 8
  call void @llvm.dbg.declare(metadata i8** %3, metadata !9313, metadata !DIExpression()), !dbg !9314
  store i64 %1, i64* %4, align 8
  call void @llvm.dbg.declare(metadata i64* %4, metadata !9315, metadata !DIExpression()), !dbg !9316
  %5 = load i8*, i8** %3, align 8, !dbg !9317
  %6 = load i64, i64* %4, align 8, !dbg !9318
  %7 = call i8* @quotearg_n_mem(i32 0, i8* %5, i64 %6), !dbg !9319
  ret i8* %7, !dbg !9320
}

; Function Attrs: noinline nounwind uwtable
define i8* @quotearg_n_style(i32, i32, i8*) #3 !dbg !9321 {
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i8*, align 8
  %7 = alloca %struct.quoting_options, align 8
  store i32 %0, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !9324, metadata !DIExpression()), !dbg !9325
  store i32 %1, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !9326, metadata !DIExpression()), !dbg !9327
  store i8* %2, i8** %6, align 8
  call void @llvm.dbg.declare(metadata i8** %6, metadata !9328, metadata !DIExpression()), !dbg !9329
  call void @llvm.dbg.declare(metadata %struct.quoting_options* %7, metadata !9330, metadata !DIExpression()), !dbg !9331
  %8 = load i32, i32* %5, align 4, !dbg !9332
  call void @quoting_options_from_style(%struct.quoting_options* sret %7, i32 %8), !dbg !9333
  %9 = load i32, i32* %4, align 4, !dbg !9334
  %10 = load i8*, i8** %6, align 8, !dbg !9335
  %11 = call i8* @quotearg_n_options(i32 %9, i8* %10, i64 -1, %struct.quoting_options* %7), !dbg !9336
  ret i8* %11, !dbg !9337
}

; Function Attrs: noinline nounwind uwtable
define internal void @quoting_options_from_style(%struct.quoting_options* noalias sret, i32) #3 !dbg !9338 {
  %3 = alloca i32, align 4
  %4 = alloca %struct.quoting_options, align 8
  store i32 %1, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !9341, metadata !DIExpression()), !dbg !9342
  call void @llvm.dbg.declare(metadata %struct.quoting_options* %4, metadata !9343, metadata !DIExpression()), !dbg !9344
  %5 = load i32, i32* %3, align 4, !dbg !9345
  %6 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %4, i32 0, i32 0, !dbg !9346
  store i32 %5, i32* %6, align 8, !dbg !9347
  %7 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %4, i32 0, i32 1, !dbg !9348
  store i32 0, i32* %7, align 4, !dbg !9349
  %8 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %4, i32 0, i32 2, !dbg !9350
  %9 = getelementptr inbounds [8 x i32], [8 x i32]* %8, i32 0, i32 0, !dbg !9351
  %10 = bitcast i32* %9 to i8*, !dbg !9351
  call void @llvm.memset.p0i8.i64(i8* %10, i8 0, i64 32, i32 8, i1 false), !dbg !9351
  %11 = bitcast %struct.quoting_options* %0 to i8*, !dbg !9352
  %12 = bitcast %struct.quoting_options* %4 to i8*, !dbg !9352
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %11, i8* %12, i64 56, i32 8, i1 false), !dbg !9352
  ret void, !dbg !9353
}

; Function Attrs: noinline nounwind uwtable
define i8* @quotearg_n_style_mem(i32, i32, i8*, i64) #3 !dbg !9354 {
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i8*, align 8
  %8 = alloca i64, align 8
  %9 = alloca %struct.quoting_options, align 8
  store i32 %0, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !9357, metadata !DIExpression()), !dbg !9358
  store i32 %1, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !9359, metadata !DIExpression()), !dbg !9360
  store i8* %2, i8** %7, align 8
  call void @llvm.dbg.declare(metadata i8** %7, metadata !9361, metadata !DIExpression()), !dbg !9362
  store i64 %3, i64* %8, align 8
  call void @llvm.dbg.declare(metadata i64* %8, metadata !9363, metadata !DIExpression()), !dbg !9364
  call void @llvm.dbg.declare(metadata %struct.quoting_options* %9, metadata !9365, metadata !DIExpression()), !dbg !9366
  %10 = load i32, i32* %6, align 4, !dbg !9367
  call void @quoting_options_from_style(%struct.quoting_options* sret %9, i32 %10), !dbg !9368
  %11 = load i32, i32* %5, align 4, !dbg !9369
  %12 = load i8*, i8** %7, align 8, !dbg !9370
  %13 = load i64, i64* %8, align 8, !dbg !9371
  %14 = call i8* @quotearg_n_options(i32 %11, i8* %12, i64 %13, %struct.quoting_options* %9), !dbg !9372
  ret i8* %14, !dbg !9373
}

; Function Attrs: noinline nounwind uwtable
define i8* @quotearg_style(i32, i8*) #3 !dbg !9374 {
  %3 = alloca i32, align 4
  %4 = alloca i8*, align 8
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !9377, metadata !DIExpression()), !dbg !9378
  store i8* %1, i8** %4, align 8
  call void @llvm.dbg.declare(metadata i8** %4, metadata !9379, metadata !DIExpression()), !dbg !9380
  %5 = load i32, i32* %3, align 4, !dbg !9381
  %6 = load i8*, i8** %4, align 8, !dbg !9382
  %7 = call i8* @quotearg_n_style(i32 0, i32 %5, i8* %6), !dbg !9383
  ret i8* %7, !dbg !9384
}

; Function Attrs: noinline nounwind uwtable
define i8* @quotearg_style_mem(i32, i8*, i64) #3 !dbg !9385 {
  %4 = alloca i32, align 4
  %5 = alloca i8*, align 8
  %6 = alloca i64, align 8
  store i32 %0, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !9388, metadata !DIExpression()), !dbg !9389
  store i8* %1, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !9390, metadata !DIExpression()), !dbg !9391
  store i64 %2, i64* %6, align 8
  call void @llvm.dbg.declare(metadata i64* %6, metadata !9392, metadata !DIExpression()), !dbg !9393
  %7 = load i32, i32* %4, align 4, !dbg !9394
  %8 = load i8*, i8** %5, align 8, !dbg !9395
  %9 = load i64, i64* %6, align 8, !dbg !9396
  %10 = call i8* @quotearg_n_style_mem(i32 0, i32 %7, i8* %8, i64 %9), !dbg !9397
  ret i8* %10, !dbg !9398
}

; Function Attrs: noinline nounwind uwtable
define i8* @quotearg_char_mem(i8*, i64, i8 signext) #3 !dbg !9399 {
  %4 = alloca i8*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i8, align 1
  %7 = alloca %struct.quoting_options, align 8
  store i8* %0, i8** %4, align 8
  call void @llvm.dbg.declare(metadata i8** %4, metadata !9402, metadata !DIExpression()), !dbg !9403
  store i64 %1, i64* %5, align 8
  call void @llvm.dbg.declare(metadata i64* %5, metadata !9404, metadata !DIExpression()), !dbg !9405
  store i8 %2, i8* %6, align 1
  call void @llvm.dbg.declare(metadata i8* %6, metadata !9406, metadata !DIExpression()), !dbg !9407
  call void @llvm.dbg.declare(metadata %struct.quoting_options* %7, metadata !9408, metadata !DIExpression()), !dbg !9409
  %8 = bitcast %struct.quoting_options* %7 to i8*, !dbg !9410
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %8, i8* bitcast (%struct.quoting_options* @default_quoting_options to i8*), i64 56, i32 8, i1 false), !dbg !9410
  %9 = load i8, i8* %6, align 1, !dbg !9411
  %10 = call i32 @set_char_quoting(%struct.quoting_options* %7, i8 signext %9, i32 1), !dbg !9412
  %11 = load i8*, i8** %4, align 8, !dbg !9413
  %12 = load i64, i64* %5, align 8, !dbg !9414
  %13 = call i8* @quotearg_n_options(i32 0, i8* %11, i64 %12, %struct.quoting_options* %7), !dbg !9415
  ret i8* %13, !dbg !9416
}

; Function Attrs: noinline nounwind uwtable
define i8* @quotearg_char(i8*, i8 signext) #3 !dbg !9417 {
  %3 = alloca i8*, align 8
  %4 = alloca i8, align 1
  store i8* %0, i8** %3, align 8
  call void @llvm.dbg.declare(metadata i8** %3, metadata !9420, metadata !DIExpression()), !dbg !9421
  store i8 %1, i8* %4, align 1
  call void @llvm.dbg.declare(metadata i8* %4, metadata !9422, metadata !DIExpression()), !dbg !9423
  %5 = load i8*, i8** %3, align 8, !dbg !9424
  %6 = load i8, i8* %4, align 1, !dbg !9425
  %7 = call i8* @quotearg_char_mem(i8* %5, i64 -1, i8 signext %6), !dbg !9426
  ret i8* %7, !dbg !9427
}

; Function Attrs: noinline nounwind uwtable
define i8* @quotearg_colon(i8*) #3 !dbg !9428 {
  %2 = alloca i8*, align 8
  store i8* %0, i8** %2, align 8
  call void @llvm.dbg.declare(metadata i8** %2, metadata !9429, metadata !DIExpression()), !dbg !9430
  %3 = load i8*, i8** %2, align 8, !dbg !9431
  %4 = call i8* @quotearg_char(i8* %3, i8 signext 58), !dbg !9432
  ret i8* %4, !dbg !9433
}

; Function Attrs: noinline nounwind uwtable
define i8* @quotearg_colon_mem(i8*, i64) #3 !dbg !9434 {
  %3 = alloca i8*, align 8
  %4 = alloca i64, align 8
  store i8* %0, i8** %3, align 8
  call void @llvm.dbg.declare(metadata i8** %3, metadata !9435, metadata !DIExpression()), !dbg !9436
  store i64 %1, i64* %4, align 8
  call void @llvm.dbg.declare(metadata i64* %4, metadata !9437, metadata !DIExpression()), !dbg !9438
  %5 = load i8*, i8** %3, align 8, !dbg !9439
  %6 = load i64, i64* %4, align 8, !dbg !9440
  %7 = call i8* @quotearg_char_mem(i8* %5, i64 %6, i8 signext 58), !dbg !9441
  ret i8* %7, !dbg !9442
}

; Function Attrs: noinline nounwind uwtable
define i8* @quotearg_n_custom(i32, i8*, i8*, i8*) #3 !dbg !9443 {
  %5 = alloca i32, align 4
  %6 = alloca i8*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i8*, align 8
  store i32 %0, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !9446, metadata !DIExpression()), !dbg !9447
  store i8* %1, i8** %6, align 8
  call void @llvm.dbg.declare(metadata i8** %6, metadata !9448, metadata !DIExpression()), !dbg !9449
  store i8* %2, i8** %7, align 8
  call void @llvm.dbg.declare(metadata i8** %7, metadata !9450, metadata !DIExpression()), !dbg !9451
  store i8* %3, i8** %8, align 8
  call void @llvm.dbg.declare(metadata i8** %8, metadata !9452, metadata !DIExpression()), !dbg !9453
  %9 = load i32, i32* %5, align 4, !dbg !9454
  %10 = load i8*, i8** %6, align 8, !dbg !9455
  %11 = load i8*, i8** %7, align 8, !dbg !9456
  %12 = load i8*, i8** %8, align 8, !dbg !9457
  %13 = call i8* @quotearg_n_custom_mem(i32 %9, i8* %10, i8* %11, i8* %12, i64 -1), !dbg !9458
  ret i8* %13, !dbg !9459
}

; Function Attrs: noinline nounwind uwtable
define i8* @quotearg_n_custom_mem(i32, i8*, i8*, i8*, i64) #3 !dbg !9460 {
  %6 = alloca i32, align 4
  %7 = alloca i8*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i8*, align 8
  %10 = alloca i64, align 8
  %11 = alloca %struct.quoting_options, align 8
  store i32 %0, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !9463, metadata !DIExpression()), !dbg !9464
  store i8* %1, i8** %7, align 8
  call void @llvm.dbg.declare(metadata i8** %7, metadata !9465, metadata !DIExpression()), !dbg !9466
  store i8* %2, i8** %8, align 8
  call void @llvm.dbg.declare(metadata i8** %8, metadata !9467, metadata !DIExpression()), !dbg !9468
  store i8* %3, i8** %9, align 8
  call void @llvm.dbg.declare(metadata i8** %9, metadata !9469, metadata !DIExpression()), !dbg !9470
  store i64 %4, i64* %10, align 8
  call void @llvm.dbg.declare(metadata i64* %10, metadata !9471, metadata !DIExpression()), !dbg !9472
  call void @llvm.dbg.declare(metadata %struct.quoting_options* %11, metadata !9473, metadata !DIExpression()), !dbg !9474
  %12 = bitcast %struct.quoting_options* %11 to i8*, !dbg !9475
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %12, i8* bitcast (%struct.quoting_options* @default_quoting_options to i8*), i64 56, i32 8, i1 false), !dbg !9475
  %13 = load i8*, i8** %7, align 8, !dbg !9476
  %14 = load i8*, i8** %8, align 8, !dbg !9477
  call void @set_custom_quoting(%struct.quoting_options* %11, i8* %13, i8* %14), !dbg !9478
  %15 = load i32, i32* %6, align 4, !dbg !9479
  %16 = load i8*, i8** %9, align 8, !dbg !9480
  %17 = load i64, i64* %10, align 8, !dbg !9481
  %18 = call i8* @quotearg_n_options(i32 %15, i8* %16, i64 %17, %struct.quoting_options* %11), !dbg !9482
  ret i8* %18, !dbg !9483
}

; Function Attrs: noinline nounwind uwtable
define i8* @quotearg_custom(i8*, i8*, i8*) #3 !dbg !9484 {
  %4 = alloca i8*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  store i8* %0, i8** %4, align 8
  call void @llvm.dbg.declare(metadata i8** %4, metadata !9487, metadata !DIExpression()), !dbg !9488
  store i8* %1, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !9489, metadata !DIExpression()), !dbg !9490
  store i8* %2, i8** %6, align 8
  call void @llvm.dbg.declare(metadata i8** %6, metadata !9491, metadata !DIExpression()), !dbg !9492
  %7 = load i8*, i8** %4, align 8, !dbg !9493
  %8 = load i8*, i8** %5, align 8, !dbg !9494
  %9 = load i8*, i8** %6, align 8, !dbg !9495
  %10 = call i8* @quotearg_n_custom(i32 0, i8* %7, i8* %8, i8* %9), !dbg !9496
  ret i8* %10, !dbg !9497
}

; Function Attrs: noinline nounwind uwtable
define i8* @quotearg_custom_mem(i8*, i8*, i8*, i64) #3 !dbg !9498 {
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i64, align 8
  store i8* %0, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !9501, metadata !DIExpression()), !dbg !9502
  store i8* %1, i8** %6, align 8
  call void @llvm.dbg.declare(metadata i8** %6, metadata !9503, metadata !DIExpression()), !dbg !9504
  store i8* %2, i8** %7, align 8
  call void @llvm.dbg.declare(metadata i8** %7, metadata !9505, metadata !DIExpression()), !dbg !9506
  store i64 %3, i64* %8, align 8
  call void @llvm.dbg.declare(metadata i64* %8, metadata !9507, metadata !DIExpression()), !dbg !9508
  %9 = load i8*, i8** %5, align 8, !dbg !9509
  %10 = load i8*, i8** %6, align 8, !dbg !9510
  %11 = load i8*, i8** %7, align 8, !dbg !9511
  %12 = load i64, i64* %8, align 8, !dbg !9512
  %13 = call i8* @quotearg_n_custom_mem(i32 0, i8* %9, i8* %10, i8* %11, i64 %12), !dbg !9513
  ret i8* %13, !dbg !9514
}

; Function Attrs: noinline nounwind uwtable
define %struct.dev_ino* @get_root_dev_ino(%struct.dev_ino*) #3 !dbg !9515 {
  %2 = alloca %struct.dev_ino*, align 8
  %3 = alloca %struct.dev_ino*, align 8
  %4 = alloca %struct.stat, align 8
  store %struct.dev_ino* %0, %struct.dev_ino** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.dev_ino** %3, metadata !9523, metadata !DIExpression()), !dbg !9524
  call void @llvm.dbg.declare(metadata %struct.stat* %4, metadata !9525, metadata !DIExpression()), !dbg !9547
  %5 = call i32 @lstat(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.208, i32 0, i32 0), %struct.stat* %4) #8, !dbg !9548
  %6 = icmp ne i32 %5, 0, !dbg !9548
  br i1 %6, label %7, label %8, !dbg !9550

; <label>:7:                                      ; preds = %1
  store %struct.dev_ino* null, %struct.dev_ino** %2, align 8, !dbg !9551
  br label %18, !dbg !9551

; <label>:8:                                      ; preds = %1
  %9 = getelementptr inbounds %struct.stat, %struct.stat* %4, i32 0, i32 1, !dbg !9552
  %10 = load i64, i64* %9, align 8, !dbg !9552
  %11 = load %struct.dev_ino*, %struct.dev_ino** %3, align 8, !dbg !9553
  %12 = getelementptr inbounds %struct.dev_ino, %struct.dev_ino* %11, i32 0, i32 0, !dbg !9554
  store i64 %10, i64* %12, align 8, !dbg !9555
  %13 = getelementptr inbounds %struct.stat, %struct.stat* %4, i32 0, i32 0, !dbg !9556
  %14 = load i64, i64* %13, align 8, !dbg !9556
  %15 = load %struct.dev_ino*, %struct.dev_ino** %3, align 8, !dbg !9557
  %16 = getelementptr inbounds %struct.dev_ino, %struct.dev_ino* %15, i32 0, i32 1, !dbg !9558
  store i64 %14, i64* %16, align 8, !dbg !9559
  %17 = load %struct.dev_ino*, %struct.dev_ino** %3, align 8, !dbg !9560
  store %struct.dev_ino* %17, %struct.dev_ino** %2, align 8, !dbg !9561
  br label %18, !dbg !9561

; <label>:18:                                     ; preds = %8, %7
  %19 = load %struct.dev_ino*, %struct.dev_ino** %2, align 8, !dbg !9562
  ret %struct.dev_ino* %19, !dbg !9562
}

; Function Attrs: noinline nounwind uwtable
define zeroext i1 @strip_trailing_slashes(i8*) #3 !dbg !9563 {
  %2 = alloca i8*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca i8, align 1
  store i8* %0, i8** %2, align 8
  call void @llvm.dbg.declare(metadata i8** %2, metadata !9566, metadata !DIExpression()), !dbg !9567
  call void @llvm.dbg.declare(metadata i8** %3, metadata !9568, metadata !DIExpression()), !dbg !9569
  %6 = load i8*, i8** %2, align 8, !dbg !9570
  %7 = call i8* @last_component(i8* %6), !dbg !9571
  store i8* %7, i8** %3, align 8, !dbg !9569
  call void @llvm.dbg.declare(metadata i8** %4, metadata !9572, metadata !DIExpression()), !dbg !9573
  call void @llvm.dbg.declare(metadata i8* %5, metadata !9574, metadata !DIExpression()), !dbg !9575
  %8 = load i8*, i8** %3, align 8, !dbg !9576
  %9 = load i8, i8* %8, align 1, !dbg !9578
  %10 = icmp ne i8 %9, 0, !dbg !9578
  br i1 %10, label %13, label %11, !dbg !9579

; <label>:11:                                     ; preds = %1
  %12 = load i8*, i8** %2, align 8, !dbg !9580
  store i8* %12, i8** %3, align 8, !dbg !9581
  br label %13, !dbg !9582

; <label>:13:                                     ; preds = %11, %1
  %14 = load i8*, i8** %3, align 8, !dbg !9583
  %15 = load i8*, i8** %3, align 8, !dbg !9584
  %16 = call i64 @base_len(i8* %15), !dbg !9585
  %17 = getelementptr inbounds i8, i8* %14, i64 %16, !dbg !9586
  store i8* %17, i8** %4, align 8, !dbg !9587
  %18 = load i8*, i8** %4, align 8, !dbg !9588
  %19 = load i8, i8* %18, align 1, !dbg !9589
  %20 = sext i8 %19 to i32, !dbg !9589
  %21 = icmp ne i32 %20, 0, !dbg !9590
  %22 = zext i1 %21 to i8, !dbg !9591
  store i8 %22, i8* %5, align 1, !dbg !9591
  %23 = load i8*, i8** %4, align 8, !dbg !9592
  store i8 0, i8* %23, align 1, !dbg !9593
  %24 = load i8, i8* %5, align 1, !dbg !9594
  %25 = trunc i8 %24 to i1, !dbg !9594
  ret i1 %25, !dbg !9595
}

; Function Attrs: noinline nounwind uwtable
define zeroext i1 @can_write_any_file() #3 !dbg !223 {
  %1 = alloca i8, align 1
  %2 = load i8, i8* @can_write_any_file.initialized, align 1, !dbg !9596
  %3 = trunc i8 %2 to i1, !dbg !9596
  br i1 %3, label %11, label %4, !dbg !9598

; <label>:4:                                      ; preds = %0
  call void @llvm.dbg.declare(metadata i8* %1, metadata !9599, metadata !DIExpression()), !dbg !9601
  store i8 0, i8* %1, align 1, !dbg !9601
  %5 = call i32 @geteuid() #8, !dbg !9602
  %6 = icmp eq i32 %5, 0, !dbg !9603
  %7 = zext i1 %6 to i8, !dbg !9604
  store i8 %7, i8* %1, align 1, !dbg !9604
  %8 = load i8, i8* %1, align 1, !dbg !9605
  %9 = trunc i8 %8 to i1, !dbg !9605
  %10 = zext i1 %9 to i8, !dbg !9606
  store i8 %10, i8* @can_write_any_file.can_write, align 1, !dbg !9606
  store i8 1, i8* @can_write_any_file.initialized, align 1, !dbg !9607
  br label %11, !dbg !9608

; <label>:11:                                     ; preds = %4, %0
  %12 = load i8, i8* @can_write_any_file.can_write, align 1, !dbg !9609
  %13 = trunc i8 %12 to i1, !dbg !9609
  ret i1 %13, !dbg !9610
}

; Function Attrs: nounwind
declare i32 @geteuid() #5

; Function Attrs: noinline nounwind uwtable
define noalias i8* @xnmalloc(i64, i64) #3 !dbg !9611 {
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  store i64 %0, i64* %3, align 8
  call void @llvm.dbg.declare(metadata i64* %3, metadata !9614, metadata !DIExpression()), !dbg !9615
  store i64 %1, i64* %4, align 8
  call void @llvm.dbg.declare(metadata i64* %4, metadata !9616, metadata !DIExpression()), !dbg !9617
  %5 = load i64, i64* %4, align 8, !dbg !9618
  %6 = udiv i64 -1, %5, !dbg !9618
  %7 = load i64, i64* %3, align 8, !dbg !9618
  %8 = icmp ult i64 %6, %7, !dbg !9618
  br i1 %8, label %9, label %10, !dbg !9620

; <label>:9:                                      ; preds = %2
  call void @xalloc_die() #13, !dbg !9621
  unreachable, !dbg !9621

; <label>:10:                                     ; preds = %2
  %11 = load i64, i64* %3, align 8, !dbg !9622
  %12 = load i64, i64* %4, align 8, !dbg !9623
  %13 = mul i64 %11, %12, !dbg !9624
  %14 = call noalias i8* @xmalloc(i64 %13), !dbg !9625
  ret i8* %14, !dbg !9626
}

; Function Attrs: noinline nounwind uwtable
define noalias i8* @xmalloc(i64) #3 !dbg !9627 {
  %2 = alloca i64, align 8
  %3 = alloca i8*, align 8
  store i64 %0, i64* %2, align 8
  call void @llvm.dbg.declare(metadata i64* %2, metadata !9630, metadata !DIExpression()), !dbg !9631
  call void @llvm.dbg.declare(metadata i8** %3, metadata !9632, metadata !DIExpression()), !dbg !9633
  %4 = load i64, i64* %2, align 8, !dbg !9634
  %5 = call noalias i8* @malloc(i64 %4) #8, !dbg !9635
  store i8* %5, i8** %3, align 8, !dbg !9633
  %6 = load i8*, i8** %3, align 8, !dbg !9636
  %7 = icmp ne i8* %6, null, !dbg !9636
  br i1 %7, label %12, label %8, !dbg !9638

; <label>:8:                                      ; preds = %1
  %9 = load i64, i64* %2, align 8, !dbg !9639
  %10 = icmp ne i64 %9, 0, !dbg !9640
  br i1 %10, label %11, label %12, !dbg !9641

; <label>:11:                                     ; preds = %8
  call void @xalloc_die() #13, !dbg !9642
  unreachable, !dbg !9642

; <label>:12:                                     ; preds = %8, %1
  %13 = load i8*, i8** %3, align 8, !dbg !9643
  ret i8* %13, !dbg !9644
}

; Function Attrs: noinline nounwind uwtable
define i8* @xnrealloc(i8*, i64, i64) #3 !dbg !9645 {
  %4 = alloca i8*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  store i8* %0, i8** %4, align 8
  call void @llvm.dbg.declare(metadata i8** %4, metadata !9648, metadata !DIExpression()), !dbg !9649
  store i64 %1, i64* %5, align 8
  call void @llvm.dbg.declare(metadata i64* %5, metadata !9650, metadata !DIExpression()), !dbg !9651
  store i64 %2, i64* %6, align 8
  call void @llvm.dbg.declare(metadata i64* %6, metadata !9652, metadata !DIExpression()), !dbg !9653
  %7 = load i64, i64* %6, align 8, !dbg !9654
  %8 = udiv i64 -1, %7, !dbg !9654
  %9 = load i64, i64* %5, align 8, !dbg !9654
  %10 = icmp ult i64 %8, %9, !dbg !9654
  br i1 %10, label %11, label %12, !dbg !9656

; <label>:11:                                     ; preds = %3
  call void @xalloc_die() #13, !dbg !9657
  unreachable, !dbg !9657

; <label>:12:                                     ; preds = %3
  %13 = load i8*, i8** %4, align 8, !dbg !9658
  %14 = load i64, i64* %5, align 8, !dbg !9659
  %15 = load i64, i64* %6, align 8, !dbg !9660
  %16 = mul i64 %14, %15, !dbg !9661
  %17 = call i8* @xrealloc(i8* %13, i64 %16), !dbg !9662
  ret i8* %17, !dbg !9663
}

; Function Attrs: noinline nounwind uwtable
define i8* @xrealloc(i8*, i64) #3 !dbg !9664 {
  %3 = alloca i8*, align 8
  %4 = alloca i64, align 8
  store i8* %0, i8** %3, align 8
  call void @llvm.dbg.declare(metadata i8** %3, metadata !9667, metadata !DIExpression()), !dbg !9668
  store i64 %1, i64* %4, align 8
  call void @llvm.dbg.declare(metadata i64* %4, metadata !9669, metadata !DIExpression()), !dbg !9670
  %5 = load i8*, i8** %3, align 8, !dbg !9671
  %6 = load i64, i64* %4, align 8, !dbg !9672
  %7 = call i8* @realloc(i8* %5, i64 %6) #8, !dbg !9673
  store i8* %7, i8** %3, align 8, !dbg !9674
  %8 = load i8*, i8** %3, align 8, !dbg !9675
  %9 = icmp ne i8* %8, null, !dbg !9675
  br i1 %9, label %14, label %10, !dbg !9677

; <label>:10:                                     ; preds = %2
  %11 = load i64, i64* %4, align 8, !dbg !9678
  %12 = icmp ne i64 %11, 0, !dbg !9679
  br i1 %12, label %13, label %14, !dbg !9680

; <label>:13:                                     ; preds = %10
  call void @xalloc_die() #13, !dbg !9681
  unreachable, !dbg !9681

; <label>:14:                                     ; preds = %10, %2
  %15 = load i8*, i8** %3, align 8, !dbg !9682
  ret i8* %15, !dbg !9683
}

; Function Attrs: noinline nounwind uwtable
define i8* @x2nrealloc(i8*, i64*, i64) #3 !dbg !465 {
  %4 = alloca i8*, align 8
  %5 = alloca i64*, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  store i8* %0, i8** %4, align 8
  call void @llvm.dbg.declare(metadata i8** %4, metadata !9684, metadata !DIExpression()), !dbg !9685
  store i64* %1, i64** %5, align 8
  call void @llvm.dbg.declare(metadata i64** %5, metadata !9686, metadata !DIExpression()), !dbg !9687
  store i64 %2, i64* %6, align 8
  call void @llvm.dbg.declare(metadata i64* %6, metadata !9688, metadata !DIExpression()), !dbg !9689
  call void @llvm.dbg.declare(metadata i64* %7, metadata !9690, metadata !DIExpression()), !dbg !9691
  %8 = load i64*, i64** %5, align 8, !dbg !9692
  %9 = load i64, i64* %8, align 8, !dbg !9693
  store i64 %9, i64* %7, align 8, !dbg !9691
  %10 = load i8*, i8** %4, align 8, !dbg !9694
  %11 = icmp ne i8* %10, null, !dbg !9694
  br i1 %11, label %26, label %12, !dbg !9696

; <label>:12:                                     ; preds = %3
  %13 = load i64, i64* %7, align 8, !dbg !9697
  %14 = icmp ne i64 %13, 0, !dbg !9697
  br i1 %14, label %25, label %15, !dbg !9700

; <label>:15:                                     ; preds = %12
  %16 = load i64, i64* %6, align 8, !dbg !9701
  %17 = udiv i64 64, %16, !dbg !9703
  store i64 %17, i64* %7, align 8, !dbg !9704
  %18 = load i64, i64* %7, align 8, !dbg !9705
  %19 = icmp ne i64 %18, 0, !dbg !9706
  %20 = xor i1 %19, true, !dbg !9706
  %21 = zext i1 %20 to i32, !dbg !9706
  %22 = sext i32 %21 to i64, !dbg !9706
  %23 = load i64, i64* %7, align 8, !dbg !9707
  %24 = add i64 %23, %22, !dbg !9707
  store i64 %24, i64* %7, align 8, !dbg !9707
  br label %25, !dbg !9708

; <label>:25:                                     ; preds = %15, %12
  br label %38, !dbg !9709

; <label>:26:                                     ; preds = %3
  %27 = load i64, i64* %6, align 8, !dbg !9710
  %28 = udiv i64 -6148914691236517206, %27, !dbg !9713
  %29 = load i64, i64* %7, align 8, !dbg !9714
  %30 = icmp ule i64 %28, %29, !dbg !9715
  br i1 %30, label %31, label %32, !dbg !9716

; <label>:31:                                     ; preds = %26
  call void @xalloc_die() #13, !dbg !9717
  unreachable, !dbg !9717

; <label>:32:                                     ; preds = %26
  %33 = load i64, i64* %7, align 8, !dbg !9718
  %34 = add i64 %33, 1, !dbg !9719
  %35 = udiv i64 %34, 2, !dbg !9720
  %36 = load i64, i64* %7, align 8, !dbg !9721
  %37 = add i64 %36, %35, !dbg !9721
  store i64 %37, i64* %7, align 8, !dbg !9721
  br label %38

; <label>:38:                                     ; preds = %32, %25
  %39 = load i64, i64* %7, align 8, !dbg !9722
  %40 = load i64*, i64** %5, align 8, !dbg !9723
  store i64 %39, i64* %40, align 8, !dbg !9724
  %41 = load i8*, i8** %4, align 8, !dbg !9725
  %42 = load i64, i64* %7, align 8, !dbg !9726
  %43 = load i64, i64* %6, align 8, !dbg !9727
  %44 = mul i64 %42, %43, !dbg !9728
  %45 = call i8* @xrealloc(i8* %41, i64 %44), !dbg !9729
  ret i8* %45, !dbg !9730
}

; Function Attrs: noinline nounwind uwtable
define noalias i8* @xcharalloc(i64) #3 !dbg !9731 {
  %2 = alloca i64, align 8
  store i64 %0, i64* %2, align 8
  call void @llvm.dbg.declare(metadata i64* %2, metadata !9734, metadata !DIExpression()), !dbg !9735
  %3 = load i64, i64* %2, align 8, !dbg !9736
  %4 = call noalias i8* @xmalloc(i64 %3), !dbg !9736
  ret i8* %4, !dbg !9737
}

; Function Attrs: noinline nounwind uwtable
define i8* @x2realloc(i8*, i64*) #3 !dbg !9738 {
  %3 = alloca i8*, align 8
  %4 = alloca i64*, align 8
  store i8* %0, i8** %3, align 8
  call void @llvm.dbg.declare(metadata i8** %3, metadata !9741, metadata !DIExpression()), !dbg !9742
  store i64* %1, i64** %4, align 8
  call void @llvm.dbg.declare(metadata i64** %4, metadata !9743, metadata !DIExpression()), !dbg !9744
  %5 = load i8*, i8** %3, align 8, !dbg !9745
  %6 = load i64*, i64** %4, align 8, !dbg !9746
  %7 = call i8* @x2nrealloc(i8* %5, i64* %6, i64 1), !dbg !9747
  ret i8* %7, !dbg !9748
}

; Function Attrs: noinline nounwind uwtable
define noalias i8* @xzalloc(i64) #3 !dbg !9749 {
  %2 = alloca i64, align 8
  store i64 %0, i64* %2, align 8
  call void @llvm.dbg.declare(metadata i64* %2, metadata !9750, metadata !DIExpression()), !dbg !9751
  %3 = load i64, i64* %2, align 8, !dbg !9752
  %4 = call noalias i8* @xmalloc(i64 %3), !dbg !9753
  %5 = load i64, i64* %2, align 8, !dbg !9754
  call void @llvm.memset.p0i8.i64(i8* %4, i8 0, i64 %5, i32 1, i1 false), !dbg !9755
  ret i8* %4, !dbg !9756
}

; Function Attrs: noinline nounwind uwtable
define noalias i8* @xcalloc(i64, i64) #3 !dbg !9757 {
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = alloca i8*, align 8
  store i64 %0, i64* %3, align 8
  call void @llvm.dbg.declare(metadata i64* %3, metadata !9758, metadata !DIExpression()), !dbg !9759
  store i64 %1, i64* %4, align 8
  call void @llvm.dbg.declare(metadata i64* %4, metadata !9760, metadata !DIExpression()), !dbg !9761
  call void @llvm.dbg.declare(metadata i8** %5, metadata !9762, metadata !DIExpression()), !dbg !9763
  %6 = load i64, i64* %3, align 8, !dbg !9764
  %7 = load i64, i64* %4, align 8, !dbg !9766
  %8 = call noalias i8* @calloc(i64 %6, i64 %7) #8, !dbg !9767
  store i8* %8, i8** %5, align 8, !dbg !9768
  %9 = icmp ne i8* %8, null, !dbg !9768
  br i1 %9, label %11, label %10, !dbg !9769

; <label>:10:                                     ; preds = %2
  call void @xalloc_die() #13, !dbg !9770
  unreachable, !dbg !9770

; <label>:11:                                     ; preds = %2
  %12 = load i8*, i8** %5, align 8, !dbg !9771
  ret i8* %12, !dbg !9772
}

; Function Attrs: noinline nounwind uwtable
define noalias i8* @xmemdup(i8*, i64) #3 !dbg !9773 {
  %3 = alloca i8*, align 8
  %4 = alloca i64, align 8
  store i8* %0, i8** %3, align 8
  call void @llvm.dbg.declare(metadata i8** %3, metadata !9776, metadata !DIExpression()), !dbg !9777
  store i64 %1, i64* %4, align 8
  call void @llvm.dbg.declare(metadata i64* %4, metadata !9778, metadata !DIExpression()), !dbg !9779
  %5 = load i64, i64* %4, align 8, !dbg !9780
  %6 = call noalias i8* @xmalloc(i64 %5), !dbg !9781
  %7 = load i8*, i8** %3, align 8, !dbg !9782
  %8 = load i64, i64* %4, align 8, !dbg !9783
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %6, i8* %7, i64 %8, i32 1, i1 false), !dbg !9784
  ret i8* %6, !dbg !9785
}

; Function Attrs: noinline nounwind uwtable
define noalias i8* @xstrdup(i8*) #3 !dbg !9786 {
  %2 = alloca i8*, align 8
  store i8* %0, i8** %2, align 8
  call void @llvm.dbg.declare(metadata i8** %2, metadata !9787, metadata !DIExpression()), !dbg !9788
  %3 = load i8*, i8** %2, align 8, !dbg !9789
  %4 = load i8*, i8** %2, align 8, !dbg !9790
  %5 = call i64 @strlen(i8* %4) #12, !dbg !9791
  %6 = add i64 %5, 1, !dbg !9792
  %7 = call noalias i8* @xmemdup(i8* %3, i64 %6), !dbg !9793
  ret i8* %7, !dbg !9794
}

; Function Attrs: noinline nounwind uwtable
define zeroext i1 @yesno() #3 !dbg !9795 {
  %1 = alloca i8, align 1
  %2 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i8* %1, metadata !9796, metadata !DIExpression()), !dbg !9797
  call void @llvm.dbg.declare(metadata i32* %2, metadata !9798, metadata !DIExpression()), !dbg !9799
  %3 = call i32 @getchar(), !dbg !9800
  store i32 %3, i32* %2, align 4, !dbg !9799
  %4 = load i32, i32* %2, align 4, !dbg !9801
  %5 = icmp eq i32 %4, 121, !dbg !9802
  br i1 %5, label %9, label %6, !dbg !9803

; <label>:6:                                      ; preds = %0
  %7 = load i32, i32* %2, align 4, !dbg !9804
  %8 = icmp eq i32 %7, 89, !dbg !9805
  br label %9, !dbg !9803

; <label>:9:                                      ; preds = %6, %0
  %10 = phi i1 [ true, %0 ], [ %8, %6 ]
  %11 = zext i1 %10 to i8, !dbg !9806
  store i8 %11, i8* %1, align 1, !dbg !9806
  br label %12, !dbg !9807

; <label>:12:                                     ; preds = %20, %9
  %13 = load i32, i32* %2, align 4, !dbg !9808
  %14 = icmp ne i32 %13, 10, !dbg !9809
  br i1 %14, label %15, label %18, !dbg !9810

; <label>:15:                                     ; preds = %12
  %16 = load i32, i32* %2, align 4, !dbg !9811
  %17 = icmp ne i32 %16, -1, !dbg !9812
  br label %18

; <label>:18:                                     ; preds = %15, %12
  %19 = phi i1 [ false, %12 ], [ %17, %15 ]
  br i1 %19, label %20, label %22, !dbg !9807

; <label>:20:                                     ; preds = %18
  %21 = call i32 @getchar(), !dbg !9813
  store i32 %21, i32* %2, align 4, !dbg !9814
  br label %12, !dbg !9807, !llvm.loop !9815

; <label>:22:                                     ; preds = %18
  %23 = load i8, i8* %1, align 1, !dbg !9817
  %24 = trunc i8 %23 to i1, !dbg !9817
  ret i1 %24, !dbg !9818
}

declare i32 @getchar() #2

; Function Attrs: noinline nounwind uwtable
define zeroext i1 @euidaccess_stat(%struct.stat*, i32) #3 !dbg !9819 {
  %3 = alloca i1, align 1
  %4 = alloca %struct.stat*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  store %struct.stat* %0, %struct.stat** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.stat** %4, metadata !9845, metadata !DIExpression()), !dbg !9846
  store i32 %1, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !9847, metadata !DIExpression()), !dbg !9848
  call void @llvm.dbg.declare(metadata i32* %6, metadata !9849, metadata !DIExpression()), !dbg !9851
  call void @llvm.dbg.declare(metadata i32* %7, metadata !9852, metadata !DIExpression()), !dbg !9853
  %9 = load i32, i32* %5, align 4, !dbg !9854
  %10 = and i32 %9, 7, !dbg !9854
  store i32 %10, i32* %5, align 4, !dbg !9854
  %11 = load i32, i32* %5, align 4, !dbg !9856
  %12 = icmp eq i32 %11, 0, !dbg !9858
  br i1 %12, label %13, label %14, !dbg !9859

; <label>:13:                                     ; preds = %2
  store i1 true, i1* %3, align 1, !dbg !9860
  br label %66, !dbg !9860

; <label>:14:                                     ; preds = %2
  %15 = call i32 @geteuid() #8, !dbg !9861
  store i32 %15, i32* %6, align 4, !dbg !9862
  %16 = load i32, i32* %6, align 4, !dbg !9863
  %17 = icmp eq i32 %16, 0, !dbg !9865
  br i1 %17, label %18, label %29, !dbg !9866

; <label>:18:                                     ; preds = %14
  %19 = load i32, i32* %5, align 4, !dbg !9867
  %20 = and i32 %19, 1, !dbg !9868
  %21 = icmp eq i32 %20, 0, !dbg !9869
  br i1 %21, label %28, label %22, !dbg !9870

; <label>:22:                                     ; preds = %18
  %23 = load %struct.stat*, %struct.stat** %4, align 8, !dbg !9871
  %24 = getelementptr inbounds %struct.stat, %struct.stat* %23, i32 0, i32 3, !dbg !9872
  %25 = load i32, i32* %24, align 8, !dbg !9872
  %26 = and i32 %25, 73, !dbg !9873
  %27 = icmp ne i32 %26, 0, !dbg !9873
  br i1 %27, label %28, label %29, !dbg !9874

; <label>:28:                                     ; preds = %22, %18
  store i1 true, i1* %3, align 1, !dbg !9875
  br label %66, !dbg !9875

; <label>:29:                                     ; preds = %22, %14
  %30 = load %struct.stat*, %struct.stat** %4, align 8, !dbg !9876
  %31 = getelementptr inbounds %struct.stat, %struct.stat* %30, i32 0, i32 3, !dbg !9878
  %32 = load i32, i32* %31, align 8, !dbg !9878
  store i32 %32, i32* %7, align 4, !dbg !9879
  %33 = load i32, i32* %6, align 4, !dbg !9880
  %34 = load %struct.stat*, %struct.stat** %4, align 8, !dbg !9882
  %35 = getelementptr inbounds %struct.stat, %struct.stat* %34, i32 0, i32 4, !dbg !9883
  %36 = load i32, i32* %35, align 4, !dbg !9883
  %37 = icmp eq i32 %33, %36, !dbg !9884
  br i1 %37, label %38, label %41, !dbg !9885

; <label>:38:                                     ; preds = %29
  %39 = load i32, i32* %7, align 4, !dbg !9886
  %40 = lshr i32 %39, 6, !dbg !9886
  store i32 %40, i32* %7, align 4, !dbg !9886
  br label %58, !dbg !9887

; <label>:41:                                     ; preds = %29
  call void @llvm.dbg.declare(metadata i32* %8, metadata !9888, metadata !DIExpression()), !dbg !9891
  %42 = call i32 @getegid() #8, !dbg !9892
  store i32 %42, i32* %8, align 4, !dbg !9891
  %43 = load i32, i32* %8, align 4, !dbg !9893
  %44 = load %struct.stat*, %struct.stat** %4, align 8, !dbg !9895
  %45 = getelementptr inbounds %struct.stat, %struct.stat* %44, i32 0, i32 5, !dbg !9896
  %46 = load i32, i32* %45, align 8, !dbg !9896
  %47 = icmp eq i32 %43, %46, !dbg !9897
  br i1 %47, label %54, label %48, !dbg !9898

; <label>:48:                                     ; preds = %41
  %49 = load %struct.stat*, %struct.stat** %4, align 8, !dbg !9899
  %50 = getelementptr inbounds %struct.stat, %struct.stat* %49, i32 0, i32 5, !dbg !9900
  %51 = load i32, i32* %50, align 8, !dbg !9900
  %52 = call i32 @group_member(i32 %51) #8, !dbg !9901
  %53 = icmp ne i32 %52, 0, !dbg !9901
  br i1 %53, label %54, label %57, !dbg !9902

; <label>:54:                                     ; preds = %48, %41
  %55 = load i32, i32* %7, align 4, !dbg !9903
  %56 = lshr i32 %55, 3, !dbg !9903
  store i32 %56, i32* %7, align 4, !dbg !9903
  br label %57, !dbg !9904

; <label>:57:                                     ; preds = %54, %48
  br label %58

; <label>:58:                                     ; preds = %57, %38
  %59 = load i32, i32* %5, align 4, !dbg !9905
  %60 = load i32, i32* %7, align 4, !dbg !9907
  %61 = xor i32 %60, -1, !dbg !9908
  %62 = and i32 %59, %61, !dbg !9909
  %63 = icmp eq i32 %62, 0, !dbg !9910
  br i1 %63, label %64, label %65, !dbg !9911

; <label>:64:                                     ; preds = %58
  store i1 true, i1* %3, align 1, !dbg !9912
  br label %66, !dbg !9912

; <label>:65:                                     ; preds = %58
  store i1 false, i1* %3, align 1, !dbg !9913
  br label %66, !dbg !9913

; <label>:66:                                     ; preds = %65, %64, %28, %13
  %67 = load i1, i1* %3, align 1, !dbg !9914
  ret i1 %67, !dbg !9914
}

; Function Attrs: nounwind
declare i32 @getegid() #5

; Function Attrs: nounwind
declare i32 @group_member(i32) #5

; Function Attrs: noinline nounwind uwtable
define %struct.FTS* @xfts_open(i8**, i32, i32 (%struct._ftsent**, %struct._ftsent**)*) #3 !dbg !9915 {
  %4 = alloca i8**, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32 (%struct._ftsent**, %struct._ftsent**)*, align 8
  %7 = alloca %struct.FTS*, align 8
  store i8** %0, i8*** %4, align 8
  call void @llvm.dbg.declare(metadata i8*** %4, metadata !10008, metadata !DIExpression()), !dbg !10009
  store i32 %1, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !10010, metadata !DIExpression()), !dbg !10011
  store i32 (%struct._ftsent**, %struct._ftsent**)* %2, i32 (%struct._ftsent**, %struct._ftsent**)** %6, align 8
  call void @llvm.dbg.declare(metadata i32 (%struct._ftsent**, %struct._ftsent**)** %6, metadata !10012, metadata !DIExpression()), !dbg !10013
  call void @llvm.dbg.declare(metadata %struct.FTS** %7, metadata !10014, metadata !DIExpression()), !dbg !10015
  %8 = load i8**, i8*** %4, align 8, !dbg !10016
  %9 = load i32, i32* %5, align 4, !dbg !10017
  %10 = or i32 %9, 512, !dbg !10018
  %11 = load i32 (%struct._ftsent**, %struct._ftsent**)*, i32 (%struct._ftsent**, %struct._ftsent**)** %6, align 8, !dbg !10019
  %12 = call %struct.FTS* @fts_open(i8** %8, i32 %10, i32 (%struct._ftsent**, %struct._ftsent**)* %11), !dbg !10020
  store %struct.FTS* %12, %struct.FTS** %7, align 8, !dbg !10015
  %13 = load %struct.FTS*, %struct.FTS** %7, align 8, !dbg !10021
  %14 = icmp eq %struct.FTS* %13, null, !dbg !10023
  br i1 %14, label %15, label %22, !dbg !10024

; <label>:15:                                     ; preds = %3
  %16 = call i32* @__errno_location() #14, !dbg !10025
  %17 = load i32, i32* %16, align 4, !dbg !10025
  %18 = icmp ne i32 %17, 22, !dbg !10025
  br i1 %18, label %19, label %20, !dbg !10029

; <label>:19:                                     ; preds = %15
  br label %21, !dbg !10029

; <label>:20:                                     ; preds = %15
  call void @__assert_fail(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.225, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.1.226, i32 0, i32 0), i32 41, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @__PRETTY_FUNCTION__.xfts_open, i32 0, i32 0)) #11, !dbg !10025
  unreachable, !dbg !10025

; <label>:21:                                     ; preds = %19
  call void @xalloc_die() #13, !dbg !10030
  unreachable, !dbg !10030

; <label>:22:                                     ; preds = %3
  %23 = load %struct.FTS*, %struct.FTS** %7, align 8, !dbg !10031
  ret %struct.FTS* %23, !dbg !10032
}

; Function Attrs: noinline nounwind uwtable
define zeroext i1 @cycle_warning_required(%struct.FTS*, %struct._ftsent*) #3 !dbg !10033 {
  %3 = alloca %struct.FTS*, align 8
  %4 = alloca %struct._ftsent*, align 8
  store %struct.FTS* %0, %struct.FTS** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.FTS** %3, metadata !10038, metadata !DIExpression()), !dbg !10039
  store %struct._ftsent* %1, %struct._ftsent** %4, align 8
  call void @llvm.dbg.declare(metadata %struct._ftsent** %4, metadata !10040, metadata !DIExpression()), !dbg !10041
  %5 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !10042
  %6 = getelementptr inbounds %struct.FTS, %struct.FTS* %5, i32 0, i32 10, !dbg !10042
  %7 = load i32, i32* %6, align 8, !dbg !10042
  %8 = and i32 %7, 16, !dbg !10042
  %9 = icmp ne i32 %8, 0, !dbg !10042
  br i1 %9, label %10, label %16, !dbg !10043

; <label>:10:                                     ; preds = %2
  %11 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !10044
  %12 = getelementptr inbounds %struct.FTS, %struct.FTS* %11, i32 0, i32 10, !dbg !10044
  %13 = load i32, i32* %12, align 8, !dbg !10044
  %14 = and i32 %13, 1, !dbg !10044
  %15 = icmp ne i32 %14, 0, !dbg !10044
  br i1 %15, label %16, label %35, !dbg !10045

; <label>:16:                                     ; preds = %10, %2
  %17 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !10046
  %18 = getelementptr inbounds %struct.FTS, %struct.FTS* %17, i32 0, i32 10, !dbg !10046
  %19 = load i32, i32* %18, align 8, !dbg !10046
  %20 = and i32 %19, 16, !dbg !10046
  %21 = icmp ne i32 %20, 0, !dbg !10046
  br i1 %21, label %22, label %33, !dbg !10047

; <label>:22:                                     ; preds = %16
  %23 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !10048
  %24 = getelementptr inbounds %struct.FTS, %struct.FTS* %23, i32 0, i32 10, !dbg !10048
  %25 = load i32, i32* %24, align 8, !dbg !10048
  %26 = and i32 %25, 1, !dbg !10048
  %27 = icmp ne i32 %26, 0, !dbg !10048
  br i1 %27, label %28, label %33, !dbg !10049

; <label>:28:                                     ; preds = %22
  %29 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !10050
  %30 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %29, i32 0, i32 11, !dbg !10051
  %31 = load i64, i64* %30, align 8, !dbg !10051
  %32 = icmp ne i64 %31, 0, !dbg !10052
  br label %33

; <label>:33:                                     ; preds = %28, %22, %16
  %34 = phi i1 [ false, %22 ], [ false, %16 ], [ %32, %28 ]
  br label %35, !dbg !10045

; <label>:35:                                     ; preds = %33, %10
  %36 = phi i1 [ true, %10 ], [ %34, %33 ]
  ret i1 %36, !dbg !10053
}

; Function Attrs: noinline nounwind uwtable
define i64 @freadahead(%struct._IO_FILE*) #3 !dbg !10054 {
  %2 = alloca i64, align 8
  %3 = alloca %struct._IO_FILE*, align 8
  store %struct._IO_FILE* %0, %struct._IO_FILE** %3, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %3, metadata !10097, metadata !DIExpression()), !dbg !10098
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8, !dbg !10099
  %5 = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %4, i32 0, i32 5, !dbg !10101
  %6 = load i8*, i8** %5, align 8, !dbg !10101
  %7 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8, !dbg !10102
  %8 = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %7, i32 0, i32 4, !dbg !10103
  %9 = load i8*, i8** %8, align 8, !dbg !10103
  %10 = icmp ugt i8* %6, %9, !dbg !10104
  br i1 %10, label %11, label %12, !dbg !10105

; <label>:11:                                     ; preds = %1
  store i64 0, i64* %2, align 8, !dbg !10106
  br label %41, !dbg !10106

; <label>:12:                                     ; preds = %1
  %13 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8, !dbg !10107
  %14 = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %13, i32 0, i32 2, !dbg !10108
  %15 = load i8*, i8** %14, align 8, !dbg !10108
  %16 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8, !dbg !10109
  %17 = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %16, i32 0, i32 1, !dbg !10110
  %18 = load i8*, i8** %17, align 8, !dbg !10110
  %19 = ptrtoint i8* %15 to i64, !dbg !10111
  %20 = ptrtoint i8* %18 to i64, !dbg !10111
  %21 = sub i64 %19, %20, !dbg !10111
  %22 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8, !dbg !10112
  %23 = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %22, i32 0, i32 0, !dbg !10113
  %24 = load i32, i32* %23, align 8, !dbg !10113
  %25 = and i32 %24, 256, !dbg !10114
  %26 = icmp ne i32 %25, 0, !dbg !10114
  br i1 %26, label %27, label %37, !dbg !10112

; <label>:27:                                     ; preds = %12
  %28 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8, !dbg !10115
  %29 = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %28, i32 0, i32 11, !dbg !10116
  %30 = load i8*, i8** %29, align 8, !dbg !10116
  %31 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8, !dbg !10117
  %32 = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %31, i32 0, i32 9, !dbg !10118
  %33 = load i8*, i8** %32, align 8, !dbg !10118
  %34 = ptrtoint i8* %30 to i64, !dbg !10119
  %35 = ptrtoint i8* %33 to i64, !dbg !10119
  %36 = sub i64 %34, %35, !dbg !10119
  br label %38, !dbg !10112

; <label>:37:                                     ; preds = %12
  br label %38, !dbg !10112

; <label>:38:                                     ; preds = %37, %27
  %39 = phi i64 [ %36, %27 ], [ 0, %37 ], !dbg !10112
  %40 = add nsw i64 %21, %39, !dbg !10120
  store i64 %40, i64* %2, align 8, !dbg !10121
  br label %41, !dbg !10121

; <label>:41:                                     ; preds = %38, %11
  %42 = load i64, i64* %2, align 8, !dbg !10122
  ret i64 %42, !dbg !10122
}

; Function Attrs: noinline noreturn nounwind uwtable
define void @xalloc_die() #0 !dbg !10123 {
  %1 = load volatile i32, i32* @exit_failure, align 4, !dbg !10124
  call void (i32, i32, i8*, ...) @error(i32 %1, i32 0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.231, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.1.232, i32 0, i32 0)), !dbg !10125
  call void @abort() #11, !dbg !10126
  unreachable, !dbg !10126
                                                  ; No predecessors!
  unreachable, !dbg !10127
}

; Function Attrs: noinline nounwind uwtable
define i32 @set_cloexec_flag(i32, i1 zeroext) #3 !dbg !10128 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8, align 1
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  store i32 %0, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !10131, metadata !DIExpression()), !dbg !10132
  %8 = zext i1 %1 to i8
  store i8 %8, i8* %5, align 1
  call void @llvm.dbg.declare(metadata i8* %5, metadata !10133, metadata !DIExpression()), !dbg !10134
  call void @llvm.dbg.declare(metadata i32* %6, metadata !10135, metadata !DIExpression()), !dbg !10136
  %9 = load i32, i32* %4, align 4, !dbg !10137
  %10 = call i32 (i32, i32, ...) @rpl_fcntl(i32 %9, i32 1, i32 0), !dbg !10138
  store i32 %10, i32* %6, align 4, !dbg !10136
  %11 = load i32, i32* %6, align 4, !dbg !10139
  %12 = icmp sle i32 0, %11, !dbg !10141
  br i1 %12, label %13, label %34, !dbg !10142

; <label>:13:                                     ; preds = %2
  call void @llvm.dbg.declare(metadata i32* %7, metadata !10143, metadata !DIExpression()), !dbg !10145
  %14 = load i8, i8* %5, align 1, !dbg !10146
  %15 = trunc i8 %14 to i1, !dbg !10146
  br i1 %15, label %16, label %19, !dbg !10146

; <label>:16:                                     ; preds = %13
  %17 = load i32, i32* %6, align 4, !dbg !10147
  %18 = or i32 %17, 1, !dbg !10148
  br label %22, !dbg !10146

; <label>:19:                                     ; preds = %13
  %20 = load i32, i32* %6, align 4, !dbg !10149
  %21 = and i32 %20, -2, !dbg !10150
  br label %22, !dbg !10146

; <label>:22:                                     ; preds = %19, %16
  %23 = phi i32 [ %18, %16 ], [ %21, %19 ], !dbg !10146
  store i32 %23, i32* %7, align 4, !dbg !10145
  %24 = load i32, i32* %6, align 4, !dbg !10151
  %25 = load i32, i32* %7, align 4, !dbg !10153
  %26 = icmp eq i32 %24, %25, !dbg !10154
  br i1 %26, label %32, label %27, !dbg !10155

; <label>:27:                                     ; preds = %22
  %28 = load i32, i32* %4, align 4, !dbg !10156
  %29 = load i32, i32* %7, align 4, !dbg !10157
  %30 = call i32 (i32, i32, ...) @rpl_fcntl(i32 %28, i32 2, i32 %29), !dbg !10158
  %31 = icmp ne i32 %30, -1, !dbg !10159
  br i1 %31, label %32, label %33, !dbg !10160

; <label>:32:                                     ; preds = %27, %22
  store i32 0, i32* %3, align 4, !dbg !10161
  br label %35, !dbg !10161

; <label>:33:                                     ; preds = %27
  br label %34, !dbg !10162

; <label>:34:                                     ; preds = %33, %2
  store i32 -1, i32* %3, align 4, !dbg !10163
  br label %35, !dbg !10163

; <label>:35:                                     ; preds = %34, %32
  %36 = load i32, i32* %3, align 4, !dbg !10164
  ret i32 %36, !dbg !10164
}

; Function Attrs: noinline nounwind uwtable
define i32 @dup_cloexec(i32) #3 !dbg !10165 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !10168, metadata !DIExpression()), !dbg !10169
  %3 = load i32, i32* %2, align 4, !dbg !10170
  %4 = call i32 (i32, i32, ...) @rpl_fcntl(i32 %3, i32 1030, i32 0), !dbg !10171
  ret i32 %4, !dbg !10172
}

; Function Attrs: noinline nounwind uwtable
define i32 @close_stream(%struct._IO_FILE*) #3 !dbg !10173 {
  %2 = alloca i32, align 4
  %3 = alloca %struct._IO_FILE*, align 8
  %4 = alloca i8, align 1
  %5 = alloca i8, align 1
  %6 = alloca i8, align 1
  store %struct._IO_FILE* %0, %struct._IO_FILE** %3, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %3, metadata !10216, metadata !DIExpression()), !dbg !10217
  call void @llvm.dbg.declare(metadata i8* %4, metadata !10218, metadata !DIExpression()), !dbg !10219
  %7 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8, !dbg !10220
  %8 = call i64 @__fpending(%struct._IO_FILE* %7) #8, !dbg !10221
  %9 = icmp ne i64 %8, 0, !dbg !10222
  %10 = zext i1 %9 to i8, !dbg !10219
  store i8 %10, i8* %4, align 1, !dbg !10219
  call void @llvm.dbg.declare(metadata i8* %5, metadata !10223, metadata !DIExpression()), !dbg !10224
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8, !dbg !10225
  %12 = call i32 @ferror_unlocked(%struct._IO_FILE* %11) #8, !dbg !10225
  %13 = icmp ne i32 %12, 0, !dbg !10226
  %14 = zext i1 %13 to i8, !dbg !10224
  store i8 %14, i8* %5, align 1, !dbg !10224
  call void @llvm.dbg.declare(metadata i8* %6, metadata !10227, metadata !DIExpression()), !dbg !10228
  %15 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8, !dbg !10229
  %16 = call i32 @fclose(%struct._IO_FILE* %15), !dbg !10230
  %17 = icmp ne i32 %16, 0, !dbg !10231
  %18 = zext i1 %17 to i8, !dbg !10228
  store i8 %18, i8* %6, align 1, !dbg !10228
  %19 = load i8, i8* %5, align 1, !dbg !10232
  %20 = trunc i8 %19 to i1, !dbg !10232
  br i1 %20, label %31, label %21, !dbg !10234

; <label>:21:                                     ; preds = %1
  %22 = load i8, i8* %6, align 1, !dbg !10235
  %23 = trunc i8 %22 to i1, !dbg !10235
  br i1 %23, label %24, label %37, !dbg !10236

; <label>:24:                                     ; preds = %21
  %25 = load i8, i8* %4, align 1, !dbg !10237
  %26 = trunc i8 %25 to i1, !dbg !10237
  br i1 %26, label %31, label %27, !dbg !10238

; <label>:27:                                     ; preds = %24
  %28 = call i32* @__errno_location() #14, !dbg !10239
  %29 = load i32, i32* %28, align 4, !dbg !10239
  %30 = icmp ne i32 %29, 9, !dbg !10240
  br i1 %30, label %31, label %37, !dbg !10241

; <label>:31:                                     ; preds = %27, %24, %1
  %32 = load i8, i8* %6, align 1, !dbg !10242
  %33 = trunc i8 %32 to i1, !dbg !10242
  br i1 %33, label %36, label %34, !dbg !10245

; <label>:34:                                     ; preds = %31
  %35 = call i32* @__errno_location() #14, !dbg !10246
  store i32 0, i32* %35, align 4, !dbg !10247
  br label %36, !dbg !10246

; <label>:36:                                     ; preds = %34, %31
  store i32 -1, i32* %2, align 4, !dbg !10248
  br label %38, !dbg !10248

; <label>:37:                                     ; preds = %27, %21
  store i32 0, i32* %2, align 4, !dbg !10249
  br label %38, !dbg !10249

; <label>:38:                                     ; preds = %37, %36
  %39 = load i32, i32* %2, align 4, !dbg !10250
  ret i32 %39, !dbg !10250
}

; Function Attrs: nounwind
declare i64 @__fpending(%struct._IO_FILE*) #5

; Function Attrs: nounwind
declare i32 @ferror_unlocked(%struct._IO_FILE*) #5

declare i32 @fclose(%struct._IO_FILE*) #2

; Function Attrs: noinline nounwind uwtable
define void @cycle_check_init(%struct.cycle_check_state*) #3 !dbg !10251 {
  %2 = alloca %struct.cycle_check_state*, align 8
  store %struct.cycle_check_state* %0, %struct.cycle_check_state** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.cycle_check_state** %2, metadata !10264, metadata !DIExpression()), !dbg !10265
  %3 = load %struct.cycle_check_state*, %struct.cycle_check_state** %2, align 8, !dbg !10266
  %4 = getelementptr inbounds %struct.cycle_check_state, %struct.cycle_check_state* %3, i32 0, i32 1, !dbg !10267
  store i64 0, i64* %4, align 8, !dbg !10268
  %5 = load %struct.cycle_check_state*, %struct.cycle_check_state** %2, align 8, !dbg !10269
  %6 = getelementptr inbounds %struct.cycle_check_state, %struct.cycle_check_state* %5, i32 0, i32 2, !dbg !10270
  store i32 9827862, i32* %6, align 8, !dbg !10271
  ret void, !dbg !10272
}

; Function Attrs: noinline nounwind uwtable
define zeroext i1 @cycle_check(%struct.cycle_check_state*, %struct.stat*) #3 !dbg !10273 {
  %3 = alloca i1, align 1
  %4 = alloca %struct.cycle_check_state*, align 8
  %5 = alloca %struct.stat*, align 8
  store %struct.cycle_check_state* %0, %struct.cycle_check_state** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.cycle_check_state** %4, metadata !10299, metadata !DIExpression()), !dbg !10300
  store %struct.stat* %1, %struct.stat** %5, align 8
  call void @llvm.dbg.declare(metadata %struct.stat** %5, metadata !10301, metadata !DIExpression()), !dbg !10302
  %6 = load %struct.cycle_check_state*, %struct.cycle_check_state** %4, align 8, !dbg !10303
  %7 = getelementptr inbounds %struct.cycle_check_state, %struct.cycle_check_state* %6, i32 0, i32 2, !dbg !10303
  %8 = load i32, i32* %7, align 8, !dbg !10303
  %9 = icmp eq i32 %8, 9827862, !dbg !10303
  br i1 %9, label %10, label %11, !dbg !10306

; <label>:10:                                     ; preds = %2
  br label %12, !dbg !10306

; <label>:11:                                     ; preds = %2
  call void @__assert_fail(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.241, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.1.242, i32 0, i32 0), i32 60, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @__PRETTY_FUNCTION__.cycle_check, i32 0, i32 0)) #11, !dbg !10303
  unreachable, !dbg !10303

; <label>:12:                                     ; preds = %10
  %13 = load %struct.cycle_check_state*, %struct.cycle_check_state** %4, align 8, !dbg !10307
  %14 = getelementptr inbounds %struct.cycle_check_state, %struct.cycle_check_state* %13, i32 0, i32 1, !dbg !10309
  %15 = load i64, i64* %14, align 8, !dbg !10309
  %16 = icmp ne i64 %15, 0, !dbg !10307
  br i1 %16, label %17, label %36, !dbg !10310

; <label>:17:                                     ; preds = %12
  %18 = load %struct.stat*, %struct.stat** %5, align 8, !dbg !10311
  %19 = getelementptr inbounds %struct.stat, %struct.stat* %18, i32 0, i32 1, !dbg !10311
  %20 = load i64, i64* %19, align 8, !dbg !10311
  %21 = load %struct.cycle_check_state*, %struct.cycle_check_state** %4, align 8, !dbg !10311
  %22 = getelementptr inbounds %struct.cycle_check_state, %struct.cycle_check_state* %21, i32 0, i32 0, !dbg !10311
  %23 = getelementptr inbounds %struct.dev_ino, %struct.dev_ino* %22, i32 0, i32 0, !dbg !10311
  %24 = load i64, i64* %23, align 8, !dbg !10311
  %25 = icmp eq i64 %20, %24, !dbg !10311
  br i1 %25, label %26, label %36, !dbg !10311

; <label>:26:                                     ; preds = %17
  %27 = load %struct.stat*, %struct.stat** %5, align 8, !dbg !10311
  %28 = getelementptr inbounds %struct.stat, %struct.stat* %27, i32 0, i32 0, !dbg !10311
  %29 = load i64, i64* %28, align 8, !dbg !10311
  %30 = load %struct.cycle_check_state*, %struct.cycle_check_state** %4, align 8, !dbg !10311
  %31 = getelementptr inbounds %struct.cycle_check_state, %struct.cycle_check_state* %30, i32 0, i32 0, !dbg !10311
  %32 = getelementptr inbounds %struct.dev_ino, %struct.dev_ino* %31, i32 0, i32 1, !dbg !10311
  %33 = load i64, i64* %32, align 8, !dbg !10311
  %34 = icmp eq i64 %29, %33, !dbg !10311
  br i1 %34, label %35, label %36, !dbg !10312

; <label>:35:                                     ; preds = %26
  store i1 true, i1* %3, align 1, !dbg !10313
  br label %62, !dbg !10313

; <label>:36:                                     ; preds = %26, %17, %12
  %37 = load %struct.cycle_check_state*, %struct.cycle_check_state** %4, align 8, !dbg !10314
  %38 = getelementptr inbounds %struct.cycle_check_state, %struct.cycle_check_state* %37, i32 0, i32 1, !dbg !10316
  %39 = load i64, i64* %38, align 8, !dbg !10317
  %40 = add i64 %39, 1, !dbg !10317
  store i64 %40, i64* %38, align 8, !dbg !10317
  %41 = call zeroext i1 @is_zero_or_power_of_two(i64 %40), !dbg !10318
  br i1 %41, label %42, label %61, !dbg !10319

; <label>:42:                                     ; preds = %36
  %43 = load %struct.cycle_check_state*, %struct.cycle_check_state** %4, align 8, !dbg !10320
  %44 = getelementptr inbounds %struct.cycle_check_state, %struct.cycle_check_state* %43, i32 0, i32 1, !dbg !10323
  %45 = load i64, i64* %44, align 8, !dbg !10323
  %46 = icmp eq i64 %45, 0, !dbg !10324
  br i1 %46, label %47, label %48, !dbg !10325

; <label>:47:                                     ; preds = %42
  store i1 true, i1* %3, align 1, !dbg !10326
  br label %62, !dbg !10326

; <label>:48:                                     ; preds = %42
  %49 = load %struct.stat*, %struct.stat** %5, align 8, !dbg !10327
  %50 = getelementptr inbounds %struct.stat, %struct.stat* %49, i32 0, i32 0, !dbg !10328
  %51 = load i64, i64* %50, align 8, !dbg !10328
  %52 = load %struct.cycle_check_state*, %struct.cycle_check_state** %4, align 8, !dbg !10329
  %53 = getelementptr inbounds %struct.cycle_check_state, %struct.cycle_check_state* %52, i32 0, i32 0, !dbg !10330
  %54 = getelementptr inbounds %struct.dev_ino, %struct.dev_ino* %53, i32 0, i32 1, !dbg !10331
  store i64 %51, i64* %54, align 8, !dbg !10332
  %55 = load %struct.stat*, %struct.stat** %5, align 8, !dbg !10333
  %56 = getelementptr inbounds %struct.stat, %struct.stat* %55, i32 0, i32 1, !dbg !10334
  %57 = load i64, i64* %56, align 8, !dbg !10334
  %58 = load %struct.cycle_check_state*, %struct.cycle_check_state** %4, align 8, !dbg !10335
  %59 = getelementptr inbounds %struct.cycle_check_state, %struct.cycle_check_state* %58, i32 0, i32 0, !dbg !10336
  %60 = getelementptr inbounds %struct.dev_ino, %struct.dev_ino* %59, i32 0, i32 0, !dbg !10337
  store i64 %57, i64* %60, align 8, !dbg !10338
  br label %61, !dbg !10339

; <label>:61:                                     ; preds = %48, %36
  store i1 false, i1* %3, align 1, !dbg !10340
  br label %62, !dbg !10340

; <label>:62:                                     ; preds = %61, %47, %35
  %63 = load i1, i1* %3, align 1, !dbg !10341
  ret i1 %63, !dbg !10341
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i1 @is_zero_or_power_of_two(i64) #3 !dbg !10342 {
  %2 = alloca i64, align 8
  store i64 %0, i64* %2, align 8
  call void @llvm.dbg.declare(metadata i64* %2, metadata !10345, metadata !DIExpression()), !dbg !10346
  %3 = load i64, i64* %2, align 8, !dbg !10347
  %4 = load i64, i64* %2, align 8, !dbg !10348
  %5 = sub i64 %4, 1, !dbg !10349
  %6 = and i64 %3, %5, !dbg !10350
  %7 = icmp eq i64 %6, 0, !dbg !10351
  ret i1 %7, !dbg !10352
}

; Function Attrs: noinline nounwind uwtable
define i32 @dup_safer(i32) #3 !dbg !10353 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !10354, metadata !DIExpression()), !dbg !10355
  %3 = load i32, i32* %2, align 4, !dbg !10356
  %4 = call i32 (i32, i32, ...) @rpl_fcntl(i32 %3, i32 0, i32 3), !dbg !10357
  ret i32 %4, !dbg !10358
}

; Function Attrs: noinline nounwind uwtable
define i32 @rpl_fcntl(i32, i32, ...) #3 !dbg !233 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca [1 x %struct.__va_list_tag], align 16
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i8*, align 8
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !10359, metadata !DIExpression()), !dbg !10360
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !10361, metadata !DIExpression()), !dbg !10362
  call void @llvm.dbg.declare(metadata [1 x %struct.__va_list_tag]* %5, metadata !10363, metadata !DIExpression()), !dbg !10373
  call void @llvm.dbg.declare(metadata i32* %6, metadata !10374, metadata !DIExpression()), !dbg !10375
  store i32 -1, i32* %6, align 4, !dbg !10375
  %11 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %5, i32 0, i32 0, !dbg !10376
  %12 = bitcast %struct.__va_list_tag* %11 to i8*, !dbg !10376
  call void @llvm.va_start(i8* %12), !dbg !10376
  %13 = load i32, i32* %4, align 4, !dbg !10377
  switch i32 %13, label %86 [
    i32 1030, label %14
  ], !dbg !10378

; <label>:14:                                     ; preds = %2
  call void @llvm.dbg.declare(metadata i32* %7, metadata !10379, metadata !DIExpression()), !dbg !10382
  %15 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %5, i32 0, i32 0, !dbg !10383
  %16 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %15, i32 0, i32 0, !dbg !10383
  %17 = load i32, i32* %16, align 16, !dbg !10383
  %18 = icmp ule i32 %17, 40, !dbg !10383
  br i1 %18, label %19, label %25, !dbg !10383

; <label>:19:                                     ; preds = %14
  %20 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %15, i32 0, i32 3, !dbg !10383
  %21 = load i8*, i8** %20, align 16, !dbg !10383
  %22 = getelementptr i8, i8* %21, i32 %17, !dbg !10383
  %23 = bitcast i8* %22 to i32*, !dbg !10383
  %24 = add i32 %17, 8, !dbg !10383
  store i32 %24, i32* %16, align 16, !dbg !10383
  br label %30, !dbg !10383

; <label>:25:                                     ; preds = %14
  %26 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %15, i32 0, i32 2, !dbg !10383
  %27 = load i8*, i8** %26, align 8, !dbg !10383
  %28 = bitcast i8* %27 to i32*, !dbg !10383
  %29 = getelementptr i8, i8* %27, i32 8, !dbg !10383
  store i8* %29, i8** %26, align 8, !dbg !10383
  br label %30, !dbg !10383

; <label>:30:                                     ; preds = %25, %19
  %31 = phi i32* [ %23, %19 ], [ %28, %25 ], !dbg !10383
  %32 = load i32, i32* %31, align 4, !dbg !10383
  store i32 %32, i32* %7, align 4, !dbg !10382
  %33 = load i32, i32* @rpl_fcntl.have_dupfd_cloexec, align 4, !dbg !10384
  %34 = icmp sle i32 0, %33, !dbg !10386
  br i1 %34, label %35, label %56, !dbg !10387

; <label>:35:                                     ; preds = %30
  %36 = load i32, i32* %3, align 4, !dbg !10388
  %37 = load i32, i32* %4, align 4, !dbg !10390
  %38 = load i32, i32* %7, align 4, !dbg !10391
  %39 = call i32 (i32, i32, ...) @fcntl(i32 %36, i32 %37, i32 %38), !dbg !10392
  store i32 %39, i32* %6, align 4, !dbg !10393
  %40 = load i32, i32* %6, align 4, !dbg !10394
  %41 = icmp sle i32 0, %40, !dbg !10396
  br i1 %41, label %46, label %42, !dbg !10397

; <label>:42:                                     ; preds = %35
  %43 = call i32* @__errno_location() #14, !dbg !10398
  %44 = load i32, i32* %43, align 4, !dbg !10398
  %45 = icmp ne i32 %44, 22, !dbg !10399
  br i1 %45, label %46, label %47, !dbg !10400

; <label>:46:                                     ; preds = %42, %35
  store i32 1, i32* @rpl_fcntl.have_dupfd_cloexec, align 4, !dbg !10401
  br label %55, !dbg !10403

; <label>:47:                                     ; preds = %42
  %48 = load i32, i32* %3, align 4, !dbg !10404
  %49 = load i32, i32* %7, align 4, !dbg !10406
  %50 = call i32 (i32, i32, ...) @rpl_fcntl(i32 %48, i32 0, i32 %49), !dbg !10407
  store i32 %50, i32* %6, align 4, !dbg !10408
  %51 = load i32, i32* %6, align 4, !dbg !10409
  %52 = icmp slt i32 %51, 0, !dbg !10411
  br i1 %52, label %53, label %54, !dbg !10412

; <label>:53:                                     ; preds = %47
  br label %109, !dbg !10413

; <label>:54:                                     ; preds = %47
  store i32 -1, i32* @rpl_fcntl.have_dupfd_cloexec, align 4, !dbg !10414
  br label %55

; <label>:55:                                     ; preds = %54, %46
  br label %60, !dbg !10415

; <label>:56:                                     ; preds = %30
  %57 = load i32, i32* %3, align 4, !dbg !10416
  %58 = load i32, i32* %7, align 4, !dbg !10417
  %59 = call i32 (i32, i32, ...) @rpl_fcntl(i32 %57, i32 0, i32 %58), !dbg !10418
  store i32 %59, i32* %6, align 4, !dbg !10419
  br label %60

; <label>:60:                                     ; preds = %56, %55
  %61 = load i32, i32* %6, align 4, !dbg !10420
  %62 = icmp sle i32 0, %61, !dbg !10422
  br i1 %62, label %63, label %85, !dbg !10423

; <label>:63:                                     ; preds = %60
  %64 = load i32, i32* @rpl_fcntl.have_dupfd_cloexec, align 4, !dbg !10424
  %65 = icmp eq i32 %64, -1, !dbg !10425
  br i1 %65, label %66, label %85, !dbg !10426

; <label>:66:                                     ; preds = %63
  call void @llvm.dbg.declare(metadata i32* %8, metadata !10427, metadata !DIExpression()), !dbg !10429
  %67 = load i32, i32* %6, align 4, !dbg !10430
  %68 = call i32 (i32, i32, ...) @fcntl(i32 %67, i32 1), !dbg !10431
  store i32 %68, i32* %8, align 4, !dbg !10429
  %69 = load i32, i32* %8, align 4, !dbg !10432
  %70 = icmp slt i32 %69, 0, !dbg !10434
  br i1 %70, label %77, label %71, !dbg !10435

; <label>:71:                                     ; preds = %66
  %72 = load i32, i32* %6, align 4, !dbg !10436
  %73 = load i32, i32* %8, align 4, !dbg !10437
  %74 = or i32 %73, 1, !dbg !10438
  %75 = call i32 (i32, i32, ...) @fcntl(i32 %72, i32 2, i32 %74), !dbg !10439
  %76 = icmp eq i32 %75, -1, !dbg !10440
  br i1 %76, label %77, label %84, !dbg !10441

; <label>:77:                                     ; preds = %71, %66
  call void @llvm.dbg.declare(metadata i32* %9, metadata !10442, metadata !DIExpression()), !dbg !10444
  %78 = call i32* @__errno_location() #14, !dbg !10445
  %79 = load i32, i32* %78, align 4, !dbg !10445
  store i32 %79, i32* %9, align 4, !dbg !10444
  %80 = load i32, i32* %6, align 4, !dbg !10446
  %81 = call i32 @close(i32 %80), !dbg !10447
  %82 = load i32, i32* %9, align 4, !dbg !10448
  %83 = call i32* @__errno_location() #14, !dbg !10449
  store i32 %82, i32* %83, align 4, !dbg !10450
  store i32 -1, i32* %6, align 4, !dbg !10451
  br label %84, !dbg !10452

; <label>:84:                                     ; preds = %77, %71
  br label %85, !dbg !10453

; <label>:85:                                     ; preds = %84, %63, %60
  br label %109, !dbg !10454

; <label>:86:                                     ; preds = %2
  call void @llvm.dbg.declare(metadata i8** %10, metadata !10455, metadata !DIExpression()), !dbg !10457
  %87 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %5, i32 0, i32 0, !dbg !10458
  %88 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %87, i32 0, i32 0, !dbg !10458
  %89 = load i32, i32* %88, align 16, !dbg !10458
  %90 = icmp ule i32 %89, 40, !dbg !10458
  br i1 %90, label %91, label %97, !dbg !10458

; <label>:91:                                     ; preds = %86
  %92 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %87, i32 0, i32 3, !dbg !10458
  %93 = load i8*, i8** %92, align 16, !dbg !10458
  %94 = getelementptr i8, i8* %93, i32 %89, !dbg !10458
  %95 = bitcast i8* %94 to i8**, !dbg !10458
  %96 = add i32 %89, 8, !dbg !10458
  store i32 %96, i32* %88, align 16, !dbg !10458
  br label %102, !dbg !10458

; <label>:97:                                     ; preds = %86
  %98 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %87, i32 0, i32 2, !dbg !10458
  %99 = load i8*, i8** %98, align 8, !dbg !10458
  %100 = bitcast i8* %99 to i8**, !dbg !10458
  %101 = getelementptr i8, i8* %99, i32 8, !dbg !10458
  store i8* %101, i8** %98, align 8, !dbg !10458
  br label %102, !dbg !10458

; <label>:102:                                    ; preds = %97, %91
  %103 = phi i8** [ %95, %91 ], [ %100, %97 ], !dbg !10458
  %104 = load i8*, i8** %103, align 8, !dbg !10458
  store i8* %104, i8** %10, align 8, !dbg !10457
  %105 = load i32, i32* %3, align 4, !dbg !10459
  %106 = load i32, i32* %4, align 4, !dbg !10460
  %107 = load i8*, i8** %10, align 8, !dbg !10461
  %108 = call i32 (i32, i32, ...) @fcntl(i32 %105, i32 %106, i8* %107), !dbg !10462
  store i32 %108, i32* %6, align 4, !dbg !10463
  br label %109, !dbg !10464

; <label>:109:                                    ; preds = %102, %85, %53
  %110 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %5, i32 0, i32 0, !dbg !10465
  %111 = bitcast %struct.__va_list_tag* %110 to i8*, !dbg !10465
  call void @llvm.va_end(i8* %111), !dbg !10465
  %112 = load i32, i32* %6, align 4, !dbg !10466
  ret i32 %112, !dbg !10467
}

declare i32 @fcntl(i32, i32, ...) #2

; Function Attrs: noinline nounwind uwtable
define i32 @fd_safer(i32) #3 !dbg !10468 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !10469, metadata !DIExpression()), !dbg !10470
  %5 = load i32, i32* %2, align 4, !dbg !10471
  %6 = icmp sle i32 0, %5, !dbg !10473
  br i1 %6, label %7, label %20, !dbg !10474

; <label>:7:                                      ; preds = %1
  %8 = load i32, i32* %2, align 4, !dbg !10475
  %9 = icmp sle i32 %8, 2, !dbg !10476
  br i1 %9, label %10, label %20, !dbg !10477

; <label>:10:                                     ; preds = %7
  call void @llvm.dbg.declare(metadata i32* %3, metadata !10478, metadata !DIExpression()), !dbg !10480
  %11 = load i32, i32* %2, align 4, !dbg !10481
  %12 = call i32 @dup_safer(i32 %11), !dbg !10482
  store i32 %12, i32* %3, align 4, !dbg !10480
  call void @llvm.dbg.declare(metadata i32* %4, metadata !10483, metadata !DIExpression()), !dbg !10484
  %13 = call i32* @__errno_location() #14, !dbg !10485
  %14 = load i32, i32* %13, align 4, !dbg !10485
  store i32 %14, i32* %4, align 4, !dbg !10484
  %15 = load i32, i32* %2, align 4, !dbg !10486
  %16 = call i32 @close(i32 %15), !dbg !10487
  %17 = load i32, i32* %4, align 4, !dbg !10488
  %18 = call i32* @__errno_location() #14, !dbg !10489
  store i32 %17, i32* %18, align 4, !dbg !10490
  %19 = load i32, i32* %3, align 4, !dbg !10491
  store i32 %19, i32* %2, align 4, !dbg !10492
  br label %20, !dbg !10493

; <label>:20:                                     ; preds = %10, %7, %1
  %21 = load i32, i32* %2, align 4, !dbg !10494
  ret i32 %21, !dbg !10495
}

attributes #0 = { noinline noreturn nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { argmemonly nounwind }
attributes #11 = { noreturn nounwind }
attributes #12 = { nounwind readonly }
attributes #13 = { noreturn }
attributes #14 = { nounwind readnone }

!llvm.dbg.cu = !{!2, !239, !87, !92, !264, !98, !106, !271, !120, !126, !134, !274, !277, !279, !281, !140, !442, !448, !450, !452, !454, !159, !456, !458, !227, !460, !472, !474, !476, !478, !480, !482, !484, !486, !488, !237, !490}
!llvm.ident = !{!492, !492, !492, !492, !492, !492, !492, !492, !492, !492, !492, !492, !492, !492, !492, !492, !492, !492, !492, !492, !492, !492, !492, !492, !492, !492, !492, !492, !492, !492, !492, !492, !492, !492, !492, !492, !492}
!llvm.module.flags = !{!493, !494, !495}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "long_opts", scope: !2, file: !3, line: 64, type: !73, isLocal: true, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 6.0.0 (tags/RELEASE_600/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !34, globals: !40)
!3 = !DIFile(filename: "../../src/rm.c", directory: "/home/ma481/Downloads/Chisel/chisel-bench/benchmark/rm-8.4/original/obj-llvm/src")
!4 = !{!5, !11, !16, !22}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rm_interactive", file: !6, line: 23, size: 32, elements: !7)
!6 = !DIFile(filename: "../../src/remove.h", directory: "/home/ma481/Downloads/Chisel/chisel-bench/benchmark/rm-8.4/original/obj-llvm/src")
!7 = !{!8, !9, !10}
!8 = !DIEnumerator(name: "RMI_ALWAYS", value: 3)
!9 = !DIEnumerator(name: "RMI_SOMETIMES", value: 4)
!10 = !DIEnumerator(name: "RMI_NEVER", value: 5)
!11 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "interactive_type", file: !3, line: 57, size: 32, elements: !12)
!12 = !{!13, !14, !15}
!13 = !DIEnumerator(name: "interactive_never", value: 0)
!14 = !DIEnumerator(name: "interactive_once", value: 1)
!15 = !DIEnumerator(name: "interactive_always", value: 2)
!16 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "RM_status", file: !6, line: 71, size: 32, elements: !17)
!17 = !{!18, !19, !20, !21}
!18 = !DIEnumerator(name: "RM_OK", value: 2)
!19 = !DIEnumerator(name: "RM_USER_DECLINED", value: 3)
!20 = !DIEnumerator(name: "RM_ERROR", value: 4)
!21 = !DIEnumerator(name: "RM_NONEMPTY_DIR", value: 5)
!22 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "quoting_style", file: !23, line: 32, size: 32, elements: !24)
!23 = !DIFile(filename: "../../lib/quotearg.h", directory: "/home/ma481/Downloads/Chisel/chisel-bench/benchmark/rm-8.4/original/obj-llvm/src")
!24 = !{!25, !26, !27, !28, !29, !30, !31, !32, !33}
!25 = !DIEnumerator(name: "literal_quoting_style", value: 0)
!26 = !DIEnumerator(name: "shell_quoting_style", value: 1)
!27 = !DIEnumerator(name: "shell_always_quoting_style", value: 2)
!28 = !DIEnumerator(name: "c_quoting_style", value: 3)
!29 = !DIEnumerator(name: "c_maybe_quoting_style", value: 4)
!30 = !DIEnumerator(name: "escape_quoting_style", value: 5)
!31 = !DIEnumerator(name: "locale_quoting_style", value: 6)
!32 = !DIEnumerator(name: "clocale_quoting_style", value: 7)
!33 = !DIEnumerator(name: "custom_quoting_style", value: 8)
!34 = !{!35, !38, !39}
!35 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !36, size: 64)
!36 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !37)
!37 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!38 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !37, size: 64)
!39 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!40 = !{!41, !0, !61, !67}
!41 = !DIGlobalVariableExpression(var: !42, expr: !DIExpression())
!42 = distinct !DIGlobalVariable(name: "dev_ino_buf", scope: !43, file: !3, line: 334, type: !49, isLocal: true, isDefinition: true)
!43 = distinct !DISubprogram(name: "main", scope: !3, file: !3, line: 208, type: !44, isLocal: false, isDefinition: true, scopeLine: 209, flags: DIFlagPrototyped, isOptimized: false, unit: !2, variables: !48)
!44 = !DISubroutineType(types: !45)
!45 = !{!46, !46, !47}
!46 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!47 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !38, size: 64)
!48 = !{}
!49 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_ino", file: !50, line: 7, size: 128, elements: !51)
!50 = !DIFile(filename: "../../lib/dev-ino.h", directory: "/home/ma481/Downloads/Chisel/chisel-bench/benchmark/rm-8.4/original/obj-llvm/src")
!51 = !{!52, !58}
!52 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !49, file: !50, line: 9, baseType: !53, size: 64)
!53 = !DIDerivedType(tag: DW_TAG_typedef, name: "ino_t", file: !54, line: 48, baseType: !55)
!54 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/sys/types.h", directory: "/home/ma481/Downloads/Chisel/chisel-bench/benchmark/rm-8.4/original/obj-llvm/src")
!55 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ino_t", file: !56, line: 136, baseType: !57)
!56 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "/home/ma481/Downloads/Chisel/chisel-bench/benchmark/rm-8.4/original/obj-llvm/src")
!57 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!58 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !49, file: !50, line: 10, baseType: !59, size: 64, offset: 64)
!59 = !DIDerivedType(tag: DW_TAG_typedef, name: "dev_t", file: !54, line: 60, baseType: !60)
!60 = !DIDerivedType(tag: DW_TAG_typedef, name: "__dev_t", file: !56, line: 133, baseType: !57)
!61 = !DIGlobalVariableExpression(var: !62, expr: !DIExpression())
!62 = distinct !DIGlobalVariable(name: "interactive_types", scope: !2, file: !3, line: 93, type: !63, isLocal: true, isDefinition: true)
!63 = !DICompositeType(tag: DW_TAG_array_type, baseType: !64, size: 192, elements: !65)
!64 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11)
!65 = !{!66}
!66 = !DISubrange(count: 6)
!67 = !DIGlobalVariableExpression(var: !68, expr: !DIExpression())
!68 = distinct !DIGlobalVariable(name: "interactive_args", scope: !2, file: !3, line: 87, type: !69, isLocal: true, isDefinition: true)
!69 = !DICompositeType(tag: DW_TAG_array_type, baseType: !70, size: 448, elements: !71)
!70 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !35)
!71 = !{!72}
!72 = !DISubrange(count: 7)
!73 = !DICompositeType(tag: DW_TAG_array_type, baseType: !74, size: 3072, elements: !83)
!74 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !75)
!75 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "option", file: !76, line: 50, size: 256, elements: !77)
!76 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/getopt_ext.h", directory: "/home/ma481/Downloads/Chisel/chisel-bench/benchmark/rm-8.4/original/obj-llvm/src")
!77 = !{!78, !79, !80, !82}
!78 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !75, file: !76, line: 52, baseType: !35, size: 64)
!79 = !DIDerivedType(tag: DW_TAG_member, name: "has_arg", scope: !75, file: !76, line: 55, baseType: !46, size: 32, offset: 64)
!80 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !75, file: !76, line: 56, baseType: !81, size: 64, offset: 128)
!81 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !46, size: 64)
!82 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !75, file: !76, line: 57, baseType: !46, size: 32, offset: 192)
!83 = !{!84}
!84 = !DISubrange(count: 12)
!85 = !DIGlobalVariableExpression(var: !86, expr: !DIExpression())
!86 = distinct !DIGlobalVariable(name: "Version", scope: !87, file: !88, line: 2, type: !35, isLocal: false, isDefinition: true)
!87 = distinct !DICompileUnit(language: DW_LANG_C99, file: !88, producer: "clang version 6.0.0 (tags/RELEASE_600/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !48, globals: !89)
!88 = !DIFile(filename: "version.c", directory: "/home/ma481/Downloads/Chisel/chisel-bench/benchmark/rm-8.4/original/obj-llvm/src")
!89 = !{!85}
!90 = !DIGlobalVariableExpression(var: !91, expr: !DIExpression())
!91 = distinct !DIGlobalVariable(name: "program_name", scope: !92, file: !93, line: 33, type: !35, isLocal: false, isDefinition: true)
!92 = distinct !DICompileUnit(language: DW_LANG_C99, file: !93, producer: "clang version 6.0.0 (tags/RELEASE_600/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !48, retainedTypes: !94, globals: !95)
!93 = !DIFile(filename: "../../lib/progname.c", directory: "/home/ma481/Downloads/Chisel/chisel-bench/benchmark/rm-8.4/original/obj-llvm/lib")
!94 = !{!39, !38}
!95 = !{!90}
!96 = !DIGlobalVariableExpression(var: !97, expr: !DIExpression())
!97 = distinct !DIGlobalVariable(name: "version_etc_copyright", scope: !98, file: !99, line: 26, type: !101, isLocal: false, isDefinition: true)
!98 = distinct !DICompileUnit(language: DW_LANG_C99, file: !99, producer: "clang version 6.0.0 (tags/RELEASE_600/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !48, globals: !100)
!99 = !DIFile(filename: "../../lib/version-etc-fsf.c", directory: "/home/ma481/Downloads/Chisel/chisel-bench/benchmark/rm-8.4/original/obj-llvm/lib")
!100 = !{!96}
!101 = !DICompositeType(tag: DW_TAG_array_type, baseType: !36, size: 376, elements: !102)
!102 = !{!103}
!103 = !DISubrange(count: 47)
!104 = !DIGlobalVariableExpression(var: !105, expr: !DIExpression())
!105 = distinct !DIGlobalVariable(name: "argmatch_die", scope: !106, file: !107, line: 68, type: !113, isLocal: false, isDefinition: true)
!106 = distinct !DICompileUnit(language: DW_LANG_C99, file: !107, producer: "clang version 6.0.0 (tags/RELEASE_600/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !108, retainedTypes: !111, globals: !112)
!107 = !DIFile(filename: "../../lib/argmatch.c", directory: "/home/ma481/Downloads/Chisel/chisel-bench/benchmark/rm-8.4/original/obj-llvm/lib")
!108 = !{!109}
!109 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "quoting_style", file: !110, line: 32, size: 32, elements: !24)
!110 = !DIFile(filename: "../../lib/quotearg.h", directory: "/home/ma481/Downloads/Chisel/chisel-bench/benchmark/rm-8.4/original/obj-llvm/lib")
!111 = !{!39, !35}
!112 = !{!104}
!113 = !DIDerivedType(tag: DW_TAG_typedef, name: "argmatch_exit_fn", file: !114, line: 51, baseType: !115)
!114 = !DIFile(filename: "../../lib/argmatch.h", directory: "/home/ma481/Downloads/Chisel/chisel-bench/benchmark/rm-8.4/original/obj-llvm/lib")
!115 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !116, size: 64)
!116 = !DISubroutineType(types: !117)
!117 = !{null}
!118 = !DIGlobalVariableExpression(var: !119, expr: !DIExpression())
!119 = distinct !DIGlobalVariable(name: "file_name", scope: !120, file: !121, line: 37, type: !35, isLocal: true, isDefinition: true)
!120 = distinct !DICompileUnit(language: DW_LANG_C99, file: !121, producer: "clang version 6.0.0 (tags/RELEASE_600/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !48, retainedTypes: !122, globals: !123)
!121 = !DIFile(filename: "../../lib/closein.c", directory: "/home/ma481/Downloads/Chisel/chisel-bench/benchmark/rm-8.4/original/obj-llvm/lib")
!122 = !{!35}
!123 = !{!118}
!124 = !DIGlobalVariableExpression(var: !125, expr: !DIExpression())
!125 = distinct !DIGlobalVariable(name: "file_name", scope: !126, file: !127, line: 36, type: !35, isLocal: true, isDefinition: true)
!126 = distinct !DICompileUnit(language: DW_LANG_C99, file: !127, producer: "clang version 6.0.0 (tags/RELEASE_600/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !48, retainedTypes: !122, globals: !128)
!127 = !DIFile(filename: "../../lib/closeout.c", directory: "/home/ma481/Downloads/Chisel/chisel-bench/benchmark/rm-8.4/original/obj-llvm/lib")
!128 = !{!124, !129}
!129 = !DIGlobalVariableExpression(var: !130, expr: !DIExpression())
!130 = distinct !DIGlobalVariable(name: "ignore_EPIPE", scope: !126, file: !127, line: 46, type: !131, isLocal: true, isDefinition: true)
!131 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!132 = !DIGlobalVariableExpression(var: !133, expr: !DIExpression())
!133 = distinct !DIGlobalVariable(name: "exit_failure", scope: !134, file: !135, line: 25, type: !137, isLocal: false, isDefinition: true)
!134 = distinct !DICompileUnit(language: DW_LANG_C99, file: !135, producer: "clang version 6.0.0 (tags/RELEASE_600/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !48, globals: !136)
!135 = !DIFile(filename: "../../lib/exitfail.c", directory: "/home/ma481/Downloads/Chisel/chisel-bench/benchmark/rm-8.4/original/obj-llvm/lib")
!136 = !{!132}
!137 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !46)
!138 = !DIGlobalVariableExpression(var: !139, expr: !DIExpression())
!139 = distinct !DIGlobalVariable(name: "default_tuning", scope: !140, file: !141, line: 130, type: !146, isLocal: true, isDefinition: true)
!140 = distinct !DICompileUnit(language: DW_LANG_C99, file: !141, producer: "clang version 6.0.0 (tags/RELEASE_600/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !48, retainedTypes: !142, globals: !145)
!141 = !DIFile(filename: "../../lib/hash.c", directory: "/home/ma481/Downloads/Chisel/chisel-bench/benchmark/rm-8.4/original/obj-llvm/lib")
!142 = !{!57, !39, !143}
!143 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !144, line: 62, baseType: !57)
!144 = !DIFile(filename: "/home/ma481/Downloads/LLVM_6.0/lib/clang/6.0.0/include/stddef.h", directory: "/home/ma481/Downloads/Chisel/chisel-bench/benchmark/rm-8.4/original/obj-llvm/lib")
!145 = !{!138}
!146 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !147)
!147 = !DIDerivedType(tag: DW_TAG_typedef, name: "Hash_tuning", file: !148, line: 58, baseType: !149)
!148 = !DIFile(filename: "../../lib/hash.h", directory: "/home/ma481/Downloads/Chisel/chisel-bench/benchmark/rm-8.4/original/obj-llvm/lib")
!149 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hash_tuning", file: !148, line: 46, size: 160, elements: !150)
!150 = !{!151, !153, !154, !155, !156}
!151 = !DIDerivedType(tag: DW_TAG_member, name: "shrink_threshold", scope: !149, file: !148, line: 51, baseType: !152, size: 32)
!152 = !DIBasicType(name: "float", size: 32, encoding: DW_ATE_float)
!153 = !DIDerivedType(tag: DW_TAG_member, name: "shrink_factor", scope: !149, file: !148, line: 52, baseType: !152, size: 32, offset: 32)
!154 = !DIDerivedType(tag: DW_TAG_member, name: "growth_threshold", scope: !149, file: !148, line: 53, baseType: !152, size: 32, offset: 64)
!155 = !DIDerivedType(tag: DW_TAG_member, name: "growth_factor", scope: !149, file: !148, line: 54, baseType: !152, size: 32, offset: 96)
!156 = !DIDerivedType(tag: DW_TAG_member, name: "is_n_buckets", scope: !149, file: !148, line: 55, baseType: !131, size: 8, offset: 128)
!157 = !DIGlobalVariableExpression(var: !158, expr: !DIExpression())
!158 = distinct !DIGlobalVariable(name: "quoting_style_args", scope: !159, file: !160, line: 66, type: !218, isLocal: false, isDefinition: true)
!159 = distinct !DICompileUnit(language: DW_LANG_C99, file: !160, producer: "clang version 6.0.0 (tags/RELEASE_600/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !161, retainedTypes: !182, globals: !184)
!160 = !DIFile(filename: "../../lib/quotearg.c", directory: "/home/ma481/Downloads/Chisel/chisel-bench/benchmark/rm-8.4/original/obj-llvm/lib")
!161 = !{!109, !162, !167}
!162 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "quoting_flags", file: !110, line: 209, size: 32, elements: !163)
!163 = !{!164, !165, !166}
!164 = !DIEnumerator(name: "QA_ELIDE_NULL_BYTES", value: 1)
!165 = !DIEnumerator(name: "QA_ELIDE_OUTER_QUOTES", value: 2)
!166 = !DIEnumerator(name: "QA_SPLIT_TRIGRAPHS", value: 4)
!167 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !168, line: 46, size: 32, elements: !169)
!168 = !DIFile(filename: "/usr/include/ctype.h", directory: "/home/ma481/Downloads/Chisel/chisel-bench/benchmark/rm-8.4/original/obj-llvm/lib")
!169 = !{!170, !171, !172, !173, !174, !175, !176, !177, !178, !179, !180, !181}
!170 = !DIEnumerator(name: "_ISupper", value: 256)
!171 = !DIEnumerator(name: "_ISlower", value: 512)
!172 = !DIEnumerator(name: "_ISalpha", value: 1024)
!173 = !DIEnumerator(name: "_ISdigit", value: 2048)
!174 = !DIEnumerator(name: "_ISxdigit", value: 4096)
!175 = !DIEnumerator(name: "_ISspace", value: 8192)
!176 = !DIEnumerator(name: "_ISprint", value: 16384)
!177 = !DIEnumerator(name: "_ISgraph", value: 32768)
!178 = !DIEnumerator(name: "_ISblank", value: 1)
!179 = !DIEnumerator(name: "_IScntrl", value: 2)
!180 = !DIEnumerator(name: "_ISpunct", value: 4)
!181 = !DIEnumerator(name: "_ISalnum", value: 8)
!182 = !{!143, !46, !183, !35}
!183 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!184 = !{!157, !185, !191, !202, !207, !214, !216}
!185 = !DIGlobalVariableExpression(var: !186, expr: !DIExpression())
!186 = distinct !DIGlobalVariable(name: "quoting_style_vals", scope: !159, file: !160, line: 80, type: !187, isLocal: false, isDefinition: true)
!187 = !DICompositeType(tag: DW_TAG_array_type, baseType: !188, size: 256, elements: !189)
!188 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !109)
!189 = !{!190}
!190 = !DISubrange(count: 8)
!191 = !DIGlobalVariableExpression(var: !192, expr: !DIExpression())
!192 = distinct !DIGlobalVariable(name: "default_quoting_options", scope: !159, file: !160, line: 93, type: !193, isLocal: true, isDefinition: true)
!193 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quoting_options", file: !160, line: 46, size: 448, elements: !194)
!194 = !{!195, !196, !197, !200, !201}
!195 = !DIDerivedType(tag: DW_TAG_member, name: "style", scope: !193, file: !160, line: 49, baseType: !109, size: 32)
!196 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !193, file: !160, line: 52, baseType: !46, size: 32, offset: 32)
!197 = !DIDerivedType(tag: DW_TAG_member, name: "quote_these_too", scope: !193, file: !160, line: 56, baseType: !198, size: 256, offset: 64)
!198 = !DICompositeType(tag: DW_TAG_array_type, baseType: !199, size: 256, elements: !189)
!199 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!200 = !DIDerivedType(tag: DW_TAG_member, name: "left_quote", scope: !193, file: !160, line: 59, baseType: !35, size: 64, offset: 320)
!201 = !DIDerivedType(tag: DW_TAG_member, name: "right_quote", scope: !193, file: !160, line: 62, baseType: !35, size: 64, offset: 384)
!202 = !DIGlobalVariableExpression(var: !203, expr: !DIExpression())
!203 = distinct !DIGlobalVariable(name: "slot0", scope: !159, file: !160, line: 686, type: !204, isLocal: true, isDefinition: true)
!204 = !DICompositeType(tag: DW_TAG_array_type, baseType: !37, size: 2048, elements: !205)
!205 = !{!206}
!206 = !DISubrange(count: 256)
!207 = !DIGlobalVariableExpression(var: !208, expr: !DIExpression())
!208 = distinct !DIGlobalVariable(name: "slotvec", scope: !159, file: !160, line: 689, type: !209, isLocal: true, isDefinition: true)
!209 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !210, size: 64)
!210 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "slotvec", file: !160, line: 678, size: 128, elements: !211)
!211 = !{!212, !213}
!212 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !210, file: !160, line: 680, baseType: !143, size: 64)
!213 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !210, file: !160, line: 681, baseType: !38, size: 64, offset: 64)
!214 = !DIGlobalVariableExpression(var: !215, expr: !DIExpression())
!215 = distinct !DIGlobalVariable(name: "nslots", scope: !159, file: !160, line: 687, type: !199, isLocal: true, isDefinition: true)
!216 = !DIGlobalVariableExpression(var: !217, expr: !DIExpression())
!217 = distinct !DIGlobalVariable(name: "slotvec0", scope: !159, file: !160, line: 688, type: !210, isLocal: true, isDefinition: true)
!218 = !DICompositeType(tag: DW_TAG_array_type, baseType: !70, size: 576, elements: !219)
!219 = !{!220}
!220 = !DISubrange(count: 9)
!221 = !DIGlobalVariableExpression(var: !222, expr: !DIExpression())
!222 = distinct !DIGlobalVariable(name: "initialized", scope: !223, file: !224, line: 33, type: !131, isLocal: true, isDefinition: true)
!223 = distinct !DISubprogram(name: "can_write_any_file", scope: !224, file: !224, line: 31, type: !225, isLocal: false, isDefinition: true, scopeLine: 32, flags: DIFlagPrototyped, isOptimized: false, unit: !227, variables: !48)
!224 = !DIFile(filename: "../../lib/write-any-file.c", directory: "/home/ma481/Downloads/Chisel/chisel-bench/benchmark/rm-8.4/original/obj-llvm/lib")
!225 = !DISubroutineType(types: !226)
!226 = !{!131}
!227 = distinct !DICompileUnit(language: DW_LANG_C99, file: !224, producer: "clang version 6.0.0 (tags/RELEASE_600/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !48, globals: !228)
!228 = !{!221, !229}
!229 = !DIGlobalVariableExpression(var: !230, expr: !DIExpression())
!230 = distinct !DIGlobalVariable(name: "can_write", scope: !223, file: !224, line: 34, type: !131, isLocal: true, isDefinition: true)
!231 = !DIGlobalVariableExpression(var: !232, expr: !DIExpression())
!232 = distinct !DIGlobalVariable(name: "have_dupfd_cloexec", scope: !233, file: !234, line: 215, type: !46, isLocal: true, isDefinition: true)
!233 = distinct !DISubprogram(name: "rpl_fcntl", scope: !234, file: !234, line: 166, type: !235, isLocal: false, isDefinition: true, scopeLine: 167, flags: DIFlagPrototyped, isOptimized: false, unit: !237, variables: !48)
!234 = !DIFile(filename: "../../lib/fcntl.c", directory: "/home/ma481/Downloads/Chisel/chisel-bench/benchmark/rm-8.4/original/obj-llvm/lib")
!235 = !DISubroutineType(types: !236)
!236 = !{!46, !46, !46, null}
!237 = distinct !DICompileUnit(language: DW_LANG_C99, file: !234, producer: "clang version 6.0.0 (tags/RELEASE_600/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !48, globals: !238)
!238 = !{!231}
!239 = distinct !DICompileUnit(language: DW_LANG_C99, file: !240, producer: "clang version 6.0.0 (tags/RELEASE_600/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !241, retainedTypes: !263)
!240 = !DIFile(filename: "../../src/remove.c", directory: "/home/ma481/Downloads/Chisel/chisel-bench/benchmark/rm-8.4/original/obj-llvm/src")
!241 = !{!16, !5, !242, !247, !251}
!242 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "Ternary", file: !240, line: 38, size: 32, elements: !243)
!243 = !{!244, !245, !246}
!244 = !DIEnumerator(name: "T_UNKNOWN", value: 2)
!245 = !DIEnumerator(name: "T_NO", value: 3)
!246 = !DIEnumerator(name: "T_YES", value: 4)
!247 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "Prompt_action", file: !240, line: 49, size: 32, elements: !248)
!248 = !{!249, !250}
!249 = !DIEnumerator(name: "PA_DESCEND_INTO_DIR", value: 2)
!250 = !DIEnumerator(name: "PA_REMOVE_DIR", value: 3)
!251 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !252, line: 97, size: 32, elements: !253)
!252 = !DIFile(filename: "/usr/include/dirent.h", directory: "/home/ma481/Downloads/Chisel/chisel-bench/benchmark/rm-8.4/original/obj-llvm/src")
!253 = !{!254, !255, !256, !257, !258, !259, !260, !261, !262}
!254 = !DIEnumerator(name: "DT_UNKNOWN", value: 0)
!255 = !DIEnumerator(name: "DT_FIFO", value: 1)
!256 = !DIEnumerator(name: "DT_CHR", value: 2)
!257 = !DIEnumerator(name: "DT_DIR", value: 4)
!258 = !DIEnumerator(name: "DT_BLK", value: 6)
!259 = !DIEnumerator(name: "DT_REG", value: 8)
!260 = !DIEnumerator(name: "DT_LNK", value: 10)
!261 = !DIEnumerator(name: "DT_SOCK", value: 12)
!262 = !DIEnumerator(name: "DT_WHT", value: 14)
!263 = !{!39, !35, !46}
!264 = distinct !DICompileUnit(language: DW_LANG_C99, file: !265, producer: "clang version 6.0.0 (tags/RELEASE_600/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !266, retainedTypes: !270)
!265 = !DIFile(filename: "../../lib/version-etc.c", directory: "/home/ma481/Downloads/Chisel/chisel-bench/benchmark/rm-8.4/original/obj-llvm/lib")
!266 = !{!267}
!267 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !265, line: 41, size: 32, elements: !268)
!268 = !{!269}
!269 = !DIEnumerator(name: "COPYRIGHT_YEAR", value: 2010)
!270 = !{!35, !39}
!271 = distinct !DICompileUnit(language: DW_LANG_C99, file: !272, producer: "clang version 6.0.0 (tags/RELEASE_600/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !48, retainedTypes: !273)
!272 = !DIFile(filename: "../../lib/basename-lgpl.c", directory: "/home/ma481/Downloads/Chisel/chisel-bench/benchmark/rm-8.4/original/obj-llvm/lib")
!273 = !{!38}
!274 = distinct !DICompileUnit(language: DW_LANG_C99, file: !275, producer: "clang version 6.0.0 (tags/RELEASE_600/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !48, retainedTypes: !276)
!275 = !DIFile(filename: "../../lib/fflush.c", directory: "/home/ma481/Downloads/Chisel/chisel-bench/benchmark/rm-8.4/original/obj-llvm/lib")
!276 = !{!39}
!277 = distinct !DICompileUnit(language: DW_LANG_C99, file: !278, producer: "clang version 6.0.0 (tags/RELEASE_600/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !48, retainedTypes: !122)
!278 = !DIFile(filename: "../../lib/file-type.c", directory: "/home/ma481/Downloads/Chisel/chisel-bench/benchmark/rm-8.4/original/obj-llvm/lib")
!279 = distinct !DICompileUnit(language: DW_LANG_C99, file: !280, producer: "clang version 6.0.0 (tags/RELEASE_600/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !48, retainedTypes: !276)
!280 = !DIFile(filename: "../../lib/fseeko.c", directory: "/home/ma481/Downloads/Chisel/chisel-bench/benchmark/rm-8.4/original/obj-llvm/lib")
!281 = distinct !DICompileUnit(language: DW_LANG_C99, file: !282, producer: "clang version 6.0.0 (tags/RELEASE_600/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !283, retainedTypes: !432)
!282 = !DIFile(filename: "../../lib/fts.c", directory: "/home/ma481/Downloads/Chisel/chisel-bench/benchmark/rm-8.4/original/obj-llvm/lib")
!283 = !{!284, !288, !424, !427, !429}
!284 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "Fts_stat", file: !282, line: 148, size: 32, elements: !285)
!285 = !{!286, !287}
!286 = !DIEnumerator(name: "FTS_NO_STAT_REQUIRED", value: 1)
!287 = !DIEnumerator(name: "FTS_STAT_REQUIRED", value: 2)
!288 = !DICompositeType(tag: DW_TAG_enumeration_type, scope: !290, file: !289, line: 54, size: 32, elements: !422)
!289 = !DIFile(filename: "../../lib/fts-cycle.c", directory: "/home/ma481/Downloads/Chisel/chisel-bench/benchmark/rm-8.4/original/obj-llvm/lib")
!290 = distinct !DISubprogram(name: "setup_dir", scope: !289, file: !289, line: 50, type: !291, isLocal: true, isDefinition: true, scopeLine: 51, flags: DIFlagPrototyped, isOptimized: false, unit: !281, variables: !48)
!291 = !DISubroutineType(types: !292)
!292 = !{!131, !293}
!293 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !294, size: 64)
!294 = !DIDerivedType(tag: DW_TAG_typedef, name: "FTS", file: !295, line: 183, baseType: !296)
!295 = !DIFile(filename: "../../lib/fts_.h", directory: "/home/ma481/Downloads/Chisel/chisel-bench/benchmark/rm-8.4/original/obj-llvm/lib")
!296 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !295, line: 68, size: 1024, elements: !297)
!297 = !{!298, !367, !368, !370, !372, !373, !374, !375, !376, !377, !384, !385, !388, !409}
!298 = !DIDerivedType(tag: DW_TAG_member, name: "fts_cur", scope: !296, file: !295, line: 69, baseType: !299, size: 64)
!299 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !300, size: 64)
!300 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ftsent", file: !295, line: 185, size: 2112, elements: !301)
!301 = !{!302, !303, !304, !305, !307, !308, !309, !310, !311, !312, !313, !314, !316, !317, !322, !323, !324, !325, !365}
!302 = !DIDerivedType(tag: DW_TAG_member, name: "fts_cycle", scope: !300, file: !295, line: 186, baseType: !299, size: 64)
!303 = !DIDerivedType(tag: DW_TAG_member, name: "fts_parent", scope: !300, file: !295, line: 187, baseType: !299, size: 64, offset: 64)
!304 = !DIDerivedType(tag: DW_TAG_member, name: "fts_link", scope: !300, file: !295, line: 188, baseType: !299, size: 64, offset: 128)
!305 = !DIDerivedType(tag: DW_TAG_member, name: "fts_number", scope: !300, file: !295, line: 189, baseType: !306, size: 64, offset: 192)
!306 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!307 = !DIDerivedType(tag: DW_TAG_member, name: "fts_pointer", scope: !300, file: !295, line: 190, baseType: !39, size: 64, offset: 256)
!308 = !DIDerivedType(tag: DW_TAG_member, name: "fts_accpath", scope: !300, file: !295, line: 191, baseType: !38, size: 64, offset: 320)
!309 = !DIDerivedType(tag: DW_TAG_member, name: "fts_path", scope: !300, file: !295, line: 192, baseType: !38, size: 64, offset: 384)
!310 = !DIDerivedType(tag: DW_TAG_member, name: "fts_errno", scope: !300, file: !295, line: 193, baseType: !46, size: 32, offset: 448)
!311 = !DIDerivedType(tag: DW_TAG_member, name: "fts_symfd", scope: !300, file: !295, line: 194, baseType: !46, size: 32, offset: 480)
!312 = !DIDerivedType(tag: DW_TAG_member, name: "fts_pathlen", scope: !300, file: !295, line: 195, baseType: !143, size: 64, offset: 512)
!313 = !DIDerivedType(tag: DW_TAG_member, name: "fts_fts", scope: !300, file: !295, line: 197, baseType: !293, size: 64, offset: 576)
!314 = !DIDerivedType(tag: DW_TAG_member, name: "fts_level", scope: !300, file: !295, line: 201, baseType: !315, size: 64, offset: 640)
!315 = !DIDerivedType(tag: DW_TAG_typedef, name: "ptrdiff_t", file: !144, line: 51, baseType: !306)
!316 = !DIDerivedType(tag: DW_TAG_member, name: "fts_namelen", scope: !300, file: !295, line: 203, baseType: !143, size: 64, offset: 704)
!317 = !DIDerivedType(tag: DW_TAG_member, name: "fts_n_dirs_remaining", scope: !300, file: !295, line: 204, baseType: !318, size: 64, offset: 768)
!318 = !DIDerivedType(tag: DW_TAG_typedef, name: "nlink_t", file: !319, line: 75, baseType: !320)
!319 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/sys/types.h", directory: "/home/ma481/Downloads/Chisel/chisel-bench/benchmark/rm-8.4/original/obj-llvm/lib")
!320 = !DIDerivedType(tag: DW_TAG_typedef, name: "__nlink_t", file: !321, line: 139, baseType: !57)
!321 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "/home/ma481/Downloads/Chisel/chisel-bench/benchmark/rm-8.4/original/obj-llvm/lib")
!322 = !DIDerivedType(tag: DW_TAG_member, name: "fts_info", scope: !300, file: !295, line: 220, baseType: !183, size: 16, offset: 832)
!323 = !DIDerivedType(tag: DW_TAG_member, name: "fts_flags", scope: !300, file: !295, line: 224, baseType: !183, size: 16, offset: 848)
!324 = !DIDerivedType(tag: DW_TAG_member, name: "fts_instr", scope: !300, file: !295, line: 230, baseType: !183, size: 16, offset: 864)
!325 = !DIDerivedType(tag: DW_TAG_member, name: "fts_statp", scope: !300, file: !295, line: 232, baseType: !326, size: 1152, offset: 896)
!326 = !DICompositeType(tag: DW_TAG_array_type, baseType: !327, size: 1152, elements: !363)
!327 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !328, line: 46, size: 1152, elements: !329)
!328 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stat.h", directory: "/home/ma481/Downloads/Chisel/chisel-bench/benchmark/rm-8.4/original/obj-llvm/lib")
!329 = !{!330, !332, !334, !335, !337, !339, !341, !342, !343, !345, !347, !349, !357, !358, !359}
!330 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !327, file: !328, line: 48, baseType: !331, size: 64)
!331 = !DIDerivedType(tag: DW_TAG_typedef, name: "__dev_t", file: !321, line: 133, baseType: !57)
!332 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !327, file: !328, line: 53, baseType: !333, size: 64, offset: 64)
!333 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ino_t", file: !321, line: 136, baseType: !57)
!334 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !327, file: !328, line: 61, baseType: !320, size: 64, offset: 128)
!335 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !327, file: !328, line: 62, baseType: !336, size: 32, offset: 192)
!336 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mode_t", file: !321, line: 138, baseType: !199)
!337 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !327, file: !328, line: 64, baseType: !338, size: 32, offset: 224)
!338 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uid_t", file: !321, line: 134, baseType: !199)
!339 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !327, file: !328, line: 65, baseType: !340, size: 32, offset: 256)
!340 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gid_t", file: !321, line: 135, baseType: !199)
!341 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !327, file: !328, line: 67, baseType: !46, size: 32, offset: 288)
!342 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !327, file: !328, line: 69, baseType: !331, size: 64, offset: 320)
!343 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !327, file: !328, line: 74, baseType: !344, size: 64, offset: 384)
!344 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off_t", file: !321, line: 140, baseType: !306)
!345 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !327, file: !328, line: 78, baseType: !346, size: 64, offset: 448)
!346 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blksize_t", file: !321, line: 162, baseType: !306)
!347 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !327, file: !328, line: 80, baseType: !348, size: 64, offset: 512)
!348 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blkcnt_t", file: !321, line: 167, baseType: !306)
!349 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !327, file: !328, line: 91, baseType: !350, size: 128, offset: 576)
!350 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !351, line: 8, size: 128, elements: !352)
!351 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/struct_timespec.h", directory: "/home/ma481/Downloads/Chisel/chisel-bench/benchmark/rm-8.4/original/obj-llvm/lib")
!352 = !{!353, !355}
!353 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !350, file: !351, line: 10, baseType: !354, size: 64)
!354 = !DIDerivedType(tag: DW_TAG_typedef, name: "__time_t", file: !321, line: 148, baseType: !306)
!355 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !350, file: !351, line: 11, baseType: !356, size: 64, offset: 64)
!356 = !DIDerivedType(tag: DW_TAG_typedef, name: "__syscall_slong_t", file: !321, line: 184, baseType: !306)
!357 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !327, file: !328, line: 92, baseType: !350, size: 128, offset: 704)
!358 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !327, file: !328, line: 93, baseType: !350, size: 128, offset: 832)
!359 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !327, file: !328, line: 106, baseType: !360, size: 192, offset: 960)
!360 = !DICompositeType(tag: DW_TAG_array_type, baseType: !356, size: 192, elements: !361)
!361 = !{!362}
!362 = !DISubrange(count: 3)
!363 = !{!364}
!364 = !DISubrange(count: 1)
!365 = !DIDerivedType(tag: DW_TAG_member, name: "fts_name", scope: !300, file: !295, line: 233, baseType: !366, size: 8, offset: 2048)
!366 = !DICompositeType(tag: DW_TAG_array_type, baseType: !37, size: 8, elements: !363)
!367 = !DIDerivedType(tag: DW_TAG_member, name: "fts_child", scope: !296, file: !295, line: 70, baseType: !299, size: 64, offset: 64)
!368 = !DIDerivedType(tag: DW_TAG_member, name: "fts_array", scope: !296, file: !295, line: 71, baseType: !369, size: 64, offset: 128)
!369 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !299, size: 64)
!370 = !DIDerivedType(tag: DW_TAG_member, name: "fts_dev", scope: !296, file: !295, line: 72, baseType: !371, size: 64, offset: 192)
!371 = !DIDerivedType(tag: DW_TAG_typedef, name: "dev_t", file: !319, line: 60, baseType: !331)
!372 = !DIDerivedType(tag: DW_TAG_member, name: "fts_path", scope: !296, file: !295, line: 73, baseType: !38, size: 64, offset: 256)
!373 = !DIDerivedType(tag: DW_TAG_member, name: "fts_rfd", scope: !296, file: !295, line: 74, baseType: !46, size: 32, offset: 320)
!374 = !DIDerivedType(tag: DW_TAG_member, name: "fts_cwd_fd", scope: !296, file: !295, line: 75, baseType: !46, size: 32, offset: 352)
!375 = !DIDerivedType(tag: DW_TAG_member, name: "fts_pathlen", scope: !296, file: !295, line: 77, baseType: !143, size: 64, offset: 384)
!376 = !DIDerivedType(tag: DW_TAG_member, name: "fts_nitems", scope: !296, file: !295, line: 78, baseType: !143, size: 64, offset: 448)
!377 = !DIDerivedType(tag: DW_TAG_member, name: "fts_compar", scope: !296, file: !295, line: 79, baseType: !378, size: 64, offset: 512)
!378 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !379, size: 64)
!379 = !DISubroutineType(types: !380)
!380 = !{!46, !381, !381}
!381 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !382, size: 64)
!382 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !383, size: 64)
!383 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !300)
!384 = !DIDerivedType(tag: DW_TAG_member, name: "fts_options", scope: !296, file: !295, line: 144, baseType: !46, size: 32, offset: 576)
!385 = !DIDerivedType(tag: DW_TAG_member, name: "fts_leaf_optimization_works_ht", scope: !296, file: !295, line: 154, baseType: !386, size: 64, offset: 640)
!386 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !387, size: 64)
!387 = !DICompositeType(tag: DW_TAG_structure_type, name: "hash_table", file: !295, line: 154, flags: DIFlagFwdDecl)
!388 = !DIDerivedType(tag: DW_TAG_member, name: "fts_cycle", scope: !296, file: !295, line: 176, baseType: !389, size: 64, offset: 704)
!389 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !296, file: !295, line: 156, size: 64, elements: !390)
!390 = !{!391, !392}
!391 = !DIDerivedType(tag: DW_TAG_member, name: "ht", scope: !389, file: !295, line: 169, baseType: !386, size: 64)
!392 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !389, file: !295, line: 175, baseType: !393, size: 64)
!393 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !394, size: 64)
!394 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cycle_check_state", file: !395, line: 28, size: 256, elements: !396)
!395 = !DIFile(filename: "../../lib/cycle-check.h", directory: "/home/ma481/Downloads/Chisel/chisel-bench/benchmark/rm-8.4/original/obj-llvm/lib")
!396 = !{!397, !404, !408}
!397 = !DIDerivedType(tag: DW_TAG_member, name: "dev_ino", scope: !394, file: !395, line: 30, baseType: !398, size: 128)
!398 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_ino", file: !399, line: 7, size: 128, elements: !400)
!399 = !DIFile(filename: "../../lib/dev-ino.h", directory: "/home/ma481/Downloads/Chisel/chisel-bench/benchmark/rm-8.4/original/obj-llvm/lib")
!400 = !{!401, !403}
!401 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !398, file: !399, line: 9, baseType: !402, size: 64)
!402 = !DIDerivedType(tag: DW_TAG_typedef, name: "ino_t", file: !319, line: 48, baseType: !333)
!403 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !398, file: !399, line: 10, baseType: !371, size: 64, offset: 64)
!404 = !DIDerivedType(tag: DW_TAG_member, name: "chdir_counter", scope: !394, file: !395, line: 31, baseType: !405, size: 64, offset: 128)
!405 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !406, line: 112, baseType: !407)
!406 = !DIFile(filename: "/usr/include/stdint.h", directory: "/home/ma481/Downloads/Chisel/chisel-bench/benchmark/rm-8.4/original/obj-llvm/lib")
!407 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uintmax_t", file: !321, line: 62, baseType: !57)
!408 = !DIDerivedType(tag: DW_TAG_member, name: "magic", scope: !394, file: !395, line: 32, baseType: !46, size: 32, offset: 192)
!409 = !DIDerivedType(tag: DW_TAG_member, name: "fts_fd_ring", scope: !296, file: !295, line: 182, baseType: !410, size: 256, offset: 768)
!410 = !DIDerivedType(tag: DW_TAG_typedef, name: "I_ring", file: !411, line: 39, baseType: !412)
!411 = !DIFile(filename: "../../lib/i-ring.h", directory: "/home/ma481/Downloads/Chisel/chisel-bench/benchmark/rm-8.4/original/obj-llvm/lib")
!412 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "I_ring", file: !411, line: 31, size: 256, elements: !413)
!413 = !{!414, !418, !419, !420, !421}
!414 = !DIDerivedType(tag: DW_TAG_member, name: "ir_data", scope: !412, file: !411, line: 33, baseType: !415, size: 128)
!415 = !DICompositeType(tag: DW_TAG_array_type, baseType: !46, size: 128, elements: !416)
!416 = !{!417}
!417 = !DISubrange(count: 4)
!418 = !DIDerivedType(tag: DW_TAG_member, name: "ir_default_val", scope: !412, file: !411, line: 34, baseType: !46, size: 32, offset: 128)
!419 = !DIDerivedType(tag: DW_TAG_member, name: "ir_front", scope: !412, file: !411, line: 35, baseType: !199, size: 32, offset: 160)
!420 = !DIDerivedType(tag: DW_TAG_member, name: "ir_back", scope: !412, file: !411, line: 36, baseType: !199, size: 32, offset: 192)
!421 = !DIDerivedType(tag: DW_TAG_member, name: "ir_empty", scope: !412, file: !411, line: 37, baseType: !131, size: 8, offset: 224)
!422 = !{!423}
!423 = !DIEnumerator(name: "HT_INITIAL_SIZE", value: 31)
!424 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !282, line: 732, size: 32, elements: !425)
!425 = !{!426}
!426 = !DIEnumerator(name: "LCO_HT_INITIAL_SIZE", value: 13)
!427 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !428, line: 97, size: 32, elements: !253)
!428 = !DIFile(filename: "/usr/include/dirent.h", directory: "/home/ma481/Downloads/Chisel/chisel-bench/benchmark/rm-8.4/original/obj-llvm/lib")
!429 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !282, line: 143, size: 32, elements: !430)
!430 = !{!431}
!431 = !DIEnumerator(name: "_FTS_INODE_SORT_DIR_ENTRIES_THRESHOLD", value: 10000)
!432 = !{!39, !405, !38, !306, !433, !438}
!433 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !434, size: 64)
!434 = !DISubroutineType(types: !435)
!435 = !{!46, !436, !436}
!436 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !437, size: 64)
!437 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!438 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !439, size: 64)
!439 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !440, size: 64)
!440 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !441)
!441 = !DIDerivedType(tag: DW_TAG_typedef, name: "FTSENT", file: !295, line: 234, baseType: !300)
!442 = distinct !DICompileUnit(language: DW_LANG_C99, file: !443, producer: "clang version 6.0.0 (tags/RELEASE_600/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !444)
!443 = !DIFile(filename: "../../lib/i-ring.c", directory: "/home/ma481/Downloads/Chisel/chisel-bench/benchmark/rm-8.4/original/obj-llvm/lib")
!444 = !{!445}
!445 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !411, line: 20, size: 32, elements: !446)
!446 = !{!447}
!447 = !DIEnumerator(name: "I_RING_SIZE", value: 4)
!448 = distinct !DICompileUnit(language: DW_LANG_C99, file: !449, producer: "clang version 6.0.0 (tags/RELEASE_600/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !48)
!449 = !DIFile(filename: "../../lib/open-safer.c", directory: "/home/ma481/Downloads/Chisel/chisel-bench/benchmark/rm-8.4/original/obj-llvm/lib")
!450 = distinct !DICompileUnit(language: DW_LANG_C99, file: !451, producer: "clang version 6.0.0 (tags/RELEASE_600/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !48)
!451 = !DIFile(filename: "../../lib/openat-safer.c", directory: "/home/ma481/Downloads/Chisel/chisel-bench/benchmark/rm-8.4/original/obj-llvm/lib")
!452 = distinct !DICompileUnit(language: DW_LANG_C99, file: !453, producer: "clang version 6.0.0 (tags/RELEASE_600/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !48)
!453 = !DIFile(filename: "../../lib/opendir-safer.c", directory: "/home/ma481/Downloads/Chisel/chisel-bench/benchmark/rm-8.4/original/obj-llvm/lib")
!454 = distinct !DICompileUnit(language: DW_LANG_C99, file: !455, producer: "clang version 6.0.0 (tags/RELEASE_600/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !108)
!455 = !DIFile(filename: "../../lib/quote.c", directory: "/home/ma481/Downloads/Chisel/chisel-bench/benchmark/rm-8.4/original/obj-llvm/lib")
!456 = distinct !DICompileUnit(language: DW_LANG_C99, file: !457, producer: "clang version 6.0.0 (tags/RELEASE_600/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !48)
!457 = !DIFile(filename: "../../lib/root-dev-ino.c", directory: "/home/ma481/Downloads/Chisel/chisel-bench/benchmark/rm-8.4/original/obj-llvm/lib")
!458 = distinct !DICompileUnit(language: DW_LANG_C99, file: !459, producer: "clang version 6.0.0 (tags/RELEASE_600/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !48)
!459 = !DIFile(filename: "../../lib/stripslash.c", directory: "/home/ma481/Downloads/Chisel/chisel-bench/benchmark/rm-8.4/original/obj-llvm/lib")
!460 = distinct !DICompileUnit(language: DW_LANG_C99, file: !461, producer: "clang version 6.0.0 (tags/RELEASE_600/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !462, retainedTypes: !471)
!461 = !DIFile(filename: "../../lib/xmalloc.c", directory: "/home/ma481/Downloads/Chisel/chisel-bench/benchmark/rm-8.4/original/obj-llvm/lib")
!462 = !{!463}
!463 = !DICompositeType(tag: DW_TAG_enumeration_type, scope: !465, file: !464, line: 208, size: 32, elements: !469)
!464 = !DIFile(filename: "../../lib/xalloc.h", directory: "/home/ma481/Downloads/Chisel/chisel-bench/benchmark/rm-8.4/original/obj-llvm/lib")
!465 = distinct !DISubprogram(name: "x2nrealloc", scope: !464, file: !464, line: 196, type: !466, isLocal: false, isDefinition: true, scopeLine: 197, flags: DIFlagPrototyped, isOptimized: false, unit: !460, variables: !48)
!466 = !DISubroutineType(types: !467)
!467 = !{!39, !39, !468, !143}
!468 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !143, size: 64)
!469 = !{!470}
!470 = !DIEnumerator(name: "DEFAULT_MXFAST", value: 64)
!471 = !{!143, !38}
!472 = distinct !DICompileUnit(language: DW_LANG_C99, file: !473, producer: "clang version 6.0.0 (tags/RELEASE_600/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !48)
!473 = !DIFile(filename: "../../lib/yesno.c", directory: "/home/ma481/Downloads/Chisel/chisel-bench/benchmark/rm-8.4/original/obj-llvm/lib")
!474 = distinct !DICompileUnit(language: DW_LANG_C99, file: !475, producer: "clang version 6.0.0 (tags/RELEASE_600/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !48)
!475 = !DIFile(filename: "../../lib/euidaccess-stat.c", directory: "/home/ma481/Downloads/Chisel/chisel-bench/benchmark/rm-8.4/original/obj-llvm/lib")
!476 = distinct !DICompileUnit(language: DW_LANG_C99, file: !477, producer: "clang version 6.0.0 (tags/RELEASE_600/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !48, retainedTypes: !276)
!477 = !DIFile(filename: "../../lib/xfts.c", directory: "/home/ma481/Downloads/Chisel/chisel-bench/benchmark/rm-8.4/original/obj-llvm/lib")
!478 = distinct !DICompileUnit(language: DW_LANG_C99, file: !479, producer: "clang version 6.0.0 (tags/RELEASE_600/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !48)
!479 = !DIFile(filename: "../../lib/freadahead.c", directory: "/home/ma481/Downloads/Chisel/chisel-bench/benchmark/rm-8.4/original/obj-llvm/lib")
!480 = distinct !DICompileUnit(language: DW_LANG_C99, file: !481, producer: "clang version 6.0.0 (tags/RELEASE_600/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !48, retainedTypes: !122)
!481 = !DIFile(filename: "../../lib/xalloc-die.c", directory: "/home/ma481/Downloads/Chisel/chisel-bench/benchmark/rm-8.4/original/obj-llvm/lib")
!482 = distinct !DICompileUnit(language: DW_LANG_C99, file: !483, producer: "clang version 6.0.0 (tags/RELEASE_600/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !48)
!483 = !DIFile(filename: "../../lib/cloexec.c", directory: "/home/ma481/Downloads/Chisel/chisel-bench/benchmark/rm-8.4/original/obj-llvm/lib")
!484 = distinct !DICompileUnit(language: DW_LANG_C99, file: !485, producer: "clang version 6.0.0 (tags/RELEASE_600/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !48)
!485 = !DIFile(filename: "../../lib/close-stream.c", directory: "/home/ma481/Downloads/Chisel/chisel-bench/benchmark/rm-8.4/original/obj-llvm/lib")
!486 = distinct !DICompileUnit(language: DW_LANG_C99, file: !487, producer: "clang version 6.0.0 (tags/RELEASE_600/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !48)
!487 = !DIFile(filename: "../../lib/cycle-check.c", directory: "/home/ma481/Downloads/Chisel/chisel-bench/benchmark/rm-8.4/original/obj-llvm/lib")
!488 = distinct !DICompileUnit(language: DW_LANG_C99, file: !489, producer: "clang version 6.0.0 (tags/RELEASE_600/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !48)
!489 = !DIFile(filename: "../../lib/dup-safer.c", directory: "/home/ma481/Downloads/Chisel/chisel-bench/benchmark/rm-8.4/original/obj-llvm/lib")
!490 = distinct !DICompileUnit(language: DW_LANG_C99, file: !491, producer: "clang version 6.0.0 (tags/RELEASE_600/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !48)
!491 = !DIFile(filename: "../../lib/fd-safer.c", directory: "/home/ma481/Downloads/Chisel/chisel-bench/benchmark/rm-8.4/original/obj-llvm/lib")
!492 = !{!"clang version 6.0.0 (tags/RELEASE_600/final)"}
!493 = !{i32 2, !"Dwarf Version", i32 4}
!494 = !{i32 2, !"Debug Info Version", i32 3}
!495 = !{i32 1, !"wchar_size", i32 4}
!496 = distinct !DISubprogram(name: "usage", scope: !3, file: !3, line: 129, type: !497, isLocal: false, isDefinition: true, scopeLine: 130, flags: DIFlagPrototyped | DIFlagNoReturn, isOptimized: false, unit: !2, variables: !48)
!497 = !DISubroutineType(types: !498)
!498 = !{null, !46}
!499 = !DILocalVariable(name: "status", arg: 1, scope: !496, file: !3, line: 129, type: !46)
!500 = !DILocation(line: 129, column: 12, scope: !496)
!501 = !DILocation(line: 131, column: 7, scope: !502)
!502 = distinct !DILexicalBlock(scope: !496, file: !3, line: 131, column: 7)
!503 = !DILocation(line: 131, column: 14, scope: !502)
!504 = !DILocation(line: 131, column: 7, scope: !496)
!505 = !DILocation(line: 132, column: 14, scope: !502)
!506 = !DILocation(line: 133, column: 14, scope: !502)
!507 = !DILocation(line: 132, column: 5, scope: !502)
!508 = !DILocation(line: 136, column: 53, scope: !509)
!509 = distinct !DILexicalBlock(scope: !502, file: !3, line: 135, column: 5)
!510 = !DILocation(line: 136, column: 7, scope: !509)
!511 = !DILocation(line: 137, column: 7, scope: !509)
!512 = !DILocation(line: 143, column: 7, scope: !509)
!513 = !DILocation(line: 150, column: 7, scope: !509)
!514 = !DILocation(line: 155, column: 7, scope: !509)
!515 = !DILocation(line: 161, column: 7, scope: !509)
!516 = !DILocation(line: 162, column: 7, scope: !509)
!517 = !DILocation(line: 163, column: 7, scope: !509)
!518 = !DILocation(line: 176, column: 15, scope: !509)
!519 = !DILocation(line: 176, column: 29, scope: !509)
!520 = !DILocation(line: 168, column: 7, scope: !509)
!521 = !DILocation(line: 177, column: 7, scope: !509)
!522 = !DILocation(line: 183, column: 7, scope: !509)
!523 = !DILocation(line: 185, column: 9, scope: !496)
!524 = !DILocation(line: 185, column: 3, scope: !496)
!525 = !DILocation(line: 186, column: 1, scope: !496)
!526 = distinct !DISubprogram(name: "emit_ancillary_info", scope: !527, file: !527, line: 586, type: !116, isLocal: true, isDefinition: true, scopeLine: 587, flags: DIFlagPrototyped, isOptimized: false, unit: !2, variables: !48)
!527 = !DIFile(filename: "../../src/system.h", directory: "/home/ma481/Downloads/Chisel/chisel-bench/benchmark/rm-8.4/original/obj-llvm/src")
!528 = !DILocation(line: 588, column: 58, scope: !526)
!529 = !DILocation(line: 588, column: 42, scope: !526)
!530 = !DILocation(line: 588, column: 3, scope: !526)
!531 = !DILocation(line: 591, column: 3, scope: !526)
!532 = !DILocation(line: 593, column: 3, scope: !526)
!533 = !DILocalVariable(name: "lc_messages", scope: !526, file: !527, line: 597, type: !35)
!534 = !DILocation(line: 597, column: 15, scope: !526)
!535 = !DILocation(line: 597, column: 29, scope: !526)
!536 = !DILocation(line: 598, column: 7, scope: !537)
!537 = distinct !DILexicalBlock(scope: !526, file: !527, line: 598, column: 7)
!538 = !DILocation(line: 598, column: 19, scope: !537)
!539 = !DILocation(line: 598, column: 31, scope: !537)
!540 = !DILocation(line: 598, column: 22, scope: !537)
!541 = !DILocation(line: 598, column: 7, scope: !526)
!542 = !DILocation(line: 606, column: 33, scope: !543)
!543 = distinct !DILexicalBlock(scope: !537, file: !527, line: 599, column: 5)
!544 = !DILocation(line: 606, column: 17, scope: !543)
!545 = !DILocation(line: 604, column: 7, scope: !543)
!546 = !DILocation(line: 607, column: 5, scope: !543)
!547 = !DILocation(line: 609, column: 66, scope: !526)
!548 = !DILocation(line: 609, column: 50, scope: !526)
!549 = !DILocation(line: 608, column: 3, scope: !526)
!550 = !DILocation(line: 610, column: 1, scope: !526)
!551 = distinct !DISubprogram(name: "klee_dump_memory", scope: !3, file: !3, line: 205, type: !116, isLocal: false, isDefinition: true, scopeLine: 205, isOptimized: false, unit: !2, variables: !48)
!552 = !DILocation(line: 205, column: 26, scope: !551)
!553 = !DILocalVariable(name: "argc", arg: 1, scope: !43, file: !3, line: 208, type: !46)
!554 = !DILocation(line: 208, column: 11, scope: !43)
!555 = !DILocalVariable(name: "argv", arg: 2, scope: !43, file: !3, line: 208, type: !47)
!556 = !DILocation(line: 208, column: 24, scope: !43)
!557 = !DILocalVariable(name: "preserve_root", scope: !43, file: !3, line: 210, type: !131)
!558 = !DILocation(line: 210, column: 8, scope: !43)
!559 = !DILocalVariable(name: "x", scope: !43, file: !3, line: 211, type: !560)
!560 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rm_options", file: !6, line: 32, size: 256, elements: !561)
!561 = !{!562, !563, !564, !565, !566, !568, !569, !570}
!562 = !DIDerivedType(tag: DW_TAG_member, name: "ignore_missing_files", scope: !560, file: !6, line: 35, baseType: !131, size: 8)
!563 = !DIDerivedType(tag: DW_TAG_member, name: "interactive", scope: !560, file: !6, line: 38, baseType: !5, size: 32, offset: 32)
!564 = !DIDerivedType(tag: DW_TAG_member, name: "one_file_system", scope: !560, file: !6, line: 47, baseType: !131, size: 8, offset: 64)
!565 = !DIDerivedType(tag: DW_TAG_member, name: "recursive", scope: !560, file: !6, line: 50, baseType: !131, size: 8, offset: 72)
!566 = !DIDerivedType(tag: DW_TAG_member, name: "root_dev_ino", scope: !560, file: !6, line: 54, baseType: !567, size: 64, offset: 128)
!567 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !49, size: 64)
!568 = !DIDerivedType(tag: DW_TAG_member, name: "stdin_tty", scope: !560, file: !6, line: 57, baseType: !131, size: 8, offset: 192)
!569 = !DIDerivedType(tag: DW_TAG_member, name: "verbose", scope: !560, file: !6, line: 60, baseType: !131, size: 8, offset: 200)
!570 = !DIDerivedType(tag: DW_TAG_member, name: "require_restore_cwd", scope: !560, file: !6, line: 68, baseType: !131, size: 8, offset: 208)
!571 = !DILocation(line: 211, column: 21, scope: !43)
!572 = !DILocalVariable(name: "prompt_once", scope: !43, file: !3, line: 212, type: !131)
!573 = !DILocation(line: 212, column: 8, scope: !43)
!574 = !DILocalVariable(name: "c", scope: !43, file: !3, line: 213, type: !46)
!575 = !DILocation(line: 213, column: 7, scope: !43)
!576 = !DILocation(line: 216, column: 21, scope: !43)
!577 = !DILocation(line: 216, column: 3, scope: !43)
!578 = !DILocation(line: 217, column: 3, scope: !43)
!579 = !DILocation(line: 221, column: 3, scope: !43)
!580 = !DILocation(line: 223, column: 3, scope: !43)
!581 = !DILocation(line: 226, column: 3, scope: !43)
!582 = !DILocation(line: 228, column: 3, scope: !43)
!583 = !DILocation(line: 228, column: 28, scope: !43)
!584 = !DILocation(line: 228, column: 34, scope: !43)
!585 = !DILocation(line: 228, column: 15, scope: !43)
!586 = !DILocation(line: 228, column: 13, scope: !43)
!587 = !DILocation(line: 228, column: 69, scope: !43)
!588 = !DILocation(line: 230, column: 15, scope: !589)
!589 = distinct !DILexicalBlock(scope: !43, file: !3, line: 229, column: 5)
!590 = !DILocation(line: 230, column: 7, scope: !589)
!591 = !DILocation(line: 237, column: 11, scope: !592)
!592 = distinct !DILexicalBlock(scope: !589, file: !3, line: 231, column: 9)
!593 = !DILocation(line: 240, column: 13, scope: !592)
!594 = !DILocation(line: 240, column: 25, scope: !592)
!595 = !DILocation(line: 241, column: 13, scope: !592)
!596 = !DILocation(line: 241, column: 34, scope: !592)
!597 = !DILocation(line: 242, column: 23, scope: !592)
!598 = !DILocation(line: 243, column: 11, scope: !592)
!599 = !DILocation(line: 246, column: 13, scope: !592)
!600 = !DILocation(line: 246, column: 25, scope: !592)
!601 = !DILocation(line: 247, column: 13, scope: !592)
!602 = !DILocation(line: 247, column: 34, scope: !592)
!603 = !DILocation(line: 248, column: 23, scope: !592)
!604 = !DILocation(line: 249, column: 11, scope: !592)
!605 = !DILocation(line: 252, column: 13, scope: !592)
!606 = !DILocation(line: 252, column: 25, scope: !592)
!607 = !DILocation(line: 253, column: 13, scope: !592)
!608 = !DILocation(line: 253, column: 34, scope: !592)
!609 = !DILocation(line: 254, column: 23, scope: !592)
!610 = !DILocation(line: 255, column: 11, scope: !592)
!611 = !DILocation(line: 259, column: 13, scope: !592)
!612 = !DILocation(line: 259, column: 23, scope: !592)
!613 = !DILocation(line: 260, column: 11, scope: !592)
!614 = !DILocalVariable(name: "i", scope: !615, file: !3, line: 264, type: !46)
!615 = distinct !DILexicalBlock(scope: !592, file: !3, line: 263, column: 11)
!616 = !DILocation(line: 264, column: 17, scope: !615)
!617 = !DILocation(line: 265, column: 17, scope: !618)
!618 = distinct !DILexicalBlock(scope: !615, file: !3, line: 265, column: 17)
!619 = !DILocation(line: 265, column: 17, scope: !615)
!620 = !DILocation(line: 266, column: 19, scope: !618)
!621 = !DILocation(line: 266, column: 17, scope: !618)
!622 = !DILocation(line: 266, column: 15, scope: !618)
!623 = !DILocation(line: 269, column: 17, scope: !618)
!624 = !DILocation(line: 270, column: 21, scope: !615)
!625 = !DILocation(line: 270, column: 13, scope: !615)
!626 = !DILocation(line: 273, column: 19, scope: !627)
!627 = distinct !DILexicalBlock(scope: !615, file: !3, line: 271, column: 15)
!628 = !DILocation(line: 273, column: 31, scope: !627)
!629 = !DILocation(line: 274, column: 29, scope: !627)
!630 = !DILocation(line: 275, column: 17, scope: !627)
!631 = !DILocation(line: 278, column: 19, scope: !627)
!632 = !DILocation(line: 278, column: 31, scope: !627)
!633 = !DILocation(line: 279, column: 19, scope: !627)
!634 = !DILocation(line: 279, column: 40, scope: !627)
!635 = !DILocation(line: 280, column: 29, scope: !627)
!636 = !DILocation(line: 281, column: 17, scope: !627)
!637 = !DILocation(line: 284, column: 19, scope: !627)
!638 = !DILocation(line: 284, column: 31, scope: !627)
!639 = !DILocation(line: 285, column: 19, scope: !627)
!640 = !DILocation(line: 285, column: 40, scope: !627)
!641 = !DILocation(line: 286, column: 29, scope: !627)
!642 = !DILocation(line: 287, column: 17, scope: !627)
!643 = !DILocation(line: 289, column: 13, scope: !615)
!644 = !DILocation(line: 293, column: 13, scope: !592)
!645 = !DILocation(line: 293, column: 29, scope: !592)
!646 = !DILocation(line: 294, column: 11, scope: !592)
!647 = !DILocation(line: 297, column: 25, scope: !592)
!648 = !DILocation(line: 298, column: 11, scope: !592)
!649 = !DILocation(line: 301, column: 25, scope: !592)
!650 = !DILocation(line: 302, column: 11, scope: !592)
!651 = !DILocation(line: 305, column: 13, scope: !592)
!652 = !DILocation(line: 305, column: 23, scope: !592)
!653 = !DILocation(line: 306, column: 11, scope: !592)
!654 = !DILocation(line: 309, column: 13, scope: !592)
!655 = !DILocation(line: 309, column: 21, scope: !592)
!656 = !DILocation(line: 310, column: 11, scope: !592)
!657 = !DILocation(line: 312, column: 9, scope: !592)
!658 = !DILocation(line: 313, column: 9, scope: !592)
!659 = !DILocation(line: 315, column: 36, scope: !592)
!660 = !DILocation(line: 315, column: 42, scope: !592)
!661 = !DILocation(line: 315, column: 11, scope: !592)
!662 = !DILocation(line: 316, column: 11, scope: !592)
!663 = distinct !{!663, !582, !664}
!664 = !DILocation(line: 318, column: 5, scope: !43)
!665 = !DILocation(line: 319, column: 1, scope: !43)
!666 = !DILocation(line: 321, column: 7, scope: !667)
!667 = distinct !DILexicalBlock(scope: !43, file: !3, line: 321, column: 7)
!668 = !DILocation(line: 321, column: 15, scope: !667)
!669 = !DILocation(line: 321, column: 12, scope: !667)
!670 = !DILocation(line: 321, column: 7, scope: !43)
!671 = !DILocation(line: 323, column: 13, scope: !672)
!672 = distinct !DILexicalBlock(scope: !673, file: !3, line: 323, column: 11)
!673 = distinct !DILexicalBlock(scope: !667, file: !3, line: 322, column: 5)
!674 = !DILocation(line: 323, column: 11, scope: !673)
!675 = !DILocation(line: 324, column: 9, scope: !672)
!676 = !DILocation(line: 327, column: 11, scope: !677)
!677 = distinct !DILexicalBlock(scope: !672, file: !3, line: 326, column: 9)
!678 = !DILocation(line: 328, column: 11, scope: !677)
!679 = !DILocation(line: 332, column: 9, scope: !680)
!680 = distinct !DILexicalBlock(scope: !43, file: !3, line: 332, column: 7)
!681 = !DILocation(line: 332, column: 19, scope: !680)
!682 = !DILocation(line: 332, column: 22, scope: !680)
!683 = !DILocation(line: 332, column: 7, scope: !43)
!684 = !DILocation(line: 335, column: 24, scope: !685)
!685 = distinct !DILexicalBlock(scope: !680, file: !3, line: 333, column: 5)
!686 = !DILocation(line: 335, column: 9, scope: !685)
!687 = !DILocation(line: 335, column: 22, scope: !685)
!688 = !DILocation(line: 336, column: 13, scope: !689)
!689 = distinct !DILexicalBlock(scope: !685, file: !3, line: 336, column: 11)
!690 = !DILocation(line: 336, column: 26, scope: !689)
!691 = !DILocation(line: 336, column: 11, scope: !685)
!692 = !DILocation(line: 337, column: 30, scope: !689)
!693 = !DILocation(line: 338, column: 16, scope: !689)
!694 = !DILocation(line: 337, column: 9, scope: !689)
!695 = !DILocation(line: 339, column: 5, scope: !685)
!696 = !DILocalVariable(name: "n_files", scope: !43, file: !3, line: 341, type: !697)
!697 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !698, line: 62, baseType: !57)
!698 = !DIFile(filename: "/home/ma481/Downloads/LLVM_6.0/lib/clang/6.0.0/include/stddef.h", directory: "/home/ma481/Downloads/Chisel/chisel-bench/benchmark/rm-8.4/original/obj-llvm/src")
!699 = !DILocation(line: 341, column: 10, scope: !43)
!700 = !DILocation(line: 341, column: 20, scope: !43)
!701 = !DILocation(line: 341, column: 27, scope: !43)
!702 = !DILocation(line: 341, column: 25, scope: !43)
!703 = !DILocalVariable(name: "file", scope: !43, file: !3, line: 342, type: !47)
!704 = !DILocation(line: 342, column: 10, scope: !43)
!705 = !DILocation(line: 342, column: 18, scope: !43)
!706 = !DILocation(line: 342, column: 25, scope: !43)
!707 = !DILocation(line: 342, column: 23, scope: !43)
!708 = !DILocation(line: 344, column: 7, scope: !709)
!709 = distinct !DILexicalBlock(scope: !43, file: !3, line: 344, column: 7)
!710 = !DILocation(line: 344, column: 19, scope: !709)
!711 = !DILocation(line: 344, column: 25, scope: !709)
!712 = !DILocation(line: 344, column: 35, scope: !709)
!713 = !DILocation(line: 344, column: 42, scope: !709)
!714 = !DILocation(line: 344, column: 40, scope: !709)
!715 = !DILocation(line: 344, column: 7, scope: !43)
!716 = !DILocation(line: 346, column: 16, scope: !717)
!717 = distinct !DILexicalBlock(scope: !709, file: !3, line: 345, column: 5)
!718 = !DILocation(line: 347, column: 19, scope: !717)
!719 = !DILocation(line: 347, column: 17, scope: !717)
!720 = !DILocation(line: 350, column: 16, scope: !717)
!721 = !DILocation(line: 346, column: 7, scope: !717)
!722 = !DILocation(line: 351, column: 12, scope: !723)
!723 = distinct !DILexicalBlock(scope: !717, file: !3, line: 351, column: 11)
!724 = !DILocation(line: 351, column: 11, scope: !717)
!725 = !DILocation(line: 352, column: 9, scope: !723)
!726 = !DILocation(line: 353, column: 5, scope: !717)
!727 = !DILocalVariable(name: "status", scope: !43, file: !3, line: 355, type: !16)
!728 = !DILocation(line: 355, column: 18, scope: !43)
!729 = !DILocation(line: 355, column: 31, scope: !43)
!730 = !DILocation(line: 355, column: 27, scope: !43)
!731 = !DILocation(line: 356, column: 3, scope: !732)
!732 = distinct !DILexicalBlock(scope: !733, file: !3, line: 356, column: 3)
!733 = distinct !DILexicalBlock(scope: !43, file: !3, line: 356, column: 3)
!734 = !DILocation(line: 356, column: 3, scope: !733)
!735 = !DILocation(line: 357, column: 9, scope: !43)
!736 = !DILocation(line: 357, column: 16, scope: !43)
!737 = !DILocation(line: 357, column: 3, scope: !43)
!738 = !DILocation(line: 358, column: 1, scope: !43)
!739 = distinct !DISubprogram(name: "rm_option_init", scope: !3, file: !3, line: 189, type: !740, isLocal: true, isDefinition: true, scopeLine: 190, flags: DIFlagPrototyped, isOptimized: false, unit: !2, variables: !48)
!740 = !DISubroutineType(types: !741)
!741 = !{null, !742}
!742 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !560, size: 64)
!743 = !DILocalVariable(name: "x", arg: 1, scope: !739, file: !3, line: 189, type: !742)
!744 = !DILocation(line: 189, column: 36, scope: !739)
!745 = !DILocation(line: 191, column: 3, scope: !739)
!746 = !DILocation(line: 191, column: 6, scope: !739)
!747 = !DILocation(line: 191, column: 27, scope: !739)
!748 = !DILocation(line: 192, column: 3, scope: !739)
!749 = !DILocation(line: 192, column: 6, scope: !739)
!750 = !DILocation(line: 192, column: 18, scope: !739)
!751 = !DILocation(line: 193, column: 3, scope: !739)
!752 = !DILocation(line: 193, column: 6, scope: !739)
!753 = !DILocation(line: 193, column: 22, scope: !739)
!754 = !DILocation(line: 194, column: 3, scope: !739)
!755 = !DILocation(line: 194, column: 6, scope: !739)
!756 = !DILocation(line: 194, column: 16, scope: !739)
!757 = !DILocation(line: 195, column: 3, scope: !739)
!758 = !DILocation(line: 195, column: 6, scope: !739)
!759 = !DILocation(line: 195, column: 19, scope: !739)
!760 = !DILocation(line: 196, column: 18, scope: !739)
!761 = !DILocation(line: 196, column: 3, scope: !739)
!762 = !DILocation(line: 196, column: 6, scope: !739)
!763 = !DILocation(line: 196, column: 16, scope: !739)
!764 = !DILocation(line: 197, column: 3, scope: !739)
!765 = !DILocation(line: 197, column: 6, scope: !739)
!766 = !DILocation(line: 197, column: 14, scope: !739)
!767 = !DILocation(line: 201, column: 3, scope: !739)
!768 = !DILocation(line: 201, column: 6, scope: !739)
!769 = !DILocation(line: 201, column: 26, scope: !739)
!770 = !DILocation(line: 202, column: 1, scope: !739)
!771 = distinct !DISubprogram(name: "priv_set_remove_linkdir", scope: !772, file: !772, line: 40, type: !773, isLocal: true, isDefinition: true, scopeLine: 41, flags: DIFlagPrototyped, isOptimized: false, unit: !2, variables: !48)
!772 = !DIFile(filename: "../../lib/priv-set.h", directory: "/home/ma481/Downloads/Chisel/chisel-bench/benchmark/rm-8.4/original/obj-llvm/src")
!773 = !DISubroutineType(types: !774)
!774 = !{!46}
!775 = !DILocation(line: 42, column: 3, scope: !771)
!776 = distinct !DISubprogram(name: "diagnose_leading_hyphen", scope: !3, file: !3, line: 105, type: !777, isLocal: true, isDefinition: true, scopeLine: 106, flags: DIFlagPrototyped, isOptimized: false, unit: !2, variables: !48)
!777 = !DISubroutineType(types: !778)
!778 = !{null, !46, !47}
!779 = !DILocalVariable(name: "argc", arg: 1, scope: !776, file: !3, line: 105, type: !46)
!780 = !DILocation(line: 105, column: 30, scope: !776)
!781 = !DILocalVariable(name: "argv", arg: 2, scope: !776, file: !3, line: 105, type: !47)
!782 = !DILocation(line: 105, column: 43, scope: !776)
!783 = !DILocalVariable(name: "i", scope: !776, file: !3, line: 109, type: !46)
!784 = !DILocation(line: 109, column: 7, scope: !776)
!785 = !DILocation(line: 111, column: 10, scope: !786)
!786 = distinct !DILexicalBlock(scope: !776, file: !3, line: 111, column: 3)
!787 = !DILocation(line: 111, column: 8, scope: !786)
!788 = !DILocation(line: 111, column: 15, scope: !789)
!789 = distinct !DILexicalBlock(scope: !786, file: !3, line: 111, column: 3)
!790 = !DILocation(line: 111, column: 19, scope: !789)
!791 = !DILocation(line: 111, column: 17, scope: !789)
!792 = !DILocation(line: 111, column: 3, scope: !786)
!793 = !DILocalVariable(name: "arg", scope: !794, file: !3, line: 113, type: !35)
!794 = distinct !DILexicalBlock(scope: !789, file: !3, line: 112, column: 5)
!795 = !DILocation(line: 113, column: 19, scope: !794)
!796 = !DILocation(line: 113, column: 25, scope: !794)
!797 = !DILocation(line: 113, column: 30, scope: !794)
!798 = !DILocalVariable(name: "st", scope: !794, file: !3, line: 114, type: !799)
!799 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !800, line: 46, size: 1152, elements: !801)
!800 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stat.h", directory: "/home/ma481/Downloads/Chisel/chisel-bench/benchmark/rm-8.4/original/obj-llvm/src")
!801 = !{!802, !803, !804, !806, !808, !810, !812, !813, !814, !816, !818, !820, !828, !829, !830}
!802 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !799, file: !800, line: 48, baseType: !60, size: 64)
!803 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !799, file: !800, line: 53, baseType: !55, size: 64, offset: 64)
!804 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !799, file: !800, line: 61, baseType: !805, size: 64, offset: 128)
!805 = !DIDerivedType(tag: DW_TAG_typedef, name: "__nlink_t", file: !56, line: 139, baseType: !57)
!806 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !799, file: !800, line: 62, baseType: !807, size: 32, offset: 192)
!807 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mode_t", file: !56, line: 138, baseType: !199)
!808 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !799, file: !800, line: 64, baseType: !809, size: 32, offset: 224)
!809 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uid_t", file: !56, line: 134, baseType: !199)
!810 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !799, file: !800, line: 65, baseType: !811, size: 32, offset: 256)
!811 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gid_t", file: !56, line: 135, baseType: !199)
!812 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !799, file: !800, line: 67, baseType: !46, size: 32, offset: 288)
!813 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !799, file: !800, line: 69, baseType: !60, size: 64, offset: 320)
!814 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !799, file: !800, line: 74, baseType: !815, size: 64, offset: 384)
!815 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off_t", file: !56, line: 140, baseType: !306)
!816 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !799, file: !800, line: 78, baseType: !817, size: 64, offset: 448)
!817 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blksize_t", file: !56, line: 162, baseType: !306)
!818 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !799, file: !800, line: 80, baseType: !819, size: 64, offset: 512)
!819 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blkcnt_t", file: !56, line: 167, baseType: !306)
!820 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !799, file: !800, line: 91, baseType: !821, size: 128, offset: 576)
!821 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !822, line: 8, size: 128, elements: !823)
!822 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/struct_timespec.h", directory: "/home/ma481/Downloads/Chisel/chisel-bench/benchmark/rm-8.4/original/obj-llvm/src")
!823 = !{!824, !826}
!824 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !821, file: !822, line: 10, baseType: !825, size: 64)
!825 = !DIDerivedType(tag: DW_TAG_typedef, name: "__time_t", file: !56, line: 148, baseType: !306)
!826 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !821, file: !822, line: 11, baseType: !827, size: 64, offset: 64)
!827 = !DIDerivedType(tag: DW_TAG_typedef, name: "__syscall_slong_t", file: !56, line: 184, baseType: !306)
!828 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !799, file: !800, line: 92, baseType: !821, size: 128, offset: 704)
!829 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !799, file: !800, line: 93, baseType: !821, size: 128, offset: 832)
!830 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !799, file: !800, line: 106, baseType: !831, size: 192, offset: 960)
!831 = !DICompositeType(tag: DW_TAG_array_type, baseType: !827, size: 192, elements: !361)
!832 = !DILocation(line: 114, column: 19, scope: !794)
!833 = !DILocation(line: 116, column: 11, scope: !834)
!834 = distinct !DILexicalBlock(scope: !794, file: !3, line: 116, column: 11)
!835 = !DILocation(line: 116, column: 18, scope: !834)
!836 = !DILocation(line: 116, column: 25, scope: !834)
!837 = !DILocation(line: 116, column: 28, scope: !834)
!838 = !DILocation(line: 116, column: 35, scope: !834)
!839 = !DILocation(line: 116, column: 45, scope: !834)
!840 = !DILocation(line: 116, column: 38, scope: !834)
!841 = !DILocation(line: 116, column: 55, scope: !834)
!842 = !DILocation(line: 116, column: 11, scope: !794)
!843 = !DILocation(line: 118, column: 20, scope: !844)
!844 = distinct !DILexicalBlock(scope: !834, file: !3, line: 117, column: 9)
!845 = !DILocation(line: 120, column: 20, scope: !844)
!846 = !DILocation(line: 121, column: 62, scope: !844)
!847 = !DILocation(line: 121, column: 20, scope: !844)
!848 = !DILocation(line: 122, column: 27, scope: !844)
!849 = !DILocation(line: 122, column: 20, scope: !844)
!850 = !DILocation(line: 118, column: 11, scope: !844)
!851 = !DILocation(line: 123, column: 11, scope: !844)
!852 = !DILocation(line: 125, column: 5, scope: !794)
!853 = !DILocation(line: 111, column: 26, scope: !789)
!854 = !DILocation(line: 111, column: 3, scope: !789)
!855 = distinct !{!855, !792, !856}
!856 = !DILocation(line: 125, column: 5, scope: !786)
!857 = !DILocation(line: 126, column: 1, scope: !776)
!858 = distinct !DISubprogram(name: "rm", scope: !240, file: !240, line: 592, type: !859, isLocal: false, isDefinition: true, scopeLine: 593, flags: DIFlagPrototyped, isOptimized: false, unit: !239, variables: !48)
!859 = !DISubroutineType(types: !860)
!860 = !{!16, !861, !863}
!861 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !862, size: 64)
!862 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !38)
!863 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !864, size: 64)
!864 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !865)
!865 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rm_options", file: !6, line: 32, size: 256, elements: !866)
!866 = !{!867, !868, !869, !870, !871, !877, !878, !879}
!867 = !DIDerivedType(tag: DW_TAG_member, name: "ignore_missing_files", scope: !865, file: !6, line: 35, baseType: !131, size: 8)
!868 = !DIDerivedType(tag: DW_TAG_member, name: "interactive", scope: !865, file: !6, line: 38, baseType: !5, size: 32, offset: 32)
!869 = !DIDerivedType(tag: DW_TAG_member, name: "one_file_system", scope: !865, file: !6, line: 47, baseType: !131, size: 8, offset: 64)
!870 = !DIDerivedType(tag: DW_TAG_member, name: "recursive", scope: !865, file: !6, line: 50, baseType: !131, size: 8, offset: 72)
!871 = !DIDerivedType(tag: DW_TAG_member, name: "root_dev_ino", scope: !865, file: !6, line: 54, baseType: !872, size: 64, offset: 128)
!872 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !873, size: 64)
!873 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_ino", file: !50, line: 7, size: 128, elements: !874)
!874 = !{!875, !876}
!875 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !873, file: !50, line: 9, baseType: !53, size: 64)
!876 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !873, file: !50, line: 10, baseType: !59, size: 64, offset: 64)
!877 = !DIDerivedType(tag: DW_TAG_member, name: "stdin_tty", scope: !865, file: !6, line: 57, baseType: !131, size: 8, offset: 192)
!878 = !DIDerivedType(tag: DW_TAG_member, name: "verbose", scope: !865, file: !6, line: 60, baseType: !131, size: 8, offset: 200)
!879 = !DIDerivedType(tag: DW_TAG_member, name: "require_restore_cwd", scope: !865, file: !6, line: 68, baseType: !131, size: 8, offset: 208)
!880 = !DILocalVariable(name: "file", arg: 1, scope: !858, file: !240, line: 592, type: !861)
!881 = !DILocation(line: 592, column: 18, scope: !858)
!882 = !DILocalVariable(name: "x", arg: 2, scope: !858, file: !240, line: 592, type: !863)
!883 = !DILocation(line: 592, column: 49, scope: !858)
!884 = !DILocalVariable(name: "rm_status", scope: !858, file: !240, line: 594, type: !16)
!885 = !DILocation(line: 594, column: 18, scope: !858)
!886 = !DILocation(line: 596, column: 8, scope: !887)
!887 = distinct !DILexicalBlock(scope: !858, file: !240, line: 596, column: 7)
!888 = !DILocation(line: 596, column: 7, scope: !887)
!889 = !DILocation(line: 596, column: 7, scope: !858)
!890 = !DILocalVariable(name: "bit_flags", scope: !891, file: !240, line: 598, type: !46)
!891 = distinct !DILexicalBlock(scope: !887, file: !240, line: 597, column: 5)
!892 = !DILocation(line: 598, column: 11, scope: !891)
!893 = !DILocation(line: 602, column: 11, scope: !894)
!894 = distinct !DILexicalBlock(scope: !891, file: !240, line: 602, column: 11)
!895 = !DILocation(line: 602, column: 14, scope: !894)
!896 = !DILocation(line: 602, column: 11, scope: !891)
!897 = !DILocation(line: 603, column: 19, scope: !894)
!898 = !DILocation(line: 603, column: 9, scope: !894)
!899 = !DILocalVariable(name: "fts", scope: !891, file: !240, line: 605, type: !900)
!900 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !901, size: 64)
!901 = !DIDerivedType(tag: DW_TAG_typedef, name: "FTS", file: !902, line: 183, baseType: !903)
!902 = !DIFile(filename: "../../lib/fts_.h", directory: "/home/ma481/Downloads/Chisel/chisel-bench/benchmark/rm-8.4/original/obj-llvm/src")
!903 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !902, line: 68, size: 1024, elements: !904)
!904 = !{!905, !952, !953, !955, !956, !957, !958, !959, !960, !961, !968, !969, !973, !980}
!905 = !DIDerivedType(tag: DW_TAG_member, name: "fts_cur", scope: !903, file: !902, line: 69, baseType: !906, size: 64)
!906 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !907, size: 64)
!907 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ftsent", file: !902, line: 185, size: 2112, elements: !908)
!908 = !{!909, !910, !911, !912, !913, !914, !915, !916, !917, !918, !919, !920, !922, !923, !925, !926, !927, !928, !951}
!909 = !DIDerivedType(tag: DW_TAG_member, name: "fts_cycle", scope: !907, file: !902, line: 186, baseType: !906, size: 64)
!910 = !DIDerivedType(tag: DW_TAG_member, name: "fts_parent", scope: !907, file: !902, line: 187, baseType: !906, size: 64, offset: 64)
!911 = !DIDerivedType(tag: DW_TAG_member, name: "fts_link", scope: !907, file: !902, line: 188, baseType: !906, size: 64, offset: 128)
!912 = !DIDerivedType(tag: DW_TAG_member, name: "fts_number", scope: !907, file: !902, line: 189, baseType: !306, size: 64, offset: 192)
!913 = !DIDerivedType(tag: DW_TAG_member, name: "fts_pointer", scope: !907, file: !902, line: 190, baseType: !39, size: 64, offset: 256)
!914 = !DIDerivedType(tag: DW_TAG_member, name: "fts_accpath", scope: !907, file: !902, line: 191, baseType: !38, size: 64, offset: 320)
!915 = !DIDerivedType(tag: DW_TAG_member, name: "fts_path", scope: !907, file: !902, line: 192, baseType: !38, size: 64, offset: 384)
!916 = !DIDerivedType(tag: DW_TAG_member, name: "fts_errno", scope: !907, file: !902, line: 193, baseType: !46, size: 32, offset: 448)
!917 = !DIDerivedType(tag: DW_TAG_member, name: "fts_symfd", scope: !907, file: !902, line: 194, baseType: !46, size: 32, offset: 480)
!918 = !DIDerivedType(tag: DW_TAG_member, name: "fts_pathlen", scope: !907, file: !902, line: 195, baseType: !697, size: 64, offset: 512)
!919 = !DIDerivedType(tag: DW_TAG_member, name: "fts_fts", scope: !907, file: !902, line: 197, baseType: !900, size: 64, offset: 576)
!920 = !DIDerivedType(tag: DW_TAG_member, name: "fts_level", scope: !907, file: !902, line: 201, baseType: !921, size: 64, offset: 640)
!921 = !DIDerivedType(tag: DW_TAG_typedef, name: "ptrdiff_t", file: !698, line: 51, baseType: !306)
!922 = !DIDerivedType(tag: DW_TAG_member, name: "fts_namelen", scope: !907, file: !902, line: 203, baseType: !697, size: 64, offset: 704)
!923 = !DIDerivedType(tag: DW_TAG_member, name: "fts_n_dirs_remaining", scope: !907, file: !902, line: 204, baseType: !924, size: 64, offset: 768)
!924 = !DIDerivedType(tag: DW_TAG_typedef, name: "nlink_t", file: !54, line: 75, baseType: !805)
!925 = !DIDerivedType(tag: DW_TAG_member, name: "fts_info", scope: !907, file: !902, line: 220, baseType: !183, size: 16, offset: 832)
!926 = !DIDerivedType(tag: DW_TAG_member, name: "fts_flags", scope: !907, file: !902, line: 224, baseType: !183, size: 16, offset: 848)
!927 = !DIDerivedType(tag: DW_TAG_member, name: "fts_instr", scope: !907, file: !902, line: 230, baseType: !183, size: 16, offset: 864)
!928 = !DIDerivedType(tag: DW_TAG_member, name: "fts_statp", scope: !907, file: !902, line: 232, baseType: !929, size: 1152, offset: 896)
!929 = !DICompositeType(tag: DW_TAG_array_type, baseType: !930, size: 1152, elements: !363)
!930 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !800, line: 46, size: 1152, elements: !931)
!931 = !{!932, !933, !934, !935, !936, !937, !938, !939, !940, !941, !942, !943, !948, !949, !950}
!932 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !930, file: !800, line: 48, baseType: !60, size: 64)
!933 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !930, file: !800, line: 53, baseType: !55, size: 64, offset: 64)
!934 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !930, file: !800, line: 61, baseType: !805, size: 64, offset: 128)
!935 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !930, file: !800, line: 62, baseType: !807, size: 32, offset: 192)
!936 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !930, file: !800, line: 64, baseType: !809, size: 32, offset: 224)
!937 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !930, file: !800, line: 65, baseType: !811, size: 32, offset: 256)
!938 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !930, file: !800, line: 67, baseType: !46, size: 32, offset: 288)
!939 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !930, file: !800, line: 69, baseType: !60, size: 64, offset: 320)
!940 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !930, file: !800, line: 74, baseType: !815, size: 64, offset: 384)
!941 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !930, file: !800, line: 78, baseType: !817, size: 64, offset: 448)
!942 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !930, file: !800, line: 80, baseType: !819, size: 64, offset: 512)
!943 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !930, file: !800, line: 91, baseType: !944, size: 128, offset: 576)
!944 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !822, line: 8, size: 128, elements: !945)
!945 = !{!946, !947}
!946 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !944, file: !822, line: 10, baseType: !825, size: 64)
!947 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !944, file: !822, line: 11, baseType: !827, size: 64, offset: 64)
!948 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !930, file: !800, line: 92, baseType: !944, size: 128, offset: 704)
!949 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !930, file: !800, line: 93, baseType: !944, size: 128, offset: 832)
!950 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !930, file: !800, line: 106, baseType: !831, size: 192, offset: 960)
!951 = !DIDerivedType(tag: DW_TAG_member, name: "fts_name", scope: !907, file: !902, line: 233, baseType: !366, size: 8, offset: 2048)
!952 = !DIDerivedType(tag: DW_TAG_member, name: "fts_child", scope: !903, file: !902, line: 70, baseType: !906, size: 64, offset: 64)
!953 = !DIDerivedType(tag: DW_TAG_member, name: "fts_array", scope: !903, file: !902, line: 71, baseType: !954, size: 64, offset: 128)
!954 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !906, size: 64)
!955 = !DIDerivedType(tag: DW_TAG_member, name: "fts_dev", scope: !903, file: !902, line: 72, baseType: !59, size: 64, offset: 192)
!956 = !DIDerivedType(tag: DW_TAG_member, name: "fts_path", scope: !903, file: !902, line: 73, baseType: !38, size: 64, offset: 256)
!957 = !DIDerivedType(tag: DW_TAG_member, name: "fts_rfd", scope: !903, file: !902, line: 74, baseType: !46, size: 32, offset: 320)
!958 = !DIDerivedType(tag: DW_TAG_member, name: "fts_cwd_fd", scope: !903, file: !902, line: 75, baseType: !46, size: 32, offset: 352)
!959 = !DIDerivedType(tag: DW_TAG_member, name: "fts_pathlen", scope: !903, file: !902, line: 77, baseType: !697, size: 64, offset: 384)
!960 = !DIDerivedType(tag: DW_TAG_member, name: "fts_nitems", scope: !903, file: !902, line: 78, baseType: !697, size: 64, offset: 448)
!961 = !DIDerivedType(tag: DW_TAG_member, name: "fts_compar", scope: !903, file: !902, line: 79, baseType: !962, size: 64, offset: 512)
!962 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !963, size: 64)
!963 = !DISubroutineType(types: !964)
!964 = !{!46, !965, !965}
!965 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !966, size: 64)
!966 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !967, size: 64)
!967 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !907)
!968 = !DIDerivedType(tag: DW_TAG_member, name: "fts_options", scope: !903, file: !902, line: 144, baseType: !46, size: 32, offset: 576)
!969 = !DIDerivedType(tag: DW_TAG_member, name: "fts_leaf_optimization_works_ht", scope: !903, file: !902, line: 154, baseType: !970, size: 64, offset: 640)
!970 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !971, size: 64)
!971 = !DICompositeType(tag: DW_TAG_structure_type, name: "hash_table", file: !972, line: 60, flags: DIFlagFwdDecl)
!972 = !DIFile(filename: "../../lib/hash.h", directory: "/home/ma481/Downloads/Chisel/chisel-bench/benchmark/rm-8.4/original/obj-llvm/src")
!973 = !DIDerivedType(tag: DW_TAG_member, name: "fts_cycle", scope: !903, file: !902, line: 176, baseType: !974, size: 64, offset: 704)
!974 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !903, file: !902, line: 156, size: 64, elements: !975)
!975 = !{!976, !977}
!976 = !DIDerivedType(tag: DW_TAG_member, name: "ht", scope: !974, file: !902, line: 169, baseType: !970, size: 64)
!977 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !974, file: !902, line: 175, baseType: !978, size: 64)
!978 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !979, size: 64)
!979 = !DICompositeType(tag: DW_TAG_structure_type, name: "cycle_check_state", file: !902, line: 175, flags: DIFlagFwdDecl)
!980 = !DIDerivedType(tag: DW_TAG_member, name: "fts_fd_ring", scope: !903, file: !902, line: 182, baseType: !981, size: 256, offset: 768)
!981 = !DIDerivedType(tag: DW_TAG_typedef, name: "I_ring", file: !982, line: 39, baseType: !983)
!982 = !DIFile(filename: "../../lib/i-ring.h", directory: "/home/ma481/Downloads/Chisel/chisel-bench/benchmark/rm-8.4/original/obj-llvm/src")
!983 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "I_ring", file: !982, line: 31, size: 256, elements: !984)
!984 = !{!985, !986, !987, !988, !989}
!985 = !DIDerivedType(tag: DW_TAG_member, name: "ir_data", scope: !983, file: !982, line: 33, baseType: !415, size: 128)
!986 = !DIDerivedType(tag: DW_TAG_member, name: "ir_default_val", scope: !983, file: !982, line: 34, baseType: !46, size: 32, offset: 128)
!987 = !DIDerivedType(tag: DW_TAG_member, name: "ir_front", scope: !983, file: !982, line: 35, baseType: !199, size: 32, offset: 160)
!988 = !DIDerivedType(tag: DW_TAG_member, name: "ir_back", scope: !983, file: !982, line: 36, baseType: !199, size: 32, offset: 192)
!989 = !DIDerivedType(tag: DW_TAG_member, name: "ir_empty", scope: !983, file: !982, line: 37, baseType: !131, size: 8, offset: 224)
!990 = !DILocation(line: 605, column: 12, scope: !891)
!991 = !DILocation(line: 605, column: 29, scope: !891)
!992 = !DILocation(line: 605, column: 35, scope: !891)
!993 = !DILocation(line: 605, column: 18, scope: !891)
!994 = !DILocation(line: 607, column: 7, scope: !891)
!995 = !DILocalVariable(name: "ent", scope: !996, file: !240, line: 609, type: !997)
!996 = distinct !DILexicalBlock(scope: !891, file: !240, line: 608, column: 9)
!997 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !998, size: 64)
!998 = !DIDerivedType(tag: DW_TAG_typedef, name: "FTSENT", file: !902, line: 234, baseType: !907)
!999 = !DILocation(line: 609, column: 19, scope: !996)
!1000 = !DILocation(line: 611, column: 27, scope: !996)
!1001 = !DILocation(line: 611, column: 17, scope: !996)
!1002 = !DILocation(line: 611, column: 15, scope: !996)
!1003 = !DILocation(line: 612, column: 15, scope: !1004)
!1004 = distinct !DILexicalBlock(scope: !996, file: !240, line: 612, column: 15)
!1005 = !DILocation(line: 612, column: 19, scope: !1004)
!1006 = !DILocation(line: 612, column: 15, scope: !996)
!1007 = !DILocation(line: 614, column: 19, scope: !1008)
!1008 = distinct !DILexicalBlock(scope: !1009, file: !240, line: 614, column: 19)
!1009 = distinct !DILexicalBlock(scope: !1004, file: !240, line: 613, column: 13)
!1010 = !DILocation(line: 614, column: 25, scope: !1008)
!1011 = !DILocation(line: 614, column: 19, scope: !1009)
!1012 = !DILocation(line: 616, column: 29, scope: !1013)
!1013 = distinct !DILexicalBlock(scope: !1008, file: !240, line: 615, column: 17)
!1014 = !DILocation(line: 616, column: 19, scope: !1013)
!1015 = !DILocation(line: 617, column: 29, scope: !1013)
!1016 = !DILocation(line: 618, column: 17, scope: !1013)
!1017 = !DILocation(line: 619, column: 15, scope: !1009)
!1018 = !DILocalVariable(name: "s", scope: !996, file: !240, line: 622, type: !16)
!1019 = !DILocation(line: 622, column: 26, scope: !996)
!1020 = !DILocation(line: 622, column: 38, scope: !996)
!1021 = !DILocation(line: 622, column: 43, scope: !996)
!1022 = !DILocation(line: 622, column: 48, scope: !996)
!1023 = !DILocation(line: 622, column: 30, scope: !996)
!1024 = !DILocation(line: 624, column: 11, scope: !1025)
!1025 = distinct !DILexicalBlock(scope: !1026, file: !240, line: 624, column: 11)
!1026 = distinct !DILexicalBlock(scope: !996, file: !240, line: 624, column: 11)
!1027 = !DILocation(line: 624, column: 11, scope: !1026)
!1028 = !DILocation(line: 625, column: 11, scope: !996)
!1029 = distinct !{!1029, !1028, !1028}
!1030 = !DILocation(line: 625, column: 11, scope: !1031)
!1031 = distinct !DILexicalBlock(scope: !1032, file: !240, line: 625, column: 11)
!1032 = distinct !DILexicalBlock(scope: !996, file: !240, line: 625, column: 11)
!1033 = !DILocation(line: 625, column: 11, scope: !1032)
!1034 = distinct !{!1034, !994, !1035}
!1035 = !DILocation(line: 626, column: 9, scope: !891)
!1036 = !DILocation(line: 628, column: 22, scope: !1037)
!1037 = distinct !DILexicalBlock(scope: !891, file: !240, line: 628, column: 11)
!1038 = !DILocation(line: 628, column: 11, scope: !1037)
!1039 = !DILocation(line: 628, column: 27, scope: !1037)
!1040 = !DILocation(line: 628, column: 11, scope: !891)
!1041 = !DILocation(line: 630, column: 21, scope: !1042)
!1042 = distinct !DILexicalBlock(scope: !1037, file: !240, line: 629, column: 9)
!1043 = !DILocation(line: 630, column: 11, scope: !1042)
!1044 = !DILocation(line: 631, column: 21, scope: !1042)
!1045 = !DILocation(line: 632, column: 9, scope: !1042)
!1046 = !DILocation(line: 633, column: 5, scope: !891)
!1047 = !DILocation(line: 635, column: 10, scope: !858)
!1048 = !DILocation(line: 635, column: 3, scope: !858)
!1049 = distinct !DISubprogram(name: "rm_fts", scope: !240, file: !240, line: 473, type: !1050, isLocal: true, isDefinition: true, scopeLine: 474, flags: DIFlagPrototyped, isOptimized: false, unit: !239, variables: !48)
!1050 = !DISubroutineType(types: !1051)
!1051 = !{!16, !900, !997, !863}
!1052 = !DILocalVariable(name: "fts", arg: 1, scope: !1049, file: !240, line: 473, type: !900)
!1053 = !DILocation(line: 473, column: 14, scope: !1049)
!1054 = !DILocalVariable(name: "ent", arg: 2, scope: !1049, file: !240, line: 473, type: !997)
!1055 = !DILocation(line: 473, column: 27, scope: !1049)
!1056 = !DILocalVariable(name: "x", arg: 3, scope: !1049, file: !240, line: 473, type: !863)
!1057 = !DILocation(line: 473, column: 57, scope: !1049)
!1058 = !DILocation(line: 475, column: 11, scope: !1049)
!1059 = !DILocation(line: 475, column: 16, scope: !1049)
!1060 = !DILocation(line: 475, column: 3, scope: !1049)
!1061 = !DILocation(line: 478, column: 13, scope: !1062)
!1062 = distinct !DILexicalBlock(scope: !1063, file: !240, line: 478, column: 11)
!1063 = distinct !DILexicalBlock(scope: !1049, file: !240, line: 476, column: 5)
!1064 = !DILocation(line: 478, column: 16, scope: !1062)
!1065 = !DILocation(line: 478, column: 11, scope: !1063)
!1066 = !DILocation(line: 482, column: 59, scope: !1067)
!1067 = distinct !DILexicalBlock(scope: !1062, file: !240, line: 479, column: 9)
!1068 = !DILocation(line: 482, column: 64, scope: !1067)
!1069 = !DILocation(line: 482, column: 52, scope: !1067)
!1070 = !DILocation(line: 482, column: 11, scope: !1067)
!1071 = !DILocation(line: 483, column: 31, scope: !1067)
!1072 = !DILocation(line: 483, column: 11, scope: !1067)
!1073 = !DILocation(line: 484, column: 26, scope: !1067)
!1074 = !DILocation(line: 484, column: 31, scope: !1067)
!1075 = !DILocation(line: 484, column: 11, scope: !1067)
!1076 = !DILocation(line: 485, column: 11, scope: !1067)
!1077 = !DILocation(line: 489, column: 11, scope: !1078)
!1078 = distinct !DILexicalBlock(scope: !1063, file: !240, line: 489, column: 11)
!1079 = !DILocation(line: 489, column: 16, scope: !1078)
!1080 = !DILocation(line: 489, column: 26, scope: !1078)
!1081 = !DILocation(line: 489, column: 11, scope: !1063)
!1082 = !DILocation(line: 491, column: 39, scope: !1083)
!1083 = distinct !DILexicalBlock(scope: !1084, file: !240, line: 491, column: 15)
!1084 = distinct !DILexicalBlock(scope: !1078, file: !240, line: 490, column: 9)
!1085 = !DILocation(line: 491, column: 44, scope: !1083)
!1086 = !DILocation(line: 491, column: 15, scope: !1083)
!1087 = !DILocation(line: 491, column: 15, scope: !1084)
!1088 = !DILocation(line: 492, column: 40, scope: !1083)
!1089 = !DILocation(line: 492, column: 45, scope: !1083)
!1090 = !DILocation(line: 492, column: 32, scope: !1083)
!1091 = !DILocation(line: 492, column: 13, scope: !1083)
!1092 = !DILocation(line: 492, column: 18, scope: !1083)
!1093 = !DILocation(line: 492, column: 30, scope: !1083)
!1094 = !DILocation(line: 496, column: 46, scope: !1095)
!1095 = distinct !DILexicalBlock(scope: !1084, file: !240, line: 496, column: 15)
!1096 = !DILocation(line: 496, column: 51, scope: !1095)
!1097 = !DILocation(line: 496, column: 30, scope: !1095)
!1098 = !DILocation(line: 496, column: 15, scope: !1095)
!1099 = !DILocation(line: 496, column: 15, scope: !1084)
!1100 = !DILocation(line: 499, column: 29, scope: !1101)
!1101 = distinct !DILexicalBlock(scope: !1095, file: !240, line: 497, column: 13)
!1102 = !DILocation(line: 499, column: 34, scope: !1101)
!1103 = !DILocation(line: 499, column: 22, scope: !1101)
!1104 = !DILocation(line: 498, column: 15, scope: !1101)
!1105 = !DILocation(line: 500, column: 30, scope: !1101)
!1106 = !DILocation(line: 500, column: 35, scope: !1101)
!1107 = !DILocation(line: 500, column: 15, scope: !1101)
!1108 = !DILocation(line: 501, column: 15, scope: !1101)
!1109 = !DILocation(line: 506, column: 15, scope: !1110)
!1110 = distinct !DILexicalBlock(scope: !1084, file: !240, line: 506, column: 15)
!1111 = !DILocation(line: 506, column: 15, scope: !1084)
!1112 = !DILocation(line: 508, column: 15, scope: !1113)
!1113 = distinct !DILexicalBlock(scope: !1110, file: !240, line: 507, column: 13)
!1114 = distinct !{!1114, !1112, !1112}
!1115 = !DILocation(line: 508, column: 15, scope: !1116)
!1116 = distinct !DILexicalBlock(scope: !1117, file: !240, line: 508, column: 15)
!1117 = distinct !DILexicalBlock(scope: !1113, file: !240, line: 508, column: 15)
!1118 = !DILocation(line: 508, column: 15, scope: !1117)
!1119 = !DILocation(line: 509, column: 30, scope: !1113)
!1120 = !DILocation(line: 509, column: 35, scope: !1113)
!1121 = !DILocation(line: 509, column: 15, scope: !1113)
!1122 = !DILocation(line: 510, column: 15, scope: !1113)
!1123 = !DILocation(line: 512, column: 9, scope: !1084)
!1124 = !DILocalVariable(name: "is_empty_directory", scope: !1125, file: !240, line: 515, type: !1126)
!1125 = distinct !DILexicalBlock(scope: !1063, file: !240, line: 514, column: 7)
!1126 = !DIDerivedType(tag: DW_TAG_typedef, name: "Ternary", file: !240, line: 44, baseType: !242)
!1127 = !DILocation(line: 515, column: 17, scope: !1125)
!1128 = !DILocalVariable(name: "s", scope: !1125, file: !240, line: 516, type: !16)
!1129 = !DILocation(line: 516, column: 24, scope: !1125)
!1130 = !DILocation(line: 516, column: 36, scope: !1125)
!1131 = !DILocation(line: 516, column: 41, scope: !1125)
!1132 = !DILocation(line: 516, column: 63, scope: !1125)
!1133 = !DILocation(line: 516, column: 28, scope: !1125)
!1134 = !DILocation(line: 519, column: 13, scope: !1135)
!1135 = distinct !DILexicalBlock(scope: !1125, file: !240, line: 519, column: 13)
!1136 = !DILocation(line: 519, column: 15, scope: !1135)
!1137 = !DILocation(line: 519, column: 24, scope: !1135)
!1138 = !DILocation(line: 519, column: 27, scope: !1135)
!1139 = !DILocation(line: 519, column: 46, scope: !1135)
!1140 = !DILocation(line: 519, column: 13, scope: !1125)
!1141 = !DILocation(line: 523, column: 25, scope: !1142)
!1142 = distinct !DILexicalBlock(scope: !1135, file: !240, line: 520, column: 11)
!1143 = !DILocation(line: 523, column: 30, scope: !1142)
!1144 = !DILocation(line: 523, column: 35, scope: !1142)
!1145 = !DILocation(line: 523, column: 17, scope: !1142)
!1146 = !DILocation(line: 523, column: 15, scope: !1142)
!1147 = !DILocation(line: 524, column: 28, scope: !1142)
!1148 = !DILocation(line: 524, column: 33, scope: !1142)
!1149 = !DILocation(line: 524, column: 13, scope: !1142)
!1150 = !DILocation(line: 525, column: 11, scope: !1142)
!1151 = !DILocation(line: 527, column: 13, scope: !1152)
!1152 = distinct !DILexicalBlock(scope: !1125, file: !240, line: 527, column: 13)
!1153 = !DILocation(line: 527, column: 15, scope: !1152)
!1154 = !DILocation(line: 527, column: 13, scope: !1125)
!1155 = !DILocation(line: 529, column: 33, scope: !1156)
!1156 = distinct !DILexicalBlock(scope: !1152, file: !240, line: 528, column: 11)
!1157 = !DILocation(line: 529, column: 13, scope: !1156)
!1158 = !DILocation(line: 530, column: 28, scope: !1156)
!1159 = !DILocation(line: 530, column: 33, scope: !1156)
!1160 = !DILocation(line: 530, column: 13, scope: !1156)
!1161 = !DILocation(line: 531, column: 11, scope: !1156)
!1162 = !DILocation(line: 533, column: 16, scope: !1125)
!1163 = !DILocation(line: 533, column: 9, scope: !1125)
!1164 = !DILocation(line: 548, column: 13, scope: !1165)
!1165 = distinct !DILexicalBlock(scope: !1166, file: !240, line: 548, column: 13)
!1166 = distinct !DILexicalBlock(scope: !1063, file: !240, line: 544, column: 7)
!1167 = !DILocation(line: 548, column: 18, scope: !1165)
!1168 = !DILocation(line: 548, column: 27, scope: !1165)
!1169 = !DILocation(line: 549, column: 13, scope: !1165)
!1170 = !DILocation(line: 549, column: 16, scope: !1165)
!1171 = !DILocation(line: 549, column: 19, scope: !1165)
!1172 = !DILocation(line: 550, column: 13, scope: !1165)
!1173 = !DILocation(line: 550, column: 32, scope: !1165)
!1174 = !DILocation(line: 550, column: 37, scope: !1165)
!1175 = !DILocation(line: 550, column: 30, scope: !1165)
!1176 = !DILocation(line: 551, column: 13, scope: !1165)
!1177 = !DILocation(line: 551, column: 16, scope: !1165)
!1178 = !DILocation(line: 551, column: 21, scope: !1165)
!1179 = !DILocation(line: 551, column: 32, scope: !1165)
!1180 = !DILocation(line: 551, column: 42, scope: !1165)
!1181 = !DILocation(line: 551, column: 47, scope: !1165)
!1182 = !DILocation(line: 551, column: 39, scope: !1165)
!1183 = !DILocation(line: 548, column: 13, scope: !1166)
!1184 = !DILocation(line: 553, column: 33, scope: !1185)
!1185 = distinct !DILexicalBlock(scope: !1165, file: !240, line: 552, column: 11)
!1186 = !DILocation(line: 553, column: 13, scope: !1185)
!1187 = !DILocation(line: 555, column: 27, scope: !1185)
!1188 = !DILocation(line: 555, column: 32, scope: !1185)
!1189 = !DILocation(line: 555, column: 20, scope: !1185)
!1190 = !DILocation(line: 554, column: 13, scope: !1185)
!1191 = !DILocation(line: 556, column: 13, scope: !1185)
!1192 = !DILocalVariable(name: "is_dir", scope: !1166, file: !240, line: 559, type: !131)
!1193 = !DILocation(line: 559, column: 14, scope: !1166)
!1194 = !DILocation(line: 559, column: 23, scope: !1166)
!1195 = !DILocation(line: 559, column: 28, scope: !1166)
!1196 = !DILocation(line: 559, column: 37, scope: !1166)
!1197 = !DILocation(line: 559, column: 47, scope: !1166)
!1198 = !DILocation(line: 559, column: 50, scope: !1166)
!1199 = !DILocation(line: 559, column: 55, scope: !1166)
!1200 = !DILocation(line: 559, column: 64, scope: !1166)
!1201 = !DILocalVariable(name: "s", scope: !1166, file: !240, line: 560, type: !16)
!1202 = !DILocation(line: 560, column: 24, scope: !1166)
!1203 = !DILocation(line: 560, column: 36, scope: !1166)
!1204 = !DILocation(line: 560, column: 41, scope: !1166)
!1205 = !DILocation(line: 560, column: 46, scope: !1166)
!1206 = !DILocation(line: 560, column: 54, scope: !1166)
!1207 = !DILocation(line: 560, column: 28, scope: !1166)
!1208 = !DILocation(line: 561, column: 13, scope: !1209)
!1209 = distinct !DILexicalBlock(scope: !1166, file: !240, line: 561, column: 13)
!1210 = !DILocation(line: 561, column: 15, scope: !1209)
!1211 = !DILocation(line: 561, column: 13, scope: !1166)
!1212 = !DILocation(line: 562, column: 18, scope: !1209)
!1213 = !DILocation(line: 562, column: 11, scope: !1209)
!1214 = !DILocation(line: 563, column: 24, scope: !1166)
!1215 = !DILocation(line: 563, column: 29, scope: !1166)
!1216 = !DILocation(line: 563, column: 34, scope: !1166)
!1217 = !DILocation(line: 563, column: 37, scope: !1166)
!1218 = !DILocation(line: 563, column: 16, scope: !1166)
!1219 = !DILocation(line: 563, column: 9, scope: !1166)
!1220 = !DILocation(line: 567, column: 7, scope: !1063)
!1221 = distinct !{!1221, !1220, !1220}
!1222 = !DILocation(line: 567, column: 7, scope: !1223)
!1223 = distinct !DILexicalBlock(scope: !1063, file: !240, line: 567, column: 7)
!1224 = !DILocation(line: 568, column: 22, scope: !1063)
!1225 = !DILocation(line: 568, column: 27, scope: !1063)
!1226 = !DILocation(line: 568, column: 7, scope: !1063)
!1227 = !DILocation(line: 569, column: 7, scope: !1063)
!1228 = !DILocation(line: 574, column: 17, scope: !1063)
!1229 = !DILocation(line: 574, column: 22, scope: !1063)
!1230 = !DILocation(line: 575, column: 21, scope: !1063)
!1231 = !DILocation(line: 575, column: 26, scope: !1063)
!1232 = !DILocation(line: 575, column: 14, scope: !1063)
!1233 = !DILocation(line: 574, column: 7, scope: !1063)
!1234 = !DILocation(line: 576, column: 22, scope: !1063)
!1235 = !DILocation(line: 576, column: 27, scope: !1063)
!1236 = !DILocation(line: 576, column: 7, scope: !1063)
!1237 = !DILocation(line: 577, column: 7, scope: !1063)
!1238 = !DILocation(line: 582, column: 14, scope: !1063)
!1239 = !DILocation(line: 582, column: 19, scope: !1063)
!1240 = !DILocation(line: 583, column: 21, scope: !1063)
!1241 = !DILocation(line: 583, column: 26, scope: !1063)
!1242 = !DILocation(line: 583, column: 14, scope: !1063)
!1243 = !DILocation(line: 580, column: 7, scope: !1063)
!1244 = !DILocation(line: 585, column: 7, scope: !1063)
!1245 = !DILocation(line: 587, column: 1, scope: !1049)
!1246 = distinct !DISubprogram(name: "mark_ancestor_dirs", scope: !240, file: !240, line: 411, type: !1247, isLocal: true, isDefinition: true, scopeLine: 412, flags: DIFlagPrototyped, isOptimized: false, unit: !239, variables: !48)
!1247 = !DISubroutineType(types: !1248)
!1248 = !{null, !997}
!1249 = !DILocalVariable(name: "ent", arg: 1, scope: !1246, file: !240, line: 411, type: !997)
!1250 = !DILocation(line: 411, column: 29, scope: !1246)
!1251 = !DILocalVariable(name: "p", scope: !1246, file: !240, line: 413, type: !997)
!1252 = !DILocation(line: 413, column: 11, scope: !1246)
!1253 = !DILocation(line: 414, column: 12, scope: !1254)
!1254 = distinct !DILexicalBlock(scope: !1246, file: !240, line: 414, column: 3)
!1255 = !DILocation(line: 414, column: 17, scope: !1254)
!1256 = !DILocation(line: 414, column: 10, scope: !1254)
!1257 = !DILocation(line: 414, column: 8, scope: !1254)
!1258 = !DILocation(line: 414, column: 46, scope: !1259)
!1259 = distinct !DILexicalBlock(scope: !1254, file: !240, line: 414, column: 3)
!1260 = !DILocation(line: 414, column: 49, scope: !1259)
!1261 = !DILocation(line: 414, column: 43, scope: !1259)
!1262 = !DILocation(line: 414, column: 3, scope: !1254)
!1263 = !DILocation(line: 416, column: 11, scope: !1264)
!1264 = distinct !DILexicalBlock(scope: !1265, file: !240, line: 416, column: 11)
!1265 = distinct !DILexicalBlock(scope: !1259, file: !240, line: 415, column: 5)
!1266 = !DILocation(line: 416, column: 14, scope: !1264)
!1267 = !DILocation(line: 416, column: 11, scope: !1265)
!1268 = !DILocation(line: 417, column: 9, scope: !1264)
!1269 = !DILocation(line: 418, column: 7, scope: !1265)
!1270 = !DILocation(line: 418, column: 10, scope: !1265)
!1271 = !DILocation(line: 418, column: 21, scope: !1265)
!1272 = !DILocation(line: 419, column: 5, scope: !1265)
!1273 = !DILocation(line: 414, column: 64, scope: !1259)
!1274 = !DILocation(line: 414, column: 67, scope: !1259)
!1275 = !DILocation(line: 414, column: 62, scope: !1259)
!1276 = !DILocation(line: 414, column: 3, scope: !1259)
!1277 = distinct !{!1277, !1262, !1278}
!1278 = !DILocation(line: 419, column: 5, scope: !1254)
!1279 = !DILocation(line: 420, column: 1, scope: !1246)
!1280 = distinct !DISubprogram(name: "fts_skip_tree", scope: !240, file: !240, line: 400, type: !1281, isLocal: true, isDefinition: true, scopeLine: 401, flags: DIFlagPrototyped, isOptimized: false, unit: !239, variables: !48)
!1281 = !DISubroutineType(types: !1282)
!1282 = !{null, !900, !997}
!1283 = !DILocalVariable(name: "fts", arg: 1, scope: !1280, file: !240, line: 400, type: !900)
!1284 = !DILocation(line: 400, column: 21, scope: !1280)
!1285 = !DILocalVariable(name: "ent", arg: 2, scope: !1280, file: !240, line: 400, type: !997)
!1286 = !DILocation(line: 400, column: 34, scope: !1280)
!1287 = !DILocation(line: 402, column: 12, scope: !1280)
!1288 = !DILocation(line: 402, column: 17, scope: !1280)
!1289 = !DILocation(line: 402, column: 3, scope: !1280)
!1290 = !DILocation(line: 404, column: 19, scope: !1280)
!1291 = !DILocation(line: 404, column: 9, scope: !1280)
!1292 = !DILocation(line: 404, column: 7, scope: !1280)
!1293 = !DILocation(line: 405, column: 1, scope: !1280)
!1294 = distinct !DISubprogram(name: "dot_or_dotdot", scope: !527, file: !527, line: 305, type: !1295, isLocal: true, isDefinition: true, scopeLine: 306, flags: DIFlagPrototyped, isOptimized: false, unit: !239, variables: !48)
!1295 = !DISubroutineType(types: !1296)
!1296 = !{!131, !35}
!1297 = !DILocalVariable(name: "file_name", arg: 1, scope: !1294, file: !527, line: 305, type: !35)
!1298 = !DILocation(line: 305, column: 28, scope: !1294)
!1299 = !DILocation(line: 307, column: 7, scope: !1300)
!1300 = distinct !DILexicalBlock(scope: !1294, file: !527, line: 307, column: 7)
!1301 = !DILocation(line: 307, column: 20, scope: !1300)
!1302 = !DILocation(line: 307, column: 7, scope: !1294)
!1303 = !DILocalVariable(name: "sep", scope: !1304, file: !527, line: 309, type: !37)
!1304 = distinct !DILexicalBlock(scope: !1300, file: !527, line: 308, column: 5)
!1305 = !DILocation(line: 309, column: 12, scope: !1304)
!1306 = !DILocation(line: 309, column: 18, scope: !1304)
!1307 = !DILocation(line: 309, column: 29, scope: !1304)
!1308 = !DILocation(line: 309, column: 42, scope: !1304)
!1309 = !DILocation(line: 309, column: 50, scope: !1304)
!1310 = !DILocation(line: 310, column: 17, scope: !1304)
!1311 = !DILocation(line: 310, column: 21, scope: !1304)
!1312 = !DILocation(line: 310, column: 24, scope: !1304)
!1313 = !DILocation(line: 310, column: 7, scope: !1304)
!1314 = !DILocation(line: 313, column: 5, scope: !1300)
!1315 = !DILocation(line: 314, column: 1, scope: !1294)
!1316 = distinct !DISubprogram(name: "prompt", scope: !240, file: !240, line: 214, type: !1317, isLocal: true, isDefinition: true, scopeLine: 217, flags: DIFlagPrototyped, isOptimized: false, unit: !239, variables: !48)
!1317 = !DISubroutineType(types: !1318)
!1318 = !{!16, !1319, !1321, !131, !863, !247, !1323}
!1319 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1320, size: 64)
!1320 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !901)
!1321 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1322, size: 64)
!1322 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !998)
!1323 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1126, size: 64)
!1324 = !DILocalVariable(name: "fts", arg: 1, scope: !1316, file: !240, line: 214, type: !1319)
!1325 = !DILocation(line: 214, column: 20, scope: !1316)
!1326 = !DILocalVariable(name: "ent", arg: 2, scope: !1316, file: !240, line: 214, type: !1321)
!1327 = !DILocation(line: 214, column: 39, scope: !1316)
!1328 = !DILocalVariable(name: "is_dir", arg: 3, scope: !1316, file: !240, line: 214, type: !131)
!1329 = !DILocation(line: 214, column: 49, scope: !1316)
!1330 = !DILocalVariable(name: "x", arg: 4, scope: !1316, file: !240, line: 215, type: !863)
!1331 = !DILocation(line: 215, column: 34, scope: !1316)
!1332 = !DILocalVariable(name: "mode", arg: 5, scope: !1316, file: !240, line: 215, type: !247)
!1333 = !DILocation(line: 215, column: 56, scope: !1316)
!1334 = !DILocalVariable(name: "is_empty_p", arg: 6, scope: !1316, file: !240, line: 216, type: !1323)
!1335 = !DILocation(line: 216, column: 18, scope: !1316)
!1336 = !DILocalVariable(name: "fd_cwd", scope: !1316, file: !240, line: 218, type: !46)
!1337 = !DILocation(line: 218, column: 7, scope: !1316)
!1338 = !DILocation(line: 218, column: 16, scope: !1316)
!1339 = !DILocation(line: 218, column: 21, scope: !1316)
!1340 = !DILocalVariable(name: "full_name", scope: !1316, file: !240, line: 219, type: !35)
!1341 = !DILocation(line: 219, column: 15, scope: !1316)
!1342 = !DILocation(line: 219, column: 27, scope: !1316)
!1343 = !DILocation(line: 219, column: 32, scope: !1316)
!1344 = !DILocalVariable(name: "filename", scope: !1316, file: !240, line: 220, type: !35)
!1345 = !DILocation(line: 220, column: 15, scope: !1316)
!1346 = !DILocation(line: 220, column: 26, scope: !1316)
!1347 = !DILocation(line: 220, column: 31, scope: !1316)
!1348 = !DILocation(line: 221, column: 7, scope: !1349)
!1349 = distinct !DILexicalBlock(scope: !1316, file: !240, line: 221, column: 7)
!1350 = !DILocation(line: 221, column: 7, scope: !1316)
!1351 = !DILocation(line: 222, column: 6, scope: !1349)
!1352 = !DILocation(line: 222, column: 17, scope: !1349)
!1353 = !DILocation(line: 222, column: 5, scope: !1349)
!1354 = !DILocalVariable(name: "st", scope: !1316, file: !240, line: 224, type: !930)
!1355 = !DILocation(line: 224, column: 15, scope: !1316)
!1356 = !DILocalVariable(name: "sbuf", scope: !1316, file: !240, line: 225, type: !1357)
!1357 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !930, size: 64)
!1358 = !DILocation(line: 225, column: 16, scope: !1316)
!1359 = !DILocation(line: 226, column: 20, scope: !1316)
!1360 = !DILocation(line: 226, column: 3, scope: !1316)
!1361 = !DILocalVariable(name: "dirent_type", scope: !1316, file: !240, line: 228, type: !46)
!1362 = !DILocation(line: 228, column: 7, scope: !1316)
!1363 = !DILocation(line: 228, column: 21, scope: !1316)
!1364 = !DILocalVariable(name: "write_protected", scope: !1316, file: !240, line: 229, type: !46)
!1365 = !DILocation(line: 229, column: 7, scope: !1316)
!1366 = !DILocation(line: 234, column: 7, scope: !1367)
!1367 = distinct !DILexicalBlock(scope: !1316, file: !240, line: 234, column: 7)
!1368 = !DILocation(line: 234, column: 12, scope: !1367)
!1369 = !DILocation(line: 234, column: 7, scope: !1316)
!1370 = !DILocation(line: 235, column: 5, scope: !1367)
!1371 = !DILocation(line: 237, column: 7, scope: !1372)
!1372 = distinct !DILexicalBlock(scope: !1316, file: !240, line: 237, column: 7)
!1373 = !DILocation(line: 237, column: 10, scope: !1372)
!1374 = !DILocation(line: 237, column: 22, scope: !1372)
!1375 = !DILocation(line: 237, column: 7, scope: !1316)
!1376 = !DILocation(line: 238, column: 5, scope: !1372)
!1377 = !DILocalVariable(name: "wp_errno", scope: !1316, file: !240, line: 240, type: !46)
!1378 = !DILocation(line: 240, column: 7, scope: !1316)
!1379 = !DILocation(line: 241, column: 8, scope: !1380)
!1380 = distinct !DILexicalBlock(scope: !1316, file: !240, line: 241, column: 7)
!1381 = !DILocation(line: 241, column: 11, scope: !1380)
!1382 = !DILocation(line: 242, column: 7, scope: !1380)
!1383 = !DILocation(line: 242, column: 12, scope: !1380)
!1384 = !DILocation(line: 242, column: 15, scope: !1380)
!1385 = !DILocation(line: 242, column: 27, scope: !1380)
!1386 = !DILocation(line: 242, column: 42, scope: !1380)
!1387 = !DILocation(line: 242, column: 45, scope: !1380)
!1388 = !DILocation(line: 242, column: 48, scope: !1380)
!1389 = !DILocation(line: 243, column: 7, scope: !1380)
!1390 = !DILocation(line: 243, column: 10, scope: !1380)
!1391 = !DILocation(line: 243, column: 22, scope: !1380)
!1392 = !DILocation(line: 241, column: 7, scope: !1316)
!1393 = !DILocation(line: 245, column: 54, scope: !1394)
!1394 = distinct !DILexicalBlock(scope: !1380, file: !240, line: 244, column: 5)
!1395 = !DILocation(line: 245, column: 62, scope: !1394)
!1396 = !DILocation(line: 246, column: 54, scope: !1394)
!1397 = !DILocation(line: 246, column: 65, scope: !1394)
!1398 = !DILocation(line: 245, column: 25, scope: !1394)
!1399 = !DILocation(line: 245, column: 23, scope: !1394)
!1400 = !DILocation(line: 247, column: 18, scope: !1394)
!1401 = !DILocation(line: 247, column: 16, scope: !1394)
!1402 = !DILocation(line: 248, column: 5, scope: !1394)
!1403 = !DILocation(line: 250, column: 7, scope: !1404)
!1404 = distinct !DILexicalBlock(scope: !1316, file: !240, line: 250, column: 7)
!1405 = !DILocation(line: 250, column: 23, scope: !1404)
!1406 = !DILocation(line: 250, column: 26, scope: !1404)
!1407 = !DILocation(line: 250, column: 29, scope: !1404)
!1408 = !DILocation(line: 250, column: 41, scope: !1404)
!1409 = !DILocation(line: 250, column: 7, scope: !1316)
!1410 = !DILocation(line: 252, column: 16, scope: !1411)
!1411 = distinct !DILexicalBlock(scope: !1412, file: !240, line: 252, column: 11)
!1412 = distinct !DILexicalBlock(scope: !1404, file: !240, line: 251, column: 5)
!1413 = !DILocation(line: 252, column: 13, scope: !1411)
!1414 = !DILocation(line: 252, column: 32, scope: !1411)
!1415 = !DILocation(line: 252, column: 35, scope: !1411)
!1416 = !DILocation(line: 252, column: 47, scope: !1411)
!1417 = !DILocation(line: 252, column: 11, scope: !1412)
!1418 = !DILocation(line: 254, column: 30, scope: !1419)
!1419 = distinct !DILexicalBlock(scope: !1420, file: !240, line: 254, column: 15)
!1420 = distinct !DILexicalBlock(scope: !1411, file: !240, line: 253, column: 9)
!1421 = !DILocation(line: 254, column: 38, scope: !1419)
!1422 = !DILocation(line: 254, column: 48, scope: !1419)
!1423 = !DILocation(line: 254, column: 15, scope: !1419)
!1424 = !DILocation(line: 254, column: 75, scope: !1419)
!1425 = !DILocation(line: 254, column: 15, scope: !1420)
!1426 = !DILocation(line: 256, column: 19, scope: !1427)
!1427 = distinct !DILexicalBlock(scope: !1428, file: !240, line: 256, column: 19)
!1428 = distinct !DILexicalBlock(scope: !1419, file: !240, line: 255, column: 13)
!1429 = !DILocation(line: 256, column: 19, scope: !1428)
!1430 = !DILocation(line: 257, column: 29, scope: !1427)
!1431 = !DILocation(line: 257, column: 17, scope: !1427)
!1432 = !DILocation(line: 258, column: 24, scope: !1433)
!1433 = distinct !DILexicalBlock(scope: !1427, file: !240, line: 258, column: 24)
!1434 = !DILocation(line: 258, column: 24, scope: !1427)
!1435 = !DILocation(line: 259, column: 29, scope: !1433)
!1436 = !DILocation(line: 259, column: 17, scope: !1433)
!1437 = !DILocation(line: 261, column: 13, scope: !1428)
!1438 = !DILocation(line: 265, column: 31, scope: !1439)
!1439 = distinct !DILexicalBlock(scope: !1419, file: !240, line: 263, column: 13)
!1440 = !DILocation(line: 266, column: 26, scope: !1439)
!1441 = !DILocation(line: 266, column: 24, scope: !1439)
!1442 = !DILocation(line: 268, column: 9, scope: !1420)
!1443 = !DILocation(line: 270, column: 16, scope: !1444)
!1444 = distinct !DILexicalBlock(scope: !1412, file: !240, line: 270, column: 11)
!1445 = !DILocation(line: 270, column: 13, scope: !1444)
!1446 = !DILocation(line: 270, column: 11, scope: !1412)
!1447 = !DILocation(line: 271, column: 17, scope: !1444)
!1448 = !DILocation(line: 271, column: 9, scope: !1444)
!1449 = !DILocation(line: 275, column: 17, scope: !1450)
!1450 = distinct !DILexicalBlock(scope: !1451, file: !240, line: 275, column: 17)
!1451 = distinct !DILexicalBlock(scope: !1444, file: !240, line: 272, column: 11)
!1452 = !DILocation(line: 275, column: 20, scope: !1450)
!1453 = !DILocation(line: 275, column: 32, scope: !1450)
!1454 = !DILocation(line: 275, column: 17, scope: !1451)
!1455 = !DILocation(line: 276, column: 15, scope: !1450)
!1456 = !DILocation(line: 277, column: 13, scope: !1451)
!1457 = !DILocation(line: 280, column: 18, scope: !1458)
!1458 = distinct !DILexicalBlock(scope: !1451, file: !240, line: 280, column: 17)
!1459 = !DILocation(line: 280, column: 21, scope: !1458)
!1460 = !DILocation(line: 280, column: 17, scope: !1451)
!1461 = !DILocation(line: 282, column: 33, scope: !1462)
!1462 = distinct !DILexicalBlock(scope: !1458, file: !240, line: 281, column: 15)
!1463 = !DILocation(line: 283, column: 26, scope: !1462)
!1464 = !DILocation(line: 284, column: 15, scope: !1462)
!1465 = !DILocation(line: 285, column: 13, scope: !1451)
!1466 = !DILocation(line: 286, column: 11, scope: !1451)
!1467 = !DILocalVariable(name: "quoted_name", scope: !1412, file: !240, line: 288, type: !35)
!1468 = !DILocation(line: 288, column: 19, scope: !1412)
!1469 = !DILocation(line: 288, column: 40, scope: !1412)
!1470 = !DILocation(line: 288, column: 33, scope: !1412)
!1471 = !DILocation(line: 290, column: 11, scope: !1472)
!1472 = distinct !DILexicalBlock(scope: !1412, file: !240, line: 290, column: 11)
!1473 = !DILocation(line: 290, column: 27, scope: !1472)
!1474 = !DILocation(line: 290, column: 11, scope: !1412)
!1475 = !DILocation(line: 292, column: 21, scope: !1476)
!1476 = distinct !DILexicalBlock(scope: !1472, file: !240, line: 291, column: 9)
!1477 = !DILocation(line: 292, column: 54, scope: !1476)
!1478 = !DILocation(line: 292, column: 11, scope: !1476)
!1479 = !DILocation(line: 293, column: 11, scope: !1476)
!1480 = !DILocalVariable(name: "is_empty", scope: !1412, file: !240, line: 296, type: !131)
!1481 = !DILocation(line: 296, column: 12, scope: !1412)
!1482 = !DILocation(line: 297, column: 11, scope: !1483)
!1483 = distinct !DILexicalBlock(scope: !1412, file: !240, line: 297, column: 11)
!1484 = !DILocation(line: 297, column: 11, scope: !1412)
!1485 = !DILocation(line: 299, column: 36, scope: !1486)
!1486 = distinct !DILexicalBlock(scope: !1483, file: !240, line: 298, column: 9)
!1487 = !DILocation(line: 299, column: 44, scope: !1486)
!1488 = !DILocation(line: 299, column: 22, scope: !1486)
!1489 = !DILocation(line: 299, column: 20, scope: !1486)
!1490 = !DILocation(line: 300, column: 25, scope: !1486)
!1491 = !DILocation(line: 300, column: 12, scope: !1486)
!1492 = !DILocation(line: 300, column: 23, scope: !1486)
!1493 = !DILocation(line: 301, column: 9, scope: !1486)
!1494 = !DILocation(line: 303, column: 18, scope: !1483)
!1495 = !DILocation(line: 306, column: 11, scope: !1496)
!1496 = distinct !DILexicalBlock(scope: !1412, file: !240, line: 306, column: 11)
!1497 = !DILocation(line: 306, column: 23, scope: !1496)
!1498 = !DILocation(line: 307, column: 11, scope: !1496)
!1499 = !DILocation(line: 307, column: 14, scope: !1496)
!1500 = !DILocation(line: 307, column: 19, scope: !1496)
!1501 = !DILocation(line: 308, column: 11, scope: !1496)
!1502 = !DILocation(line: 308, column: 15, scope: !1496)
!1503 = !DILocation(line: 306, column: 11, scope: !1412)
!1504 = !DILocation(line: 309, column: 18, scope: !1496)
!1505 = !DILocation(line: 310, column: 19, scope: !1496)
!1506 = !DILocation(line: 313, column: 18, scope: !1496)
!1507 = !DILocation(line: 313, column: 32, scope: !1496)
!1508 = !DILocation(line: 309, column: 9, scope: !1496)
!1509 = !DILocation(line: 316, column: 30, scope: !1510)
!1510 = distinct !DILexicalBlock(scope: !1511, file: !240, line: 316, column: 15)
!1511 = distinct !DILexicalBlock(scope: !1496, file: !240, line: 315, column: 9)
!1512 = !DILocation(line: 316, column: 38, scope: !1510)
!1513 = !DILocation(line: 316, column: 48, scope: !1510)
!1514 = !DILocation(line: 316, column: 15, scope: !1510)
!1515 = !DILocation(line: 316, column: 75, scope: !1510)
!1516 = !DILocation(line: 316, column: 15, scope: !1511)
!1517 = !DILocation(line: 318, column: 25, scope: !1518)
!1518 = distinct !DILexicalBlock(scope: !1510, file: !240, line: 317, column: 13)
!1519 = !DILocation(line: 318, column: 55, scope: !1518)
!1520 = !DILocation(line: 318, column: 15, scope: !1518)
!1521 = !DILocation(line: 319, column: 15, scope: !1518)
!1522 = !DILocation(line: 322, column: 20, scope: !1511)
!1523 = !DILocation(line: 323, column: 21, scope: !1511)
!1524 = !DILocation(line: 330, column: 20, scope: !1511)
!1525 = !DILocation(line: 330, column: 45, scope: !1511)
!1526 = !DILocation(line: 330, column: 34, scope: !1511)
!1527 = !DILocation(line: 330, column: 52, scope: !1511)
!1528 = !DILocation(line: 322, column: 11, scope: !1511)
!1529 = !DILocation(line: 333, column: 12, scope: !1530)
!1530 = distinct !DILexicalBlock(scope: !1412, file: !240, line: 333, column: 11)
!1531 = !DILocation(line: 333, column: 11, scope: !1412)
!1532 = !DILocation(line: 334, column: 9, scope: !1530)
!1533 = !DILocation(line: 335, column: 5, scope: !1412)
!1534 = !DILocation(line: 336, column: 3, scope: !1316)
!1535 = !DILocation(line: 337, column: 1, scope: !1316)
!1536 = distinct !DISubprogram(name: "excise", scope: !240, file: !240, line: 426, type: !1537, isLocal: true, isDefinition: true, scopeLine: 427, flags: DIFlagPrototyped, isOptimized: false, unit: !239, variables: !48)
!1537 = !DISubroutineType(types: !1538)
!1538 = !{!16, !900, !997, !863, !131}
!1539 = !DILocalVariable(name: "fts", arg: 1, scope: !1536, file: !240, line: 426, type: !900)
!1540 = !DILocation(line: 426, column: 14, scope: !1536)
!1541 = !DILocalVariable(name: "ent", arg: 2, scope: !1536, file: !240, line: 426, type: !997)
!1542 = !DILocation(line: 426, column: 27, scope: !1536)
!1543 = !DILocalVariable(name: "x", arg: 3, scope: !1536, file: !240, line: 426, type: !863)
!1544 = !DILocation(line: 426, column: 57, scope: !1536)
!1545 = !DILocalVariable(name: "is_dir", arg: 4, scope: !1536, file: !240, line: 426, type: !131)
!1546 = !DILocation(line: 426, column: 65, scope: !1536)
!1547 = !DILocalVariable(name: "flag", scope: !1536, file: !240, line: 428, type: !46)
!1548 = !DILocation(line: 428, column: 7, scope: !1536)
!1549 = !DILocation(line: 428, column: 14, scope: !1536)
!1550 = !DILocation(line: 429, column: 17, scope: !1551)
!1551 = distinct !DILexicalBlock(scope: !1536, file: !240, line: 429, column: 7)
!1552 = !DILocation(line: 429, column: 22, scope: !1551)
!1553 = !DILocation(line: 429, column: 34, scope: !1551)
!1554 = !DILocation(line: 429, column: 39, scope: !1551)
!1555 = !DILocation(line: 429, column: 52, scope: !1551)
!1556 = !DILocation(line: 429, column: 7, scope: !1551)
!1557 = !DILocation(line: 429, column: 58, scope: !1551)
!1558 = !DILocation(line: 429, column: 7, scope: !1536)
!1559 = !DILocation(line: 431, column: 11, scope: !1560)
!1560 = distinct !DILexicalBlock(scope: !1561, file: !240, line: 431, column: 11)
!1561 = distinct !DILexicalBlock(scope: !1551, file: !240, line: 430, column: 5)
!1562 = !DILocation(line: 431, column: 14, scope: !1560)
!1563 = !DILocation(line: 431, column: 11, scope: !1561)
!1564 = !DILocation(line: 433, column: 20, scope: !1565)
!1565 = distinct !DILexicalBlock(scope: !1560, file: !240, line: 432, column: 9)
!1566 = !DILocation(line: 435, column: 49, scope: !1565)
!1567 = !DILocation(line: 435, column: 54, scope: !1565)
!1568 = !DILocation(line: 435, column: 42, scope: !1565)
!1569 = !DILocation(line: 433, column: 11, scope: !1565)
!1570 = !DILocation(line: 436, column: 9, scope: !1565)
!1571 = !DILocation(line: 437, column: 7, scope: !1561)
!1572 = !DILocation(line: 444, column: 7, scope: !1573)
!1573 = distinct !DILexicalBlock(scope: !1536, file: !240, line: 444, column: 7)
!1574 = !DILocation(line: 444, column: 13, scope: !1573)
!1575 = !DILocation(line: 444, column: 7, scope: !1536)
!1576 = !DILocalVariable(name: "st", scope: !1577, file: !240, line: 446, type: !930)
!1577 = distinct !DILexicalBlock(scope: !1573, file: !240, line: 445, column: 5)
!1578 = !DILocation(line: 446, column: 19, scope: !1577)
!1579 = !DILocation(line: 447, column: 24, scope: !1580)
!1580 = distinct !DILexicalBlock(scope: !1577, file: !240, line: 447, column: 12)
!1581 = !DILocation(line: 447, column: 29, scope: !1580)
!1582 = !DILocation(line: 447, column: 41, scope: !1580)
!1583 = !DILocation(line: 447, column: 46, scope: !1580)
!1584 = !DILocation(line: 447, column: 15, scope: !1580)
!1585 = !DILocation(line: 448, column: 24, scope: !1580)
!1586 = !DILocation(line: 448, column: 27, scope: !1580)
!1587 = !DILocation(line: 448, column: 33, scope: !1580)
!1588 = !DILocation(line: 447, column: 12, scope: !1577)
!1589 = !DILocation(line: 449, column: 9, scope: !1580)
!1590 = !DILocation(line: 449, column: 15, scope: !1580)
!1591 = !DILocation(line: 450, column: 5, scope: !1577)
!1592 = !DILocation(line: 452, column: 26, scope: !1593)
!1593 = distinct !DILexicalBlock(scope: !1536, file: !240, line: 452, column: 7)
!1594 = !DILocation(line: 452, column: 29, scope: !1593)
!1595 = !DILocation(line: 452, column: 7, scope: !1593)
!1596 = !DILocation(line: 452, column: 7, scope: !1536)
!1597 = !DILocation(line: 453, column: 5, scope: !1593)
!1598 = !DILocation(line: 459, column: 7, scope: !1599)
!1599 = distinct !DILexicalBlock(scope: !1536, file: !240, line: 459, column: 7)
!1600 = !DILocation(line: 459, column: 12, scope: !1599)
!1601 = !DILocation(line: 459, column: 21, scope: !1599)
!1602 = !DILocation(line: 459, column: 7, scope: !1536)
!1603 = !DILocation(line: 460, column: 13, scope: !1599)
!1604 = !DILocation(line: 460, column: 18, scope: !1599)
!1605 = !DILocation(line: 460, column: 5, scope: !1599)
!1606 = !DILocation(line: 460, column: 11, scope: !1599)
!1607 = !DILocation(line: 461, column: 13, scope: !1536)
!1608 = !DILocation(line: 461, column: 50, scope: !1536)
!1609 = !DILocation(line: 461, column: 55, scope: !1536)
!1610 = !DILocation(line: 461, column: 43, scope: !1536)
!1611 = !DILocation(line: 461, column: 3, scope: !1536)
!1612 = !DILocation(line: 462, column: 23, scope: !1536)
!1613 = !DILocation(line: 462, column: 3, scope: !1536)
!1614 = !DILocation(line: 463, column: 3, scope: !1536)
!1615 = !DILocation(line: 464, column: 1, scope: !1536)
!1616 = distinct !DISubprogram(name: "lstatat", scope: !1617, file: !1617, line: 91, type: !1618, isLocal: true, isDefinition: true, scopeLine: 92, flags: DIFlagPrototyped, isOptimized: false, unit: !239, variables: !48)
!1617 = !DIFile(filename: "../../lib/openat.h", directory: "/home/ma481/Downloads/Chisel/chisel-bench/benchmark/rm-8.4/original/obj-llvm/src")
!1618 = !DISubroutineType(types: !1619)
!1619 = !{!46, !46, !35, !1357}
!1620 = !DILocalVariable(name: "fd", arg: 1, scope: !1616, file: !1617, line: 91, type: !46)
!1621 = !DILocation(line: 91, column: 14, scope: !1616)
!1622 = !DILocalVariable(name: "name", arg: 2, scope: !1616, file: !1617, line: 91, type: !35)
!1623 = !DILocation(line: 91, column: 30, scope: !1616)
!1624 = !DILocalVariable(name: "st", arg: 3, scope: !1616, file: !1617, line: 91, type: !1357)
!1625 = !DILocation(line: 91, column: 49, scope: !1616)
!1626 = !DILocation(line: 93, column: 19, scope: !1616)
!1627 = !DILocation(line: 93, column: 23, scope: !1616)
!1628 = !DILocation(line: 93, column: 29, scope: !1616)
!1629 = !DILocation(line: 93, column: 10, scope: !1616)
!1630 = !DILocation(line: 93, column: 3, scope: !1616)
!1631 = distinct !DISubprogram(name: "ignorable_missing", scope: !240, file: !240, line: 393, type: !1632, isLocal: true, isDefinition: true, scopeLine: 394, flags: DIFlagPrototyped, isOptimized: false, unit: !239, variables: !48)
!1632 = !DISubroutineType(types: !1633)
!1633 = !{!131, !863, !46}
!1634 = !DILocalVariable(name: "x", arg: 1, scope: !1631, file: !240, line: 393, type: !863)
!1635 = !DILocation(line: 393, column: 45, scope: !1631)
!1636 = !DILocalVariable(name: "errnum", arg: 2, scope: !1631, file: !240, line: 393, type: !46)
!1637 = !DILocation(line: 393, column: 52, scope: !1631)
!1638 = !DILocation(line: 395, column: 10, scope: !1631)
!1639 = !DILocation(line: 395, column: 13, scope: !1631)
!1640 = !DILocation(line: 395, column: 34, scope: !1631)
!1641 = !DILocation(line: 395, column: 61, scope: !1631)
!1642 = !DILocation(line: 395, column: 37, scope: !1631)
!1643 = !DILocation(line: 395, column: 3, scope: !1631)
!1644 = distinct !DISubprogram(name: "nonexistent_file_errno", scope: !240, file: !240, line: 373, type: !1645, isLocal: true, isDefinition: true, scopeLine: 374, flags: DIFlagPrototyped, isOptimized: false, unit: !239, variables: !48)
!1645 = !DISubroutineType(types: !1646)
!1646 = !{!131, !46}
!1647 = !DILocalVariable(name: "errnum", arg: 1, scope: !1644, file: !240, line: 373, type: !46)
!1648 = !DILocation(line: 373, column: 29, scope: !1644)
!1649 = !DILocation(line: 381, column: 11, scope: !1644)
!1650 = !DILocation(line: 381, column: 3, scope: !1644)
!1651 = !DILocation(line: 385, column: 7, scope: !1652)
!1652 = distinct !DILexicalBlock(scope: !1644, file: !240, line: 382, column: 5)
!1653 = !DILocation(line: 387, column: 7, scope: !1652)
!1654 = !DILocation(line: 389, column: 1, scope: !1644)
!1655 = distinct !DISubprogram(name: "cache_stat_init", scope: !240, file: !240, line: 88, type: !1656, isLocal: true, isDefinition: true, scopeLine: 89, flags: DIFlagPrototyped, isOptimized: false, unit: !239, variables: !48)
!1656 = !DISubroutineType(types: !1657)
!1657 = !{!1357, !1357}
!1658 = !DILocalVariable(name: "st", arg: 1, scope: !1655, file: !240, line: 88, type: !1357)
!1659 = !DILocation(line: 88, column: 31, scope: !1655)
!1660 = !DILocation(line: 90, column: 3, scope: !1655)
!1661 = !DILocation(line: 90, column: 7, scope: !1655)
!1662 = !DILocation(line: 90, column: 15, scope: !1655)
!1663 = !DILocation(line: 91, column: 10, scope: !1655)
!1664 = !DILocation(line: 91, column: 3, scope: !1655)
!1665 = distinct !DISubprogram(name: "write_protected_non_symlink", scope: !240, file: !240, line: 115, type: !1666, isLocal: true, isDefinition: true, scopeLine: 119, flags: DIFlagPrototyped, isOptimized: false, unit: !239, variables: !48)
!1666 = !DISubroutineType(types: !1667)
!1667 = !{!46, !46, !35, !35, !1357}
!1668 = !DILocalVariable(name: "fd_cwd", arg: 1, scope: !1665, file: !240, line: 115, type: !46)
!1669 = !DILocation(line: 115, column: 34, scope: !1665)
!1670 = !DILocalVariable(name: "file", arg: 2, scope: !1665, file: !240, line: 116, type: !35)
!1671 = !DILocation(line: 116, column: 42, scope: !1665)
!1672 = !DILocalVariable(name: "full_name", arg: 3, scope: !1665, file: !240, line: 117, type: !35)
!1673 = !DILocation(line: 117, column: 42, scope: !1665)
!1674 = !DILocalVariable(name: "buf", arg: 4, scope: !1665, file: !240, line: 118, type: !1357)
!1675 = !DILocation(line: 118, column: 43, scope: !1665)
!1676 = !DILocation(line: 120, column: 7, scope: !1677)
!1677 = distinct !DILexicalBlock(scope: !1665, file: !240, line: 120, column: 7)
!1678 = !DILocation(line: 120, column: 7, scope: !1665)
!1679 = !DILocation(line: 121, column: 5, scope: !1677)
!1680 = !DILocation(line: 122, column: 22, scope: !1681)
!1681 = distinct !DILexicalBlock(scope: !1665, file: !240, line: 122, column: 7)
!1682 = !DILocation(line: 122, column: 30, scope: !1681)
!1683 = !DILocation(line: 122, column: 36, scope: !1681)
!1684 = !DILocation(line: 122, column: 7, scope: !1681)
!1685 = !DILocation(line: 122, column: 62, scope: !1681)
!1686 = !DILocation(line: 122, column: 7, scope: !1665)
!1687 = !DILocation(line: 123, column: 5, scope: !1681)
!1688 = !DILocation(line: 124, column: 7, scope: !1689)
!1689 = distinct !DILexicalBlock(scope: !1665, file: !240, line: 124, column: 7)
!1690 = !DILocation(line: 124, column: 7, scope: !1665)
!1691 = !DILocation(line: 125, column: 5, scope: !1689)
!1692 = !DILocation(line: 178, column: 23, scope: !1693)
!1693 = distinct !DILexicalBlock(scope: !1694, file: !240, line: 177, column: 9)
!1694 = distinct !DILexicalBlock(scope: !1665, file: !240, line: 174, column: 3)
!1695 = !DILocation(line: 178, column: 31, scope: !1693)
!1696 = !DILocation(line: 178, column: 12, scope: !1693)
!1697 = !DILocation(line: 178, column: 55, scope: !1693)
!1698 = !DILocation(line: 177, column: 9, scope: !1694)
!1699 = !DILocation(line: 179, column: 7, scope: !1693)
!1700 = !DILocalVariable(name: "file_name_len", scope: !1694, file: !240, line: 182, type: !697)
!1701 = !DILocation(line: 182, column: 12, scope: !1694)
!1702 = !DILocation(line: 182, column: 36, scope: !1694)
!1703 = !DILocation(line: 182, column: 28, scope: !1694)
!1704 = !DILocation(line: 184, column: 33, scope: !1705)
!1705 = distinct !DILexicalBlock(scope: !1694, file: !240, line: 184, column: 9)
!1706 = !DILocation(line: 184, column: 30, scope: !1705)
!1707 = !DILocation(line: 184, column: 9, scope: !1694)
!1708 = !DILocation(line: 185, column: 33, scope: !1705)
!1709 = !DILocation(line: 185, column: 16, scope: !1705)
!1710 = !DILocation(line: 185, column: 14, scope: !1705)
!1711 = !DILocation(line: 185, column: 7, scope: !1705)
!1712 = !DILocation(line: 186, column: 21, scope: !1713)
!1713 = distinct !DILexicalBlock(scope: !1694, file: !240, line: 186, column: 9)
!1714 = !DILocation(line: 186, column: 9, scope: !1713)
!1715 = !DILocation(line: 186, column: 38, scope: !1713)
!1716 = !DILocation(line: 186, column: 9, scope: !1694)
!1717 = !DILocation(line: 187, column: 7, scope: !1713)
!1718 = !DILocation(line: 188, column: 9, scope: !1719)
!1719 = distinct !DILexicalBlock(scope: !1694, file: !240, line: 188, column: 9)
!1720 = !DILocation(line: 188, column: 15, scope: !1719)
!1721 = !DILocation(line: 188, column: 9, scope: !1694)
!1722 = !DILocation(line: 190, column: 9, scope: !1723)
!1723 = distinct !DILexicalBlock(scope: !1719, file: !240, line: 189, column: 7)
!1724 = !DILocation(line: 190, column: 15, scope: !1723)
!1725 = !DILocation(line: 191, column: 9, scope: !1723)
!1726 = !DILocation(line: 196, column: 5, scope: !1694)
!1727 = !DILocation(line: 198, column: 1, scope: !1665)
!1728 = distinct !DISubprogram(name: "cache_fstatat", scope: !240, file: !240, line: 73, type: !1729, isLocal: true, isDefinition: true, scopeLine: 74, flags: DIFlagPrototyped, isOptimized: false, unit: !239, variables: !48)
!1729 = !DISubroutineType(types: !1730)
!1730 = !{!46, !46, !35, !1357, !46}
!1731 = !DILocalVariable(name: "fd", arg: 1, scope: !1728, file: !240, line: 73, type: !46)
!1732 = !DILocation(line: 73, column: 20, scope: !1728)
!1733 = !DILocalVariable(name: "file", arg: 2, scope: !1728, file: !240, line: 73, type: !35)
!1734 = !DILocation(line: 73, column: 36, scope: !1728)
!1735 = !DILocalVariable(name: "st", arg: 3, scope: !1728, file: !240, line: 73, type: !1357)
!1736 = !DILocation(line: 73, column: 55, scope: !1728)
!1737 = !DILocalVariable(name: "flag", arg: 4, scope: !1728, file: !240, line: 73, type: !46)
!1738 = !DILocation(line: 73, column: 63, scope: !1728)
!1739 = !DILocation(line: 75, column: 7, scope: !1740)
!1740 = distinct !DILexicalBlock(scope: !1728, file: !240, line: 75, column: 7)
!1741 = !DILocation(line: 75, column: 11, scope: !1740)
!1742 = !DILocation(line: 75, column: 19, scope: !1740)
!1743 = !DILocation(line: 75, column: 25, scope: !1740)
!1744 = !DILocation(line: 75, column: 37, scope: !1740)
!1745 = !DILocation(line: 75, column: 41, scope: !1740)
!1746 = !DILocation(line: 75, column: 47, scope: !1740)
!1747 = !DILocation(line: 75, column: 51, scope: !1740)
!1748 = !DILocation(line: 75, column: 28, scope: !1740)
!1749 = !DILocation(line: 75, column: 57, scope: !1740)
!1750 = !DILocation(line: 75, column: 7, scope: !1728)
!1751 = !DILocation(line: 77, column: 7, scope: !1752)
!1752 = distinct !DILexicalBlock(scope: !1740, file: !240, line: 76, column: 5)
!1753 = !DILocation(line: 77, column: 11, scope: !1752)
!1754 = !DILocation(line: 77, column: 19, scope: !1752)
!1755 = !DILocation(line: 78, column: 20, scope: !1752)
!1756 = !DILocation(line: 78, column: 7, scope: !1752)
!1757 = !DILocation(line: 78, column: 11, scope: !1752)
!1758 = !DILocation(line: 78, column: 18, scope: !1752)
!1759 = !DILocation(line: 79, column: 5, scope: !1752)
!1760 = !DILocation(line: 80, column: 12, scope: !1761)
!1761 = distinct !DILexicalBlock(scope: !1728, file: !240, line: 80, column: 7)
!1762 = !DILocation(line: 80, column: 16, scope: !1761)
!1763 = !DILocation(line: 80, column: 9, scope: !1761)
!1764 = !DILocation(line: 80, column: 7, scope: !1728)
!1765 = !DILocation(line: 81, column: 5, scope: !1761)
!1766 = !DILocation(line: 82, column: 17, scope: !1728)
!1767 = !DILocation(line: 82, column: 21, scope: !1728)
!1768 = !DILocation(line: 82, column: 11, scope: !1728)
!1769 = !DILocation(line: 82, column: 3, scope: !1728)
!1770 = !DILocation(line: 82, column: 9, scope: !1728)
!1771 = !DILocation(line: 83, column: 3, scope: !1728)
!1772 = !DILocation(line: 84, column: 1, scope: !1728)
!1773 = distinct !DISubprogram(name: "is_empty_dir", scope: !527, file: !527, line: 330, type: !1774, isLocal: true, isDefinition: true, scopeLine: 331, flags: DIFlagPrototyped, isOptimized: false, unit: !239, variables: !48)
!1774 = !DISubroutineType(types: !1775)
!1775 = !{!131, !46, !35}
!1776 = !DILocalVariable(name: "fd_cwd", arg: 1, scope: !1773, file: !527, line: 330, type: !46)
!1777 = !DILocation(line: 330, column: 19, scope: !1773)
!1778 = !DILocalVariable(name: "dir", arg: 2, scope: !1773, file: !527, line: 330, type: !35)
!1779 = !DILocation(line: 330, column: 39, scope: !1773)
!1780 = !DILocalVariable(name: "dirp", scope: !1773, file: !527, line: 332, type: !1781)
!1781 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1782, size: 64)
!1782 = !DIDerivedType(tag: DW_TAG_typedef, name: "DIR", file: !252, line: 127, baseType: !1783)
!1783 = !DICompositeType(tag: DW_TAG_structure_type, name: "__dirstream", file: !252, line: 127, flags: DIFlagFwdDecl)
!1784 = !DILocation(line: 332, column: 8, scope: !1773)
!1785 = !DILocalVariable(name: "dp", scope: !1773, file: !527, line: 333, type: !1786)
!1786 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1787, size: 64)
!1787 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1788)
!1788 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dirent", file: !1789, line: 22, size: 2240, elements: !1790)
!1789 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/dirent.h", directory: "/home/ma481/Downloads/Chisel/chisel-bench/benchmark/rm-8.4/original/obj-llvm/src")
!1790 = !{!1791, !1792, !1793, !1794, !1796}
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino", scope: !1788, file: !1789, line: 25, baseType: !55, size: 64)
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "d_off", scope: !1788, file: !1789, line: 26, baseType: !815, size: 64, offset: 64)
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "d_reclen", scope: !1788, file: !1789, line: 31, baseType: !183, size: 16, offset: 128)
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "d_type", scope: !1788, file: !1789, line: 32, baseType: !1795, size: 8, offset: 144)
!1795 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "d_name", scope: !1788, file: !1789, line: 33, baseType: !204, size: 2048, offset: 152)
!1797 = !DILocation(line: 333, column: 24, scope: !1773)
!1798 = !DILocalVariable(name: "saved_errno", scope: !1773, file: !527, line: 334, type: !46)
!1799 = !DILocation(line: 334, column: 7, scope: !1773)
!1800 = !DILocalVariable(name: "fd", scope: !1773, file: !527, line: 335, type: !46)
!1801 = !DILocation(line: 335, column: 7, scope: !1773)
!1802 = !DILocation(line: 335, column: 20, scope: !1773)
!1803 = !DILocation(line: 335, column: 28, scope: !1773)
!1804 = !DILocation(line: 335, column: 12, scope: !1773)
!1805 = !DILocation(line: 339, column: 7, scope: !1806)
!1806 = distinct !DILexicalBlock(scope: !1773, file: !527, line: 339, column: 7)
!1807 = !DILocation(line: 339, column: 10, scope: !1806)
!1808 = !DILocation(line: 339, column: 7, scope: !1773)
!1809 = !DILocation(line: 340, column: 5, scope: !1806)
!1810 = !DILocation(line: 342, column: 21, scope: !1773)
!1811 = !DILocation(line: 342, column: 10, scope: !1773)
!1812 = !DILocation(line: 342, column: 8, scope: !1773)
!1813 = !DILocation(line: 343, column: 7, scope: !1814)
!1814 = distinct !DILexicalBlock(scope: !1773, file: !527, line: 343, column: 7)
!1815 = !DILocation(line: 343, column: 12, scope: !1814)
!1816 = !DILocation(line: 343, column: 7, scope: !1773)
!1817 = !DILocation(line: 345, column: 14, scope: !1818)
!1818 = distinct !DILexicalBlock(scope: !1814, file: !527, line: 344, column: 5)
!1819 = !DILocation(line: 345, column: 7, scope: !1818)
!1820 = !DILocation(line: 346, column: 7, scope: !1818)
!1821 = !DILocation(line: 349, column: 3, scope: !1773)
!1822 = !DILocation(line: 349, column: 9, scope: !1773)
!1823 = !DILocation(line: 350, column: 41, scope: !1773)
!1824 = !DILocation(line: 350, column: 8, scope: !1773)
!1825 = !DILocation(line: 350, column: 6, scope: !1773)
!1826 = !DILocation(line: 351, column: 17, scope: !1773)
!1827 = !DILocation(line: 351, column: 15, scope: !1773)
!1828 = !DILocation(line: 352, column: 13, scope: !1773)
!1829 = !DILocation(line: 352, column: 3, scope: !1773)
!1830 = !DILocation(line: 353, column: 7, scope: !1831)
!1831 = distinct !DILexicalBlock(scope: !1773, file: !527, line: 353, column: 7)
!1832 = !DILocation(line: 353, column: 10, scope: !1831)
!1833 = !DILocation(line: 353, column: 7, scope: !1773)
!1834 = !DILocation(line: 354, column: 5, scope: !1831)
!1835 = !DILocation(line: 355, column: 10, scope: !1773)
!1836 = !DILocation(line: 355, column: 22, scope: !1773)
!1837 = !DILocation(line: 355, column: 3, scope: !1773)
!1838 = !DILocation(line: 356, column: 1, scope: !1773)
!1839 = distinct !DISubprogram(name: "readdir_ignoring_dot_and_dotdot", scope: !527, file: !527, line: 318, type: !1840, isLocal: true, isDefinition: true, scopeLine: 319, flags: DIFlagPrototyped, isOptimized: false, unit: !239, variables: !48)
!1840 = !DISubroutineType(types: !1841)
!1841 = !{!1786, !1781}
!1842 = !DILocalVariable(name: "dirp", arg: 1, scope: !1839, file: !527, line: 318, type: !1781)
!1843 = !DILocation(line: 318, column: 39, scope: !1839)
!1844 = !DILocation(line: 320, column: 3, scope: !1839)
!1845 = !DILocalVariable(name: "dp", scope: !1846, file: !527, line: 322, type: !1786)
!1846 = distinct !DILexicalBlock(scope: !1839, file: !527, line: 321, column: 5)
!1847 = !DILocation(line: 322, column: 28, scope: !1846)
!1848 = !DILocation(line: 322, column: 42, scope: !1846)
!1849 = !DILocation(line: 322, column: 33, scope: !1846)
!1850 = !DILocation(line: 323, column: 11, scope: !1851)
!1851 = distinct !DILexicalBlock(scope: !1846, file: !527, line: 323, column: 11)
!1852 = !DILocation(line: 323, column: 14, scope: !1851)
!1853 = !DILocation(line: 323, column: 22, scope: !1851)
!1854 = !DILocation(line: 323, column: 42, scope: !1851)
!1855 = !DILocation(line: 323, column: 46, scope: !1851)
!1856 = !DILocation(line: 323, column: 27, scope: !1851)
!1857 = !DILocation(line: 323, column: 11, scope: !1846)
!1858 = !DILocation(line: 324, column: 16, scope: !1851)
!1859 = !DILocation(line: 324, column: 9, scope: !1851)
!1860 = distinct !{!1860, !1844, !1861}
!1861 = !DILocation(line: 325, column: 5, scope: !1839)
!1862 = distinct !DISubprogram(name: "set_program_name", scope: !93, file: !93, line: 39, type: !1863, isLocal: false, isDefinition: true, scopeLine: 40, flags: DIFlagPrototyped, isOptimized: false, unit: !92, variables: !48)
!1863 = !DISubroutineType(types: !1864)
!1864 = !{null, !35}
!1865 = !DILocalVariable(name: "argv0", arg: 1, scope: !1862, file: !93, line: 39, type: !35)
!1866 = !DILocation(line: 39, column: 31, scope: !1862)
!1867 = !DILocalVariable(name: "slash", scope: !1862, file: !93, line: 46, type: !35)
!1868 = !DILocation(line: 46, column: 15, scope: !1862)
!1869 = !DILocalVariable(name: "base", scope: !1862, file: !93, line: 47, type: !35)
!1870 = !DILocation(line: 47, column: 15, scope: !1862)
!1871 = !DILocation(line: 51, column: 7, scope: !1872)
!1872 = distinct !DILexicalBlock(scope: !1862, file: !93, line: 51, column: 7)
!1873 = !DILocation(line: 51, column: 13, scope: !1872)
!1874 = !DILocation(line: 51, column: 7, scope: !1862)
!1875 = !DILocation(line: 55, column: 14, scope: !1876)
!1876 = distinct !DILexicalBlock(scope: !1872, file: !93, line: 52, column: 5)
!1877 = !DILocation(line: 54, column: 7, scope: !1876)
!1878 = !DILocation(line: 56, column: 7, scope: !1876)
!1879 = !DILocation(line: 59, column: 20, scope: !1862)
!1880 = !DILocation(line: 59, column: 11, scope: !1862)
!1881 = !DILocation(line: 59, column: 9, scope: !1862)
!1882 = !DILocation(line: 60, column: 11, scope: !1862)
!1883 = !DILocation(line: 60, column: 17, scope: !1862)
!1884 = !DILocation(line: 60, column: 27, scope: !1862)
!1885 = !DILocation(line: 60, column: 33, scope: !1862)
!1886 = !DILocation(line: 60, column: 39, scope: !1862)
!1887 = !DILocation(line: 60, column: 8, scope: !1862)
!1888 = !DILocation(line: 61, column: 7, scope: !1889)
!1889 = distinct !DILexicalBlock(scope: !1862, file: !93, line: 61, column: 7)
!1890 = !DILocation(line: 61, column: 14, scope: !1889)
!1891 = !DILocation(line: 61, column: 12, scope: !1889)
!1892 = !DILocation(line: 61, column: 20, scope: !1889)
!1893 = !DILocation(line: 61, column: 25, scope: !1889)
!1894 = !DILocation(line: 61, column: 37, scope: !1889)
!1895 = !DILocation(line: 61, column: 42, scope: !1889)
!1896 = !DILocation(line: 61, column: 28, scope: !1889)
!1897 = !DILocation(line: 61, column: 61, scope: !1889)
!1898 = !DILocation(line: 61, column: 7, scope: !1862)
!1899 = !DILocation(line: 63, column: 15, scope: !1900)
!1900 = distinct !DILexicalBlock(scope: !1889, file: !93, line: 62, column: 5)
!1901 = !DILocation(line: 63, column: 13, scope: !1900)
!1902 = !DILocation(line: 64, column: 20, scope: !1903)
!1903 = distinct !DILexicalBlock(scope: !1900, file: !93, line: 64, column: 11)
!1904 = !DILocation(line: 64, column: 11, scope: !1903)
!1905 = !DILocation(line: 64, column: 36, scope: !1903)
!1906 = !DILocation(line: 64, column: 11, scope: !1900)
!1907 = !DILocation(line: 66, column: 19, scope: !1908)
!1908 = distinct !DILexicalBlock(scope: !1903, file: !93, line: 65, column: 9)
!1909 = !DILocation(line: 66, column: 24, scope: !1908)
!1910 = !DILocation(line: 66, column: 17, scope: !1908)
!1911 = !DILocation(line: 70, column: 52, scope: !1908)
!1912 = !DILocation(line: 70, column: 41, scope: !1908)
!1913 = !DILocation(line: 72, column: 9, scope: !1908)
!1914 = !DILocation(line: 73, column: 5, scope: !1900)
!1915 = !DILocation(line: 84, column: 18, scope: !1862)
!1916 = !DILocation(line: 84, column: 16, scope: !1862)
!1917 = !DILocation(line: 90, column: 38, scope: !1862)
!1918 = !DILocation(line: 90, column: 27, scope: !1862)
!1919 = !DILocation(line: 92, column: 1, scope: !1862)
!1920 = distinct !DISubprogram(name: "version_etc_arn", scope: !265, file: !265, line: 62, type: !1921, isLocal: false, isDefinition: true, scopeLine: 66, flags: DIFlagPrototyped, isOptimized: false, unit: !264, variables: !48)
!1921 = !DISubroutineType(types: !1922)
!1922 = !{null, !1923, !35, !35, !35, !1972, !143}
!1923 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1924, size: 64)
!1924 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !1925, line: 7, baseType: !1926)
!1925 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/FILE.h", directory: "/home/ma481/Downloads/Chisel/chisel-bench/benchmark/rm-8.4/original/obj-llvm/lib")
!1926 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !1927, line: 245, size: 1728, elements: !1928)
!1927 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/libio.h", directory: "/home/ma481/Downloads/Chisel/chisel-bench/benchmark/rm-8.4/original/obj-llvm/lib")
!1928 = !{!1929, !1930, !1931, !1932, !1933, !1934, !1935, !1936, !1937, !1938, !1939, !1940, !1941, !1949, !1950, !1951, !1952, !1953, !1954, !1956, !1957, !1960, !1962, !1963, !1964, !1965, !1966, !1967, !1968}
!1929 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !1926, file: !1927, line: 246, baseType: !46, size: 32)
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !1926, file: !1927, line: 251, baseType: !38, size: 64, offset: 64)
!1931 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !1926, file: !1927, line: 252, baseType: !38, size: 64, offset: 128)
!1932 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !1926, file: !1927, line: 253, baseType: !38, size: 64, offset: 192)
!1933 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !1926, file: !1927, line: 254, baseType: !38, size: 64, offset: 256)
!1934 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !1926, file: !1927, line: 255, baseType: !38, size: 64, offset: 320)
!1935 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !1926, file: !1927, line: 256, baseType: !38, size: 64, offset: 384)
!1936 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !1926, file: !1927, line: 257, baseType: !38, size: 64, offset: 448)
!1937 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !1926, file: !1927, line: 258, baseType: !38, size: 64, offset: 512)
!1938 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !1926, file: !1927, line: 260, baseType: !38, size: 64, offset: 576)
!1939 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !1926, file: !1927, line: 261, baseType: !38, size: 64, offset: 640)
!1940 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !1926, file: !1927, line: 262, baseType: !38, size: 64, offset: 704)
!1941 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !1926, file: !1927, line: 264, baseType: !1942, size: 64, offset: 768)
!1942 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1943, size: 64)
!1943 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !1927, line: 160, size: 192, elements: !1944)
!1944 = !{!1945, !1946, !1948}
!1945 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !1943, file: !1927, line: 161, baseType: !1942, size: 64)
!1946 = !DIDerivedType(tag: DW_TAG_member, name: "_sbuf", scope: !1943, file: !1927, line: 162, baseType: !1947, size: 64, offset: 64)
!1947 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1926, size: 64)
!1948 = !DIDerivedType(tag: DW_TAG_member, name: "_pos", scope: !1943, file: !1927, line: 166, baseType: !46, size: 32, offset: 128)
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !1926, file: !1927, line: 266, baseType: !1947, size: 64, offset: 832)
!1950 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !1926, file: !1927, line: 268, baseType: !46, size: 32, offset: 896)
!1951 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !1926, file: !1927, line: 272, baseType: !46, size: 32, offset: 928)
!1952 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !1926, file: !1927, line: 274, baseType: !344, size: 64, offset: 960)
!1953 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !1926, file: !1927, line: 278, baseType: !183, size: 16, offset: 1024)
!1954 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !1926, file: !1927, line: 279, baseType: !1955, size: 8, offset: 1040)
!1955 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!1956 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !1926, file: !1927, line: 280, baseType: !366, size: 8, offset: 1048)
!1957 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !1926, file: !1927, line: 284, baseType: !1958, size: 64, offset: 1088)
!1958 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1959, size: 64)
!1959 = !DIDerivedType(tag: DW_TAG_typedef, name: "_IO_lock_t", file: !1927, line: 154, baseType: null)
!1960 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !1926, file: !1927, line: 293, baseType: !1961, size: 64, offset: 1152)
!1961 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off64_t", file: !321, line: 141, baseType: !306)
!1962 = !DIDerivedType(tag: DW_TAG_member, name: "__pad1", scope: !1926, file: !1927, line: 301, baseType: !39, size: 64, offset: 1216)
!1963 = !DIDerivedType(tag: DW_TAG_member, name: "__pad2", scope: !1926, file: !1927, line: 302, baseType: !39, size: 64, offset: 1280)
!1964 = !DIDerivedType(tag: DW_TAG_member, name: "__pad3", scope: !1926, file: !1927, line: 303, baseType: !39, size: 64, offset: 1344)
!1965 = !DIDerivedType(tag: DW_TAG_member, name: "__pad4", scope: !1926, file: !1927, line: 304, baseType: !39, size: 64, offset: 1408)
!1966 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !1926, file: !1927, line: 306, baseType: !143, size: 64, offset: 1472)
!1967 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !1926, file: !1927, line: 307, baseType: !46, size: 32, offset: 1536)
!1968 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !1926, file: !1927, line: 309, baseType: !1969, size: 160, offset: 1568)
!1969 = !DICompositeType(tag: DW_TAG_array_type, baseType: !37, size: 160, elements: !1970)
!1970 = !{!1971}
!1971 = !DISubrange(count: 20)
!1972 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !70, size: 64)
!1973 = !DILocalVariable(name: "stream", arg: 1, scope: !1920, file: !265, line: 62, type: !1923)
!1974 = !DILocation(line: 62, column: 24, scope: !1920)
!1975 = !DILocalVariable(name: "command_name", arg: 2, scope: !1920, file: !265, line: 63, type: !35)
!1976 = !DILocation(line: 63, column: 30, scope: !1920)
!1977 = !DILocalVariable(name: "package", arg: 3, scope: !1920, file: !265, line: 63, type: !35)
!1978 = !DILocation(line: 63, column: 56, scope: !1920)
!1979 = !DILocalVariable(name: "version", arg: 4, scope: !1920, file: !265, line: 64, type: !35)
!1980 = !DILocation(line: 64, column: 30, scope: !1920)
!1981 = !DILocalVariable(name: "authors", arg: 5, scope: !1920, file: !265, line: 65, type: !1972)
!1982 = !DILocation(line: 65, column: 39, scope: !1920)
!1983 = !DILocalVariable(name: "n_authors", arg: 6, scope: !1920, file: !265, line: 65, type: !143)
!1984 = !DILocation(line: 65, column: 55, scope: !1920)
!1985 = !DILocation(line: 67, column: 7, scope: !1986)
!1986 = distinct !DILexicalBlock(scope: !1920, file: !265, line: 67, column: 7)
!1987 = !DILocation(line: 67, column: 7, scope: !1920)
!1988 = !DILocation(line: 68, column: 14, scope: !1986)
!1989 = !DILocation(line: 68, column: 38, scope: !1986)
!1990 = !DILocation(line: 68, column: 52, scope: !1986)
!1991 = !DILocation(line: 68, column: 61, scope: !1986)
!1992 = !DILocation(line: 68, column: 5, scope: !1986)
!1993 = !DILocation(line: 70, column: 14, scope: !1986)
!1994 = !DILocation(line: 70, column: 33, scope: !1986)
!1995 = !DILocation(line: 70, column: 42, scope: !1986)
!1996 = !DILocation(line: 70, column: 5, scope: !1986)
!1997 = !DILocation(line: 84, column: 12, scope: !1920)
!1998 = !DILocation(line: 84, column: 3, scope: !1920)
!1999 = !DILocation(line: 86, column: 3, scope: !1920)
!2000 = !DILocation(line: 95, column: 11, scope: !1920)
!2001 = !DILocation(line: 95, column: 3, scope: !1920)
!2002 = !DILocation(line: 99, column: 7, scope: !2003)
!2003 = distinct !DILexicalBlock(scope: !1920, file: !265, line: 96, column: 5)
!2004 = !DILocation(line: 102, column: 16, scope: !2003)
!2005 = !DILocation(line: 102, column: 47, scope: !2003)
!2006 = !DILocation(line: 102, column: 7, scope: !2003)
!2007 = !DILocation(line: 103, column: 7, scope: !2003)
!2008 = !DILocation(line: 106, column: 16, scope: !2003)
!2009 = !DILocation(line: 106, column: 54, scope: !2003)
!2010 = !DILocation(line: 106, column: 66, scope: !2003)
!2011 = !DILocation(line: 106, column: 7, scope: !2003)
!2012 = !DILocation(line: 107, column: 7, scope: !2003)
!2013 = !DILocation(line: 110, column: 16, scope: !2003)
!2014 = !DILocation(line: 111, column: 16, scope: !2003)
!2015 = !DILocation(line: 111, column: 28, scope: !2003)
!2016 = !DILocation(line: 111, column: 40, scope: !2003)
!2017 = !DILocation(line: 110, column: 7, scope: !2003)
!2018 = !DILocation(line: 112, column: 7, scope: !2003)
!2019 = !DILocation(line: 117, column: 16, scope: !2003)
!2020 = !DILocation(line: 118, column: 16, scope: !2003)
!2021 = !DILocation(line: 118, column: 28, scope: !2003)
!2022 = !DILocation(line: 118, column: 40, scope: !2003)
!2023 = !DILocation(line: 118, column: 52, scope: !2003)
!2024 = !DILocation(line: 117, column: 7, scope: !2003)
!2025 = !DILocation(line: 119, column: 7, scope: !2003)
!2026 = !DILocation(line: 124, column: 16, scope: !2003)
!2027 = !DILocation(line: 125, column: 16, scope: !2003)
!2028 = !DILocation(line: 125, column: 28, scope: !2003)
!2029 = !DILocation(line: 125, column: 40, scope: !2003)
!2030 = !DILocation(line: 125, column: 52, scope: !2003)
!2031 = !DILocation(line: 125, column: 64, scope: !2003)
!2032 = !DILocation(line: 124, column: 7, scope: !2003)
!2033 = !DILocation(line: 126, column: 7, scope: !2003)
!2034 = !DILocation(line: 131, column: 16, scope: !2003)
!2035 = !DILocation(line: 132, column: 16, scope: !2003)
!2036 = !DILocation(line: 132, column: 28, scope: !2003)
!2037 = !DILocation(line: 132, column: 40, scope: !2003)
!2038 = !DILocation(line: 132, column: 52, scope: !2003)
!2039 = !DILocation(line: 132, column: 64, scope: !2003)
!2040 = !DILocation(line: 133, column: 16, scope: !2003)
!2041 = !DILocation(line: 131, column: 7, scope: !2003)
!2042 = !DILocation(line: 134, column: 7, scope: !2003)
!2043 = !DILocation(line: 139, column: 16, scope: !2003)
!2044 = !DILocation(line: 140, column: 16, scope: !2003)
!2045 = !DILocation(line: 140, column: 28, scope: !2003)
!2046 = !DILocation(line: 140, column: 40, scope: !2003)
!2047 = !DILocation(line: 140, column: 52, scope: !2003)
!2048 = !DILocation(line: 140, column: 64, scope: !2003)
!2049 = !DILocation(line: 141, column: 16, scope: !2003)
!2050 = !DILocation(line: 141, column: 28, scope: !2003)
!2051 = !DILocation(line: 139, column: 7, scope: !2003)
!2052 = !DILocation(line: 142, column: 7, scope: !2003)
!2053 = !DILocation(line: 147, column: 16, scope: !2003)
!2054 = !DILocation(line: 149, column: 17, scope: !2003)
!2055 = !DILocation(line: 149, column: 29, scope: !2003)
!2056 = !DILocation(line: 149, column: 41, scope: !2003)
!2057 = !DILocation(line: 149, column: 53, scope: !2003)
!2058 = !DILocation(line: 149, column: 65, scope: !2003)
!2059 = !DILocation(line: 150, column: 17, scope: !2003)
!2060 = !DILocation(line: 150, column: 29, scope: !2003)
!2061 = !DILocation(line: 150, column: 41, scope: !2003)
!2062 = !DILocation(line: 147, column: 7, scope: !2003)
!2063 = !DILocation(line: 151, column: 7, scope: !2003)
!2064 = !DILocation(line: 156, column: 16, scope: !2003)
!2065 = !DILocation(line: 158, column: 16, scope: !2003)
!2066 = !DILocation(line: 158, column: 28, scope: !2003)
!2067 = !DILocation(line: 158, column: 40, scope: !2003)
!2068 = !DILocation(line: 158, column: 52, scope: !2003)
!2069 = !DILocation(line: 158, column: 64, scope: !2003)
!2070 = !DILocation(line: 159, column: 16, scope: !2003)
!2071 = !DILocation(line: 159, column: 28, scope: !2003)
!2072 = !DILocation(line: 159, column: 40, scope: !2003)
!2073 = !DILocation(line: 159, column: 52, scope: !2003)
!2074 = !DILocation(line: 156, column: 7, scope: !2003)
!2075 = !DILocation(line: 160, column: 7, scope: !2003)
!2076 = !DILocation(line: 167, column: 16, scope: !2003)
!2077 = !DILocation(line: 169, column: 17, scope: !2003)
!2078 = !DILocation(line: 169, column: 29, scope: !2003)
!2079 = !DILocation(line: 169, column: 41, scope: !2003)
!2080 = !DILocation(line: 169, column: 53, scope: !2003)
!2081 = !DILocation(line: 169, column: 65, scope: !2003)
!2082 = !DILocation(line: 170, column: 17, scope: !2003)
!2083 = !DILocation(line: 170, column: 29, scope: !2003)
!2084 = !DILocation(line: 170, column: 41, scope: !2003)
!2085 = !DILocation(line: 170, column: 53, scope: !2003)
!2086 = !DILocation(line: 167, column: 7, scope: !2003)
!2087 = !DILocation(line: 171, column: 7, scope: !2003)
!2088 = !DILocation(line: 173, column: 1, scope: !1920)
!2089 = distinct !DISubprogram(name: "version_etc_ar", scope: !265, file: !265, line: 180, type: !2090, isLocal: false, isDefinition: true, scopeLine: 183, flags: DIFlagPrototyped, isOptimized: false, unit: !264, variables: !48)
!2090 = !DISubroutineType(types: !2091)
!2091 = !{null, !1923, !35, !35, !35, !1972}
!2092 = !DILocalVariable(name: "stream", arg: 1, scope: !2089, file: !265, line: 180, type: !1923)
!2093 = !DILocation(line: 180, column: 23, scope: !2089)
!2094 = !DILocalVariable(name: "command_name", arg: 2, scope: !2089, file: !265, line: 181, type: !35)
!2095 = !DILocation(line: 181, column: 29, scope: !2089)
!2096 = !DILocalVariable(name: "package", arg: 3, scope: !2089, file: !265, line: 181, type: !35)
!2097 = !DILocation(line: 181, column: 55, scope: !2089)
!2098 = !DILocalVariable(name: "version", arg: 4, scope: !2089, file: !265, line: 182, type: !35)
!2099 = !DILocation(line: 182, column: 29, scope: !2089)
!2100 = !DILocalVariable(name: "authors", arg: 5, scope: !2089, file: !265, line: 182, type: !1972)
!2101 = !DILocation(line: 182, column: 59, scope: !2089)
!2102 = !DILocalVariable(name: "n_authors", scope: !2089, file: !265, line: 184, type: !143)
!2103 = !DILocation(line: 184, column: 10, scope: !2089)
!2104 = !DILocation(line: 186, column: 18, scope: !2105)
!2105 = distinct !DILexicalBlock(scope: !2089, file: !265, line: 186, column: 3)
!2106 = !DILocation(line: 186, column: 8, scope: !2105)
!2107 = !DILocation(line: 186, column: 23, scope: !2108)
!2108 = distinct !DILexicalBlock(scope: !2105, file: !265, line: 186, column: 3)
!2109 = !DILocation(line: 186, column: 31, scope: !2108)
!2110 = !DILocation(line: 186, column: 3, scope: !2105)
!2111 = !DILocation(line: 186, column: 52, scope: !2108)
!2112 = !DILocation(line: 186, column: 3, scope: !2108)
!2113 = distinct !{!2113, !2110, !2114}
!2114 = !DILocation(line: 187, column: 5, scope: !2105)
!2115 = !DILocation(line: 188, column: 20, scope: !2089)
!2116 = !DILocation(line: 188, column: 28, scope: !2089)
!2117 = !DILocation(line: 188, column: 42, scope: !2089)
!2118 = !DILocation(line: 188, column: 51, scope: !2089)
!2119 = !DILocation(line: 188, column: 60, scope: !2089)
!2120 = !DILocation(line: 188, column: 69, scope: !2089)
!2121 = !DILocation(line: 188, column: 3, scope: !2089)
!2122 = !DILocation(line: 189, column: 1, scope: !2089)
!2123 = distinct !DISubprogram(name: "version_etc_va", scope: !265, file: !265, line: 196, type: !2124, isLocal: false, isDefinition: true, scopeLine: 199, flags: DIFlagPrototyped, isOptimized: false, unit: !264, variables: !48)
!2124 = !DISubroutineType(types: !2125)
!2125 = !{null, !1923, !35, !35, !35, !2126}
!2126 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2127, size: 64)
!2127 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", file: !265, line: 189, size: 192, elements: !2128)
!2128 = !{!2129, !2130, !2131, !2132}
!2129 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !2127, file: !265, line: 189, baseType: !199, size: 32)
!2130 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !2127, file: !265, line: 189, baseType: !199, size: 32, offset: 32)
!2131 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !2127, file: !265, line: 189, baseType: !39, size: 64, offset: 64)
!2132 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !2127, file: !265, line: 189, baseType: !39, size: 64, offset: 128)
!2133 = !DILocalVariable(name: "stream", arg: 1, scope: !2123, file: !265, line: 196, type: !1923)
!2134 = !DILocation(line: 196, column: 23, scope: !2123)
!2135 = !DILocalVariable(name: "command_name", arg: 2, scope: !2123, file: !265, line: 197, type: !35)
!2136 = !DILocation(line: 197, column: 29, scope: !2123)
!2137 = !DILocalVariable(name: "package", arg: 3, scope: !2123, file: !265, line: 197, type: !35)
!2138 = !DILocation(line: 197, column: 55, scope: !2123)
!2139 = !DILocalVariable(name: "version", arg: 4, scope: !2123, file: !265, line: 198, type: !35)
!2140 = !DILocation(line: 198, column: 29, scope: !2123)
!2141 = !DILocalVariable(name: "authors", arg: 5, scope: !2123, file: !265, line: 198, type: !2126)
!2142 = !DILocation(line: 198, column: 46, scope: !2123)
!2143 = !DILocalVariable(name: "n_authors", scope: !2123, file: !265, line: 200, type: !143)
!2144 = !DILocation(line: 200, column: 10, scope: !2123)
!2145 = !DILocalVariable(name: "authtab", scope: !2123, file: !265, line: 201, type: !2146)
!2146 = !DICompositeType(tag: DW_TAG_array_type, baseType: !35, size: 640, elements: !2147)
!2147 = !{!2148}
!2148 = !DISubrange(count: 10)
!2149 = !DILocation(line: 201, column: 15, scope: !2123)
!2150 = !DILocation(line: 203, column: 18, scope: !2151)
!2151 = distinct !DILexicalBlock(scope: !2123, file: !265, line: 203, column: 3)
!2152 = !DILocation(line: 203, column: 8, scope: !2151)
!2153 = !DILocation(line: 204, column: 8, scope: !2154)
!2154 = distinct !DILexicalBlock(scope: !2151, file: !265, line: 203, column: 3)
!2155 = !DILocation(line: 204, column: 18, scope: !2154)
!2156 = !DILocation(line: 205, column: 10, scope: !2154)
!2157 = !DILocation(line: 205, column: 35, scope: !2154)
!2158 = !DILocation(line: 205, column: 22, scope: !2154)
!2159 = !DILocation(line: 205, column: 14, scope: !2154)
!2160 = !DILocation(line: 205, column: 33, scope: !2154)
!2161 = !DILocation(line: 205, column: 67, scope: !2154)
!2162 = !DILocation(line: 203, column: 3, scope: !2151)
!2163 = !DILocation(line: 206, column: 17, scope: !2154)
!2164 = !DILocation(line: 203, column: 3, scope: !2154)
!2165 = distinct !{!2165, !2162, !2166}
!2166 = !DILocation(line: 207, column: 5, scope: !2151)
!2167 = !DILocation(line: 208, column: 20, scope: !2123)
!2168 = !DILocation(line: 208, column: 28, scope: !2123)
!2169 = !DILocation(line: 208, column: 42, scope: !2123)
!2170 = !DILocation(line: 208, column: 51, scope: !2123)
!2171 = !DILocation(line: 209, column: 20, scope: !2123)
!2172 = !DILocation(line: 209, column: 29, scope: !2123)
!2173 = !DILocation(line: 208, column: 3, scope: !2123)
!2174 = !DILocation(line: 210, column: 1, scope: !2123)
!2175 = distinct !DISubprogram(name: "version_etc", scope: !265, file: !265, line: 227, type: !2176, isLocal: false, isDefinition: true, scopeLine: 230, flags: DIFlagPrototyped, isOptimized: false, unit: !264, variables: !48)
!2176 = !DISubroutineType(types: !2177)
!2177 = !{null, !1923, !35, !35, !35, null}
!2178 = !DILocalVariable(name: "stream", arg: 1, scope: !2175, file: !265, line: 227, type: !1923)
!2179 = !DILocation(line: 227, column: 20, scope: !2175)
!2180 = !DILocalVariable(name: "command_name", arg: 2, scope: !2175, file: !265, line: 228, type: !35)
!2181 = !DILocation(line: 228, column: 26, scope: !2175)
!2182 = !DILocalVariable(name: "package", arg: 3, scope: !2175, file: !265, line: 228, type: !35)
!2183 = !DILocation(line: 228, column: 52, scope: !2175)
!2184 = !DILocalVariable(name: "version", arg: 4, scope: !2175, file: !265, line: 229, type: !35)
!2185 = !DILocation(line: 229, column: 26, scope: !2175)
!2186 = !DILocalVariable(name: "authors", scope: !2175, file: !265, line: 231, type: !2187)
!2187 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !2188, line: 46, baseType: !2189)
!2188 = !DIFile(filename: "/usr/include/stdio.h", directory: "/home/ma481/Downloads/Chisel/chisel-bench/benchmark/rm-8.4/original/obj-llvm/lib")
!2189 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !2190, line: 48, baseType: !2191)
!2190 = !DIFile(filename: "/home/ma481/Downloads/LLVM_6.0/lib/clang/6.0.0/include/stdarg.h", directory: "/home/ma481/Downloads/Chisel/chisel-bench/benchmark/rm-8.4/original/obj-llvm/lib")
!2191 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !265, line: 231, baseType: !2192)
!2192 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2127, size: 192, elements: !363)
!2193 = !DILocation(line: 231, column: 11, scope: !2175)
!2194 = !DILocation(line: 233, column: 3, scope: !2175)
!2195 = !DILocation(line: 234, column: 19, scope: !2175)
!2196 = !DILocation(line: 234, column: 27, scope: !2175)
!2197 = !DILocation(line: 234, column: 41, scope: !2175)
!2198 = !DILocation(line: 234, column: 50, scope: !2175)
!2199 = !DILocation(line: 234, column: 59, scope: !2175)
!2200 = !DILocation(line: 234, column: 3, scope: !2175)
!2201 = !DILocation(line: 235, column: 3, scope: !2175)
!2202 = !DILocation(line: 236, column: 1, scope: !2175)
!2203 = distinct !DISubprogram(name: "emit_bug_reporting_address", scope: !265, file: !265, line: 239, type: !116, isLocal: false, isDefinition: true, scopeLine: 240, flags: DIFlagPrototyped, isOptimized: false, unit: !264, variables: !48)
!2204 = !DILocation(line: 245, column: 3, scope: !2203)
!2205 = !DILocation(line: 251, column: 3, scope: !2203)
!2206 = !DILocation(line: 256, column: 3, scope: !2203)
!2207 = !DILocation(line: 258, column: 1, scope: !2203)
!2208 = distinct !DISubprogram(name: "__argmatch_die", scope: !107, file: !107, line: 61, type: !116, isLocal: true, isDefinition: true, scopeLine: 62, flags: DIFlagPrototyped, isOptimized: false, unit: !106, variables: !48)
!2209 = !DILocation(line: 63, column: 3, scope: !2208)
!2210 = !DILocation(line: 64, column: 1, scope: !2208)
!2211 = distinct !DISubprogram(name: "argmatch", scope: !107, file: !107, line: 83, type: !2212, isLocal: false, isDefinition: true, scopeLine: 85, flags: DIFlagPrototyped, isOptimized: false, unit: !106, variables: !48)
!2212 = !DISubroutineType(types: !2213)
!2213 = !{!315, !35, !1972, !35, !143}
!2214 = !DILocalVariable(name: "arg", arg: 1, scope: !2211, file: !107, line: 83, type: !35)
!2215 = !DILocation(line: 83, column: 23, scope: !2211)
!2216 = !DILocalVariable(name: "arglist", arg: 2, scope: !2211, file: !107, line: 83, type: !1972)
!2217 = !DILocation(line: 83, column: 47, scope: !2211)
!2218 = !DILocalVariable(name: "vallist", arg: 3, scope: !2211, file: !107, line: 84, type: !35)
!2219 = !DILocation(line: 84, column: 23, scope: !2211)
!2220 = !DILocalVariable(name: "valsize", arg: 4, scope: !2211, file: !107, line: 84, type: !143)
!2221 = !DILocation(line: 84, column: 39, scope: !2211)
!2222 = !DILocalVariable(name: "i", scope: !2211, file: !107, line: 86, type: !143)
!2223 = !DILocation(line: 86, column: 10, scope: !2211)
!2224 = !DILocalVariable(name: "arglen", scope: !2211, file: !107, line: 87, type: !143)
!2225 = !DILocation(line: 87, column: 10, scope: !2211)
!2226 = !DILocalVariable(name: "matchind", scope: !2211, file: !107, line: 88, type: !315)
!2227 = !DILocation(line: 88, column: 13, scope: !2211)
!2228 = !DILocalVariable(name: "ambiguous", scope: !2211, file: !107, line: 89, type: !131)
!2229 = !DILocation(line: 89, column: 8, scope: !2211)
!2230 = !DILocation(line: 91, column: 20, scope: !2211)
!2231 = !DILocation(line: 91, column: 12, scope: !2211)
!2232 = !DILocation(line: 91, column: 10, scope: !2211)
!2233 = !DILocation(line: 94, column: 10, scope: !2234)
!2234 = distinct !DILexicalBlock(scope: !2211, file: !107, line: 94, column: 3)
!2235 = !DILocation(line: 94, column: 8, scope: !2234)
!2236 = !DILocation(line: 94, column: 15, scope: !2237)
!2237 = distinct !DILexicalBlock(scope: !2234, file: !107, line: 94, column: 3)
!2238 = !DILocation(line: 94, column: 23, scope: !2237)
!2239 = !DILocation(line: 94, column: 3, scope: !2234)
!2240 = !DILocation(line: 96, column: 21, scope: !2241)
!2241 = distinct !DILexicalBlock(scope: !2242, file: !107, line: 96, column: 11)
!2242 = distinct !DILexicalBlock(scope: !2237, file: !107, line: 95, column: 5)
!2243 = !DILocation(line: 96, column: 29, scope: !2241)
!2244 = !DILocation(line: 96, column: 33, scope: !2241)
!2245 = !DILocation(line: 96, column: 38, scope: !2241)
!2246 = !DILocation(line: 96, column: 12, scope: !2241)
!2247 = !DILocation(line: 96, column: 11, scope: !2242)
!2248 = !DILocation(line: 98, column: 23, scope: !2249)
!2249 = distinct !DILexicalBlock(scope: !2250, file: !107, line: 98, column: 15)
!2250 = distinct !DILexicalBlock(scope: !2241, file: !107, line: 97, column: 9)
!2251 = !DILocation(line: 98, column: 31, scope: !2249)
!2252 = !DILocation(line: 98, column: 15, scope: !2249)
!2253 = !DILocation(line: 98, column: 38, scope: !2249)
!2254 = !DILocation(line: 98, column: 35, scope: !2249)
!2255 = !DILocation(line: 98, column: 15, scope: !2250)
!2256 = !DILocation(line: 100, column: 20, scope: !2249)
!2257 = !DILocation(line: 100, column: 13, scope: !2249)
!2258 = !DILocation(line: 101, column: 20, scope: !2259)
!2259 = distinct !DILexicalBlock(scope: !2249, file: !107, line: 101, column: 20)
!2260 = !DILocation(line: 101, column: 29, scope: !2259)
!2261 = !DILocation(line: 101, column: 20, scope: !2249)
!2262 = !DILocation(line: 103, column: 24, scope: !2259)
!2263 = !DILocation(line: 103, column: 22, scope: !2259)
!2264 = !DILocation(line: 103, column: 13, scope: !2259)
!2265 = !DILocation(line: 107, column: 19, scope: !2266)
!2266 = distinct !DILexicalBlock(scope: !2267, file: !107, line: 107, column: 19)
!2267 = distinct !DILexicalBlock(scope: !2259, file: !107, line: 105, column: 13)
!2268 = !DILocation(line: 107, column: 27, scope: !2266)
!2269 = !DILocation(line: 108, column: 19, scope: !2266)
!2270 = !DILocation(line: 108, column: 30, scope: !2266)
!2271 = !DILocation(line: 108, column: 40, scope: !2266)
!2272 = !DILocation(line: 108, column: 50, scope: !2266)
!2273 = !DILocation(line: 108, column: 48, scope: !2266)
!2274 = !DILocation(line: 108, column: 38, scope: !2266)
!2275 = !DILocation(line: 109, column: 30, scope: !2266)
!2276 = !DILocation(line: 109, column: 40, scope: !2266)
!2277 = !DILocation(line: 109, column: 50, scope: !2266)
!2278 = !DILocation(line: 109, column: 48, scope: !2266)
!2279 = !DILocation(line: 109, column: 38, scope: !2266)
!2280 = !DILocation(line: 109, column: 53, scope: !2266)
!2281 = !DILocation(line: 108, column: 22, scope: !2266)
!2282 = !DILocation(line: 107, column: 19, scope: !2267)
!2283 = !DILocation(line: 113, column: 29, scope: !2284)
!2284 = distinct !DILexicalBlock(scope: !2266, file: !107, line: 110, column: 17)
!2285 = !DILocation(line: 114, column: 17, scope: !2284)
!2286 = !DILocation(line: 116, column: 9, scope: !2250)
!2287 = !DILocation(line: 117, column: 5, scope: !2242)
!2288 = !DILocation(line: 94, column: 28, scope: !2237)
!2289 = !DILocation(line: 94, column: 3, scope: !2237)
!2290 = distinct !{!2290, !2239, !2291}
!2291 = !DILocation(line: 117, column: 5, scope: !2234)
!2292 = !DILocation(line: 118, column: 7, scope: !2293)
!2293 = distinct !DILexicalBlock(scope: !2211, file: !107, line: 118, column: 7)
!2294 = !DILocation(line: 118, column: 7, scope: !2211)
!2295 = !DILocation(line: 119, column: 5, scope: !2293)
!2296 = !DILocation(line: 121, column: 12, scope: !2293)
!2297 = !DILocation(line: 121, column: 5, scope: !2293)
!2298 = !DILocation(line: 122, column: 1, scope: !2211)
!2299 = distinct !DISubprogram(name: "argmatch_invalid", scope: !107, file: !107, line: 130, type: !2300, isLocal: false, isDefinition: true, scopeLine: 131, flags: DIFlagPrototyped, isOptimized: false, unit: !106, variables: !48)
!2300 = !DISubroutineType(types: !2301)
!2301 = !{null, !35, !35, !315}
!2302 = !DILocalVariable(name: "context", arg: 1, scope: !2299, file: !107, line: 130, type: !35)
!2303 = !DILocation(line: 130, column: 31, scope: !2299)
!2304 = !DILocalVariable(name: "value", arg: 2, scope: !2299, file: !107, line: 130, type: !35)
!2305 = !DILocation(line: 130, column: 52, scope: !2299)
!2306 = !DILocalVariable(name: "problem", arg: 3, scope: !2299, file: !107, line: 130, type: !315)
!2307 = !DILocation(line: 130, column: 69, scope: !2299)
!2308 = !DILocalVariable(name: "format", scope: !2299, file: !107, line: 132, type: !35)
!2309 = !DILocation(line: 132, column: 15, scope: !2299)
!2310 = !DILocation(line: 132, column: 25, scope: !2299)
!2311 = !DILocation(line: 132, column: 33, scope: !2299)
!2312 = !DILocation(line: 136, column: 16, scope: !2299)
!2313 = !DILocation(line: 136, column: 69, scope: !2299)
!2314 = !DILocation(line: 136, column: 24, scope: !2299)
!2315 = !DILocation(line: 137, column: 22, scope: !2299)
!2316 = !DILocation(line: 137, column: 10, scope: !2299)
!2317 = !DILocation(line: 136, column: 3, scope: !2299)
!2318 = !DILocation(line: 138, column: 1, scope: !2299)
!2319 = distinct !DISubprogram(name: "argmatch_valid", scope: !107, file: !107, line: 145, type: !2320, isLocal: false, isDefinition: true, scopeLine: 147, flags: DIFlagPrototyped, isOptimized: false, unit: !106, variables: !48)
!2320 = !DISubroutineType(types: !2321)
!2321 = !{null, !1972, !35, !143}
!2322 = !DILocalVariable(name: "arglist", arg: 1, scope: !2319, file: !107, line: 145, type: !1972)
!2323 = !DILocation(line: 145, column: 36, scope: !2319)
!2324 = !DILocalVariable(name: "vallist", arg: 2, scope: !2319, file: !107, line: 146, type: !35)
!2325 = !DILocation(line: 146, column: 29, scope: !2319)
!2326 = !DILocalVariable(name: "valsize", arg: 3, scope: !2319, file: !107, line: 146, type: !143)
!2327 = !DILocation(line: 146, column: 45, scope: !2319)
!2328 = !DILocalVariable(name: "i", scope: !2319, file: !107, line: 148, type: !143)
!2329 = !DILocation(line: 148, column: 10, scope: !2319)
!2330 = !DILocalVariable(name: "last_val", scope: !2319, file: !107, line: 149, type: !35)
!2331 = !DILocation(line: 149, column: 15, scope: !2319)
!2332 = !DILocation(line: 153, column: 12, scope: !2319)
!2333 = !DILocation(line: 153, column: 3, scope: !2319)
!2334 = !DILocation(line: 154, column: 10, scope: !2335)
!2335 = distinct !DILexicalBlock(scope: !2319, file: !107, line: 154, column: 3)
!2336 = !DILocation(line: 154, column: 8, scope: !2335)
!2337 = !DILocation(line: 154, column: 15, scope: !2338)
!2338 = distinct !DILexicalBlock(scope: !2335, file: !107, line: 154, column: 3)
!2339 = !DILocation(line: 154, column: 23, scope: !2338)
!2340 = !DILocation(line: 154, column: 3, scope: !2335)
!2341 = !DILocation(line: 155, column: 10, scope: !2342)
!2342 = distinct !DILexicalBlock(scope: !2338, file: !107, line: 155, column: 9)
!2343 = !DILocation(line: 155, column: 12, scope: !2342)
!2344 = !DILocation(line: 156, column: 9, scope: !2342)
!2345 = !DILocation(line: 156, column: 20, scope: !2342)
!2346 = !DILocation(line: 156, column: 30, scope: !2342)
!2347 = !DILocation(line: 156, column: 40, scope: !2342)
!2348 = !DILocation(line: 156, column: 50, scope: !2342)
!2349 = !DILocation(line: 156, column: 48, scope: !2342)
!2350 = !DILocation(line: 156, column: 38, scope: !2342)
!2351 = !DILocation(line: 156, column: 53, scope: !2342)
!2352 = !DILocation(line: 156, column: 12, scope: !2342)
!2353 = !DILocation(line: 155, column: 9, scope: !2338)
!2354 = !DILocation(line: 158, column: 18, scope: !2355)
!2355 = distinct !DILexicalBlock(scope: !2342, file: !107, line: 157, column: 7)
!2356 = !DILocation(line: 158, column: 40, scope: !2355)
!2357 = !DILocation(line: 158, column: 48, scope: !2355)
!2358 = !DILocation(line: 158, column: 9, scope: !2355)
!2359 = !DILocation(line: 159, column: 20, scope: !2355)
!2360 = !DILocation(line: 159, column: 30, scope: !2355)
!2361 = !DILocation(line: 159, column: 40, scope: !2355)
!2362 = !DILocation(line: 159, column: 38, scope: !2355)
!2363 = !DILocation(line: 159, column: 28, scope: !2355)
!2364 = !DILocation(line: 159, column: 18, scope: !2355)
!2365 = !DILocation(line: 160, column: 7, scope: !2355)
!2366 = !DILocation(line: 163, column: 18, scope: !2367)
!2367 = distinct !DILexicalBlock(scope: !2342, file: !107, line: 162, column: 7)
!2368 = !DILocation(line: 163, column: 36, scope: !2367)
!2369 = !DILocation(line: 163, column: 44, scope: !2367)
!2370 = !DILocation(line: 163, column: 9, scope: !2367)
!2371 = !DILocation(line: 156, column: 60, scope: !2342)
!2372 = !DILocation(line: 154, column: 28, scope: !2338)
!2373 = !DILocation(line: 154, column: 3, scope: !2338)
!2374 = distinct !{!2374, !2340, !2375}
!2375 = !DILocation(line: 164, column: 7, scope: !2335)
!2376 = !DILocation(line: 165, column: 3, scope: !2319)
!2377 = !DILocation(line: 166, column: 1, scope: !2319)
!2378 = distinct !DISubprogram(name: "__xargmatch_internal", scope: !107, file: !107, line: 175, type: !2379, isLocal: false, isDefinition: true, scopeLine: 179, flags: DIFlagPrototyped, isOptimized: false, unit: !106, variables: !48)
!2379 = !DISubroutineType(types: !2380)
!2380 = !{!315, !35, !35, !1972, !35, !143, !113}
!2381 = !DILocalVariable(name: "context", arg: 1, scope: !2378, file: !107, line: 175, type: !35)
!2382 = !DILocation(line: 175, column: 35, scope: !2378)
!2383 = !DILocalVariable(name: "arg", arg: 2, scope: !2378, file: !107, line: 176, type: !35)
!2384 = !DILocation(line: 176, column: 35, scope: !2378)
!2385 = !DILocalVariable(name: "arglist", arg: 3, scope: !2378, file: !107, line: 176, type: !1972)
!2386 = !DILocation(line: 176, column: 59, scope: !2378)
!2387 = !DILocalVariable(name: "vallist", arg: 4, scope: !2378, file: !107, line: 177, type: !35)
!2388 = !DILocation(line: 177, column: 35, scope: !2378)
!2389 = !DILocalVariable(name: "valsize", arg: 5, scope: !2378, file: !107, line: 177, type: !143)
!2390 = !DILocation(line: 177, column: 51, scope: !2378)
!2391 = !DILocalVariable(name: "exit_fn", arg: 6, scope: !2378, file: !107, line: 178, type: !113)
!2392 = !DILocation(line: 178, column: 40, scope: !2378)
!2393 = !DILocalVariable(name: "res", scope: !2378, file: !107, line: 180, type: !315)
!2394 = !DILocation(line: 180, column: 13, scope: !2378)
!2395 = !DILocation(line: 180, column: 29, scope: !2378)
!2396 = !DILocation(line: 180, column: 34, scope: !2378)
!2397 = !DILocation(line: 180, column: 43, scope: !2378)
!2398 = !DILocation(line: 180, column: 52, scope: !2378)
!2399 = !DILocation(line: 180, column: 19, scope: !2378)
!2400 = !DILocation(line: 181, column: 7, scope: !2401)
!2401 = distinct !DILexicalBlock(scope: !2378, file: !107, line: 181, column: 7)
!2402 = !DILocation(line: 181, column: 11, scope: !2401)
!2403 = !DILocation(line: 181, column: 7, scope: !2378)
!2404 = !DILocation(line: 183, column: 12, scope: !2401)
!2405 = !DILocation(line: 183, column: 5, scope: !2401)
!2406 = !DILocation(line: 186, column: 21, scope: !2378)
!2407 = !DILocation(line: 186, column: 30, scope: !2378)
!2408 = !DILocation(line: 186, column: 35, scope: !2378)
!2409 = !DILocation(line: 186, column: 3, scope: !2378)
!2410 = !DILocation(line: 187, column: 19, scope: !2378)
!2411 = !DILocation(line: 187, column: 28, scope: !2378)
!2412 = !DILocation(line: 187, column: 37, scope: !2378)
!2413 = !DILocation(line: 187, column: 3, scope: !2378)
!2414 = !DILocation(line: 188, column: 5, scope: !2378)
!2415 = !DILocation(line: 188, column: 3, scope: !2378)
!2416 = !DILocation(line: 190, column: 3, scope: !2378)
!2417 = !DILocation(line: 191, column: 1, scope: !2378)
!2418 = distinct !DISubprogram(name: "argmatch_to_argument", scope: !107, file: !107, line: 196, type: !2419, isLocal: false, isDefinition: true, scopeLine: 199, flags: DIFlagPrototyped, isOptimized: false, unit: !106, variables: !48)
!2419 = !DISubroutineType(types: !2420)
!2420 = !{!35, !35, !1972, !35, !143}
!2421 = !DILocalVariable(name: "value", arg: 1, scope: !2418, file: !107, line: 196, type: !35)
!2422 = !DILocation(line: 196, column: 35, scope: !2418)
!2423 = !DILocalVariable(name: "arglist", arg: 2, scope: !2418, file: !107, line: 197, type: !1972)
!2424 = !DILocation(line: 197, column: 42, scope: !2418)
!2425 = !DILocalVariable(name: "vallist", arg: 3, scope: !2418, file: !107, line: 198, type: !35)
!2426 = !DILocation(line: 198, column: 35, scope: !2418)
!2427 = !DILocalVariable(name: "valsize", arg: 4, scope: !2418, file: !107, line: 198, type: !143)
!2428 = !DILocation(line: 198, column: 51, scope: !2418)
!2429 = !DILocalVariable(name: "i", scope: !2418, file: !107, line: 200, type: !143)
!2430 = !DILocation(line: 200, column: 10, scope: !2418)
!2431 = !DILocation(line: 202, column: 10, scope: !2432)
!2432 = distinct !DILexicalBlock(scope: !2418, file: !107, line: 202, column: 3)
!2433 = !DILocation(line: 202, column: 8, scope: !2432)
!2434 = !DILocation(line: 202, column: 15, scope: !2435)
!2435 = distinct !DILexicalBlock(scope: !2432, file: !107, line: 202, column: 3)
!2436 = !DILocation(line: 202, column: 23, scope: !2435)
!2437 = !DILocation(line: 202, column: 3, scope: !2432)
!2438 = !DILocation(line: 203, column: 18, scope: !2439)
!2439 = distinct !DILexicalBlock(scope: !2435, file: !107, line: 203, column: 9)
!2440 = !DILocation(line: 203, column: 25, scope: !2439)
!2441 = !DILocation(line: 203, column: 35, scope: !2439)
!2442 = !DILocation(line: 203, column: 45, scope: !2439)
!2443 = !DILocation(line: 203, column: 43, scope: !2439)
!2444 = !DILocation(line: 203, column: 33, scope: !2439)
!2445 = !DILocation(line: 203, column: 48, scope: !2439)
!2446 = !DILocation(line: 203, column: 10, scope: !2439)
!2447 = !DILocation(line: 203, column: 9, scope: !2435)
!2448 = !DILocation(line: 204, column: 14, scope: !2439)
!2449 = !DILocation(line: 204, column: 22, scope: !2439)
!2450 = !DILocation(line: 204, column: 7, scope: !2439)
!2451 = !DILocation(line: 203, column: 55, scope: !2439)
!2452 = !DILocation(line: 202, column: 28, scope: !2435)
!2453 = !DILocation(line: 202, column: 3, scope: !2435)
!2454 = distinct !{!2454, !2437, !2455}
!2455 = !DILocation(line: 204, column: 23, scope: !2432)
!2456 = !DILocation(line: 205, column: 3, scope: !2418)
!2457 = !DILocation(line: 206, column: 1, scope: !2418)
!2458 = distinct !DISubprogram(name: "last_component", scope: !272, file: !272, line: 30, type: !2459, isLocal: false, isDefinition: true, scopeLine: 31, flags: DIFlagPrototyped, isOptimized: false, unit: !271, variables: !48)
!2459 = !DISubroutineType(types: !2460)
!2460 = !{!38, !35}
!2461 = !DILocalVariable(name: "name", arg: 1, scope: !2458, file: !272, line: 30, type: !35)
!2462 = !DILocation(line: 30, column: 29, scope: !2458)
!2463 = !DILocalVariable(name: "base", scope: !2458, file: !272, line: 32, type: !35)
!2464 = !DILocation(line: 32, column: 15, scope: !2458)
!2465 = !DILocation(line: 32, column: 22, scope: !2458)
!2466 = !DILocation(line: 32, column: 27, scope: !2458)
!2467 = !DILocalVariable(name: "p", scope: !2458, file: !272, line: 33, type: !35)
!2468 = !DILocation(line: 33, column: 15, scope: !2458)
!2469 = !DILocalVariable(name: "saw_slash", scope: !2458, file: !272, line: 34, type: !131)
!2470 = !DILocation(line: 34, column: 8, scope: !2458)
!2471 = !DILocation(line: 36, column: 3, scope: !2458)
!2472 = !DILocation(line: 36, column: 10, scope: !2458)
!2473 = !DILocation(line: 37, column: 9, scope: !2458)
!2474 = distinct !{!2474, !2471, !2473}
!2475 = !DILocation(line: 39, column: 12, scope: !2476)
!2476 = distinct !DILexicalBlock(scope: !2458, file: !272, line: 39, column: 3)
!2477 = !DILocation(line: 39, column: 10, scope: !2476)
!2478 = !DILocation(line: 39, column: 8, scope: !2476)
!2479 = !DILocation(line: 39, column: 19, scope: !2480)
!2480 = distinct !DILexicalBlock(scope: !2476, file: !272, line: 39, column: 3)
!2481 = !DILocation(line: 39, column: 18, scope: !2480)
!2482 = !DILocation(line: 39, column: 3, scope: !2476)
!2483 = !DILocation(line: 41, column: 11, scope: !2484)
!2484 = distinct !DILexicalBlock(scope: !2485, file: !272, line: 41, column: 11)
!2485 = distinct !DILexicalBlock(scope: !2480, file: !272, line: 40, column: 5)
!2486 = !DILocation(line: 41, column: 11, scope: !2485)
!2487 = !DILocation(line: 42, column: 19, scope: !2484)
!2488 = !DILocation(line: 42, column: 9, scope: !2484)
!2489 = !DILocation(line: 43, column: 16, scope: !2490)
!2490 = distinct !DILexicalBlock(scope: !2484, file: !272, line: 43, column: 16)
!2491 = !DILocation(line: 43, column: 16, scope: !2484)
!2492 = !DILocation(line: 45, column: 18, scope: !2493)
!2493 = distinct !DILexicalBlock(scope: !2490, file: !272, line: 44, column: 9)
!2494 = !DILocation(line: 45, column: 16, scope: !2493)
!2495 = !DILocation(line: 46, column: 21, scope: !2493)
!2496 = !DILocation(line: 47, column: 9, scope: !2493)
!2497 = !DILocation(line: 48, column: 5, scope: !2485)
!2498 = !DILocation(line: 39, column: 23, scope: !2480)
!2499 = !DILocation(line: 39, column: 3, scope: !2480)
!2500 = distinct !{!2500, !2482, !2501}
!2501 = !DILocation(line: 48, column: 5, scope: !2476)
!2502 = !DILocation(line: 50, column: 19, scope: !2458)
!2503 = !DILocation(line: 50, column: 3, scope: !2458)
!2504 = distinct !DISubprogram(name: "base_len", scope: !272, file: !272, line: 58, type: !2505, isLocal: false, isDefinition: true, scopeLine: 59, flags: DIFlagPrototyped, isOptimized: false, unit: !271, variables: !48)
!2505 = !DISubroutineType(types: !2506)
!2506 = !{!143, !35}
!2507 = !DILocalVariable(name: "name", arg: 1, scope: !2504, file: !272, line: 58, type: !35)
!2508 = !DILocation(line: 58, column: 23, scope: !2504)
!2509 = !DILocalVariable(name: "len", scope: !2504, file: !272, line: 60, type: !143)
!2510 = !DILocation(line: 60, column: 10, scope: !2504)
!2511 = !DILocalVariable(name: "prefix_len", scope: !2504, file: !272, line: 61, type: !143)
!2512 = !DILocation(line: 61, column: 10, scope: !2504)
!2513 = !DILocation(line: 63, column: 22, scope: !2514)
!2514 = distinct !DILexicalBlock(scope: !2504, file: !272, line: 63, column: 3)
!2515 = !DILocation(line: 63, column: 14, scope: !2514)
!2516 = !DILocation(line: 63, column: 12, scope: !2514)
!2517 = !DILocation(line: 63, column: 8, scope: !2514)
!2518 = !DILocation(line: 63, column: 34, scope: !2519)
!2519 = distinct !DILexicalBlock(scope: !2514, file: !272, line: 63, column: 3)
!2520 = !DILocation(line: 63, column: 32, scope: !2519)
!2521 = !DILocation(line: 63, column: 38, scope: !2519)
!2522 = !DILocation(line: 63, column: 41, scope: !2519)
!2523 = !DILocation(line: 63, column: 3, scope: !2514)
!2524 = !DILocation(line: 64, column: 5, scope: !2519)
!2525 = !DILocation(line: 63, column: 70, scope: !2519)
!2526 = !DILocation(line: 63, column: 3, scope: !2519)
!2527 = distinct !{!2527, !2523, !2528}
!2528 = !DILocation(line: 64, column: 5, scope: !2514)
!2529 = !DILocation(line: 74, column: 10, scope: !2504)
!2530 = !DILocation(line: 74, column: 3, scope: !2504)
!2531 = distinct !DISubprogram(name: "close_stdin_set_file_name", scope: !121, file: !121, line: 43, type: !1863, isLocal: false, isDefinition: true, scopeLine: 44, flags: DIFlagPrototyped, isOptimized: false, unit: !120, variables: !48)
!2532 = !DILocalVariable(name: "file", arg: 1, scope: !2531, file: !121, line: 43, type: !35)
!2533 = !DILocation(line: 43, column: 40, scope: !2531)
!2534 = !DILocation(line: 45, column: 15, scope: !2531)
!2535 = !DILocation(line: 45, column: 13, scope: !2531)
!2536 = !DILocation(line: 46, column: 1, scope: !2531)
!2537 = distinct !DISubprogram(name: "close_stdin", scope: !121, file: !121, line: 79, type: !116, isLocal: false, isDefinition: true, scopeLine: 80, flags: DIFlagPrototyped, isOptimized: false, unit: !120, variables: !48)
!2538 = !DILocalVariable(name: "fail", scope: !2537, file: !121, line: 81, type: !131)
!2539 = !DILocation(line: 81, column: 8, scope: !2537)
!2540 = !DILocation(line: 86, column: 19, scope: !2541)
!2541 = distinct !DILexicalBlock(scope: !2537, file: !121, line: 86, column: 7)
!2542 = !DILocation(line: 86, column: 7, scope: !2541)
!2543 = !DILocation(line: 86, column: 26, scope: !2541)
!2544 = !DILocation(line: 86, column: 7, scope: !2537)
!2545 = !DILocation(line: 90, column: 19, scope: !2546)
!2546 = distinct !DILexicalBlock(scope: !2547, file: !121, line: 90, column: 11)
!2547 = distinct !DILexicalBlock(scope: !2541, file: !121, line: 87, column: 5)
!2548 = !DILocation(line: 90, column: 11, scope: !2546)
!2549 = !DILocation(line: 90, column: 39, scope: !2546)
!2550 = !DILocation(line: 90, column: 44, scope: !2546)
!2551 = !DILocation(line: 90, column: 55, scope: !2546)
!2552 = !DILocation(line: 90, column: 47, scope: !2546)
!2553 = !DILocation(line: 90, column: 62, scope: !2546)
!2554 = !DILocation(line: 90, column: 11, scope: !2547)
!2555 = !DILocation(line: 91, column: 14, scope: !2546)
!2556 = !DILocation(line: 91, column: 9, scope: !2546)
!2557 = !DILocation(line: 92, column: 5, scope: !2547)
!2558 = !DILocation(line: 93, column: 21, scope: !2559)
!2559 = distinct !DILexicalBlock(scope: !2537, file: !121, line: 93, column: 7)
!2560 = !DILocation(line: 93, column: 7, scope: !2559)
!2561 = !DILocation(line: 93, column: 28, scope: !2559)
!2562 = !DILocation(line: 93, column: 7, scope: !2537)
!2563 = !DILocation(line: 94, column: 10, scope: !2559)
!2564 = !DILocation(line: 94, column: 5, scope: !2559)
!2565 = !DILocation(line: 95, column: 7, scope: !2566)
!2566 = distinct !DILexicalBlock(scope: !2537, file: !121, line: 95, column: 7)
!2567 = !DILocation(line: 95, column: 7, scope: !2537)
!2568 = !DILocalVariable(name: "close_error", scope: !2569, file: !121, line: 99, type: !35)
!2569 = distinct !DILexicalBlock(scope: !2566, file: !121, line: 96, column: 5)
!2570 = !DILocation(line: 99, column: 19, scope: !2569)
!2571 = !DILocation(line: 100, column: 11, scope: !2572)
!2572 = distinct !DILexicalBlock(scope: !2569, file: !121, line: 100, column: 11)
!2573 = !DILocation(line: 100, column: 11, scope: !2569)
!2574 = !DILocation(line: 101, column: 19, scope: !2572)
!2575 = !DILocation(line: 101, column: 52, scope: !2572)
!2576 = !DILocation(line: 101, column: 36, scope: !2572)
!2577 = !DILocation(line: 102, column: 16, scope: !2572)
!2578 = !DILocation(line: 101, column: 9, scope: !2572)
!2579 = !DILocation(line: 104, column: 19, scope: !2572)
!2580 = !DILocation(line: 104, column: 32, scope: !2572)
!2581 = !DILocation(line: 104, column: 9, scope: !2572)
!2582 = !DILocation(line: 105, column: 5, scope: !2569)
!2583 = !DILocation(line: 107, column: 3, scope: !2537)
!2584 = !DILocation(line: 109, column: 7, scope: !2585)
!2585 = distinct !DILexicalBlock(scope: !2537, file: !121, line: 109, column: 7)
!2586 = !DILocation(line: 109, column: 7, scope: !2537)
!2587 = !DILocation(line: 110, column: 12, scope: !2585)
!2588 = !DILocation(line: 110, column: 5, scope: !2585)
!2589 = !DILocation(line: 111, column: 1, scope: !2537)
!2590 = distinct !DISubprogram(name: "close_stdout_set_file_name", scope: !127, file: !127, line: 41, type: !1863, isLocal: false, isDefinition: true, scopeLine: 42, flags: DIFlagPrototyped, isOptimized: false, unit: !126, variables: !48)
!2591 = !DILocalVariable(name: "file", arg: 1, scope: !2590, file: !127, line: 41, type: !35)
!2592 = !DILocation(line: 41, column: 41, scope: !2590)
!2593 = !DILocation(line: 43, column: 15, scope: !2590)
!2594 = !DILocation(line: 43, column: 13, scope: !2590)
!2595 = !DILocation(line: 44, column: 1, scope: !2590)
!2596 = distinct !DISubprogram(name: "close_stdout_set_ignore_EPIPE", scope: !127, file: !127, line: 78, type: !2597, isLocal: false, isDefinition: true, scopeLine: 79, flags: DIFlagPrototyped, isOptimized: false, unit: !126, variables: !48)
!2597 = !DISubroutineType(types: !2598)
!2598 = !{null, !131}
!2599 = !DILocalVariable(name: "ignore", arg: 1, scope: !2596, file: !127, line: 78, type: !131)
!2600 = !DILocation(line: 78, column: 37, scope: !2596)
!2601 = !DILocation(line: 80, column: 18, scope: !2596)
!2602 = !DILocation(line: 80, column: 16, scope: !2596)
!2603 = !DILocation(line: 81, column: 1, scope: !2596)
!2604 = distinct !DISubprogram(name: "close_stdout", scope: !127, file: !127, line: 107, type: !116, isLocal: false, isDefinition: true, scopeLine: 108, flags: DIFlagPrototyped, isOptimized: false, unit: !126, variables: !48)
!2605 = !DILocation(line: 109, column: 21, scope: !2606)
!2606 = distinct !DILexicalBlock(scope: !2604, file: !127, line: 109, column: 7)
!2607 = !DILocation(line: 109, column: 7, scope: !2606)
!2608 = !DILocation(line: 109, column: 29, scope: !2606)
!2609 = !DILocation(line: 110, column: 7, scope: !2606)
!2610 = !DILocation(line: 110, column: 12, scope: !2606)
!2611 = !DILocation(line: 110, column: 25, scope: !2606)
!2612 = !DILocation(line: 110, column: 28, scope: !2606)
!2613 = !DILocation(line: 110, column: 34, scope: !2606)
!2614 = !DILocation(line: 109, column: 7, scope: !2604)
!2615 = !DILocalVariable(name: "write_error", scope: !2616, file: !127, line: 112, type: !35)
!2616 = distinct !DILexicalBlock(scope: !2606, file: !127, line: 111, column: 5)
!2617 = !DILocation(line: 112, column: 19, scope: !2616)
!2618 = !DILocation(line: 113, column: 11, scope: !2619)
!2619 = distinct !DILexicalBlock(scope: !2616, file: !127, line: 113, column: 11)
!2620 = !DILocation(line: 113, column: 11, scope: !2616)
!2621 = !DILocation(line: 114, column: 19, scope: !2619)
!2622 = !DILocation(line: 114, column: 52, scope: !2619)
!2623 = !DILocation(line: 114, column: 36, scope: !2619)
!2624 = !DILocation(line: 115, column: 16, scope: !2619)
!2625 = !DILocation(line: 114, column: 9, scope: !2619)
!2626 = !DILocation(line: 117, column: 19, scope: !2619)
!2627 = !DILocation(line: 117, column: 32, scope: !2619)
!2628 = !DILocation(line: 117, column: 9, scope: !2619)
!2629 = !DILocation(line: 119, column: 14, scope: !2616)
!2630 = !DILocation(line: 119, column: 7, scope: !2616)
!2631 = !DILocation(line: 122, column: 22, scope: !2632)
!2632 = distinct !DILexicalBlock(scope: !2604, file: !127, line: 122, column: 8)
!2633 = !DILocation(line: 122, column: 8, scope: !2632)
!2634 = !DILocation(line: 122, column: 30, scope: !2632)
!2635 = !DILocation(line: 122, column: 8, scope: !2604)
!2636 = !DILocation(line: 123, column: 13, scope: !2632)
!2637 = !DILocation(line: 123, column: 6, scope: !2632)
!2638 = !DILocation(line: 124, column: 1, scope: !2604)
!2639 = distinct !DISubprogram(name: "rpl_fflush", scope: !275, file: !275, line: 117, type: !2640, isLocal: false, isDefinition: true, scopeLine: 118, flags: DIFlagPrototyped, isOptimized: false, unit: !274, variables: !48)
!2640 = !DISubroutineType(types: !2641)
!2641 = !{!46, !2642}
!2642 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2643, size: 64)
!2643 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !1925, line: 7, baseType: !2644)
!2644 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !1927, line: 245, size: 1728, elements: !2645)
!2645 = !{!2646, !2647, !2648, !2649, !2650, !2651, !2652, !2653, !2654, !2655, !2656, !2657, !2658, !2666, !2667, !2668, !2669, !2670, !2671, !2672, !2673, !2674, !2675, !2676, !2677, !2678, !2679, !2680, !2681}
!2646 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !2644, file: !1927, line: 246, baseType: !46, size: 32)
!2647 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !2644, file: !1927, line: 251, baseType: !38, size: 64, offset: 64)
!2648 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !2644, file: !1927, line: 252, baseType: !38, size: 64, offset: 128)
!2649 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !2644, file: !1927, line: 253, baseType: !38, size: 64, offset: 192)
!2650 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !2644, file: !1927, line: 254, baseType: !38, size: 64, offset: 256)
!2651 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !2644, file: !1927, line: 255, baseType: !38, size: 64, offset: 320)
!2652 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !2644, file: !1927, line: 256, baseType: !38, size: 64, offset: 384)
!2653 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !2644, file: !1927, line: 257, baseType: !38, size: 64, offset: 448)
!2654 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !2644, file: !1927, line: 258, baseType: !38, size: 64, offset: 512)
!2655 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !2644, file: !1927, line: 260, baseType: !38, size: 64, offset: 576)
!2656 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !2644, file: !1927, line: 261, baseType: !38, size: 64, offset: 640)
!2657 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !2644, file: !1927, line: 262, baseType: !38, size: 64, offset: 704)
!2658 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !2644, file: !1927, line: 264, baseType: !2659, size: 64, offset: 768)
!2659 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2660, size: 64)
!2660 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !1927, line: 160, size: 192, elements: !2661)
!2661 = !{!2662, !2663, !2665}
!2662 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !2660, file: !1927, line: 161, baseType: !2659, size: 64)
!2663 = !DIDerivedType(tag: DW_TAG_member, name: "_sbuf", scope: !2660, file: !1927, line: 162, baseType: !2664, size: 64, offset: 64)
!2664 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2644, size: 64)
!2665 = !DIDerivedType(tag: DW_TAG_member, name: "_pos", scope: !2660, file: !1927, line: 166, baseType: !46, size: 32, offset: 128)
!2666 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !2644, file: !1927, line: 266, baseType: !2664, size: 64, offset: 832)
!2667 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !2644, file: !1927, line: 268, baseType: !46, size: 32, offset: 896)
!2668 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !2644, file: !1927, line: 272, baseType: !46, size: 32, offset: 928)
!2669 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !2644, file: !1927, line: 274, baseType: !344, size: 64, offset: 960)
!2670 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !2644, file: !1927, line: 278, baseType: !183, size: 16, offset: 1024)
!2671 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !2644, file: !1927, line: 279, baseType: !1955, size: 8, offset: 1040)
!2672 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !2644, file: !1927, line: 280, baseType: !366, size: 8, offset: 1048)
!2673 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !2644, file: !1927, line: 284, baseType: !1958, size: 64, offset: 1088)
!2674 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !2644, file: !1927, line: 293, baseType: !1961, size: 64, offset: 1152)
!2675 = !DIDerivedType(tag: DW_TAG_member, name: "__pad1", scope: !2644, file: !1927, line: 301, baseType: !39, size: 64, offset: 1216)
!2676 = !DIDerivedType(tag: DW_TAG_member, name: "__pad2", scope: !2644, file: !1927, line: 302, baseType: !39, size: 64, offset: 1280)
!2677 = !DIDerivedType(tag: DW_TAG_member, name: "__pad3", scope: !2644, file: !1927, line: 303, baseType: !39, size: 64, offset: 1344)
!2678 = !DIDerivedType(tag: DW_TAG_member, name: "__pad4", scope: !2644, file: !1927, line: 304, baseType: !39, size: 64, offset: 1408)
!2679 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !2644, file: !1927, line: 306, baseType: !143, size: 64, offset: 1472)
!2680 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !2644, file: !1927, line: 307, baseType: !46, size: 32, offset: 1536)
!2681 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !2644, file: !1927, line: 309, baseType: !1969, size: 160, offset: 1568)
!2682 = !DILocalVariable(name: "stream", arg: 1, scope: !2639, file: !275, line: 117, type: !2642)
!2683 = !DILocation(line: 117, column: 19, scope: !2639)
!2684 = !DILocation(line: 138, column: 7, scope: !2685)
!2685 = distinct !DILexicalBlock(scope: !2639, file: !275, line: 138, column: 7)
!2686 = !DILocation(line: 138, column: 14, scope: !2685)
!2687 = !DILocation(line: 138, column: 22, scope: !2685)
!2688 = !DILocation(line: 138, column: 27, scope: !2685)
!2689 = !DILocation(line: 138, column: 7, scope: !2639)
!2690 = !DILocation(line: 139, column: 20, scope: !2685)
!2691 = !DILocation(line: 139, column: 12, scope: !2685)
!2692 = !DILocation(line: 139, column: 5, scope: !2685)
!2693 = !DILocation(line: 143, column: 44, scope: !2639)
!2694 = !DILocation(line: 143, column: 3, scope: !2639)
!2695 = !DILocation(line: 145, column: 18, scope: !2639)
!2696 = !DILocation(line: 145, column: 10, scope: !2639)
!2697 = !DILocation(line: 145, column: 3, scope: !2639)
!2698 = !DILocation(line: 218, column: 1, scope: !2639)
!2699 = distinct !DISubprogram(name: "clear_ungetc_buffer_preserving_position", scope: !275, file: !275, line: 38, type: !2700, isLocal: true, isDefinition: true, scopeLine: 39, flags: DIFlagPrototyped, isOptimized: false, unit: !274, variables: !48)
!2700 = !DISubroutineType(types: !2701)
!2701 = !{null, !2642}
!2702 = !DILocalVariable(name: "fp", arg: 1, scope: !2699, file: !275, line: 38, type: !2642)
!2703 = !DILocation(line: 38, column: 48, scope: !2699)
!2704 = !DILocation(line: 40, column: 7, scope: !2705)
!2705 = distinct !DILexicalBlock(scope: !2699, file: !275, line: 40, column: 7)
!2706 = !DILocation(line: 40, column: 11, scope: !2705)
!2707 = !DILocation(line: 40, column: 18, scope: !2705)
!2708 = !DILocation(line: 40, column: 7, scope: !2699)
!2709 = !DILocation(line: 42, column: 13, scope: !2705)
!2710 = !DILocation(line: 42, column: 5, scope: !2705)
!2711 = !DILocation(line: 43, column: 1, scope: !2699)
!2712 = distinct !DISubprogram(name: "file_type", scope: !278, file: !278, line: 29, type: !2713, isLocal: false, isDefinition: true, scopeLine: 30, flags: DIFlagPrototyped, isOptimized: false, unit: !277, variables: !48)
!2713 = !DISubroutineType(types: !2714)
!2714 = !{!35, !2715}
!2715 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2716, size: 64)
!2716 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2717)
!2717 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !328, line: 46, size: 1152, elements: !2718)
!2718 = !{!2719, !2720, !2721, !2722, !2723, !2724, !2725, !2726, !2727, !2728, !2729, !2730, !2735, !2736, !2737}
!2719 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !2717, file: !328, line: 48, baseType: !331, size: 64)
!2720 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !2717, file: !328, line: 53, baseType: !333, size: 64, offset: 64)
!2721 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !2717, file: !328, line: 61, baseType: !320, size: 64, offset: 128)
!2722 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !2717, file: !328, line: 62, baseType: !336, size: 32, offset: 192)
!2723 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !2717, file: !328, line: 64, baseType: !338, size: 32, offset: 224)
!2724 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !2717, file: !328, line: 65, baseType: !340, size: 32, offset: 256)
!2725 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !2717, file: !328, line: 67, baseType: !46, size: 32, offset: 288)
!2726 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !2717, file: !328, line: 69, baseType: !331, size: 64, offset: 320)
!2727 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !2717, file: !328, line: 74, baseType: !344, size: 64, offset: 384)
!2728 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !2717, file: !328, line: 78, baseType: !346, size: 64, offset: 448)
!2729 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !2717, file: !328, line: 80, baseType: !348, size: 64, offset: 512)
!2730 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !2717, file: !328, line: 91, baseType: !2731, size: 128, offset: 576)
!2731 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !351, line: 8, size: 128, elements: !2732)
!2732 = !{!2733, !2734}
!2733 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !2731, file: !351, line: 10, baseType: !354, size: 64)
!2734 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !2731, file: !351, line: 11, baseType: !356, size: 64, offset: 64)
!2735 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !2717, file: !328, line: 92, baseType: !2731, size: 128, offset: 704)
!2736 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !2717, file: !328, line: 93, baseType: !2731, size: 128, offset: 832)
!2737 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !2717, file: !328, line: 106, baseType: !360, size: 192, offset: 960)
!2738 = !DILocalVariable(name: "st", arg: 1, scope: !2712, file: !278, line: 29, type: !2715)
!2739 = !DILocation(line: 29, column: 31, scope: !2712)
!2740 = !DILocation(line: 37, column: 7, scope: !2741)
!2741 = distinct !DILexicalBlock(scope: !2712, file: !278, line: 37, column: 7)
!2742 = !DILocation(line: 37, column: 7, scope: !2712)
!2743 = !DILocation(line: 38, column: 12, scope: !2741)
!2744 = !DILocation(line: 38, column: 16, scope: !2741)
!2745 = !DILocation(line: 38, column: 24, scope: !2741)
!2746 = !DILocation(line: 38, column: 5, scope: !2741)
!2747 = !DILocation(line: 40, column: 7, scope: !2748)
!2748 = distinct !DILexicalBlock(scope: !2712, file: !278, line: 40, column: 7)
!2749 = !DILocation(line: 40, column: 7, scope: !2712)
!2750 = !DILocation(line: 41, column: 5, scope: !2748)
!2751 = !DILocation(line: 43, column: 7, scope: !2752)
!2752 = distinct !DILexicalBlock(scope: !2712, file: !278, line: 43, column: 7)
!2753 = !DILocation(line: 43, column: 7, scope: !2712)
!2754 = !DILocation(line: 44, column: 5, scope: !2752)
!2755 = !DILocation(line: 46, column: 7, scope: !2756)
!2756 = distinct !DILexicalBlock(scope: !2712, file: !278, line: 46, column: 7)
!2757 = !DILocation(line: 46, column: 7, scope: !2712)
!2758 = !DILocation(line: 47, column: 5, scope: !2756)
!2759 = !DILocation(line: 49, column: 7, scope: !2760)
!2760 = distinct !DILexicalBlock(scope: !2712, file: !278, line: 49, column: 7)
!2761 = !DILocation(line: 49, column: 7, scope: !2712)
!2762 = !DILocation(line: 50, column: 5, scope: !2760)
!2763 = !DILocation(line: 52, column: 7, scope: !2764)
!2764 = distinct !DILexicalBlock(scope: !2712, file: !278, line: 52, column: 7)
!2765 = !DILocation(line: 52, column: 7, scope: !2712)
!2766 = !DILocation(line: 53, column: 5, scope: !2764)
!2767 = !DILocation(line: 55, column: 7, scope: !2768)
!2768 = distinct !DILexicalBlock(scope: !2712, file: !278, line: 55, column: 7)
!2769 = !DILocation(line: 55, column: 7, scope: !2712)
!2770 = !DILocation(line: 56, column: 5, scope: !2768)
!2771 = !DILocation(line: 58, column: 7, scope: !2772)
!2772 = distinct !DILexicalBlock(scope: !2712, file: !278, line: 58, column: 7)
!2773 = !DILocation(line: 58, column: 7, scope: !2712)
!2774 = !DILocation(line: 59, column: 5, scope: !2772)
!2775 = !DILocation(line: 61, column: 7, scope: !2776)
!2776 = distinct !DILexicalBlock(scope: !2712, file: !278, line: 61, column: 7)
!2777 = !DILocation(line: 61, column: 7, scope: !2712)
!2778 = !DILocation(line: 62, column: 5, scope: !2776)
!2779 = !DILocation(line: 64, column: 7, scope: !2780)
!2780 = distinct !DILexicalBlock(scope: !2712, file: !278, line: 64, column: 7)
!2781 = !DILocation(line: 64, column: 7, scope: !2712)
!2782 = !DILocation(line: 65, column: 5, scope: !2780)
!2783 = !DILocation(line: 70, column: 3, scope: !2712)
!2784 = !DILocation(line: 71, column: 1, scope: !2712)
!2785 = distinct !DISubprogram(name: "rpl_fseeko", scope: !280, file: !280, line: 35, type: !2786, isLocal: false, isDefinition: true, scopeLine: 36, flags: DIFlagPrototyped, isOptimized: false, unit: !279, variables: !48)
!2786 = !DISubroutineType(types: !2787)
!2787 = !{!46, !2788, !2828, !46}
!2788 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2789, size: 64)
!2789 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !1925, line: 7, baseType: !2790)
!2790 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !1927, line: 245, size: 1728, elements: !2791)
!2791 = !{!2792, !2793, !2794, !2795, !2796, !2797, !2798, !2799, !2800, !2801, !2802, !2803, !2804, !2812, !2813, !2814, !2815, !2816, !2817, !2818, !2819, !2820, !2821, !2822, !2823, !2824, !2825, !2826, !2827}
!2792 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !2790, file: !1927, line: 246, baseType: !46, size: 32)
!2793 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !2790, file: !1927, line: 251, baseType: !38, size: 64, offset: 64)
!2794 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !2790, file: !1927, line: 252, baseType: !38, size: 64, offset: 128)
!2795 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !2790, file: !1927, line: 253, baseType: !38, size: 64, offset: 192)
!2796 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !2790, file: !1927, line: 254, baseType: !38, size: 64, offset: 256)
!2797 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !2790, file: !1927, line: 255, baseType: !38, size: 64, offset: 320)
!2798 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !2790, file: !1927, line: 256, baseType: !38, size: 64, offset: 384)
!2799 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !2790, file: !1927, line: 257, baseType: !38, size: 64, offset: 448)
!2800 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !2790, file: !1927, line: 258, baseType: !38, size: 64, offset: 512)
!2801 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !2790, file: !1927, line: 260, baseType: !38, size: 64, offset: 576)
!2802 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !2790, file: !1927, line: 261, baseType: !38, size: 64, offset: 640)
!2803 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !2790, file: !1927, line: 262, baseType: !38, size: 64, offset: 704)
!2804 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !2790, file: !1927, line: 264, baseType: !2805, size: 64, offset: 768)
!2805 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2806, size: 64)
!2806 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !1927, line: 160, size: 192, elements: !2807)
!2807 = !{!2808, !2809, !2811}
!2808 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !2806, file: !1927, line: 161, baseType: !2805, size: 64)
!2809 = !DIDerivedType(tag: DW_TAG_member, name: "_sbuf", scope: !2806, file: !1927, line: 162, baseType: !2810, size: 64, offset: 64)
!2810 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2790, size: 64)
!2811 = !DIDerivedType(tag: DW_TAG_member, name: "_pos", scope: !2806, file: !1927, line: 166, baseType: !46, size: 32, offset: 128)
!2812 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !2790, file: !1927, line: 266, baseType: !2810, size: 64, offset: 832)
!2813 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !2790, file: !1927, line: 268, baseType: !46, size: 32, offset: 896)
!2814 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !2790, file: !1927, line: 272, baseType: !46, size: 32, offset: 928)
!2815 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !2790, file: !1927, line: 274, baseType: !344, size: 64, offset: 960)
!2816 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !2790, file: !1927, line: 278, baseType: !183, size: 16, offset: 1024)
!2817 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !2790, file: !1927, line: 279, baseType: !1955, size: 8, offset: 1040)
!2818 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !2790, file: !1927, line: 280, baseType: !366, size: 8, offset: 1048)
!2819 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !2790, file: !1927, line: 284, baseType: !1958, size: 64, offset: 1088)
!2820 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !2790, file: !1927, line: 293, baseType: !1961, size: 64, offset: 1152)
!2821 = !DIDerivedType(tag: DW_TAG_member, name: "__pad1", scope: !2790, file: !1927, line: 301, baseType: !39, size: 64, offset: 1216)
!2822 = !DIDerivedType(tag: DW_TAG_member, name: "__pad2", scope: !2790, file: !1927, line: 302, baseType: !39, size: 64, offset: 1280)
!2823 = !DIDerivedType(tag: DW_TAG_member, name: "__pad3", scope: !2790, file: !1927, line: 303, baseType: !39, size: 64, offset: 1344)
!2824 = !DIDerivedType(tag: DW_TAG_member, name: "__pad4", scope: !2790, file: !1927, line: 304, baseType: !39, size: 64, offset: 1408)
!2825 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !2790, file: !1927, line: 306, baseType: !143, size: 64, offset: 1472)
!2826 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !2790, file: !1927, line: 307, baseType: !46, size: 32, offset: 1536)
!2827 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !2790, file: !1927, line: 309, baseType: !1969, size: 160, offset: 1568)
!2828 = !DIDerivedType(tag: DW_TAG_typedef, name: "off_t", file: !2188, line: 57, baseType: !344)
!2829 = !DILocalVariable(name: "fp", arg: 1, scope: !2785, file: !280, line: 35, type: !2788)
!2830 = !DILocation(line: 35, column: 19, scope: !2785)
!2831 = !DILocalVariable(name: "offset", arg: 2, scope: !2785, file: !280, line: 35, type: !2828)
!2832 = !DILocation(line: 35, column: 29, scope: !2785)
!2833 = !DILocalVariable(name: "whence", arg: 3, scope: !2785, file: !280, line: 35, type: !46)
!2834 = !DILocation(line: 35, column: 41, scope: !2785)
!2835 = !DILocation(line: 45, column: 7, scope: !2836)
!2836 = distinct !DILexicalBlock(scope: !2785, file: !280, line: 45, column: 7)
!2837 = !DILocation(line: 45, column: 11, scope: !2836)
!2838 = !DILocation(line: 45, column: 27, scope: !2836)
!2839 = !DILocation(line: 45, column: 31, scope: !2836)
!2840 = !DILocation(line: 45, column: 24, scope: !2836)
!2841 = !DILocation(line: 46, column: 7, scope: !2836)
!2842 = !DILocation(line: 46, column: 10, scope: !2836)
!2843 = !DILocation(line: 46, column: 14, scope: !2836)
!2844 = !DILocation(line: 46, column: 31, scope: !2836)
!2845 = !DILocation(line: 46, column: 35, scope: !2836)
!2846 = !DILocation(line: 46, column: 28, scope: !2836)
!2847 = !DILocation(line: 47, column: 7, scope: !2836)
!2848 = !DILocation(line: 47, column: 10, scope: !2836)
!2849 = !DILocation(line: 47, column: 14, scope: !2836)
!2850 = !DILocation(line: 47, column: 28, scope: !2836)
!2851 = !DILocation(line: 45, column: 7, scope: !2785)
!2852 = !DILocalVariable(name: "pos", scope: !2853, file: !280, line: 98, type: !2828)
!2853 = distinct !DILexicalBlock(scope: !2836, file: !280, line: 93, column: 5)
!2854 = !DILocation(line: 98, column: 13, scope: !2853)
!2855 = !DILocation(line: 99, column: 24, scope: !2853)
!2856 = !DILocation(line: 99, column: 16, scope: !2853)
!2857 = !DILocation(line: 100, column: 16, scope: !2853)
!2858 = !DILocation(line: 100, column: 23, scope: !2853)
!2859 = !DILocation(line: 100, column: 35, scope: !2853)
!2860 = !DILocation(line: 100, column: 38, scope: !2853)
!2861 = !DILocation(line: 100, column: 45, scope: !2853)
!2862 = !DILocation(line: 100, column: 55, scope: !2853)
!2863 = !DILocation(line: 101, column: 16, scope: !2853)
!2864 = !DILocation(line: 99, column: 9, scope: !2853)
!2865 = !DILocation(line: 102, column: 11, scope: !2866)
!2866 = distinct !DILexicalBlock(scope: !2853, file: !280, line: 102, column: 11)
!2867 = !DILocation(line: 102, column: 15, scope: !2866)
!2868 = !DILocation(line: 102, column: 11, scope: !2853)
!2869 = !DILocation(line: 107, column: 11, scope: !2870)
!2870 = distinct !DILexicalBlock(scope: !2866, file: !280, line: 103, column: 9)
!2871 = !DILocation(line: 111, column: 7, scope: !2853)
!2872 = !DILocation(line: 111, column: 11, scope: !2853)
!2873 = !DILocation(line: 111, column: 18, scope: !2853)
!2874 = !DILocation(line: 143, column: 13, scope: !2875)
!2875 = distinct !DILexicalBlock(scope: !2853, file: !280, line: 143, column: 11)
!2876 = !DILocation(line: 143, column: 20, scope: !2875)
!2877 = !DILocation(line: 143, column: 32, scope: !2875)
!2878 = !DILocation(line: 143, column: 35, scope: !2875)
!2879 = !DILocation(line: 143, column: 42, scope: !2875)
!2880 = !DILocation(line: 143, column: 11, scope: !2853)
!2881 = !DILocation(line: 144, column: 9, scope: !2875)
!2882 = !DILocation(line: 145, column: 5, scope: !2853)
!2883 = !DILocation(line: 146, column: 18, scope: !2785)
!2884 = !DILocation(line: 146, column: 22, scope: !2785)
!2885 = !DILocation(line: 146, column: 30, scope: !2785)
!2886 = !DILocation(line: 146, column: 10, scope: !2785)
!2887 = !DILocation(line: 146, column: 3, scope: !2785)
!2888 = !DILocation(line: 147, column: 1, scope: !2785)
!2889 = distinct !DISubprogram(name: "fts_open", scope: !282, file: !282, line: 369, type: !2890, isLocal: false, isDefinition: true, scopeLine: 372, flags: DIFlagPrototyped, isOptimized: false, unit: !281, variables: !48)
!2890 = !DISubroutineType(types: !2891)
!2891 = !{!293, !861, !46, !2892}
!2892 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2893, size: 64)
!2893 = !DISubroutineType(types: !2894)
!2894 = !{!46, !438, !438}
!2895 = !DILocalVariable(name: "argv", arg: 1, scope: !2889, file: !282, line: 369, type: !861)
!2896 = !DILocation(line: 369, column: 25, scope: !2889)
!2897 = !DILocalVariable(name: "options", arg: 2, scope: !2889, file: !282, line: 370, type: !46)
!2898 = !DILocation(line: 370, column: 24, scope: !2889)
!2899 = !DILocalVariable(name: "compar", arg: 3, scope: !2889, file: !282, line: 371, type: !2892)
!2900 = !DILocation(line: 371, column: 17, scope: !2889)
!2901 = !DILocalVariable(name: "sp", scope: !2889, file: !282, line: 373, type: !293)
!2902 = !DILocation(line: 373, column: 23, scope: !2889)
!2903 = !DILocalVariable(name: "p", scope: !2889, file: !282, line: 374, type: !2904)
!2904 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !441, size: 64)
!2905 = !DILocation(line: 374, column: 26, scope: !2889)
!2906 = !DILocalVariable(name: "root", scope: !2889, file: !282, line: 374, type: !2904)
!2907 = !DILocation(line: 374, column: 30, scope: !2889)
!2908 = !DILocalVariable(name: "nitems", scope: !2889, file: !282, line: 375, type: !143)
!2909 = !DILocation(line: 375, column: 25, scope: !2889)
!2910 = !DILocalVariable(name: "parent", scope: !2889, file: !282, line: 376, type: !2904)
!2911 = !DILocation(line: 376, column: 17, scope: !2889)
!2912 = !DILocalVariable(name: "tmp", scope: !2889, file: !282, line: 377, type: !2904)
!2913 = !DILocation(line: 377, column: 17, scope: !2889)
!2914 = !DILocalVariable(name: "defer_stat", scope: !2889, file: !282, line: 378, type: !131)
!2915 = !DILocation(line: 378, column: 14, scope: !2889)
!2916 = !DILocation(line: 381, column: 13, scope: !2917)
!2917 = distinct !DILexicalBlock(scope: !2889, file: !282, line: 381, column: 13)
!2918 = !DILocation(line: 381, column: 21, scope: !2917)
!2919 = !DILocation(line: 381, column: 13, scope: !2889)
!2920 = !DILocation(line: 382, column: 17, scope: !2921)
!2921 = distinct !DILexicalBlock(scope: !2917, file: !282, line: 381, column: 40)
!2922 = !DILocation(line: 383, column: 17, scope: !2921)
!2923 = !DILocation(line: 385, column: 14, scope: !2924)
!2924 = distinct !DILexicalBlock(scope: !2889, file: !282, line: 385, column: 13)
!2925 = !DILocation(line: 385, column: 22, scope: !2924)
!2926 = !DILocation(line: 385, column: 37, scope: !2924)
!2927 = !DILocation(line: 385, column: 41, scope: !2924)
!2928 = !DILocation(line: 385, column: 49, scope: !2924)
!2929 = !DILocation(line: 385, column: 13, scope: !2889)
!2930 = !DILocation(line: 386, column: 17, scope: !2931)
!2931 = distinct !DILexicalBlock(scope: !2924, file: !282, line: 385, column: 63)
!2932 = !DILocation(line: 387, column: 17, scope: !2931)
!2933 = !DILocation(line: 389, column: 17, scope: !2934)
!2934 = distinct !DILexicalBlock(scope: !2889, file: !282, line: 389, column: 14)
!2935 = !DILocation(line: 389, column: 25, scope: !2934)
!2936 = !DILocation(line: 389, column: 14, scope: !2889)
!2937 = !DILocation(line: 390, column: 17, scope: !2938)
!2938 = distinct !DILexicalBlock(scope: !2934, file: !282, line: 389, column: 58)
!2939 = !DILocation(line: 391, column: 17, scope: !2938)
!2940 = !DILocation(line: 395, column: 19, scope: !2941)
!2941 = distinct !DILexicalBlock(scope: !2889, file: !282, line: 395, column: 13)
!2942 = !DILocation(line: 395, column: 17, scope: !2941)
!2943 = !DILocation(line: 395, column: 40, scope: !2941)
!2944 = !DILocation(line: 395, column: 13, scope: !2889)
!2945 = !DILocation(line: 396, column: 17, scope: !2941)
!2946 = !DILocation(line: 397, column: 16, scope: !2889)
!2947 = !DILocation(line: 397, column: 9, scope: !2889)
!2948 = !DILocation(line: 398, column: 26, scope: !2889)
!2949 = !DILocation(line: 398, column: 9, scope: !2889)
!2950 = !DILocation(line: 398, column: 13, scope: !2889)
!2951 = !DILocation(line: 398, column: 24, scope: !2889)
!2952 = !DILocation(line: 399, column: 27, scope: !2889)
!2953 = !DILocation(line: 399, column: 9, scope: !2889)
!2954 = !DILocation(line: 399, column: 13, scope: !2889)
!2955 = !DILocation(line: 399, column: 25, scope: !2889)
!2956 = !DILocation(line: 402, column: 13, scope: !2957)
!2957 = distinct !DILexicalBlock(scope: !2889, file: !282, line: 402, column: 13)
!2958 = !DILocation(line: 402, column: 13, scope: !2889)
!2959 = !DILocation(line: 403, column: 17, scope: !2960)
!2960 = distinct !DILexicalBlock(scope: !2957, file: !282, line: 402, column: 33)
!2961 = !DILocation(line: 404, column: 17, scope: !2960)
!2962 = !DILocation(line: 405, column: 9, scope: !2960)
!2963 = !DILocation(line: 408, column: 9, scope: !2889)
!2964 = !DILocation(line: 408, column: 13, scope: !2889)
!2965 = !DILocation(line: 408, column: 24, scope: !2889)
!2966 = !DILocation(line: 409, column: 14, scope: !2967)
!2967 = distinct !DILexicalBlock(scope: !2889, file: !282, line: 409, column: 14)
!2968 = !DILocation(line: 409, column: 31, scope: !2967)
!2969 = !DILocation(line: 409, column: 14, scope: !2889)
!2970 = !DILocalVariable(name: "fd", scope: !2971, file: !282, line: 415, type: !46)
!2971 = distinct !DILexicalBlock(scope: !2967, file: !282, line: 410, column: 11)
!2972 = !DILocation(line: 415, column: 17, scope: !2971)
!2973 = !DILocation(line: 415, column: 22, scope: !2971)
!2974 = !DILocation(line: 416, column: 17, scope: !2975)
!2975 = distinct !DILexicalBlock(scope: !2971, file: !282, line: 416, column: 17)
!2976 = !DILocation(line: 416, column: 20, scope: !2975)
!2977 = !DILocation(line: 416, column: 17, scope: !2971)
!2978 = !DILocation(line: 434, column: 15, scope: !2979)
!2979 = distinct !DILexicalBlock(scope: !2975, file: !282, line: 417, column: 15)
!2980 = !DILocation(line: 437, column: 24, scope: !2981)
!2981 = distinct !DILexicalBlock(scope: !2975, file: !282, line: 436, column: 15)
!2982 = !DILocation(line: 437, column: 17, scope: !2981)
!2983 = !DILocation(line: 439, column: 11, scope: !2971)
!2984 = !DILocalVariable(name: "maxarglen", scope: !2985, file: !282, line: 449, type: !143)
!2985 = distinct !DILexicalBlock(scope: !2889, file: !282, line: 448, column: 9)
!2986 = !DILocation(line: 449, column: 18, scope: !2985)
!2987 = !DILocation(line: 449, column: 44, scope: !2985)
!2988 = !DILocation(line: 449, column: 30, scope: !2985)
!2989 = !DILocation(line: 450, column: 28, scope: !2990)
!2990 = distinct !DILexicalBlock(scope: !2985, file: !282, line: 450, column: 15)
!2991 = !DILocation(line: 450, column: 32, scope: !2990)
!2992 = !DILocation(line: 450, column: 17, scope: !2990)
!2993 = !DILocation(line: 450, column: 15, scope: !2985)
!2994 = !DILocation(line: 451, column: 19, scope: !2990)
!2995 = !DILocation(line: 455, column: 14, scope: !2996)
!2996 = distinct !DILexicalBlock(scope: !2889, file: !282, line: 455, column: 13)
!2997 = !DILocation(line: 455, column: 13, scope: !2996)
!2998 = !DILocation(line: 455, column: 19, scope: !2996)
!2999 = !DILocation(line: 455, column: 13, scope: !2889)
!3000 = !DILocation(line: 456, column: 41, scope: !3001)
!3001 = distinct !DILexicalBlock(scope: !3002, file: !282, line: 456, column: 21)
!3002 = distinct !DILexicalBlock(scope: !2996, file: !282, line: 455, column: 28)
!3003 = !DILocation(line: 456, column: 31, scope: !3001)
!3004 = !DILocation(line: 456, column: 29, scope: !3001)
!3005 = !DILocation(line: 456, column: 53, scope: !3001)
!3006 = !DILocation(line: 456, column: 21, scope: !3002)
!3007 = !DILocation(line: 457, column: 25, scope: !3001)
!3008 = !DILocation(line: 458, column: 17, scope: !3002)
!3009 = !DILocation(line: 458, column: 25, scope: !3002)
!3010 = !DILocation(line: 458, column: 35, scope: !3002)
!3011 = !DILocation(line: 459, column: 11, scope: !3002)
!3012 = !DILocation(line: 472, column: 23, scope: !2889)
!3013 = !DILocation(line: 472, column: 30, scope: !2889)
!3014 = !DILocation(line: 472, column: 38, scope: !2889)
!3015 = !DILocation(line: 472, column: 41, scope: !2889)
!3016 = !DILocation(line: 472, column: 20, scope: !2889)
!3017 = !DILocation(line: 475, column: 19, scope: !3018)
!3018 = distinct !DILexicalBlock(scope: !2889, file: !282, line: 475, column: 9)
!3019 = !DILocation(line: 475, column: 34, scope: !3018)
!3020 = !DILocation(line: 475, column: 14, scope: !3018)
!3021 = !DILocation(line: 475, column: 40, scope: !3022)
!3022 = distinct !DILexicalBlock(scope: !3018, file: !282, line: 475, column: 9)
!3023 = !DILocation(line: 475, column: 39, scope: !3022)
!3024 = !DILocation(line: 475, column: 45, scope: !3022)
!3025 = !DILocation(line: 475, column: 9, scope: !3018)
!3026 = !DILocalVariable(name: "len", scope: !3027, file: !282, line: 477, type: !143)
!3027 = distinct !DILexicalBlock(scope: !3022, file: !282, line: 475, column: 72)
!3028 = !DILocation(line: 477, column: 24, scope: !3027)
!3029 = !DILocation(line: 477, column: 38, scope: !3027)
!3030 = !DILocation(line: 477, column: 37, scope: !3027)
!3031 = !DILocation(line: 477, column: 30, scope: !3027)
!3032 = !DILocation(line: 478, column: 36, scope: !3033)
!3033 = distinct !DILexicalBlock(scope: !3027, file: !282, line: 478, column: 21)
!3034 = !DILocation(line: 478, column: 41, scope: !3033)
!3035 = !DILocation(line: 478, column: 40, scope: !3033)
!3036 = !DILocation(line: 478, column: 47, scope: !3033)
!3037 = !DILocation(line: 478, column: 26, scope: !3033)
!3038 = !DILocation(line: 478, column: 24, scope: !3033)
!3039 = !DILocation(line: 478, column: 53, scope: !3033)
!3040 = !DILocation(line: 478, column: 21, scope: !3027)
!3041 = !DILocation(line: 479, column: 25, scope: !3033)
!3042 = !DILocation(line: 480, column: 17, scope: !3027)
!3043 = !DILocation(line: 480, column: 20, scope: !3027)
!3044 = !DILocation(line: 480, column: 30, scope: !3027)
!3045 = !DILocation(line: 481, column: 33, scope: !3027)
!3046 = !DILocation(line: 481, column: 17, scope: !3027)
!3047 = !DILocation(line: 481, column: 20, scope: !3027)
!3048 = !DILocation(line: 481, column: 31, scope: !3027)
!3049 = !DILocation(line: 482, column: 34, scope: !3027)
!3050 = !DILocation(line: 482, column: 37, scope: !3027)
!3051 = !DILocation(line: 482, column: 17, scope: !3027)
!3052 = !DILocation(line: 482, column: 20, scope: !3027)
!3053 = !DILocation(line: 482, column: 32, scope: !3027)
!3054 = !DILocation(line: 486, column: 21, scope: !3055)
!3055 = distinct !DILexicalBlock(scope: !3027, file: !282, line: 486, column: 21)
!3056 = !DILocation(line: 486, column: 32, scope: !3055)
!3057 = !DILocation(line: 486, column: 35, scope: !3055)
!3058 = !DILocation(line: 486, column: 40, scope: !3055)
!3059 = !DILocation(line: 486, column: 21, scope: !3027)
!3060 = !DILocation(line: 487, column: 25, scope: !3061)
!3061 = distinct !DILexicalBlock(scope: !3055, file: !282, line: 486, column: 49)
!3062 = !DILocation(line: 487, column: 28, scope: !3061)
!3063 = !DILocation(line: 487, column: 37, scope: !3061)
!3064 = !DILocation(line: 488, column: 47, scope: !3061)
!3065 = !DILocation(line: 488, column: 25, scope: !3061)
!3066 = !DILocation(line: 489, column: 17, scope: !3061)
!3067 = !DILocation(line: 490, column: 48, scope: !3068)
!3068 = distinct !DILexicalBlock(scope: !3055, file: !282, line: 489, column: 24)
!3069 = !DILocation(line: 490, column: 52, scope: !3068)
!3070 = !DILocation(line: 490, column: 39, scope: !3068)
!3071 = !DILocation(line: 490, column: 25, scope: !3068)
!3072 = !DILocation(line: 490, column: 28, scope: !3068)
!3073 = !DILocation(line: 490, column: 37, scope: !3068)
!3074 = !DILocation(line: 497, column: 21, scope: !3075)
!3075 = distinct !DILexicalBlock(scope: !3027, file: !282, line: 497, column: 21)
!3076 = !DILocation(line: 497, column: 21, scope: !3027)
!3077 = !DILocation(line: 498, column: 39, scope: !3078)
!3078 = distinct !DILexicalBlock(scope: !3075, file: !282, line: 497, column: 29)
!3079 = !DILocation(line: 498, column: 25, scope: !3078)
!3080 = !DILocation(line: 498, column: 28, scope: !3078)
!3081 = !DILocation(line: 498, column: 37, scope: !3078)
!3082 = !DILocation(line: 499, column: 32, scope: !3078)
!3083 = !DILocation(line: 499, column: 30, scope: !3078)
!3084 = !DILocation(line: 500, column: 17, scope: !3078)
!3085 = !DILocation(line: 501, column: 25, scope: !3086)
!3086 = distinct !DILexicalBlock(scope: !3075, file: !282, line: 500, column: 24)
!3087 = !DILocation(line: 501, column: 28, scope: !3086)
!3088 = !DILocation(line: 501, column: 37, scope: !3086)
!3089 = !DILocation(line: 502, column: 29, scope: !3090)
!3090 = distinct !DILexicalBlock(scope: !3086, file: !282, line: 502, column: 29)
!3091 = !DILocation(line: 502, column: 34, scope: !3090)
!3092 = !DILocation(line: 502, column: 29, scope: !3086)
!3093 = !DILocation(line: 503, column: 46, scope: !3090)
!3094 = !DILocation(line: 503, column: 44, scope: !3090)
!3095 = !DILocation(line: 503, column: 37, scope: !3090)
!3096 = !DILocation(line: 503, column: 33, scope: !3090)
!3097 = !DILocation(line: 505, column: 49, scope: !3098)
!3098 = distinct !DILexicalBlock(scope: !3090, file: !282, line: 504, column: 30)
!3099 = !DILocation(line: 505, column: 33, scope: !3098)
!3100 = !DILocation(line: 505, column: 38, scope: !3098)
!3101 = !DILocation(line: 505, column: 47, scope: !3098)
!3102 = !DILocation(line: 506, column: 39, scope: !3098)
!3103 = !DILocation(line: 506, column: 37, scope: !3098)
!3104 = !DILocation(line: 509, column: 9, scope: !3027)
!3105 = !DILocation(line: 475, column: 54, scope: !3022)
!3106 = !DILocation(line: 475, column: 62, scope: !3022)
!3107 = !DILocation(line: 475, column: 9, scope: !3022)
!3108 = distinct !{!3108, !3025, !3109}
!3109 = !DILocation(line: 509, column: 9, scope: !3018)
!3110 = !DILocation(line: 510, column: 13, scope: !3111)
!3111 = distinct !DILexicalBlock(scope: !2889, file: !282, line: 510, column: 13)
!3112 = !DILocation(line: 510, column: 20, scope: !3111)
!3113 = !DILocation(line: 510, column: 23, scope: !3111)
!3114 = !DILocation(line: 510, column: 30, scope: !3111)
!3115 = !DILocation(line: 510, column: 13, scope: !2889)
!3116 = !DILocation(line: 511, column: 33, scope: !3111)
!3117 = !DILocation(line: 511, column: 37, scope: !3111)
!3118 = !DILocation(line: 511, column: 43, scope: !3111)
!3119 = !DILocation(line: 511, column: 24, scope: !3111)
!3120 = !DILocation(line: 511, column: 22, scope: !3111)
!3121 = !DILocation(line: 511, column: 17, scope: !3111)
!3122 = !DILocation(line: 518, column: 38, scope: !3123)
!3123 = distinct !DILexicalBlock(scope: !2889, file: !282, line: 518, column: 13)
!3124 = !DILocation(line: 518, column: 28, scope: !3123)
!3125 = !DILocation(line: 518, column: 14, scope: !3123)
!3126 = !DILocation(line: 518, column: 18, scope: !3123)
!3127 = !DILocation(line: 518, column: 26, scope: !3123)
!3128 = !DILocation(line: 518, column: 50, scope: !3123)
!3129 = !DILocation(line: 518, column: 13, scope: !2889)
!3130 = !DILocation(line: 519, column: 17, scope: !3123)
!3131 = !DILocation(line: 520, column: 33, scope: !2889)
!3132 = !DILocation(line: 520, column: 9, scope: !2889)
!3133 = !DILocation(line: 520, column: 13, scope: !2889)
!3134 = !DILocation(line: 520, column: 22, scope: !2889)
!3135 = !DILocation(line: 520, column: 31, scope: !2889)
!3136 = !DILocation(line: 521, column: 9, scope: !2889)
!3137 = !DILocation(line: 521, column: 13, scope: !2889)
!3138 = !DILocation(line: 521, column: 22, scope: !2889)
!3139 = !DILocation(line: 521, column: 31, scope: !2889)
!3140 = !DILocation(line: 522, column: 26, scope: !3141)
!3141 = distinct !DILexicalBlock(scope: !2889, file: !282, line: 522, column: 13)
!3142 = !DILocation(line: 522, column: 15, scope: !3141)
!3143 = !DILocation(line: 522, column: 13, scope: !2889)
!3144 = !DILocation(line: 523, column: 17, scope: !3141)
!3145 = !DILocation(line: 532, column: 14, scope: !3146)
!3146 = distinct !DILexicalBlock(scope: !2889, file: !282, line: 532, column: 13)
!3147 = !DILocation(line: 532, column: 33, scope: !3146)
!3148 = !DILocation(line: 532, column: 37, scope: !3146)
!3149 = !DILocation(line: 533, column: 13, scope: !3146)
!3150 = !DILocation(line: 533, column: 40, scope: !3146)
!3151 = !DILocation(line: 533, column: 31, scope: !3146)
!3152 = !DILocation(line: 533, column: 17, scope: !3146)
!3153 = !DILocation(line: 533, column: 21, scope: !3146)
!3154 = !DILocation(line: 533, column: 29, scope: !3146)
!3155 = !DILocation(line: 533, column: 50, scope: !3146)
!3156 = !DILocation(line: 532, column: 13, scope: !2889)
!3157 = !DILocation(line: 534, column: 17, scope: !3146)
!3158 = !DILocation(line: 536, column: 23, scope: !2889)
!3159 = !DILocation(line: 536, column: 27, scope: !2889)
!3160 = !DILocation(line: 536, column: 9, scope: !2889)
!3161 = !DILocation(line: 537, column: 17, scope: !2889)
!3162 = !DILocation(line: 537, column: 9, scope: !2889)
!3163 = !DILocation(line: 539, column: 19, scope: !2889)
!3164 = !DILocation(line: 539, column: 9, scope: !2889)
!3165 = !DILocation(line: 540, column: 14, scope: !2889)
!3166 = !DILocation(line: 540, column: 9, scope: !2889)
!3167 = !DILocation(line: 541, column: 14, scope: !2889)
!3168 = !DILocation(line: 541, column: 18, scope: !2889)
!3169 = !DILocation(line: 541, column: 9, scope: !2889)
!3170 = !DILocation(line: 542, column: 14, scope: !2889)
!3171 = !DILocation(line: 542, column: 9, scope: !2889)
!3172 = !DILocation(line: 543, column: 9, scope: !2889)
!3173 = !DILocation(line: 544, column: 1, scope: !2889)
!3174 = distinct !DISubprogram(name: "fts_maxarglen", scope: !282, file: !282, line: 1935, type: !3175, isLocal: true, isDefinition: true, scopeLine: 1936, flags: DIFlagPrototyped, isOptimized: false, unit: !281, variables: !48)
!3175 = !DISubroutineType(types: !3176)
!3176 = !{!143, !861}
!3177 = !DILocalVariable(name: "argv", arg: 1, scope: !3174, file: !282, line: 1935, type: !861)
!3178 = !DILocation(line: 1935, column: 30, scope: !3174)
!3179 = !DILocalVariable(name: "len", scope: !3174, file: !282, line: 1937, type: !143)
!3180 = !DILocation(line: 1937, column: 16, scope: !3174)
!3181 = !DILocalVariable(name: "max", scope: !3174, file: !282, line: 1937, type: !143)
!3182 = !DILocation(line: 1937, column: 21, scope: !3174)
!3183 = !DILocation(line: 1939, column: 18, scope: !3184)
!3184 = distinct !DILexicalBlock(scope: !3174, file: !282, line: 1939, column: 9)
!3185 = !DILocation(line: 1939, column: 14, scope: !3184)
!3186 = !DILocation(line: 1939, column: 24, scope: !3187)
!3187 = distinct !DILexicalBlock(scope: !3184, file: !282, line: 1939, column: 9)
!3188 = !DILocation(line: 1939, column: 23, scope: !3187)
!3189 = !DILocation(line: 1939, column: 9, scope: !3184)
!3190 = !DILocation(line: 1940, column: 36, scope: !3191)
!3191 = distinct !DILexicalBlock(scope: !3187, file: !282, line: 1940, column: 21)
!3192 = !DILocation(line: 1940, column: 35, scope: !3191)
!3193 = !DILocation(line: 1940, column: 28, scope: !3191)
!3194 = !DILocation(line: 1940, column: 26, scope: !3191)
!3195 = !DILocation(line: 1940, column: 45, scope: !3191)
!3196 = !DILocation(line: 1940, column: 43, scope: !3191)
!3197 = !DILocation(line: 1940, column: 21, scope: !3187)
!3198 = !DILocation(line: 1941, column: 31, scope: !3191)
!3199 = !DILocation(line: 1941, column: 29, scope: !3191)
!3200 = !DILocation(line: 1941, column: 25, scope: !3191)
!3201 = !DILocation(line: 1939, column: 30, scope: !3187)
!3202 = !DILocation(line: 1939, column: 9, scope: !3187)
!3203 = distinct !{!3203, !3189, !3204}
!3204 = !DILocation(line: 1941, column: 31, scope: !3184)
!3205 = !DILocation(line: 1942, column: 17, scope: !3174)
!3206 = !DILocation(line: 1942, column: 21, scope: !3174)
!3207 = !DILocation(line: 1942, column: 9, scope: !3174)
!3208 = distinct !DISubprogram(name: "fts_palloc", scope: !282, file: !282, line: 1879, type: !3209, isLocal: true, isDefinition: true, scopeLine: 1880, flags: DIFlagPrototyped, isOptimized: false, unit: !281, variables: !48)
!3209 = !DISubroutineType(types: !3210)
!3210 = !{!131, !293, !143}
!3211 = !DILocalVariable(name: "sp", arg: 1, scope: !3208, file: !282, line: 1879, type: !293)
!3212 = !DILocation(line: 1879, column: 18, scope: !3208)
!3213 = !DILocalVariable(name: "more", arg: 2, scope: !3208, file: !282, line: 1879, type: !143)
!3214 = !DILocation(line: 1879, column: 29, scope: !3208)
!3215 = !DILocalVariable(name: "p", scope: !3208, file: !282, line: 1881, type: !38)
!3216 = !DILocation(line: 1881, column: 15, scope: !3208)
!3217 = !DILocalVariable(name: "new_len", scope: !3208, file: !282, line: 1882, type: !143)
!3218 = !DILocation(line: 1882, column: 16, scope: !3208)
!3219 = !DILocation(line: 1882, column: 26, scope: !3208)
!3220 = !DILocation(line: 1882, column: 30, scope: !3208)
!3221 = !DILocation(line: 1882, column: 44, scope: !3208)
!3222 = !DILocation(line: 1882, column: 42, scope: !3208)
!3223 = !DILocation(line: 1882, column: 49, scope: !3208)
!3224 = !DILocation(line: 1887, column: 13, scope: !3225)
!3225 = distinct !DILexicalBlock(scope: !3208, file: !282, line: 1887, column: 13)
!3226 = !DILocation(line: 1887, column: 23, scope: !3225)
!3227 = !DILocation(line: 1887, column: 27, scope: !3225)
!3228 = !DILocation(line: 1887, column: 21, scope: !3225)
!3229 = !DILocation(line: 1887, column: 13, scope: !3208)
!3230 = !DILocation(line: 1888, column: 22, scope: !3231)
!3231 = distinct !DILexicalBlock(scope: !3225, file: !282, line: 1887, column: 40)
!3232 = !DILocation(line: 1888, column: 26, scope: !3231)
!3233 = !DILocation(line: 1888, column: 17, scope: !3231)
!3234 = !DILocation(line: 1889, column: 17, scope: !3231)
!3235 = !DILocation(line: 1889, column: 21, scope: !3231)
!3236 = !DILocation(line: 1889, column: 30, scope: !3231)
!3237 = !DILocation(line: 1890, column: 17, scope: !3231)
!3238 = !DILocation(line: 1891, column: 17, scope: !3231)
!3239 = !DILocation(line: 1893, column: 27, scope: !3208)
!3240 = !DILocation(line: 1893, column: 9, scope: !3208)
!3241 = !DILocation(line: 1893, column: 13, scope: !3208)
!3242 = !DILocation(line: 1893, column: 25, scope: !3208)
!3243 = !DILocation(line: 1894, column: 21, scope: !3208)
!3244 = !DILocation(line: 1894, column: 25, scope: !3208)
!3245 = !DILocation(line: 1894, column: 35, scope: !3208)
!3246 = !DILocation(line: 1894, column: 39, scope: !3208)
!3247 = !DILocation(line: 1894, column: 13, scope: !3208)
!3248 = !DILocation(line: 1894, column: 11, scope: !3208)
!3249 = !DILocation(line: 1895, column: 13, scope: !3250)
!3250 = distinct !DILexicalBlock(scope: !3208, file: !282, line: 1895, column: 13)
!3251 = !DILocation(line: 1895, column: 15, scope: !3250)
!3252 = !DILocation(line: 1895, column: 13, scope: !3208)
!3253 = !DILocation(line: 1896, column: 22, scope: !3254)
!3254 = distinct !DILexicalBlock(scope: !3250, file: !282, line: 1895, column: 24)
!3255 = !DILocation(line: 1896, column: 26, scope: !3254)
!3256 = !DILocation(line: 1896, column: 17, scope: !3254)
!3257 = !DILocation(line: 1897, column: 17, scope: !3254)
!3258 = !DILocation(line: 1897, column: 21, scope: !3254)
!3259 = !DILocation(line: 1897, column: 30, scope: !3254)
!3260 = !DILocation(line: 1898, column: 17, scope: !3254)
!3261 = !DILocation(line: 1900, column: 24, scope: !3208)
!3262 = !DILocation(line: 1900, column: 9, scope: !3208)
!3263 = !DILocation(line: 1900, column: 13, scope: !3208)
!3264 = !DILocation(line: 1900, column: 22, scope: !3208)
!3265 = !DILocation(line: 1901, column: 9, scope: !3208)
!3266 = !DILocation(line: 1902, column: 1, scope: !3208)
!3267 = distinct !DISubprogram(name: "fts_alloc", scope: !282, file: !282, line: 1829, type: !3268, isLocal: true, isDefinition: true, scopeLine: 1830, flags: DIFlagPrototyped, isOptimized: false, unit: !281, variables: !48)
!3268 = !DISubroutineType(types: !3269)
!3269 = !{!2904, !293, !35, !143}
!3270 = !DILocalVariable(name: "sp", arg: 1, scope: !3267, file: !282, line: 1829, type: !293)
!3271 = !DILocation(line: 1829, column: 17, scope: !3267)
!3272 = !DILocalVariable(name: "name", arg: 2, scope: !3267, file: !282, line: 1829, type: !35)
!3273 = !DILocation(line: 1829, column: 33, scope: !3267)
!3274 = !DILocalVariable(name: "namelen", arg: 3, scope: !3267, file: !282, line: 1829, type: !143)
!3275 = !DILocation(line: 1829, column: 55, scope: !3267)
!3276 = !DILocalVariable(name: "p", scope: !3267, file: !282, line: 1831, type: !2904)
!3277 = !DILocation(line: 1831, column: 26, scope: !3267)
!3278 = !DILocalVariable(name: "len", scope: !3267, file: !282, line: 1832, type: !143)
!3279 = !DILocation(line: 1832, column: 16, scope: !3267)
!3280 = !DILocation(line: 1838, column: 32, scope: !3267)
!3281 = !DILocation(line: 1838, column: 30, scope: !3267)
!3282 = !DILocation(line: 1838, column: 13, scope: !3267)
!3283 = !DILocation(line: 1839, column: 25, scope: !3284)
!3284 = distinct !DILexicalBlock(scope: !3267, file: !282, line: 1839, column: 13)
!3285 = !DILocation(line: 1839, column: 18, scope: !3284)
!3286 = !DILocation(line: 1839, column: 16, scope: !3284)
!3287 = !DILocation(line: 1839, column: 31, scope: !3284)
!3288 = !DILocation(line: 1839, column: 13, scope: !3267)
!3289 = !DILocation(line: 1840, column: 17, scope: !3284)
!3290 = !DILocation(line: 1843, column: 17, scope: !3267)
!3291 = !DILocation(line: 1843, column: 20, scope: !3267)
!3292 = !DILocation(line: 1843, column: 9, scope: !3267)
!3293 = !DILocation(line: 1843, column: 30, scope: !3267)
!3294 = !DILocation(line: 1843, column: 36, scope: !3267)
!3295 = !DILocation(line: 1844, column: 9, scope: !3267)
!3296 = !DILocation(line: 1844, column: 12, scope: !3267)
!3297 = !DILocation(line: 1844, column: 21, scope: !3267)
!3298 = !DILocation(line: 1844, column: 30, scope: !3267)
!3299 = !DILocation(line: 1846, column: 26, scope: !3267)
!3300 = !DILocation(line: 1846, column: 9, scope: !3267)
!3301 = !DILocation(line: 1846, column: 12, scope: !3267)
!3302 = !DILocation(line: 1846, column: 24, scope: !3267)
!3303 = !DILocation(line: 1847, column: 22, scope: !3267)
!3304 = !DILocation(line: 1847, column: 9, scope: !3267)
!3305 = !DILocation(line: 1847, column: 12, scope: !3267)
!3306 = !DILocation(line: 1847, column: 20, scope: !3267)
!3307 = !DILocation(line: 1848, column: 23, scope: !3267)
!3308 = !DILocation(line: 1848, column: 27, scope: !3267)
!3309 = !DILocation(line: 1848, column: 9, scope: !3267)
!3310 = !DILocation(line: 1848, column: 12, scope: !3267)
!3311 = !DILocation(line: 1848, column: 21, scope: !3267)
!3312 = !DILocation(line: 1849, column: 9, scope: !3267)
!3313 = !DILocation(line: 1849, column: 12, scope: !3267)
!3314 = !DILocation(line: 1849, column: 22, scope: !3267)
!3315 = !DILocation(line: 1850, column: 9, scope: !3267)
!3316 = !DILocation(line: 1850, column: 12, scope: !3267)
!3317 = !DILocation(line: 1850, column: 22, scope: !3267)
!3318 = !DILocation(line: 1851, column: 9, scope: !3267)
!3319 = !DILocation(line: 1851, column: 12, scope: !3267)
!3320 = !DILocation(line: 1851, column: 22, scope: !3267)
!3321 = !DILocation(line: 1852, column: 9, scope: !3267)
!3322 = !DILocation(line: 1852, column: 12, scope: !3267)
!3323 = !DILocation(line: 1852, column: 23, scope: !3267)
!3324 = !DILocation(line: 1853, column: 9, scope: !3267)
!3325 = !DILocation(line: 1853, column: 12, scope: !3267)
!3326 = !DILocation(line: 1853, column: 24, scope: !3267)
!3327 = !DILocation(line: 1854, column: 17, scope: !3267)
!3328 = !DILocation(line: 1854, column: 9, scope: !3267)
!3329 = !DILocation(line: 1855, column: 1, scope: !3267)
!3330 = distinct !DISubprogram(name: "fts_set_stat_required", scope: !282, file: !282, line: 288, type: !3331, isLocal: true, isDefinition: true, scopeLine: 289, flags: DIFlagPrototyped, isOptimized: false, unit: !281, variables: !48)
!3331 = !DISubroutineType(types: !3332)
!3332 = !{null, !2904, !131}
!3333 = !DILocalVariable(name: "p", arg: 1, scope: !3330, file: !282, line: 288, type: !2904)
!3334 = !DILocation(line: 288, column: 32, scope: !3330)
!3335 = !DILocalVariable(name: "required", arg: 2, scope: !3330, file: !282, line: 288, type: !131)
!3336 = !DILocation(line: 288, column: 40, scope: !3330)
!3337 = !DILocation(line: 290, column: 3, scope: !3330)
!3338 = distinct !{!3338, !3337, !3337}
!3339 = !DILocation(line: 290, column: 3, scope: !3340)
!3340 = distinct !DILexicalBlock(scope: !3341, file: !282, line: 290, column: 3)
!3341 = distinct !DILexicalBlock(scope: !3330, file: !282, line: 290, column: 3)
!3342 = !DILocation(line: 290, column: 3, scope: !3341)
!3343 = !DILocation(line: 291, column: 28, scope: !3330)
!3344 = !DILocation(line: 291, column: 27, scope: !3330)
!3345 = !DILocation(line: 291, column: 3, scope: !3330)
!3346 = !DILocation(line: 291, column: 6, scope: !3330)
!3347 = !DILocation(line: 291, column: 17, scope: !3330)
!3348 = !DILocation(line: 291, column: 25, scope: !3330)
!3349 = !DILocation(line: 294, column: 1, scope: !3330)
!3350 = distinct !DISubprogram(name: "fts_stat", scope: !282, file: !282, line: 1686, type: !3351, isLocal: true, isDefinition: true, scopeLine: 1687, flags: DIFlagPrototyped, isOptimized: false, unit: !281, variables: !48)
!3351 = !DISubroutineType(types: !3352)
!3352 = !{!183, !293, !2904, !131}
!3353 = !DILocalVariable(name: "sp", arg: 1, scope: !3350, file: !282, line: 1686, type: !293)
!3354 = !DILocation(line: 1686, column: 15, scope: !3350)
!3355 = !DILocalVariable(name: "p", arg: 2, scope: !3350, file: !282, line: 1686, type: !2904)
!3356 = !DILocation(line: 1686, column: 36, scope: !3350)
!3357 = !DILocalVariable(name: "follow", arg: 3, scope: !3350, file: !282, line: 1686, type: !131)
!3358 = !DILocation(line: 1686, column: 44, scope: !3350)
!3359 = !DILocalVariable(name: "sbp", scope: !3350, file: !282, line: 1688, type: !3360)
!3360 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !327, size: 64)
!3361 = !DILocation(line: 1688, column: 22, scope: !3350)
!3362 = !DILocation(line: 1688, column: 28, scope: !3350)
!3363 = !DILocation(line: 1688, column: 31, scope: !3350)
!3364 = !DILocalVariable(name: "saved_errno", scope: !3350, file: !282, line: 1689, type: !46)
!3365 = !DILocation(line: 1689, column: 13, scope: !3350)
!3366 = !DILocation(line: 1691, column: 13, scope: !3367)
!3367 = distinct !DILexicalBlock(scope: !3350, file: !282, line: 1691, column: 13)
!3368 = !DILocation(line: 1691, column: 16, scope: !3367)
!3369 = !DILocation(line: 1691, column: 26, scope: !3367)
!3370 = !DILocation(line: 1691, column: 43, scope: !3367)
!3371 = !DILocation(line: 1691, column: 46, scope: !3367)
!3372 = !DILocation(line: 1691, column: 13, scope: !3350)
!3373 = !DILocation(line: 1692, column: 24, scope: !3367)
!3374 = !DILocation(line: 1692, column: 17, scope: !3367)
!3375 = !DILocation(line: 1708, column: 13, scope: !3376)
!3376 = distinct !DILexicalBlock(scope: !3350, file: !282, line: 1708, column: 13)
!3377 = !DILocation(line: 1708, column: 32, scope: !3376)
!3378 = !DILocation(line: 1708, column: 35, scope: !3376)
!3379 = !DILocation(line: 1708, column: 13, scope: !3350)
!3380 = !DILocation(line: 1709, column: 26, scope: !3381)
!3381 = distinct !DILexicalBlock(scope: !3382, file: !282, line: 1709, column: 21)
!3382 = distinct !DILexicalBlock(scope: !3376, file: !282, line: 1708, column: 43)
!3383 = !DILocation(line: 1709, column: 29, scope: !3381)
!3384 = !DILocation(line: 1709, column: 42, scope: !3381)
!3385 = !DILocation(line: 1709, column: 21, scope: !3381)
!3386 = !DILocation(line: 1709, column: 21, scope: !3382)
!3387 = !DILocation(line: 1710, column: 39, scope: !3388)
!3388 = distinct !DILexicalBlock(scope: !3381, file: !282, line: 1709, column: 48)
!3389 = !DILocation(line: 1710, column: 37, scope: !3388)
!3390 = !DILocation(line: 1711, column: 29, scope: !3391)
!3391 = distinct !DILexicalBlock(scope: !3388, file: !282, line: 1711, column: 29)
!3392 = !DILocation(line: 1711, column: 35, scope: !3391)
!3393 = !DILocation(line: 1712, column: 29, scope: !3391)
!3394 = !DILocation(line: 1712, column: 38, scope: !3391)
!3395 = !DILocation(line: 1712, column: 41, scope: !3391)
!3396 = !DILocation(line: 1712, column: 54, scope: !3391)
!3397 = !DILocation(line: 1712, column: 32, scope: !3391)
!3398 = !DILocation(line: 1712, column: 59, scope: !3391)
!3399 = !DILocation(line: 1711, column: 29, scope: !3388)
!3400 = !DILocation(line: 1713, column: 33, scope: !3401)
!3401 = distinct !DILexicalBlock(scope: !3391, file: !282, line: 1712, column: 65)
!3402 = !DILocation(line: 1714, column: 33, scope: !3401)
!3403 = !DILocation(line: 1716, column: 40, scope: !3388)
!3404 = !DILocation(line: 1716, column: 25, scope: !3388)
!3405 = !DILocation(line: 1716, column: 28, scope: !3388)
!3406 = !DILocation(line: 1716, column: 38, scope: !3388)
!3407 = !DILocation(line: 1717, column: 25, scope: !3388)
!3408 = !DILocation(line: 1719, column: 9, scope: !3382)
!3409 = !DILocation(line: 1719, column: 28, scope: !3410)
!3410 = distinct !DILexicalBlock(scope: !3376, file: !282, line: 1719, column: 20)
!3411 = !DILocation(line: 1719, column: 32, scope: !3410)
!3412 = !DILocation(line: 1719, column: 44, scope: !3410)
!3413 = !DILocation(line: 1719, column: 47, scope: !3410)
!3414 = !DILocation(line: 1719, column: 60, scope: !3410)
!3415 = !DILocation(line: 1719, column: 20, scope: !3410)
!3416 = !DILocation(line: 1719, column: 20, scope: !3376)
!3417 = !DILocation(line: 1721, column: 32, scope: !3418)
!3418 = distinct !DILexicalBlock(scope: !3410, file: !282, line: 1720, column: 50)
!3419 = !DILocation(line: 1721, column: 17, scope: !3418)
!3420 = !DILocation(line: 1721, column: 20, scope: !3418)
!3421 = !DILocation(line: 1721, column: 30, scope: !3418)
!3422 = !DILocation(line: 1722, column: 24, scope: !3418)
!3423 = !DILocation(line: 1722, column: 17, scope: !3418)
!3424 = !DILocation(line: 1723, column: 17, scope: !3418)
!3425 = !DILocation(line: 1726, column: 13, scope: !3426)
!3426 = distinct !DILexicalBlock(scope: !3350, file: !282, line: 1726, column: 13)
!3427 = !DILocation(line: 1726, column: 13, scope: !3350)
!3428 = !DILocation(line: 1727, column: 44, scope: !3429)
!3429 = distinct !DILexicalBlock(scope: !3426, file: !282, line: 1726, column: 36)
!3430 = !DILocation(line: 1727, column: 49, scope: !3429)
!3431 = !DILocation(line: 1728, column: 47, scope: !3429)
!3432 = !DILocation(line: 1728, column: 46, scope: !3429)
!3433 = !DILocation(line: 1728, column: 44, scope: !3429)
!3434 = !DILocation(line: 1727, column: 17, scope: !3429)
!3435 = !DILocation(line: 1727, column: 20, scope: !3429)
!3436 = !DILocation(line: 1727, column: 41, scope: !3429)
!3437 = !DILocation(line: 1729, column: 21, scope: !3438)
!3438 = distinct !DILexicalBlock(scope: !3429, file: !282, line: 1729, column: 21)
!3439 = !DILocation(line: 1729, column: 21, scope: !3429)
!3440 = !DILocation(line: 1731, column: 33, scope: !3441)
!3441 = distinct !DILexicalBlock(scope: !3438, file: !282, line: 1729, column: 41)
!3442 = !DILocation(line: 1731, column: 36, scope: !3441)
!3443 = !DILocation(line: 1731, column: 46, scope: !3441)
!3444 = !DILocation(line: 1731, column: 32, scope: !3441)
!3445 = !DILocation(line: 1731, column: 25, scope: !3441)
!3446 = !DILocation(line: 1755, column: 17, scope: !3429)
!3447 = !DILocation(line: 1757, column: 13, scope: !3448)
!3448 = distinct !DILexicalBlock(scope: !3350, file: !282, line: 1757, column: 13)
!3449 = !DILocation(line: 1757, column: 13, scope: !3350)
!3450 = !DILocation(line: 1758, column: 17, scope: !3448)
!3451 = !DILocation(line: 1759, column: 13, scope: !3452)
!3452 = distinct !DILexicalBlock(scope: !3350, file: !282, line: 1759, column: 13)
!3453 = !DILocation(line: 1759, column: 13, scope: !3350)
!3454 = !DILocation(line: 1760, column: 17, scope: !3452)
!3455 = !DILocation(line: 1761, column: 9, scope: !3350)
!3456 = !DILocation(line: 1762, column: 1, scope: !3350)
!3457 = distinct !DISubprogram(name: "fts_sort", scope: !282, file: !282, line: 1779, type: !3458, isLocal: true, isDefinition: true, scopeLine: 1780, flags: DIFlagPrototyped, isOptimized: false, unit: !281, variables: !48)
!3458 = !DISubroutineType(types: !3459)
!3459 = !{!2904, !293, !2904, !143}
!3460 = !DILocalVariable(name: "sp", arg: 1, scope: !3457, file: !282, line: 1779, type: !293)
!3461 = !DILocation(line: 1779, column: 16, scope: !3457)
!3462 = !DILocalVariable(name: "head", arg: 2, scope: !3457, file: !282, line: 1779, type: !2904)
!3463 = !DILocation(line: 1779, column: 28, scope: !3457)
!3464 = !DILocalVariable(name: "nitems", arg: 3, scope: !3457, file: !282, line: 1779, type: !143)
!3465 = !DILocation(line: 1779, column: 50, scope: !3457)
!3466 = !DILocalVariable(name: "ap", scope: !3457, file: !282, line: 1781, type: !3467)
!3467 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2904, size: 64)
!3468 = !DILocation(line: 1781, column: 27, scope: !3457)
!3469 = !DILocalVariable(name: "p", scope: !3457, file: !282, line: 1781, type: !2904)
!3470 = !DILocation(line: 1781, column: 32, scope: !3457)
!3471 = !DILocalVariable(name: "dummy", scope: !3457, file: !282, line: 1790, type: !2904)
!3472 = !DILocation(line: 1790, column: 17, scope: !3457)
!3473 = !DILocalVariable(name: "compare", scope: !3457, file: !282, line: 1791, type: !433)
!3474 = !DILocation(line: 1791, column: 15, scope: !3457)
!3475 = !DILocation(line: 1793, column: 16, scope: !3457)
!3476 = !DILocation(line: 1793, column: 48, scope: !3457)
!3477 = !DILocation(line: 1793, column: 37, scope: !3457)
!3478 = !DILocation(line: 1793, column: 34, scope: !3457)
!3479 = !DILocation(line: 1792, column: 12, scope: !3457)
!3480 = !DILocation(line: 1794, column: 53, scope: !3457)
!3481 = !DILocation(line: 1794, column: 57, scope: !3457)
!3482 = !DILocation(line: 1794, column: 14, scope: !3457)
!3483 = !DILocation(line: 1804, column: 13, scope: !3484)
!3484 = distinct !DILexicalBlock(scope: !3457, file: !282, line: 1804, column: 13)
!3485 = !DILocation(line: 1804, column: 22, scope: !3484)
!3486 = !DILocation(line: 1804, column: 26, scope: !3484)
!3487 = !DILocation(line: 1804, column: 20, scope: !3484)
!3488 = !DILocation(line: 1804, column: 13, scope: !3457)
!3489 = !DILocalVariable(name: "a", scope: !3490, file: !282, line: 1805, type: !3467)
!3490 = distinct !DILexicalBlock(scope: !3484, file: !282, line: 1804, column: 38)
!3491 = !DILocation(line: 1805, column: 26, scope: !3490)
!3492 = !DILocation(line: 1807, column: 34, scope: !3490)
!3493 = !DILocation(line: 1807, column: 41, scope: !3490)
!3494 = !DILocation(line: 1807, column: 17, scope: !3490)
!3495 = !DILocation(line: 1807, column: 21, scope: !3490)
!3496 = !DILocation(line: 1807, column: 32, scope: !3490)
!3497 = !DILocation(line: 1808, column: 44, scope: !3498)
!3498 = distinct !DILexicalBlock(scope: !3490, file: !282, line: 1808, column: 21)
!3499 = !DILocation(line: 1808, column: 48, scope: !3498)
!3500 = !DILocation(line: 1808, column: 42, scope: !3498)
!3501 = !DILocation(line: 1809, column: 21, scope: !3498)
!3502 = !DILocation(line: 1809, column: 40, scope: !3498)
!3503 = !DILocation(line: 1809, column: 44, scope: !3498)
!3504 = !DILocation(line: 1810, column: 40, scope: !3498)
!3505 = !DILocation(line: 1810, column: 44, scope: !3498)
!3506 = !DILocation(line: 1810, column: 55, scope: !3498)
!3507 = !DILocation(line: 1809, column: 31, scope: !3498)
!3508 = !DILocation(line: 1809, column: 29, scope: !3498)
!3509 = !DILocation(line: 1808, column: 21, scope: !3490)
!3510 = !DILocation(line: 1811, column: 30, scope: !3511)
!3511 = distinct !DILexicalBlock(scope: !3498, file: !282, line: 1810, column: 70)
!3512 = !DILocation(line: 1811, column: 34, scope: !3511)
!3513 = !DILocation(line: 1811, column: 25, scope: !3511)
!3514 = !DILocation(line: 1812, column: 25, scope: !3511)
!3515 = !DILocation(line: 1812, column: 29, scope: !3511)
!3516 = !DILocation(line: 1812, column: 39, scope: !3511)
!3517 = !DILocation(line: 1813, column: 25, scope: !3511)
!3518 = !DILocation(line: 1813, column: 29, scope: !3511)
!3519 = !DILocation(line: 1813, column: 40, scope: !3511)
!3520 = !DILocation(line: 1814, column: 33, scope: !3511)
!3521 = !DILocation(line: 1814, column: 25, scope: !3511)
!3522 = !DILocation(line: 1816, column: 33, scope: !3490)
!3523 = !DILocation(line: 1816, column: 17, scope: !3490)
!3524 = !DILocation(line: 1816, column: 21, scope: !3490)
!3525 = !DILocation(line: 1816, column: 31, scope: !3490)
!3526 = !DILocation(line: 1817, column: 9, scope: !3490)
!3527 = !DILocation(line: 1818, column: 19, scope: !3528)
!3528 = distinct !DILexicalBlock(scope: !3457, file: !282, line: 1818, column: 9)
!3529 = !DILocation(line: 1818, column: 23, scope: !3528)
!3530 = !DILocation(line: 1818, column: 17, scope: !3528)
!3531 = !DILocation(line: 1818, column: 38, scope: !3528)
!3532 = !DILocation(line: 1818, column: 36, scope: !3528)
!3533 = !DILocation(line: 1818, column: 14, scope: !3528)
!3534 = !DILocation(line: 1818, column: 44, scope: !3535)
!3535 = distinct !DILexicalBlock(scope: !3528, file: !282, line: 1818, column: 9)
!3536 = !DILocation(line: 1818, column: 9, scope: !3528)
!3537 = !DILocation(line: 1819, column: 25, scope: !3535)
!3538 = !DILocation(line: 1819, column: 20, scope: !3535)
!3539 = !DILocation(line: 1819, column: 23, scope: !3535)
!3540 = !DILocation(line: 1819, column: 17, scope: !3535)
!3541 = !DILocation(line: 1818, column: 51, scope: !3535)
!3542 = !DILocation(line: 1818, column: 54, scope: !3535)
!3543 = !DILocation(line: 1818, column: 49, scope: !3535)
!3544 = !DILocation(line: 1818, column: 9, scope: !3535)
!3545 = distinct !{!3545, !3536, !3546}
!3546 = !DILocation(line: 1819, column: 25, scope: !3528)
!3547 = !DILocation(line: 1820, column: 23, scope: !3457)
!3548 = !DILocation(line: 1820, column: 27, scope: !3457)
!3549 = !DILocation(line: 1820, column: 15, scope: !3457)
!3550 = !DILocation(line: 1820, column: 38, scope: !3457)
!3551 = !DILocation(line: 1820, column: 64, scope: !3457)
!3552 = !DILocation(line: 1820, column: 9, scope: !3457)
!3553 = !DILocation(line: 1821, column: 28, scope: !3554)
!3554 = distinct !DILexicalBlock(scope: !3457, file: !282, line: 1821, column: 9)
!3555 = !DILocation(line: 1821, column: 32, scope: !3554)
!3556 = !DILocation(line: 1821, column: 26, scope: !3554)
!3557 = !DILocation(line: 1821, column: 21, scope: !3554)
!3558 = !DILocation(line: 1821, column: 19, scope: !3554)
!3559 = !DILocation(line: 1821, column: 14, scope: !3554)
!3560 = !DILocation(line: 1821, column: 44, scope: !3561)
!3561 = distinct !DILexicalBlock(scope: !3554, file: !282, line: 1821, column: 9)
!3562 = !DILocation(line: 1821, column: 9, scope: !3554)
!3563 = !DILocation(line: 1822, column: 35, scope: !3561)
!3564 = !DILocation(line: 1822, column: 17, scope: !3561)
!3565 = !DILocation(line: 1822, column: 24, scope: !3561)
!3566 = !DILocation(line: 1822, column: 33, scope: !3561)
!3567 = !DILocation(line: 1821, column: 54, scope: !3561)
!3568 = !DILocation(line: 1821, column: 9, scope: !3561)
!3569 = distinct !{!3569, !3562, !3570}
!3570 = !DILocation(line: 1822, column: 39, scope: !3554)
!3571 = !DILocation(line: 1823, column: 9, scope: !3457)
!3572 = !DILocation(line: 1823, column: 16, scope: !3457)
!3573 = !DILocation(line: 1823, column: 25, scope: !3457)
!3574 = !DILocation(line: 1824, column: 17, scope: !3457)
!3575 = !DILocation(line: 1824, column: 9, scope: !3457)
!3576 = !DILocation(line: 1825, column: 1, scope: !3457)
!3577 = !DILocalVariable(name: "fts", arg: 1, scope: !290, file: !289, line: 50, type: !293)
!3578 = !DILocation(line: 50, column: 17, scope: !290)
!3579 = !DILocation(line: 52, column: 7, scope: !3580)
!3580 = distinct !DILexicalBlock(scope: !290, file: !289, line: 52, column: 7)
!3581 = !DILocation(line: 52, column: 12, scope: !3580)
!3582 = !DILocation(line: 52, column: 24, scope: !3580)
!3583 = !DILocation(line: 52, column: 7, scope: !290)
!3584 = !DILocation(line: 55, column: 27, scope: !3585)
!3585 = distinct !DILexicalBlock(scope: !3580, file: !289, line: 53, column: 5)
!3586 = !DILocation(line: 55, column: 7, scope: !3585)
!3587 = !DILocation(line: 55, column: 12, scope: !3585)
!3588 = !DILocation(line: 55, column: 22, scope: !3585)
!3589 = !DILocation(line: 55, column: 25, scope: !3585)
!3590 = !DILocation(line: 57, column: 13, scope: !3591)
!3591 = distinct !DILexicalBlock(scope: !3585, file: !289, line: 57, column: 11)
!3592 = !DILocation(line: 57, column: 18, scope: !3591)
!3593 = !DILocation(line: 57, column: 28, scope: !3591)
!3594 = !DILocation(line: 57, column: 11, scope: !3585)
!3595 = !DILocation(line: 58, column: 9, scope: !3591)
!3596 = !DILocation(line: 59, column: 5, scope: !3585)
!3597 = !DILocation(line: 62, column: 30, scope: !3598)
!3598 = distinct !DILexicalBlock(scope: !3580, file: !289, line: 61, column: 5)
!3599 = !DILocation(line: 62, column: 7, scope: !3598)
!3600 = !DILocation(line: 62, column: 12, scope: !3598)
!3601 = !DILocation(line: 62, column: 22, scope: !3598)
!3602 = !DILocation(line: 62, column: 28, scope: !3598)
!3603 = !DILocation(line: 63, column: 13, scope: !3604)
!3604 = distinct !DILexicalBlock(scope: !3598, file: !289, line: 63, column: 11)
!3605 = !DILocation(line: 63, column: 18, scope: !3604)
!3606 = !DILocation(line: 63, column: 28, scope: !3604)
!3607 = !DILocation(line: 63, column: 11, scope: !3598)
!3608 = !DILocation(line: 64, column: 9, scope: !3604)
!3609 = !DILocation(line: 65, column: 25, scope: !3598)
!3610 = !DILocation(line: 65, column: 30, scope: !3598)
!3611 = !DILocation(line: 65, column: 40, scope: !3598)
!3612 = !DILocation(line: 65, column: 7, scope: !3598)
!3613 = !DILocation(line: 68, column: 3, scope: !290)
!3614 = !DILocation(line: 69, column: 1, scope: !290)
!3615 = distinct !DISubprogram(name: "diropen", scope: !282, file: !282, line: 355, type: !3616, isLocal: true, isDefinition: true, scopeLine: 356, flags: DIFlagPrototyped, isOptimized: false, unit: !281, variables: !48)
!3616 = !DISubroutineType(types: !3617)
!3617 = !{!46, !3618, !35}
!3618 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3619, size: 64)
!3619 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !294)
!3620 = !DILocalVariable(name: "sp", arg: 1, scope: !3615, file: !282, line: 355, type: !3618)
!3621 = !DILocation(line: 355, column: 21, scope: !3615)
!3622 = !DILocalVariable(name: "dir", arg: 2, scope: !3615, file: !282, line: 355, type: !35)
!3623 = !DILocation(line: 355, column: 37, scope: !3615)
!3624 = !DILocalVariable(name: "open_flags", scope: !3615, file: !282, line: 357, type: !46)
!3625 = !DILocation(line: 357, column: 7, scope: !3615)
!3626 = !DILocation(line: 358, column: 24, scope: !3615)
!3627 = !DILocation(line: 358, column: 21, scope: !3615)
!3628 = !DILocalVariable(name: "fd", scope: !3615, file: !282, line: 360, type: !46)
!3629 = !DILocation(line: 360, column: 7, scope: !3615)
!3630 = !DILocation(line: 360, column: 13, scope: !3615)
!3631 = !DILocation(line: 361, column: 23, scope: !3615)
!3632 = !DILocation(line: 361, column: 27, scope: !3615)
!3633 = !DILocation(line: 361, column: 39, scope: !3615)
!3634 = !DILocation(line: 361, column: 44, scope: !3615)
!3635 = !DILocation(line: 361, column: 15, scope: !3615)
!3636 = !DILocation(line: 362, column: 21, scope: !3615)
!3637 = !DILocation(line: 362, column: 26, scope: !3615)
!3638 = !DILocation(line: 362, column: 15, scope: !3615)
!3639 = !DILocation(line: 363, column: 12, scope: !3640)
!3640 = distinct !DILexicalBlock(scope: !3615, file: !282, line: 363, column: 7)
!3641 = !DILocation(line: 363, column: 9, scope: !3640)
!3642 = !DILocation(line: 363, column: 7, scope: !3615)
!3643 = !DILocation(line: 364, column: 23, scope: !3640)
!3644 = !DILocation(line: 364, column: 5, scope: !3640)
!3645 = !DILocation(line: 365, column: 10, scope: !3615)
!3646 = !DILocation(line: 365, column: 3, scope: !3615)
!3647 = distinct !DISubprogram(name: "fts_lfree", scope: !282, file: !282, line: 1859, type: !3648, isLocal: true, isDefinition: true, scopeLine: 1860, flags: DIFlagPrototyped, isOptimized: false, unit: !281, variables: !48)
!3648 = !DISubroutineType(types: !3649)
!3649 = !{null, !2904}
!3650 = !DILocalVariable(name: "head", arg: 1, scope: !3647, file: !282, line: 1859, type: !2904)
!3651 = !DILocation(line: 1859, column: 29, scope: !3647)
!3652 = !DILocalVariable(name: "p", scope: !3647, file: !282, line: 1861, type: !2904)
!3653 = !DILocation(line: 1861, column: 26, scope: !3647)
!3654 = !DILocation(line: 1864, column: 9, scope: !3647)
!3655 = !DILocation(line: 1864, column: 21, scope: !3647)
!3656 = !DILocation(line: 1864, column: 19, scope: !3647)
!3657 = !DILocation(line: 1865, column: 24, scope: !3658)
!3658 = distinct !DILexicalBlock(scope: !3647, file: !282, line: 1864, column: 28)
!3659 = !DILocation(line: 1865, column: 30, scope: !3658)
!3660 = !DILocation(line: 1865, column: 22, scope: !3658)
!3661 = !DILocation(line: 1866, column: 22, scope: !3658)
!3662 = !DILocation(line: 1866, column: 17, scope: !3658)
!3663 = distinct !{!3663, !3654, !3664}
!3664 = !DILocation(line: 1867, column: 9, scope: !3647)
!3665 = !DILocation(line: 1868, column: 1, scope: !3647)
!3666 = distinct !DISubprogram(name: "AD_hash", scope: !289, file: !289, line: 41, type: !3667, isLocal: true, isDefinition: true, scopeLine: 42, flags: DIFlagPrototyped, isOptimized: false, unit: !281, variables: !48)
!3667 = !DISubroutineType(types: !3668)
!3668 = !{!143, !436, !143}
!3669 = !DILocalVariable(name: "x", arg: 1, scope: !3666, file: !289, line: 41, type: !436)
!3670 = !DILocation(line: 41, column: 22, scope: !3666)
!3671 = !DILocalVariable(name: "table_size", arg: 2, scope: !3666, file: !289, line: 41, type: !143)
!3672 = !DILocation(line: 41, column: 32, scope: !3666)
!3673 = !DILocalVariable(name: "ax", scope: !3666, file: !289, line: 43, type: !3674)
!3674 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3675, size: 64)
!3675 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3676)
!3676 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Active_dir", file: !289, line: 24, size: 192, elements: !3677)
!3677 = !{!3678, !3679, !3680}
!3678 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !3676, file: !289, line: 26, baseType: !371, size: 64)
!3679 = !DIDerivedType(tag: DW_TAG_member, name: "ino", scope: !3676, file: !289, line: 27, baseType: !402, size: 64, offset: 64)
!3680 = !DIDerivedType(tag: DW_TAG_member, name: "fts_ent", scope: !3676, file: !289, line: 28, baseType: !2904, size: 64, offset: 128)
!3681 = !DILocation(line: 43, column: 28, scope: !3666)
!3682 = !DILocation(line: 43, column: 33, scope: !3666)
!3683 = !DILocation(line: 44, column: 22, scope: !3666)
!3684 = !DILocation(line: 44, column: 26, scope: !3666)
!3685 = !DILocation(line: 44, column: 32, scope: !3666)
!3686 = !DILocation(line: 44, column: 30, scope: !3666)
!3687 = !DILocation(line: 44, column: 3, scope: !3666)
!3688 = distinct !DISubprogram(name: "AD_compare", scope: !289, file: !289, line: 32, type: !3689, isLocal: true, isDefinition: true, scopeLine: 33, flags: DIFlagPrototyped, isOptimized: false, unit: !281, variables: !48)
!3689 = !DISubroutineType(types: !3690)
!3690 = !{!131, !436, !436}
!3691 = !DILocalVariable(name: "x", arg: 1, scope: !3688, file: !289, line: 32, type: !436)
!3692 = !DILocation(line: 32, column: 25, scope: !3688)
!3693 = !DILocalVariable(name: "y", arg: 2, scope: !3688, file: !289, line: 32, type: !436)
!3694 = !DILocation(line: 32, column: 40, scope: !3688)
!3695 = !DILocalVariable(name: "ax", scope: !3688, file: !289, line: 34, type: !3674)
!3696 = !DILocation(line: 34, column: 28, scope: !3688)
!3697 = !DILocation(line: 34, column: 33, scope: !3688)
!3698 = !DILocalVariable(name: "ay", scope: !3688, file: !289, line: 35, type: !3674)
!3699 = !DILocation(line: 35, column: 28, scope: !3688)
!3700 = !DILocation(line: 35, column: 33, scope: !3688)
!3701 = !DILocation(line: 36, column: 10, scope: !3688)
!3702 = !DILocation(line: 36, column: 14, scope: !3688)
!3703 = !DILocation(line: 36, column: 21, scope: !3688)
!3704 = !DILocation(line: 36, column: 25, scope: !3688)
!3705 = !DILocation(line: 36, column: 18, scope: !3688)
!3706 = !DILocation(line: 37, column: 7, scope: !3688)
!3707 = !DILocation(line: 37, column: 10, scope: !3688)
!3708 = !DILocation(line: 37, column: 14, scope: !3688)
!3709 = !DILocation(line: 37, column: 21, scope: !3688)
!3710 = !DILocation(line: 37, column: 25, scope: !3688)
!3711 = !DILocation(line: 37, column: 18, scope: !3688)
!3712 = !DILocation(line: 36, column: 3, scope: !3688)
!3713 = distinct !DISubprogram(name: "fts_compar", scope: !282, file: !282, line: 1765, type: !434, isLocal: true, isDefinition: true, scopeLine: 1766, flags: DIFlagPrototyped, isOptimized: false, unit: !281, variables: !48)
!3714 = !DILocalVariable(name: "a", arg: 1, scope: !3713, file: !282, line: 1765, type: !436)
!3715 = !DILocation(line: 1765, column: 25, scope: !3713)
!3716 = !DILocalVariable(name: "b", arg: 2, scope: !3713, file: !282, line: 1765, type: !436)
!3717 = !DILocation(line: 1765, column: 40, scope: !3713)
!3718 = !DILocalVariable(name: "pa", scope: !3713, file: !282, line: 1772, type: !438)
!3719 = !DILocation(line: 1772, column: 18, scope: !3713)
!3720 = !DILocation(line: 1772, column: 41, scope: !3713)
!3721 = !DILocation(line: 1772, column: 23, scope: !3713)
!3722 = !DILocalVariable(name: "pb", scope: !3713, file: !282, line: 1773, type: !438)
!3723 = !DILocation(line: 1773, column: 18, scope: !3713)
!3724 = !DILocation(line: 1773, column: 41, scope: !3713)
!3725 = !DILocation(line: 1773, column: 23, scope: !3713)
!3726 = !DILocation(line: 1774, column: 10, scope: !3713)
!3727 = !DILocation(line: 1774, column: 17, scope: !3713)
!3728 = !DILocation(line: 1774, column: 26, scope: !3713)
!3729 = !DILocation(line: 1774, column: 38, scope: !3713)
!3730 = !DILocation(line: 1774, column: 42, scope: !3713)
!3731 = !DILocation(line: 1774, column: 3, scope: !3713)
!3732 = distinct !DISubprogram(name: "fts_close", scope: !282, file: !282, line: 571, type: !3733, isLocal: false, isDefinition: true, scopeLine: 572, flags: DIFlagPrototyped, isOptimized: false, unit: !281, variables: !48)
!3733 = !DISubroutineType(types: !3734)
!3734 = !{!46, !293}
!3735 = !DILocalVariable(name: "sp", arg: 1, scope: !3732, file: !282, line: 571, type: !293)
!3736 = !DILocation(line: 571, column: 17, scope: !3732)
!3737 = !DILocalVariable(name: "freep", scope: !3732, file: !282, line: 573, type: !2904)
!3738 = !DILocation(line: 573, column: 26, scope: !3732)
!3739 = !DILocalVariable(name: "p", scope: !3732, file: !282, line: 573, type: !2904)
!3740 = !DILocation(line: 573, column: 34, scope: !3732)
!3741 = !DILocalVariable(name: "saved_errno", scope: !3732, file: !282, line: 574, type: !46)
!3742 = !DILocation(line: 574, column: 13, scope: !3732)
!3743 = !DILocation(line: 581, column: 13, scope: !3744)
!3744 = distinct !DILexicalBlock(scope: !3732, file: !282, line: 581, column: 13)
!3745 = !DILocation(line: 581, column: 17, scope: !3744)
!3746 = !DILocation(line: 581, column: 13, scope: !3732)
!3747 = !DILocation(line: 582, column: 26, scope: !3748)
!3748 = distinct !DILexicalBlock(scope: !3749, file: !282, line: 582, column: 17)
!3749 = distinct !DILexicalBlock(scope: !3744, file: !282, line: 581, column: 26)
!3750 = !DILocation(line: 582, column: 30, scope: !3748)
!3751 = !DILocation(line: 582, column: 24, scope: !3748)
!3752 = !DILocation(line: 582, column: 22, scope: !3748)
!3753 = !DILocation(line: 582, column: 39, scope: !3754)
!3754 = distinct !DILexicalBlock(scope: !3748, file: !282, line: 582, column: 17)
!3755 = !DILocation(line: 582, column: 42, scope: !3754)
!3756 = !DILocation(line: 582, column: 52, scope: !3754)
!3757 = !DILocation(line: 582, column: 17, scope: !3748)
!3758 = !DILocation(line: 583, column: 33, scope: !3759)
!3759 = distinct !DILexicalBlock(scope: !3754, file: !282, line: 582, column: 71)
!3760 = !DILocation(line: 583, column: 31, scope: !3759)
!3761 = !DILocation(line: 584, column: 29, scope: !3759)
!3762 = !DILocation(line: 584, column: 32, scope: !3759)
!3763 = !DILocation(line: 584, column: 41, scope: !3759)
!3764 = !DILocation(line: 584, column: 51, scope: !3759)
!3765 = !DILocation(line: 584, column: 54, scope: !3759)
!3766 = !DILocation(line: 584, column: 65, scope: !3759)
!3767 = !DILocation(line: 584, column: 68, scope: !3759)
!3768 = !DILocation(line: 584, column: 27, scope: !3759)
!3769 = !DILocation(line: 585, column: 30, scope: !3759)
!3770 = !DILocation(line: 585, column: 25, scope: !3759)
!3771 = !DILocation(line: 582, column: 17, scope: !3754)
!3772 = distinct !{!3772, !3757, !3773}
!3773 = !DILocation(line: 586, column: 17, scope: !3748)
!3774 = !DILocation(line: 587, column: 22, scope: !3749)
!3775 = !DILocation(line: 587, column: 17, scope: !3749)
!3776 = !DILocation(line: 588, column: 9, scope: !3749)
!3777 = !DILocation(line: 591, column: 13, scope: !3778)
!3778 = distinct !DILexicalBlock(scope: !3732, file: !282, line: 591, column: 13)
!3779 = !DILocation(line: 591, column: 17, scope: !3778)
!3780 = !DILocation(line: 591, column: 13, scope: !3732)
!3781 = !DILocation(line: 592, column: 27, scope: !3778)
!3782 = !DILocation(line: 592, column: 31, scope: !3778)
!3783 = !DILocation(line: 592, column: 17, scope: !3778)
!3784 = !DILocation(line: 593, column: 14, scope: !3732)
!3785 = !DILocation(line: 593, column: 18, scope: !3732)
!3786 = !DILocation(line: 593, column: 9, scope: !3732)
!3787 = !DILocation(line: 594, column: 14, scope: !3732)
!3788 = !DILocation(line: 594, column: 18, scope: !3732)
!3789 = !DILocation(line: 594, column: 9, scope: !3732)
!3790 = !DILocation(line: 596, column: 13, scope: !3791)
!3791 = distinct !DILexicalBlock(scope: !3732, file: !282, line: 596, column: 13)
!3792 = !DILocation(line: 596, column: 13, scope: !3732)
!3793 = !DILocation(line: 598, column: 22, scope: !3794)
!3794 = distinct !DILexicalBlock(scope: !3795, file: !282, line: 598, column: 17)
!3795 = distinct !DILexicalBlock(scope: !3791, file: !282, line: 597, column: 11)
!3796 = !DILocation(line: 598, column: 26, scope: !3794)
!3797 = !DILocation(line: 598, column: 19, scope: !3794)
!3798 = !DILocation(line: 598, column: 17, scope: !3795)
!3799 = !DILocation(line: 599, column: 26, scope: !3800)
!3800 = distinct !DILexicalBlock(scope: !3794, file: !282, line: 599, column: 19)
!3801 = !DILocation(line: 599, column: 30, scope: !3800)
!3802 = !DILocation(line: 599, column: 19, scope: !3800)
!3803 = !DILocation(line: 599, column: 19, scope: !3794)
!3804 = !DILocation(line: 600, column: 31, scope: !3800)
!3805 = !DILocation(line: 600, column: 29, scope: !3800)
!3806 = !DILocation(line: 600, column: 17, scope: !3800)
!3807 = !DILocation(line: 599, column: 40, scope: !3800)
!3808 = !DILocation(line: 601, column: 11, scope: !3795)
!3809 = !DILocation(line: 602, column: 19, scope: !3810)
!3810 = distinct !DILexicalBlock(scope: !3791, file: !282, line: 602, column: 18)
!3811 = !DILocation(line: 602, column: 18, scope: !3791)
!3812 = !DILocation(line: 605, column: 24, scope: !3813)
!3813 = distinct !DILexicalBlock(scope: !3814, file: !282, line: 605, column: 17)
!3814 = distinct !DILexicalBlock(scope: !3810, file: !282, line: 603, column: 11)
!3815 = !DILocation(line: 605, column: 28, scope: !3813)
!3816 = !DILocation(line: 605, column: 17, scope: !3813)
!3817 = !DILocation(line: 605, column: 17, scope: !3814)
!3818 = !DILocation(line: 606, column: 29, scope: !3813)
!3819 = !DILocation(line: 606, column: 27, scope: !3813)
!3820 = !DILocation(line: 606, column: 15, scope: !3813)
!3821 = !DILocation(line: 610, column: 24, scope: !3822)
!3822 = distinct !DILexicalBlock(scope: !3814, file: !282, line: 610, column: 17)
!3823 = !DILocation(line: 610, column: 28, scope: !3822)
!3824 = !DILocation(line: 610, column: 17, scope: !3822)
!3825 = !DILocation(line: 610, column: 17, scope: !3814)
!3826 = !DILocation(line: 611, column: 19, scope: !3827)
!3827 = distinct !DILexicalBlock(scope: !3822, file: !282, line: 611, column: 19)
!3828 = !DILocation(line: 611, column: 31, scope: !3827)
!3829 = !DILocation(line: 611, column: 19, scope: !3822)
!3830 = !DILocation(line: 612, column: 31, scope: !3827)
!3831 = !DILocation(line: 612, column: 29, scope: !3827)
!3832 = !DILocation(line: 612, column: 17, scope: !3827)
!3833 = !DILocation(line: 611, column: 34, scope: !3827)
!3834 = !DILocation(line: 613, column: 11, scope: !3814)
!3835 = !DILocation(line: 615, column: 25, scope: !3732)
!3836 = !DILocation(line: 615, column: 29, scope: !3732)
!3837 = !DILocation(line: 615, column: 9, scope: !3732)
!3838 = !DILocation(line: 618, column: 13, scope: !3839)
!3839 = distinct !DILexicalBlock(scope: !3732, file: !282, line: 618, column: 13)
!3840 = !DILocation(line: 618, column: 17, scope: !3839)
!3841 = !DILocation(line: 618, column: 13, scope: !3732)
!3842 = !DILocation(line: 619, column: 22, scope: !3839)
!3843 = !DILocation(line: 619, column: 26, scope: !3839)
!3844 = !DILocation(line: 619, column: 11, scope: !3839)
!3845 = !DILocation(line: 622, column: 19, scope: !3732)
!3846 = !DILocation(line: 622, column: 9, scope: !3732)
!3847 = !DILocation(line: 625, column: 14, scope: !3732)
!3848 = !DILocation(line: 625, column: 9, scope: !3732)
!3849 = !DILocation(line: 628, column: 13, scope: !3850)
!3850 = distinct !DILexicalBlock(scope: !3732, file: !282, line: 628, column: 13)
!3851 = !DILocation(line: 628, column: 13, scope: !3732)
!3852 = !DILocation(line: 629, column: 17, scope: !3853)
!3853 = distinct !DILexicalBlock(scope: !3850, file: !282, line: 628, column: 26)
!3854 = !DILocation(line: 630, column: 17, scope: !3853)
!3855 = !DILocation(line: 633, column: 9, scope: !3732)
!3856 = !DILocation(line: 634, column: 1, scope: !3732)
!3857 = distinct !DISubprogram(name: "fd_ring_clear", scope: !282, file: !282, line: 274, type: !3858, isLocal: true, isDefinition: true, scopeLine: 275, flags: DIFlagPrototyped, isOptimized: false, unit: !281, variables: !48)
!3858 = !DISubroutineType(types: !3859)
!3859 = !{null, !3860}
!3860 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !410, size: 64)
!3861 = !DILocalVariable(name: "fd_ring", arg: 1, scope: !3857, file: !282, line: 274, type: !3860)
!3862 = !DILocation(line: 274, column: 24, scope: !3857)
!3863 = !DILocation(line: 276, column: 3, scope: !3857)
!3864 = !DILocation(line: 276, column: 27, scope: !3857)
!3865 = !DILocation(line: 276, column: 13, scope: !3857)
!3866 = !DILocation(line: 276, column: 11, scope: !3857)
!3867 = !DILocalVariable(name: "fd", scope: !3868, file: !282, line: 278, type: !46)
!3868 = distinct !DILexicalBlock(scope: !3857, file: !282, line: 277, column: 5)
!3869 = !DILocation(line: 278, column: 11, scope: !3868)
!3870 = !DILocation(line: 278, column: 28, scope: !3868)
!3871 = !DILocation(line: 278, column: 16, scope: !3868)
!3872 = !DILocation(line: 279, column: 16, scope: !3873)
!3873 = distinct !DILexicalBlock(scope: !3868, file: !282, line: 279, column: 11)
!3874 = !DILocation(line: 279, column: 13, scope: !3873)
!3875 = !DILocation(line: 279, column: 11, scope: !3868)
!3876 = !DILocation(line: 280, column: 16, scope: !3873)
!3877 = !DILocation(line: 280, column: 9, scope: !3873)
!3878 = distinct !{!3878, !3863, !3879}
!3879 = !DILocation(line: 281, column: 5, scope: !3857)
!3880 = !DILocation(line: 282, column: 1, scope: !3857)
!3881 = distinct !DISubprogram(name: "free_dir", scope: !289, file: !289, line: 151, type: !3882, isLocal: true, isDefinition: true, scopeLine: 152, flags: DIFlagPrototyped, isOptimized: false, unit: !281, variables: !48)
!3882 = !DISubroutineType(types: !3883)
!3883 = !{null, !293}
!3884 = !DILocalVariable(name: "sp", arg: 1, scope: !3881, file: !289, line: 151, type: !293)
!3885 = !DILocation(line: 151, column: 16, scope: !3881)
!3886 = !DILocation(line: 153, column: 7, scope: !3887)
!3887 = distinct !DILexicalBlock(scope: !3881, file: !289, line: 153, column: 7)
!3888 = !DILocation(line: 153, column: 11, scope: !3887)
!3889 = !DILocation(line: 153, column: 23, scope: !3887)
!3890 = !DILocation(line: 153, column: 7, scope: !3881)
!3891 = !DILocation(line: 155, column: 11, scope: !3892)
!3892 = distinct !DILexicalBlock(scope: !3893, file: !289, line: 155, column: 11)
!3893 = distinct !DILexicalBlock(scope: !3887, file: !289, line: 154, column: 5)
!3894 = !DILocation(line: 155, column: 15, scope: !3892)
!3895 = !DILocation(line: 155, column: 25, scope: !3892)
!3896 = !DILocation(line: 155, column: 11, scope: !3893)
!3897 = !DILocation(line: 156, column: 20, scope: !3892)
!3898 = !DILocation(line: 156, column: 24, scope: !3892)
!3899 = !DILocation(line: 156, column: 34, scope: !3892)
!3900 = !DILocation(line: 156, column: 9, scope: !3892)
!3901 = !DILocation(line: 157, column: 5, scope: !3893)
!3902 = !DILocation(line: 159, column: 11, scope: !3887)
!3903 = !DILocation(line: 159, column: 15, scope: !3887)
!3904 = !DILocation(line: 159, column: 25, scope: !3887)
!3905 = !DILocation(line: 159, column: 5, scope: !3887)
!3906 = !DILocation(line: 160, column: 1, scope: !3881)
!3907 = distinct !DISubprogram(name: "fts_read", scope: !282, file: !282, line: 813, type: !3908, isLocal: false, isDefinition: true, scopeLine: 814, flags: DIFlagPrototyped, isOptimized: false, unit: !281, variables: !48)
!3908 = !DISubroutineType(types: !3909)
!3909 = !{!2904, !293}
!3910 = !DILocalVariable(name: "sp", arg: 1, scope: !3907, file: !282, line: 813, type: !293)
!3911 = !DILocation(line: 813, column: 25, scope: !3907)
!3912 = !DILocalVariable(name: "p", scope: !3907, file: !282, line: 815, type: !2904)
!3913 = !DILocation(line: 815, column: 26, scope: !3907)
!3914 = !DILocalVariable(name: "tmp", scope: !3907, file: !282, line: 815, type: !2904)
!3915 = !DILocation(line: 815, column: 30, scope: !3907)
!3916 = !DILocalVariable(name: "instr", scope: !3907, file: !282, line: 816, type: !183)
!3917 = !DILocation(line: 816, column: 37, scope: !3907)
!3918 = !DILocalVariable(name: "t", scope: !3907, file: !282, line: 817, type: !38)
!3919 = !DILocation(line: 817, column: 24, scope: !3907)
!3920 = !DILocation(line: 820, column: 13, scope: !3921)
!3921 = distinct !DILexicalBlock(scope: !3907, file: !282, line: 820, column: 13)
!3922 = !DILocation(line: 820, column: 17, scope: !3921)
!3923 = !DILocation(line: 820, column: 25, scope: !3921)
!3924 = !DILocation(line: 820, column: 33, scope: !3921)
!3925 = !DILocation(line: 820, column: 36, scope: !3921)
!3926 = !DILocation(line: 820, column: 13, scope: !3907)
!3927 = !DILocation(line: 821, column: 17, scope: !3921)
!3928 = !DILocation(line: 824, column: 13, scope: !3907)
!3929 = !DILocation(line: 824, column: 17, scope: !3907)
!3930 = !DILocation(line: 824, column: 11, scope: !3907)
!3931 = !DILocation(line: 827, column: 17, scope: !3907)
!3932 = !DILocation(line: 827, column: 20, scope: !3907)
!3933 = !DILocation(line: 827, column: 15, scope: !3907)
!3934 = !DILocation(line: 828, column: 9, scope: !3907)
!3935 = !DILocation(line: 828, column: 12, scope: !3907)
!3936 = !DILocation(line: 828, column: 22, scope: !3907)
!3937 = !DILocation(line: 831, column: 13, scope: !3938)
!3938 = distinct !DILexicalBlock(scope: !3907, file: !282, line: 831, column: 13)
!3939 = !DILocation(line: 831, column: 19, scope: !3938)
!3940 = !DILocation(line: 831, column: 13, scope: !3907)
!3941 = !DILocation(line: 832, column: 40, scope: !3942)
!3942 = distinct !DILexicalBlock(scope: !3938, file: !282, line: 831, column: 33)
!3943 = !DILocation(line: 832, column: 44, scope: !3942)
!3944 = !DILocation(line: 832, column: 31, scope: !3942)
!3945 = !DILocation(line: 832, column: 17, scope: !3942)
!3946 = !DILocation(line: 832, column: 20, scope: !3942)
!3947 = !DILocation(line: 832, column: 29, scope: !3942)
!3948 = !DILocation(line: 833, column: 25, scope: !3942)
!3949 = !DILocation(line: 833, column: 17, scope: !3942)
!3950 = !DILocation(line: 844, column: 13, scope: !3951)
!3951 = distinct !DILexicalBlock(scope: !3907, file: !282, line: 844, column: 13)
!3952 = !DILocation(line: 844, column: 19, scope: !3951)
!3953 = !DILocation(line: 844, column: 33, scope: !3951)
!3954 = !DILocation(line: 845, column: 14, scope: !3951)
!3955 = !DILocation(line: 845, column: 17, scope: !3951)
!3956 = !DILocation(line: 845, column: 26, scope: !3951)
!3957 = !DILocation(line: 845, column: 36, scope: !3951)
!3958 = !DILocation(line: 845, column: 39, scope: !3951)
!3959 = !DILocation(line: 845, column: 42, scope: !3951)
!3960 = !DILocation(line: 845, column: 51, scope: !3951)
!3961 = !DILocation(line: 844, column: 13, scope: !3907)
!3962 = !DILocation(line: 846, column: 40, scope: !3963)
!3963 = distinct !DILexicalBlock(scope: !3951, file: !282, line: 845, column: 67)
!3964 = !DILocation(line: 846, column: 44, scope: !3963)
!3965 = !DILocation(line: 846, column: 31, scope: !3963)
!3966 = !DILocation(line: 846, column: 17, scope: !3963)
!3967 = !DILocation(line: 846, column: 20, scope: !3963)
!3968 = !DILocation(line: 846, column: 29, scope: !3963)
!3969 = !DILocation(line: 847, column: 21, scope: !3970)
!3970 = distinct !DILexicalBlock(scope: !3963, file: !282, line: 847, column: 21)
!3971 = !DILocation(line: 847, column: 24, scope: !3970)
!3972 = !DILocation(line: 847, column: 33, scope: !3970)
!3973 = !DILocation(line: 847, column: 42, scope: !3970)
!3974 = !DILocation(line: 847, column: 46, scope: !3970)
!3975 = !DILocation(line: 847, column: 21, scope: !3963)
!3976 = !DILocation(line: 848, column: 54, scope: !3977)
!3977 = distinct !DILexicalBlock(scope: !3978, file: !282, line: 848, column: 29)
!3978 = distinct !DILexicalBlock(scope: !3970, file: !282, line: 847, column: 66)
!3979 = !DILocation(line: 848, column: 45, scope: !3977)
!3980 = !DILocation(line: 848, column: 30, scope: !3977)
!3981 = !DILocation(line: 848, column: 33, scope: !3977)
!3982 = !DILocation(line: 848, column: 43, scope: !3977)
!3983 = !DILocation(line: 848, column: 64, scope: !3977)
!3984 = !DILocation(line: 848, column: 29, scope: !3978)
!3985 = !DILocation(line: 849, column: 48, scope: !3986)
!3986 = distinct !DILexicalBlock(scope: !3977, file: !282, line: 848, column: 69)
!3987 = !DILocation(line: 849, column: 33, scope: !3986)
!3988 = !DILocation(line: 849, column: 36, scope: !3986)
!3989 = !DILocation(line: 849, column: 46, scope: !3986)
!3990 = !DILocation(line: 850, column: 33, scope: !3986)
!3991 = !DILocation(line: 850, column: 36, scope: !3986)
!3992 = !DILocation(line: 850, column: 45, scope: !3986)
!3993 = !DILocation(line: 851, column: 25, scope: !3986)
!3994 = !DILocation(line: 852, column: 33, scope: !3977)
!3995 = !DILocation(line: 852, column: 36, scope: !3977)
!3996 = !DILocation(line: 852, column: 46, scope: !3977)
!3997 = !DILocation(line: 853, column: 17, scope: !3978)
!3998 = !DILocation(line: 854, column: 17, scope: !3963)
!3999 = !DILocation(line: 858, column: 13, scope: !4000)
!4000 = distinct !DILexicalBlock(scope: !3907, file: !282, line: 858, column: 13)
!4001 = !DILocation(line: 858, column: 16, scope: !4000)
!4002 = !DILocation(line: 858, column: 25, scope: !4000)
!4003 = !DILocation(line: 858, column: 13, scope: !3907)
!4004 = !DILocation(line: 860, column: 21, scope: !4005)
!4005 = distinct !DILexicalBlock(scope: !4006, file: !282, line: 860, column: 21)
!4006 = distinct !DILexicalBlock(scope: !4000, file: !282, line: 858, column: 35)
!4007 = !DILocation(line: 860, column: 27, scope: !4005)
!4008 = !DILocation(line: 860, column: 39, scope: !4005)
!4009 = !DILocation(line: 861, column: 22, scope: !4005)
!4010 = !DILocation(line: 861, column: 38, scope: !4005)
!4011 = !DILocation(line: 861, column: 41, scope: !4005)
!4012 = !DILocation(line: 861, column: 44, scope: !4005)
!4013 = !DILocation(line: 861, column: 55, scope: !4005)
!4014 = !DILocation(line: 861, column: 65, scope: !4005)
!4015 = !DILocation(line: 861, column: 69, scope: !4005)
!4016 = !DILocation(line: 861, column: 62, scope: !4005)
!4017 = !DILocation(line: 860, column: 21, scope: !4006)
!4018 = !DILocation(line: 862, column: 29, scope: !4019)
!4019 = distinct !DILexicalBlock(scope: !4020, file: !282, line: 862, column: 29)
!4020 = distinct !DILexicalBlock(scope: !4005, file: !282, line: 861, column: 79)
!4021 = !DILocation(line: 862, column: 32, scope: !4019)
!4022 = !DILocation(line: 862, column: 42, scope: !4019)
!4023 = !DILocation(line: 862, column: 29, scope: !4020)
!4024 = !DILocation(line: 863, column: 45, scope: !4019)
!4025 = !DILocation(line: 863, column: 48, scope: !4019)
!4026 = !DILocation(line: 863, column: 39, scope: !4019)
!4027 = !DILocation(line: 863, column: 33, scope: !4019)
!4028 = !DILocation(line: 864, column: 29, scope: !4029)
!4029 = distinct !DILexicalBlock(scope: !4020, file: !282, line: 864, column: 29)
!4030 = !DILocation(line: 864, column: 33, scope: !4029)
!4031 = !DILocation(line: 864, column: 29, scope: !4020)
!4032 = !DILocation(line: 865, column: 43, scope: !4033)
!4033 = distinct !DILexicalBlock(scope: !4029, file: !282, line: 864, column: 44)
!4034 = !DILocation(line: 865, column: 47, scope: !4033)
!4035 = !DILocation(line: 865, column: 33, scope: !4033)
!4036 = !DILocation(line: 866, column: 33, scope: !4033)
!4037 = !DILocation(line: 866, column: 37, scope: !4033)
!4038 = !DILocation(line: 866, column: 47, scope: !4033)
!4039 = !DILocation(line: 867, column: 25, scope: !4033)
!4040 = !DILocation(line: 868, column: 25, scope: !4020)
!4041 = !DILocation(line: 868, column: 28, scope: !4020)
!4042 = !DILocation(line: 868, column: 37, scope: !4020)
!4043 = !DILocation(line: 869, column: 25, scope: !4020)
!4044 = distinct !{!4044, !4043, !4043}
!4045 = !DILocation(line: 869, column: 25, scope: !4046)
!4046 = distinct !DILexicalBlock(scope: !4020, file: !282, line: 869, column: 25)
!4047 = !DILocation(line: 870, column: 33, scope: !4020)
!4048 = !DILocation(line: 870, column: 25, scope: !4020)
!4049 = !DILocation(line: 874, column: 21, scope: !4050)
!4050 = distinct !DILexicalBlock(scope: !4006, file: !282, line: 874, column: 21)
!4051 = !DILocation(line: 874, column: 25, scope: !4050)
!4052 = !DILocation(line: 874, column: 35, scope: !4050)
!4053 = !DILocation(line: 874, column: 43, scope: !4050)
!4054 = !DILocation(line: 874, column: 46, scope: !4050)
!4055 = !DILocation(line: 874, column: 21, scope: !4006)
!4056 = !DILocation(line: 875, column: 25, scope: !4057)
!4057 = distinct !DILexicalBlock(scope: !4050, file: !282, line: 874, column: 67)
!4058 = !DILocation(line: 876, column: 35, scope: !4057)
!4059 = !DILocation(line: 876, column: 39, scope: !4057)
!4060 = !DILocation(line: 876, column: 25, scope: !4057)
!4061 = !DILocation(line: 877, column: 25, scope: !4057)
!4062 = !DILocation(line: 877, column: 29, scope: !4057)
!4063 = !DILocation(line: 877, column: 39, scope: !4057)
!4064 = !DILocation(line: 878, column: 17, scope: !4057)
!4065 = !DILocation(line: 892, column: 21, scope: !4066)
!4066 = distinct !DILexicalBlock(scope: !4006, file: !282, line: 892, column: 21)
!4067 = !DILocation(line: 892, column: 25, scope: !4066)
!4068 = !DILocation(line: 892, column: 35, scope: !4066)
!4069 = !DILocation(line: 892, column: 21, scope: !4006)
!4070 = !DILocation(line: 893, column: 48, scope: !4071)
!4071 = distinct !DILexicalBlock(scope: !4072, file: !282, line: 893, column: 29)
!4072 = distinct !DILexicalBlock(scope: !4066, file: !282, line: 892, column: 44)
!4073 = !DILocation(line: 893, column: 52, scope: !4071)
!4074 = !DILocation(line: 893, column: 59, scope: !4071)
!4075 = !DILocation(line: 893, column: 62, scope: !4071)
!4076 = !DILocation(line: 893, column: 29, scope: !4071)
!4077 = !DILocation(line: 893, column: 29, scope: !4072)
!4078 = !DILocation(line: 894, column: 48, scope: !4079)
!4079 = distinct !DILexicalBlock(scope: !4071, file: !282, line: 893, column: 76)
!4080 = !DILocation(line: 894, column: 33, scope: !4079)
!4081 = !DILocation(line: 894, column: 36, scope: !4079)
!4082 = !DILocation(line: 894, column: 46, scope: !4079)
!4083 = !DILocation(line: 895, column: 33, scope: !4079)
!4084 = !DILocation(line: 895, column: 36, scope: !4079)
!4085 = !DILocation(line: 895, column: 46, scope: !4079)
!4086 = !DILocation(line: 896, column: 42, scope: !4087)
!4087 = distinct !DILexicalBlock(scope: !4079, file: !282, line: 896, column: 33)
!4088 = !DILocation(line: 896, column: 46, scope: !4087)
!4089 = !DILocation(line: 896, column: 40, scope: !4087)
!4090 = !DILocation(line: 896, column: 38, scope: !4087)
!4091 = !DILocation(line: 896, column: 57, scope: !4092)
!4092 = distinct !DILexicalBlock(scope: !4087, file: !282, line: 896, column: 33)
!4093 = !DILocation(line: 896, column: 59, scope: !4092)
!4094 = !DILocation(line: 896, column: 33, scope: !4087)
!4095 = !DILocation(line: 899, column: 45, scope: !4092)
!4096 = !DILocation(line: 899, column: 48, scope: !4092)
!4097 = !DILocation(line: 899, column: 60, scope: !4092)
!4098 = !DILocation(line: 898, column: 41, scope: !4092)
!4099 = !DILocation(line: 898, column: 44, scope: !4092)
!4100 = !DILocation(line: 898, column: 56, scope: !4092)
!4101 = !DILocation(line: 897, column: 42, scope: !4092)
!4102 = !DILocation(line: 897, column: 45, scope: !4092)
!4103 = !DILocation(line: 897, column: 40, scope: !4092)
!4104 = !DILocation(line: 896, column: 33, scope: !4092)
!4105 = distinct !{!4105, !4094, !4106}
!4106 = !DILocation(line: 899, column: 60, scope: !4087)
!4107 = !DILocation(line: 900, column: 25, scope: !4079)
!4108 = !DILocation(line: 901, column: 17, scope: !4072)
!4109 = !DILocation(line: 901, column: 55, scope: !4110)
!4110 = distinct !DILexicalBlock(scope: !4066, file: !282, line: 901, column: 28)
!4111 = !DILocation(line: 901, column: 45, scope: !4110)
!4112 = !DILocation(line: 901, column: 29, scope: !4110)
!4113 = !DILocation(line: 901, column: 33, scope: !4110)
!4114 = !DILocation(line: 901, column: 43, scope: !4110)
!4115 = !DILocation(line: 901, column: 67, scope: !4110)
!4116 = !DILocation(line: 901, column: 28, scope: !4066)
!4117 = !DILocation(line: 902, column: 29, scope: !4118)
!4118 = distinct !DILexicalBlock(scope: !4119, file: !282, line: 902, column: 29)
!4119 = distinct !DILexicalBlock(scope: !4110, file: !282, line: 901, column: 76)
!4120 = !DILocation(line: 902, column: 29, scope: !4119)
!4121 = !DILocation(line: 903, column: 33, scope: !4118)
!4122 = !DILocation(line: 907, column: 29, scope: !4123)
!4123 = distinct !DILexicalBlock(scope: !4119, file: !282, line: 907, column: 29)
!4124 = !DILocation(line: 907, column: 32, scope: !4123)
!4125 = !DILocation(line: 907, column: 42, scope: !4123)
!4126 = !DILocation(line: 907, column: 45, scope: !4123)
!4127 = !DILocation(line: 907, column: 48, scope: !4123)
!4128 = !DILocation(line: 907, column: 57, scope: !4123)
!4129 = !DILocation(line: 907, column: 29, scope: !4119)
!4130 = !DILocation(line: 908, column: 33, scope: !4123)
!4131 = !DILocation(line: 908, column: 36, scope: !4123)
!4132 = !DILocation(line: 908, column: 45, scope: !4123)
!4133 = !DILocation(line: 909, column: 25, scope: !4119)
!4134 = distinct !{!4134, !4133, !4133}
!4135 = !DILocation(line: 909, column: 25, scope: !4136)
!4136 = distinct !DILexicalBlock(scope: !4119, file: !282, line: 909, column: 25)
!4137 = !DILocation(line: 910, column: 33, scope: !4119)
!4138 = !DILocation(line: 910, column: 25, scope: !4119)
!4139 = !DILocation(line: 912, column: 21, scope: !4006)
!4140 = !DILocation(line: 912, column: 25, scope: !4006)
!4141 = !DILocation(line: 912, column: 19, scope: !4006)
!4142 = !DILocation(line: 913, column: 17, scope: !4006)
!4143 = !DILocation(line: 913, column: 21, scope: !4006)
!4144 = !DILocation(line: 913, column: 31, scope: !4006)
!4145 = !DILocation(line: 914, column: 17, scope: !4006)
!4146 = !DILocation(line: 858, column: 28, scope: !4000)
!4147 = !DILocation(line: 918, column: 15, scope: !3907)
!4148 = !DILocation(line: 918, column: 13, scope: !3907)
!4149 = !DILocation(line: 919, column: 18, scope: !4150)
!4150 = distinct !DILexicalBlock(scope: !3907, file: !282, line: 919, column: 13)
!4151 = !DILocation(line: 919, column: 21, scope: !4150)
!4152 = !DILocation(line: 919, column: 16, scope: !4150)
!4153 = !DILocation(line: 919, column: 31, scope: !4150)
!4154 = !DILocation(line: 919, column: 13, scope: !3907)
!4155 = !DILocation(line: 920, column: 31, scope: !4156)
!4156 = distinct !DILexicalBlock(scope: !4150, file: !282, line: 919, column: 40)
!4157 = !DILocation(line: 920, column: 17, scope: !4156)
!4158 = !DILocation(line: 920, column: 21, scope: !4156)
!4159 = !DILocation(line: 920, column: 29, scope: !4156)
!4160 = !DILocation(line: 921, column: 22, scope: !4156)
!4161 = !DILocation(line: 921, column: 17, scope: !4156)
!4162 = !DILocation(line: 928, column: 21, scope: !4163)
!4163 = distinct !DILexicalBlock(scope: !4156, file: !282, line: 928, column: 21)
!4164 = !DILocation(line: 928, column: 24, scope: !4163)
!4165 = !DILocation(line: 928, column: 34, scope: !4163)
!4166 = !DILocation(line: 928, column: 21, scope: !4156)
!4167 = !DILocation(line: 929, column: 29, scope: !4168)
!4168 = distinct !DILexicalBlock(scope: !4169, file: !282, line: 929, column: 29)
!4169 = distinct !DILexicalBlock(scope: !4163, file: !282, line: 928, column: 52)
!4170 = !DILocation(line: 929, column: 29, scope: !4169)
!4171 = !DILocation(line: 930, column: 33, scope: !4172)
!4172 = distinct !DILexicalBlock(scope: !4168, file: !282, line: 929, column: 54)
!4173 = !DILocation(line: 931, column: 33, scope: !4172)
!4174 = !DILocation(line: 933, column: 34, scope: !4169)
!4175 = !DILocation(line: 933, column: 25, scope: !4169)
!4176 = !DILocation(line: 934, column: 34, scope: !4169)
!4177 = !DILocation(line: 934, column: 38, scope: !4169)
!4178 = !DILocation(line: 934, column: 25, scope: !4169)
!4179 = !DILocation(line: 935, column: 35, scope: !4169)
!4180 = !DILocation(line: 935, column: 25, scope: !4169)
!4181 = !DILocation(line: 936, column: 25, scope: !4169)
!4182 = !DILocation(line: 944, column: 21, scope: !4183)
!4183 = distinct !DILexicalBlock(scope: !4156, file: !282, line: 944, column: 21)
!4184 = !DILocation(line: 944, column: 24, scope: !4183)
!4185 = !DILocation(line: 944, column: 34, scope: !4183)
!4186 = !DILocation(line: 944, column: 21, scope: !4156)
!4187 = !DILocation(line: 945, column: 25, scope: !4183)
!4188 = !DILocation(line: 946, column: 21, scope: !4189)
!4189 = distinct !DILexicalBlock(scope: !4156, file: !282, line: 946, column: 21)
!4190 = !DILocation(line: 946, column: 24, scope: !4189)
!4191 = !DILocation(line: 946, column: 34, scope: !4189)
!4192 = !DILocation(line: 946, column: 21, scope: !4156)
!4193 = !DILocation(line: 947, column: 48, scope: !4194)
!4194 = distinct !DILexicalBlock(scope: !4189, file: !282, line: 946, column: 49)
!4195 = !DILocation(line: 947, column: 52, scope: !4194)
!4196 = !DILocation(line: 947, column: 39, scope: !4194)
!4197 = !DILocation(line: 947, column: 25, scope: !4194)
!4198 = !DILocation(line: 947, column: 28, scope: !4194)
!4199 = !DILocation(line: 947, column: 37, scope: !4194)
!4200 = !DILocation(line: 948, column: 29, scope: !4201)
!4201 = distinct !DILexicalBlock(scope: !4194, file: !282, line: 948, column: 29)
!4202 = !DILocation(line: 948, column: 32, scope: !4201)
!4203 = !DILocation(line: 948, column: 41, scope: !4201)
!4204 = !DILocation(line: 948, column: 50, scope: !4201)
!4205 = !DILocation(line: 948, column: 54, scope: !4201)
!4206 = !DILocation(line: 948, column: 29, scope: !4194)
!4207 = !DILocation(line: 949, column: 62, scope: !4208)
!4208 = distinct !DILexicalBlock(scope: !4209, file: !282, line: 949, column: 37)
!4209 = distinct !DILexicalBlock(scope: !4201, file: !282, line: 948, column: 74)
!4210 = !DILocation(line: 949, column: 53, scope: !4208)
!4211 = !DILocation(line: 949, column: 38, scope: !4208)
!4212 = !DILocation(line: 949, column: 41, scope: !4208)
!4213 = !DILocation(line: 949, column: 51, scope: !4208)
!4214 = !DILocation(line: 949, column: 72, scope: !4208)
!4215 = !DILocation(line: 949, column: 37, scope: !4209)
!4216 = !DILocation(line: 950, column: 56, scope: !4217)
!4217 = distinct !DILexicalBlock(scope: !4208, file: !282, line: 949, column: 77)
!4218 = !DILocation(line: 950, column: 41, scope: !4217)
!4219 = !DILocation(line: 950, column: 44, scope: !4217)
!4220 = !DILocation(line: 950, column: 54, scope: !4217)
!4221 = !DILocation(line: 951, column: 41, scope: !4217)
!4222 = !DILocation(line: 951, column: 44, scope: !4217)
!4223 = !DILocation(line: 951, column: 53, scope: !4217)
!4224 = !DILocation(line: 952, column: 33, scope: !4217)
!4225 = !DILocation(line: 953, column: 41, scope: !4208)
!4226 = !DILocation(line: 953, column: 44, scope: !4208)
!4227 = !DILocation(line: 953, column: 54, scope: !4208)
!4228 = !DILocation(line: 954, column: 25, scope: !4209)
!4229 = !DILocation(line: 955, column: 25, scope: !4194)
!4230 = !DILocation(line: 955, column: 28, scope: !4194)
!4231 = !DILocation(line: 955, column: 38, scope: !4194)
!4232 = !DILocation(line: 956, column: 17, scope: !4194)
!4233 = !DILocation(line: 946, column: 37, scope: !4189)
!4234 = !DILocation(line: 958, column: 21, scope: !4156)
!4235 = !DILocation(line: 958, column: 25, scope: !4156)
!4236 = !DILocation(line: 958, column: 36, scope: !4156)
!4237 = !DILocation(line: 958, column: 34, scope: !4156)
!4238 = !DILocation(line: 958, column: 19, scope: !4156)
!4239 = !DILocation(line: 959, column: 19, scope: !4156)
!4240 = !DILocation(line: 959, column: 22, scope: !4156)
!4241 = !DILocation(line: 960, column: 25, scope: !4156)
!4242 = !DILocation(line: 960, column: 28, scope: !4156)
!4243 = !DILocation(line: 960, column: 31, scope: !4156)
!4244 = !DILocation(line: 960, column: 17, scope: !4156)
!4245 = !DILocation(line: 960, column: 41, scope: !4156)
!4246 = !DILocation(line: 960, column: 44, scope: !4156)
!4247 = !DILocation(line: 960, column: 56, scope: !4156)
!4248 = !DILocation(line: 962, column: 31, scope: !4156)
!4249 = !DILocation(line: 962, column: 17, scope: !4156)
!4250 = !DILocation(line: 962, column: 21, scope: !4156)
!4251 = !DILocation(line: 962, column: 29, scope: !4156)
!4252 = !DILocation(line: 963, column: 21, scope: !4253)
!4253 = distinct !DILexicalBlock(scope: !4156, file: !282, line: 963, column: 21)
!4254 = !DILocation(line: 963, column: 24, scope: !4253)
!4255 = !DILocation(line: 963, column: 33, scope: !4253)
!4256 = !DILocation(line: 963, column: 21, scope: !4156)
!4257 = !DILocation(line: 965, column: 25, scope: !4258)
!4258 = distinct !DILexicalBlock(scope: !4259, file: !282, line: 965, column: 25)
!4259 = distinct !DILexicalBlock(scope: !4253, file: !282, line: 964, column: 19)
!4260 = !DILocation(line: 965, column: 28, scope: !4258)
!4261 = !DILocation(line: 965, column: 39, scope: !4258)
!4262 = !DILocation(line: 965, column: 47, scope: !4258)
!4263 = !DILocation(line: 965, column: 25, scope: !4259)
!4264 = !DILocalVariable(name: "parent", scope: !4265, file: !282, line: 967, type: !2904)
!4265 = distinct !DILexicalBlock(scope: !4258, file: !282, line: 966, column: 23)
!4266 = !DILocation(line: 967, column: 33, scope: !4265)
!4267 = !DILocation(line: 967, column: 42, scope: !4265)
!4268 = !DILocation(line: 967, column: 45, scope: !4265)
!4269 = !DILocation(line: 968, column: 45, scope: !4270)
!4270 = distinct !DILexicalBlock(scope: !4265, file: !282, line: 968, column: 29)
!4271 = !DILocation(line: 968, column: 48, scope: !4270)
!4272 = !DILocation(line: 968, column: 43, scope: !4270)
!4273 = !DILocation(line: 971, column: 29, scope: !4270)
!4274 = !DILocation(line: 971, column: 32, scope: !4270)
!4275 = !DILocation(line: 971, column: 40, scope: !4270)
!4276 = !DILocation(line: 971, column: 61, scope: !4270)
!4277 = !DILocation(line: 972, column: 29, scope: !4270)
!4278 = !DILocation(line: 972, column: 32, scope: !4270)
!4279 = !DILocation(line: 973, column: 29, scope: !4270)
!4280 = !DILocation(line: 973, column: 32, scope: !4270)
!4281 = !DILocation(line: 974, column: 29, scope: !4270)
!4282 = !DILocation(line: 974, column: 56, scope: !4270)
!4283 = !DILocation(line: 974, column: 32, scope: !4270)
!4284 = !DILocation(line: 968, column: 29, scope: !4265)
!4285 = !DILocation(line: 977, column: 27, scope: !4286)
!4286 = distinct !DILexicalBlock(scope: !4270, file: !282, line: 975, column: 27)
!4287 = !DILocation(line: 980, column: 52, scope: !4288)
!4288 = distinct !DILexicalBlock(scope: !4270, file: !282, line: 979, column: 27)
!4289 = !DILocation(line: 980, column: 56, scope: !4288)
!4290 = !DILocation(line: 980, column: 43, scope: !4288)
!4291 = !DILocation(line: 980, column: 29, scope: !4288)
!4292 = !DILocation(line: 980, column: 32, scope: !4288)
!4293 = !DILocation(line: 980, column: 41, scope: !4288)
!4294 = !DILocation(line: 981, column: 33, scope: !4295)
!4295 = distinct !DILexicalBlock(scope: !4288, file: !282, line: 981, column: 33)
!4296 = !DILocation(line: 982, column: 33, scope: !4295)
!4297 = !DILocation(line: 982, column: 36, scope: !4295)
!4298 = !DILocation(line: 982, column: 39, scope: !4295)
!4299 = !DILocation(line: 982, column: 49, scope: !4295)
!4300 = !DILocation(line: 983, column: 33, scope: !4295)
!4301 = !DILocation(line: 983, column: 36, scope: !4295)
!4302 = !DILocation(line: 983, column: 44, scope: !4295)
!4303 = !DILocation(line: 981, column: 33, scope: !4288)
!4304 = !DILocation(line: 984, column: 35, scope: !4295)
!4305 = !DILocation(line: 984, column: 43, scope: !4295)
!4306 = !DILocation(line: 984, column: 63, scope: !4295)
!4307 = !DILocation(line: 986, column: 23, scope: !4265)
!4308 = !DILocation(line: 988, column: 23, scope: !4258)
!4309 = distinct !{!4309, !4308, !4308}
!4310 = !DILocation(line: 988, column: 23, scope: !4311)
!4311 = distinct !DILexicalBlock(scope: !4312, file: !282, line: 988, column: 23)
!4312 = distinct !DILexicalBlock(scope: !4258, file: !282, line: 988, column: 23)
!4313 = !DILocation(line: 988, column: 23, scope: !4312)
!4314 = !DILocation(line: 989, column: 19, scope: !4259)
!4315 = !DILocation(line: 991, column: 21, scope: !4316)
!4316 = distinct !DILexicalBlock(scope: !4156, file: !282, line: 991, column: 21)
!4317 = !DILocation(line: 991, column: 24, scope: !4316)
!4318 = !DILocation(line: 991, column: 33, scope: !4316)
!4319 = !DILocation(line: 991, column: 21, scope: !4156)
!4320 = !DILocation(line: 996, column: 25, scope: !4321)
!4321 = distinct !DILexicalBlock(scope: !4322, file: !282, line: 996, column: 25)
!4322 = distinct !DILexicalBlock(scope: !4316, file: !282, line: 992, column: 19)
!4323 = !DILocation(line: 996, column: 28, scope: !4321)
!4324 = !DILocation(line: 996, column: 38, scope: !4321)
!4325 = !DILocation(line: 996, column: 25, scope: !4322)
!4326 = !DILocation(line: 997, column: 37, scope: !4321)
!4327 = !DILocation(line: 997, column: 40, scope: !4321)
!4328 = !DILocation(line: 997, column: 51, scope: !4321)
!4329 = !DILocation(line: 997, column: 23, scope: !4321)
!4330 = !DILocation(line: 997, column: 27, scope: !4321)
!4331 = !DILocation(line: 997, column: 35, scope: !4321)
!4332 = !DILocation(line: 999, column: 38, scope: !4333)
!4333 = distinct !DILexicalBlock(scope: !4322, file: !282, line: 999, column: 25)
!4334 = !DILocation(line: 999, column: 42, scope: !4333)
!4335 = !DILocation(line: 999, column: 27, scope: !4333)
!4336 = !DILocation(line: 999, column: 25, scope: !4322)
!4337 = !DILocation(line: 1001, column: 25, scope: !4338)
!4338 = distinct !DILexicalBlock(scope: !4333, file: !282, line: 1000, column: 23)
!4339 = !DILocation(line: 1002, column: 25, scope: !4338)
!4340 = !DILocation(line: 1004, column: 19, scope: !4322)
!4341 = !DILocation(line: 1005, column: 24, scope: !4156)
!4342 = !DILocation(line: 1005, column: 17, scope: !4156)
!4343 = !DILocation(line: 1009, column: 13, scope: !3907)
!4344 = !DILocation(line: 1009, column: 18, scope: !3907)
!4345 = !DILocation(line: 1009, column: 11, scope: !3907)
!4346 = !DILocation(line: 1010, column: 23, scope: !3907)
!4347 = !DILocation(line: 1010, column: 9, scope: !3907)
!4348 = !DILocation(line: 1010, column: 13, scope: !3907)
!4349 = !DILocation(line: 1010, column: 21, scope: !3907)
!4350 = !DILocation(line: 1011, column: 14, scope: !3907)
!4351 = !DILocation(line: 1011, column: 9, scope: !3907)
!4352 = !DILocation(line: 1013, column: 13, scope: !4353)
!4353 = distinct !DILexicalBlock(scope: !3907, file: !282, line: 1013, column: 13)
!4354 = !DILocation(line: 1013, column: 16, scope: !4353)
!4355 = !DILocation(line: 1013, column: 26, scope: !4353)
!4356 = !DILocation(line: 1013, column: 13, scope: !3907)
!4357 = !DILocation(line: 1018, column: 22, scope: !4358)
!4358 = distinct !DILexicalBlock(scope: !4353, file: !282, line: 1013, column: 50)
!4359 = !DILocation(line: 1018, column: 17, scope: !4358)
!4360 = !DILocation(line: 1019, column: 17, scope: !4358)
!4361 = !DILocation(line: 1020, column: 25, scope: !4358)
!4362 = !DILocation(line: 1020, column: 29, scope: !4358)
!4363 = !DILocation(line: 1020, column: 37, scope: !4358)
!4364 = !DILocation(line: 1020, column: 17, scope: !4358)
!4365 = !DILocation(line: 1023, column: 9, scope: !3907)
!4366 = distinct !{!4366, !4365, !4365}
!4367 = !DILocation(line: 1023, column: 9, scope: !4368)
!4368 = distinct !DILexicalBlock(scope: !4369, file: !282, line: 1023, column: 9)
!4369 = distinct !DILexicalBlock(scope: !3907, file: !282, line: 1023, column: 9)
!4370 = !DILocation(line: 1023, column: 9, scope: !4369)
!4371 = !DILocation(line: 1026, column: 9, scope: !3907)
!4372 = !DILocation(line: 1026, column: 13, scope: !3907)
!4373 = !DILocation(line: 1026, column: 22, scope: !3907)
!4374 = !DILocation(line: 1026, column: 25, scope: !3907)
!4375 = !DILocation(line: 1026, column: 38, scope: !3907)
!4376 = !DILocation(line: 1034, column: 13, scope: !4377)
!4377 = distinct !DILexicalBlock(scope: !3907, file: !282, line: 1034, column: 13)
!4378 = !DILocation(line: 1034, column: 16, scope: !4377)
!4379 = !DILocation(line: 1034, column: 26, scope: !4377)
!4380 = !DILocation(line: 1034, column: 13, scope: !3907)
!4381 = !DILocation(line: 1035, column: 21, scope: !4382)
!4382 = distinct !DILexicalBlock(scope: !4383, file: !282, line: 1035, column: 21)
!4383 = distinct !DILexicalBlock(scope: !4377, file: !282, line: 1034, column: 44)
!4384 = !DILocation(line: 1035, column: 21, scope: !4383)
!4385 = !DILocation(line: 1036, column: 40, scope: !4386)
!4386 = distinct !DILexicalBlock(scope: !4382, file: !282, line: 1035, column: 46)
!4387 = !DILocation(line: 1036, column: 25, scope: !4386)
!4388 = !DILocation(line: 1036, column: 28, scope: !4386)
!4389 = !DILocation(line: 1036, column: 38, scope: !4386)
!4390 = !DILocation(line: 1037, column: 25, scope: !4386)
!4391 = !DILocation(line: 1038, column: 17, scope: !4386)
!4392 = !DILocation(line: 1039, column: 9, scope: !4383)
!4393 = !DILocation(line: 1039, column: 20, scope: !4394)
!4394 = distinct !DILexicalBlock(scope: !4377, file: !282, line: 1039, column: 20)
!4395 = !DILocation(line: 1039, column: 23, scope: !4394)
!4396 = !DILocation(line: 1039, column: 33, scope: !4394)
!4397 = !DILocation(line: 1039, column: 20, scope: !4377)
!4398 = !DILocation(line: 1040, column: 21, scope: !4399)
!4399 = distinct !DILexicalBlock(scope: !4400, file: !282, line: 1040, column: 21)
!4400 = distinct !DILexicalBlock(scope: !4394, file: !282, line: 1039, column: 50)
!4401 = !DILocation(line: 1040, column: 21, scope: !4400)
!4402 = !DILocalVariable(name: "saved_errno", scope: !4403, file: !282, line: 1041, type: !46)
!4403 = distinct !DILexicalBlock(scope: !4399, file: !282, line: 1040, column: 47)
!4404 = !DILocation(line: 1041, column: 29, scope: !4403)
!4405 = !DILocation(line: 1041, column: 43, scope: !4403)
!4406 = !DILocation(line: 1042, column: 37, scope: !4403)
!4407 = !DILocation(line: 1042, column: 40, scope: !4403)
!4408 = !DILocation(line: 1042, column: 31, scope: !4403)
!4409 = !DILocation(line: 1043, column: 25, scope: !4403)
!4410 = !DILocation(line: 1044, column: 40, scope: !4403)
!4411 = !DILocation(line: 1044, column: 25, scope: !4403)
!4412 = !DILocation(line: 1044, column: 28, scope: !4403)
!4413 = !DILocation(line: 1044, column: 38, scope: !4403)
!4414 = !DILocation(line: 1045, column: 25, scope: !4403)
!4415 = !DILocation(line: 1046, column: 17, scope: !4403)
!4416 = !DILocation(line: 1047, column: 29, scope: !4400)
!4417 = !DILocation(line: 1047, column: 32, scope: !4400)
!4418 = !DILocation(line: 1047, column: 23, scope: !4400)
!4419 = !DILocation(line: 1048, column: 9, scope: !4400)
!4420 = !DILocation(line: 1048, column: 22, scope: !4421)
!4421 = distinct !DILexicalBlock(scope: !4394, file: !282, line: 1048, column: 20)
!4422 = !DILocation(line: 1048, column: 25, scope: !4421)
!4423 = !DILocation(line: 1048, column: 35, scope: !4421)
!4424 = !DILocation(line: 1048, column: 52, scope: !4421)
!4425 = !DILocation(line: 1049, column: 39, scope: !4421)
!4426 = !DILocation(line: 1049, column: 43, scope: !4421)
!4427 = !DILocation(line: 1049, column: 46, scope: !4421)
!4428 = !DILocation(line: 1049, column: 20, scope: !4421)
!4429 = !DILocation(line: 1048, column: 20, scope: !4394)
!4430 = !DILocation(line: 1050, column: 32, scope: !4431)
!4431 = distinct !DILexicalBlock(scope: !4421, file: !282, line: 1049, column: 69)
!4432 = !DILocation(line: 1050, column: 17, scope: !4431)
!4433 = !DILocation(line: 1050, column: 20, scope: !4431)
!4434 = !DILocation(line: 1050, column: 30, scope: !4431)
!4435 = !DILocation(line: 1051, column: 17, scope: !4431)
!4436 = !DILocation(line: 1052, column: 9, scope: !4431)
!4437 = !DILocation(line: 1053, column: 23, scope: !3907)
!4438 = !DILocation(line: 1053, column: 26, scope: !3907)
!4439 = !DILocation(line: 1053, column: 9, scope: !3907)
!4440 = !DILocation(line: 1053, column: 12, scope: !3907)
!4441 = !DILocation(line: 1053, column: 21, scope: !3907)
!4442 = !DILocation(line: 1054, column: 13, scope: !4443)
!4443 = distinct !DILexicalBlock(scope: !3907, file: !282, line: 1054, column: 13)
!4444 = !DILocation(line: 1054, column: 16, scope: !4443)
!4445 = !DILocation(line: 1054, column: 26, scope: !4443)
!4446 = !DILocation(line: 1054, column: 13, scope: !3907)
!4447 = !DILocation(line: 1055, column: 17, scope: !4443)
!4448 = distinct !{!4448, !4447, !4447}
!4449 = !DILocation(line: 1055, column: 17, scope: !4450)
!4450 = distinct !DILexicalBlock(scope: !4443, file: !282, line: 1055, column: 17)
!4451 = !DILocation(line: 1056, column: 16, scope: !3907)
!4452 = !DILocation(line: 1056, column: 41, scope: !3907)
!4453 = !DILocation(line: 1056, column: 9, scope: !3907)
!4454 = !DILocation(line: 1057, column: 1, scope: !3907)
!4455 = distinct !DISubprogram(name: "leave_dir", scope: !289, file: !289, line: 125, type: !4456, isLocal: true, isDefinition: true, scopeLine: 126, flags: DIFlagPrototyped, isOptimized: false, unit: !281, variables: !48)
!4456 = !DISubroutineType(types: !4457)
!4457 = !{null, !293, !2904}
!4458 = !DILocalVariable(name: "fts", arg: 1, scope: !4455, file: !289, line: 125, type: !293)
!4459 = !DILocation(line: 125, column: 17, scope: !4455)
!4460 = !DILocalVariable(name: "ent", arg: 2, scope: !4455, file: !289, line: 125, type: !2904)
!4461 = !DILocation(line: 125, column: 30, scope: !4455)
!4462 = !DILocalVariable(name: "st", scope: !4455, file: !289, line: 127, type: !4463)
!4463 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4464, size: 64)
!4464 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !327)
!4465 = !DILocation(line: 127, column: 22, scope: !4455)
!4466 = !DILocation(line: 127, column: 27, scope: !4455)
!4467 = !DILocation(line: 127, column: 32, scope: !4455)
!4468 = !DILocation(line: 128, column: 7, scope: !4469)
!4469 = distinct !DILexicalBlock(scope: !4455, file: !289, line: 128, column: 7)
!4470 = !DILocation(line: 128, column: 12, scope: !4469)
!4471 = !DILocation(line: 128, column: 24, scope: !4469)
!4472 = !DILocation(line: 128, column: 7, scope: !4455)
!4473 = !DILocalVariable(name: "obj", scope: !4474, file: !289, line: 130, type: !3676)
!4474 = distinct !DILexicalBlock(scope: !4469, file: !289, line: 129, column: 5)
!4475 = !DILocation(line: 130, column: 25, scope: !4474)
!4476 = !DILocalVariable(name: "found", scope: !4474, file: !289, line: 131, type: !39)
!4477 = !DILocation(line: 131, column: 13, scope: !4474)
!4478 = !DILocation(line: 132, column: 17, scope: !4474)
!4479 = !DILocation(line: 132, column: 21, scope: !4474)
!4480 = !DILocation(line: 132, column: 11, scope: !4474)
!4481 = !DILocation(line: 132, column: 15, scope: !4474)
!4482 = !DILocation(line: 133, column: 17, scope: !4474)
!4483 = !DILocation(line: 133, column: 21, scope: !4474)
!4484 = !DILocation(line: 133, column: 11, scope: !4474)
!4485 = !DILocation(line: 133, column: 15, scope: !4474)
!4486 = !DILocation(line: 134, column: 28, scope: !4474)
!4487 = !DILocation(line: 134, column: 33, scope: !4474)
!4488 = !DILocation(line: 134, column: 43, scope: !4474)
!4489 = !DILocation(line: 134, column: 47, scope: !4474)
!4490 = !DILocation(line: 134, column: 15, scope: !4474)
!4491 = !DILocation(line: 134, column: 13, scope: !4474)
!4492 = !DILocation(line: 135, column: 12, scope: !4493)
!4493 = distinct !DILexicalBlock(scope: !4474, file: !289, line: 135, column: 11)
!4494 = !DILocation(line: 135, column: 11, scope: !4474)
!4495 = !DILocation(line: 136, column: 9, scope: !4493)
!4496 = !DILocation(line: 137, column: 13, scope: !4474)
!4497 = !DILocation(line: 137, column: 7, scope: !4474)
!4498 = !DILocation(line: 138, column: 5, scope: !4474)
!4499 = !DILocalVariable(name: "parent", scope: !4500, file: !289, line: 141, type: !2904)
!4500 = distinct !DILexicalBlock(scope: !4469, file: !289, line: 140, column: 5)
!4501 = !DILocation(line: 141, column: 15, scope: !4500)
!4502 = !DILocation(line: 141, column: 24, scope: !4500)
!4503 = !DILocation(line: 141, column: 29, scope: !4500)
!4504 = !DILocation(line: 142, column: 11, scope: !4505)
!4505 = distinct !DILexicalBlock(scope: !4500, file: !289, line: 142, column: 11)
!4506 = !DILocation(line: 142, column: 18, scope: !4505)
!4507 = !DILocation(line: 142, column: 26, scope: !4505)
!4508 = !DILocation(line: 142, column: 34, scope: !4505)
!4509 = !DILocation(line: 142, column: 42, scope: !4505)
!4510 = !DILocation(line: 142, column: 31, scope: !4505)
!4511 = !DILocation(line: 142, column: 11, scope: !4500)
!4512 = !DILocation(line: 143, column: 9, scope: !4505)
!4513 = distinct !{!4513, !4512, !4512}
!4514 = !DILocation(line: 143, column: 9, scope: !4515)
!4515 = distinct !DILexicalBlock(scope: !4516, file: !289, line: 143, column: 9)
!4516 = distinct !DILexicalBlock(scope: !4505, file: !289, line: 143, column: 9)
!4517 = !DILocation(line: 143, column: 9, scope: !4516)
!4518 = !DILocation(line: 143, column: 9, scope: !4519)
!4519 = distinct !DILexicalBlock(scope: !4516, file: !289, line: 143, column: 9)
!4520 = !DILocation(line: 143, column: 9, scope: !4521)
!4521 = distinct !DILexicalBlock(scope: !4519, file: !289, line: 143, column: 9)
!4522 = !DILocation(line: 146, column: 1, scope: !4455)
!4523 = distinct !DISubprogram(name: "fts_safe_changedir", scope: !282, file: !282, line: 1956, type: !4524, isLocal: true, isDefinition: true, scopeLine: 1957, flags: DIFlagPrototyped, isOptimized: false, unit: !281, variables: !48)
!4524 = !DISubroutineType(types: !4525)
!4525 = !{!46, !293, !2904, !46, !35}
!4526 = !DILocalVariable(name: "sp", arg: 1, scope: !4523, file: !282, line: 1956, type: !293)
!4527 = !DILocation(line: 1956, column: 26, scope: !4523)
!4528 = !DILocalVariable(name: "p", arg: 2, scope: !4523, file: !282, line: 1956, type: !2904)
!4529 = !DILocation(line: 1956, column: 38, scope: !4523)
!4530 = !DILocalVariable(name: "fd", arg: 3, scope: !4523, file: !282, line: 1956, type: !46)
!4531 = !DILocation(line: 1956, column: 45, scope: !4523)
!4532 = !DILocalVariable(name: "dir", arg: 4, scope: !4523, file: !282, line: 1956, type: !35)
!4533 = !DILocation(line: 1956, column: 61, scope: !4523)
!4534 = !DILocalVariable(name: "ret", scope: !4523, file: !282, line: 1958, type: !46)
!4535 = !DILocation(line: 1958, column: 13, scope: !4523)
!4536 = !DILocalVariable(name: "is_dotdot", scope: !4523, file: !282, line: 1959, type: !131)
!4537 = !DILocation(line: 1959, column: 14, scope: !4523)
!4538 = !DILocation(line: 1959, column: 26, scope: !4523)
!4539 = !DILocation(line: 1959, column: 30, scope: !4523)
!4540 = !DILocation(line: 1959, column: 33, scope: !4523)
!4541 = !DILocalVariable(name: "newfd", scope: !4523, file: !282, line: 1960, type: !46)
!4542 = !DILocation(line: 1960, column: 13, scope: !4523)
!4543 = !DILocation(line: 1966, column: 13, scope: !4544)
!4544 = distinct !DILexicalBlock(scope: !4523, file: !282, line: 1966, column: 13)
!4545 = !DILocation(line: 1966, column: 13, scope: !4523)
!4546 = !DILocation(line: 1968, column: 17, scope: !4547)
!4547 = distinct !DILexicalBlock(scope: !4548, file: !282, line: 1968, column: 17)
!4548 = distinct !DILexicalBlock(scope: !4544, file: !282, line: 1967, column: 11)
!4549 = !DILocation(line: 1968, column: 35, scope: !4547)
!4550 = !DILocation(line: 1968, column: 43, scope: !4547)
!4551 = !DILocation(line: 1968, column: 40, scope: !4547)
!4552 = !DILocation(line: 1968, column: 17, scope: !4548)
!4553 = !DILocation(line: 1969, column: 22, scope: !4547)
!4554 = !DILocation(line: 1969, column: 15, scope: !4547)
!4555 = !DILocation(line: 1970, column: 13, scope: !4548)
!4556 = !DILocation(line: 1973, column: 13, scope: !4557)
!4557 = distinct !DILexicalBlock(scope: !4523, file: !282, line: 1973, column: 13)
!4558 = !DILocation(line: 1973, column: 16, scope: !4557)
!4559 = !DILocation(line: 1973, column: 20, scope: !4557)
!4560 = !DILocation(line: 1973, column: 23, scope: !4557)
!4561 = !DILocation(line: 1973, column: 33, scope: !4557)
!4562 = !DILocation(line: 1973, column: 36, scope: !4557)
!4563 = !DILocation(line: 1973, column: 13, scope: !4523)
!4564 = !DILocation(line: 1980, column: 35, scope: !4565)
!4565 = distinct !DILexicalBlock(scope: !4566, file: !282, line: 1980, column: 18)
!4566 = distinct !DILexicalBlock(scope: !4557, file: !282, line: 1974, column: 11)
!4567 = !DILocation(line: 1980, column: 39, scope: !4565)
!4568 = !DILocation(line: 1980, column: 20, scope: !4565)
!4569 = !DILocation(line: 1980, column: 18, scope: !4566)
!4570 = !DILocalVariable(name: "parent_fd", scope: !4571, file: !282, line: 1982, type: !46)
!4571 = distinct !DILexicalBlock(scope: !4565, file: !282, line: 1981, column: 15)
!4572 = !DILocation(line: 1982, column: 21, scope: !4571)
!4573 = !DILocation(line: 1984, column: 42, scope: !4571)
!4574 = !DILocation(line: 1984, column: 46, scope: !4571)
!4575 = !DILocation(line: 1984, column: 29, scope: !4571)
!4576 = !DILocation(line: 1984, column: 27, scope: !4571)
!4577 = !DILocation(line: 1985, column: 27, scope: !4571)
!4578 = !DILocation(line: 1986, column: 26, scope: !4579)
!4579 = distinct !DILexicalBlock(scope: !4571, file: !282, line: 1986, column: 21)
!4580 = !DILocation(line: 1986, column: 23, scope: !4579)
!4581 = !DILocation(line: 1986, column: 21, scope: !4571)
!4582 = !DILocation(line: 1988, column: 26, scope: !4583)
!4583 = distinct !DILexicalBlock(scope: !4579, file: !282, line: 1987, column: 19)
!4584 = !DILocation(line: 1988, column: 24, scope: !4583)
!4585 = !DILocation(line: 1989, column: 25, scope: !4583)
!4586 = !DILocation(line: 1990, column: 19, scope: !4583)
!4587 = !DILocation(line: 1991, column: 15, scope: !4571)
!4588 = !DILocation(line: 1992, column: 11, scope: !4566)
!4589 = !DILocation(line: 1994, column: 17, scope: !4523)
!4590 = !DILocation(line: 1994, column: 15, scope: !4523)
!4591 = !DILocation(line: 1995, column: 13, scope: !4592)
!4592 = distinct !DILexicalBlock(scope: !4523, file: !282, line: 1995, column: 13)
!4593 = !DILocation(line: 1995, column: 16, scope: !4592)
!4594 = !DILocation(line: 1995, column: 20, scope: !4592)
!4595 = !DILocation(line: 1995, column: 41, scope: !4592)
!4596 = !DILocation(line: 1995, column: 45, scope: !4592)
!4597 = !DILocation(line: 1995, column: 32, scope: !4592)
!4598 = !DILocation(line: 1995, column: 30, scope: !4592)
!4599 = !DILocation(line: 1995, column: 51, scope: !4592)
!4600 = !DILocation(line: 1995, column: 13, scope: !4523)
!4601 = !DILocation(line: 1996, column: 11, scope: !4592)
!4602 = !DILocation(line: 2005, column: 13, scope: !4603)
!4603 = distinct !DILexicalBlock(scope: !4523, file: !282, line: 2005, column: 13)
!4604 = !DILocation(line: 2006, column: 13, scope: !4603)
!4605 = !DILocation(line: 2006, column: 17, scope: !4603)
!4606 = !DILocation(line: 2006, column: 21, scope: !4603)
!4607 = !DILocation(line: 2006, column: 24, scope: !4603)
!4608 = !DILocation(line: 2005, column: 13, scope: !4523)
!4609 = !DILocalVariable(name: "sb", scope: !4610, file: !282, line: 2008, type: !327)
!4610 = distinct !DILexicalBlock(scope: !4603, file: !282, line: 2007, column: 11)
!4611 = !DILocation(line: 2008, column: 25, scope: !4610)
!4612 = !DILocation(line: 2009, column: 23, scope: !4613)
!4613 = distinct !DILexicalBlock(scope: !4610, file: !282, line: 2009, column: 17)
!4614 = !DILocation(line: 2009, column: 17, scope: !4613)
!4615 = !DILocation(line: 2009, column: 17, scope: !4610)
!4616 = !DILocation(line: 2011, column: 21, scope: !4617)
!4617 = distinct !DILexicalBlock(scope: !4613, file: !282, line: 2010, column: 15)
!4618 = !DILocation(line: 2012, column: 17, scope: !4617)
!4619 = !DILocation(line: 2014, column: 17, scope: !4620)
!4620 = distinct !DILexicalBlock(scope: !4610, file: !282, line: 2014, column: 17)
!4621 = !DILocation(line: 2014, column: 20, scope: !4620)
!4622 = !DILocation(line: 2014, column: 31, scope: !4620)
!4623 = !DILocation(line: 2014, column: 44, scope: !4620)
!4624 = !DILocation(line: 2014, column: 38, scope: !4620)
!4625 = !DILocation(line: 2015, column: 17, scope: !4620)
!4626 = !DILocation(line: 2015, column: 20, scope: !4620)
!4627 = !DILocation(line: 2015, column: 23, scope: !4620)
!4628 = !DILocation(line: 2015, column: 34, scope: !4620)
!4629 = !DILocation(line: 2015, column: 47, scope: !4620)
!4630 = !DILocation(line: 2015, column: 41, scope: !4620)
!4631 = !DILocation(line: 2014, column: 17, scope: !4610)
!4632 = !DILocation(line: 2017, column: 17, scope: !4633)
!4633 = distinct !DILexicalBlock(scope: !4620, file: !282, line: 2016, column: 15)
!4634 = !DILocation(line: 2018, column: 21, scope: !4633)
!4635 = !DILocation(line: 2019, column: 17, scope: !4633)
!4636 = !DILocation(line: 2021, column: 11, scope: !4610)
!4637 = !DILocation(line: 2023, column: 13, scope: !4638)
!4638 = distinct !DILexicalBlock(scope: !4523, file: !282, line: 2023, column: 13)
!4639 = !DILocation(line: 2023, column: 13, scope: !4523)
!4640 = !DILocation(line: 2025, column: 29, scope: !4641)
!4641 = distinct !DILexicalBlock(scope: !4638, file: !282, line: 2024, column: 11)
!4642 = !DILocation(line: 2025, column: 33, scope: !4641)
!4643 = !DILocation(line: 2025, column: 42, scope: !4641)
!4644 = !DILocation(line: 2025, column: 40, scope: !4641)
!4645 = !DILocation(line: 2025, column: 13, scope: !4641)
!4646 = !DILocation(line: 2026, column: 13, scope: !4641)
!4647 = !DILocation(line: 2029, column: 22, scope: !4523)
!4648 = !DILocation(line: 2029, column: 15, scope: !4523)
!4649 = !DILocation(line: 2029, column: 13, scope: !4523)
!4650 = !DILocation(line: 2029, column: 9, scope: !4523)
!4651 = !DILocation(line: 2031, column: 13, scope: !4652)
!4652 = distinct !DILexicalBlock(scope: !4523, file: !282, line: 2031, column: 13)
!4653 = !DILocation(line: 2031, column: 16, scope: !4652)
!4654 = !DILocation(line: 2031, column: 13, scope: !4523)
!4655 = !DILocalVariable(name: "oerrno", scope: !4656, file: !282, line: 2033, type: !46)
!4656 = distinct !DILexicalBlock(scope: !4652, file: !282, line: 2032, column: 11)
!4657 = !DILocation(line: 2033, column: 17, scope: !4656)
!4658 = !DILocation(line: 2033, column: 26, scope: !4656)
!4659 = !DILocation(line: 2034, column: 25, scope: !4656)
!4660 = !DILocation(line: 2034, column: 19, scope: !4656)
!4661 = !DILocation(line: 2035, column: 13, scope: !4656)
!4662 = !DILocation(line: 2036, column: 11, scope: !4656)
!4663 = !DILocation(line: 2037, column: 16, scope: !4523)
!4664 = !DILocation(line: 2037, column: 9, scope: !4523)
!4665 = !DILocation(line: 2038, column: 1, scope: !4523)
!4666 = distinct !DISubprogram(name: "fts_build", scope: !282, file: !282, line: 1219, type: !4667, isLocal: true, isDefinition: true, scopeLine: 1220, flags: DIFlagPrototyped, isOptimized: false, unit: !281, variables: !48)
!4667 = !DISubroutineType(types: !4668)
!4668 = !{!2904, !293, !46}
!4669 = !DILocalVariable(name: "sp", arg: 1, scope: !4666, file: !282, line: 1219, type: !293)
!4670 = !DILocation(line: 1219, column: 26, scope: !4666)
!4671 = !DILocalVariable(name: "type", arg: 2, scope: !4666, file: !282, line: 1219, type: !46)
!4672 = !DILocation(line: 1219, column: 34, scope: !4666)
!4673 = !DILocalVariable(name: "dp", scope: !4666, file: !282, line: 1221, type: !4674)
!4674 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4675, size: 64)
!4675 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dirent", file: !4676, line: 22, size: 2240, elements: !4677)
!4676 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/dirent.h", directory: "/home/ma481/Downloads/Chisel/chisel-bench/benchmark/rm-8.4/original/obj-llvm/lib")
!4677 = !{!4678, !4679, !4680, !4681, !4682}
!4678 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino", scope: !4675, file: !4676, line: 25, baseType: !333, size: 64)
!4679 = !DIDerivedType(tag: DW_TAG_member, name: "d_off", scope: !4675, file: !4676, line: 26, baseType: !344, size: 64, offset: 64)
!4680 = !DIDerivedType(tag: DW_TAG_member, name: "d_reclen", scope: !4675, file: !4676, line: 31, baseType: !183, size: 16, offset: 128)
!4681 = !DIDerivedType(tag: DW_TAG_member, name: "d_type", scope: !4675, file: !4676, line: 32, baseType: !1795, size: 8, offset: 144)
!4682 = !DIDerivedType(tag: DW_TAG_member, name: "d_name", scope: !4675, file: !4676, line: 33, baseType: !204, size: 2048, offset: 152)
!4683 = !DILocation(line: 1221, column: 33, scope: !4666)
!4684 = !DILocalVariable(name: "p", scope: !4666, file: !282, line: 1222, type: !2904)
!4685 = !DILocation(line: 1222, column: 26, scope: !4666)
!4686 = !DILocalVariable(name: "head", scope: !4666, file: !282, line: 1222, type: !2904)
!4687 = !DILocation(line: 1222, column: 30, scope: !4666)
!4688 = !DILocalVariable(name: "nitems", scope: !4666, file: !282, line: 1223, type: !143)
!4689 = !DILocation(line: 1223, column: 25, scope: !4666)
!4690 = !DILocalVariable(name: "cur", scope: !4666, file: !282, line: 1224, type: !2904)
!4691 = !DILocation(line: 1224, column: 17, scope: !4666)
!4692 = !DILocalVariable(name: "tail", scope: !4666, file: !282, line: 1224, type: !2904)
!4693 = !DILocation(line: 1224, column: 23, scope: !4666)
!4694 = !DILocalVariable(name: "dirp", scope: !4666, file: !282, line: 1225, type: !4695)
!4695 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4696, size: 64)
!4696 = !DIDerivedType(tag: DW_TAG_typedef, name: "DIR", file: !428, line: 127, baseType: !4697)
!4697 = !DICompositeType(tag: DW_TAG_structure_type, name: "__dirstream", file: !428, line: 127, flags: DIFlagFwdDecl)
!4698 = !DILocation(line: 1225, column: 14, scope: !4666)
!4699 = !DILocalVariable(name: "oldaddr", scope: !4666, file: !282, line: 1226, type: !39)
!4700 = !DILocation(line: 1226, column: 15, scope: !4666)
!4701 = !DILocalVariable(name: "saved_errno", scope: !4666, file: !282, line: 1227, type: !46)
!4702 = !DILocation(line: 1227, column: 13, scope: !4666)
!4703 = !DILocalVariable(name: "descend", scope: !4666, file: !282, line: 1228, type: !131)
!4704 = !DILocation(line: 1228, column: 14, scope: !4666)
!4705 = !DILocalVariable(name: "doadjust", scope: !4666, file: !282, line: 1229, type: !131)
!4706 = !DILocation(line: 1229, column: 14, scope: !4666)
!4707 = !DILocalVariable(name: "level", scope: !4666, file: !282, line: 1230, type: !315)
!4708 = !DILocation(line: 1230, column: 19, scope: !4666)
!4709 = !DILocalVariable(name: "nlinks", scope: !4666, file: !282, line: 1231, type: !318)
!4710 = !DILocation(line: 1231, column: 17, scope: !4666)
!4711 = !DILocalVariable(name: "nostat", scope: !4666, file: !282, line: 1232, type: !131)
!4712 = !DILocation(line: 1232, column: 14, scope: !4666)
!4713 = !DILocalVariable(name: "len", scope: !4666, file: !282, line: 1233, type: !143)
!4714 = !DILocation(line: 1233, column: 16, scope: !4666)
!4715 = !DILocalVariable(name: "maxlen", scope: !4666, file: !282, line: 1233, type: !143)
!4716 = !DILocation(line: 1233, column: 21, scope: !4666)
!4717 = !DILocalVariable(name: "new_len", scope: !4666, file: !282, line: 1233, type: !143)
!4718 = !DILocation(line: 1233, column: 29, scope: !4666)
!4719 = !DILocalVariable(name: "cp", scope: !4666, file: !282, line: 1234, type: !38)
!4720 = !DILocation(line: 1234, column: 15, scope: !4666)
!4721 = !DILocation(line: 1237, column: 15, scope: !4666)
!4722 = !DILocation(line: 1237, column: 19, scope: !4666)
!4723 = !DILocation(line: 1237, column: 13, scope: !4666)
!4724 = !DILocation(line: 1254, column: 20, scope: !4725)
!4725 = distinct !DILexicalBlock(scope: !4666, file: !282, line: 1254, column: 12)
!4726 = !DILocation(line: 1254, column: 18, scope: !4725)
!4727 = !DILocation(line: 1254, column: 57, scope: !4725)
!4728 = !DILocation(line: 1254, column: 12, scope: !4666)
!4729 = !DILocation(line: 1255, column: 21, scope: !4730)
!4730 = distinct !DILexicalBlock(scope: !4731, file: !282, line: 1255, column: 21)
!4731 = distinct !DILexicalBlock(scope: !4725, file: !282, line: 1254, column: 66)
!4732 = !DILocation(line: 1255, column: 26, scope: !4730)
!4733 = !DILocation(line: 1255, column: 21, scope: !4731)
!4734 = !DILocation(line: 1256, column: 25, scope: !4735)
!4735 = distinct !DILexicalBlock(scope: !4730, file: !282, line: 1255, column: 36)
!4736 = !DILocation(line: 1256, column: 30, scope: !4735)
!4737 = !DILocation(line: 1256, column: 39, scope: !4735)
!4738 = !DILocation(line: 1257, column: 42, scope: !4735)
!4739 = !DILocation(line: 1257, column: 25, scope: !4735)
!4740 = !DILocation(line: 1257, column: 30, scope: !4735)
!4741 = !DILocation(line: 1257, column: 40, scope: !4735)
!4742 = !DILocation(line: 1258, column: 17, scope: !4735)
!4743 = !DILocation(line: 1259, column: 17, scope: !4731)
!4744 = !DILocation(line: 1264, column: 12, scope: !4745)
!4745 = distinct !DILexicalBlock(scope: !4666, file: !282, line: 1264, column: 12)
!4746 = !DILocation(line: 1264, column: 17, scope: !4745)
!4747 = !DILocation(line: 1264, column: 26, scope: !4745)
!4748 = !DILocation(line: 1264, column: 12, scope: !4666)
!4749 = !DILocation(line: 1265, column: 35, scope: !4745)
!4750 = !DILocation(line: 1265, column: 39, scope: !4745)
!4751 = !DILocation(line: 1265, column: 26, scope: !4745)
!4752 = !DILocation(line: 1265, column: 10, scope: !4745)
!4753 = !DILocation(line: 1265, column: 15, scope: !4745)
!4754 = !DILocation(line: 1265, column: 24, scope: !4745)
!4755 = !DILocation(line: 1266, column: 17, scope: !4756)
!4756 = distinct !DILexicalBlock(scope: !4745, file: !282, line: 1266, column: 17)
!4757 = !DILocation(line: 1266, column: 21, scope: !4756)
!4758 = !DILocation(line: 1266, column: 33, scope: !4756)
!4759 = !DILocation(line: 1266, column: 17, scope: !4745)
!4760 = !DILocation(line: 1273, column: 17, scope: !4761)
!4761 = distinct !DILexicalBlock(scope: !4756, file: !282, line: 1266, column: 58)
!4762 = distinct !{!4762, !4760, !4760}
!4763 = !DILocation(line: 1273, column: 17, scope: !4764)
!4764 = distinct !DILexicalBlock(scope: !4761, file: !282, line: 1273, column: 17)
!4765 = !DILocation(line: 1274, column: 27, scope: !4761)
!4766 = !DILocation(line: 1274, column: 31, scope: !4761)
!4767 = !DILocation(line: 1274, column: 17, scope: !4761)
!4768 = !DILocation(line: 1275, column: 34, scope: !4769)
!4769 = distinct !DILexicalBlock(scope: !4761, file: !282, line: 1275, column: 21)
!4770 = !DILocation(line: 1275, column: 38, scope: !4769)
!4771 = !DILocation(line: 1275, column: 23, scope: !4769)
!4772 = !DILocation(line: 1275, column: 21, scope: !4761)
!4773 = !DILocation(line: 1276, column: 26, scope: !4774)
!4774 = distinct !DILexicalBlock(scope: !4769, file: !282, line: 1275, column: 44)
!4775 = !DILocation(line: 1277, column: 26, scope: !4774)
!4776 = !DILocation(line: 1279, column: 9, scope: !4761)
!4777 = !DILocation(line: 1286, column: 13, scope: !4778)
!4778 = distinct !DILexicalBlock(scope: !4666, file: !282, line: 1286, column: 13)
!4779 = !DILocation(line: 1286, column: 18, scope: !4778)
!4780 = !DILocation(line: 1286, column: 13, scope: !4666)
!4781 = !DILocation(line: 1287, column: 24, scope: !4782)
!4782 = distinct !DILexicalBlock(scope: !4778, file: !282, line: 1286, column: 29)
!4783 = !DILocation(line: 1289, column: 24, scope: !4782)
!4784 = !DILocation(line: 1290, column: 9, scope: !4782)
!4785 = !DILocation(line: 1290, column: 20, scope: !4786)
!4786 = distinct !DILexicalBlock(scope: !4778, file: !282, line: 1290, column: 20)
!4787 = !DILocation(line: 1290, column: 38, scope: !4786)
!4788 = !DILocation(line: 1290, column: 41, scope: !4786)
!4789 = !DILocation(line: 1290, column: 20, scope: !4778)
!4790 = !DILocation(line: 1291, column: 27, scope: !4791)
!4791 = distinct !DILexicalBlock(scope: !4786, file: !282, line: 1290, column: 62)
!4792 = !DILocation(line: 1291, column: 32, scope: !4791)
!4793 = !DILocation(line: 1291, column: 43, scope: !4791)
!4794 = !DILocation(line: 1292, column: 30, scope: !4791)
!4795 = !DILocation(line: 1292, column: 29, scope: !4791)
!4796 = !DILocation(line: 1292, column: 27, scope: !4791)
!4797 = !DILocation(line: 1291, column: 24, scope: !4791)
!4798 = !DILocation(line: 1293, column: 24, scope: !4791)
!4799 = !DILocation(line: 1294, column: 9, scope: !4791)
!4800 = !DILocation(line: 1295, column: 24, scope: !4801)
!4801 = distinct !DILexicalBlock(scope: !4786, file: !282, line: 1294, column: 16)
!4802 = !DILocation(line: 1296, column: 24, scope: !4801)
!4803 = !DILocation(line: 1314, column: 13, scope: !4804)
!4804 = distinct !DILexicalBlock(scope: !4666, file: !282, line: 1314, column: 13)
!4805 = !DILocation(line: 1314, column: 20, scope: !4804)
!4806 = !DILocation(line: 1314, column: 23, scope: !4804)
!4807 = !DILocation(line: 1314, column: 28, scope: !4804)
!4808 = !DILocation(line: 1314, column: 13, scope: !4666)
!4809 = !DILocalVariable(name: "dir_fd", scope: !4810, file: !282, line: 1315, type: !46)
!4810 = distinct !DILexicalBlock(scope: !4804, file: !282, line: 1314, column: 38)
!4811 = !DILocation(line: 1315, column: 21, scope: !4810)
!4812 = !DILocation(line: 1315, column: 36, scope: !4810)
!4813 = !DILocation(line: 1315, column: 30, scope: !4810)
!4814 = !DILocation(line: 1316, column: 21, scope: !4815)
!4815 = distinct !DILexicalBlock(scope: !4810, file: !282, line: 1316, column: 21)
!4816 = !DILocation(line: 1316, column: 38, scope: !4815)
!4817 = !DILocation(line: 1316, column: 46, scope: !4815)
!4818 = !DILocation(line: 1316, column: 43, scope: !4815)
!4819 = !DILocation(line: 1316, column: 21, scope: !4810)
!4820 = !DILocation(line: 1318, column: 35, scope: !4821)
!4821 = distinct !DILexicalBlock(scope: !4815, file: !282, line: 1317, column: 19)
!4822 = !DILocation(line: 1318, column: 30, scope: !4821)
!4823 = !DILocation(line: 1318, column: 28, scope: !4821)
!4824 = !DILocation(line: 1319, column: 39, scope: !4821)
!4825 = !DILocation(line: 1319, column: 21, scope: !4821)
!4826 = !DILocation(line: 1320, column: 19, scope: !4821)
!4827 = !DILocation(line: 1321, column: 21, scope: !4828)
!4828 = distinct !DILexicalBlock(scope: !4810, file: !282, line: 1321, column: 21)
!4829 = !DILocation(line: 1321, column: 28, scope: !4828)
!4830 = !DILocation(line: 1321, column: 32, scope: !4828)
!4831 = !DILocation(line: 1321, column: 54, scope: !4828)
!4832 = !DILocation(line: 1321, column: 58, scope: !4828)
!4833 = !DILocation(line: 1321, column: 63, scope: !4828)
!4834 = !DILocation(line: 1321, column: 35, scope: !4828)
!4835 = !DILocation(line: 1321, column: 21, scope: !4810)
!4836 = !DILocation(line: 1322, column: 29, scope: !4837)
!4837 = distinct !DILexicalBlock(scope: !4838, file: !282, line: 1322, column: 29)
!4838 = distinct !DILexicalBlock(scope: !4828, file: !282, line: 1321, column: 78)
!4839 = !DILocation(line: 1322, column: 36, scope: !4837)
!4840 = !DILocation(line: 1322, column: 39, scope: !4837)
!4841 = !DILocation(line: 1322, column: 44, scope: !4837)
!4842 = !DILocation(line: 1322, column: 29, scope: !4838)
!4843 = !DILocation(line: 1323, column: 50, scope: !4837)
!4844 = !DILocation(line: 1323, column: 33, scope: !4837)
!4845 = !DILocation(line: 1323, column: 38, scope: !4837)
!4846 = !DILocation(line: 1323, column: 48, scope: !4837)
!4847 = !DILocation(line: 1324, column: 25, scope: !4838)
!4848 = !DILocation(line: 1324, column: 30, scope: !4838)
!4849 = !DILocation(line: 1324, column: 40, scope: !4838)
!4850 = !DILocation(line: 1325, column: 33, scope: !4838)
!4851 = !DILocation(line: 1326, column: 34, scope: !4838)
!4852 = !DILocation(line: 1326, column: 25, scope: !4838)
!4853 = !DILocation(line: 1327, column: 29, scope: !4854)
!4854 = distinct !DILexicalBlock(scope: !4838, file: !282, line: 1327, column: 29)
!4855 = !DILocation(line: 1327, column: 46, scope: !4854)
!4856 = !DILocation(line: 1327, column: 54, scope: !4854)
!4857 = !DILocation(line: 1327, column: 51, scope: !4854)
!4858 = !DILocation(line: 1327, column: 29, scope: !4838)
!4859 = !DILocation(line: 1328, column: 40, scope: !4854)
!4860 = !DILocation(line: 1328, column: 33, scope: !4854)
!4861 = !DILocation(line: 1329, column: 30, scope: !4838)
!4862 = !DILocation(line: 1330, column: 17, scope: !4838)
!4863 = !DILocation(line: 1331, column: 33, scope: !4828)
!4864 = !DILocation(line: 1332, column: 9, scope: !4810)
!4865 = !DILocation(line: 1333, column: 25, scope: !4804)
!4866 = !DILocation(line: 1345, column: 15, scope: !4666)
!4867 = !DILocation(line: 1345, column: 13, scope: !4666)
!4868 = !DILocation(line: 1346, column: 13, scope: !4869)
!4869 = distinct !DILexicalBlock(scope: !4666, file: !282, line: 1346, column: 13)
!4870 = !DILocation(line: 1346, column: 13, scope: !4666)
!4871 = !DILocation(line: 1347, column: 22, scope: !4872)
!4872 = distinct !DILexicalBlock(scope: !4869, file: !282, line: 1346, column: 33)
!4873 = !DILocation(line: 1347, column: 26, scope: !4872)
!4874 = !DILocation(line: 1347, column: 37, scope: !4872)
!4875 = !DILocation(line: 1347, column: 35, scope: !4872)
!4876 = !DILocation(line: 1347, column: 20, scope: !4872)
!4877 = !DILocation(line: 1348, column: 20, scope: !4872)
!4878 = !DILocation(line: 1348, column: 23, scope: !4872)
!4879 = !DILocation(line: 1349, column: 9, scope: !4872)
!4880 = !DILocation(line: 1351, column: 20, scope: !4881)
!4881 = distinct !DILexicalBlock(scope: !4869, file: !282, line: 1349, column: 16)
!4882 = !DILocation(line: 1353, column: 12, scope: !4666)
!4883 = !DILocation(line: 1354, column: 18, scope: !4666)
!4884 = !DILocation(line: 1354, column: 22, scope: !4666)
!4885 = !DILocation(line: 1354, column: 36, scope: !4666)
!4886 = !DILocation(line: 1354, column: 34, scope: !4666)
!4887 = !DILocation(line: 1354, column: 16, scope: !4666)
!4888 = !DILocation(line: 1356, column: 17, scope: !4666)
!4889 = !DILocation(line: 1356, column: 22, scope: !4666)
!4890 = !DILocation(line: 1356, column: 32, scope: !4666)
!4891 = !DILocation(line: 1356, column: 15, scope: !4666)
!4892 = !DILocation(line: 1359, column: 18, scope: !4666)
!4893 = !DILocation(line: 1360, column: 26, scope: !4894)
!4894 = distinct !DILexicalBlock(scope: !4666, file: !282, line: 1360, column: 9)
!4895 = !DILocation(line: 1360, column: 19, scope: !4894)
!4896 = !DILocation(line: 1360, column: 41, scope: !4894)
!4897 = !DILocation(line: 1360, column: 14, scope: !4894)
!4898 = !DILocation(line: 1360, column: 46, scope: !4899)
!4899 = distinct !DILexicalBlock(scope: !4894, file: !282, line: 1360, column: 9)
!4900 = !DILocation(line: 1360, column: 51, scope: !4899)
!4901 = !DILocation(line: 1360, column: 68, scope: !4899)
!4902 = !DILocation(line: 1360, column: 60, scope: !4899)
!4903 = !DILocation(line: 1360, column: 58, scope: !4899)
!4904 = !DILocation(line: 1360, column: 9, scope: !4894)
!4905 = !DILocalVariable(name: "is_dir", scope: !4906, file: !282, line: 1361, type: !131)
!4906 = distinct !DILexicalBlock(scope: !4899, file: !282, line: 1360, column: 77)
!4907 = !DILocation(line: 1361, column: 22, scope: !4906)
!4908 = !DILocation(line: 1363, column: 22, scope: !4909)
!4909 = distinct !DILexicalBlock(scope: !4906, file: !282, line: 1363, column: 21)
!4910 = !DILocation(line: 1363, column: 40, scope: !4909)
!4911 = !DILocation(line: 1363, column: 43, scope: !4909)
!4912 = !DILocation(line: 1363, column: 21, scope: !4906)
!4913 = !DILocation(line: 1364, column: 25, scope: !4909)
!4914 = distinct !{!4914, !4904, !4915}
!4915 = !DILocation(line: 1475, column: 9, scope: !4894)
!4916 = !DILocation(line: 1366, column: 37, scope: !4917)
!4917 = distinct !DILexicalBlock(scope: !4906, file: !282, line: 1366, column: 21)
!4918 = !DILocation(line: 1366, column: 41, scope: !4917)
!4919 = !DILocation(line: 1366, column: 45, scope: !4917)
!4920 = !DILocation(line: 1367, column: 37, scope: !4917)
!4921 = !DILocation(line: 1366, column: 26, scope: !4917)
!4922 = !DILocation(line: 1366, column: 24, scope: !4917)
!4923 = !DILocation(line: 1367, column: 60, scope: !4917)
!4924 = !DILocation(line: 1366, column: 21, scope: !4906)
!4925 = !DILocation(line: 1368, column: 25, scope: !4917)
!4926 = !DILocation(line: 1369, column: 21, scope: !4927)
!4927 = distinct !DILexicalBlock(scope: !4906, file: !282, line: 1369, column: 21)
!4928 = !DILocation(line: 1369, column: 45, scope: !4927)
!4929 = !DILocation(line: 1369, column: 42, scope: !4927)
!4930 = !DILocation(line: 1369, column: 21, scope: !4906)
!4931 = !DILocation(line: 1371, column: 35, scope: !4932)
!4932 = distinct !DILexicalBlock(scope: !4927, file: !282, line: 1369, column: 53)
!4933 = !DILocation(line: 1371, column: 39, scope: !4932)
!4934 = !DILocation(line: 1371, column: 33, scope: !4932)
!4935 = !DILocation(line: 1372, column: 42, scope: !4936)
!4936 = distinct !DILexicalBlock(scope: !4932, file: !282, line: 1372, column: 29)
!4937 = !DILocation(line: 1372, column: 46, scope: !4936)
!4938 = !DILocation(line: 1372, column: 69, scope: !4936)
!4939 = !DILocation(line: 1372, column: 67, scope: !4936)
!4940 = !DILocation(line: 1372, column: 73, scope: !4936)
!4941 = !DILocation(line: 1372, column: 31, scope: !4936)
!4942 = !DILocation(line: 1372, column: 29, scope: !4932)
!4943 = !DILocation(line: 1372, column: 79, scope: !4936)
!4944 = !DILocation(line: 1378, column: 47, scope: !4945)
!4945 = distinct !DILexicalBlock(scope: !4936, file: !282, line: 1372, column: 79)
!4946 = !DILocation(line: 1378, column: 45, scope: !4945)
!4947 = !DILocation(line: 1379, column: 38, scope: !4945)
!4948 = !DILocation(line: 1379, column: 33, scope: !4945)
!4949 = !DILocation(line: 1380, column: 43, scope: !4945)
!4950 = !DILocation(line: 1380, column: 33, scope: !4945)
!4951 = !DILocation(line: 1381, column: 42, scope: !4945)
!4952 = !DILocation(line: 1381, column: 33, scope: !4945)
!4953 = !DILocation(line: 1382, column: 33, scope: !4945)
!4954 = !DILocation(line: 1382, column: 38, scope: !4945)
!4955 = !DILocation(line: 1382, column: 47, scope: !4945)
!4956 = !DILocation(line: 1383, column: 33, scope: !4945)
!4957 = !DILocation(line: 1384, column: 33, scope: !4945)
!4958 = !DILocation(line: 1385, column: 33, scope: !4945)
!4959 = !DILocation(line: 1388, column: 29, scope: !4960)
!4960 = distinct !DILexicalBlock(scope: !4932, file: !282, line: 1388, column: 29)
!4961 = !DILocation(line: 1388, column: 40, scope: !4960)
!4962 = !DILocation(line: 1388, column: 44, scope: !4960)
!4963 = !DILocation(line: 1388, column: 37, scope: !4960)
!4964 = !DILocation(line: 1388, column: 29, scope: !4932)
!4965 = !DILocation(line: 1389, column: 42, scope: !4966)
!4966 = distinct !DILexicalBlock(scope: !4960, file: !282, line: 1388, column: 54)
!4967 = !DILocation(line: 1390, column: 37, scope: !4968)
!4968 = distinct !DILexicalBlock(scope: !4966, file: !282, line: 1390, column: 37)
!4969 = !DILocation(line: 1390, column: 37, scope: !4966)
!4970 = !DILocation(line: 1391, column: 46, scope: !4968)
!4971 = !DILocation(line: 1391, column: 50, scope: !4968)
!4972 = !DILocation(line: 1391, column: 61, scope: !4968)
!4973 = !DILocation(line: 1391, column: 59, scope: !4968)
!4974 = !DILocation(line: 1391, column: 44, scope: !4968)
!4975 = !DILocation(line: 1391, column: 41, scope: !4968)
!4976 = !DILocation(line: 1392, column: 25, scope: !4966)
!4977 = !DILocation(line: 1393, column: 34, scope: !4932)
!4978 = !DILocation(line: 1393, column: 38, scope: !4932)
!4979 = !DILocation(line: 1393, column: 52, scope: !4932)
!4980 = !DILocation(line: 1393, column: 50, scope: !4932)
!4981 = !DILocation(line: 1393, column: 32, scope: !4932)
!4982 = !DILocation(line: 1394, column: 17, scope: !4932)
!4983 = !DILocation(line: 1396, column: 27, scope: !4906)
!4984 = !DILocation(line: 1396, column: 33, scope: !4906)
!4985 = !DILocation(line: 1396, column: 31, scope: !4906)
!4986 = !DILocation(line: 1396, column: 25, scope: !4906)
!4987 = !DILocation(line: 1397, column: 21, scope: !4988)
!4988 = distinct !DILexicalBlock(scope: !4906, file: !282, line: 1397, column: 21)
!4989 = !DILocation(line: 1397, column: 31, scope: !4988)
!4990 = !DILocation(line: 1397, column: 29, scope: !4988)
!4991 = !DILocation(line: 1397, column: 21, scope: !4906)
!4992 = !DILocation(line: 1404, column: 30, scope: !4993)
!4993 = distinct !DILexicalBlock(scope: !4988, file: !282, line: 1397, column: 36)
!4994 = !DILocation(line: 1404, column: 25, scope: !4993)
!4995 = !DILocation(line: 1405, column: 35, scope: !4993)
!4996 = !DILocation(line: 1405, column: 25, scope: !4993)
!4997 = !DILocation(line: 1406, column: 34, scope: !4993)
!4998 = !DILocation(line: 1406, column: 25, scope: !4993)
!4999 = !DILocation(line: 1407, column: 25, scope: !4993)
!5000 = !DILocation(line: 1407, column: 30, scope: !4993)
!5001 = !DILocation(line: 1407, column: 39, scope: !4993)
!5002 = !DILocation(line: 1408, column: 25, scope: !4993)
!5003 = !DILocation(line: 1409, column: 25, scope: !4993)
!5004 = !DILocation(line: 1410, column: 25, scope: !4993)
!5005 = !DILocation(line: 1412, column: 32, scope: !4906)
!5006 = !DILocation(line: 1412, column: 17, scope: !4906)
!5007 = !DILocation(line: 1412, column: 20, scope: !4906)
!5008 = !DILocation(line: 1412, column: 30, scope: !4906)
!5009 = !DILocation(line: 1413, column: 33, scope: !4906)
!5010 = !DILocation(line: 1413, column: 37, scope: !4906)
!5011 = !DILocation(line: 1413, column: 17, scope: !4906)
!5012 = !DILocation(line: 1413, column: 20, scope: !4906)
!5013 = !DILocation(line: 1413, column: 31, scope: !4906)
!5014 = !DILocation(line: 1414, column: 34, scope: !4906)
!5015 = !DILocation(line: 1414, column: 17, scope: !4906)
!5016 = !DILocation(line: 1414, column: 20, scope: !4906)
!5017 = !DILocation(line: 1414, column: 32, scope: !4906)
!5018 = !DILocation(line: 1422, column: 40, scope: !4906)
!5019 = !DILocation(line: 1422, column: 17, scope: !4906)
!5020 = !DILocation(line: 1422, column: 20, scope: !4906)
!5021 = !DILocation(line: 1422, column: 31, scope: !4906)
!5022 = !DILocation(line: 1422, column: 38, scope: !4906)
!5023 = !DILocation(line: 1425, column: 21, scope: !5024)
!5024 = distinct !DILexicalBlock(scope: !4906, file: !282, line: 1425, column: 21)
!5025 = !DILocation(line: 1425, column: 21, scope: !4906)
!5026 = !DILocation(line: 1426, column: 42, scope: !5027)
!5027 = distinct !DILexicalBlock(scope: !5024, file: !282, line: 1425, column: 41)
!5028 = !DILocation(line: 1426, column: 45, scope: !5027)
!5029 = !DILocation(line: 1426, column: 25, scope: !5027)
!5030 = !DILocation(line: 1426, column: 28, scope: !5027)
!5031 = !DILocation(line: 1426, column: 40, scope: !5027)
!5032 = !DILocation(line: 1427, column: 33, scope: !5027)
!5033 = !DILocation(line: 1427, column: 37, scope: !5027)
!5034 = !DILocation(line: 1427, column: 40, scope: !5027)
!5035 = !DILocation(line: 1427, column: 25, scope: !5027)
!5036 = !DILocation(line: 1427, column: 50, scope: !5027)
!5037 = !DILocation(line: 1427, column: 53, scope: !5027)
!5038 = !DILocation(line: 1427, column: 65, scope: !5027)
!5039 = !DILocation(line: 1428, column: 17, scope: !5027)
!5040 = !DILocation(line: 1429, column: 42, scope: !5024)
!5041 = !DILocation(line: 1429, column: 45, scope: !5024)
!5042 = !DILocation(line: 1429, column: 25, scope: !5024)
!5043 = !DILocation(line: 1429, column: 28, scope: !5024)
!5044 = !DILocation(line: 1429, column: 40, scope: !5024)
!5045 = !DILocation(line: 1431, column: 21, scope: !5046)
!5046 = distinct !DILexicalBlock(scope: !4906, file: !282, line: 1431, column: 21)
!5047 = !DILocation(line: 1431, column: 25, scope: !5046)
!5048 = !DILocation(line: 1431, column: 36, scope: !5046)
!5049 = !DILocation(line: 1431, column: 44, scope: !5046)
!5050 = !DILocation(line: 1431, column: 47, scope: !5046)
!5051 = !DILocation(line: 1431, column: 21, scope: !4906)
!5052 = !DILocalVariable(name: "skip_stat", scope: !5053, file: !282, line: 1444, type: !131)
!5053 = distinct !DILexicalBlock(scope: !5046, file: !282, line: 1431, column: 70)
!5054 = !DILocation(line: 1444, column: 30, scope: !5053)
!5055 = !DILocation(line: 1444, column: 43, scope: !5053)
!5056 = !DILocation(line: 1445, column: 43, scope: !5053)
!5057 = !DILocation(line: 1445, column: 46, scope: !5053)
!5058 = !DILocation(line: 1446, column: 43, scope: !5053)
!5059 = !DILocation(line: 1446, column: 46, scope: !5053)
!5060 = !DILocation(line: 1447, column: 43, scope: !5053)
!5061 = !DILocation(line: 1447, column: 48, scope: !5053)
!5062 = !DILocation(line: 1447, column: 46, scope: !5053)
!5063 = !DILocation(line: 1448, column: 25, scope: !5053)
!5064 = !DILocation(line: 1448, column: 28, scope: !5053)
!5065 = !DILocation(line: 1448, column: 37, scope: !5053)
!5066 = !DILocation(line: 1451, column: 40, scope: !5053)
!5067 = !DILocation(line: 1451, column: 43, scope: !5053)
!5068 = !DILocation(line: 1451, column: 54, scope: !5053)
!5069 = !DILocation(line: 1451, column: 25, scope: !5053)
!5070 = !DILocation(line: 1452, column: 47, scope: !5053)
!5071 = !DILocation(line: 1452, column: 51, scope: !5053)
!5072 = !DILocation(line: 1452, column: 50, scope: !5053)
!5073 = !DILocation(line: 1452, column: 25, scope: !5053)
!5074 = !DILocation(line: 1453, column: 35, scope: !5053)
!5075 = !DILocation(line: 1454, column: 35, scope: !5053)
!5076 = !DILocation(line: 1454, column: 38, scope: !5053)
!5077 = !DILocation(line: 1453, column: 32, scope: !5053)
!5078 = !DILocation(line: 1455, column: 17, scope: !5053)
!5079 = !DILocation(line: 1456, column: 48, scope: !5080)
!5080 = distinct !DILexicalBlock(scope: !5046, file: !282, line: 1455, column: 24)
!5081 = !DILocation(line: 1456, column: 52, scope: !5080)
!5082 = !DILocation(line: 1456, column: 39, scope: !5080)
!5083 = !DILocation(line: 1456, column: 25, scope: !5080)
!5084 = !DILocation(line: 1456, column: 28, scope: !5080)
!5085 = !DILocation(line: 1456, column: 37, scope: !5080)
!5086 = !DILocation(line: 1457, column: 35, scope: !5080)
!5087 = !DILocation(line: 1457, column: 38, scope: !5080)
!5088 = !DILocation(line: 1457, column: 47, scope: !5080)
!5089 = !DILocation(line: 1458, column: 35, scope: !5080)
!5090 = !DILocation(line: 1458, column: 38, scope: !5080)
!5091 = !DILocation(line: 1458, column: 41, scope: !5080)
!5092 = !DILocation(line: 1458, column: 50, scope: !5080)
!5093 = !DILocation(line: 1459, column: 35, scope: !5080)
!5094 = !DILocation(line: 1459, column: 38, scope: !5080)
!5095 = !DILocation(line: 1459, column: 41, scope: !5080)
!5096 = !DILocation(line: 1459, column: 50, scope: !5080)
!5097 = !DILocation(line: 1457, column: 32, scope: !5080)
!5098 = !DILocation(line: 1463, column: 21, scope: !5099)
!5099 = distinct !DILexicalBlock(scope: !4906, file: !282, line: 1463, column: 21)
!5100 = !DILocation(line: 1463, column: 28, scope: !5099)
!5101 = !DILocation(line: 1463, column: 32, scope: !5099)
!5102 = !DILocation(line: 1463, column: 35, scope: !5099)
!5103 = !DILocation(line: 1463, column: 21, scope: !4906)
!5104 = !DILocation(line: 1464, column: 35, scope: !5099)
!5105 = !DILocation(line: 1464, column: 32, scope: !5099)
!5106 = !DILocation(line: 1464, column: 25, scope: !5099)
!5107 = !DILocation(line: 1467, column: 17, scope: !4906)
!5108 = !DILocation(line: 1467, column: 20, scope: !4906)
!5109 = !DILocation(line: 1467, column: 29, scope: !4906)
!5110 = !DILocation(line: 1468, column: 21, scope: !5111)
!5111 = distinct !DILexicalBlock(scope: !4906, file: !282, line: 1468, column: 21)
!5112 = !DILocation(line: 1468, column: 26, scope: !5111)
!5113 = !DILocation(line: 1468, column: 21, scope: !4906)
!5114 = !DILocation(line: 1469, column: 39, scope: !5111)
!5115 = !DILocation(line: 1469, column: 37, scope: !5111)
!5116 = !DILocation(line: 1469, column: 30, scope: !5111)
!5117 = !DILocation(line: 1469, column: 25, scope: !5111)
!5118 = !DILocation(line: 1471, column: 42, scope: !5119)
!5119 = distinct !DILexicalBlock(scope: !5111, file: !282, line: 1470, column: 22)
!5120 = !DILocation(line: 1471, column: 25, scope: !5119)
!5121 = !DILocation(line: 1471, column: 31, scope: !5119)
!5122 = !DILocation(line: 1471, column: 40, scope: !5119)
!5123 = !DILocation(line: 1472, column: 32, scope: !5119)
!5124 = !DILocation(line: 1472, column: 30, scope: !5119)
!5125 = !DILocation(line: 1474, column: 17, scope: !4906)
!5126 = !DILocation(line: 1360, column: 9, scope: !4899)
!5127 = !DILocation(line: 1476, column: 13, scope: !5128)
!5128 = distinct !DILexicalBlock(scope: !4666, file: !282, line: 1476, column: 13)
!5129 = !DILocation(line: 1476, column: 13, scope: !4666)
!5130 = !DILocation(line: 1477, column: 26, scope: !5128)
!5131 = !DILocation(line: 1477, column: 17, scope: !5128)
!5132 = !DILocation(line: 1483, column: 13, scope: !5133)
!5133 = distinct !DILexicalBlock(scope: !4666, file: !282, line: 1483, column: 13)
!5134 = !DILocation(line: 1483, column: 13, scope: !4666)
!5135 = !DILocation(line: 1484, column: 29, scope: !5133)
!5136 = !DILocation(line: 1484, column: 33, scope: !5133)
!5137 = !DILocation(line: 1484, column: 17, scope: !5133)
!5138 = !DILocation(line: 1490, column: 13, scope: !5139)
!5139 = distinct !DILexicalBlock(scope: !4666, file: !282, line: 1490, column: 13)
!5140 = !DILocation(line: 1490, column: 13, scope: !4666)
!5141 = !DILocation(line: 1491, column: 21, scope: !5142)
!5142 = distinct !DILexicalBlock(scope: !5143, file: !282, line: 1491, column: 21)
!5143 = distinct !DILexicalBlock(scope: !5139, file: !282, line: 1490, column: 33)
!5144 = !DILocation(line: 1491, column: 28, scope: !5142)
!5145 = !DILocation(line: 1491, column: 32, scope: !5142)
!5146 = !DILocation(line: 1491, column: 25, scope: !5142)
!5147 = !DILocation(line: 1491, column: 44, scope: !5142)
!5148 = !DILocation(line: 1491, column: 47, scope: !5142)
!5149 = !DILocation(line: 1491, column: 54, scope: !5142)
!5150 = !DILocation(line: 1491, column: 21, scope: !5143)
!5151 = !DILocation(line: 1492, column: 25, scope: !5142)
!5152 = !DILocation(line: 1493, column: 18, scope: !5143)
!5153 = !DILocation(line: 1493, column: 21, scope: !5143)
!5154 = !DILocation(line: 1494, column: 9, scope: !5143)
!5155 = !DILocation(line: 1503, column: 13, scope: !5156)
!5156 = distinct !DILexicalBlock(scope: !4666, file: !282, line: 1503, column: 13)
!5157 = !DILocation(line: 1503, column: 21, scope: !5156)
!5158 = !DILocation(line: 1503, column: 25, scope: !5156)
!5159 = !DILocation(line: 1503, column: 30, scope: !5156)
!5160 = !DILocation(line: 1503, column: 40, scope: !5156)
!5161 = !DILocation(line: 1503, column: 44, scope: !5156)
!5162 = !DILocation(line: 1503, column: 52, scope: !5156)
!5163 = !DILocation(line: 1504, column: 14, scope: !5156)
!5164 = !DILocation(line: 1504, column: 19, scope: !5156)
!5165 = !DILocation(line: 1504, column: 29, scope: !5156)
!5166 = !DILocation(line: 1503, column: 13, scope: !4666)
!5167 = !DILocation(line: 1505, column: 16, scope: !5156)
!5168 = !DILocation(line: 1506, column: 35, scope: !5156)
!5169 = !DILocation(line: 1506, column: 39, scope: !5156)
!5170 = !DILocation(line: 1506, column: 44, scope: !5156)
!5171 = !DILocation(line: 1506, column: 16, scope: !5156)
!5172 = !DILocation(line: 1507, column: 17, scope: !5173)
!5173 = distinct !DILexicalBlock(scope: !5156, file: !282, line: 1506, column: 68)
!5174 = !DILocation(line: 1507, column: 22, scope: !5173)
!5175 = !DILocation(line: 1507, column: 31, scope: !5173)
!5176 = !DILocation(line: 1508, column: 17, scope: !5173)
!5177 = !DILocation(line: 1509, column: 27, scope: !5173)
!5178 = !DILocation(line: 1509, column: 17, scope: !5173)
!5179 = !DILocation(line: 1510, column: 17, scope: !5173)
!5180 = !DILocation(line: 1514, column: 14, scope: !5181)
!5181 = distinct !DILexicalBlock(scope: !4666, file: !282, line: 1514, column: 13)
!5182 = !DILocation(line: 1514, column: 13, scope: !4666)
!5183 = !DILocation(line: 1515, column: 21, scope: !5184)
!5184 = distinct !DILexicalBlock(scope: !5185, file: !282, line: 1515, column: 21)
!5185 = distinct !DILexicalBlock(scope: !5181, file: !282, line: 1514, column: 22)
!5186 = !DILocation(line: 1515, column: 26, scope: !5184)
!5187 = !DILocation(line: 1515, column: 21, scope: !5185)
!5188 = !DILocation(line: 1516, column: 25, scope: !5184)
!5189 = !DILocation(line: 1516, column: 30, scope: !5184)
!5190 = !DILocation(line: 1516, column: 39, scope: !5184)
!5191 = !DILocation(line: 1517, column: 27, scope: !5185)
!5192 = !DILocation(line: 1517, column: 17, scope: !5185)
!5193 = !DILocation(line: 1518, column: 17, scope: !5185)
!5194 = !DILocation(line: 1525, column: 13, scope: !5195)
!5195 = distinct !DILexicalBlock(scope: !4666, file: !282, line: 1525, column: 13)
!5196 = !DILocation(line: 1525, column: 20, scope: !5195)
!5197 = !DILocation(line: 1526, column: 13, scope: !5195)
!5198 = !DILocation(line: 1526, column: 17, scope: !5195)
!5199 = !DILocation(line: 1526, column: 21, scope: !5195)
!5200 = !DILocation(line: 1527, column: 13, scope: !5195)
!5201 = !DILocation(line: 1527, column: 16, scope: !5195)
!5202 = !DILocation(line: 1528, column: 13, scope: !5195)
!5203 = !DILocation(line: 1528, column: 49, scope: !5195)
!5204 = !DILocation(line: 1528, column: 53, scope: !5195)
!5205 = !DILocation(line: 1528, column: 16, scope: !5195)
!5206 = !DILocation(line: 1525, column: 13, scope: !4666)
!5207 = !DILocation(line: 1529, column: 17, scope: !5208)
!5208 = distinct !DILexicalBlock(scope: !5195, file: !282, line: 1528, column: 66)
!5209 = !DILocation(line: 1529, column: 21, scope: !5208)
!5210 = !DILocation(line: 1529, column: 32, scope: !5208)
!5211 = !DILocation(line: 1530, column: 34, scope: !5208)
!5212 = !DILocation(line: 1530, column: 38, scope: !5208)
!5213 = !DILocation(line: 1530, column: 44, scope: !5208)
!5214 = !DILocation(line: 1530, column: 24, scope: !5208)
!5215 = !DILocation(line: 1530, column: 22, scope: !5208)
!5216 = !DILocation(line: 1531, column: 17, scope: !5208)
!5217 = !DILocation(line: 1531, column: 21, scope: !5208)
!5218 = !DILocation(line: 1531, column: 32, scope: !5208)
!5219 = !DILocation(line: 1532, column: 9, scope: !5208)
!5220 = !DILocation(line: 1535, column: 13, scope: !5221)
!5221 = distinct !DILexicalBlock(scope: !4666, file: !282, line: 1535, column: 13)
!5222 = !DILocation(line: 1535, column: 17, scope: !5221)
!5223 = !DILocation(line: 1535, column: 28, scope: !5221)
!5224 = !DILocation(line: 1535, column: 31, scope: !5221)
!5225 = !DILocation(line: 1535, column: 38, scope: !5221)
!5226 = !DILocation(line: 1535, column: 13, scope: !4666)
!5227 = !DILocation(line: 1536, column: 33, scope: !5221)
!5228 = !DILocation(line: 1536, column: 37, scope: !5221)
!5229 = !DILocation(line: 1536, column: 43, scope: !5221)
!5230 = !DILocation(line: 1536, column: 24, scope: !5221)
!5231 = !DILocation(line: 1536, column: 22, scope: !5221)
!5232 = !DILocation(line: 1536, column: 17, scope: !5221)
!5233 = !DILocation(line: 1537, column: 17, scope: !4666)
!5234 = !DILocation(line: 1537, column: 9, scope: !4666)
!5235 = !DILocation(line: 1538, column: 1, scope: !4666)
!5236 = distinct !DISubprogram(name: "cwd_advance_fd", scope: !282, file: !282, line: 326, type: !5237, isLocal: true, isDefinition: true, scopeLine: 327, flags: DIFlagPrototyped, isOptimized: false, unit: !281, variables: !48)
!5237 = !DISubroutineType(types: !5238)
!5238 = !{null, !293, !46, !131}
!5239 = !DILocalVariable(name: "sp", arg: 1, scope: !5236, file: !282, line: 326, type: !293)
!5240 = !DILocation(line: 326, column: 22, scope: !5236)
!5241 = !DILocalVariable(name: "fd", arg: 2, scope: !5236, file: !282, line: 326, type: !46)
!5242 = !DILocation(line: 326, column: 30, scope: !5236)
!5243 = !DILocalVariable(name: "chdir_down_one", arg: 3, scope: !5236, file: !282, line: 326, type: !131)
!5244 = !DILocation(line: 326, column: 39, scope: !5236)
!5245 = !DILocalVariable(name: "old", scope: !5236, file: !282, line: 328, type: !46)
!5246 = !DILocation(line: 328, column: 7, scope: !5236)
!5247 = !DILocation(line: 328, column: 13, scope: !5236)
!5248 = !DILocation(line: 328, column: 17, scope: !5236)
!5249 = !DILocation(line: 329, column: 3, scope: !5236)
!5250 = distinct !{!5250, !5249, !5249}
!5251 = !DILocation(line: 329, column: 3, scope: !5252)
!5252 = distinct !DILexicalBlock(scope: !5253, file: !282, line: 329, column: 3)
!5253 = distinct !DILexicalBlock(scope: !5236, file: !282, line: 329, column: 3)
!5254 = !DILocation(line: 329, column: 3, scope: !5253)
!5255 = !DILocation(line: 331, column: 7, scope: !5256)
!5256 = distinct !DILexicalBlock(scope: !5236, file: !282, line: 331, column: 7)
!5257 = !DILocation(line: 331, column: 7, scope: !5236)
!5258 = !DILocalVariable(name: "prev_fd_in_slot", scope: !5259, file: !282, line: 335, type: !46)
!5259 = distinct !DILexicalBlock(scope: !5256, file: !282, line: 332, column: 5)
!5260 = !DILocation(line: 335, column: 11, scope: !5259)
!5261 = !DILocation(line: 335, column: 43, scope: !5259)
!5262 = !DILocation(line: 335, column: 47, scope: !5259)
!5263 = !DILocation(line: 335, column: 60, scope: !5259)
!5264 = !DILocation(line: 335, column: 29, scope: !5259)
!5265 = !DILocation(line: 337, column: 16, scope: !5266)
!5266 = distinct !DILexicalBlock(scope: !5259, file: !282, line: 337, column: 11)
!5267 = !DILocation(line: 337, column: 13, scope: !5266)
!5268 = !DILocation(line: 337, column: 11, scope: !5259)
!5269 = !DILocation(line: 338, column: 16, scope: !5266)
!5270 = !DILocation(line: 338, column: 9, scope: !5266)
!5271 = !DILocation(line: 339, column: 5, scope: !5259)
!5272 = !DILocation(line: 340, column: 15, scope: !5273)
!5273 = distinct !DILexicalBlock(scope: !5256, file: !282, line: 340, column: 13)
!5274 = !DILocation(line: 340, column: 13, scope: !5256)
!5275 = !DILocation(line: 342, column: 16, scope: !5276)
!5276 = distinct !DILexicalBlock(scope: !5277, file: !282, line: 342, column: 11)
!5277 = distinct !DILexicalBlock(scope: !5273, file: !282, line: 341, column: 5)
!5278 = !DILocation(line: 342, column: 13, scope: !5276)
!5279 = !DILocation(line: 342, column: 11, scope: !5277)
!5280 = !DILocation(line: 343, column: 16, scope: !5276)
!5281 = !DILocation(line: 343, column: 9, scope: !5276)
!5282 = !DILocation(line: 344, column: 5, scope: !5277)
!5283 = !DILocation(line: 346, column: 20, scope: !5236)
!5284 = !DILocation(line: 346, column: 3, scope: !5236)
!5285 = !DILocation(line: 346, column: 7, scope: !5236)
!5286 = !DILocation(line: 346, column: 18, scope: !5236)
!5287 = !DILocation(line: 347, column: 1, scope: !5236)
!5288 = distinct !DISubprogram(name: "fts_load", scope: !282, file: !282, line: 548, type: !4456, isLocal: true, isDefinition: true, scopeLine: 549, flags: DIFlagPrototyped, isOptimized: false, unit: !281, variables: !48)
!5289 = !DILocalVariable(name: "sp", arg: 1, scope: !5288, file: !282, line: 548, type: !293)
!5290 = !DILocation(line: 548, column: 16, scope: !5288)
!5291 = !DILocalVariable(name: "p", arg: 2, scope: !5288, file: !282, line: 548, type: !2904)
!5292 = !DILocation(line: 548, column: 37, scope: !5288)
!5293 = !DILocalVariable(name: "len", scope: !5288, file: !282, line: 550, type: !143)
!5294 = !DILocation(line: 550, column: 25, scope: !5288)
!5295 = !DILocalVariable(name: "cp", scope: !5288, file: !282, line: 551, type: !38)
!5296 = !DILocation(line: 551, column: 24, scope: !5288)
!5297 = !DILocation(line: 560, column: 32, scope: !5288)
!5298 = !DILocation(line: 560, column: 35, scope: !5288)
!5299 = !DILocation(line: 560, column: 15, scope: !5288)
!5300 = !DILocation(line: 560, column: 18, scope: !5288)
!5301 = !DILocation(line: 560, column: 30, scope: !5288)
!5302 = !DILocation(line: 560, column: 13, scope: !5288)
!5303 = !DILocation(line: 561, column: 17, scope: !5288)
!5304 = !DILocation(line: 561, column: 21, scope: !5288)
!5305 = !DILocation(line: 561, column: 31, scope: !5288)
!5306 = !DILocation(line: 561, column: 34, scope: !5288)
!5307 = !DILocation(line: 561, column: 9, scope: !5288)
!5308 = !DILocation(line: 561, column: 44, scope: !5288)
!5309 = !DILocation(line: 561, column: 48, scope: !5288)
!5310 = !DILocation(line: 562, column: 27, scope: !5311)
!5311 = distinct !DILexicalBlock(scope: !5288, file: !282, line: 562, column: 13)
!5312 = !DILocation(line: 562, column: 30, scope: !5311)
!5313 = !DILocation(line: 562, column: 19, scope: !5311)
!5314 = !DILocation(line: 562, column: 17, scope: !5311)
!5315 = !DILocation(line: 562, column: 46, scope: !5311)
!5316 = !DILocation(line: 562, column: 50, scope: !5311)
!5317 = !DILocation(line: 562, column: 56, scope: !5311)
!5318 = !DILocation(line: 562, column: 59, scope: !5311)
!5319 = !DILocation(line: 562, column: 53, scope: !5311)
!5320 = !DILocation(line: 562, column: 68, scope: !5311)
!5321 = !DILocation(line: 562, column: 71, scope: !5311)
!5322 = !DILocation(line: 562, column: 13, scope: !5288)
!5323 = !DILocation(line: 563, column: 30, scope: !5324)
!5324 = distinct !DILexicalBlock(scope: !5311, file: !282, line: 562, column: 79)
!5325 = !DILocation(line: 563, column: 23, scope: !5324)
!5326 = !DILocation(line: 563, column: 21, scope: !5324)
!5327 = !DILocation(line: 564, column: 25, scope: !5324)
!5328 = !DILocation(line: 564, column: 28, scope: !5324)
!5329 = !DILocation(line: 564, column: 17, scope: !5324)
!5330 = !DILocation(line: 564, column: 38, scope: !5324)
!5331 = !DILocation(line: 564, column: 42, scope: !5324)
!5332 = !DILocation(line: 564, column: 46, scope: !5324)
!5333 = !DILocation(line: 565, column: 34, scope: !5324)
!5334 = !DILocation(line: 565, column: 17, scope: !5324)
!5335 = !DILocation(line: 565, column: 20, scope: !5324)
!5336 = !DILocation(line: 565, column: 32, scope: !5324)
!5337 = !DILocation(line: 566, column: 9, scope: !5324)
!5338 = !DILocation(line: 567, column: 40, scope: !5288)
!5339 = !DILocation(line: 567, column: 44, scope: !5288)
!5340 = !DILocation(line: 567, column: 26, scope: !5288)
!5341 = !DILocation(line: 567, column: 29, scope: !5288)
!5342 = !DILocation(line: 567, column: 38, scope: !5288)
!5343 = !DILocation(line: 567, column: 9, scope: !5288)
!5344 = !DILocation(line: 567, column: 12, scope: !5288)
!5345 = !DILocation(line: 567, column: 24, scope: !5288)
!5346 = !DILocation(line: 568, column: 1, scope: !5288)
!5347 = distinct !DISubprogram(name: "link_count_optimize_ok", scope: !282, file: !282, line: 753, type: !5348, isLocal: true, isDefinition: true, scopeLine: 754, flags: DIFlagPrototyped, isOptimized: false, unit: !281, variables: !48)
!5348 = !DISubroutineType(types: !5349)
!5349 = !{!131, !439}
!5350 = !DILocalVariable(name: "p", arg: 1, scope: !5347, file: !282, line: 753, type: !439)
!5351 = !DILocation(line: 753, column: 39, scope: !5347)
!5352 = !DILocalVariable(name: "sp", scope: !5347, file: !282, line: 755, type: !293)
!5353 = !DILocation(line: 755, column: 8, scope: !5347)
!5354 = !DILocation(line: 755, column: 13, scope: !5347)
!5355 = !DILocation(line: 755, column: 16, scope: !5347)
!5356 = !DILocalVariable(name: "h", scope: !5347, file: !282, line: 756, type: !5357)
!5357 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5358, size: 64)
!5358 = !DIDerivedType(tag: DW_TAG_typedef, name: "Hash_table", file: !148, line: 62, baseType: !387)
!5359 = !DILocation(line: 756, column: 15, scope: !5347)
!5360 = !DILocation(line: 756, column: 19, scope: !5347)
!5361 = !DILocation(line: 756, column: 23, scope: !5347)
!5362 = !DILocalVariable(name: "tmp", scope: !5347, file: !282, line: 757, type: !5363)
!5363 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "LCO_ent", file: !282, line: 723, size: 128, elements: !5364)
!5364 = !{!5365, !5366}
!5365 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !5363, file: !282, line: 725, baseType: !371, size: 64)
!5366 = !DIDerivedType(tag: DW_TAG_member, name: "opt_ok", scope: !5363, file: !282, line: 726, baseType: !131, size: 8, offset: 64)
!5367 = !DILocation(line: 757, column: 18, scope: !5347)
!5368 = !DILocalVariable(name: "ent", scope: !5347, file: !282, line: 758, type: !5369)
!5369 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5363, size: 64)
!5370 = !DILocation(line: 758, column: 19, scope: !5347)
!5371 = !DILocalVariable(name: "opt_ok", scope: !5347, file: !282, line: 759, type: !131)
!5372 = !DILocation(line: 759, column: 8, scope: !5347)
!5373 = !DILocalVariable(name: "t2", scope: !5347, file: !282, line: 760, type: !5369)
!5374 = !DILocation(line: 760, column: 19, scope: !5347)
!5375 = !DILocation(line: 764, column: 8, scope: !5376)
!5376 = distinct !DILexicalBlock(scope: !5347, file: !282, line: 764, column: 7)
!5377 = !DILocation(line: 764, column: 7, scope: !5347)
!5378 = !DILocation(line: 765, column: 5, scope: !5376)
!5379 = !DILocation(line: 768, column: 7, scope: !5380)
!5380 = distinct !DILexicalBlock(scope: !5347, file: !282, line: 768, column: 7)
!5381 = !DILocation(line: 768, column: 9, scope: !5380)
!5382 = !DILocation(line: 768, column: 7, scope: !5347)
!5383 = !DILocation(line: 771, column: 11, scope: !5384)
!5384 = distinct !DILexicalBlock(scope: !5380, file: !282, line: 769, column: 5)
!5385 = !DILocation(line: 770, column: 11, scope: !5384)
!5386 = !DILocation(line: 770, column: 15, scope: !5384)
!5387 = !DILocation(line: 771, column: 9, scope: !5384)
!5388 = !DILocation(line: 770, column: 9, scope: !5384)
!5389 = !DILocation(line: 773, column: 11, scope: !5390)
!5390 = distinct !DILexicalBlock(scope: !5384, file: !282, line: 773, column: 11)
!5391 = !DILocation(line: 773, column: 13, scope: !5390)
!5392 = !DILocation(line: 773, column: 11, scope: !5384)
!5393 = !DILocation(line: 774, column: 9, scope: !5390)
!5394 = !DILocation(line: 775, column: 5, scope: !5384)
!5395 = !DILocation(line: 776, column: 16, scope: !5347)
!5396 = !DILocation(line: 776, column: 19, scope: !5347)
!5397 = !DILocation(line: 776, column: 30, scope: !5347)
!5398 = !DILocation(line: 776, column: 7, scope: !5347)
!5399 = !DILocation(line: 776, column: 14, scope: !5347)
!5400 = !DILocation(line: 777, column: 22, scope: !5347)
!5401 = !DILocation(line: 777, column: 25, scope: !5347)
!5402 = !DILocation(line: 777, column: 9, scope: !5347)
!5403 = !DILocation(line: 777, column: 7, scope: !5347)
!5404 = !DILocation(line: 778, column: 7, scope: !5405)
!5405 = distinct !DILexicalBlock(scope: !5347, file: !282, line: 778, column: 7)
!5406 = !DILocation(line: 778, column: 7, scope: !5347)
!5407 = !DILocation(line: 779, column: 12, scope: !5405)
!5408 = !DILocation(line: 779, column: 17, scope: !5405)
!5409 = !DILocation(line: 779, column: 5, scope: !5405)
!5410 = !DILocation(line: 782, column: 8, scope: !5347)
!5411 = !DILocation(line: 782, column: 6, scope: !5347)
!5412 = !DILocation(line: 783, column: 7, scope: !5413)
!5413 = distinct !DILexicalBlock(scope: !5347, file: !282, line: 783, column: 7)
!5414 = !DILocation(line: 783, column: 10, scope: !5413)
!5415 = !DILocation(line: 783, column: 7, scope: !5347)
!5416 = !DILocation(line: 784, column: 5, scope: !5413)
!5417 = !DILocation(line: 787, column: 39, scope: !5347)
!5418 = !DILocation(line: 787, column: 43, scope: !5347)
!5419 = !DILocation(line: 787, column: 12, scope: !5347)
!5420 = !DILocation(line: 787, column: 10, scope: !5347)
!5421 = !DILocation(line: 788, column: 16, scope: !5347)
!5422 = !DILocation(line: 788, column: 3, scope: !5347)
!5423 = !DILocation(line: 788, column: 7, scope: !5347)
!5424 = !DILocation(line: 788, column: 14, scope: !5347)
!5425 = !DILocation(line: 789, column: 16, scope: !5347)
!5426 = !DILocation(line: 789, column: 19, scope: !5347)
!5427 = !DILocation(line: 789, column: 30, scope: !5347)
!5428 = !DILocation(line: 789, column: 3, scope: !5347)
!5429 = !DILocation(line: 789, column: 7, scope: !5347)
!5430 = !DILocation(line: 789, column: 14, scope: !5347)
!5431 = !DILocation(line: 791, column: 22, scope: !5347)
!5432 = !DILocation(line: 791, column: 25, scope: !5347)
!5433 = !DILocation(line: 791, column: 9, scope: !5347)
!5434 = !DILocation(line: 791, column: 7, scope: !5347)
!5435 = !DILocation(line: 792, column: 7, scope: !5436)
!5436 = distinct !DILexicalBlock(scope: !5347, file: !282, line: 792, column: 7)
!5437 = !DILocation(line: 792, column: 11, scope: !5436)
!5438 = !DILocation(line: 792, column: 7, scope: !5347)
!5439 = !DILocation(line: 795, column: 13, scope: !5440)
!5440 = distinct !DILexicalBlock(scope: !5436, file: !282, line: 793, column: 5)
!5441 = !DILocation(line: 795, column: 7, scope: !5440)
!5442 = !DILocation(line: 796, column: 7, scope: !5440)
!5443 = !DILocation(line: 798, column: 3, scope: !5347)
!5444 = distinct !{!5444, !5443, !5443}
!5445 = !DILocation(line: 798, column: 3, scope: !5446)
!5446 = distinct !DILexicalBlock(scope: !5447, file: !282, line: 798, column: 3)
!5447 = distinct !DILexicalBlock(scope: !5347, file: !282, line: 798, column: 3)
!5448 = !DILocation(line: 798, column: 3, scope: !5447)
!5449 = !DILocation(line: 800, column: 10, scope: !5347)
!5450 = !DILocation(line: 800, column: 3, scope: !5347)
!5451 = !DILocation(line: 801, column: 1, scope: !5347)
!5452 = distinct !DISubprogram(name: "enter_dir", scope: !289, file: !289, line: 74, type: !5453, isLocal: true, isDefinition: true, scopeLine: 75, flags: DIFlagPrototyped, isOptimized: false, unit: !281, variables: !48)
!5453 = !DISubroutineType(types: !5454)
!5454 = !{!131, !293, !2904}
!5455 = !DILocalVariable(name: "fts", arg: 1, scope: !5452, file: !289, line: 74, type: !293)
!5456 = !DILocation(line: 74, column: 17, scope: !5452)
!5457 = !DILocalVariable(name: "ent", arg: 2, scope: !5452, file: !289, line: 74, type: !2904)
!5458 = !DILocation(line: 74, column: 30, scope: !5452)
!5459 = !DILocation(line: 76, column: 7, scope: !5460)
!5460 = distinct !DILexicalBlock(scope: !5452, file: !289, line: 76, column: 7)
!5461 = !DILocation(line: 76, column: 12, scope: !5460)
!5462 = !DILocation(line: 76, column: 24, scope: !5460)
!5463 = !DILocation(line: 76, column: 7, scope: !5452)
!5464 = !DILocalVariable(name: "st", scope: !5465, file: !289, line: 78, type: !4463)
!5465 = distinct !DILexicalBlock(scope: !5460, file: !289, line: 77, column: 5)
!5466 = !DILocation(line: 78, column: 26, scope: !5465)
!5467 = !DILocation(line: 78, column: 31, scope: !5465)
!5468 = !DILocation(line: 78, column: 36, scope: !5465)
!5469 = !DILocalVariable(name: "ad", scope: !5465, file: !289, line: 79, type: !5470)
!5470 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3676, size: 64)
!5471 = !DILocation(line: 79, column: 26, scope: !5465)
!5472 = !DILocation(line: 79, column: 31, scope: !5465)
!5473 = !DILocalVariable(name: "ad_from_table", scope: !5465, file: !289, line: 80, type: !5470)
!5474 = !DILocation(line: 80, column: 26, scope: !5465)
!5475 = !DILocation(line: 82, column: 12, scope: !5476)
!5476 = distinct !DILexicalBlock(scope: !5465, file: !289, line: 82, column: 11)
!5477 = !DILocation(line: 82, column: 11, scope: !5465)
!5478 = !DILocation(line: 83, column: 9, scope: !5476)
!5479 = !DILocation(line: 85, column: 17, scope: !5465)
!5480 = !DILocation(line: 85, column: 21, scope: !5465)
!5481 = !DILocation(line: 85, column: 7, scope: !5465)
!5482 = !DILocation(line: 85, column: 11, scope: !5465)
!5483 = !DILocation(line: 85, column: 15, scope: !5465)
!5484 = !DILocation(line: 86, column: 17, scope: !5465)
!5485 = !DILocation(line: 86, column: 21, scope: !5465)
!5486 = !DILocation(line: 86, column: 7, scope: !5465)
!5487 = !DILocation(line: 86, column: 11, scope: !5465)
!5488 = !DILocation(line: 86, column: 15, scope: !5465)
!5489 = !DILocation(line: 87, column: 21, scope: !5465)
!5490 = !DILocation(line: 87, column: 7, scope: !5465)
!5491 = !DILocation(line: 87, column: 11, scope: !5465)
!5492 = !DILocation(line: 87, column: 19, scope: !5465)
!5493 = !DILocation(line: 92, column: 36, scope: !5465)
!5494 = !DILocation(line: 92, column: 41, scope: !5465)
!5495 = !DILocation(line: 92, column: 51, scope: !5465)
!5496 = !DILocation(line: 92, column: 55, scope: !5465)
!5497 = !DILocation(line: 92, column: 23, scope: !5465)
!5498 = !DILocation(line: 92, column: 21, scope: !5465)
!5499 = !DILocation(line: 94, column: 11, scope: !5500)
!5500 = distinct !DILexicalBlock(scope: !5465, file: !289, line: 94, column: 11)
!5501 = !DILocation(line: 94, column: 28, scope: !5500)
!5502 = !DILocation(line: 94, column: 25, scope: !5500)
!5503 = !DILocation(line: 94, column: 11, scope: !5465)
!5504 = !DILocation(line: 96, column: 17, scope: !5505)
!5505 = distinct !DILexicalBlock(scope: !5500, file: !289, line: 95, column: 9)
!5506 = !DILocation(line: 96, column: 11, scope: !5505)
!5507 = !DILocation(line: 97, column: 16, scope: !5508)
!5508 = distinct !DILexicalBlock(scope: !5505, file: !289, line: 97, column: 15)
!5509 = !DILocation(line: 97, column: 15, scope: !5505)
!5510 = !DILocation(line: 98, column: 13, scope: !5508)
!5511 = !DILocation(line: 102, column: 28, scope: !5505)
!5512 = !DILocation(line: 102, column: 43, scope: !5505)
!5513 = !DILocation(line: 102, column: 11, scope: !5505)
!5514 = !DILocation(line: 102, column: 16, scope: !5505)
!5515 = !DILocation(line: 102, column: 26, scope: !5505)
!5516 = !DILocation(line: 103, column: 11, scope: !5505)
!5517 = !DILocation(line: 103, column: 16, scope: !5505)
!5518 = !DILocation(line: 103, column: 25, scope: !5505)
!5519 = !DILocation(line: 104, column: 9, scope: !5505)
!5520 = !DILocation(line: 105, column: 5, scope: !5465)
!5521 = !DILocation(line: 108, column: 24, scope: !5522)
!5522 = distinct !DILexicalBlock(scope: !5523, file: !289, line: 108, column: 11)
!5523 = distinct !DILexicalBlock(scope: !5460, file: !289, line: 107, column: 5)
!5524 = !DILocation(line: 108, column: 29, scope: !5522)
!5525 = !DILocation(line: 108, column: 39, scope: !5522)
!5526 = !DILocation(line: 108, column: 46, scope: !5522)
!5527 = !DILocation(line: 108, column: 51, scope: !5522)
!5528 = !DILocation(line: 108, column: 11, scope: !5522)
!5529 = !DILocation(line: 108, column: 11, scope: !5523)
!5530 = !DILocation(line: 114, column: 28, scope: !5531)
!5531 = distinct !DILexicalBlock(scope: !5522, file: !289, line: 109, column: 9)
!5532 = !DILocation(line: 114, column: 11, scope: !5531)
!5533 = !DILocation(line: 114, column: 16, scope: !5531)
!5534 = !DILocation(line: 114, column: 26, scope: !5531)
!5535 = !DILocation(line: 115, column: 11, scope: !5531)
!5536 = !DILocation(line: 115, column: 16, scope: !5531)
!5537 = !DILocation(line: 115, column: 25, scope: !5531)
!5538 = !DILocation(line: 116, column: 9, scope: !5531)
!5539 = !DILocation(line: 119, column: 3, scope: !5452)
!5540 = !DILocation(line: 120, column: 1, scope: !5452)
!5541 = distinct !DISubprogram(name: "LCO_hash", scope: !282, file: !282, line: 735, type: !3667, isLocal: true, isDefinition: true, scopeLine: 736, flags: DIFlagPrototyped, isOptimized: false, unit: !281, variables: !48)
!5542 = !DILocalVariable(name: "x", arg: 1, scope: !5541, file: !282, line: 735, type: !436)
!5543 = !DILocation(line: 735, column: 23, scope: !5541)
!5544 = !DILocalVariable(name: "table_size", arg: 2, scope: !5541, file: !282, line: 735, type: !143)
!5545 = !DILocation(line: 735, column: 33, scope: !5541)
!5546 = !DILocalVariable(name: "ax", scope: !5541, file: !282, line: 737, type: !5547)
!5547 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5548, size: 64)
!5548 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5363)
!5549 = !DILocation(line: 737, column: 25, scope: !5541)
!5550 = !DILocation(line: 737, column: 30, scope: !5541)
!5551 = !DILocation(line: 738, column: 22, scope: !5541)
!5552 = !DILocation(line: 738, column: 26, scope: !5541)
!5553 = !DILocation(line: 738, column: 35, scope: !5541)
!5554 = !DILocation(line: 738, column: 33, scope: !5541)
!5555 = !DILocation(line: 738, column: 3, scope: !5541)
!5556 = distinct !DISubprogram(name: "LCO_compare", scope: !282, file: !282, line: 742, type: !3689, isLocal: true, isDefinition: true, scopeLine: 743, flags: DIFlagPrototyped, isOptimized: false, unit: !281, variables: !48)
!5557 = !DILocalVariable(name: "x", arg: 1, scope: !5556, file: !282, line: 742, type: !436)
!5558 = !DILocation(line: 742, column: 26, scope: !5556)
!5559 = !DILocalVariable(name: "y", arg: 2, scope: !5556, file: !282, line: 742, type: !436)
!5560 = !DILocation(line: 742, column: 41, scope: !5556)
!5561 = !DILocalVariable(name: "ax", scope: !5556, file: !282, line: 744, type: !5547)
!5562 = !DILocation(line: 744, column: 25, scope: !5556)
!5563 = !DILocation(line: 744, column: 30, scope: !5556)
!5564 = !DILocalVariable(name: "ay", scope: !5556, file: !282, line: 745, type: !5547)
!5565 = !DILocation(line: 745, column: 25, scope: !5556)
!5566 = !DILocation(line: 745, column: 30, scope: !5556)
!5567 = !DILocation(line: 746, column: 10, scope: !5556)
!5568 = !DILocation(line: 746, column: 14, scope: !5556)
!5569 = !DILocation(line: 746, column: 24, scope: !5556)
!5570 = !DILocation(line: 746, column: 28, scope: !5556)
!5571 = !DILocation(line: 746, column: 21, scope: !5556)
!5572 = !DILocation(line: 746, column: 3, scope: !5556)
!5573 = distinct !DISubprogram(name: "leaf_optimization_applies", scope: !282, file: !282, line: 684, type: !1645, isLocal: true, isDefinition: true, scopeLine: 685, flags: DIFlagPrototyped, isOptimized: false, unit: !281, variables: !48)
!5574 = !DILocalVariable(name: "dir_fd", arg: 1, scope: !5573, file: !282, line: 684, type: !46)
!5575 = !DILocation(line: 684, column: 32, scope: !5573)
!5576 = !DILocalVariable(name: "fs_buf", scope: !5573, file: !282, line: 686, type: !5577)
!5577 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "statfs", file: !5578, line: 24, size: 960, elements: !5579)
!5578 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/statfs.h", directory: "/home/ma481/Downloads/Chisel/chisel-bench/benchmark/rm-8.4/original/obj-llvm/lib")
!5579 = !{!5580, !5582, !5583, !5585, !5586, !5587, !5589, !5590, !5598, !5599, !5600, !5601}
!5580 = !DIDerivedType(tag: DW_TAG_member, name: "f_type", scope: !5577, file: !5578, line: 26, baseType: !5581, size: 64)
!5581 = !DIDerivedType(tag: DW_TAG_typedef, name: "__fsword_t", file: !321, line: 179, baseType: !306)
!5582 = !DIDerivedType(tag: DW_TAG_member, name: "f_bsize", scope: !5577, file: !5578, line: 27, baseType: !5581, size: 64, offset: 64)
!5583 = !DIDerivedType(tag: DW_TAG_member, name: "f_blocks", scope: !5577, file: !5578, line: 29, baseType: !5584, size: 64, offset: 128)
!5584 = !DIDerivedType(tag: DW_TAG_typedef, name: "__fsblkcnt_t", file: !321, line: 171, baseType: !57)
!5585 = !DIDerivedType(tag: DW_TAG_member, name: "f_bfree", scope: !5577, file: !5578, line: 30, baseType: !5584, size: 64, offset: 192)
!5586 = !DIDerivedType(tag: DW_TAG_member, name: "f_bavail", scope: !5577, file: !5578, line: 31, baseType: !5584, size: 64, offset: 256)
!5587 = !DIDerivedType(tag: DW_TAG_member, name: "f_files", scope: !5577, file: !5578, line: 32, baseType: !5588, size: 64, offset: 320)
!5588 = !DIDerivedType(tag: DW_TAG_typedef, name: "__fsfilcnt_t", file: !321, line: 175, baseType: !57)
!5589 = !DIDerivedType(tag: DW_TAG_member, name: "f_ffree", scope: !5577, file: !5578, line: 33, baseType: !5588, size: 64, offset: 384)
!5590 = !DIDerivedType(tag: DW_TAG_member, name: "f_fsid", scope: !5577, file: !5578, line: 41, baseType: !5591, size: 64, offset: 448)
!5591 = !DIDerivedType(tag: DW_TAG_typedef, name: "__fsid_t", file: !321, line: 143, baseType: !5592)
!5592 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !321, line: 143, size: 64, elements: !5593)
!5593 = !{!5594}
!5594 = !DIDerivedType(tag: DW_TAG_member, name: "__val", scope: !5592, file: !321, line: 143, baseType: !5595, size: 64)
!5595 = !DICompositeType(tag: DW_TAG_array_type, baseType: !46, size: 64, elements: !5596)
!5596 = !{!5597}
!5597 = !DISubrange(count: 2)
!5598 = !DIDerivedType(tag: DW_TAG_member, name: "f_namelen", scope: !5577, file: !5578, line: 42, baseType: !5581, size: 64, offset: 512)
!5599 = !DIDerivedType(tag: DW_TAG_member, name: "f_frsize", scope: !5577, file: !5578, line: 43, baseType: !5581, size: 64, offset: 576)
!5600 = !DIDerivedType(tag: DW_TAG_member, name: "f_flags", scope: !5577, file: !5578, line: 44, baseType: !5581, size: 64, offset: 640)
!5601 = !DIDerivedType(tag: DW_TAG_member, name: "f_spare", scope: !5577, file: !5578, line: 45, baseType: !5602, size: 256, offset: 704)
!5602 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5581, size: 256, elements: !416)
!5603 = !DILocation(line: 686, column: 17, scope: !5573)
!5604 = !DILocation(line: 689, column: 16, scope: !5605)
!5605 = distinct !DILexicalBlock(scope: !5573, file: !282, line: 689, column: 7)
!5606 = !DILocation(line: 689, column: 7, scope: !5605)
!5607 = !DILocation(line: 689, column: 33, scope: !5605)
!5608 = !DILocation(line: 689, column: 7, scope: !5573)
!5609 = !DILocation(line: 690, column: 5, scope: !5605)
!5610 = !DILocation(line: 695, column: 18, scope: !5573)
!5611 = !DILocation(line: 695, column: 3, scope: !5573)
!5612 = !DILocation(line: 700, column: 7, scope: !5613)
!5613 = distinct !DILexicalBlock(scope: !5573, file: !282, line: 696, column: 5)
!5614 = !DILocation(line: 709, column: 7, scope: !5613)
!5615 = !DILocation(line: 711, column: 1, scope: !5573)
!5616 = distinct !DISubprogram(name: "opendirat", scope: !282, file: !282, line: 300, type: !5617, isLocal: true, isDefinition: true, scopeLine: 301, flags: DIFlagPrototyped, isOptimized: false, unit: !281, variables: !48)
!5617 = !DISubroutineType(types: !5618)
!5618 = !{!4695, !46, !35}
!5619 = !DILocalVariable(name: "fd", arg: 1, scope: !5616, file: !282, line: 300, type: !46)
!5620 = !DILocation(line: 300, column: 16, scope: !5616)
!5621 = !DILocalVariable(name: "dir", arg: 2, scope: !5616, file: !282, line: 300, type: !35)
!5622 = !DILocation(line: 300, column: 32, scope: !5616)
!5623 = !DILocalVariable(name: "new_fd", scope: !5616, file: !282, line: 302, type: !46)
!5624 = !DILocation(line: 302, column: 7, scope: !5616)
!5625 = !DILocation(line: 302, column: 24, scope: !5616)
!5626 = !DILocation(line: 302, column: 28, scope: !5616)
!5627 = !DILocation(line: 302, column: 16, scope: !5616)
!5628 = !DILocalVariable(name: "dirp", scope: !5616, file: !282, line: 304, type: !4695)
!5629 = !DILocation(line: 304, column: 8, scope: !5616)
!5630 = !DILocation(line: 306, column: 7, scope: !5631)
!5631 = distinct !DILexicalBlock(scope: !5616, file: !282, line: 306, column: 7)
!5632 = !DILocation(line: 306, column: 14, scope: !5631)
!5633 = !DILocation(line: 306, column: 7, scope: !5616)
!5634 = !DILocation(line: 307, column: 5, scope: !5631)
!5635 = !DILocation(line: 308, column: 21, scope: !5616)
!5636 = !DILocation(line: 308, column: 3, scope: !5616)
!5637 = !DILocation(line: 309, column: 21, scope: !5616)
!5638 = !DILocation(line: 309, column: 10, scope: !5616)
!5639 = !DILocation(line: 309, column: 8, scope: !5616)
!5640 = !DILocation(line: 310, column: 7, scope: !5641)
!5641 = distinct !DILexicalBlock(scope: !5616, file: !282, line: 310, column: 7)
!5642 = !DILocation(line: 310, column: 12, scope: !5641)
!5643 = !DILocation(line: 310, column: 7, scope: !5616)
!5644 = !DILocalVariable(name: "saved_errno", scope: !5645, file: !282, line: 312, type: !46)
!5645 = distinct !DILexicalBlock(scope: !5641, file: !282, line: 311, column: 5)
!5646 = !DILocation(line: 312, column: 11, scope: !5645)
!5647 = !DILocation(line: 312, column: 25, scope: !5645)
!5648 = !DILocation(line: 313, column: 14, scope: !5645)
!5649 = !DILocation(line: 313, column: 7, scope: !5645)
!5650 = !DILocation(line: 314, column: 15, scope: !5645)
!5651 = !DILocation(line: 314, column: 7, scope: !5645)
!5652 = !DILocation(line: 314, column: 13, scope: !5645)
!5653 = !DILocation(line: 315, column: 5, scope: !5645)
!5654 = !DILocation(line: 316, column: 10, scope: !5616)
!5655 = !DILocation(line: 316, column: 3, scope: !5616)
!5656 = !DILocation(line: 317, column: 1, scope: !5616)
!5657 = distinct !DISubprogram(name: "set_stat_type", scope: !282, file: !282, line: 1171, type: !5658, isLocal: true, isDefinition: true, scopeLine: 1172, flags: DIFlagPrototyped, isOptimized: false, unit: !281, variables: !48)
!5658 = !DISubroutineType(types: !5659)
!5659 = !{null, !3360, !199}
!5660 = !DILocalVariable(name: "st", arg: 1, scope: !5657, file: !282, line: 1171, type: !3360)
!5661 = !DILocation(line: 1171, column: 29, scope: !5657)
!5662 = !DILocalVariable(name: "dtype", arg: 2, scope: !5657, file: !282, line: 1171, type: !199)
!5663 = !DILocation(line: 1171, column: 46, scope: !5657)
!5664 = !DILocalVariable(name: "type", scope: !5657, file: !282, line: 1173, type: !5665)
!5665 = !DIDerivedType(tag: DW_TAG_typedef, name: "mode_t", file: !319, line: 70, baseType: !336)
!5666 = !DILocation(line: 1173, column: 10, scope: !5657)
!5667 = !DILocation(line: 1174, column: 11, scope: !5657)
!5668 = !DILocation(line: 1174, column: 3, scope: !5657)
!5669 = !DILocation(line: 1177, column: 12, scope: !5670)
!5670 = distinct !DILexicalBlock(scope: !5657, file: !282, line: 1175, column: 5)
!5671 = !DILocation(line: 1178, column: 7, scope: !5670)
!5672 = !DILocation(line: 1180, column: 12, scope: !5670)
!5673 = !DILocation(line: 1181, column: 7, scope: !5670)
!5674 = !DILocation(line: 1183, column: 12, scope: !5670)
!5675 = !DILocation(line: 1184, column: 7, scope: !5670)
!5676 = !DILocation(line: 1186, column: 12, scope: !5670)
!5677 = !DILocation(line: 1187, column: 7, scope: !5670)
!5678 = !DILocation(line: 1189, column: 12, scope: !5670)
!5679 = !DILocation(line: 1190, column: 7, scope: !5670)
!5680 = !DILocation(line: 1192, column: 12, scope: !5670)
!5681 = !DILocation(line: 1193, column: 7, scope: !5670)
!5682 = !DILocation(line: 1195, column: 12, scope: !5670)
!5683 = !DILocation(line: 1196, column: 7, scope: !5670)
!5684 = !DILocation(line: 1198, column: 12, scope: !5670)
!5685 = !DILocation(line: 1199, column: 5, scope: !5670)
!5686 = !DILocation(line: 1200, column: 17, scope: !5657)
!5687 = !DILocation(line: 1200, column: 3, scope: !5657)
!5688 = !DILocation(line: 1200, column: 7, scope: !5657)
!5689 = !DILocation(line: 1200, column: 15, scope: !5657)
!5690 = !DILocation(line: 1201, column: 1, scope: !5657)
!5691 = distinct !DISubprogram(name: "fts_padjust", scope: !282, file: !282, line: 1910, type: !4456, isLocal: true, isDefinition: true, scopeLine: 1911, flags: DIFlagPrototyped, isOptimized: false, unit: !281, variables: !48)
!5692 = !DILocalVariable(name: "sp", arg: 1, scope: !5691, file: !282, line: 1910, type: !293)
!5693 = !DILocation(line: 1910, column: 19, scope: !5691)
!5694 = !DILocalVariable(name: "head", arg: 2, scope: !5691, file: !282, line: 1910, type: !2904)
!5695 = !DILocation(line: 1910, column: 31, scope: !5691)
!5696 = !DILocalVariable(name: "p", scope: !5691, file: !282, line: 1912, type: !2904)
!5697 = !DILocation(line: 1912, column: 17, scope: !5691)
!5698 = !DILocalVariable(name: "addr", scope: !5691, file: !282, line: 1913, type: !38)
!5699 = !DILocation(line: 1913, column: 15, scope: !5691)
!5700 = !DILocation(line: 1913, column: 22, scope: !5691)
!5701 = !DILocation(line: 1913, column: 26, scope: !5691)
!5702 = !DILocation(line: 1923, column: 18, scope: !5703)
!5703 = distinct !DILexicalBlock(scope: !5691, file: !282, line: 1923, column: 9)
!5704 = !DILocation(line: 1923, column: 22, scope: !5703)
!5705 = !DILocation(line: 1923, column: 16, scope: !5703)
!5706 = !DILocation(line: 1923, column: 14, scope: !5703)
!5707 = !DILocation(line: 1923, column: 33, scope: !5708)
!5708 = distinct !DILexicalBlock(scope: !5703, file: !282, line: 1923, column: 9)
!5709 = !DILocation(line: 1923, column: 9, scope: !5703)
!5710 = !DILocation(line: 1924, column: 17, scope: !5708)
!5711 = distinct !{!5711, !5710, !5710}
!5712 = !DILocation(line: 1924, column: 17, scope: !5713)
!5713 = distinct !DILexicalBlock(scope: !5714, file: !282, line: 1924, column: 17)
!5714 = distinct !DILexicalBlock(scope: !5708, file: !282, line: 1924, column: 17)
!5715 = !DILocation(line: 1924, column: 17, scope: !5714)
!5716 = !DILocation(line: 1924, column: 17, scope: !5717)
!5717 = distinct !DILexicalBlock(scope: !5713, file: !282, line: 1924, column: 17)
!5718 = !DILocation(line: 1923, column: 40, scope: !5708)
!5719 = !DILocation(line: 1923, column: 43, scope: !5708)
!5720 = !DILocation(line: 1923, column: 38, scope: !5708)
!5721 = !DILocation(line: 1923, column: 9, scope: !5708)
!5722 = distinct !{!5722, !5709, !5723}
!5723 = !DILocation(line: 1924, column: 17, scope: !5703)
!5724 = !DILocation(line: 1927, column: 18, scope: !5725)
!5725 = distinct !DILexicalBlock(scope: !5691, file: !282, line: 1927, column: 9)
!5726 = !DILocation(line: 1927, column: 16, scope: !5725)
!5727 = !DILocation(line: 1927, column: 14, scope: !5725)
!5728 = !DILocation(line: 1927, column: 24, scope: !5729)
!5729 = distinct !DILexicalBlock(scope: !5725, file: !282, line: 1927, column: 9)
!5730 = !DILocation(line: 1927, column: 27, scope: !5729)
!5731 = !DILocation(line: 1927, column: 37, scope: !5729)
!5732 = !DILocation(line: 1927, column: 9, scope: !5725)
!5733 = !DILocation(line: 1928, column: 17, scope: !5734)
!5734 = distinct !DILexicalBlock(scope: !5729, file: !282, line: 1927, column: 56)
!5735 = distinct !{!5735, !5733, !5733}
!5736 = !DILocation(line: 1928, column: 17, scope: !5737)
!5737 = distinct !DILexicalBlock(scope: !5738, file: !282, line: 1928, column: 17)
!5738 = distinct !DILexicalBlock(scope: !5734, file: !282, line: 1928, column: 17)
!5739 = !DILocation(line: 1928, column: 17, scope: !5738)
!5740 = !DILocation(line: 1928, column: 17, scope: !5741)
!5741 = distinct !DILexicalBlock(scope: !5737, file: !282, line: 1928, column: 17)
!5742 = !DILocation(line: 1929, column: 21, scope: !5734)
!5743 = !DILocation(line: 1929, column: 24, scope: !5734)
!5744 = !DILocation(line: 1929, column: 35, scope: !5734)
!5745 = !DILocation(line: 1929, column: 38, scope: !5734)
!5746 = !DILocation(line: 1929, column: 49, scope: !5734)
!5747 = !DILocation(line: 1929, column: 52, scope: !5734)
!5748 = !DILocation(line: 1929, column: 19, scope: !5734)
!5749 = !DILocation(line: 1927, column: 9, scope: !5729)
!5750 = distinct !{!5750, !5732, !5751}
!5751 = !DILocation(line: 1930, column: 9, scope: !5725)
!5752 = !DILocation(line: 1931, column: 1, scope: !5691)
!5753 = distinct !DISubprogram(name: "dirent_inode_sort_may_be_useful", scope: !282, file: !282, line: 652, type: !1645, isLocal: true, isDefinition: true, scopeLine: 653, flags: DIFlagPrototyped, isOptimized: false, unit: !281, variables: !48)
!5754 = !DILocalVariable(name: "dir_fd", arg: 1, scope: !5753, file: !282, line: 652, type: !46)
!5755 = !DILocation(line: 652, column: 38, scope: !5753)
!5756 = !DILocalVariable(name: "fs_buf", scope: !5753, file: !282, line: 659, type: !5577)
!5757 = !DILocation(line: 659, column: 17, scope: !5753)
!5758 = !DILocation(line: 662, column: 16, scope: !5759)
!5759 = distinct !DILexicalBlock(scope: !5753, file: !282, line: 662, column: 7)
!5760 = !DILocation(line: 662, column: 7, scope: !5759)
!5761 = !DILocation(line: 662, column: 33, scope: !5759)
!5762 = !DILocation(line: 662, column: 7, scope: !5753)
!5763 = !DILocation(line: 663, column: 5, scope: !5759)
!5764 = !DILocation(line: 667, column: 18, scope: !5753)
!5765 = !DILocation(line: 667, column: 3, scope: !5753)
!5766 = !DILocation(line: 673, column: 7, scope: !5767)
!5767 = distinct !DILexicalBlock(scope: !5753, file: !282, line: 668, column: 5)
!5768 = !DILocation(line: 676, column: 7, scope: !5767)
!5769 = !DILocation(line: 678, column: 1, scope: !5753)
!5770 = distinct !DISubprogram(name: "fts_compare_ino", scope: !282, file: !282, line: 1162, type: !379, isLocal: true, isDefinition: true, scopeLine: 1163, flags: DIFlagPrototyped, isOptimized: false, unit: !281, variables: !48)
!5771 = !DILocalVariable(name: "a", arg: 1, scope: !5770, file: !282, line: 1162, type: !381)
!5772 = !DILocation(line: 1162, column: 41, scope: !5770)
!5773 = !DILocalVariable(name: "b", arg: 2, scope: !5770, file: !282, line: 1162, type: !381)
!5774 = !DILocation(line: 1162, column: 67, scope: !5770)
!5775 = !DILocation(line: 1164, column: 11, scope: !5770)
!5776 = !DILocation(line: 1164, column: 17, scope: !5770)
!5777 = !DILocation(line: 1164, column: 28, scope: !5770)
!5778 = !DILocation(line: 1164, column: 37, scope: !5770)
!5779 = !DILocation(line: 1164, column: 43, scope: !5770)
!5780 = !DILocation(line: 1164, column: 54, scope: !5770)
!5781 = !DILocation(line: 1164, column: 35, scope: !5770)
!5782 = !DILocation(line: 1165, column: 13, scope: !5770)
!5783 = !DILocation(line: 1165, column: 19, scope: !5770)
!5784 = !DILocation(line: 1165, column: 30, scope: !5770)
!5785 = !DILocation(line: 1165, column: 39, scope: !5770)
!5786 = !DILocation(line: 1165, column: 45, scope: !5770)
!5787 = !DILocation(line: 1165, column: 56, scope: !5770)
!5788 = !DILocation(line: 1165, column: 37, scope: !5770)
!5789 = !DILocation(line: 1164, column: 3, scope: !5770)
!5790 = distinct !DISubprogram(name: "fts_set", scope: !282, file: !282, line: 1067, type: !5791, isLocal: false, isDefinition: true, scopeLine: 1068, flags: DIFlagPrototyped, isOptimized: false, unit: !281, variables: !48)
!5791 = !DISubroutineType(types: !5792)
!5792 = !{!46, !293, !2904, !46}
!5793 = !DILocalVariable(name: "sp", arg: 1, scope: !5790, file: !282, line: 1067, type: !293)
!5794 = !DILocation(line: 1067, column: 14, scope: !5790)
!5795 = !DILocalVariable(name: "p", arg: 2, scope: !5790, file: !282, line: 1067, type: !2904)
!5796 = !DILocation(line: 1067, column: 37, scope: !5790)
!5797 = !DILocalVariable(name: "instr", arg: 3, scope: !5790, file: !282, line: 1067, type: !46)
!5798 = !DILocation(line: 1067, column: 44, scope: !5790)
!5799 = !DILocation(line: 1069, column: 13, scope: !5800)
!5800 = distinct !DILexicalBlock(scope: !5790, file: !282, line: 1069, column: 13)
!5801 = !DILocation(line: 1069, column: 19, scope: !5800)
!5802 = !DILocation(line: 1069, column: 24, scope: !5800)
!5803 = !DILocation(line: 1069, column: 27, scope: !5800)
!5804 = !DILocation(line: 1069, column: 33, scope: !5800)
!5805 = !DILocation(line: 1069, column: 46, scope: !5800)
!5806 = !DILocation(line: 1069, column: 49, scope: !5800)
!5807 = !DILocation(line: 1069, column: 55, scope: !5800)
!5808 = !DILocation(line: 1069, column: 69, scope: !5800)
!5809 = !DILocation(line: 1070, column: 13, scope: !5800)
!5810 = !DILocation(line: 1070, column: 19, scope: !5800)
!5811 = !DILocation(line: 1070, column: 34, scope: !5800)
!5812 = !DILocation(line: 1070, column: 37, scope: !5800)
!5813 = !DILocation(line: 1070, column: 43, scope: !5800)
!5814 = !DILocation(line: 1069, column: 13, scope: !5790)
!5815 = !DILocation(line: 1071, column: 17, scope: !5816)
!5816 = distinct !DILexicalBlock(scope: !5800, file: !282, line: 1070, column: 56)
!5817 = !DILocation(line: 1072, column: 17, scope: !5816)
!5818 = !DILocation(line: 1074, column: 24, scope: !5790)
!5819 = !DILocation(line: 1074, column: 9, scope: !5790)
!5820 = !DILocation(line: 1074, column: 12, scope: !5790)
!5821 = !DILocation(line: 1074, column: 22, scope: !5790)
!5822 = !DILocation(line: 1075, column: 9, scope: !5790)
!5823 = !DILocation(line: 1076, column: 1, scope: !5790)
!5824 = distinct !DISubprogram(name: "fts_children", scope: !282, file: !282, line: 1079, type: !4667, isLocal: false, isDefinition: true, scopeLine: 1080, flags: DIFlagPrototyped, isOptimized: false, unit: !281, variables: !48)
!5825 = !DILocalVariable(name: "sp", arg: 1, scope: !5824, file: !282, line: 1079, type: !293)
!5826 = !DILocation(line: 1079, column: 29, scope: !5824)
!5827 = !DILocalVariable(name: "instr", arg: 2, scope: !5824, file: !282, line: 1079, type: !46)
!5828 = !DILocation(line: 1079, column: 37, scope: !5824)
!5829 = !DILocalVariable(name: "p", scope: !5824, file: !282, line: 1081, type: !2904)
!5830 = !DILocation(line: 1081, column: 26, scope: !5824)
!5831 = !DILocalVariable(name: "fd", scope: !5824, file: !282, line: 1082, type: !46)
!5832 = !DILocation(line: 1082, column: 13, scope: !5824)
!5833 = !DILocation(line: 1084, column: 13, scope: !5834)
!5834 = distinct !DILexicalBlock(scope: !5824, file: !282, line: 1084, column: 13)
!5835 = !DILocation(line: 1084, column: 19, scope: !5834)
!5836 = !DILocation(line: 1084, column: 24, scope: !5834)
!5837 = !DILocation(line: 1084, column: 27, scope: !5834)
!5838 = !DILocation(line: 1084, column: 33, scope: !5834)
!5839 = !DILocation(line: 1084, column: 13, scope: !5824)
!5840 = !DILocation(line: 1085, column: 17, scope: !5841)
!5841 = distinct !DILexicalBlock(scope: !5834, file: !282, line: 1084, column: 50)
!5842 = !DILocation(line: 1086, column: 17, scope: !5841)
!5843 = !DILocation(line: 1090, column: 13, scope: !5824)
!5844 = !DILocation(line: 1090, column: 17, scope: !5824)
!5845 = !DILocation(line: 1090, column: 11, scope: !5824)
!5846 = !DILocation(line: 1096, column: 9, scope: !5824)
!5847 = !DILocation(line: 1099, column: 13, scope: !5848)
!5848 = distinct !DILexicalBlock(scope: !5824, file: !282, line: 1099, column: 13)
!5849 = !DILocation(line: 1099, column: 13, scope: !5824)
!5850 = !DILocation(line: 1100, column: 17, scope: !5848)
!5851 = !DILocation(line: 1103, column: 13, scope: !5852)
!5852 = distinct !DILexicalBlock(scope: !5824, file: !282, line: 1103, column: 13)
!5853 = !DILocation(line: 1103, column: 16, scope: !5852)
!5854 = !DILocation(line: 1103, column: 25, scope: !5852)
!5855 = !DILocation(line: 1103, column: 13, scope: !5824)
!5856 = !DILocation(line: 1104, column: 25, scope: !5852)
!5857 = !DILocation(line: 1104, column: 28, scope: !5852)
!5858 = !DILocation(line: 1104, column: 17, scope: !5852)
!5859 = !DILocation(line: 1111, column: 13, scope: !5860)
!5860 = distinct !DILexicalBlock(scope: !5824, file: !282, line: 1111, column: 13)
!5861 = !DILocation(line: 1111, column: 16, scope: !5860)
!5862 = !DILocation(line: 1111, column: 25, scope: !5860)
!5863 = !DILocation(line: 1111, column: 13, scope: !5824)
!5864 = !DILocation(line: 1112, column: 17, scope: !5860)
!5865 = !DILocation(line: 1115, column: 13, scope: !5866)
!5866 = distinct !DILexicalBlock(scope: !5824, file: !282, line: 1115, column: 13)
!5867 = !DILocation(line: 1115, column: 17, scope: !5866)
!5868 = !DILocation(line: 1115, column: 27, scope: !5866)
!5869 = !DILocation(line: 1115, column: 13, scope: !5824)
!5870 = !DILocation(line: 1116, column: 27, scope: !5866)
!5871 = !DILocation(line: 1116, column: 31, scope: !5866)
!5872 = !DILocation(line: 1116, column: 17, scope: !5866)
!5873 = !DILocation(line: 1118, column: 13, scope: !5874)
!5874 = distinct !DILexicalBlock(scope: !5824, file: !282, line: 1118, column: 13)
!5875 = !DILocation(line: 1118, column: 19, scope: !5874)
!5876 = !DILocation(line: 1118, column: 13, scope: !5824)
!5877 = !DILocation(line: 1119, column: 17, scope: !5878)
!5878 = distinct !DILexicalBlock(scope: !5874, file: !282, line: 1118, column: 36)
!5879 = !DILocation(line: 1120, column: 23, scope: !5878)
!5880 = !DILocation(line: 1121, column: 9, scope: !5878)
!5881 = !DILocation(line: 1122, column: 23, scope: !5874)
!5882 = !DILocation(line: 1131, column: 13, scope: !5883)
!5883 = distinct !DILexicalBlock(scope: !5824, file: !282, line: 1131, column: 13)
!5884 = !DILocation(line: 1131, column: 16, scope: !5883)
!5885 = !DILocation(line: 1131, column: 26, scope: !5883)
!5886 = !DILocation(line: 1131, column: 43, scope: !5883)
!5887 = !DILocation(line: 1131, column: 46, scope: !5883)
!5888 = !DILocation(line: 1131, column: 49, scope: !5883)
!5889 = !DILocation(line: 1131, column: 64, scope: !5883)
!5890 = !DILocation(line: 1131, column: 71, scope: !5883)
!5891 = !DILocation(line: 1132, column: 13, scope: !5883)
!5892 = !DILocation(line: 1131, column: 13, scope: !5824)
!5893 = !DILocation(line: 1133, column: 51, scope: !5883)
!5894 = !DILocation(line: 1133, column: 55, scope: !5883)
!5895 = !DILocation(line: 1133, column: 41, scope: !5883)
!5896 = !DILocation(line: 1133, column: 25, scope: !5883)
!5897 = !DILocation(line: 1133, column: 29, scope: !5883)
!5898 = !DILocation(line: 1133, column: 39, scope: !5883)
!5899 = !DILocation(line: 1133, column: 17, scope: !5883)
!5900 = !DILocation(line: 1135, column: 28, scope: !5901)
!5901 = distinct !DILexicalBlock(scope: !5824, file: !282, line: 1135, column: 13)
!5902 = !DILocation(line: 1135, column: 19, scope: !5901)
!5903 = !DILocation(line: 1135, column: 17, scope: !5901)
!5904 = !DILocation(line: 1135, column: 38, scope: !5901)
!5905 = !DILocation(line: 1135, column: 13, scope: !5824)
!5906 = !DILocation(line: 1136, column: 25, scope: !5901)
!5907 = !DILocation(line: 1136, column: 29, scope: !5901)
!5908 = !DILocation(line: 1136, column: 39, scope: !5901)
!5909 = !DILocation(line: 1136, column: 17, scope: !5901)
!5910 = !DILocation(line: 1137, column: 35, scope: !5824)
!5911 = !DILocation(line: 1137, column: 39, scope: !5824)
!5912 = !DILocation(line: 1137, column: 25, scope: !5824)
!5913 = !DILocation(line: 1137, column: 9, scope: !5824)
!5914 = !DILocation(line: 1137, column: 13, scope: !5824)
!5915 = !DILocation(line: 1137, column: 23, scope: !5824)
!5916 = !DILocation(line: 1138, column: 13, scope: !5917)
!5917 = distinct !DILexicalBlock(scope: !5824, file: !282, line: 1138, column: 13)
!5918 = !DILocation(line: 1138, column: 13, scope: !5824)
!5919 = !DILocation(line: 1140, column: 29, scope: !5920)
!5920 = distinct !DILexicalBlock(scope: !5917, file: !282, line: 1139, column: 11)
!5921 = !DILocation(line: 1140, column: 33, scope: !5920)
!5922 = !DILocation(line: 1140, column: 13, scope: !5920)
!5923 = !DILocation(line: 1141, column: 11, scope: !5920)
!5924 = !DILocation(line: 1144, column: 24, scope: !5925)
!5925 = distinct !DILexicalBlock(scope: !5926, file: !282, line: 1144, column: 17)
!5926 = distinct !DILexicalBlock(scope: !5917, file: !282, line: 1143, column: 11)
!5927 = !DILocation(line: 1144, column: 17, scope: !5925)
!5928 = !DILocation(line: 1144, column: 17, scope: !5926)
!5929 = !DILocalVariable(name: "saved_errno", scope: !5930, file: !282, line: 1146, type: !46)
!5930 = distinct !DILexicalBlock(scope: !5925, file: !282, line: 1145, column: 15)
!5931 = !DILocation(line: 1146, column: 21, scope: !5930)
!5932 = !DILocation(line: 1146, column: 35, scope: !5930)
!5933 = !DILocation(line: 1147, column: 24, scope: !5930)
!5934 = !DILocation(line: 1147, column: 17, scope: !5930)
!5935 = !DILocation(line: 1148, column: 17, scope: !5930)
!5936 = !DILocation(line: 1149, column: 17, scope: !5930)
!5937 = !DILocation(line: 1151, column: 20, scope: !5926)
!5938 = !DILocation(line: 1151, column: 13, scope: !5926)
!5939 = !DILocation(line: 1153, column: 17, scope: !5824)
!5940 = !DILocation(line: 1153, column: 21, scope: !5824)
!5941 = !DILocation(line: 1153, column: 9, scope: !5824)
!5942 = !DILocation(line: 1154, column: 1, scope: !5824)
!5943 = distinct !DISubprogram(name: "hash_get_n_buckets", scope: !141, file: !141, line: 150, type: !5944, isLocal: false, isDefinition: true, scopeLine: 151, flags: DIFlagPrototyped, isOptimized: false, unit: !140, variables: !48)
!5944 = !DISubroutineType(types: !5945)
!5945 = !{!143, !5946}
!5946 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5947, size: 64)
!5947 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5948)
!5948 = !DIDerivedType(tag: DW_TAG_typedef, name: "Hash_table", file: !148, line: 62, baseType: !5949)
!5949 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hash_table", file: !141, line: 52, size: 640, elements: !5950)
!5950 = !{!5951, !5957, !5960, !5961, !5962, !5963, !5965, !5968, !5971, !5976}
!5951 = !DIDerivedType(tag: DW_TAG_member, name: "bucket", scope: !5949, file: !141, line: 57, baseType: !5952, size: 64)
!5952 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5953, size: 64)
!5953 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hash_entry", file: !141, line: 46, size: 128, elements: !5954)
!5954 = !{!5955, !5956}
!5955 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !5953, file: !141, line: 48, baseType: !39, size: 64)
!5956 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !5953, file: !141, line: 49, baseType: !5952, size: 64, offset: 64)
!5957 = !DIDerivedType(tag: DW_TAG_member, name: "bucket_limit", scope: !5949, file: !141, line: 58, baseType: !5958, size: 64, offset: 64)
!5958 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5959, size: 64)
!5959 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5953)
!5960 = !DIDerivedType(tag: DW_TAG_member, name: "n_buckets", scope: !5949, file: !141, line: 59, baseType: !143, size: 64, offset: 128)
!5961 = !DIDerivedType(tag: DW_TAG_member, name: "n_buckets_used", scope: !5949, file: !141, line: 60, baseType: !143, size: 64, offset: 192)
!5962 = !DIDerivedType(tag: DW_TAG_member, name: "n_entries", scope: !5949, file: !141, line: 61, baseType: !143, size: 64, offset: 256)
!5963 = !DIDerivedType(tag: DW_TAG_member, name: "tuning", scope: !5949, file: !141, line: 64, baseType: !5964, size: 64, offset: 320)
!5964 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !146, size: 64)
!5965 = !DIDerivedType(tag: DW_TAG_member, name: "hasher", scope: !5949, file: !141, line: 71, baseType: !5966, size: 64, offset: 384)
!5966 = !DIDerivedType(tag: DW_TAG_typedef, name: "Hash_hasher", file: !148, line: 41, baseType: !5967)
!5967 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3667, size: 64)
!5968 = !DIDerivedType(tag: DW_TAG_member, name: "comparator", scope: !5949, file: !141, line: 72, baseType: !5969, size: 64, offset: 448)
!5969 = !DIDerivedType(tag: DW_TAG_typedef, name: "Hash_comparator", file: !148, line: 42, baseType: !5970)
!5970 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3689, size: 64)
!5971 = !DIDerivedType(tag: DW_TAG_member, name: "data_freer", scope: !5949, file: !141, line: 73, baseType: !5972, size: 64, offset: 512)
!5972 = !DIDerivedType(tag: DW_TAG_typedef, name: "Hash_data_freer", file: !148, line: 43, baseType: !5973)
!5973 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5974, size: 64)
!5974 = !DISubroutineType(types: !5975)
!5975 = !{null, !39}
!5976 = !DIDerivedType(tag: DW_TAG_member, name: "free_entry_list", scope: !5949, file: !141, line: 76, baseType: !5952, size: 64, offset: 576)
!5977 = !DILocalVariable(name: "table", arg: 1, scope: !5943, file: !141, line: 150, type: !5946)
!5978 = !DILocation(line: 150, column: 39, scope: !5943)
!5979 = !DILocation(line: 152, column: 10, scope: !5943)
!5980 = !DILocation(line: 152, column: 17, scope: !5943)
!5981 = !DILocation(line: 152, column: 3, scope: !5943)
!5982 = distinct !DISubprogram(name: "hash_get_n_buckets_used", scope: !141, file: !141, line: 158, type: !5944, isLocal: false, isDefinition: true, scopeLine: 159, flags: DIFlagPrototyped, isOptimized: false, unit: !140, variables: !48)
!5983 = !DILocalVariable(name: "table", arg: 1, scope: !5982, file: !141, line: 158, type: !5946)
!5984 = !DILocation(line: 158, column: 44, scope: !5982)
!5985 = !DILocation(line: 160, column: 10, scope: !5982)
!5986 = !DILocation(line: 160, column: 17, scope: !5982)
!5987 = !DILocation(line: 160, column: 3, scope: !5982)
!5988 = distinct !DISubprogram(name: "hash_get_n_entries", scope: !141, file: !141, line: 166, type: !5944, isLocal: false, isDefinition: true, scopeLine: 167, flags: DIFlagPrototyped, isOptimized: false, unit: !140, variables: !48)
!5989 = !DILocalVariable(name: "table", arg: 1, scope: !5988, file: !141, line: 166, type: !5946)
!5990 = !DILocation(line: 166, column: 39, scope: !5988)
!5991 = !DILocation(line: 168, column: 10, scope: !5988)
!5992 = !DILocation(line: 168, column: 17, scope: !5988)
!5993 = !DILocation(line: 168, column: 3, scope: !5988)
!5994 = distinct !DISubprogram(name: "hash_get_max_bucket_length", scope: !141, file: !141, line: 174, type: !5944, isLocal: false, isDefinition: true, scopeLine: 175, flags: DIFlagPrototyped, isOptimized: false, unit: !140, variables: !48)
!5995 = !DILocalVariable(name: "table", arg: 1, scope: !5994, file: !141, line: 174, type: !5946)
!5996 = !DILocation(line: 174, column: 47, scope: !5994)
!5997 = !DILocalVariable(name: "bucket", scope: !5994, file: !141, line: 176, type: !5958)
!5998 = !DILocation(line: 176, column: 28, scope: !5994)
!5999 = !DILocalVariable(name: "max_bucket_length", scope: !5994, file: !141, line: 177, type: !143)
!6000 = !DILocation(line: 177, column: 10, scope: !5994)
!6001 = !DILocation(line: 179, column: 17, scope: !6002)
!6002 = distinct !DILexicalBlock(scope: !5994, file: !141, line: 179, column: 3)
!6003 = !DILocation(line: 179, column: 24, scope: !6002)
!6004 = !DILocation(line: 179, column: 15, scope: !6002)
!6005 = !DILocation(line: 179, column: 8, scope: !6002)
!6006 = !DILocation(line: 179, column: 32, scope: !6007)
!6007 = distinct !DILexicalBlock(scope: !6002, file: !141, line: 179, column: 3)
!6008 = !DILocation(line: 179, column: 41, scope: !6007)
!6009 = !DILocation(line: 179, column: 48, scope: !6007)
!6010 = !DILocation(line: 179, column: 39, scope: !6007)
!6011 = !DILocation(line: 179, column: 3, scope: !6002)
!6012 = !DILocation(line: 181, column: 11, scope: !6013)
!6013 = distinct !DILexicalBlock(scope: !6014, file: !141, line: 181, column: 11)
!6014 = distinct !DILexicalBlock(scope: !6007, file: !141, line: 180, column: 5)
!6015 = !DILocation(line: 181, column: 19, scope: !6013)
!6016 = !DILocation(line: 181, column: 11, scope: !6014)
!6017 = !DILocalVariable(name: "cursor", scope: !6018, file: !141, line: 183, type: !5958)
!6018 = distinct !DILexicalBlock(scope: !6013, file: !141, line: 182, column: 9)
!6019 = !DILocation(line: 183, column: 36, scope: !6018)
!6020 = !DILocation(line: 183, column: 45, scope: !6018)
!6021 = !DILocalVariable(name: "bucket_length", scope: !6018, file: !141, line: 184, type: !143)
!6022 = !DILocation(line: 184, column: 18, scope: !6018)
!6023 = !DILocation(line: 186, column: 11, scope: !6018)
!6024 = !DILocation(line: 186, column: 27, scope: !6018)
!6025 = !DILocation(line: 186, column: 35, scope: !6018)
!6026 = !DILocation(line: 186, column: 25, scope: !6018)
!6027 = !DILocation(line: 186, column: 41, scope: !6018)
!6028 = !DILocation(line: 187, column: 26, scope: !6018)
!6029 = distinct !{!6029, !6023, !6028}
!6030 = !DILocation(line: 189, column: 15, scope: !6031)
!6031 = distinct !DILexicalBlock(scope: !6018, file: !141, line: 189, column: 15)
!6032 = !DILocation(line: 189, column: 31, scope: !6031)
!6033 = !DILocation(line: 189, column: 29, scope: !6031)
!6034 = !DILocation(line: 189, column: 15, scope: !6018)
!6035 = !DILocation(line: 190, column: 33, scope: !6031)
!6036 = !DILocation(line: 190, column: 31, scope: !6031)
!6037 = !DILocation(line: 190, column: 13, scope: !6031)
!6038 = !DILocation(line: 191, column: 9, scope: !6018)
!6039 = !DILocation(line: 192, column: 5, scope: !6014)
!6040 = !DILocation(line: 179, column: 68, scope: !6007)
!6041 = !DILocation(line: 179, column: 3, scope: !6007)
!6042 = distinct !{!6042, !6011, !6043}
!6043 = !DILocation(line: 192, column: 5, scope: !6002)
!6044 = !DILocation(line: 194, column: 10, scope: !5994)
!6045 = !DILocation(line: 194, column: 3, scope: !5994)
!6046 = distinct !DISubprogram(name: "hash_table_ok", scope: !141, file: !141, line: 201, type: !6047, isLocal: false, isDefinition: true, scopeLine: 202, flags: DIFlagPrototyped, isOptimized: false, unit: !140, variables: !48)
!6047 = !DISubroutineType(types: !6048)
!6048 = !{!131, !5946}
!6049 = !DILocalVariable(name: "table", arg: 1, scope: !6046, file: !141, line: 201, type: !5946)
!6050 = !DILocation(line: 201, column: 34, scope: !6046)
!6051 = !DILocalVariable(name: "bucket", scope: !6046, file: !141, line: 203, type: !5958)
!6052 = !DILocation(line: 203, column: 28, scope: !6046)
!6053 = !DILocalVariable(name: "n_buckets_used", scope: !6046, file: !141, line: 204, type: !143)
!6054 = !DILocation(line: 204, column: 10, scope: !6046)
!6055 = !DILocalVariable(name: "n_entries", scope: !6046, file: !141, line: 205, type: !143)
!6056 = !DILocation(line: 205, column: 10, scope: !6046)
!6057 = !DILocation(line: 207, column: 17, scope: !6058)
!6058 = distinct !DILexicalBlock(scope: !6046, file: !141, line: 207, column: 3)
!6059 = !DILocation(line: 207, column: 24, scope: !6058)
!6060 = !DILocation(line: 207, column: 15, scope: !6058)
!6061 = !DILocation(line: 207, column: 8, scope: !6058)
!6062 = !DILocation(line: 207, column: 32, scope: !6063)
!6063 = distinct !DILexicalBlock(scope: !6058, file: !141, line: 207, column: 3)
!6064 = !DILocation(line: 207, column: 41, scope: !6063)
!6065 = !DILocation(line: 207, column: 48, scope: !6063)
!6066 = !DILocation(line: 207, column: 39, scope: !6063)
!6067 = !DILocation(line: 207, column: 3, scope: !6058)
!6068 = !DILocation(line: 209, column: 11, scope: !6069)
!6069 = distinct !DILexicalBlock(scope: !6070, file: !141, line: 209, column: 11)
!6070 = distinct !DILexicalBlock(scope: !6063, file: !141, line: 208, column: 5)
!6071 = !DILocation(line: 209, column: 19, scope: !6069)
!6072 = !DILocation(line: 209, column: 11, scope: !6070)
!6073 = !DILocalVariable(name: "cursor", scope: !6074, file: !141, line: 211, type: !5958)
!6074 = distinct !DILexicalBlock(scope: !6069, file: !141, line: 210, column: 9)
!6075 = !DILocation(line: 211, column: 36, scope: !6074)
!6076 = !DILocation(line: 211, column: 45, scope: !6074)
!6077 = !DILocation(line: 214, column: 25, scope: !6074)
!6078 = !DILocation(line: 215, column: 20, scope: !6074)
!6079 = !DILocation(line: 218, column: 11, scope: !6074)
!6080 = !DILocation(line: 218, column: 27, scope: !6074)
!6081 = !DILocation(line: 218, column: 35, scope: !6074)
!6082 = !DILocation(line: 218, column: 25, scope: !6074)
!6083 = !DILocation(line: 218, column: 41, scope: !6074)
!6084 = !DILocation(line: 219, column: 22, scope: !6074)
!6085 = distinct !{!6085, !6079, !6084}
!6086 = !DILocation(line: 220, column: 9, scope: !6074)
!6087 = !DILocation(line: 221, column: 5, scope: !6070)
!6088 = !DILocation(line: 207, column: 68, scope: !6063)
!6089 = !DILocation(line: 207, column: 3, scope: !6063)
!6090 = distinct !{!6090, !6067, !6091}
!6091 = !DILocation(line: 221, column: 5, scope: !6058)
!6092 = !DILocation(line: 223, column: 7, scope: !6093)
!6093 = distinct !DILexicalBlock(scope: !6046, file: !141, line: 223, column: 7)
!6094 = !DILocation(line: 223, column: 25, scope: !6093)
!6095 = !DILocation(line: 223, column: 32, scope: !6093)
!6096 = !DILocation(line: 223, column: 22, scope: !6093)
!6097 = !DILocation(line: 223, column: 47, scope: !6093)
!6098 = !DILocation(line: 223, column: 50, scope: !6093)
!6099 = !DILocation(line: 223, column: 63, scope: !6093)
!6100 = !DILocation(line: 223, column: 70, scope: !6093)
!6101 = !DILocation(line: 223, column: 60, scope: !6093)
!6102 = !DILocation(line: 223, column: 7, scope: !6046)
!6103 = !DILocation(line: 224, column: 5, scope: !6093)
!6104 = !DILocation(line: 226, column: 3, scope: !6046)
!6105 = !DILocation(line: 227, column: 1, scope: !6046)
!6106 = distinct !DISubprogram(name: "hash_print_statistics", scope: !141, file: !141, line: 230, type: !6107, isLocal: false, isDefinition: true, scopeLine: 231, flags: DIFlagPrototyped, isOptimized: false, unit: !140, variables: !48)
!6107 = !DISubroutineType(types: !6108)
!6108 = !{null, !5946, !6109}
!6109 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6110, size: 64)
!6110 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !1925, line: 7, baseType: !6111)
!6111 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !1927, line: 245, size: 1728, elements: !6112)
!6112 = !{!6113, !6114, !6115, !6116, !6117, !6118, !6119, !6120, !6121, !6122, !6123, !6124, !6125, !6133, !6134, !6135, !6136, !6137, !6138, !6139, !6140, !6141, !6142, !6143, !6144, !6145, !6146, !6147, !6148}
!6113 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !6111, file: !1927, line: 246, baseType: !46, size: 32)
!6114 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !6111, file: !1927, line: 251, baseType: !38, size: 64, offset: 64)
!6115 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !6111, file: !1927, line: 252, baseType: !38, size: 64, offset: 128)
!6116 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !6111, file: !1927, line: 253, baseType: !38, size: 64, offset: 192)
!6117 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !6111, file: !1927, line: 254, baseType: !38, size: 64, offset: 256)
!6118 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !6111, file: !1927, line: 255, baseType: !38, size: 64, offset: 320)
!6119 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !6111, file: !1927, line: 256, baseType: !38, size: 64, offset: 384)
!6120 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !6111, file: !1927, line: 257, baseType: !38, size: 64, offset: 448)
!6121 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !6111, file: !1927, line: 258, baseType: !38, size: 64, offset: 512)
!6122 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !6111, file: !1927, line: 260, baseType: !38, size: 64, offset: 576)
!6123 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !6111, file: !1927, line: 261, baseType: !38, size: 64, offset: 640)
!6124 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !6111, file: !1927, line: 262, baseType: !38, size: 64, offset: 704)
!6125 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !6111, file: !1927, line: 264, baseType: !6126, size: 64, offset: 768)
!6126 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6127, size: 64)
!6127 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !1927, line: 160, size: 192, elements: !6128)
!6128 = !{!6129, !6130, !6132}
!6129 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !6127, file: !1927, line: 161, baseType: !6126, size: 64)
!6130 = !DIDerivedType(tag: DW_TAG_member, name: "_sbuf", scope: !6127, file: !1927, line: 162, baseType: !6131, size: 64, offset: 64)
!6131 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6111, size: 64)
!6132 = !DIDerivedType(tag: DW_TAG_member, name: "_pos", scope: !6127, file: !1927, line: 166, baseType: !46, size: 32, offset: 128)
!6133 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !6111, file: !1927, line: 266, baseType: !6131, size: 64, offset: 832)
!6134 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !6111, file: !1927, line: 268, baseType: !46, size: 32, offset: 896)
!6135 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !6111, file: !1927, line: 272, baseType: !46, size: 32, offset: 928)
!6136 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !6111, file: !1927, line: 274, baseType: !344, size: 64, offset: 960)
!6137 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !6111, file: !1927, line: 278, baseType: !183, size: 16, offset: 1024)
!6138 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !6111, file: !1927, line: 279, baseType: !1955, size: 8, offset: 1040)
!6139 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !6111, file: !1927, line: 280, baseType: !366, size: 8, offset: 1048)
!6140 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !6111, file: !1927, line: 284, baseType: !1958, size: 64, offset: 1088)
!6141 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !6111, file: !1927, line: 293, baseType: !1961, size: 64, offset: 1152)
!6142 = !DIDerivedType(tag: DW_TAG_member, name: "__pad1", scope: !6111, file: !1927, line: 301, baseType: !39, size: 64, offset: 1216)
!6143 = !DIDerivedType(tag: DW_TAG_member, name: "__pad2", scope: !6111, file: !1927, line: 302, baseType: !39, size: 64, offset: 1280)
!6144 = !DIDerivedType(tag: DW_TAG_member, name: "__pad3", scope: !6111, file: !1927, line: 303, baseType: !39, size: 64, offset: 1344)
!6145 = !DIDerivedType(tag: DW_TAG_member, name: "__pad4", scope: !6111, file: !1927, line: 304, baseType: !39, size: 64, offset: 1408)
!6146 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !6111, file: !1927, line: 306, baseType: !143, size: 64, offset: 1472)
!6147 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !6111, file: !1927, line: 307, baseType: !46, size: 32, offset: 1536)
!6148 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !6111, file: !1927, line: 309, baseType: !1969, size: 160, offset: 1568)
!6149 = !DILocalVariable(name: "table", arg: 1, scope: !6106, file: !141, line: 230, type: !5946)
!6150 = !DILocation(line: 230, column: 42, scope: !6106)
!6151 = !DILocalVariable(name: "stream", arg: 2, scope: !6106, file: !141, line: 230, type: !6109)
!6152 = !DILocation(line: 230, column: 55, scope: !6106)
!6153 = !DILocalVariable(name: "n_entries", scope: !6106, file: !141, line: 232, type: !143)
!6154 = !DILocation(line: 232, column: 10, scope: !6106)
!6155 = !DILocation(line: 232, column: 42, scope: !6106)
!6156 = !DILocation(line: 232, column: 22, scope: !6106)
!6157 = !DILocalVariable(name: "n_buckets", scope: !6106, file: !141, line: 233, type: !143)
!6158 = !DILocation(line: 233, column: 10, scope: !6106)
!6159 = !DILocation(line: 233, column: 42, scope: !6106)
!6160 = !DILocation(line: 233, column: 22, scope: !6106)
!6161 = !DILocalVariable(name: "n_buckets_used", scope: !6106, file: !141, line: 234, type: !143)
!6162 = !DILocation(line: 234, column: 10, scope: !6106)
!6163 = !DILocation(line: 234, column: 52, scope: !6106)
!6164 = !DILocation(line: 234, column: 27, scope: !6106)
!6165 = !DILocalVariable(name: "max_bucket_length", scope: !6106, file: !141, line: 235, type: !143)
!6166 = !DILocation(line: 235, column: 10, scope: !6106)
!6167 = !DILocation(line: 235, column: 58, scope: !6106)
!6168 = !DILocation(line: 235, column: 30, scope: !6106)
!6169 = !DILocation(line: 237, column: 12, scope: !6106)
!6170 = !DILocation(line: 237, column: 68, scope: !6106)
!6171 = !DILocation(line: 237, column: 3, scope: !6106)
!6172 = !DILocation(line: 238, column: 12, scope: !6106)
!6173 = !DILocation(line: 238, column: 68, scope: !6106)
!6174 = !DILocation(line: 238, column: 3, scope: !6106)
!6175 = !DILocation(line: 239, column: 12, scope: !6106)
!6176 = !DILocation(line: 240, column: 32, scope: !6106)
!6177 = !DILocation(line: 241, column: 21, scope: !6106)
!6178 = !DILocation(line: 241, column: 19, scope: !6106)
!6179 = !DILocation(line: 241, column: 39, scope: !6106)
!6180 = !DILocation(line: 241, column: 37, scope: !6106)
!6181 = !DILocation(line: 239, column: 3, scope: !6106)
!6182 = !DILocation(line: 242, column: 12, scope: !6106)
!6183 = !DILocation(line: 243, column: 32, scope: !6106)
!6184 = !DILocation(line: 242, column: 3, scope: !6106)
!6185 = !DILocation(line: 244, column: 1, scope: !6106)
!6186 = distinct !DISubprogram(name: "hash_lookup", scope: !141, file: !141, line: 250, type: !6187, isLocal: false, isDefinition: true, scopeLine: 251, flags: DIFlagPrototyped, isOptimized: false, unit: !140, variables: !48)
!6187 = !DISubroutineType(types: !6188)
!6188 = !{!39, !5946, !436}
!6189 = !DILocalVariable(name: "table", arg: 1, scope: !6186, file: !141, line: 250, type: !5946)
!6190 = !DILocation(line: 250, column: 32, scope: !6186)
!6191 = !DILocalVariable(name: "entry", arg: 2, scope: !6186, file: !141, line: 250, type: !436)
!6192 = !DILocation(line: 250, column: 51, scope: !6186)
!6193 = !DILocalVariable(name: "bucket", scope: !6186, file: !141, line: 252, type: !5958)
!6194 = !DILocation(line: 252, column: 28, scope: !6186)
!6195 = !DILocation(line: 253, column: 7, scope: !6186)
!6196 = !DILocation(line: 253, column: 14, scope: !6186)
!6197 = !DILocation(line: 253, column: 23, scope: !6186)
!6198 = !DILocation(line: 253, column: 30, scope: !6186)
!6199 = !DILocation(line: 253, column: 38, scope: !6186)
!6200 = !DILocation(line: 253, column: 45, scope: !6186)
!6201 = !DILocation(line: 253, column: 52, scope: !6186)
!6202 = !DILocation(line: 253, column: 21, scope: !6186)
!6203 = !DILocalVariable(name: "cursor", scope: !6186, file: !141, line: 254, type: !5958)
!6204 = !DILocation(line: 254, column: 28, scope: !6186)
!6205 = !DILocation(line: 256, column: 10, scope: !6206)
!6206 = distinct !DILexicalBlock(scope: !6186, file: !141, line: 256, column: 7)
!6207 = !DILocation(line: 256, column: 19, scope: !6206)
!6208 = !DILocation(line: 256, column: 26, scope: !6206)
!6209 = !DILocation(line: 256, column: 17, scope: !6206)
!6210 = !DILocation(line: 256, column: 7, scope: !6186)
!6211 = !DILocation(line: 257, column: 5, scope: !6206)
!6212 = !DILocation(line: 259, column: 7, scope: !6213)
!6213 = distinct !DILexicalBlock(scope: !6186, file: !141, line: 259, column: 7)
!6214 = !DILocation(line: 259, column: 15, scope: !6213)
!6215 = !DILocation(line: 259, column: 20, scope: !6213)
!6216 = !DILocation(line: 259, column: 7, scope: !6186)
!6217 = !DILocation(line: 260, column: 5, scope: !6213)
!6218 = !DILocation(line: 262, column: 17, scope: !6219)
!6219 = distinct !DILexicalBlock(scope: !6186, file: !141, line: 262, column: 3)
!6220 = !DILocation(line: 262, column: 15, scope: !6219)
!6221 = !DILocation(line: 262, column: 8, scope: !6219)
!6222 = !DILocation(line: 262, column: 25, scope: !6223)
!6223 = distinct !DILexicalBlock(scope: !6219, file: !141, line: 262, column: 3)
!6224 = !DILocation(line: 262, column: 3, scope: !6219)
!6225 = !DILocation(line: 263, column: 9, scope: !6226)
!6226 = distinct !DILexicalBlock(scope: !6223, file: !141, line: 263, column: 9)
!6227 = !DILocation(line: 263, column: 18, scope: !6226)
!6228 = !DILocation(line: 263, column: 26, scope: !6226)
!6229 = !DILocation(line: 263, column: 15, scope: !6226)
!6230 = !DILocation(line: 263, column: 31, scope: !6226)
!6231 = !DILocation(line: 263, column: 34, scope: !6226)
!6232 = !DILocation(line: 263, column: 41, scope: !6226)
!6233 = !DILocation(line: 263, column: 53, scope: !6226)
!6234 = !DILocation(line: 263, column: 60, scope: !6226)
!6235 = !DILocation(line: 263, column: 68, scope: !6226)
!6236 = !DILocation(line: 263, column: 9, scope: !6223)
!6237 = !DILocation(line: 264, column: 14, scope: !6226)
!6238 = !DILocation(line: 264, column: 22, scope: !6226)
!6239 = !DILocation(line: 264, column: 7, scope: !6226)
!6240 = !DILocation(line: 263, column: 72, scope: !6226)
!6241 = !DILocation(line: 262, column: 42, scope: !6223)
!6242 = !DILocation(line: 262, column: 50, scope: !6223)
!6243 = !DILocation(line: 262, column: 40, scope: !6223)
!6244 = !DILocation(line: 262, column: 3, scope: !6223)
!6245 = distinct !{!6245, !6224, !6246}
!6246 = !DILocation(line: 264, column: 22, scope: !6219)
!6247 = !DILocation(line: 266, column: 3, scope: !6186)
!6248 = !DILocation(line: 267, column: 1, scope: !6186)
!6249 = distinct !DISubprogram(name: "hash_get_first", scope: !141, file: !141, line: 281, type: !6250, isLocal: false, isDefinition: true, scopeLine: 282, flags: DIFlagPrototyped, isOptimized: false, unit: !140, variables: !48)
!6250 = !DISubroutineType(types: !6251)
!6251 = !{!39, !5946}
!6252 = !DILocalVariable(name: "table", arg: 1, scope: !6249, file: !141, line: 281, type: !5946)
!6253 = !DILocation(line: 281, column: 35, scope: !6249)
!6254 = !DILocalVariable(name: "bucket", scope: !6249, file: !141, line: 283, type: !5958)
!6255 = !DILocation(line: 283, column: 28, scope: !6249)
!6256 = !DILocation(line: 285, column: 7, scope: !6257)
!6257 = distinct !DILexicalBlock(scope: !6249, file: !141, line: 285, column: 7)
!6258 = !DILocation(line: 285, column: 14, scope: !6257)
!6259 = !DILocation(line: 285, column: 24, scope: !6257)
!6260 = !DILocation(line: 285, column: 7, scope: !6249)
!6261 = !DILocation(line: 286, column: 5, scope: !6257)
!6262 = !DILocation(line: 288, column: 17, scope: !6263)
!6263 = distinct !DILexicalBlock(scope: !6249, file: !141, line: 288, column: 3)
!6264 = !DILocation(line: 288, column: 24, scope: !6263)
!6265 = !DILocation(line: 288, column: 15, scope: !6263)
!6266 = !DILocation(line: 288, column: 8, scope: !6263)
!6267 = !DILocation(line: 289, column: 12, scope: !6268)
!6268 = distinct !DILexicalBlock(scope: !6269, file: !141, line: 289, column: 9)
!6269 = distinct !DILexicalBlock(scope: !6263, file: !141, line: 288, column: 3)
!6270 = !DILocation(line: 289, column: 21, scope: !6268)
!6271 = !DILocation(line: 289, column: 28, scope: !6268)
!6272 = !DILocation(line: 289, column: 19, scope: !6268)
!6273 = !DILocation(line: 289, column: 9, scope: !6269)
!6274 = !DILocation(line: 290, column: 7, scope: !6268)
!6275 = !DILocation(line: 291, column: 14, scope: !6276)
!6276 = distinct !DILexicalBlock(scope: !6268, file: !141, line: 291, column: 14)
!6277 = !DILocation(line: 291, column: 22, scope: !6276)
!6278 = !DILocation(line: 291, column: 14, scope: !6268)
!6279 = !DILocation(line: 292, column: 14, scope: !6276)
!6280 = !DILocation(line: 292, column: 22, scope: !6276)
!6281 = !DILocation(line: 292, column: 7, scope: !6276)
!6282 = !DILocation(line: 289, column: 40, scope: !6268)
!6283 = !DILocation(line: 288, column: 40, scope: !6269)
!6284 = !DILocation(line: 288, column: 3, scope: !6269)
!6285 = distinct !{!6285, !6286, !6287}
!6286 = !DILocation(line: 288, column: 3, scope: !6263)
!6287 = !DILocation(line: 292, column: 22, scope: !6263)
!6288 = !DILocation(line: 293, column: 1, scope: !6249)
!6289 = distinct !DISubprogram(name: "hash_get_next", scope: !141, file: !141, line: 300, type: !6187, isLocal: false, isDefinition: true, scopeLine: 301, flags: DIFlagPrototyped, isOptimized: false, unit: !140, variables: !48)
!6290 = !DILocalVariable(name: "table", arg: 1, scope: !6289, file: !141, line: 300, type: !5946)
!6291 = !DILocation(line: 300, column: 34, scope: !6289)
!6292 = !DILocalVariable(name: "entry", arg: 2, scope: !6289, file: !141, line: 300, type: !436)
!6293 = !DILocation(line: 300, column: 53, scope: !6289)
!6294 = !DILocalVariable(name: "bucket", scope: !6289, file: !141, line: 302, type: !5958)
!6295 = !DILocation(line: 302, column: 28, scope: !6289)
!6296 = !DILocation(line: 303, column: 7, scope: !6289)
!6297 = !DILocation(line: 303, column: 14, scope: !6289)
!6298 = !DILocation(line: 303, column: 23, scope: !6289)
!6299 = !DILocation(line: 303, column: 30, scope: !6289)
!6300 = !DILocation(line: 303, column: 38, scope: !6289)
!6301 = !DILocation(line: 303, column: 45, scope: !6289)
!6302 = !DILocation(line: 303, column: 52, scope: !6289)
!6303 = !DILocation(line: 303, column: 21, scope: !6289)
!6304 = !DILocalVariable(name: "cursor", scope: !6289, file: !141, line: 304, type: !5958)
!6305 = !DILocation(line: 304, column: 28, scope: !6289)
!6306 = !DILocation(line: 306, column: 10, scope: !6307)
!6307 = distinct !DILexicalBlock(scope: !6289, file: !141, line: 306, column: 7)
!6308 = !DILocation(line: 306, column: 19, scope: !6307)
!6309 = !DILocation(line: 306, column: 26, scope: !6307)
!6310 = !DILocation(line: 306, column: 17, scope: !6307)
!6311 = !DILocation(line: 306, column: 7, scope: !6289)
!6312 = !DILocation(line: 307, column: 5, scope: !6307)
!6313 = !DILocation(line: 310, column: 17, scope: !6314)
!6314 = distinct !DILexicalBlock(scope: !6289, file: !141, line: 310, column: 3)
!6315 = !DILocation(line: 310, column: 15, scope: !6314)
!6316 = !DILocation(line: 310, column: 8, scope: !6314)
!6317 = !DILocation(line: 310, column: 25, scope: !6318)
!6318 = distinct !DILexicalBlock(scope: !6314, file: !141, line: 310, column: 3)
!6319 = !DILocation(line: 310, column: 3, scope: !6314)
!6320 = !DILocation(line: 311, column: 9, scope: !6321)
!6321 = distinct !DILexicalBlock(scope: !6318, file: !141, line: 311, column: 9)
!6322 = !DILocation(line: 311, column: 17, scope: !6321)
!6323 = !DILocation(line: 311, column: 25, scope: !6321)
!6324 = !DILocation(line: 311, column: 22, scope: !6321)
!6325 = !DILocation(line: 311, column: 31, scope: !6321)
!6326 = !DILocation(line: 311, column: 34, scope: !6321)
!6327 = !DILocation(line: 311, column: 42, scope: !6321)
!6328 = !DILocation(line: 311, column: 9, scope: !6318)
!6329 = !DILocation(line: 312, column: 14, scope: !6321)
!6330 = !DILocation(line: 312, column: 22, scope: !6321)
!6331 = !DILocation(line: 312, column: 28, scope: !6321)
!6332 = !DILocation(line: 312, column: 7, scope: !6321)
!6333 = !DILocation(line: 310, column: 42, scope: !6318)
!6334 = !DILocation(line: 310, column: 50, scope: !6318)
!6335 = !DILocation(line: 310, column: 40, scope: !6318)
!6336 = !DILocation(line: 310, column: 3, scope: !6318)
!6337 = distinct !{!6337, !6319, !6338}
!6338 = !DILocation(line: 312, column: 28, scope: !6314)
!6339 = !DILocation(line: 315, column: 3, scope: !6289)
!6340 = !DILocation(line: 315, column: 10, scope: !6289)
!6341 = !DILocation(line: 315, column: 21, scope: !6289)
!6342 = !DILocation(line: 315, column: 28, scope: !6289)
!6343 = !DILocation(line: 315, column: 19, scope: !6289)
!6344 = !DILocation(line: 316, column: 9, scope: !6345)
!6345 = distinct !DILexicalBlock(scope: !6289, file: !141, line: 316, column: 9)
!6346 = !DILocation(line: 316, column: 17, scope: !6345)
!6347 = !DILocation(line: 316, column: 9, scope: !6289)
!6348 = !DILocation(line: 317, column: 14, scope: !6345)
!6349 = !DILocation(line: 317, column: 22, scope: !6345)
!6350 = !DILocation(line: 317, column: 7, scope: !6345)
!6351 = distinct !{!6351, !6339, !6352}
!6352 = !DILocation(line: 317, column: 22, scope: !6289)
!6353 = !DILocation(line: 320, column: 3, scope: !6289)
!6354 = !DILocation(line: 321, column: 1, scope: !6289)
!6355 = distinct !DISubprogram(name: "hash_get_entries", scope: !141, file: !141, line: 328, type: !6356, isLocal: false, isDefinition: true, scopeLine: 330, flags: DIFlagPrototyped, isOptimized: false, unit: !140, variables: !48)
!6356 = !DISubroutineType(types: !6357)
!6357 = !{!143, !5946, !6358, !143}
!6358 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !39, size: 64)
!6359 = !DILocalVariable(name: "table", arg: 1, scope: !6355, file: !141, line: 328, type: !5946)
!6360 = !DILocation(line: 328, column: 37, scope: !6355)
!6361 = !DILocalVariable(name: "buffer", arg: 2, scope: !6355, file: !141, line: 328, type: !6358)
!6362 = !DILocation(line: 328, column: 51, scope: !6355)
!6363 = !DILocalVariable(name: "buffer_size", arg: 3, scope: !6355, file: !141, line: 329, type: !143)
!6364 = !DILocation(line: 329, column: 26, scope: !6355)
!6365 = !DILocalVariable(name: "counter", scope: !6355, file: !141, line: 331, type: !143)
!6366 = !DILocation(line: 331, column: 10, scope: !6355)
!6367 = !DILocalVariable(name: "bucket", scope: !6355, file: !141, line: 332, type: !5958)
!6368 = !DILocation(line: 332, column: 28, scope: !6355)
!6369 = !DILocalVariable(name: "cursor", scope: !6355, file: !141, line: 333, type: !5958)
!6370 = !DILocation(line: 333, column: 28, scope: !6355)
!6371 = !DILocation(line: 335, column: 17, scope: !6372)
!6372 = distinct !DILexicalBlock(scope: !6355, file: !141, line: 335, column: 3)
!6373 = !DILocation(line: 335, column: 24, scope: !6372)
!6374 = !DILocation(line: 335, column: 15, scope: !6372)
!6375 = !DILocation(line: 335, column: 8, scope: !6372)
!6376 = !DILocation(line: 335, column: 32, scope: !6377)
!6377 = distinct !DILexicalBlock(scope: !6372, file: !141, line: 335, column: 3)
!6378 = !DILocation(line: 335, column: 41, scope: !6377)
!6379 = !DILocation(line: 335, column: 48, scope: !6377)
!6380 = !DILocation(line: 335, column: 39, scope: !6377)
!6381 = !DILocation(line: 335, column: 3, scope: !6372)
!6382 = !DILocation(line: 337, column: 11, scope: !6383)
!6383 = distinct !DILexicalBlock(scope: !6384, file: !141, line: 337, column: 11)
!6384 = distinct !DILexicalBlock(scope: !6377, file: !141, line: 336, column: 5)
!6385 = !DILocation(line: 337, column: 19, scope: !6383)
!6386 = !DILocation(line: 337, column: 11, scope: !6384)
!6387 = !DILocation(line: 339, column: 25, scope: !6388)
!6388 = distinct !DILexicalBlock(scope: !6389, file: !141, line: 339, column: 11)
!6389 = distinct !DILexicalBlock(scope: !6383, file: !141, line: 338, column: 9)
!6390 = !DILocation(line: 339, column: 23, scope: !6388)
!6391 = !DILocation(line: 339, column: 16, scope: !6388)
!6392 = !DILocation(line: 339, column: 33, scope: !6393)
!6393 = distinct !DILexicalBlock(scope: !6388, file: !141, line: 339, column: 11)
!6394 = !DILocation(line: 339, column: 11, scope: !6388)
!6395 = !DILocation(line: 341, column: 19, scope: !6396)
!6396 = distinct !DILexicalBlock(scope: !6397, file: !141, line: 341, column: 19)
!6397 = distinct !DILexicalBlock(scope: !6393, file: !141, line: 340, column: 13)
!6398 = !DILocation(line: 341, column: 30, scope: !6396)
!6399 = !DILocation(line: 341, column: 27, scope: !6396)
!6400 = !DILocation(line: 341, column: 19, scope: !6397)
!6401 = !DILocation(line: 342, column: 24, scope: !6396)
!6402 = !DILocation(line: 342, column: 17, scope: !6396)
!6403 = !DILocation(line: 343, column: 35, scope: !6397)
!6404 = !DILocation(line: 343, column: 43, scope: !6397)
!6405 = !DILocation(line: 343, column: 15, scope: !6397)
!6406 = !DILocation(line: 343, column: 29, scope: !6397)
!6407 = !DILocation(line: 343, column: 33, scope: !6397)
!6408 = !DILocation(line: 344, column: 13, scope: !6397)
!6409 = !DILocation(line: 339, column: 50, scope: !6393)
!6410 = !DILocation(line: 339, column: 58, scope: !6393)
!6411 = !DILocation(line: 339, column: 48, scope: !6393)
!6412 = !DILocation(line: 339, column: 11, scope: !6393)
!6413 = distinct !{!6413, !6394, !6414}
!6414 = !DILocation(line: 344, column: 13, scope: !6388)
!6415 = !DILocation(line: 345, column: 9, scope: !6389)
!6416 = !DILocation(line: 346, column: 5, scope: !6384)
!6417 = !DILocation(line: 335, column: 68, scope: !6377)
!6418 = !DILocation(line: 335, column: 3, scope: !6377)
!6419 = distinct !{!6419, !6381, !6420}
!6420 = !DILocation(line: 346, column: 5, scope: !6372)
!6421 = !DILocation(line: 348, column: 10, scope: !6355)
!6422 = !DILocation(line: 348, column: 3, scope: !6355)
!6423 = !DILocation(line: 349, column: 1, scope: !6355)
!6424 = distinct !DISubprogram(name: "hash_do_for_each", scope: !141, file: !141, line: 360, type: !6425, isLocal: false, isDefinition: true, scopeLine: 362, flags: DIFlagPrototyped, isOptimized: false, unit: !140, variables: !48)
!6425 = !DISubroutineType(types: !6426)
!6426 = !{!143, !5946, !6427, !39}
!6427 = !DIDerivedType(tag: DW_TAG_typedef, name: "Hash_processor", file: !148, line: 44, baseType: !6428)
!6428 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6429, size: 64)
!6429 = !DISubroutineType(types: !6430)
!6430 = !{!131, !39, !39}
!6431 = !DILocalVariable(name: "table", arg: 1, scope: !6424, file: !141, line: 360, type: !5946)
!6432 = !DILocation(line: 360, column: 37, scope: !6424)
!6433 = !DILocalVariable(name: "processor", arg: 2, scope: !6424, file: !141, line: 360, type: !6427)
!6434 = !DILocation(line: 360, column: 59, scope: !6424)
!6435 = !DILocalVariable(name: "processor_data", arg: 3, scope: !6424, file: !141, line: 361, type: !39)
!6436 = !DILocation(line: 361, column: 25, scope: !6424)
!6437 = !DILocalVariable(name: "counter", scope: !6424, file: !141, line: 363, type: !143)
!6438 = !DILocation(line: 363, column: 10, scope: !6424)
!6439 = !DILocalVariable(name: "bucket", scope: !6424, file: !141, line: 364, type: !5958)
!6440 = !DILocation(line: 364, column: 28, scope: !6424)
!6441 = !DILocalVariable(name: "cursor", scope: !6424, file: !141, line: 365, type: !5958)
!6442 = !DILocation(line: 365, column: 28, scope: !6424)
!6443 = !DILocation(line: 367, column: 17, scope: !6444)
!6444 = distinct !DILexicalBlock(scope: !6424, file: !141, line: 367, column: 3)
!6445 = !DILocation(line: 367, column: 24, scope: !6444)
!6446 = !DILocation(line: 367, column: 15, scope: !6444)
!6447 = !DILocation(line: 367, column: 8, scope: !6444)
!6448 = !DILocation(line: 367, column: 32, scope: !6449)
!6449 = distinct !DILexicalBlock(scope: !6444, file: !141, line: 367, column: 3)
!6450 = !DILocation(line: 367, column: 41, scope: !6449)
!6451 = !DILocation(line: 367, column: 48, scope: !6449)
!6452 = !DILocation(line: 367, column: 39, scope: !6449)
!6453 = !DILocation(line: 367, column: 3, scope: !6444)
!6454 = !DILocation(line: 369, column: 11, scope: !6455)
!6455 = distinct !DILexicalBlock(scope: !6456, file: !141, line: 369, column: 11)
!6456 = distinct !DILexicalBlock(scope: !6449, file: !141, line: 368, column: 5)
!6457 = !DILocation(line: 369, column: 19, scope: !6455)
!6458 = !DILocation(line: 369, column: 11, scope: !6456)
!6459 = !DILocation(line: 371, column: 25, scope: !6460)
!6460 = distinct !DILexicalBlock(scope: !6461, file: !141, line: 371, column: 11)
!6461 = distinct !DILexicalBlock(scope: !6455, file: !141, line: 370, column: 9)
!6462 = !DILocation(line: 371, column: 23, scope: !6460)
!6463 = !DILocation(line: 371, column: 16, scope: !6460)
!6464 = !DILocation(line: 371, column: 33, scope: !6465)
!6465 = distinct !DILexicalBlock(scope: !6460, file: !141, line: 371, column: 11)
!6466 = !DILocation(line: 371, column: 11, scope: !6460)
!6467 = !DILocation(line: 373, column: 21, scope: !6468)
!6468 = distinct !DILexicalBlock(scope: !6469, file: !141, line: 373, column: 19)
!6469 = distinct !DILexicalBlock(scope: !6465, file: !141, line: 372, column: 13)
!6470 = !DILocation(line: 373, column: 32, scope: !6468)
!6471 = !DILocation(line: 373, column: 40, scope: !6468)
!6472 = !DILocation(line: 373, column: 46, scope: !6468)
!6473 = !DILocation(line: 373, column: 19, scope: !6469)
!6474 = !DILocation(line: 374, column: 24, scope: !6468)
!6475 = !DILocation(line: 374, column: 17, scope: !6468)
!6476 = !DILocation(line: 375, column: 22, scope: !6469)
!6477 = !DILocation(line: 376, column: 13, scope: !6469)
!6478 = !DILocation(line: 371, column: 50, scope: !6465)
!6479 = !DILocation(line: 371, column: 58, scope: !6465)
!6480 = !DILocation(line: 371, column: 48, scope: !6465)
!6481 = !DILocation(line: 371, column: 11, scope: !6465)
!6482 = distinct !{!6482, !6466, !6483}
!6483 = !DILocation(line: 376, column: 13, scope: !6460)
!6484 = !DILocation(line: 377, column: 9, scope: !6461)
!6485 = !DILocation(line: 378, column: 5, scope: !6456)
!6486 = !DILocation(line: 367, column: 68, scope: !6449)
!6487 = !DILocation(line: 367, column: 3, scope: !6449)
!6488 = distinct !{!6488, !6453, !6489}
!6489 = !DILocation(line: 378, column: 5, scope: !6444)
!6490 = !DILocation(line: 380, column: 10, scope: !6424)
!6491 = !DILocation(line: 380, column: 3, scope: !6424)
!6492 = !DILocation(line: 381, column: 1, scope: !6424)
!6493 = distinct !DISubprogram(name: "hash_string", scope: !141, file: !141, line: 420, type: !6494, isLocal: false, isDefinition: true, scopeLine: 421, flags: DIFlagPrototyped, isOptimized: false, unit: !140, variables: !48)
!6494 = !DISubroutineType(types: !6495)
!6495 = !{!143, !35, !143}
!6496 = !DILocalVariable(name: "string", arg: 1, scope: !6493, file: !141, line: 420, type: !35)
!6497 = !DILocation(line: 420, column: 26, scope: !6493)
!6498 = !DILocalVariable(name: "n_buckets", arg: 2, scope: !6493, file: !141, line: 420, type: !143)
!6499 = !DILocation(line: 420, column: 41, scope: !6493)
!6500 = !DILocalVariable(name: "value", scope: !6493, file: !141, line: 422, type: !143)
!6501 = !DILocation(line: 422, column: 10, scope: !6493)
!6502 = !DILocalVariable(name: "ch", scope: !6493, file: !141, line: 423, type: !1795)
!6503 = !DILocation(line: 423, column: 17, scope: !6493)
!6504 = !DILocation(line: 425, column: 3, scope: !6493)
!6505 = !DILocation(line: 425, column: 17, scope: !6506)
!6506 = distinct !DILexicalBlock(scope: !6507, file: !141, line: 425, column: 3)
!6507 = distinct !DILexicalBlock(scope: !6493, file: !141, line: 425, column: 3)
!6508 = !DILocation(line: 425, column: 16, scope: !6506)
!6509 = !DILocation(line: 425, column: 14, scope: !6506)
!6510 = !DILocation(line: 425, column: 3, scope: !6507)
!6511 = !DILocation(line: 426, column: 14, scope: !6506)
!6512 = !DILocation(line: 426, column: 20, scope: !6506)
!6513 = !DILocation(line: 426, column: 27, scope: !6506)
!6514 = !DILocation(line: 426, column: 25, scope: !6506)
!6515 = !DILocation(line: 426, column: 33, scope: !6506)
!6516 = !DILocation(line: 426, column: 31, scope: !6506)
!6517 = !DILocation(line: 426, column: 11, scope: !6506)
!6518 = !DILocation(line: 426, column: 5, scope: !6506)
!6519 = !DILocation(line: 425, column: 32, scope: !6506)
!6520 = !DILocation(line: 425, column: 3, scope: !6506)
!6521 = distinct !{!6521, !6510, !6522}
!6522 = !DILocation(line: 426, column: 33, scope: !6507)
!6523 = !DILocation(line: 427, column: 10, scope: !6493)
!6524 = !DILocation(line: 427, column: 3, scope: !6493)
!6525 = distinct !DISubprogram(name: "hash_reset_tuning", scope: !141, file: !141, line: 471, type: !6526, isLocal: false, isDefinition: true, scopeLine: 472, flags: DIFlagPrototyped, isOptimized: false, unit: !140, variables: !48)
!6526 = !DISubroutineType(types: !6527)
!6527 = !{null, !6528}
!6528 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !147, size: 64)
!6529 = !DILocalVariable(name: "tuning", arg: 1, scope: !6525, file: !141, line: 471, type: !6528)
!6530 = !DILocation(line: 471, column: 33, scope: !6525)
!6531 = !DILocation(line: 473, column: 4, scope: !6525)
!6532 = !DILocation(line: 473, column: 13, scope: !6525)
!6533 = !DILocation(line: 474, column: 1, scope: !6525)
!6534 = distinct !DISubprogram(name: "hash_initialize", scope: !141, file: !141, line: 586, type: !6535, isLocal: false, isDefinition: true, scopeLine: 589, flags: DIFlagPrototyped, isOptimized: false, unit: !140, variables: !48)
!6535 = !DISubroutineType(types: !6536)
!6536 = !{!6537, !143, !5964, !5966, !5969, !5972}
!6537 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5948, size: 64)
!6538 = !DILocalVariable(name: "candidate", arg: 1, scope: !6534, file: !141, line: 586, type: !143)
!6539 = !DILocation(line: 586, column: 25, scope: !6534)
!6540 = !DILocalVariable(name: "tuning", arg: 2, scope: !6534, file: !141, line: 586, type: !5964)
!6541 = !DILocation(line: 586, column: 55, scope: !6534)
!6542 = !DILocalVariable(name: "hasher", arg: 3, scope: !6534, file: !141, line: 587, type: !5966)
!6543 = !DILocation(line: 587, column: 30, scope: !6534)
!6544 = !DILocalVariable(name: "comparator", arg: 4, scope: !6534, file: !141, line: 587, type: !5969)
!6545 = !DILocation(line: 587, column: 54, scope: !6534)
!6546 = !DILocalVariable(name: "data_freer", arg: 5, scope: !6534, file: !141, line: 588, type: !5972)
!6547 = !DILocation(line: 588, column: 34, scope: !6534)
!6548 = !DILocalVariable(name: "table", scope: !6534, file: !141, line: 590, type: !6537)
!6549 = !DILocation(line: 590, column: 15, scope: !6534)
!6550 = !DILocation(line: 592, column: 7, scope: !6551)
!6551 = distinct !DILexicalBlock(scope: !6534, file: !141, line: 592, column: 7)
!6552 = !DILocation(line: 592, column: 14, scope: !6551)
!6553 = !DILocation(line: 592, column: 7, scope: !6534)
!6554 = !DILocation(line: 593, column: 12, scope: !6551)
!6555 = !DILocation(line: 593, column: 5, scope: !6551)
!6556 = !DILocation(line: 594, column: 7, scope: !6557)
!6557 = distinct !DILexicalBlock(scope: !6534, file: !141, line: 594, column: 7)
!6558 = !DILocation(line: 594, column: 18, scope: !6557)
!6559 = !DILocation(line: 594, column: 7, scope: !6534)
!6560 = !DILocation(line: 595, column: 16, scope: !6557)
!6561 = !DILocation(line: 595, column: 5, scope: !6557)
!6562 = !DILocation(line: 597, column: 11, scope: !6534)
!6563 = !DILocation(line: 597, column: 9, scope: !6534)
!6564 = !DILocation(line: 598, column: 7, scope: !6565)
!6565 = distinct !DILexicalBlock(scope: !6534, file: !141, line: 598, column: 7)
!6566 = !DILocation(line: 598, column: 13, scope: !6565)
!6567 = !DILocation(line: 598, column: 7, scope: !6534)
!6568 = !DILocation(line: 599, column: 5, scope: !6565)
!6569 = !DILocation(line: 601, column: 8, scope: !6570)
!6570 = distinct !DILexicalBlock(scope: !6534, file: !141, line: 601, column: 7)
!6571 = !DILocation(line: 601, column: 7, scope: !6534)
!6572 = !DILocation(line: 602, column: 12, scope: !6570)
!6573 = !DILocation(line: 602, column: 5, scope: !6570)
!6574 = !DILocation(line: 603, column: 19, scope: !6534)
!6575 = !DILocation(line: 603, column: 3, scope: !6534)
!6576 = !DILocation(line: 603, column: 10, scope: !6534)
!6577 = !DILocation(line: 603, column: 17, scope: !6534)
!6578 = !DILocation(line: 604, column: 22, scope: !6579)
!6579 = distinct !DILexicalBlock(scope: !6534, file: !141, line: 604, column: 7)
!6580 = !DILocation(line: 604, column: 8, scope: !6579)
!6581 = !DILocation(line: 604, column: 7, scope: !6534)
!6582 = !DILocation(line: 611, column: 7, scope: !6583)
!6583 = distinct !DILexicalBlock(scope: !6579, file: !141, line: 605, column: 5)
!6584 = !DILocation(line: 614, column: 43, scope: !6534)
!6585 = !DILocation(line: 614, column: 54, scope: !6534)
!6586 = !DILocation(line: 614, column: 22, scope: !6534)
!6587 = !DILocation(line: 614, column: 3, scope: !6534)
!6588 = !DILocation(line: 614, column: 10, scope: !6534)
!6589 = !DILocation(line: 614, column: 20, scope: !6534)
!6590 = !DILocation(line: 615, column: 8, scope: !6591)
!6591 = distinct !DILexicalBlock(scope: !6534, file: !141, line: 615, column: 7)
!6592 = !DILocation(line: 615, column: 15, scope: !6591)
!6593 = !DILocation(line: 615, column: 7, scope: !6534)
!6594 = !DILocation(line: 616, column: 5, scope: !6591)
!6595 = !DILocation(line: 618, column: 27, scope: !6534)
!6596 = !DILocation(line: 618, column: 34, scope: !6534)
!6597 = !DILocation(line: 618, column: 19, scope: !6534)
!6598 = !DILocation(line: 618, column: 3, scope: !6534)
!6599 = !DILocation(line: 618, column: 10, scope: !6534)
!6600 = !DILocation(line: 618, column: 17, scope: !6534)
!6601 = !DILocation(line: 619, column: 7, scope: !6602)
!6602 = distinct !DILexicalBlock(scope: !6534, file: !141, line: 619, column: 7)
!6603 = !DILocation(line: 619, column: 14, scope: !6602)
!6604 = !DILocation(line: 619, column: 21, scope: !6602)
!6605 = !DILocation(line: 619, column: 7, scope: !6534)
!6606 = !DILocation(line: 620, column: 5, scope: !6602)
!6607 = !DILocation(line: 621, column: 25, scope: !6534)
!6608 = !DILocation(line: 621, column: 32, scope: !6534)
!6609 = !DILocation(line: 621, column: 41, scope: !6534)
!6610 = !DILocation(line: 621, column: 48, scope: !6534)
!6611 = !DILocation(line: 621, column: 39, scope: !6534)
!6612 = !DILocation(line: 621, column: 3, scope: !6534)
!6613 = !DILocation(line: 621, column: 10, scope: !6534)
!6614 = !DILocation(line: 621, column: 23, scope: !6534)
!6615 = !DILocation(line: 622, column: 3, scope: !6534)
!6616 = !DILocation(line: 622, column: 10, scope: !6534)
!6617 = !DILocation(line: 622, column: 25, scope: !6534)
!6618 = !DILocation(line: 623, column: 3, scope: !6534)
!6619 = !DILocation(line: 623, column: 10, scope: !6534)
!6620 = !DILocation(line: 623, column: 20, scope: !6534)
!6621 = !DILocation(line: 625, column: 19, scope: !6534)
!6622 = !DILocation(line: 625, column: 3, scope: !6534)
!6623 = !DILocation(line: 625, column: 10, scope: !6534)
!6624 = !DILocation(line: 625, column: 17, scope: !6534)
!6625 = !DILocation(line: 626, column: 23, scope: !6534)
!6626 = !DILocation(line: 626, column: 3, scope: !6534)
!6627 = !DILocation(line: 626, column: 10, scope: !6534)
!6628 = !DILocation(line: 626, column: 21, scope: !6534)
!6629 = !DILocation(line: 627, column: 23, scope: !6534)
!6630 = !DILocation(line: 627, column: 3, scope: !6534)
!6631 = !DILocation(line: 627, column: 10, scope: !6534)
!6632 = !DILocation(line: 627, column: 21, scope: !6534)
!6633 = !DILocation(line: 629, column: 3, scope: !6534)
!6634 = !DILocation(line: 629, column: 10, scope: !6534)
!6635 = !DILocation(line: 629, column: 26, scope: !6534)
!6636 = !DILocation(line: 633, column: 10, scope: !6534)
!6637 = !DILocation(line: 633, column: 3, scope: !6534)
!6638 = !DILocation(line: 636, column: 9, scope: !6534)
!6639 = !DILocation(line: 636, column: 3, scope: !6534)
!6640 = !DILocation(line: 637, column: 3, scope: !6534)
!6641 = !DILocation(line: 638, column: 1, scope: !6534)
!6642 = distinct !DISubprogram(name: "raw_hasher", scope: !141, file: !141, line: 478, type: !3667, isLocal: true, isDefinition: true, scopeLine: 479, flags: DIFlagPrototyped, isOptimized: false, unit: !140, variables: !48)
!6643 = !DILocalVariable(name: "data", arg: 1, scope: !6642, file: !141, line: 478, type: !436)
!6644 = !DILocation(line: 478, column: 25, scope: !6642)
!6645 = !DILocalVariable(name: "n", arg: 2, scope: !6642, file: !141, line: 478, type: !143)
!6646 = !DILocation(line: 478, column: 38, scope: !6642)
!6647 = !DILocalVariable(name: "val", scope: !6642, file: !141, line: 485, type: !143)
!6648 = !DILocation(line: 485, column: 10, scope: !6642)
!6649 = !DILocation(line: 485, column: 34, scope: !6642)
!6650 = !DILocation(line: 485, column: 25, scope: !6642)
!6651 = !DILocation(line: 485, column: 16, scope: !6642)
!6652 = !DILocation(line: 486, column: 10, scope: !6642)
!6653 = !DILocation(line: 486, column: 16, scope: !6642)
!6654 = !DILocation(line: 486, column: 14, scope: !6642)
!6655 = !DILocation(line: 486, column: 3, scope: !6642)
!6656 = distinct !DISubprogram(name: "raw_comparator", scope: !141, file: !141, line: 491, type: !3689, isLocal: true, isDefinition: true, scopeLine: 492, flags: DIFlagPrototyped, isOptimized: false, unit: !140, variables: !48)
!6657 = !DILocalVariable(name: "a", arg: 1, scope: !6656, file: !141, line: 491, type: !436)
!6658 = !DILocation(line: 491, column: 29, scope: !6656)
!6659 = !DILocalVariable(name: "b", arg: 2, scope: !6656, file: !141, line: 491, type: !436)
!6660 = !DILocation(line: 491, column: 44, scope: !6656)
!6661 = !DILocation(line: 493, column: 10, scope: !6656)
!6662 = !DILocation(line: 493, column: 15, scope: !6656)
!6663 = !DILocation(line: 493, column: 12, scope: !6656)
!6664 = !DILocation(line: 493, column: 3, scope: !6656)
!6665 = distinct !DISubprogram(name: "check_tuning", scope: !141, file: !141, line: 504, type: !6666, isLocal: true, isDefinition: true, scopeLine: 505, flags: DIFlagPrototyped, isOptimized: false, unit: !140, variables: !48)
!6666 = !DISubroutineType(types: !6667)
!6667 = !{!131, !6537}
!6668 = !DILocalVariable(name: "table", arg: 1, scope: !6665, file: !141, line: 504, type: !6537)
!6669 = !DILocation(line: 504, column: 27, scope: !6665)
!6670 = !DILocalVariable(name: "tuning", scope: !6665, file: !141, line: 506, type: !5964)
!6671 = !DILocation(line: 506, column: 22, scope: !6665)
!6672 = !DILocation(line: 506, column: 31, scope: !6665)
!6673 = !DILocation(line: 506, column: 38, scope: !6665)
!6674 = !DILocalVariable(name: "epsilon", scope: !6665, file: !141, line: 507, type: !152)
!6675 = !DILocation(line: 507, column: 9, scope: !6665)
!6676 = !DILocation(line: 508, column: 7, scope: !6677)
!6677 = distinct !DILexicalBlock(scope: !6665, file: !141, line: 508, column: 7)
!6678 = !DILocation(line: 508, column: 14, scope: !6677)
!6679 = !DILocation(line: 508, column: 7, scope: !6665)
!6680 = !DILocation(line: 509, column: 5, scope: !6677)
!6681 = !DILocation(line: 516, column: 11, scope: !6665)
!6682 = !DILocation(line: 518, column: 7, scope: !6683)
!6683 = distinct !DILexicalBlock(scope: !6665, file: !141, line: 518, column: 7)
!6684 = !DILocation(line: 518, column: 17, scope: !6683)
!6685 = !DILocation(line: 518, column: 25, scope: !6683)
!6686 = !DILocation(line: 518, column: 15, scope: !6683)
!6687 = !DILocation(line: 519, column: 7, scope: !6683)
!6688 = !DILocation(line: 519, column: 10, scope: !6683)
!6689 = !DILocation(line: 519, column: 18, scope: !6683)
!6690 = !DILocation(line: 519, column: 41, scope: !6683)
!6691 = !DILocation(line: 519, column: 39, scope: !6683)
!6692 = !DILocation(line: 519, column: 35, scope: !6683)
!6693 = !DILocation(line: 520, column: 7, scope: !6683)
!6694 = !DILocation(line: 520, column: 14, scope: !6683)
!6695 = !DILocation(line: 520, column: 12, scope: !6683)
!6696 = !DILocation(line: 520, column: 24, scope: !6683)
!6697 = !DILocation(line: 520, column: 32, scope: !6683)
!6698 = !DILocation(line: 520, column: 22, scope: !6683)
!6699 = !DILocation(line: 521, column: 7, scope: !6683)
!6700 = !DILocation(line: 521, column: 15, scope: !6683)
!6701 = !DILocation(line: 521, column: 23, scope: !6683)
!6702 = !DILocation(line: 521, column: 12, scope: !6683)
!6703 = !DILocation(line: 522, column: 7, scope: !6683)
!6704 = !DILocation(line: 522, column: 10, scope: !6683)
!6705 = !DILocation(line: 522, column: 18, scope: !6683)
!6706 = !DILocation(line: 522, column: 37, scope: !6683)
!6707 = !DILocation(line: 522, column: 35, scope: !6683)
!6708 = !DILocation(line: 522, column: 47, scope: !6683)
!6709 = !DILocation(line: 522, column: 55, scope: !6683)
!6710 = !DILocation(line: 522, column: 45, scope: !6683)
!6711 = !DILocation(line: 523, column: 7, scope: !6683)
!6712 = !DILocation(line: 523, column: 10, scope: !6683)
!6713 = !DILocation(line: 523, column: 18, scope: !6683)
!6714 = !DILocation(line: 523, column: 32, scope: !6683)
!6715 = !DILocation(line: 524, column: 7, scope: !6683)
!6716 = !DILocation(line: 524, column: 10, scope: !6683)
!6717 = !DILocation(line: 524, column: 18, scope: !6683)
!6718 = !DILocation(line: 524, column: 37, scope: !6683)
!6719 = !DILocation(line: 524, column: 35, scope: !6683)
!6720 = !DILocation(line: 524, column: 47, scope: !6683)
!6721 = !DILocation(line: 524, column: 55, scope: !6683)
!6722 = !DILocation(line: 524, column: 45, scope: !6683)
!6723 = !DILocation(line: 518, column: 7, scope: !6665)
!6724 = !DILocation(line: 525, column: 5, scope: !6683)
!6725 = !DILocation(line: 527, column: 3, scope: !6665)
!6726 = !DILocation(line: 527, column: 10, scope: !6665)
!6727 = !DILocation(line: 527, column: 17, scope: !6665)
!6728 = !DILocation(line: 528, column: 3, scope: !6665)
!6729 = !DILocation(line: 529, column: 1, scope: !6665)
!6730 = distinct !DISubprogram(name: "compute_bucket_size", scope: !141, file: !141, line: 536, type: !6731, isLocal: true, isDefinition: true, scopeLine: 537, flags: DIFlagPrototyped, isOptimized: false, unit: !140, variables: !48)
!6731 = !DISubroutineType(types: !6732)
!6732 = !{!143, !143, !5964}
!6733 = !DILocalVariable(name: "candidate", arg: 1, scope: !6730, file: !141, line: 536, type: !143)
!6734 = !DILocation(line: 536, column: 29, scope: !6730)
!6735 = !DILocalVariable(name: "tuning", arg: 2, scope: !6730, file: !141, line: 536, type: !5964)
!6736 = !DILocation(line: 536, column: 59, scope: !6730)
!6737 = !DILocation(line: 538, column: 8, scope: !6738)
!6738 = distinct !DILexicalBlock(scope: !6730, file: !141, line: 538, column: 7)
!6739 = !DILocation(line: 538, column: 16, scope: !6738)
!6740 = !DILocation(line: 538, column: 7, scope: !6730)
!6741 = !DILocalVariable(name: "new_candidate", scope: !6742, file: !141, line: 540, type: !152)
!6742 = distinct !DILexicalBlock(scope: !6738, file: !141, line: 539, column: 5)
!6743 = !DILocation(line: 540, column: 13, scope: !6742)
!6744 = !DILocation(line: 540, column: 29, scope: !6742)
!6745 = !DILocation(line: 540, column: 41, scope: !6742)
!6746 = !DILocation(line: 540, column: 49, scope: !6742)
!6747 = !DILocation(line: 540, column: 39, scope: !6742)
!6748 = !DILocation(line: 541, column: 23, scope: !6749)
!6749 = distinct !DILexicalBlock(scope: !6742, file: !141, line: 541, column: 11)
!6750 = !DILocation(line: 541, column: 20, scope: !6749)
!6751 = !DILocation(line: 541, column: 11, scope: !6742)
!6752 = !DILocation(line: 542, column: 9, scope: !6749)
!6753 = !DILocation(line: 543, column: 19, scope: !6742)
!6754 = !DILocation(line: 543, column: 17, scope: !6742)
!6755 = !DILocation(line: 544, column: 5, scope: !6742)
!6756 = !DILocation(line: 545, column: 27, scope: !6730)
!6757 = !DILocation(line: 545, column: 15, scope: !6730)
!6758 = !DILocation(line: 545, column: 13, scope: !6730)
!6759 = !DILocation(line: 546, column: 7, scope: !6760)
!6760 = distinct !DILexicalBlock(scope: !6730, file: !141, line: 546, column: 7)
!6761 = !DILocation(line: 546, column: 7, scope: !6730)
!6762 = !DILocation(line: 547, column: 5, scope: !6760)
!6763 = !DILocation(line: 548, column: 10, scope: !6730)
!6764 = !DILocation(line: 548, column: 3, scope: !6730)
!6765 = !DILocation(line: 549, column: 1, scope: !6730)
!6766 = distinct !DISubprogram(name: "next_prime", scope: !141, file: !141, line: 455, type: !6767, isLocal: true, isDefinition: true, scopeLine: 456, flags: DIFlagPrototyped, isOptimized: false, unit: !140, variables: !48)
!6767 = !DISubroutineType(types: !6768)
!6768 = !{!143, !143}
!6769 = !DILocalVariable(name: "candidate", arg: 1, scope: !6766, file: !141, line: 455, type: !143)
!6770 = !DILocation(line: 455, column: 20, scope: !6766)
!6771 = !DILocation(line: 458, column: 7, scope: !6772)
!6772 = distinct !DILexicalBlock(scope: !6766, file: !141, line: 458, column: 7)
!6773 = !DILocation(line: 458, column: 17, scope: !6772)
!6774 = !DILocation(line: 458, column: 7, scope: !6766)
!6775 = !DILocation(line: 459, column: 15, scope: !6772)
!6776 = !DILocation(line: 459, column: 5, scope: !6772)
!6777 = !DILocation(line: 462, column: 13, scope: !6766)
!6778 = !DILocation(line: 464, column: 3, scope: !6766)
!6779 = !DILocation(line: 464, column: 22, scope: !6766)
!6780 = !DILocation(line: 464, column: 19, scope: !6766)
!6781 = !DILocation(line: 464, column: 32, scope: !6766)
!6782 = !DILocation(line: 464, column: 46, scope: !6766)
!6783 = !DILocation(line: 464, column: 36, scope: !6766)
!6784 = !DILocation(line: 464, column: 35, scope: !6766)
!6785 = !DILocation(line: 465, column: 15, scope: !6766)
!6786 = distinct !{!6786, !6778, !6787}
!6787 = !DILocation(line: 465, column: 18, scope: !6766)
!6788 = !DILocation(line: 467, column: 10, scope: !6766)
!6789 = !DILocation(line: 467, column: 3, scope: !6766)
!6790 = distinct !DISubprogram(name: "is_prime", scope: !141, file: !141, line: 436, type: !6791, isLocal: true, isDefinition: true, scopeLine: 437, flags: DIFlagPrototyped, isOptimized: false, unit: !140, variables: !48)
!6791 = !DISubroutineType(types: !6792)
!6792 = !{!131, !143}
!6793 = !DILocalVariable(name: "candidate", arg: 1, scope: !6790, file: !141, line: 436, type: !143)
!6794 = !DILocation(line: 436, column: 18, scope: !6790)
!6795 = !DILocalVariable(name: "divisor", scope: !6790, file: !141, line: 438, type: !143)
!6796 = !DILocation(line: 438, column: 10, scope: !6790)
!6797 = !DILocalVariable(name: "square", scope: !6790, file: !141, line: 439, type: !143)
!6798 = !DILocation(line: 439, column: 10, scope: !6790)
!6799 = !DILocation(line: 439, column: 19, scope: !6790)
!6800 = !DILocation(line: 439, column: 29, scope: !6790)
!6801 = !DILocation(line: 439, column: 27, scope: !6790)
!6802 = !DILocation(line: 441, column: 3, scope: !6790)
!6803 = !DILocation(line: 441, column: 10, scope: !6790)
!6804 = !DILocation(line: 441, column: 19, scope: !6790)
!6805 = !DILocation(line: 441, column: 17, scope: !6790)
!6806 = !DILocation(line: 441, column: 29, scope: !6790)
!6807 = !DILocation(line: 441, column: 33, scope: !6790)
!6808 = !DILocation(line: 441, column: 45, scope: !6790)
!6809 = !DILocation(line: 441, column: 43, scope: !6790)
!6810 = !DILocation(line: 443, column: 14, scope: !6811)
!6811 = distinct !DILexicalBlock(scope: !6790, file: !141, line: 442, column: 5)
!6812 = !DILocation(line: 444, column: 21, scope: !6811)
!6813 = !DILocation(line: 444, column: 19, scope: !6811)
!6814 = !DILocation(line: 444, column: 14, scope: !6811)
!6815 = !DILocation(line: 445, column: 14, scope: !6811)
!6816 = distinct !{!6816, !6802, !6817}
!6817 = !DILocation(line: 446, column: 5, scope: !6790)
!6818 = !DILocation(line: 448, column: 11, scope: !6790)
!6819 = !DILocation(line: 448, column: 23, scope: !6790)
!6820 = !DILocation(line: 448, column: 21, scope: !6790)
!6821 = !DILocation(line: 448, column: 10, scope: !6790)
!6822 = !DILocation(line: 448, column: 3, scope: !6790)
!6823 = distinct !DISubprogram(name: "rotr_sz", scope: !6824, file: !6824, line: 77, type: !6825, isLocal: true, isDefinition: true, scopeLine: 78, flags: DIFlagPrototyped, isOptimized: false, unit: !140, variables: !48)
!6824 = !DIFile(filename: "../../lib/bitrotate.h", directory: "/home/ma481/Downloads/Chisel/chisel-bench/benchmark/rm-8.4/original/obj-llvm/lib")
!6825 = !DISubroutineType(types: !6826)
!6826 = !{!143, !143, !46}
!6827 = !DILocalVariable(name: "x", arg: 1, scope: !6823, file: !6824, line: 77, type: !143)
!6828 = !DILocation(line: 77, column: 17, scope: !6823)
!6829 = !DILocalVariable(name: "n", arg: 2, scope: !6823, file: !6824, line: 77, type: !46)
!6830 = !DILocation(line: 77, column: 24, scope: !6823)
!6831 = !DILocation(line: 79, column: 12, scope: !6823)
!6832 = !DILocation(line: 79, column: 17, scope: !6823)
!6833 = !DILocation(line: 79, column: 14, scope: !6823)
!6834 = !DILocation(line: 79, column: 23, scope: !6823)
!6835 = !DILocation(line: 79, column: 53, scope: !6823)
!6836 = !DILocation(line: 79, column: 51, scope: !6823)
!6837 = !DILocation(line: 79, column: 25, scope: !6823)
!6838 = !DILocation(line: 79, column: 20, scope: !6823)
!6839 = !DILocation(line: 79, column: 3, scope: !6823)
!6840 = distinct !DISubprogram(name: "hash_clear", scope: !141, file: !141, line: 645, type: !6841, isLocal: false, isDefinition: true, scopeLine: 646, flags: DIFlagPrototyped, isOptimized: false, unit: !140, variables: !48)
!6841 = !DISubroutineType(types: !6842)
!6842 = !{null, !6537}
!6843 = !DILocalVariable(name: "table", arg: 1, scope: !6840, file: !141, line: 645, type: !6537)
!6844 = !DILocation(line: 645, column: 25, scope: !6840)
!6845 = !DILocalVariable(name: "bucket", scope: !6840, file: !141, line: 647, type: !5952)
!6846 = !DILocation(line: 647, column: 22, scope: !6840)
!6847 = !DILocation(line: 649, column: 17, scope: !6848)
!6848 = distinct !DILexicalBlock(scope: !6840, file: !141, line: 649, column: 3)
!6849 = !DILocation(line: 649, column: 24, scope: !6848)
!6850 = !DILocation(line: 649, column: 15, scope: !6848)
!6851 = !DILocation(line: 649, column: 8, scope: !6848)
!6852 = !DILocation(line: 649, column: 32, scope: !6853)
!6853 = distinct !DILexicalBlock(scope: !6848, file: !141, line: 649, column: 3)
!6854 = !DILocation(line: 649, column: 41, scope: !6853)
!6855 = !DILocation(line: 649, column: 48, scope: !6853)
!6856 = !DILocation(line: 649, column: 39, scope: !6853)
!6857 = !DILocation(line: 649, column: 3, scope: !6848)
!6858 = !DILocation(line: 651, column: 11, scope: !6859)
!6859 = distinct !DILexicalBlock(scope: !6860, file: !141, line: 651, column: 11)
!6860 = distinct !DILexicalBlock(scope: !6853, file: !141, line: 650, column: 5)
!6861 = !DILocation(line: 651, column: 19, scope: !6859)
!6862 = !DILocation(line: 651, column: 11, scope: !6860)
!6863 = !DILocalVariable(name: "cursor", scope: !6864, file: !141, line: 653, type: !5952)
!6864 = distinct !DILexicalBlock(scope: !6859, file: !141, line: 652, column: 9)
!6865 = !DILocation(line: 653, column: 30, scope: !6864)
!6866 = !DILocalVariable(name: "next", scope: !6864, file: !141, line: 654, type: !5952)
!6867 = !DILocation(line: 654, column: 30, scope: !6864)
!6868 = !DILocation(line: 657, column: 25, scope: !6869)
!6869 = distinct !DILexicalBlock(scope: !6864, file: !141, line: 657, column: 11)
!6870 = !DILocation(line: 657, column: 33, scope: !6869)
!6871 = !DILocation(line: 657, column: 23, scope: !6869)
!6872 = !DILocation(line: 657, column: 16, scope: !6869)
!6873 = !DILocation(line: 657, column: 39, scope: !6874)
!6874 = distinct !DILexicalBlock(scope: !6869, file: !141, line: 657, column: 11)
!6875 = !DILocation(line: 657, column: 11, scope: !6869)
!6876 = !DILocation(line: 659, column: 19, scope: !6877)
!6877 = distinct !DILexicalBlock(scope: !6878, file: !141, line: 659, column: 19)
!6878 = distinct !DILexicalBlock(scope: !6874, file: !141, line: 658, column: 13)
!6879 = !DILocation(line: 659, column: 26, scope: !6877)
!6880 = !DILocation(line: 659, column: 19, scope: !6878)
!6881 = !DILocation(line: 660, column: 17, scope: !6877)
!6882 = !DILocation(line: 660, column: 24, scope: !6877)
!6883 = !DILocation(line: 660, column: 36, scope: !6877)
!6884 = !DILocation(line: 660, column: 44, scope: !6877)
!6885 = !DILocation(line: 661, column: 15, scope: !6878)
!6886 = !DILocation(line: 661, column: 23, scope: !6878)
!6887 = !DILocation(line: 661, column: 28, scope: !6878)
!6888 = !DILocation(line: 663, column: 22, scope: !6878)
!6889 = !DILocation(line: 663, column: 30, scope: !6878)
!6890 = !DILocation(line: 663, column: 20, scope: !6878)
!6891 = !DILocation(line: 666, column: 30, scope: !6878)
!6892 = !DILocation(line: 666, column: 37, scope: !6878)
!6893 = !DILocation(line: 666, column: 15, scope: !6878)
!6894 = !DILocation(line: 666, column: 23, scope: !6878)
!6895 = !DILocation(line: 666, column: 28, scope: !6878)
!6896 = !DILocation(line: 667, column: 40, scope: !6878)
!6897 = !DILocation(line: 667, column: 15, scope: !6878)
!6898 = !DILocation(line: 667, column: 22, scope: !6878)
!6899 = !DILocation(line: 667, column: 38, scope: !6878)
!6900 = !DILocation(line: 668, column: 13, scope: !6878)
!6901 = !DILocation(line: 657, column: 56, scope: !6874)
!6902 = !DILocation(line: 657, column: 54, scope: !6874)
!6903 = !DILocation(line: 657, column: 11, scope: !6874)
!6904 = distinct !{!6904, !6875, !6905}
!6905 = !DILocation(line: 668, column: 13, scope: !6869)
!6906 = !DILocation(line: 671, column: 15, scope: !6907)
!6907 = distinct !DILexicalBlock(scope: !6864, file: !141, line: 671, column: 15)
!6908 = !DILocation(line: 671, column: 22, scope: !6907)
!6909 = !DILocation(line: 671, column: 15, scope: !6864)
!6910 = !DILocation(line: 672, column: 13, scope: !6907)
!6911 = !DILocation(line: 672, column: 20, scope: !6907)
!6912 = !DILocation(line: 672, column: 32, scope: !6907)
!6913 = !DILocation(line: 672, column: 40, scope: !6907)
!6914 = !DILocation(line: 673, column: 11, scope: !6864)
!6915 = !DILocation(line: 673, column: 19, scope: !6864)
!6916 = !DILocation(line: 673, column: 24, scope: !6864)
!6917 = !DILocation(line: 674, column: 11, scope: !6864)
!6918 = !DILocation(line: 674, column: 19, scope: !6864)
!6919 = !DILocation(line: 674, column: 24, scope: !6864)
!6920 = !DILocation(line: 675, column: 9, scope: !6864)
!6921 = !DILocation(line: 676, column: 5, scope: !6860)
!6922 = !DILocation(line: 649, column: 68, scope: !6853)
!6923 = !DILocation(line: 649, column: 3, scope: !6853)
!6924 = distinct !{!6924, !6857, !6925}
!6925 = !DILocation(line: 676, column: 5, scope: !6848)
!6926 = !DILocation(line: 678, column: 3, scope: !6840)
!6927 = !DILocation(line: 678, column: 10, scope: !6840)
!6928 = !DILocation(line: 678, column: 25, scope: !6840)
!6929 = !DILocation(line: 679, column: 3, scope: !6840)
!6930 = !DILocation(line: 679, column: 10, scope: !6840)
!6931 = !DILocation(line: 679, column: 20, scope: !6840)
!6932 = !DILocation(line: 680, column: 1, scope: !6840)
!6933 = distinct !DISubprogram(name: "hash_free", scope: !141, file: !141, line: 688, type: !6841, isLocal: false, isDefinition: true, scopeLine: 689, flags: DIFlagPrototyped, isOptimized: false, unit: !140, variables: !48)
!6934 = !DILocalVariable(name: "table", arg: 1, scope: !6933, file: !141, line: 688, type: !6537)
!6935 = !DILocation(line: 688, column: 24, scope: !6933)
!6936 = !DILocalVariable(name: "bucket", scope: !6933, file: !141, line: 690, type: !5952)
!6937 = !DILocation(line: 690, column: 22, scope: !6933)
!6938 = !DILocalVariable(name: "cursor", scope: !6933, file: !141, line: 691, type: !5952)
!6939 = !DILocation(line: 691, column: 22, scope: !6933)
!6940 = !DILocalVariable(name: "next", scope: !6933, file: !141, line: 692, type: !5952)
!6941 = !DILocation(line: 692, column: 22, scope: !6933)
!6942 = !DILocation(line: 695, column: 7, scope: !6943)
!6943 = distinct !DILexicalBlock(scope: !6933, file: !141, line: 695, column: 7)
!6944 = !DILocation(line: 695, column: 14, scope: !6943)
!6945 = !DILocation(line: 695, column: 25, scope: !6943)
!6946 = !DILocation(line: 695, column: 28, scope: !6943)
!6947 = !DILocation(line: 695, column: 35, scope: !6943)
!6948 = !DILocation(line: 695, column: 7, scope: !6933)
!6949 = !DILocation(line: 697, column: 21, scope: !6950)
!6950 = distinct !DILexicalBlock(scope: !6951, file: !141, line: 697, column: 7)
!6951 = distinct !DILexicalBlock(scope: !6943, file: !141, line: 696, column: 5)
!6952 = !DILocation(line: 697, column: 28, scope: !6950)
!6953 = !DILocation(line: 697, column: 19, scope: !6950)
!6954 = !DILocation(line: 697, column: 12, scope: !6950)
!6955 = !DILocation(line: 697, column: 36, scope: !6956)
!6956 = distinct !DILexicalBlock(scope: !6950, file: !141, line: 697, column: 7)
!6957 = !DILocation(line: 697, column: 45, scope: !6956)
!6958 = !DILocation(line: 697, column: 52, scope: !6956)
!6959 = !DILocation(line: 697, column: 43, scope: !6956)
!6960 = !DILocation(line: 697, column: 7, scope: !6950)
!6961 = !DILocation(line: 699, column: 15, scope: !6962)
!6962 = distinct !DILexicalBlock(scope: !6963, file: !141, line: 699, column: 15)
!6963 = distinct !DILexicalBlock(scope: !6956, file: !141, line: 698, column: 9)
!6964 = !DILocation(line: 699, column: 23, scope: !6962)
!6965 = !DILocation(line: 699, column: 15, scope: !6963)
!6966 = !DILocation(line: 701, column: 29, scope: !6967)
!6967 = distinct !DILexicalBlock(scope: !6968, file: !141, line: 701, column: 15)
!6968 = distinct !DILexicalBlock(scope: !6962, file: !141, line: 700, column: 13)
!6969 = !DILocation(line: 701, column: 27, scope: !6967)
!6970 = !DILocation(line: 701, column: 20, scope: !6967)
!6971 = !DILocation(line: 701, column: 37, scope: !6972)
!6972 = distinct !DILexicalBlock(scope: !6967, file: !141, line: 701, column: 15)
!6973 = !DILocation(line: 701, column: 15, scope: !6967)
!6974 = !DILocation(line: 702, column: 17, scope: !6972)
!6975 = !DILocation(line: 702, column: 24, scope: !6972)
!6976 = !DILocation(line: 702, column: 36, scope: !6972)
!6977 = !DILocation(line: 702, column: 44, scope: !6972)
!6978 = !DILocation(line: 701, column: 54, scope: !6972)
!6979 = !DILocation(line: 701, column: 62, scope: !6972)
!6980 = !DILocation(line: 701, column: 52, scope: !6972)
!6981 = !DILocation(line: 701, column: 15, scope: !6972)
!6982 = distinct !{!6982, !6973, !6983}
!6983 = !DILocation(line: 702, column: 48, scope: !6967)
!6984 = !DILocation(line: 703, column: 13, scope: !6968)
!6985 = !DILocation(line: 704, column: 9, scope: !6963)
!6986 = !DILocation(line: 697, column: 72, scope: !6956)
!6987 = !DILocation(line: 697, column: 7, scope: !6956)
!6988 = distinct !{!6988, !6960, !6989}
!6989 = !DILocation(line: 704, column: 9, scope: !6950)
!6990 = !DILocation(line: 705, column: 5, scope: !6951)
!6991 = !DILocation(line: 714, column: 17, scope: !6992)
!6992 = distinct !DILexicalBlock(scope: !6933, file: !141, line: 714, column: 3)
!6993 = !DILocation(line: 714, column: 24, scope: !6992)
!6994 = !DILocation(line: 714, column: 15, scope: !6992)
!6995 = !DILocation(line: 714, column: 8, scope: !6992)
!6996 = !DILocation(line: 714, column: 32, scope: !6997)
!6997 = distinct !DILexicalBlock(scope: !6992, file: !141, line: 714, column: 3)
!6998 = !DILocation(line: 714, column: 41, scope: !6997)
!6999 = !DILocation(line: 714, column: 48, scope: !6997)
!7000 = !DILocation(line: 714, column: 39, scope: !6997)
!7001 = !DILocation(line: 714, column: 3, scope: !6992)
!7002 = !DILocation(line: 716, column: 21, scope: !7003)
!7003 = distinct !DILexicalBlock(scope: !7004, file: !141, line: 716, column: 7)
!7004 = distinct !DILexicalBlock(scope: !6997, file: !141, line: 715, column: 5)
!7005 = !DILocation(line: 716, column: 29, scope: !7003)
!7006 = !DILocation(line: 716, column: 19, scope: !7003)
!7007 = !DILocation(line: 716, column: 12, scope: !7003)
!7008 = !DILocation(line: 716, column: 35, scope: !7009)
!7009 = distinct !DILexicalBlock(scope: !7003, file: !141, line: 716, column: 7)
!7010 = !DILocation(line: 716, column: 7, scope: !7003)
!7011 = !DILocation(line: 718, column: 18, scope: !7012)
!7012 = distinct !DILexicalBlock(scope: !7009, file: !141, line: 717, column: 9)
!7013 = !DILocation(line: 718, column: 26, scope: !7012)
!7014 = !DILocation(line: 718, column: 16, scope: !7012)
!7015 = !DILocation(line: 719, column: 17, scope: !7012)
!7016 = !DILocation(line: 719, column: 11, scope: !7012)
!7017 = !DILocation(line: 720, column: 9, scope: !7012)
!7018 = !DILocation(line: 716, column: 52, scope: !7009)
!7019 = !DILocation(line: 716, column: 50, scope: !7009)
!7020 = !DILocation(line: 716, column: 7, scope: !7009)
!7021 = distinct !{!7021, !7010, !7022}
!7022 = !DILocation(line: 720, column: 9, scope: !7003)
!7023 = !DILocation(line: 721, column: 5, scope: !7004)
!7024 = !DILocation(line: 714, column: 68, scope: !6997)
!7025 = !DILocation(line: 714, column: 3, scope: !6997)
!7026 = distinct !{!7026, !7001, !7027}
!7027 = !DILocation(line: 721, column: 5, scope: !6992)
!7028 = !DILocation(line: 724, column: 17, scope: !7029)
!7029 = distinct !DILexicalBlock(scope: !6933, file: !141, line: 724, column: 3)
!7030 = !DILocation(line: 724, column: 24, scope: !7029)
!7031 = !DILocation(line: 724, column: 15, scope: !7029)
!7032 = !DILocation(line: 724, column: 8, scope: !7029)
!7033 = !DILocation(line: 724, column: 41, scope: !7034)
!7034 = distinct !DILexicalBlock(scope: !7029, file: !141, line: 724, column: 3)
!7035 = !DILocation(line: 724, column: 3, scope: !7029)
!7036 = !DILocation(line: 726, column: 14, scope: !7037)
!7037 = distinct !DILexicalBlock(scope: !7034, file: !141, line: 725, column: 5)
!7038 = !DILocation(line: 726, column: 22, scope: !7037)
!7039 = !DILocation(line: 726, column: 12, scope: !7037)
!7040 = !DILocation(line: 727, column: 13, scope: !7037)
!7041 = !DILocation(line: 727, column: 7, scope: !7037)
!7042 = !DILocation(line: 728, column: 5, scope: !7037)
!7043 = !DILocation(line: 724, column: 58, scope: !7034)
!7044 = !DILocation(line: 724, column: 56, scope: !7034)
!7045 = !DILocation(line: 724, column: 3, scope: !7034)
!7046 = distinct !{!7046, !7035, !7047}
!7047 = !DILocation(line: 728, column: 5, scope: !7029)
!7048 = !DILocation(line: 733, column: 9, scope: !6933)
!7049 = !DILocation(line: 733, column: 16, scope: !6933)
!7050 = !DILocation(line: 733, column: 3, scope: !6933)
!7051 = !DILocation(line: 734, column: 9, scope: !6933)
!7052 = !DILocation(line: 734, column: 3, scope: !6933)
!7053 = !DILocation(line: 735, column: 1, scope: !6933)
!7054 = distinct !DISubprogram(name: "hash_rehash", scope: !141, file: !141, line: 945, type: !7055, isLocal: false, isDefinition: true, scopeLine: 946, flags: DIFlagPrototyped, isOptimized: false, unit: !140, variables: !48)
!7055 = !DISubroutineType(types: !7056)
!7056 = !{!131, !6537, !143}
!7057 = !DILocalVariable(name: "table", arg: 1, scope: !7054, file: !141, line: 945, type: !6537)
!7058 = !DILocation(line: 945, column: 26, scope: !7054)
!7059 = !DILocalVariable(name: "candidate", arg: 2, scope: !7054, file: !141, line: 945, type: !143)
!7060 = !DILocation(line: 945, column: 40, scope: !7054)
!7061 = !DILocalVariable(name: "storage", scope: !7054, file: !141, line: 947, type: !5948)
!7062 = !DILocation(line: 947, column: 14, scope: !7054)
!7063 = !DILocalVariable(name: "new_table", scope: !7054, file: !141, line: 948, type: !6537)
!7064 = !DILocation(line: 948, column: 15, scope: !7054)
!7065 = !DILocalVariable(name: "new_size", scope: !7054, file: !141, line: 949, type: !143)
!7066 = !DILocation(line: 949, column: 10, scope: !7054)
!7067 = !DILocation(line: 949, column: 42, scope: !7054)
!7068 = !DILocation(line: 949, column: 53, scope: !7054)
!7069 = !DILocation(line: 949, column: 60, scope: !7054)
!7070 = !DILocation(line: 949, column: 21, scope: !7054)
!7071 = !DILocation(line: 951, column: 8, scope: !7072)
!7072 = distinct !DILexicalBlock(scope: !7054, file: !141, line: 951, column: 7)
!7073 = !DILocation(line: 951, column: 7, scope: !7054)
!7074 = !DILocation(line: 952, column: 5, scope: !7072)
!7075 = !DILocation(line: 953, column: 7, scope: !7076)
!7076 = distinct !DILexicalBlock(scope: !7054, file: !141, line: 953, column: 7)
!7077 = !DILocation(line: 953, column: 19, scope: !7076)
!7078 = !DILocation(line: 953, column: 26, scope: !7076)
!7079 = !DILocation(line: 953, column: 16, scope: !7076)
!7080 = !DILocation(line: 953, column: 7, scope: !7054)
!7081 = !DILocation(line: 954, column: 5, scope: !7076)
!7082 = !DILocation(line: 955, column: 13, scope: !7054)
!7083 = !DILocation(line: 956, column: 31, scope: !7054)
!7084 = !DILocation(line: 956, column: 23, scope: !7054)
!7085 = !DILocation(line: 956, column: 3, scope: !7054)
!7086 = !DILocation(line: 956, column: 14, scope: !7054)
!7087 = !DILocation(line: 956, column: 21, scope: !7054)
!7088 = !DILocation(line: 957, column: 7, scope: !7089)
!7089 = distinct !DILexicalBlock(scope: !7054, file: !141, line: 957, column: 7)
!7090 = !DILocation(line: 957, column: 18, scope: !7089)
!7091 = !DILocation(line: 957, column: 25, scope: !7089)
!7092 = !DILocation(line: 957, column: 7, scope: !7054)
!7093 = !DILocation(line: 958, column: 5, scope: !7089)
!7094 = !DILocation(line: 959, column: 26, scope: !7054)
!7095 = !DILocation(line: 959, column: 3, scope: !7054)
!7096 = !DILocation(line: 959, column: 14, scope: !7054)
!7097 = !DILocation(line: 959, column: 24, scope: !7054)
!7098 = !DILocation(line: 960, column: 29, scope: !7054)
!7099 = !DILocation(line: 960, column: 40, scope: !7054)
!7100 = !DILocation(line: 960, column: 49, scope: !7054)
!7101 = !DILocation(line: 960, column: 47, scope: !7054)
!7102 = !DILocation(line: 960, column: 3, scope: !7054)
!7103 = !DILocation(line: 960, column: 14, scope: !7054)
!7104 = !DILocation(line: 960, column: 27, scope: !7054)
!7105 = !DILocation(line: 961, column: 3, scope: !7054)
!7106 = !DILocation(line: 961, column: 14, scope: !7054)
!7107 = !DILocation(line: 961, column: 29, scope: !7054)
!7108 = !DILocation(line: 962, column: 3, scope: !7054)
!7109 = !DILocation(line: 962, column: 14, scope: !7054)
!7110 = !DILocation(line: 962, column: 24, scope: !7054)
!7111 = !DILocation(line: 963, column: 23, scope: !7054)
!7112 = !DILocation(line: 963, column: 30, scope: !7054)
!7113 = !DILocation(line: 963, column: 3, scope: !7054)
!7114 = !DILocation(line: 963, column: 14, scope: !7054)
!7115 = !DILocation(line: 963, column: 21, scope: !7054)
!7116 = !DILocation(line: 964, column: 23, scope: !7054)
!7117 = !DILocation(line: 964, column: 30, scope: !7054)
!7118 = !DILocation(line: 964, column: 3, scope: !7054)
!7119 = !DILocation(line: 964, column: 14, scope: !7054)
!7120 = !DILocation(line: 964, column: 21, scope: !7054)
!7121 = !DILocation(line: 965, column: 27, scope: !7054)
!7122 = !DILocation(line: 965, column: 34, scope: !7054)
!7123 = !DILocation(line: 965, column: 3, scope: !7054)
!7124 = !DILocation(line: 965, column: 14, scope: !7054)
!7125 = !DILocation(line: 965, column: 25, scope: !7054)
!7126 = !DILocation(line: 966, column: 27, scope: !7054)
!7127 = !DILocation(line: 966, column: 34, scope: !7054)
!7128 = !DILocation(line: 966, column: 3, scope: !7054)
!7129 = !DILocation(line: 966, column: 14, scope: !7054)
!7130 = !DILocation(line: 966, column: 25, scope: !7054)
!7131 = !DILocation(line: 986, column: 32, scope: !7054)
!7132 = !DILocation(line: 986, column: 39, scope: !7054)
!7133 = !DILocation(line: 986, column: 3, scope: !7054)
!7134 = !DILocation(line: 986, column: 14, scope: !7054)
!7135 = !DILocation(line: 986, column: 30, scope: !7054)
!7136 = !DILocation(line: 988, column: 25, scope: !7137)
!7137 = distinct !DILexicalBlock(scope: !7054, file: !141, line: 988, column: 7)
!7138 = !DILocation(line: 988, column: 36, scope: !7137)
!7139 = !DILocation(line: 988, column: 7, scope: !7137)
!7140 = !DILocation(line: 988, column: 7, scope: !7054)
!7141 = !DILocation(line: 991, column: 13, scope: !7142)
!7142 = distinct !DILexicalBlock(scope: !7137, file: !141, line: 989, column: 5)
!7143 = !DILocation(line: 991, column: 20, scope: !7142)
!7144 = !DILocation(line: 991, column: 7, scope: !7142)
!7145 = !DILocation(line: 992, column: 23, scope: !7142)
!7146 = !DILocation(line: 992, column: 34, scope: !7142)
!7147 = !DILocation(line: 992, column: 7, scope: !7142)
!7148 = !DILocation(line: 992, column: 14, scope: !7142)
!7149 = !DILocation(line: 992, column: 21, scope: !7142)
!7150 = !DILocation(line: 993, column: 29, scope: !7142)
!7151 = !DILocation(line: 993, column: 40, scope: !7142)
!7152 = !DILocation(line: 993, column: 7, scope: !7142)
!7153 = !DILocation(line: 993, column: 14, scope: !7142)
!7154 = !DILocation(line: 993, column: 27, scope: !7142)
!7155 = !DILocation(line: 994, column: 26, scope: !7142)
!7156 = !DILocation(line: 994, column: 37, scope: !7142)
!7157 = !DILocation(line: 994, column: 7, scope: !7142)
!7158 = !DILocation(line: 994, column: 14, scope: !7142)
!7159 = !DILocation(line: 994, column: 24, scope: !7142)
!7160 = !DILocation(line: 995, column: 31, scope: !7142)
!7161 = !DILocation(line: 995, column: 42, scope: !7142)
!7162 = !DILocation(line: 995, column: 7, scope: !7142)
!7163 = !DILocation(line: 995, column: 14, scope: !7142)
!7164 = !DILocation(line: 995, column: 29, scope: !7142)
!7165 = !DILocation(line: 996, column: 32, scope: !7142)
!7166 = !DILocation(line: 996, column: 43, scope: !7142)
!7167 = !DILocation(line: 996, column: 7, scope: !7142)
!7168 = !DILocation(line: 996, column: 14, scope: !7142)
!7169 = !DILocation(line: 996, column: 30, scope: !7142)
!7170 = !DILocation(line: 998, column: 7, scope: !7142)
!7171 = !DILocation(line: 1014, column: 28, scope: !7054)
!7172 = !DILocation(line: 1014, column: 39, scope: !7054)
!7173 = !DILocation(line: 1014, column: 3, scope: !7054)
!7174 = !DILocation(line: 1014, column: 10, scope: !7054)
!7175 = !DILocation(line: 1014, column: 26, scope: !7054)
!7176 = !DILocation(line: 1015, column: 28, scope: !7177)
!7177 = distinct !DILexicalBlock(scope: !7054, file: !141, line: 1015, column: 7)
!7178 = !DILocation(line: 1015, column: 35, scope: !7177)
!7179 = !DILocation(line: 1015, column: 10, scope: !7177)
!7180 = !DILocation(line: 1016, column: 10, scope: !7177)
!7181 = !DILocation(line: 1016, column: 31, scope: !7177)
!7182 = !DILocation(line: 1016, column: 38, scope: !7177)
!7183 = !DILocation(line: 1016, column: 13, scope: !7177)
!7184 = !DILocation(line: 1015, column: 7, scope: !7054)
!7185 = !DILocation(line: 1017, column: 5, scope: !7177)
!7186 = !DILocation(line: 1019, column: 9, scope: !7054)
!7187 = !DILocation(line: 1019, column: 20, scope: !7054)
!7188 = !DILocation(line: 1019, column: 3, scope: !7054)
!7189 = !DILocation(line: 1020, column: 3, scope: !7054)
!7190 = !DILocation(line: 1021, column: 1, scope: !7054)
!7191 = distinct !DISubprogram(name: "transfer_entries", scope: !141, file: !141, line: 856, type: !7192, isLocal: true, isDefinition: true, scopeLine: 857, flags: DIFlagPrototyped, isOptimized: false, unit: !140, variables: !48)
!7192 = !DISubroutineType(types: !7193)
!7193 = !{!131, !6537, !6537, !131}
!7194 = !DILocalVariable(name: "dst", arg: 1, scope: !7191, file: !141, line: 856, type: !6537)
!7195 = !DILocation(line: 856, column: 31, scope: !7191)
!7196 = !DILocalVariable(name: "src", arg: 2, scope: !7191, file: !141, line: 856, type: !6537)
!7197 = !DILocation(line: 856, column: 48, scope: !7191)
!7198 = !DILocalVariable(name: "safe", arg: 3, scope: !7191, file: !141, line: 856, type: !131)
!7199 = !DILocation(line: 856, column: 58, scope: !7191)
!7200 = !DILocalVariable(name: "bucket", scope: !7191, file: !141, line: 858, type: !5952)
!7201 = !DILocation(line: 858, column: 22, scope: !7191)
!7202 = !DILocalVariable(name: "cursor", scope: !7191, file: !141, line: 859, type: !5952)
!7203 = !DILocation(line: 859, column: 22, scope: !7191)
!7204 = !DILocalVariable(name: "next", scope: !7191, file: !141, line: 860, type: !5952)
!7205 = !DILocation(line: 860, column: 22, scope: !7191)
!7206 = !DILocation(line: 861, column: 17, scope: !7207)
!7207 = distinct !DILexicalBlock(scope: !7191, file: !141, line: 861, column: 3)
!7208 = !DILocation(line: 861, column: 22, scope: !7207)
!7209 = !DILocation(line: 861, column: 15, scope: !7207)
!7210 = !DILocation(line: 861, column: 8, scope: !7207)
!7211 = !DILocation(line: 861, column: 30, scope: !7212)
!7212 = distinct !DILexicalBlock(scope: !7207, file: !141, line: 861, column: 3)
!7213 = !DILocation(line: 861, column: 39, scope: !7212)
!7214 = !DILocation(line: 861, column: 44, scope: !7212)
!7215 = !DILocation(line: 861, column: 37, scope: !7212)
!7216 = !DILocation(line: 861, column: 3, scope: !7207)
!7217 = !DILocation(line: 862, column: 9, scope: !7218)
!7218 = distinct !DILexicalBlock(scope: !7212, file: !141, line: 862, column: 9)
!7219 = !DILocation(line: 862, column: 17, scope: !7218)
!7220 = !DILocation(line: 862, column: 9, scope: !7212)
!7221 = !DILocalVariable(name: "data", scope: !7222, file: !141, line: 864, type: !39)
!7222 = distinct !DILexicalBlock(scope: !7218, file: !141, line: 863, column: 7)
!7223 = !DILocation(line: 864, column: 15, scope: !7222)
!7224 = !DILocalVariable(name: "new_bucket", scope: !7222, file: !141, line: 865, type: !5952)
!7225 = !DILocation(line: 865, column: 28, scope: !7222)
!7226 = !DILocation(line: 873, column: 23, scope: !7227)
!7227 = distinct !DILexicalBlock(scope: !7222, file: !141, line: 873, column: 9)
!7228 = !DILocation(line: 873, column: 31, scope: !7227)
!7229 = !DILocation(line: 873, column: 21, scope: !7227)
!7230 = !DILocation(line: 873, column: 14, scope: !7227)
!7231 = !DILocation(line: 873, column: 37, scope: !7232)
!7232 = distinct !DILexicalBlock(scope: !7227, file: !141, line: 873, column: 9)
!7233 = !DILocation(line: 873, column: 9, scope: !7227)
!7234 = !DILocation(line: 875, column: 20, scope: !7235)
!7235 = distinct !DILexicalBlock(scope: !7232, file: !141, line: 874, column: 11)
!7236 = !DILocation(line: 875, column: 28, scope: !7235)
!7237 = !DILocation(line: 875, column: 18, scope: !7235)
!7238 = !DILocation(line: 876, column: 27, scope: !7235)
!7239 = !DILocation(line: 876, column: 32, scope: !7235)
!7240 = !DILocation(line: 876, column: 41, scope: !7235)
!7241 = !DILocation(line: 876, column: 46, scope: !7235)
!7242 = !DILocation(line: 876, column: 54, scope: !7235)
!7243 = !DILocation(line: 876, column: 60, scope: !7235)
!7244 = !DILocation(line: 876, column: 65, scope: !7235)
!7245 = !DILocation(line: 876, column: 39, scope: !7235)
!7246 = !DILocation(line: 876, column: 24, scope: !7235)
!7247 = !DILocation(line: 878, column: 20, scope: !7248)
!7248 = distinct !DILexicalBlock(scope: !7235, file: !141, line: 878, column: 17)
!7249 = !DILocation(line: 878, column: 33, scope: !7248)
!7250 = !DILocation(line: 878, column: 38, scope: !7248)
!7251 = !DILocation(line: 878, column: 31, scope: !7248)
!7252 = !DILocation(line: 878, column: 17, scope: !7235)
!7253 = !DILocation(line: 879, column: 15, scope: !7248)
!7254 = !DILocation(line: 881, column: 20, scope: !7235)
!7255 = !DILocation(line: 881, column: 28, scope: !7235)
!7256 = !DILocation(line: 881, column: 18, scope: !7235)
!7257 = !DILocation(line: 883, column: 17, scope: !7258)
!7258 = distinct !DILexicalBlock(scope: !7235, file: !141, line: 883, column: 17)
!7259 = !DILocation(line: 883, column: 29, scope: !7258)
!7260 = !DILocation(line: 883, column: 17, scope: !7235)
!7261 = !DILocation(line: 887, column: 32, scope: !7262)
!7262 = distinct !DILexicalBlock(scope: !7258, file: !141, line: 884, column: 15)
!7263 = !DILocation(line: 887, column: 44, scope: !7262)
!7264 = !DILocation(line: 887, column: 17, scope: !7262)
!7265 = !DILocation(line: 887, column: 25, scope: !7262)
!7266 = !DILocation(line: 887, column: 30, scope: !7262)
!7267 = !DILocation(line: 888, column: 36, scope: !7262)
!7268 = !DILocation(line: 888, column: 17, scope: !7262)
!7269 = !DILocation(line: 888, column: 29, scope: !7262)
!7270 = !DILocation(line: 888, column: 34, scope: !7262)
!7271 = !DILocation(line: 889, column: 15, scope: !7262)
!7272 = !DILocation(line: 894, column: 36, scope: !7273)
!7273 = distinct !DILexicalBlock(scope: !7258, file: !141, line: 891, column: 15)
!7274 = !DILocation(line: 894, column: 17, scope: !7273)
!7275 = !DILocation(line: 894, column: 29, scope: !7273)
!7276 = !DILocation(line: 894, column: 34, scope: !7273)
!7277 = !DILocation(line: 895, column: 17, scope: !7273)
!7278 = !DILocation(line: 895, column: 22, scope: !7273)
!7279 = !DILocation(line: 895, column: 36, scope: !7273)
!7280 = !DILocation(line: 896, column: 29, scope: !7273)
!7281 = !DILocation(line: 896, column: 34, scope: !7273)
!7282 = !DILocation(line: 896, column: 17, scope: !7273)
!7283 = !DILocation(line: 898, column: 11, scope: !7235)
!7284 = !DILocation(line: 873, column: 54, scope: !7232)
!7285 = !DILocation(line: 873, column: 52, scope: !7232)
!7286 = !DILocation(line: 873, column: 9, scope: !7232)
!7287 = distinct !{!7287, !7233, !7288}
!7288 = !DILocation(line: 898, column: 11, scope: !7227)
!7289 = !DILocation(line: 902, column: 16, scope: !7222)
!7290 = !DILocation(line: 902, column: 24, scope: !7222)
!7291 = !DILocation(line: 902, column: 14, scope: !7222)
!7292 = !DILocation(line: 903, column: 9, scope: !7222)
!7293 = !DILocation(line: 903, column: 17, scope: !7222)
!7294 = !DILocation(line: 903, column: 22, scope: !7222)
!7295 = !DILocation(line: 904, column: 13, scope: !7296)
!7296 = distinct !DILexicalBlock(scope: !7222, file: !141, line: 904, column: 13)
!7297 = !DILocation(line: 904, column: 13, scope: !7222)
!7298 = !DILocation(line: 905, column: 11, scope: !7296)
!7299 = !DILocation(line: 906, column: 23, scope: !7222)
!7300 = !DILocation(line: 906, column: 28, scope: !7222)
!7301 = !DILocation(line: 906, column: 37, scope: !7222)
!7302 = !DILocation(line: 906, column: 42, scope: !7222)
!7303 = !DILocation(line: 906, column: 50, scope: !7222)
!7304 = !DILocation(line: 906, column: 56, scope: !7222)
!7305 = !DILocation(line: 906, column: 61, scope: !7222)
!7306 = !DILocation(line: 906, column: 35, scope: !7222)
!7307 = !DILocation(line: 906, column: 20, scope: !7222)
!7308 = !DILocation(line: 908, column: 16, scope: !7309)
!7309 = distinct !DILexicalBlock(scope: !7222, file: !141, line: 908, column: 13)
!7310 = !DILocation(line: 908, column: 29, scope: !7309)
!7311 = !DILocation(line: 908, column: 34, scope: !7309)
!7312 = !DILocation(line: 908, column: 27, scope: !7309)
!7313 = !DILocation(line: 908, column: 13, scope: !7222)
!7314 = !DILocation(line: 909, column: 11, scope: !7309)
!7315 = !DILocation(line: 911, column: 13, scope: !7316)
!7316 = distinct !DILexicalBlock(scope: !7222, file: !141, line: 911, column: 13)
!7317 = !DILocation(line: 911, column: 25, scope: !7316)
!7318 = !DILocation(line: 911, column: 13, scope: !7222)
!7319 = !DILocalVariable(name: "new_entry", scope: !7320, file: !141, line: 915, type: !5952)
!7320 = distinct !DILexicalBlock(scope: !7316, file: !141, line: 912, column: 11)
!7321 = !DILocation(line: 915, column: 32, scope: !7320)
!7322 = !DILocation(line: 915, column: 60, scope: !7320)
!7323 = !DILocation(line: 915, column: 44, scope: !7320)
!7324 = !DILocation(line: 917, column: 17, scope: !7325)
!7325 = distinct !DILexicalBlock(scope: !7320, file: !141, line: 917, column: 17)
!7326 = !DILocation(line: 917, column: 27, scope: !7325)
!7327 = !DILocation(line: 917, column: 17, scope: !7320)
!7328 = !DILocation(line: 918, column: 15, scope: !7325)
!7329 = !DILocation(line: 920, column: 31, scope: !7320)
!7330 = !DILocation(line: 920, column: 13, scope: !7320)
!7331 = !DILocation(line: 920, column: 24, scope: !7320)
!7332 = !DILocation(line: 920, column: 29, scope: !7320)
!7333 = !DILocation(line: 921, column: 31, scope: !7320)
!7334 = !DILocation(line: 921, column: 43, scope: !7320)
!7335 = !DILocation(line: 921, column: 13, scope: !7320)
!7336 = !DILocation(line: 921, column: 24, scope: !7320)
!7337 = !DILocation(line: 921, column: 29, scope: !7320)
!7338 = !DILocation(line: 922, column: 32, scope: !7320)
!7339 = !DILocation(line: 922, column: 13, scope: !7320)
!7340 = !DILocation(line: 922, column: 25, scope: !7320)
!7341 = !DILocation(line: 922, column: 30, scope: !7320)
!7342 = !DILocation(line: 923, column: 11, scope: !7320)
!7343 = !DILocation(line: 927, column: 32, scope: !7344)
!7344 = distinct !DILexicalBlock(scope: !7316, file: !141, line: 925, column: 11)
!7345 = !DILocation(line: 927, column: 13, scope: !7344)
!7346 = !DILocation(line: 927, column: 25, scope: !7344)
!7347 = !DILocation(line: 927, column: 30, scope: !7344)
!7348 = !DILocation(line: 928, column: 13, scope: !7344)
!7349 = !DILocation(line: 928, column: 18, scope: !7344)
!7350 = !DILocation(line: 928, column: 32, scope: !7344)
!7351 = !DILocation(line: 930, column: 9, scope: !7222)
!7352 = !DILocation(line: 930, column: 17, scope: !7222)
!7353 = !DILocation(line: 930, column: 22, scope: !7222)
!7354 = !DILocation(line: 931, column: 9, scope: !7222)
!7355 = !DILocation(line: 931, column: 14, scope: !7222)
!7356 = !DILocation(line: 931, column: 28, scope: !7222)
!7357 = !DILocation(line: 932, column: 7, scope: !7222)
!7358 = !DILocation(line: 861, column: 64, scope: !7212)
!7359 = !DILocation(line: 861, column: 3, scope: !7212)
!7360 = distinct !{!7360, !7216, !7361}
!7361 = !DILocation(line: 932, column: 7, scope: !7207)
!7362 = !DILocation(line: 933, column: 3, scope: !7191)
!7363 = !DILocation(line: 934, column: 1, scope: !7191)
!7364 = distinct !DISubprogram(name: "free_entry", scope: !141, file: !141, line: 768, type: !7365, isLocal: true, isDefinition: true, scopeLine: 769, flags: DIFlagPrototyped, isOptimized: false, unit: !140, variables: !48)
!7365 = !DISubroutineType(types: !7366)
!7366 = !{null, !6537, !5952}
!7367 = !DILocalVariable(name: "table", arg: 1, scope: !7364, file: !141, line: 768, type: !6537)
!7368 = !DILocation(line: 768, column: 25, scope: !7364)
!7369 = !DILocalVariable(name: "entry", arg: 2, scope: !7364, file: !141, line: 768, type: !5952)
!7370 = !DILocation(line: 768, column: 51, scope: !7364)
!7371 = !DILocation(line: 770, column: 3, scope: !7364)
!7372 = !DILocation(line: 770, column: 10, scope: !7364)
!7373 = !DILocation(line: 770, column: 15, scope: !7364)
!7374 = !DILocation(line: 771, column: 17, scope: !7364)
!7375 = !DILocation(line: 771, column: 24, scope: !7364)
!7376 = !DILocation(line: 771, column: 3, scope: !7364)
!7377 = !DILocation(line: 771, column: 10, scope: !7364)
!7378 = !DILocation(line: 771, column: 15, scope: !7364)
!7379 = !DILocation(line: 772, column: 28, scope: !7364)
!7380 = !DILocation(line: 772, column: 3, scope: !7364)
!7381 = !DILocation(line: 772, column: 10, scope: !7364)
!7382 = !DILocation(line: 772, column: 26, scope: !7364)
!7383 = !DILocation(line: 773, column: 1, scope: !7364)
!7384 = distinct !DISubprogram(name: "allocate_entry", scope: !141, file: !141, line: 743, type: !7385, isLocal: true, isDefinition: true, scopeLine: 744, flags: DIFlagPrototyped, isOptimized: false, unit: !140, variables: !48)
!7385 = !DISubroutineType(types: !7386)
!7386 = !{!5952, !6537}
!7387 = !DILocalVariable(name: "table", arg: 1, scope: !7384, file: !141, line: 743, type: !6537)
!7388 = !DILocation(line: 743, column: 29, scope: !7384)
!7389 = !DILocalVariable(name: "new", scope: !7384, file: !141, line: 745, type: !5952)
!7390 = !DILocation(line: 745, column: 22, scope: !7384)
!7391 = !DILocation(line: 747, column: 7, scope: !7392)
!7392 = distinct !DILexicalBlock(scope: !7384, file: !141, line: 747, column: 7)
!7393 = !DILocation(line: 747, column: 14, scope: !7392)
!7394 = !DILocation(line: 747, column: 7, scope: !7384)
!7395 = !DILocation(line: 749, column: 13, scope: !7396)
!7396 = distinct !DILexicalBlock(scope: !7392, file: !141, line: 748, column: 5)
!7397 = !DILocation(line: 749, column: 20, scope: !7396)
!7398 = !DILocation(line: 749, column: 11, scope: !7396)
!7399 = !DILocation(line: 750, column: 32, scope: !7396)
!7400 = !DILocation(line: 750, column: 37, scope: !7396)
!7401 = !DILocation(line: 750, column: 7, scope: !7396)
!7402 = !DILocation(line: 750, column: 14, scope: !7396)
!7403 = !DILocation(line: 750, column: 30, scope: !7396)
!7404 = !DILocation(line: 751, column: 5, scope: !7396)
!7405 = !DILocation(line: 757, column: 13, scope: !7406)
!7406 = distinct !DILexicalBlock(scope: !7392, file: !141, line: 753, column: 5)
!7407 = !DILocation(line: 757, column: 11, scope: !7406)
!7408 = !DILocation(line: 761, column: 10, scope: !7384)
!7409 = !DILocation(line: 761, column: 3, scope: !7384)
!7410 = distinct !DISubprogram(name: "hash_insert", scope: !141, file: !141, line: 1030, type: !7411, isLocal: false, isDefinition: true, scopeLine: 1031, flags: DIFlagPrototyped, isOptimized: false, unit: !140, variables: !48)
!7411 = !DISubroutineType(types: !7412)
!7412 = !{!39, !6537, !436}
!7413 = !DILocalVariable(name: "table", arg: 1, scope: !7410, file: !141, line: 1030, type: !6537)
!7414 = !DILocation(line: 1030, column: 26, scope: !7410)
!7415 = !DILocalVariable(name: "entry", arg: 2, scope: !7410, file: !141, line: 1030, type: !436)
!7416 = !DILocation(line: 1030, column: 45, scope: !7410)
!7417 = !DILocalVariable(name: "data", scope: !7410, file: !141, line: 1032, type: !39)
!7418 = !DILocation(line: 1032, column: 9, scope: !7410)
!7419 = !DILocalVariable(name: "bucket", scope: !7410, file: !141, line: 1033, type: !5952)
!7420 = !DILocation(line: 1033, column: 22, scope: !7410)
!7421 = !DILocation(line: 1036, column: 9, scope: !7422)
!7422 = distinct !DILexicalBlock(scope: !7410, file: !141, line: 1036, column: 7)
!7423 = !DILocation(line: 1036, column: 7, scope: !7410)
!7424 = !DILocation(line: 1037, column: 5, scope: !7422)
!7425 = !DILocation(line: 1040, column: 32, scope: !7426)
!7426 = distinct !DILexicalBlock(scope: !7410, file: !141, line: 1040, column: 7)
!7427 = !DILocation(line: 1040, column: 39, scope: !7426)
!7428 = !DILocation(line: 1040, column: 15, scope: !7426)
!7429 = !DILocation(line: 1040, column: 13, scope: !7426)
!7430 = !DILocation(line: 1040, column: 63, scope: !7426)
!7431 = !DILocation(line: 1040, column: 7, scope: !7410)
!7432 = !DILocation(line: 1041, column: 12, scope: !7426)
!7433 = !DILocation(line: 1041, column: 5, scope: !7426)
!7434 = !DILocation(line: 1048, column: 7, scope: !7435)
!7435 = distinct !DILexicalBlock(scope: !7410, file: !141, line: 1048, column: 7)
!7436 = !DILocation(line: 1048, column: 14, scope: !7435)
!7437 = !DILocation(line: 1049, column: 9, scope: !7435)
!7438 = !DILocation(line: 1049, column: 16, scope: !7435)
!7439 = !DILocation(line: 1049, column: 24, scope: !7435)
!7440 = !DILocation(line: 1049, column: 43, scope: !7435)
!7441 = !DILocation(line: 1049, column: 50, scope: !7435)
!7442 = !DILocation(line: 1049, column: 41, scope: !7435)
!7443 = !DILocation(line: 1049, column: 7, scope: !7435)
!7444 = !DILocation(line: 1048, column: 7, scope: !7410)
!7445 = !DILocation(line: 1053, column: 21, scope: !7446)
!7446 = distinct !DILexicalBlock(scope: !7435, file: !141, line: 1050, column: 5)
!7447 = !DILocation(line: 1053, column: 7, scope: !7446)
!7448 = !DILocation(line: 1054, column: 11, scope: !7449)
!7449 = distinct !DILexicalBlock(scope: !7446, file: !141, line: 1054, column: 11)
!7450 = !DILocation(line: 1054, column: 18, scope: !7449)
!7451 = !DILocation(line: 1055, column: 13, scope: !7449)
!7452 = !DILocation(line: 1055, column: 20, scope: !7449)
!7453 = !DILocation(line: 1055, column: 28, scope: !7449)
!7454 = !DILocation(line: 1055, column: 47, scope: !7449)
!7455 = !DILocation(line: 1055, column: 54, scope: !7449)
!7456 = !DILocation(line: 1055, column: 45, scope: !7449)
!7457 = !DILocation(line: 1055, column: 11, scope: !7449)
!7458 = !DILocation(line: 1054, column: 11, scope: !7446)
!7459 = !DILocalVariable(name: "tuning", scope: !7460, file: !141, line: 1057, type: !5964)
!7460 = distinct !DILexicalBlock(scope: !7449, file: !141, line: 1056, column: 9)
!7461 = !DILocation(line: 1057, column: 30, scope: !7460)
!7462 = !DILocation(line: 1057, column: 39, scope: !7460)
!7463 = !DILocation(line: 1057, column: 46, scope: !7460)
!7464 = !DILocalVariable(name: "candidate", scope: !7460, file: !141, line: 1058, type: !152)
!7465 = !DILocation(line: 1058, column: 17, scope: !7460)
!7466 = !DILocation(line: 1059, column: 14, scope: !7460)
!7467 = !DILocation(line: 1059, column: 22, scope: !7460)
!7468 = !DILocation(line: 1060, column: 17, scope: !7460)
!7469 = !DILocation(line: 1060, column: 24, scope: !7460)
!7470 = !DILocation(line: 1060, column: 36, scope: !7460)
!7471 = !DILocation(line: 1060, column: 44, scope: !7460)
!7472 = !DILocation(line: 1060, column: 34, scope: !7460)
!7473 = !DILocation(line: 1061, column: 17, scope: !7460)
!7474 = !DILocation(line: 1061, column: 24, scope: !7460)
!7475 = !DILocation(line: 1061, column: 36, scope: !7460)
!7476 = !DILocation(line: 1061, column: 44, scope: !7460)
!7477 = !DILocation(line: 1061, column: 34, scope: !7460)
!7478 = !DILocation(line: 1062, column: 19, scope: !7460)
!7479 = !DILocation(line: 1062, column: 27, scope: !7460)
!7480 = !DILocation(line: 1062, column: 17, scope: !7460)
!7481 = !DILocation(line: 1064, column: 27, scope: !7482)
!7482 = distinct !DILexicalBlock(scope: !7460, file: !141, line: 1064, column: 15)
!7483 = !DILocation(line: 1064, column: 24, scope: !7482)
!7484 = !DILocation(line: 1064, column: 15, scope: !7460)
!7485 = !DILocation(line: 1065, column: 13, scope: !7482)
!7486 = !DILocation(line: 1068, column: 29, scope: !7487)
!7487 = distinct !DILexicalBlock(scope: !7460, file: !141, line: 1068, column: 15)
!7488 = !DILocation(line: 1068, column: 36, scope: !7487)
!7489 = !DILocation(line: 1068, column: 16, scope: !7487)
!7490 = !DILocation(line: 1068, column: 15, scope: !7460)
!7491 = !DILocation(line: 1069, column: 13, scope: !7487)
!7492 = !DILocation(line: 1072, column: 32, scope: !7493)
!7493 = distinct !DILexicalBlock(scope: !7460, file: !141, line: 1072, column: 15)
!7494 = !DILocation(line: 1072, column: 39, scope: !7493)
!7495 = !DILocation(line: 1072, column: 15, scope: !7493)
!7496 = !DILocation(line: 1072, column: 62, scope: !7493)
!7497 = !DILocation(line: 1072, column: 15, scope: !7460)
!7498 = !DILocation(line: 1073, column: 13, scope: !7493)
!7499 = !DILocation(line: 1074, column: 9, scope: !7460)
!7500 = !DILocation(line: 1075, column: 5, scope: !7446)
!7501 = !DILocation(line: 1079, column: 7, scope: !7502)
!7502 = distinct !DILexicalBlock(scope: !7410, file: !141, line: 1079, column: 7)
!7503 = !DILocation(line: 1079, column: 15, scope: !7502)
!7504 = !DILocation(line: 1079, column: 7, scope: !7410)
!7505 = !DILocalVariable(name: "new_entry", scope: !7506, file: !141, line: 1081, type: !5952)
!7506 = distinct !DILexicalBlock(scope: !7502, file: !141, line: 1080, column: 5)
!7507 = !DILocation(line: 1081, column: 26, scope: !7506)
!7508 = !DILocation(line: 1081, column: 54, scope: !7506)
!7509 = !DILocation(line: 1081, column: 38, scope: !7506)
!7510 = !DILocation(line: 1083, column: 11, scope: !7511)
!7511 = distinct !DILexicalBlock(scope: !7506, file: !141, line: 1083, column: 11)
!7512 = !DILocation(line: 1083, column: 21, scope: !7511)
!7513 = !DILocation(line: 1083, column: 11, scope: !7506)
!7514 = !DILocation(line: 1084, column: 9, scope: !7511)
!7515 = !DILocation(line: 1088, column: 34, scope: !7506)
!7516 = !DILocation(line: 1088, column: 7, scope: !7506)
!7517 = !DILocation(line: 1088, column: 18, scope: !7506)
!7518 = !DILocation(line: 1088, column: 23, scope: !7506)
!7519 = !DILocation(line: 1089, column: 25, scope: !7506)
!7520 = !DILocation(line: 1089, column: 33, scope: !7506)
!7521 = !DILocation(line: 1089, column: 7, scope: !7506)
!7522 = !DILocation(line: 1089, column: 18, scope: !7506)
!7523 = !DILocation(line: 1089, column: 23, scope: !7506)
!7524 = !DILocation(line: 1090, column: 22, scope: !7506)
!7525 = !DILocation(line: 1090, column: 7, scope: !7506)
!7526 = !DILocation(line: 1090, column: 15, scope: !7506)
!7527 = !DILocation(line: 1090, column: 20, scope: !7506)
!7528 = !DILocation(line: 1091, column: 7, scope: !7506)
!7529 = !DILocation(line: 1091, column: 14, scope: !7506)
!7530 = !DILocation(line: 1091, column: 23, scope: !7506)
!7531 = !DILocation(line: 1092, column: 23, scope: !7506)
!7532 = !DILocation(line: 1092, column: 7, scope: !7506)
!7533 = !DILocation(line: 1097, column: 27, scope: !7410)
!7534 = !DILocation(line: 1097, column: 3, scope: !7410)
!7535 = !DILocation(line: 1097, column: 11, scope: !7410)
!7536 = !DILocation(line: 1097, column: 16, scope: !7410)
!7537 = !DILocation(line: 1098, column: 3, scope: !7410)
!7538 = !DILocation(line: 1098, column: 10, scope: !7410)
!7539 = !DILocation(line: 1098, column: 19, scope: !7410)
!7540 = !DILocation(line: 1099, column: 3, scope: !7410)
!7541 = !DILocation(line: 1099, column: 10, scope: !7410)
!7542 = !DILocation(line: 1099, column: 24, scope: !7410)
!7543 = !DILocation(line: 1101, column: 19, scope: !7410)
!7544 = !DILocation(line: 1101, column: 3, scope: !7410)
!7545 = !DILocation(line: 1102, column: 1, scope: !7410)
!7546 = distinct !DISubprogram(name: "hash_find_entry", scope: !141, file: !141, line: 782, type: !7547, isLocal: true, isDefinition: true, scopeLine: 784, flags: DIFlagPrototyped, isOptimized: false, unit: !140, variables: !48)
!7547 = !DISubroutineType(types: !7548)
!7548 = !{!39, !6537, !436, !7549, !131}
!7549 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5952, size: 64)
!7550 = !DILocalVariable(name: "table", arg: 1, scope: !7546, file: !141, line: 782, type: !6537)
!7551 = !DILocation(line: 782, column: 30, scope: !7546)
!7552 = !DILocalVariable(name: "entry", arg: 2, scope: !7546, file: !141, line: 782, type: !436)
!7553 = !DILocation(line: 782, column: 49, scope: !7546)
!7554 = !DILocalVariable(name: "bucket_head", arg: 3, scope: !7546, file: !141, line: 783, type: !7549)
!7555 = !DILocation(line: 783, column: 38, scope: !7546)
!7556 = !DILocalVariable(name: "delete", arg: 4, scope: !7546, file: !141, line: 783, type: !131)
!7557 = !DILocation(line: 783, column: 56, scope: !7546)
!7558 = !DILocalVariable(name: "bucket", scope: !7546, file: !141, line: 785, type: !5952)
!7559 = !DILocation(line: 785, column: 22, scope: !7546)
!7560 = !DILocation(line: 786, column: 7, scope: !7546)
!7561 = !DILocation(line: 786, column: 14, scope: !7546)
!7562 = !DILocation(line: 786, column: 23, scope: !7546)
!7563 = !DILocation(line: 786, column: 30, scope: !7546)
!7564 = !DILocation(line: 786, column: 38, scope: !7546)
!7565 = !DILocation(line: 786, column: 45, scope: !7546)
!7566 = !DILocation(line: 786, column: 52, scope: !7546)
!7567 = !DILocation(line: 786, column: 21, scope: !7546)
!7568 = !DILocalVariable(name: "cursor", scope: !7546, file: !141, line: 787, type: !5952)
!7569 = !DILocation(line: 787, column: 22, scope: !7546)
!7570 = !DILocation(line: 789, column: 10, scope: !7571)
!7571 = distinct !DILexicalBlock(scope: !7546, file: !141, line: 789, column: 7)
!7572 = !DILocation(line: 789, column: 19, scope: !7571)
!7573 = !DILocation(line: 789, column: 26, scope: !7571)
!7574 = !DILocation(line: 789, column: 17, scope: !7571)
!7575 = !DILocation(line: 789, column: 7, scope: !7546)
!7576 = !DILocation(line: 790, column: 5, scope: !7571)
!7577 = !DILocation(line: 792, column: 18, scope: !7546)
!7578 = !DILocation(line: 792, column: 4, scope: !7546)
!7579 = !DILocation(line: 792, column: 16, scope: !7546)
!7580 = !DILocation(line: 795, column: 7, scope: !7581)
!7581 = distinct !DILexicalBlock(scope: !7546, file: !141, line: 795, column: 7)
!7582 = !DILocation(line: 795, column: 15, scope: !7581)
!7583 = !DILocation(line: 795, column: 20, scope: !7581)
!7584 = !DILocation(line: 795, column: 7, scope: !7546)
!7585 = !DILocation(line: 796, column: 5, scope: !7581)
!7586 = !DILocation(line: 799, column: 7, scope: !7587)
!7587 = distinct !DILexicalBlock(scope: !7546, file: !141, line: 799, column: 7)
!7588 = !DILocation(line: 799, column: 16, scope: !7587)
!7589 = !DILocation(line: 799, column: 24, scope: !7587)
!7590 = !DILocation(line: 799, column: 13, scope: !7587)
!7591 = !DILocation(line: 799, column: 29, scope: !7587)
!7592 = !DILocation(line: 799, column: 32, scope: !7587)
!7593 = !DILocation(line: 799, column: 39, scope: !7587)
!7594 = !DILocation(line: 799, column: 51, scope: !7587)
!7595 = !DILocation(line: 799, column: 58, scope: !7587)
!7596 = !DILocation(line: 799, column: 66, scope: !7587)
!7597 = !DILocation(line: 799, column: 7, scope: !7546)
!7598 = !DILocalVariable(name: "data", scope: !7599, file: !141, line: 801, type: !39)
!7599 = distinct !DILexicalBlock(scope: !7587, file: !141, line: 800, column: 5)
!7600 = !DILocation(line: 801, column: 13, scope: !7599)
!7601 = !DILocation(line: 801, column: 20, scope: !7599)
!7602 = !DILocation(line: 801, column: 28, scope: !7599)
!7603 = !DILocation(line: 803, column: 11, scope: !7604)
!7604 = distinct !DILexicalBlock(scope: !7599, file: !141, line: 803, column: 11)
!7605 = !DILocation(line: 803, column: 11, scope: !7599)
!7606 = !DILocation(line: 805, column: 15, scope: !7607)
!7607 = distinct !DILexicalBlock(scope: !7608, file: !141, line: 805, column: 15)
!7608 = distinct !DILexicalBlock(scope: !7604, file: !141, line: 804, column: 9)
!7609 = !DILocation(line: 805, column: 23, scope: !7607)
!7610 = !DILocation(line: 805, column: 15, scope: !7608)
!7611 = !DILocalVariable(name: "next", scope: !7612, file: !141, line: 807, type: !5952)
!7612 = distinct !DILexicalBlock(scope: !7607, file: !141, line: 806, column: 13)
!7613 = !DILocation(line: 807, column: 34, scope: !7612)
!7614 = !DILocation(line: 807, column: 41, scope: !7612)
!7615 = !DILocation(line: 807, column: 49, scope: !7612)
!7616 = !DILocation(line: 811, column: 16, scope: !7612)
!7617 = !DILocation(line: 811, column: 26, scope: !7612)
!7618 = !DILocation(line: 811, column: 25, scope: !7612)
!7619 = !DILocation(line: 812, column: 27, scope: !7612)
!7620 = !DILocation(line: 812, column: 34, scope: !7612)
!7621 = !DILocation(line: 812, column: 15, scope: !7612)
!7622 = !DILocation(line: 813, column: 13, scope: !7612)
!7623 = !DILocation(line: 816, column: 15, scope: !7624)
!7624 = distinct !DILexicalBlock(scope: !7607, file: !141, line: 815, column: 13)
!7625 = !DILocation(line: 816, column: 23, scope: !7624)
!7626 = !DILocation(line: 816, column: 28, scope: !7624)
!7627 = !DILocation(line: 818, column: 9, scope: !7608)
!7628 = !DILocation(line: 820, column: 14, scope: !7599)
!7629 = !DILocation(line: 820, column: 7, scope: !7599)
!7630 = !DILocation(line: 824, column: 17, scope: !7631)
!7631 = distinct !DILexicalBlock(scope: !7546, file: !141, line: 824, column: 3)
!7632 = !DILocation(line: 824, column: 15, scope: !7631)
!7633 = !DILocation(line: 824, column: 8, scope: !7631)
!7634 = !DILocation(line: 824, column: 25, scope: !7635)
!7635 = distinct !DILexicalBlock(scope: !7631, file: !141, line: 824, column: 3)
!7636 = !DILocation(line: 824, column: 33, scope: !7635)
!7637 = !DILocation(line: 824, column: 3, scope: !7631)
!7638 = !DILocation(line: 826, column: 11, scope: !7639)
!7639 = distinct !DILexicalBlock(scope: !7640, file: !141, line: 826, column: 11)
!7640 = distinct !DILexicalBlock(scope: !7635, file: !141, line: 825, column: 5)
!7641 = !DILocation(line: 826, column: 20, scope: !7639)
!7642 = !DILocation(line: 826, column: 28, scope: !7639)
!7643 = !DILocation(line: 826, column: 34, scope: !7639)
!7644 = !DILocation(line: 826, column: 17, scope: !7639)
!7645 = !DILocation(line: 827, column: 11, scope: !7639)
!7646 = !DILocation(line: 827, column: 14, scope: !7639)
!7647 = !DILocation(line: 827, column: 21, scope: !7639)
!7648 = !DILocation(line: 827, column: 33, scope: !7639)
!7649 = !DILocation(line: 827, column: 40, scope: !7639)
!7650 = !DILocation(line: 827, column: 48, scope: !7639)
!7651 = !DILocation(line: 827, column: 54, scope: !7639)
!7652 = !DILocation(line: 826, column: 11, scope: !7640)
!7653 = !DILocalVariable(name: "data", scope: !7654, file: !141, line: 829, type: !39)
!7654 = distinct !DILexicalBlock(scope: !7639, file: !141, line: 828, column: 9)
!7655 = !DILocation(line: 829, column: 17, scope: !7654)
!7656 = !DILocation(line: 829, column: 24, scope: !7654)
!7657 = !DILocation(line: 829, column: 32, scope: !7654)
!7658 = !DILocation(line: 829, column: 38, scope: !7654)
!7659 = !DILocation(line: 831, column: 15, scope: !7660)
!7660 = distinct !DILexicalBlock(scope: !7654, file: !141, line: 831, column: 15)
!7661 = !DILocation(line: 831, column: 15, scope: !7654)
!7662 = !DILocalVariable(name: "next", scope: !7663, file: !141, line: 833, type: !5952)
!7663 = distinct !DILexicalBlock(scope: !7660, file: !141, line: 832, column: 13)
!7664 = !DILocation(line: 833, column: 34, scope: !7663)
!7665 = !DILocation(line: 833, column: 41, scope: !7663)
!7666 = !DILocation(line: 833, column: 49, scope: !7663)
!7667 = !DILocation(line: 837, column: 30, scope: !7663)
!7668 = !DILocation(line: 837, column: 36, scope: !7663)
!7669 = !DILocation(line: 837, column: 15, scope: !7663)
!7670 = !DILocation(line: 837, column: 23, scope: !7663)
!7671 = !DILocation(line: 837, column: 28, scope: !7663)
!7672 = !DILocation(line: 838, column: 27, scope: !7663)
!7673 = !DILocation(line: 838, column: 34, scope: !7663)
!7674 = !DILocation(line: 838, column: 15, scope: !7663)
!7675 = !DILocation(line: 839, column: 13, scope: !7663)
!7676 = !DILocation(line: 841, column: 18, scope: !7654)
!7677 = !DILocation(line: 841, column: 11, scope: !7654)
!7678 = !DILocation(line: 843, column: 5, scope: !7640)
!7679 = !DILocation(line: 824, column: 48, scope: !7635)
!7680 = !DILocation(line: 824, column: 56, scope: !7635)
!7681 = !DILocation(line: 824, column: 46, scope: !7635)
!7682 = !DILocation(line: 824, column: 3, scope: !7635)
!7683 = distinct !{!7683, !7637, !7684}
!7684 = !DILocation(line: 843, column: 5, scope: !7631)
!7685 = !DILocation(line: 846, column: 3, scope: !7546)
!7686 = !DILocation(line: 847, column: 1, scope: !7546)
!7687 = distinct !DISubprogram(name: "hash_delete", scope: !141, file: !141, line: 1109, type: !7411, isLocal: false, isDefinition: true, scopeLine: 1110, flags: DIFlagPrototyped, isOptimized: false, unit: !140, variables: !48)
!7688 = !DILocalVariable(name: "table", arg: 1, scope: !7687, file: !141, line: 1109, type: !6537)
!7689 = !DILocation(line: 1109, column: 26, scope: !7687)
!7690 = !DILocalVariable(name: "entry", arg: 2, scope: !7687, file: !141, line: 1109, type: !436)
!7691 = !DILocation(line: 1109, column: 45, scope: !7687)
!7692 = !DILocalVariable(name: "data", scope: !7687, file: !141, line: 1111, type: !39)
!7693 = !DILocation(line: 1111, column: 9, scope: !7687)
!7694 = !DILocalVariable(name: "bucket", scope: !7687, file: !141, line: 1112, type: !5952)
!7695 = !DILocation(line: 1112, column: 22, scope: !7687)
!7696 = !DILocation(line: 1114, column: 27, scope: !7687)
!7697 = !DILocation(line: 1114, column: 34, scope: !7687)
!7698 = !DILocation(line: 1114, column: 10, scope: !7687)
!7699 = !DILocation(line: 1114, column: 8, scope: !7687)
!7700 = !DILocation(line: 1115, column: 8, scope: !7701)
!7701 = distinct !DILexicalBlock(scope: !7687, file: !141, line: 1115, column: 7)
!7702 = !DILocation(line: 1115, column: 7, scope: !7687)
!7703 = !DILocation(line: 1116, column: 5, scope: !7701)
!7704 = !DILocation(line: 1118, column: 3, scope: !7687)
!7705 = !DILocation(line: 1118, column: 10, scope: !7687)
!7706 = !DILocation(line: 1118, column: 19, scope: !7687)
!7707 = !DILocation(line: 1119, column: 8, scope: !7708)
!7708 = distinct !DILexicalBlock(scope: !7687, file: !141, line: 1119, column: 7)
!7709 = !DILocation(line: 1119, column: 16, scope: !7708)
!7710 = !DILocation(line: 1119, column: 7, scope: !7687)
!7711 = !DILocation(line: 1121, column: 7, scope: !7712)
!7712 = distinct !DILexicalBlock(scope: !7708, file: !141, line: 1120, column: 5)
!7713 = !DILocation(line: 1121, column: 14, scope: !7712)
!7714 = !DILocation(line: 1121, column: 28, scope: !7712)
!7715 = !DILocation(line: 1126, column: 11, scope: !7716)
!7716 = distinct !DILexicalBlock(scope: !7712, file: !141, line: 1126, column: 11)
!7717 = !DILocation(line: 1126, column: 18, scope: !7716)
!7718 = !DILocation(line: 1127, column: 13, scope: !7716)
!7719 = !DILocation(line: 1127, column: 20, scope: !7716)
!7720 = !DILocation(line: 1127, column: 28, scope: !7716)
!7721 = !DILocation(line: 1127, column: 47, scope: !7716)
!7722 = !DILocation(line: 1127, column: 54, scope: !7716)
!7723 = !DILocation(line: 1127, column: 45, scope: !7716)
!7724 = !DILocation(line: 1127, column: 11, scope: !7716)
!7725 = !DILocation(line: 1126, column: 11, scope: !7712)
!7726 = !DILocation(line: 1131, column: 25, scope: !7727)
!7727 = distinct !DILexicalBlock(scope: !7716, file: !141, line: 1128, column: 9)
!7728 = !DILocation(line: 1131, column: 11, scope: !7727)
!7729 = !DILocation(line: 1132, column: 15, scope: !7730)
!7730 = distinct !DILexicalBlock(scope: !7727, file: !141, line: 1132, column: 15)
!7731 = !DILocation(line: 1132, column: 22, scope: !7730)
!7732 = !DILocation(line: 1133, column: 17, scope: !7730)
!7733 = !DILocation(line: 1133, column: 24, scope: !7730)
!7734 = !DILocation(line: 1133, column: 32, scope: !7730)
!7735 = !DILocation(line: 1133, column: 51, scope: !7730)
!7736 = !DILocation(line: 1133, column: 58, scope: !7730)
!7737 = !DILocation(line: 1133, column: 49, scope: !7730)
!7738 = !DILocation(line: 1133, column: 15, scope: !7730)
!7739 = !DILocation(line: 1132, column: 15, scope: !7727)
!7740 = !DILocalVariable(name: "tuning", scope: !7741, file: !141, line: 1135, type: !5964)
!7741 = distinct !DILexicalBlock(scope: !7730, file: !141, line: 1134, column: 13)
!7742 = !DILocation(line: 1135, column: 34, scope: !7741)
!7743 = !DILocation(line: 1135, column: 43, scope: !7741)
!7744 = !DILocation(line: 1135, column: 50, scope: !7741)
!7745 = !DILocalVariable(name: "candidate", scope: !7741, file: !141, line: 1136, type: !143)
!7746 = !DILocation(line: 1136, column: 22, scope: !7741)
!7747 = !DILocation(line: 1137, column: 18, scope: !7741)
!7748 = !DILocation(line: 1137, column: 26, scope: !7741)
!7749 = !DILocation(line: 1138, column: 20, scope: !7741)
!7750 = !DILocation(line: 1138, column: 27, scope: !7741)
!7751 = !DILocation(line: 1138, column: 39, scope: !7741)
!7752 = !DILocation(line: 1138, column: 47, scope: !7741)
!7753 = !DILocation(line: 1138, column: 37, scope: !7741)
!7754 = !DILocation(line: 1139, column: 21, scope: !7741)
!7755 = !DILocation(line: 1139, column: 28, scope: !7741)
!7756 = !DILocation(line: 1139, column: 40, scope: !7741)
!7757 = !DILocation(line: 1139, column: 48, scope: !7741)
!7758 = !DILocation(line: 1139, column: 38, scope: !7741)
!7759 = !DILocation(line: 1140, column: 23, scope: !7741)
!7760 = !DILocation(line: 1140, column: 31, scope: !7741)
!7761 = !DILocation(line: 1140, column: 21, scope: !7741)
!7762 = !DILocation(line: 1137, column: 17, scope: !7741)
!7763 = !DILocation(line: 1142, column: 33, scope: !7764)
!7764 = distinct !DILexicalBlock(scope: !7741, file: !141, line: 1142, column: 19)
!7765 = !DILocation(line: 1142, column: 40, scope: !7764)
!7766 = !DILocation(line: 1142, column: 20, scope: !7764)
!7767 = !DILocation(line: 1142, column: 19, scope: !7741)
!7768 = !DILocalVariable(name: "cursor", scope: !7769, file: !141, line: 1150, type: !5952)
!7769 = distinct !DILexicalBlock(scope: !7764, file: !141, line: 1143, column: 17)
!7770 = !DILocation(line: 1150, column: 38, scope: !7769)
!7771 = !DILocation(line: 1150, column: 47, scope: !7769)
!7772 = !DILocation(line: 1150, column: 54, scope: !7769)
!7773 = !DILocalVariable(name: "next", scope: !7769, file: !141, line: 1151, type: !5952)
!7774 = !DILocation(line: 1151, column: 38, scope: !7769)
!7775 = !DILocation(line: 1152, column: 19, scope: !7769)
!7776 = !DILocation(line: 1152, column: 26, scope: !7769)
!7777 = !DILocation(line: 1154, column: 30, scope: !7778)
!7778 = distinct !DILexicalBlock(scope: !7769, file: !141, line: 1153, column: 21)
!7779 = !DILocation(line: 1154, column: 38, scope: !7778)
!7780 = !DILocation(line: 1154, column: 28, scope: !7778)
!7781 = !DILocation(line: 1155, column: 29, scope: !7778)
!7782 = !DILocation(line: 1155, column: 23, scope: !7778)
!7783 = !DILocation(line: 1156, column: 32, scope: !7778)
!7784 = !DILocation(line: 1156, column: 30, scope: !7778)
!7785 = distinct !{!7785, !7775, !7786}
!7786 = !DILocation(line: 1157, column: 21, scope: !7769)
!7787 = !DILocation(line: 1158, column: 19, scope: !7769)
!7788 = !DILocation(line: 1158, column: 26, scope: !7769)
!7789 = !DILocation(line: 1158, column: 42, scope: !7769)
!7790 = !DILocation(line: 1160, column: 17, scope: !7769)
!7791 = !DILocation(line: 1161, column: 13, scope: !7741)
!7792 = !DILocation(line: 1162, column: 9, scope: !7727)
!7793 = !DILocation(line: 1163, column: 5, scope: !7712)
!7794 = !DILocation(line: 1165, column: 10, scope: !7687)
!7795 = !DILocation(line: 1165, column: 3, scope: !7687)
!7796 = !DILocation(line: 1166, column: 1, scope: !7687)
!7797 = distinct !DISubprogram(name: "i_ring_init", scope: !443, file: !443, line: 25, type: !7798, isLocal: false, isDefinition: true, scopeLine: 26, flags: DIFlagPrototyped, isOptimized: false, unit: !442, variables: !48)
!7798 = !DISubroutineType(types: !7799)
!7799 = !{null, !7800, !46}
!7800 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7801, size: 64)
!7801 = !DIDerivedType(tag: DW_TAG_typedef, name: "I_ring", file: !411, line: 39, baseType: !7802)
!7802 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "I_ring", file: !411, line: 31, size: 256, elements: !7803)
!7803 = !{!7804, !7805, !7806, !7807, !7808}
!7804 = !DIDerivedType(tag: DW_TAG_member, name: "ir_data", scope: !7802, file: !411, line: 33, baseType: !415, size: 128)
!7805 = !DIDerivedType(tag: DW_TAG_member, name: "ir_default_val", scope: !7802, file: !411, line: 34, baseType: !46, size: 32, offset: 128)
!7806 = !DIDerivedType(tag: DW_TAG_member, name: "ir_front", scope: !7802, file: !411, line: 35, baseType: !199, size: 32, offset: 160)
!7807 = !DIDerivedType(tag: DW_TAG_member, name: "ir_back", scope: !7802, file: !411, line: 36, baseType: !199, size: 32, offset: 192)
!7808 = !DIDerivedType(tag: DW_TAG_member, name: "ir_empty", scope: !7802, file: !411, line: 37, baseType: !131, size: 8, offset: 224)
!7809 = !DILocalVariable(name: "ir", arg: 1, scope: !7797, file: !443, line: 25, type: !7800)
!7810 = !DILocation(line: 25, column: 22, scope: !7797)
!7811 = !DILocalVariable(name: "default_val", arg: 2, scope: !7797, file: !443, line: 25, type: !46)
!7812 = !DILocation(line: 25, column: 30, scope: !7797)
!7813 = !DILocalVariable(name: "i", scope: !7797, file: !443, line: 27, type: !46)
!7814 = !DILocation(line: 27, column: 7, scope: !7797)
!7815 = !DILocation(line: 28, column: 3, scope: !7797)
!7816 = !DILocation(line: 28, column: 7, scope: !7797)
!7817 = !DILocation(line: 28, column: 16, scope: !7797)
!7818 = !DILocation(line: 29, column: 3, scope: !7797)
!7819 = !DILocation(line: 29, column: 7, scope: !7797)
!7820 = !DILocation(line: 29, column: 16, scope: !7797)
!7821 = !DILocation(line: 30, column: 3, scope: !7797)
!7822 = !DILocation(line: 30, column: 7, scope: !7797)
!7823 = !DILocation(line: 30, column: 15, scope: !7797)
!7824 = !DILocation(line: 31, column: 10, scope: !7825)
!7825 = distinct !DILexicalBlock(scope: !7797, file: !443, line: 31, column: 3)
!7826 = !DILocation(line: 31, column: 8, scope: !7825)
!7827 = !DILocation(line: 31, column: 15, scope: !7828)
!7828 = distinct !DILexicalBlock(scope: !7825, file: !443, line: 31, column: 3)
!7829 = !DILocation(line: 31, column: 17, scope: !7828)
!7830 = !DILocation(line: 31, column: 3, scope: !7825)
!7831 = !DILocation(line: 32, column: 22, scope: !7828)
!7832 = !DILocation(line: 32, column: 5, scope: !7828)
!7833 = !DILocation(line: 32, column: 9, scope: !7828)
!7834 = !DILocation(line: 32, column: 17, scope: !7828)
!7835 = !DILocation(line: 32, column: 20, scope: !7828)
!7836 = !DILocation(line: 31, column: 33, scope: !7828)
!7837 = !DILocation(line: 31, column: 3, scope: !7828)
!7838 = distinct !{!7838, !7830, !7839}
!7839 = !DILocation(line: 32, column: 22, scope: !7825)
!7840 = !DILocation(line: 33, column: 24, scope: !7797)
!7841 = !DILocation(line: 33, column: 3, scope: !7797)
!7842 = !DILocation(line: 33, column: 7, scope: !7797)
!7843 = !DILocation(line: 33, column: 22, scope: !7797)
!7844 = !DILocation(line: 34, column: 1, scope: !7797)
!7845 = distinct !DISubprogram(name: "i_ring_empty", scope: !443, file: !443, line: 37, type: !7846, isLocal: false, isDefinition: true, scopeLine: 38, flags: DIFlagPrototyped, isOptimized: false, unit: !442, variables: !48)
!7846 = !DISubroutineType(types: !7847)
!7847 = !{!131, !7848}
!7848 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7849, size: 64)
!7849 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7801)
!7850 = !DILocalVariable(name: "ir", arg: 1, scope: !7845, file: !443, line: 37, type: !7848)
!7851 = !DILocation(line: 37, column: 29, scope: !7845)
!7852 = !DILocation(line: 39, column: 10, scope: !7845)
!7853 = !DILocation(line: 39, column: 14, scope: !7845)
!7854 = !DILocation(line: 39, column: 3, scope: !7845)
!7855 = distinct !DISubprogram(name: "i_ring_push", scope: !443, file: !443, line: 43, type: !7856, isLocal: false, isDefinition: true, scopeLine: 44, flags: DIFlagPrototyped, isOptimized: false, unit: !442, variables: !48)
!7856 = !DISubroutineType(types: !7857)
!7857 = !{!46, !7800, !46}
!7858 = !DILocalVariable(name: "ir", arg: 1, scope: !7855, file: !443, line: 43, type: !7800)
!7859 = !DILocation(line: 43, column: 22, scope: !7855)
!7860 = !DILocalVariable(name: "val", arg: 2, scope: !7855, file: !443, line: 43, type: !46)
!7861 = !DILocation(line: 43, column: 30, scope: !7855)
!7862 = !DILocalVariable(name: "dest_idx", scope: !7855, file: !443, line: 45, type: !199)
!7863 = !DILocation(line: 45, column: 16, scope: !7855)
!7864 = !DILocation(line: 45, column: 28, scope: !7855)
!7865 = !DILocation(line: 45, column: 32, scope: !7855)
!7866 = !DILocation(line: 45, column: 44, scope: !7855)
!7867 = !DILocation(line: 45, column: 48, scope: !7855)
!7868 = !DILocation(line: 45, column: 43, scope: !7855)
!7869 = !DILocation(line: 45, column: 41, scope: !7855)
!7870 = !DILocation(line: 45, column: 58, scope: !7855)
!7871 = !DILocalVariable(name: "old_val", scope: !7855, file: !443, line: 46, type: !46)
!7872 = !DILocation(line: 46, column: 7, scope: !7855)
!7873 = !DILocation(line: 46, column: 17, scope: !7855)
!7874 = !DILocation(line: 46, column: 21, scope: !7855)
!7875 = !DILocation(line: 46, column: 29, scope: !7855)
!7876 = !DILocation(line: 47, column: 27, scope: !7855)
!7877 = !DILocation(line: 47, column: 3, scope: !7855)
!7878 = !DILocation(line: 47, column: 7, scope: !7855)
!7879 = !DILocation(line: 47, column: 15, scope: !7855)
!7880 = !DILocation(line: 47, column: 25, scope: !7855)
!7881 = !DILocation(line: 48, column: 18, scope: !7855)
!7882 = !DILocation(line: 48, column: 3, scope: !7855)
!7883 = !DILocation(line: 48, column: 7, scope: !7855)
!7884 = !DILocation(line: 48, column: 16, scope: !7855)
!7885 = !DILocation(line: 49, column: 7, scope: !7886)
!7886 = distinct !DILexicalBlock(scope: !7855, file: !443, line: 49, column: 7)
!7887 = !DILocation(line: 49, column: 19, scope: !7886)
!7888 = !DILocation(line: 49, column: 23, scope: !7886)
!7889 = !DILocation(line: 49, column: 16, scope: !7886)
!7890 = !DILocation(line: 49, column: 7, scope: !7855)
!7891 = !DILocation(line: 50, column: 20, scope: !7886)
!7892 = !DILocation(line: 50, column: 24, scope: !7886)
!7893 = !DILocation(line: 50, column: 35, scope: !7886)
!7894 = !DILocation(line: 50, column: 39, scope: !7886)
!7895 = !DILocation(line: 50, column: 34, scope: !7886)
!7896 = !DILocation(line: 50, column: 32, scope: !7886)
!7897 = !DILocation(line: 50, column: 49, scope: !7886)
!7898 = !DILocation(line: 50, column: 5, scope: !7886)
!7899 = !DILocation(line: 50, column: 9, scope: !7886)
!7900 = !DILocation(line: 50, column: 17, scope: !7886)
!7901 = !DILocation(line: 51, column: 3, scope: !7855)
!7902 = !DILocation(line: 51, column: 7, scope: !7855)
!7903 = !DILocation(line: 51, column: 16, scope: !7855)
!7904 = !DILocation(line: 52, column: 10, scope: !7855)
!7905 = !DILocation(line: 52, column: 3, scope: !7855)
!7906 = distinct !DISubprogram(name: "i_ring_pop", scope: !443, file: !443, line: 56, type: !7907, isLocal: false, isDefinition: true, scopeLine: 57, flags: DIFlagPrototyped, isOptimized: false, unit: !442, variables: !48)
!7907 = !DISubroutineType(types: !7908)
!7908 = !{!46, !7800}
!7909 = !DILocalVariable(name: "ir", arg: 1, scope: !7906, file: !443, line: 56, type: !7800)
!7910 = !DILocation(line: 56, column: 21, scope: !7906)
!7911 = !DILocalVariable(name: "top_val", scope: !7906, file: !443, line: 58, type: !46)
!7912 = !DILocation(line: 58, column: 7, scope: !7906)
!7913 = !DILocation(line: 59, column: 21, scope: !7914)
!7914 = distinct !DILexicalBlock(scope: !7906, file: !443, line: 59, column: 7)
!7915 = !DILocation(line: 59, column: 7, scope: !7914)
!7916 = !DILocation(line: 59, column: 7, scope: !7906)
!7917 = !DILocation(line: 60, column: 5, scope: !7914)
!7918 = !DILocation(line: 61, column: 13, scope: !7906)
!7919 = !DILocation(line: 61, column: 17, scope: !7906)
!7920 = !DILocation(line: 61, column: 25, scope: !7906)
!7921 = !DILocation(line: 61, column: 29, scope: !7906)
!7922 = !DILocation(line: 61, column: 11, scope: !7906)
!7923 = !DILocation(line: 62, column: 31, scope: !7906)
!7924 = !DILocation(line: 62, column: 35, scope: !7906)
!7925 = !DILocation(line: 62, column: 3, scope: !7906)
!7926 = !DILocation(line: 62, column: 7, scope: !7906)
!7927 = !DILocation(line: 62, column: 15, scope: !7906)
!7928 = !DILocation(line: 62, column: 19, scope: !7906)
!7929 = !DILocation(line: 62, column: 29, scope: !7906)
!7930 = !DILocation(line: 63, column: 7, scope: !7931)
!7931 = distinct !DILexicalBlock(scope: !7906, file: !443, line: 63, column: 7)
!7932 = !DILocation(line: 63, column: 11, scope: !7931)
!7933 = !DILocation(line: 63, column: 23, scope: !7931)
!7934 = !DILocation(line: 63, column: 27, scope: !7931)
!7935 = !DILocation(line: 63, column: 20, scope: !7931)
!7936 = !DILocation(line: 63, column: 7, scope: !7906)
!7937 = !DILocation(line: 64, column: 5, scope: !7931)
!7938 = !DILocation(line: 64, column: 9, scope: !7931)
!7939 = !DILocation(line: 64, column: 18, scope: !7931)
!7940 = !DILocation(line: 66, column: 22, scope: !7931)
!7941 = !DILocation(line: 66, column: 26, scope: !7931)
!7942 = !DILocation(line: 66, column: 35, scope: !7931)
!7943 = !DILocation(line: 66, column: 49, scope: !7931)
!7944 = !DILocation(line: 66, column: 54, scope: !7931)
!7945 = !DILocation(line: 66, column: 5, scope: !7931)
!7946 = !DILocation(line: 66, column: 9, scope: !7931)
!7947 = !DILocation(line: 66, column: 18, scope: !7931)
!7948 = !DILocation(line: 67, column: 10, scope: !7906)
!7949 = !DILocation(line: 67, column: 3, scope: !7906)
!7950 = distinct !DISubprogram(name: "open_safer", scope: !449, file: !449, line: 29, type: !7951, isLocal: false, isDefinition: true, scopeLine: 30, flags: DIFlagPrototyped, isOptimized: false, unit: !448, variables: !48)
!7951 = !DISubroutineType(types: !7952)
!7952 = !{!46, !35, !46, null}
!7953 = !DILocalVariable(name: "file", arg: 1, scope: !7950, file: !449, line: 29, type: !35)
!7954 = !DILocation(line: 29, column: 25, scope: !7950)
!7955 = !DILocalVariable(name: "flags", arg: 2, scope: !7950, file: !449, line: 29, type: !46)
!7956 = !DILocation(line: 29, column: 35, scope: !7950)
!7957 = !DILocalVariable(name: "mode", scope: !7950, file: !449, line: 31, type: !5665)
!7958 = !DILocation(line: 31, column: 10, scope: !7950)
!7959 = !DILocation(line: 33, column: 7, scope: !7960)
!7960 = distinct !DILexicalBlock(scope: !7950, file: !449, line: 33, column: 7)
!7961 = !DILocation(line: 33, column: 13, scope: !7960)
!7962 = !DILocation(line: 33, column: 7, scope: !7950)
!7963 = !DILocalVariable(name: "ap", scope: !7964, file: !449, line: 35, type: !7965)
!7964 = distinct !DILexicalBlock(scope: !7960, file: !449, line: 34, column: 5)
!7965 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !2190, line: 30, baseType: !7966)
!7966 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !449, line: 35, baseType: !7967)
!7967 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7968, size: 192, elements: !363)
!7968 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", file: !449, line: 35, size: 192, elements: !7969)
!7969 = !{!7970, !7971, !7972, !7973}
!7970 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !7968, file: !449, line: 35, baseType: !199, size: 32)
!7971 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !7968, file: !449, line: 35, baseType: !199, size: 32, offset: 32)
!7972 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !7968, file: !449, line: 35, baseType: !39, size: 64, offset: 64)
!7973 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !7968, file: !449, line: 35, baseType: !39, size: 64, offset: 128)
!7974 = !DILocation(line: 35, column: 15, scope: !7964)
!7975 = !DILocation(line: 36, column: 7, scope: !7964)
!7976 = !DILocation(line: 40, column: 14, scope: !7964)
!7977 = !DILocation(line: 40, column: 12, scope: !7964)
!7978 = !DILocation(line: 42, column: 7, scope: !7964)
!7979 = !DILocation(line: 43, column: 5, scope: !7964)
!7980 = !DILocation(line: 45, column: 26, scope: !7950)
!7981 = !DILocation(line: 45, column: 32, scope: !7950)
!7982 = !DILocation(line: 45, column: 39, scope: !7950)
!7983 = !DILocation(line: 45, column: 20, scope: !7950)
!7984 = !DILocation(line: 45, column: 10, scope: !7950)
!7985 = !DILocation(line: 45, column: 3, scope: !7950)
!7986 = distinct !DISubprogram(name: "openat_safer", scope: !451, file: !451, line: 29, type: !7987, isLocal: false, isDefinition: true, scopeLine: 30, flags: DIFlagPrototyped, isOptimized: false, unit: !450, variables: !48)
!7987 = !DISubroutineType(types: !7988)
!7988 = !{!46, !46, !35, !46, null}
!7989 = !DILocalVariable(name: "fd", arg: 1, scope: !7986, file: !451, line: 29, type: !46)
!7990 = !DILocation(line: 29, column: 19, scope: !7986)
!7991 = !DILocalVariable(name: "file", arg: 2, scope: !7986, file: !451, line: 29, type: !35)
!7992 = !DILocation(line: 29, column: 35, scope: !7986)
!7993 = !DILocalVariable(name: "flags", arg: 3, scope: !7986, file: !451, line: 29, type: !46)
!7994 = !DILocation(line: 29, column: 45, scope: !7986)
!7995 = !DILocalVariable(name: "mode", scope: !7986, file: !451, line: 31, type: !5665)
!7996 = !DILocation(line: 31, column: 10, scope: !7986)
!7997 = !DILocation(line: 33, column: 7, scope: !7998)
!7998 = distinct !DILexicalBlock(scope: !7986, file: !451, line: 33, column: 7)
!7999 = !DILocation(line: 33, column: 13, scope: !7998)
!8000 = !DILocation(line: 33, column: 7, scope: !7986)
!8001 = !DILocalVariable(name: "ap", scope: !8002, file: !451, line: 35, type: !8003)
!8002 = distinct !DILexicalBlock(scope: !7998, file: !451, line: 34, column: 5)
!8003 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !2190, line: 30, baseType: !8004)
!8004 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !451, line: 35, baseType: !8005)
!8005 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8006, size: 192, elements: !363)
!8006 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", file: !451, line: 35, size: 192, elements: !8007)
!8007 = !{!8008, !8009, !8010, !8011}
!8008 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !8006, file: !451, line: 35, baseType: !199, size: 32)
!8009 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !8006, file: !451, line: 35, baseType: !199, size: 32, offset: 32)
!8010 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !8006, file: !451, line: 35, baseType: !39, size: 64, offset: 64)
!8011 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !8006, file: !451, line: 35, baseType: !39, size: 64, offset: 128)
!8012 = !DILocation(line: 35, column: 15, scope: !8002)
!8013 = !DILocation(line: 36, column: 7, scope: !8002)
!8014 = !DILocation(line: 40, column: 14, scope: !8002)
!8015 = !DILocation(line: 40, column: 12, scope: !8002)
!8016 = !DILocation(line: 42, column: 7, scope: !8002)
!8017 = !DILocation(line: 43, column: 5, scope: !8002)
!8018 = !DILocation(line: 45, column: 28, scope: !7986)
!8019 = !DILocation(line: 45, column: 32, scope: !7986)
!8020 = !DILocation(line: 45, column: 38, scope: !7986)
!8021 = !DILocation(line: 45, column: 45, scope: !7986)
!8022 = !DILocation(line: 45, column: 20, scope: !7986)
!8023 = !DILocation(line: 45, column: 10, scope: !7986)
!8024 = !DILocation(line: 45, column: 3, scope: !7986)
!8025 = distinct !DISubprogram(name: "opendir_safer", scope: !453, file: !453, line: 31, type: !8026, isLocal: false, isDefinition: true, scopeLine: 32, flags: DIFlagPrototyped, isOptimized: false, unit: !452, variables: !48)
!8026 = !DISubroutineType(types: !8027)
!8027 = !{!4695, !35}
!8028 = !DILocalVariable(name: "name", arg: 1, scope: !8025, file: !453, line: 31, type: !35)
!8029 = !DILocation(line: 31, column: 28, scope: !8025)
!8030 = !DILocalVariable(name: "dp", scope: !8025, file: !453, line: 33, type: !4695)
!8031 = !DILocation(line: 33, column: 8, scope: !8025)
!8032 = !DILocation(line: 33, column: 22, scope: !8025)
!8033 = !DILocation(line: 33, column: 13, scope: !8025)
!8034 = !DILocation(line: 35, column: 7, scope: !8035)
!8035 = distinct !DILexicalBlock(scope: !8025, file: !453, line: 35, column: 7)
!8036 = !DILocation(line: 35, column: 7, scope: !8025)
!8037 = !DILocalVariable(name: "fd", scope: !8038, file: !453, line: 37, type: !46)
!8038 = distinct !DILexicalBlock(scope: !8035, file: !453, line: 36, column: 5)
!8039 = !DILocation(line: 37, column: 11, scope: !8038)
!8040 = !DILocation(line: 37, column: 23, scope: !8038)
!8041 = !DILocation(line: 37, column: 16, scope: !8038)
!8042 = !DILocation(line: 39, column: 16, scope: !8043)
!8043 = distinct !DILexicalBlock(scope: !8038, file: !453, line: 39, column: 11)
!8044 = !DILocation(line: 39, column: 13, scope: !8043)
!8045 = !DILocation(line: 39, column: 19, scope: !8043)
!8046 = !DILocation(line: 39, column: 22, scope: !8043)
!8047 = !DILocation(line: 39, column: 25, scope: !8043)
!8048 = !DILocation(line: 39, column: 11, scope: !8038)
!8049 = !DILocalVariable(name: "newdp", scope: !8050, file: !453, line: 49, type: !4695)
!8050 = distinct !DILexicalBlock(scope: !8043, file: !453, line: 40, column: 9)
!8051 = !DILocation(line: 49, column: 16, scope: !8050)
!8052 = !DILocalVariable(name: "e", scope: !8050, file: !453, line: 50, type: !46)
!8053 = !DILocation(line: 50, column: 15, scope: !8050)
!8054 = !DILocalVariable(name: "f", scope: !8050, file: !453, line: 52, type: !46)
!8055 = !DILocation(line: 52, column: 15, scope: !8050)
!8056 = !DILocation(line: 52, column: 30, scope: !8050)
!8057 = !DILocation(line: 52, column: 19, scope: !8050)
!8058 = !DILocation(line: 53, column: 30, scope: !8050)
!8059 = !DILocation(line: 53, column: 19, scope: !8050)
!8060 = !DILocation(line: 53, column: 17, scope: !8050)
!8061 = !DILocation(line: 54, column: 15, scope: !8050)
!8062 = !DILocation(line: 54, column: 13, scope: !8050)
!8063 = !DILocation(line: 55, column: 17, scope: !8064)
!8064 = distinct !DILexicalBlock(scope: !8050, file: !453, line: 55, column: 15)
!8065 = !DILocation(line: 55, column: 15, scope: !8050)
!8066 = !DILocation(line: 56, column: 20, scope: !8064)
!8067 = !DILocation(line: 56, column: 13, scope: !8064)
!8068 = !DILocation(line: 61, column: 21, scope: !8050)
!8069 = !DILocation(line: 61, column: 11, scope: !8050)
!8070 = !DILocation(line: 62, column: 19, scope: !8050)
!8071 = !DILocation(line: 62, column: 11, scope: !8050)
!8072 = !DILocation(line: 62, column: 17, scope: !8050)
!8073 = !DILocation(line: 63, column: 16, scope: !8050)
!8074 = !DILocation(line: 63, column: 14, scope: !8050)
!8075 = !DILocation(line: 64, column: 9, scope: !8050)
!8076 = !DILocation(line: 65, column: 5, scope: !8038)
!8077 = !DILocation(line: 67, column: 10, scope: !8025)
!8078 = !DILocation(line: 67, column: 3, scope: !8025)
!8079 = distinct !DISubprogram(name: "quote_n", scope: !455, file: !455, line: 29, type: !8080, isLocal: false, isDefinition: true, scopeLine: 30, flags: DIFlagPrototyped, isOptimized: false, unit: !454, variables: !48)
!8080 = !DISubroutineType(types: !8081)
!8081 = !{!35, !46, !35}
!8082 = !DILocalVariable(name: "n", arg: 1, scope: !8079, file: !455, line: 29, type: !46)
!8083 = !DILocation(line: 29, column: 14, scope: !8079)
!8084 = !DILocalVariable(name: "name", arg: 2, scope: !8079, file: !455, line: 29, type: !35)
!8085 = !DILocation(line: 29, column: 29, scope: !8079)
!8086 = !DILocation(line: 31, column: 28, scope: !8079)
!8087 = !DILocation(line: 31, column: 53, scope: !8079)
!8088 = !DILocation(line: 31, column: 10, scope: !8079)
!8089 = !DILocation(line: 31, column: 3, scope: !8079)
!8090 = distinct !DISubprogram(name: "quote", scope: !455, file: !455, line: 37, type: !8091, isLocal: false, isDefinition: true, scopeLine: 38, flags: DIFlagPrototyped, isOptimized: false, unit: !454, variables: !48)
!8091 = !DISubroutineType(types: !8092)
!8092 = !{!35, !35}
!8093 = !DILocalVariable(name: "name", arg: 1, scope: !8090, file: !455, line: 37, type: !35)
!8094 = !DILocation(line: 37, column: 20, scope: !8090)
!8095 = !DILocation(line: 39, column: 22, scope: !8090)
!8096 = !DILocation(line: 39, column: 10, scope: !8090)
!8097 = !DILocation(line: 39, column: 3, scope: !8090)
!8098 = distinct !DISubprogram(name: "clone_quoting_options", scope: !160, file: !160, line: 99, type: !8099, isLocal: false, isDefinition: true, scopeLine: 100, flags: DIFlagPrototyped, isOptimized: false, unit: !159, variables: !48)
!8099 = !DISubroutineType(types: !8100)
!8100 = !{!8101, !8101}
!8101 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !193, size: 64)
!8102 = !DILocalVariable(name: "o", arg: 1, scope: !8098, file: !160, line: 99, type: !8101)
!8103 = !DILocation(line: 99, column: 48, scope: !8098)
!8104 = !DILocalVariable(name: "e", scope: !8098, file: !160, line: 101, type: !46)
!8105 = !DILocation(line: 101, column: 7, scope: !8098)
!8106 = !DILocation(line: 101, column: 11, scope: !8098)
!8107 = !DILocalVariable(name: "p", scope: !8098, file: !160, line: 102, type: !8101)
!8108 = !DILocation(line: 102, column: 27, scope: !8098)
!8109 = !DILocation(line: 102, column: 40, scope: !8098)
!8110 = !DILocation(line: 102, column: 44, scope: !8098)
!8111 = !DILocation(line: 102, column: 31, scope: !8098)
!8112 = !DILocation(line: 104, column: 11, scope: !8098)
!8113 = !DILocation(line: 104, column: 3, scope: !8098)
!8114 = !DILocation(line: 104, column: 9, scope: !8098)
!8115 = !DILocation(line: 105, column: 10, scope: !8098)
!8116 = !DILocation(line: 105, column: 3, scope: !8098)
!8117 = distinct !DISubprogram(name: "get_quoting_style", scope: !160, file: !160, line: 110, type: !8118, isLocal: false, isDefinition: true, scopeLine: 111, flags: DIFlagPrototyped, isOptimized: false, unit: !159, variables: !48)
!8118 = !DISubroutineType(types: !8119)
!8119 = !{!109, !8101}
!8120 = !DILocalVariable(name: "o", arg: 1, scope: !8117, file: !160, line: 110, type: !8101)
!8121 = !DILocation(line: 110, column: 44, scope: !8117)
!8122 = !DILocation(line: 112, column: 11, scope: !8117)
!8123 = !DILocation(line: 112, column: 15, scope: !8117)
!8124 = !DILocation(line: 112, column: 46, scope: !8117)
!8125 = !DILocation(line: 112, column: 3, scope: !8117)
!8126 = distinct !DISubprogram(name: "set_quoting_style", scope: !160, file: !160, line: 118, type: !8127, isLocal: false, isDefinition: true, scopeLine: 119, flags: DIFlagPrototyped, isOptimized: false, unit: !159, variables: !48)
!8127 = !DISubroutineType(types: !8128)
!8128 = !{null, !8101, !109}
!8129 = !DILocalVariable(name: "o", arg: 1, scope: !8126, file: !160, line: 118, type: !8101)
!8130 = !DILocation(line: 118, column: 44, scope: !8126)
!8131 = !DILocalVariable(name: "s", arg: 2, scope: !8126, file: !160, line: 118, type: !109)
!8132 = !DILocation(line: 118, column: 66, scope: !8126)
!8133 = !DILocation(line: 120, column: 47, scope: !8126)
!8134 = !DILocation(line: 120, column: 4, scope: !8126)
!8135 = !DILocation(line: 120, column: 8, scope: !8126)
!8136 = !DILocation(line: 120, column: 39, scope: !8126)
!8137 = !DILocation(line: 120, column: 45, scope: !8126)
!8138 = !DILocation(line: 121, column: 1, scope: !8126)
!8139 = distinct !DISubprogram(name: "set_char_quoting", scope: !160, file: !160, line: 129, type: !8140, isLocal: false, isDefinition: true, scopeLine: 130, flags: DIFlagPrototyped, isOptimized: false, unit: !159, variables: !48)
!8140 = !DISubroutineType(types: !8141)
!8141 = !{!46, !8101, !37, !46}
!8142 = !DILocalVariable(name: "o", arg: 1, scope: !8139, file: !160, line: 129, type: !8101)
!8143 = !DILocation(line: 129, column: 43, scope: !8139)
!8144 = !DILocalVariable(name: "c", arg: 2, scope: !8139, file: !160, line: 129, type: !37)
!8145 = !DILocation(line: 129, column: 51, scope: !8139)
!8146 = !DILocalVariable(name: "i", arg: 3, scope: !8139, file: !160, line: 129, type: !46)
!8147 = !DILocation(line: 129, column: 58, scope: !8139)
!8148 = !DILocalVariable(name: "uc", scope: !8139, file: !160, line: 131, type: !1795)
!8149 = !DILocation(line: 131, column: 17, scope: !8139)
!8150 = !DILocation(line: 131, column: 22, scope: !8139)
!8151 = !DILocalVariable(name: "p", scope: !8139, file: !160, line: 132, type: !8152)
!8152 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !199, size: 64)
!8153 = !DILocation(line: 132, column: 17, scope: !8139)
!8154 = !DILocation(line: 133, column: 6, scope: !8139)
!8155 = !DILocation(line: 133, column: 10, scope: !8139)
!8156 = !DILocation(line: 133, column: 41, scope: !8139)
!8157 = !DILocation(line: 133, column: 5, scope: !8139)
!8158 = !DILocation(line: 133, column: 59, scope: !8139)
!8159 = !DILocation(line: 133, column: 62, scope: !8139)
!8160 = !DILocation(line: 133, column: 57, scope: !8139)
!8161 = !DILocalVariable(name: "shift", scope: !8139, file: !160, line: 134, type: !46)
!8162 = !DILocation(line: 134, column: 7, scope: !8139)
!8163 = !DILocation(line: 134, column: 15, scope: !8139)
!8164 = !DILocation(line: 134, column: 18, scope: !8139)
!8165 = !DILocalVariable(name: "r", scope: !8139, file: !160, line: 135, type: !46)
!8166 = !DILocation(line: 135, column: 7, scope: !8139)
!8167 = !DILocation(line: 135, column: 13, scope: !8139)
!8168 = !DILocation(line: 135, column: 12, scope: !8139)
!8169 = !DILocation(line: 135, column: 18, scope: !8139)
!8170 = !DILocation(line: 135, column: 15, scope: !8139)
!8171 = !DILocation(line: 135, column: 25, scope: !8139)
!8172 = !DILocation(line: 136, column: 11, scope: !8139)
!8173 = !DILocation(line: 136, column: 13, scope: !8139)
!8174 = !DILocation(line: 136, column: 20, scope: !8139)
!8175 = !DILocation(line: 136, column: 18, scope: !8139)
!8176 = !DILocation(line: 136, column: 26, scope: !8139)
!8177 = !DILocation(line: 136, column: 23, scope: !8139)
!8178 = !DILocation(line: 136, column: 4, scope: !8139)
!8179 = !DILocation(line: 136, column: 6, scope: !8139)
!8180 = !DILocation(line: 137, column: 10, scope: !8139)
!8181 = !DILocation(line: 137, column: 3, scope: !8139)
!8182 = distinct !DISubprogram(name: "set_quoting_flags", scope: !160, file: !160, line: 145, type: !8183, isLocal: false, isDefinition: true, scopeLine: 146, flags: DIFlagPrototyped, isOptimized: false, unit: !159, variables: !48)
!8183 = !DISubroutineType(types: !8184)
!8184 = !{!46, !8101, !46}
!8185 = !DILocalVariable(name: "o", arg: 1, scope: !8182, file: !160, line: 145, type: !8101)
!8186 = !DILocation(line: 145, column: 44, scope: !8182)
!8187 = !DILocalVariable(name: "i", arg: 2, scope: !8182, file: !160, line: 145, type: !46)
!8188 = !DILocation(line: 145, column: 51, scope: !8182)
!8189 = !DILocalVariable(name: "r", scope: !8182, file: !160, line: 147, type: !46)
!8190 = !DILocation(line: 147, column: 7, scope: !8182)
!8191 = !DILocation(line: 148, column: 8, scope: !8192)
!8192 = distinct !DILexicalBlock(scope: !8182, file: !160, line: 148, column: 7)
!8193 = !DILocation(line: 148, column: 7, scope: !8182)
!8194 = !DILocation(line: 149, column: 7, scope: !8192)
!8195 = !DILocation(line: 149, column: 5, scope: !8192)
!8196 = !DILocation(line: 150, column: 7, scope: !8182)
!8197 = !DILocation(line: 150, column: 10, scope: !8182)
!8198 = !DILocation(line: 150, column: 5, scope: !8182)
!8199 = !DILocation(line: 151, column: 14, scope: !8182)
!8200 = !DILocation(line: 151, column: 3, scope: !8182)
!8201 = !DILocation(line: 151, column: 6, scope: !8182)
!8202 = !DILocation(line: 151, column: 12, scope: !8182)
!8203 = !DILocation(line: 152, column: 10, scope: !8182)
!8204 = !DILocation(line: 152, column: 3, scope: !8182)
!8205 = distinct !DISubprogram(name: "set_custom_quoting", scope: !160, file: !160, line: 156, type: !8206, isLocal: false, isDefinition: true, scopeLine: 158, flags: DIFlagPrototyped, isOptimized: false, unit: !159, variables: !48)
!8206 = !DISubroutineType(types: !8207)
!8207 = !{null, !8101, !35, !35}
!8208 = !DILocalVariable(name: "o", arg: 1, scope: !8205, file: !160, line: 156, type: !8101)
!8209 = !DILocation(line: 156, column: 45, scope: !8205)
!8210 = !DILocalVariable(name: "left_quote", arg: 2, scope: !8205, file: !160, line: 157, type: !35)
!8211 = !DILocation(line: 157, column: 33, scope: !8205)
!8212 = !DILocalVariable(name: "right_quote", arg: 3, scope: !8205, file: !160, line: 157, type: !35)
!8213 = !DILocation(line: 157, column: 57, scope: !8205)
!8214 = !DILocation(line: 159, column: 8, scope: !8215)
!8215 = distinct !DILexicalBlock(scope: !8205, file: !160, line: 159, column: 7)
!8216 = !DILocation(line: 159, column: 7, scope: !8205)
!8217 = !DILocation(line: 160, column: 7, scope: !8215)
!8218 = !DILocation(line: 160, column: 5, scope: !8215)
!8219 = !DILocation(line: 161, column: 3, scope: !8205)
!8220 = !DILocation(line: 161, column: 6, scope: !8205)
!8221 = !DILocation(line: 161, column: 12, scope: !8205)
!8222 = !DILocation(line: 162, column: 8, scope: !8223)
!8223 = distinct !DILexicalBlock(scope: !8205, file: !160, line: 162, column: 7)
!8224 = !DILocation(line: 162, column: 19, scope: !8223)
!8225 = !DILocation(line: 162, column: 23, scope: !8223)
!8226 = !DILocation(line: 162, column: 7, scope: !8205)
!8227 = !DILocation(line: 163, column: 5, scope: !8223)
!8228 = !DILocation(line: 164, column: 19, scope: !8205)
!8229 = !DILocation(line: 164, column: 3, scope: !8205)
!8230 = !DILocation(line: 164, column: 6, scope: !8205)
!8231 = !DILocation(line: 164, column: 17, scope: !8205)
!8232 = !DILocation(line: 165, column: 20, scope: !8205)
!8233 = !DILocation(line: 165, column: 3, scope: !8205)
!8234 = !DILocation(line: 165, column: 6, scope: !8205)
!8235 = !DILocation(line: 165, column: 18, scope: !8205)
!8236 = !DILocation(line: 166, column: 1, scope: !8205)
!8237 = distinct !DISubprogram(name: "quotearg_buffer", scope: !160, file: !160, line: 628, type: !8238, isLocal: false, isDefinition: true, scopeLine: 631, flags: DIFlagPrototyped, isOptimized: false, unit: !159, variables: !48)
!8238 = !DISubroutineType(types: !8239)
!8239 = !{!143, !38, !143, !35, !143, !8240}
!8240 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8241, size: 64)
!8241 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !193)
!8242 = !DILocalVariable(name: "buffer", arg: 1, scope: !8237, file: !160, line: 628, type: !38)
!8243 = !DILocation(line: 628, column: 24, scope: !8237)
!8244 = !DILocalVariable(name: "buffersize", arg: 2, scope: !8237, file: !160, line: 628, type: !143)
!8245 = !DILocation(line: 628, column: 39, scope: !8237)
!8246 = !DILocalVariable(name: "arg", arg: 3, scope: !8237, file: !160, line: 629, type: !35)
!8247 = !DILocation(line: 629, column: 30, scope: !8237)
!8248 = !DILocalVariable(name: "argsize", arg: 4, scope: !8237, file: !160, line: 629, type: !143)
!8249 = !DILocation(line: 629, column: 42, scope: !8237)
!8250 = !DILocalVariable(name: "o", arg: 5, scope: !8237, file: !160, line: 630, type: !8240)
!8251 = !DILocation(line: 630, column: 48, scope: !8237)
!8252 = !DILocalVariable(name: "p", scope: !8237, file: !160, line: 632, type: !8240)
!8253 = !DILocation(line: 632, column: 33, scope: !8237)
!8254 = !DILocation(line: 632, column: 37, scope: !8237)
!8255 = !DILocation(line: 632, column: 41, scope: !8237)
!8256 = !DILocalVariable(name: "e", scope: !8237, file: !160, line: 633, type: !46)
!8257 = !DILocation(line: 633, column: 7, scope: !8237)
!8258 = !DILocation(line: 633, column: 11, scope: !8237)
!8259 = !DILocalVariable(name: "r", scope: !8237, file: !160, line: 634, type: !143)
!8260 = !DILocation(line: 634, column: 10, scope: !8237)
!8261 = !DILocation(line: 634, column: 40, scope: !8237)
!8262 = !DILocation(line: 634, column: 48, scope: !8237)
!8263 = !DILocation(line: 634, column: 60, scope: !8237)
!8264 = !DILocation(line: 634, column: 65, scope: !8237)
!8265 = !DILocation(line: 635, column: 40, scope: !8237)
!8266 = !DILocation(line: 635, column: 43, scope: !8237)
!8267 = !DILocation(line: 635, column: 50, scope: !8237)
!8268 = !DILocation(line: 635, column: 53, scope: !8237)
!8269 = !DILocation(line: 635, column: 60, scope: !8237)
!8270 = !DILocation(line: 635, column: 63, scope: !8237)
!8271 = !DILocation(line: 636, column: 40, scope: !8237)
!8272 = !DILocation(line: 636, column: 43, scope: !8237)
!8273 = !DILocation(line: 636, column: 55, scope: !8237)
!8274 = !DILocation(line: 636, column: 58, scope: !8237)
!8275 = !DILocation(line: 634, column: 14, scope: !8237)
!8276 = !DILocation(line: 637, column: 11, scope: !8237)
!8277 = !DILocation(line: 637, column: 3, scope: !8237)
!8278 = !DILocation(line: 637, column: 9, scope: !8237)
!8279 = !DILocation(line: 638, column: 10, scope: !8237)
!8280 = !DILocation(line: 638, column: 3, scope: !8237)
!8281 = distinct !DISubprogram(name: "quotearg_buffer_restyled", scope: !160, file: !160, line: 204, type: !8282, isLocal: true, isDefinition: true, scopeLine: 210, flags: DIFlagPrototyped, isOptimized: false, unit: !159, variables: !48)
!8282 = !DISubroutineType(types: !8283)
!8283 = !{!143, !38, !143, !35, !143, !109, !46, !8284, !35, !35}
!8284 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8285, size: 64)
!8285 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !199)
!8286 = !DILocalVariable(name: "buffer", arg: 1, scope: !8281, file: !160, line: 204, type: !38)
!8287 = !DILocation(line: 204, column: 33, scope: !8281)
!8288 = !DILocalVariable(name: "buffersize", arg: 2, scope: !8281, file: !160, line: 204, type: !143)
!8289 = !DILocation(line: 204, column: 48, scope: !8281)
!8290 = !DILocalVariable(name: "arg", arg: 3, scope: !8281, file: !160, line: 205, type: !35)
!8291 = !DILocation(line: 205, column: 39, scope: !8281)
!8292 = !DILocalVariable(name: "argsize", arg: 4, scope: !8281, file: !160, line: 205, type: !143)
!8293 = !DILocation(line: 205, column: 51, scope: !8281)
!8294 = !DILocalVariable(name: "quoting_style", arg: 5, scope: !8281, file: !160, line: 206, type: !109)
!8295 = !DILocation(line: 206, column: 46, scope: !8281)
!8296 = !DILocalVariable(name: "flags", arg: 6, scope: !8281, file: !160, line: 206, type: !46)
!8297 = !DILocation(line: 206, column: 65, scope: !8281)
!8298 = !DILocalVariable(name: "quote_these_too", arg: 7, scope: !8281, file: !160, line: 207, type: !8284)
!8299 = !DILocation(line: 207, column: 47, scope: !8281)
!8300 = !DILocalVariable(name: "left_quote", arg: 8, scope: !8281, file: !160, line: 208, type: !35)
!8301 = !DILocation(line: 208, column: 39, scope: !8281)
!8302 = !DILocalVariable(name: "right_quote", arg: 9, scope: !8281, file: !160, line: 209, type: !35)
!8303 = !DILocation(line: 209, column: 39, scope: !8281)
!8304 = !DILocalVariable(name: "i", scope: !8281, file: !160, line: 211, type: !143)
!8305 = !DILocation(line: 211, column: 10, scope: !8281)
!8306 = !DILocalVariable(name: "len", scope: !8281, file: !160, line: 212, type: !143)
!8307 = !DILocation(line: 212, column: 10, scope: !8281)
!8308 = !DILocalVariable(name: "quote_string", scope: !8281, file: !160, line: 213, type: !35)
!8309 = !DILocation(line: 213, column: 15, scope: !8281)
!8310 = !DILocalVariable(name: "quote_string_len", scope: !8281, file: !160, line: 214, type: !143)
!8311 = !DILocation(line: 214, column: 10, scope: !8281)
!8312 = !DILocalVariable(name: "backslash_escapes", scope: !8281, file: !160, line: 215, type: !131)
!8313 = !DILocation(line: 215, column: 8, scope: !8281)
!8314 = !DILocalVariable(name: "unibyte_locale", scope: !8281, file: !160, line: 216, type: !131)
!8315 = !DILocation(line: 216, column: 8, scope: !8281)
!8316 = !DILocation(line: 216, column: 25, scope: !8281)
!8317 = !DILocation(line: 216, column: 36, scope: !8281)
!8318 = !DILocalVariable(name: "elide_outer_quotes", scope: !8281, file: !160, line: 217, type: !131)
!8319 = !DILocation(line: 217, column: 8, scope: !8281)
!8320 = !DILocation(line: 217, column: 30, scope: !8281)
!8321 = !DILocation(line: 217, column: 36, scope: !8281)
!8322 = !DILocation(line: 217, column: 61, scope: !8281)
!8323 = !DILocation(line: 228, column: 11, scope: !8281)
!8324 = !DILocation(line: 228, column: 3, scope: !8281)
!8325 = !DILocation(line: 231, column: 21, scope: !8326)
!8326 = distinct !DILexicalBlock(scope: !8281, file: !160, line: 229, column: 5)
!8327 = !DILocation(line: 232, column: 26, scope: !8326)
!8328 = !DILocation(line: 232, column: 7, scope: !8326)
!8329 = !DILocation(line: 235, column: 12, scope: !8330)
!8330 = distinct !DILexicalBlock(scope: !8326, file: !160, line: 235, column: 11)
!8331 = !DILocation(line: 235, column: 11, scope: !8326)
!8332 = !DILocation(line: 236, column: 9, scope: !8330)
!8333 = distinct !{!8333, !8332, !8332}
!8334 = !DILocation(line: 236, column: 9, scope: !8335)
!8335 = distinct !DILexicalBlock(scope: !8336, file: !160, line: 236, column: 9)
!8336 = distinct !DILexicalBlock(scope: !8330, file: !160, line: 236, column: 9)
!8337 = !DILocation(line: 236, column: 9, scope: !8336)
!8338 = !DILocation(line: 237, column: 25, scope: !8326)
!8339 = !DILocation(line: 238, column: 20, scope: !8326)
!8340 = !DILocation(line: 239, column: 24, scope: !8326)
!8341 = !DILocation(line: 240, column: 7, scope: !8326)
!8342 = !DILocation(line: 243, column: 25, scope: !8326)
!8343 = !DILocation(line: 244, column: 26, scope: !8326)
!8344 = !DILocation(line: 245, column: 7, scope: !8326)
!8345 = !DILocation(line: 251, column: 13, scope: !8346)
!8346 = distinct !DILexicalBlock(scope: !8347, file: !160, line: 251, column: 13)
!8347 = distinct !DILexicalBlock(scope: !8326, file: !160, line: 250, column: 7)
!8348 = !DILocation(line: 251, column: 27, scope: !8346)
!8349 = !DILocation(line: 251, column: 13, scope: !8347)
!8350 = !DILocation(line: 272, column: 50, scope: !8351)
!8351 = distinct !DILexicalBlock(scope: !8346, file: !160, line: 252, column: 11)
!8352 = !DILocation(line: 272, column: 26, scope: !8351)
!8353 = !DILocation(line: 272, column: 24, scope: !8351)
!8354 = !DILocation(line: 273, column: 51, scope: !8351)
!8355 = !DILocation(line: 273, column: 27, scope: !8351)
!8356 = !DILocation(line: 273, column: 25, scope: !8351)
!8357 = !DILocation(line: 274, column: 11, scope: !8351)
!8358 = !DILocation(line: 275, column: 14, scope: !8359)
!8359 = distinct !DILexicalBlock(scope: !8347, file: !160, line: 275, column: 13)
!8360 = !DILocation(line: 275, column: 13, scope: !8347)
!8361 = !DILocation(line: 276, column: 31, scope: !8362)
!8362 = distinct !DILexicalBlock(scope: !8359, file: !160, line: 276, column: 11)
!8363 = !DILocation(line: 276, column: 29, scope: !8362)
!8364 = !DILocation(line: 276, column: 16, scope: !8362)
!8365 = !DILocation(line: 276, column: 44, scope: !8366)
!8366 = distinct !DILexicalBlock(scope: !8362, file: !160, line: 276, column: 11)
!8367 = !DILocation(line: 276, column: 43, scope: !8366)
!8368 = !DILocation(line: 276, column: 11, scope: !8362)
!8369 = !DILocation(line: 277, column: 13, scope: !8366)
!8370 = distinct !{!8370, !8369, !8369}
!8371 = !DILocation(line: 277, column: 13, scope: !8372)
!8372 = distinct !DILexicalBlock(scope: !8373, file: !160, line: 277, column: 13)
!8373 = distinct !DILexicalBlock(scope: !8366, file: !160, line: 277, column: 13)
!8374 = !DILocation(line: 277, column: 13, scope: !8373)
!8375 = !DILocation(line: 276, column: 70, scope: !8366)
!8376 = !DILocation(line: 276, column: 11, scope: !8366)
!8377 = distinct !{!8377, !8368, !8378}
!8378 = !DILocation(line: 277, column: 13, scope: !8362)
!8379 = !DILocation(line: 278, column: 27, scope: !8347)
!8380 = !DILocation(line: 279, column: 24, scope: !8347)
!8381 = !DILocation(line: 279, column: 22, scope: !8347)
!8382 = !DILocation(line: 280, column: 36, scope: !8347)
!8383 = !DILocation(line: 280, column: 28, scope: !8347)
!8384 = !DILocation(line: 280, column: 26, scope: !8347)
!8385 = !DILocation(line: 282, column: 7, scope: !8326)
!8386 = !DILocation(line: 285, column: 21, scope: !8326)
!8387 = !DILocation(line: 286, column: 26, scope: !8326)
!8388 = !DILocation(line: 286, column: 7, scope: !8326)
!8389 = !DILocation(line: 289, column: 12, scope: !8390)
!8390 = distinct !DILexicalBlock(scope: !8326, file: !160, line: 289, column: 11)
!8391 = !DILocation(line: 289, column: 11, scope: !8326)
!8392 = !DILocation(line: 290, column: 9, scope: !8390)
!8393 = distinct !{!8393, !8392, !8392}
!8394 = !DILocation(line: 290, column: 9, scope: !8395)
!8395 = distinct !DILexicalBlock(scope: !8396, file: !160, line: 290, column: 9)
!8396 = distinct !DILexicalBlock(scope: !8390, file: !160, line: 290, column: 9)
!8397 = !DILocation(line: 290, column: 9, scope: !8396)
!8398 = !DILocation(line: 291, column: 20, scope: !8326)
!8399 = !DILocation(line: 292, column: 24, scope: !8326)
!8400 = !DILocation(line: 293, column: 7, scope: !8326)
!8401 = !DILocation(line: 296, column: 26, scope: !8326)
!8402 = !DILocation(line: 297, column: 7, scope: !8326)
!8403 = !DILocation(line: 300, column: 7, scope: !8326)
!8404 = !DILocation(line: 303, column: 10, scope: !8405)
!8405 = distinct !DILexicalBlock(scope: !8281, file: !160, line: 303, column: 3)
!8406 = !DILocation(line: 303, column: 8, scope: !8405)
!8407 = !DILocation(line: 303, column: 19, scope: !8408)
!8408 = distinct !DILexicalBlock(scope: !8405, file: !160, line: 303, column: 3)
!8409 = !DILocation(line: 303, column: 27, scope: !8408)
!8410 = !DILocation(line: 303, column: 41, scope: !8408)
!8411 = !DILocation(line: 303, column: 45, scope: !8408)
!8412 = !DILocation(line: 303, column: 48, scope: !8408)
!8413 = !DILocation(line: 303, column: 58, scope: !8408)
!8414 = !DILocation(line: 303, column: 63, scope: !8408)
!8415 = !DILocation(line: 303, column: 60, scope: !8408)
!8416 = !DILocation(line: 303, column: 16, scope: !8408)
!8417 = !DILocation(line: 303, column: 3, scope: !8405)
!8418 = !DILocalVariable(name: "c", scope: !8419, file: !160, line: 305, type: !1795)
!8419 = distinct !DILexicalBlock(scope: !8408, file: !160, line: 304, column: 5)
!8420 = !DILocation(line: 305, column: 21, scope: !8419)
!8421 = !DILocalVariable(name: "esc", scope: !8419, file: !160, line: 306, type: !1795)
!8422 = !DILocation(line: 306, column: 21, scope: !8419)
!8423 = !DILocalVariable(name: "is_right_quote", scope: !8419, file: !160, line: 307, type: !131)
!8424 = !DILocation(line: 307, column: 12, scope: !8419)
!8425 = !DILocation(line: 309, column: 11, scope: !8426)
!8426 = distinct !DILexicalBlock(scope: !8419, file: !160, line: 309, column: 11)
!8427 = !DILocation(line: 310, column: 11, scope: !8426)
!8428 = !DILocation(line: 310, column: 14, scope: !8426)
!8429 = !DILocation(line: 311, column: 11, scope: !8426)
!8430 = !DILocation(line: 311, column: 14, scope: !8426)
!8431 = !DILocation(line: 311, column: 18, scope: !8426)
!8432 = !DILocation(line: 311, column: 16, scope: !8426)
!8433 = !DILocation(line: 311, column: 38, scope: !8426)
!8434 = !DILocation(line: 311, column: 35, scope: !8426)
!8435 = !DILocation(line: 312, column: 11, scope: !8426)
!8436 = !DILocation(line: 312, column: 22, scope: !8426)
!8437 = !DILocation(line: 312, column: 28, scope: !8426)
!8438 = !DILocation(line: 312, column: 26, scope: !8426)
!8439 = !DILocation(line: 312, column: 31, scope: !8426)
!8440 = !DILocation(line: 312, column: 45, scope: !8426)
!8441 = !DILocation(line: 312, column: 14, scope: !8426)
!8442 = !DILocation(line: 312, column: 63, scope: !8426)
!8443 = !DILocation(line: 309, column: 11, scope: !8419)
!8444 = !DILocation(line: 314, column: 15, scope: !8445)
!8445 = distinct !DILexicalBlock(scope: !8446, file: !160, line: 314, column: 15)
!8446 = distinct !DILexicalBlock(scope: !8426, file: !160, line: 313, column: 9)
!8447 = !DILocation(line: 314, column: 15, scope: !8446)
!8448 = !DILocation(line: 315, column: 13, scope: !8445)
!8449 = !DILocation(line: 316, column: 26, scope: !8446)
!8450 = !DILocation(line: 317, column: 9, scope: !8446)
!8451 = !DILocation(line: 319, column: 11, scope: !8419)
!8452 = !DILocation(line: 319, column: 15, scope: !8419)
!8453 = !DILocation(line: 319, column: 9, scope: !8419)
!8454 = !DILocation(line: 320, column: 15, scope: !8419)
!8455 = !DILocation(line: 320, column: 7, scope: !8419)
!8456 = !DILocation(line: 323, column: 15, scope: !8457)
!8457 = distinct !DILexicalBlock(scope: !8458, file: !160, line: 323, column: 15)
!8458 = distinct !DILexicalBlock(scope: !8419, file: !160, line: 321, column: 9)
!8459 = !DILocation(line: 323, column: 15, scope: !8458)
!8460 = !DILocation(line: 325, column: 19, scope: !8461)
!8461 = distinct !DILexicalBlock(scope: !8462, file: !160, line: 325, column: 19)
!8462 = distinct !DILexicalBlock(scope: !8457, file: !160, line: 324, column: 13)
!8463 = !DILocation(line: 325, column: 19, scope: !8462)
!8464 = !DILocation(line: 326, column: 17, scope: !8461)
!8465 = !DILocation(line: 327, column: 15, scope: !8462)
!8466 = distinct !{!8466, !8465, !8465}
!8467 = !DILocation(line: 327, column: 15, scope: !8468)
!8468 = distinct !DILexicalBlock(scope: !8469, file: !160, line: 327, column: 15)
!8469 = distinct !DILexicalBlock(scope: !8462, file: !160, line: 327, column: 15)
!8470 = !DILocation(line: 327, column: 15, scope: !8469)
!8471 = !DILocation(line: 333, column: 19, scope: !8472)
!8472 = distinct !DILexicalBlock(scope: !8462, file: !160, line: 333, column: 19)
!8473 = !DILocation(line: 333, column: 21, scope: !8472)
!8474 = !DILocation(line: 333, column: 27, scope: !8472)
!8475 = !DILocation(line: 333, column: 25, scope: !8472)
!8476 = !DILocation(line: 333, column: 35, scope: !8472)
!8477 = !DILocation(line: 333, column: 45, scope: !8472)
!8478 = !DILocation(line: 333, column: 49, scope: !8472)
!8479 = !DILocation(line: 333, column: 51, scope: !8472)
!8480 = !DILocation(line: 333, column: 42, scope: !8472)
!8481 = !DILocation(line: 333, column: 56, scope: !8472)
!8482 = !DILocation(line: 333, column: 59, scope: !8472)
!8483 = !DILocation(line: 333, column: 63, scope: !8472)
!8484 = !DILocation(line: 333, column: 65, scope: !8472)
!8485 = !DILocation(line: 333, column: 70, scope: !8472)
!8486 = !DILocation(line: 333, column: 19, scope: !8462)
!8487 = !DILocation(line: 335, column: 19, scope: !8488)
!8488 = distinct !DILexicalBlock(scope: !8472, file: !160, line: 334, column: 17)
!8489 = distinct !{!8489, !8487, !8487}
!8490 = !DILocation(line: 335, column: 19, scope: !8491)
!8491 = distinct !DILexicalBlock(scope: !8492, file: !160, line: 335, column: 19)
!8492 = distinct !DILexicalBlock(scope: !8488, file: !160, line: 335, column: 19)
!8493 = !DILocation(line: 335, column: 19, scope: !8492)
!8494 = !DILocation(line: 336, column: 19, scope: !8488)
!8495 = distinct !{!8495, !8494, !8494}
!8496 = !DILocation(line: 336, column: 19, scope: !8497)
!8497 = distinct !DILexicalBlock(scope: !8498, file: !160, line: 336, column: 19)
!8498 = distinct !DILexicalBlock(scope: !8488, file: !160, line: 336, column: 19)
!8499 = !DILocation(line: 336, column: 19, scope: !8498)
!8500 = !DILocation(line: 337, column: 17, scope: !8488)
!8501 = !DILocation(line: 338, column: 17, scope: !8462)
!8502 = !DILocation(line: 343, column: 13, scope: !8462)
!8503 = !DILocation(line: 344, column: 20, scope: !8504)
!8504 = distinct !DILexicalBlock(scope: !8457, file: !160, line: 344, column: 20)
!8505 = !DILocation(line: 344, column: 26, scope: !8504)
!8506 = !DILocation(line: 344, column: 20, scope: !8457)
!8507 = !DILocation(line: 345, column: 13, scope: !8504)
!8508 = !DILocation(line: 346, column: 11, scope: !8458)
!8509 = !DILocation(line: 349, column: 19, scope: !8458)
!8510 = !DILocation(line: 349, column: 11, scope: !8458)
!8511 = !DILocation(line: 352, column: 19, scope: !8512)
!8512 = distinct !DILexicalBlock(scope: !8513, file: !160, line: 352, column: 19)
!8513 = distinct !DILexicalBlock(scope: !8458, file: !160, line: 350, column: 13)
!8514 = !DILocation(line: 352, column: 19, scope: !8513)
!8515 = !DILocation(line: 353, column: 17, scope: !8512)
!8516 = !DILocation(line: 354, column: 15, scope: !8513)
!8517 = !DILocation(line: 357, column: 20, scope: !8518)
!8518 = distinct !DILexicalBlock(scope: !8513, file: !160, line: 357, column: 19)
!8519 = !DILocation(line: 357, column: 26, scope: !8518)
!8520 = !DILocation(line: 358, column: 19, scope: !8518)
!8521 = !DILocation(line: 358, column: 22, scope: !8518)
!8522 = !DILocation(line: 358, column: 24, scope: !8518)
!8523 = !DILocation(line: 358, column: 30, scope: !8518)
!8524 = !DILocation(line: 358, column: 28, scope: !8518)
!8525 = !DILocation(line: 358, column: 38, scope: !8518)
!8526 = !DILocation(line: 358, column: 41, scope: !8518)
!8527 = !DILocation(line: 358, column: 45, scope: !8518)
!8528 = !DILocation(line: 358, column: 47, scope: !8518)
!8529 = !DILocation(line: 358, column: 52, scope: !8518)
!8530 = !DILocation(line: 357, column: 19, scope: !8513)
!8531 = !DILocation(line: 359, column: 25, scope: !8518)
!8532 = !DILocation(line: 359, column: 29, scope: !8518)
!8533 = !DILocation(line: 359, column: 31, scope: !8518)
!8534 = !DILocation(line: 359, column: 17, scope: !8518)
!8535 = !DILocation(line: 366, column: 25, scope: !8536)
!8536 = distinct !DILexicalBlock(scope: !8537, file: !160, line: 366, column: 25)
!8537 = distinct !DILexicalBlock(scope: !8518, file: !160, line: 360, column: 19)
!8538 = !DILocation(line: 366, column: 25, scope: !8537)
!8539 = !DILocation(line: 367, column: 23, scope: !8536)
!8540 = !DILocation(line: 368, column: 25, scope: !8537)
!8541 = !DILocation(line: 368, column: 29, scope: !8537)
!8542 = !DILocation(line: 368, column: 31, scope: !8537)
!8543 = !DILocation(line: 368, column: 23, scope: !8537)
!8544 = !DILocation(line: 369, column: 23, scope: !8537)
!8545 = !DILocation(line: 370, column: 21, scope: !8537)
!8546 = distinct !{!8546, !8545, !8545}
!8547 = !DILocation(line: 370, column: 21, scope: !8548)
!8548 = distinct !DILexicalBlock(scope: !8549, file: !160, line: 370, column: 21)
!8549 = distinct !DILexicalBlock(scope: !8537, file: !160, line: 370, column: 21)
!8550 = !DILocation(line: 370, column: 21, scope: !8549)
!8551 = !DILocation(line: 371, column: 21, scope: !8537)
!8552 = distinct !{!8552, !8551, !8551}
!8553 = !DILocation(line: 371, column: 21, scope: !8554)
!8554 = distinct !DILexicalBlock(scope: !8555, file: !160, line: 371, column: 21)
!8555 = distinct !DILexicalBlock(scope: !8537, file: !160, line: 371, column: 21)
!8556 = !DILocation(line: 371, column: 21, scope: !8555)
!8557 = !DILocation(line: 372, column: 21, scope: !8537)
!8558 = distinct !{!8558, !8557, !8557}
!8559 = !DILocation(line: 372, column: 21, scope: !8560)
!8560 = distinct !DILexicalBlock(scope: !8561, file: !160, line: 372, column: 21)
!8561 = distinct !DILexicalBlock(scope: !8537, file: !160, line: 372, column: 21)
!8562 = !DILocation(line: 372, column: 21, scope: !8561)
!8563 = !DILocation(line: 373, column: 21, scope: !8537)
!8564 = distinct !{!8564, !8563, !8563}
!8565 = !DILocation(line: 373, column: 21, scope: !8566)
!8566 = distinct !DILexicalBlock(scope: !8567, file: !160, line: 373, column: 21)
!8567 = distinct !DILexicalBlock(scope: !8537, file: !160, line: 373, column: 21)
!8568 = !DILocation(line: 373, column: 21, scope: !8567)
!8569 = !DILocation(line: 374, column: 21, scope: !8537)
!8570 = !DILocation(line: 377, column: 21, scope: !8537)
!8571 = !DILocation(line: 378, column: 19, scope: !8537)
!8572 = !DILocation(line: 379, column: 15, scope: !8513)
!8573 = !DILocation(line: 382, column: 15, scope: !8513)
!8574 = !DILocation(line: 384, column: 11, scope: !8458)
!8575 = !DILocation(line: 386, column: 24, scope: !8458)
!8576 = !DILocation(line: 386, column: 31, scope: !8458)
!8577 = !DILocation(line: 387, column: 24, scope: !8458)
!8578 = !DILocation(line: 387, column: 31, scope: !8458)
!8579 = !DILocation(line: 388, column: 24, scope: !8458)
!8580 = !DILocation(line: 388, column: 31, scope: !8458)
!8581 = !DILocation(line: 389, column: 24, scope: !8458)
!8582 = !DILocation(line: 389, column: 31, scope: !8458)
!8583 = !DILocation(line: 390, column: 24, scope: !8458)
!8584 = !DILocation(line: 390, column: 31, scope: !8458)
!8585 = !DILocation(line: 391, column: 24, scope: !8458)
!8586 = !DILocation(line: 391, column: 31, scope: !8458)
!8587 = !DILocation(line: 392, column: 24, scope: !8458)
!8588 = !DILocation(line: 392, column: 31, scope: !8458)
!8589 = !DILocation(line: 393, column: 26, scope: !8458)
!8590 = !DILocation(line: 393, column: 24, scope: !8458)
!8591 = !DILocation(line: 396, column: 15, scope: !8592)
!8592 = distinct !DILexicalBlock(scope: !8458, file: !160, line: 396, column: 15)
!8593 = !DILocation(line: 396, column: 33, scope: !8592)
!8594 = !DILocation(line: 396, column: 36, scope: !8592)
!8595 = !DILocation(line: 396, column: 55, scope: !8592)
!8596 = !DILocation(line: 396, column: 58, scope: !8592)
!8597 = !DILocation(line: 396, column: 15, scope: !8458)
!8598 = !DILocation(line: 397, column: 13, scope: !8592)
!8599 = !DILocation(line: 400, column: 15, scope: !8600)
!8600 = distinct !DILexicalBlock(scope: !8458, file: !160, line: 400, column: 15)
!8601 = !DILocation(line: 400, column: 29, scope: !8600)
!8602 = !DILocation(line: 401, column: 15, scope: !8600)
!8603 = !DILocation(line: 401, column: 18, scope: !8600)
!8604 = !DILocation(line: 400, column: 15, scope: !8458)
!8605 = !DILocation(line: 402, column: 13, scope: !8600)
!8606 = !DILocation(line: 405, column: 15, scope: !8607)
!8607 = distinct !DILexicalBlock(scope: !8458, file: !160, line: 405, column: 15)
!8608 = !DILocation(line: 405, column: 15, scope: !8458)
!8609 = !DILocation(line: 407, column: 19, scope: !8610)
!8610 = distinct !DILexicalBlock(scope: !8607, file: !160, line: 406, column: 13)
!8611 = !DILocation(line: 407, column: 17, scope: !8610)
!8612 = !DILocation(line: 408, column: 15, scope: !8610)
!8613 = !DILocation(line: 410, column: 11, scope: !8458)
!8614 = !DILocation(line: 413, column: 18, scope: !8615)
!8615 = distinct !DILexicalBlock(scope: !8458, file: !160, line: 413, column: 15)
!8616 = !DILocation(line: 413, column: 26, scope: !8615)
!8617 = !DILocation(line: 413, column: 15, scope: !8458)
!8618 = !DILocation(line: 413, column: 40, scope: !8615)
!8619 = !DILocation(line: 413, column: 47, scope: !8615)
!8620 = !DILocation(line: 413, column: 57, scope: !8615)
!8621 = !DILocation(line: 413, column: 65, scope: !8615)
!8622 = !DILocation(line: 414, column: 13, scope: !8615)
!8623 = !DILocation(line: 413, column: 69, scope: !8615)
!8624 = !DILocation(line: 417, column: 15, scope: !8625)
!8625 = distinct !DILexicalBlock(scope: !8458, file: !160, line: 417, column: 15)
!8626 = !DILocation(line: 417, column: 17, scope: !8625)
!8627 = !DILocation(line: 417, column: 15, scope: !8458)
!8628 = !DILocation(line: 418, column: 13, scope: !8625)
!8629 = !DILocation(line: 417, column: 20, scope: !8625)
!8630 = !DILocation(line: 433, column: 15, scope: !8631)
!8631 = distinct !DILexicalBlock(scope: !8458, file: !160, line: 433, column: 15)
!8632 = !DILocation(line: 433, column: 29, scope: !8631)
!8633 = !DILocation(line: 434, column: 15, scope: !8631)
!8634 = !DILocation(line: 434, column: 18, scope: !8631)
!8635 = !DILocation(line: 433, column: 15, scope: !8458)
!8636 = !DILocation(line: 435, column: 13, scope: !8631)
!8637 = !DILocation(line: 436, column: 11, scope: !8458)
!8638 = !DILocation(line: 439, column: 15, scope: !8639)
!8639 = distinct !DILexicalBlock(scope: !8458, file: !160, line: 439, column: 15)
!8640 = !DILocation(line: 439, column: 29, scope: !8639)
!8641 = !DILocation(line: 439, column: 15, scope: !8458)
!8642 = !DILocation(line: 441, column: 19, scope: !8643)
!8643 = distinct !DILexicalBlock(scope: !8644, file: !160, line: 441, column: 19)
!8644 = distinct !DILexicalBlock(scope: !8639, file: !160, line: 440, column: 13)
!8645 = !DILocation(line: 441, column: 19, scope: !8644)
!8646 = !DILocation(line: 442, column: 17, scope: !8643)
!8647 = !DILocation(line: 443, column: 15, scope: !8644)
!8648 = distinct !{!8648, !8647, !8647}
!8649 = !DILocation(line: 443, column: 15, scope: !8650)
!8650 = distinct !DILexicalBlock(scope: !8651, file: !160, line: 443, column: 15)
!8651 = distinct !DILexicalBlock(scope: !8644, file: !160, line: 443, column: 15)
!8652 = !DILocation(line: 443, column: 15, scope: !8651)
!8653 = !DILocation(line: 444, column: 15, scope: !8644)
!8654 = distinct !{!8654, !8653, !8653}
!8655 = !DILocation(line: 444, column: 15, scope: !8656)
!8656 = distinct !DILexicalBlock(scope: !8657, file: !160, line: 444, column: 15)
!8657 = distinct !DILexicalBlock(scope: !8644, file: !160, line: 444, column: 15)
!8658 = !DILocation(line: 444, column: 15, scope: !8657)
!8659 = !DILocation(line: 445, column: 15, scope: !8644)
!8660 = distinct !{!8660, !8659, !8659}
!8661 = !DILocation(line: 445, column: 15, scope: !8662)
!8662 = distinct !DILexicalBlock(scope: !8663, file: !160, line: 445, column: 15)
!8663 = distinct !DILexicalBlock(scope: !8644, file: !160, line: 445, column: 15)
!8664 = !DILocation(line: 445, column: 15, scope: !8663)
!8665 = !DILocation(line: 446, column: 13, scope: !8644)
!8666 = !DILocation(line: 447, column: 11, scope: !8458)
!8667 = !DILocation(line: 471, column: 11, scope: !8458)
!8668 = !DILocalVariable(name: "m", scope: !8669, file: !160, line: 481, type: !143)
!8669 = distinct !DILexicalBlock(scope: !8458, file: !160, line: 479, column: 11)
!8670 = !DILocation(line: 481, column: 20, scope: !8669)
!8671 = !DILocalVariable(name: "printable", scope: !8669, file: !160, line: 483, type: !131)
!8672 = !DILocation(line: 483, column: 18, scope: !8669)
!8673 = !DILocation(line: 485, column: 17, scope: !8674)
!8674 = distinct !DILexicalBlock(scope: !8669, file: !160, line: 485, column: 17)
!8675 = !DILocation(line: 485, column: 17, scope: !8669)
!8676 = !DILocation(line: 487, column: 19, scope: !8677)
!8677 = distinct !DILexicalBlock(scope: !8674, file: !160, line: 486, column: 15)
!8678 = !DILocation(line: 488, column: 29, scope: !8677)
!8679 = !DILocation(line: 488, column: 41, scope: !8677)
!8680 = !DILocation(line: 488, column: 27, scope: !8677)
!8681 = !DILocation(line: 489, column: 15, scope: !8677)
!8682 = !DILocalVariable(name: "mbstate", scope: !8683, file: !160, line: 492, type: !8684)
!8683 = distinct !DILexicalBlock(scope: !8674, file: !160, line: 491, column: 15)
!8684 = !DIDerivedType(tag: DW_TAG_typedef, name: "mbstate_t", file: !8685, line: 6, baseType: !8686)
!8685 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/mbstate_t.h", directory: "/home/ma481/Downloads/Chisel/chisel-bench/benchmark/rm-8.4/original/obj-llvm/lib")
!8686 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mbstate_t", file: !8687, line: 21, baseType: !8688)
!8687 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/__mbstate_t.h", directory: "/home/ma481/Downloads/Chisel/chisel-bench/benchmark/rm-8.4/original/obj-llvm/lib")
!8688 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !8687, line: 13, size: 64, elements: !8689)
!8689 = !{!8690, !8691}
!8690 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !8688, file: !8687, line: 15, baseType: !46, size: 32)
!8691 = !DIDerivedType(tag: DW_TAG_member, name: "__value", scope: !8688, file: !8687, line: 20, baseType: !8692, size: 32, offset: 32)
!8692 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8688, file: !8687, line: 16, size: 32, elements: !8693)
!8693 = !{!8694, !8695}
!8694 = !DIDerivedType(tag: DW_TAG_member, name: "__wch", scope: !8692, file: !8687, line: 18, baseType: !199, size: 32)
!8695 = !DIDerivedType(tag: DW_TAG_member, name: "__wchb", scope: !8692, file: !8687, line: 19, baseType: !8696, size: 32)
!8696 = !DICompositeType(tag: DW_TAG_array_type, baseType: !37, size: 32, elements: !416)
!8697 = !DILocation(line: 492, column: 27, scope: !8683)
!8698 = !DILocation(line: 493, column: 17, scope: !8683)
!8699 = !DILocation(line: 495, column: 19, scope: !8683)
!8700 = !DILocation(line: 496, column: 27, scope: !8683)
!8701 = !DILocation(line: 497, column: 21, scope: !8702)
!8702 = distinct !DILexicalBlock(scope: !8683, file: !160, line: 497, column: 21)
!8703 = !DILocation(line: 497, column: 29, scope: !8702)
!8704 = !DILocation(line: 497, column: 21, scope: !8683)
!8705 = !DILocation(line: 498, column: 37, scope: !8702)
!8706 = !DILocation(line: 498, column: 29, scope: !8702)
!8707 = !DILocation(line: 498, column: 27, scope: !8702)
!8708 = !DILocation(line: 498, column: 19, scope: !8702)
!8709 = !DILocation(line: 500, column: 17, scope: !8683)
!8710 = distinct !{!8710, !8709, !8711}
!8711 = !DILocation(line: 546, column: 44, scope: !8683)
!8712 = !DILocalVariable(name: "w", scope: !8713, file: !160, line: 502, type: !8714)
!8713 = distinct !DILexicalBlock(scope: !8683, file: !160, line: 501, column: 19)
!8714 = !DIDerivedType(tag: DW_TAG_typedef, name: "wchar_t", file: !144, line: 90, baseType: !46)
!8715 = !DILocation(line: 502, column: 29, scope: !8713)
!8716 = !DILocalVariable(name: "bytes", scope: !8713, file: !160, line: 503, type: !143)
!8717 = !DILocation(line: 503, column: 28, scope: !8713)
!8718 = !DILocation(line: 503, column: 50, scope: !8713)
!8719 = !DILocation(line: 503, column: 54, scope: !8713)
!8720 = !DILocation(line: 503, column: 58, scope: !8713)
!8721 = !DILocation(line: 503, column: 56, scope: !8713)
!8722 = !DILocation(line: 504, column: 45, scope: !8713)
!8723 = !DILocation(line: 504, column: 56, scope: !8713)
!8724 = !DILocation(line: 504, column: 60, scope: !8713)
!8725 = !DILocation(line: 504, column: 58, scope: !8713)
!8726 = !DILocation(line: 504, column: 53, scope: !8713)
!8727 = !DILocation(line: 503, column: 36, scope: !8713)
!8728 = !DILocation(line: 505, column: 25, scope: !8729)
!8729 = distinct !DILexicalBlock(scope: !8713, file: !160, line: 505, column: 25)
!8730 = !DILocation(line: 505, column: 31, scope: !8729)
!8731 = !DILocation(line: 505, column: 25, scope: !8713)
!8732 = !DILocation(line: 506, column: 23, scope: !8729)
!8733 = !DILocation(line: 507, column: 30, scope: !8734)
!8734 = distinct !DILexicalBlock(scope: !8729, file: !160, line: 507, column: 30)
!8735 = !DILocation(line: 507, column: 36, scope: !8734)
!8736 = !DILocation(line: 507, column: 30, scope: !8729)
!8737 = !DILocation(line: 509, column: 35, scope: !8738)
!8738 = distinct !DILexicalBlock(scope: !8734, file: !160, line: 508, column: 23)
!8739 = !DILocation(line: 510, column: 25, scope: !8738)
!8740 = !DILocation(line: 512, column: 30, scope: !8741)
!8741 = distinct !DILexicalBlock(scope: !8734, file: !160, line: 512, column: 30)
!8742 = !DILocation(line: 512, column: 36, scope: !8741)
!8743 = !DILocation(line: 512, column: 30, scope: !8734)
!8744 = !DILocation(line: 514, column: 35, scope: !8745)
!8745 = distinct !DILexicalBlock(scope: !8741, file: !160, line: 513, column: 23)
!8746 = !DILocation(line: 515, column: 25, scope: !8745)
!8747 = !DILocation(line: 515, column: 32, scope: !8745)
!8748 = !DILocation(line: 515, column: 36, scope: !8745)
!8749 = !DILocation(line: 515, column: 34, scope: !8745)
!8750 = !DILocation(line: 515, column: 40, scope: !8745)
!8751 = !DILocation(line: 515, column: 38, scope: !8745)
!8752 = !DILocation(line: 515, column: 48, scope: !8745)
!8753 = !DILocation(line: 515, column: 51, scope: !8745)
!8754 = !DILocation(line: 515, column: 55, scope: !8745)
!8755 = !DILocation(line: 515, column: 59, scope: !8745)
!8756 = !DILocation(line: 515, column: 57, scope: !8745)
!8757 = !DILocation(line: 516, column: 28, scope: !8745)
!8758 = distinct !{!8758, !8746, !8757}
!8759 = !DILocation(line: 517, column: 25, scope: !8745)
!8760 = !DILocation(line: 525, column: 44, scope: !8761)
!8761 = distinct !DILexicalBlock(scope: !8762, file: !160, line: 525, column: 29)
!8762 = distinct !DILexicalBlock(scope: !8741, file: !160, line: 520, column: 23)
!8763 = !DILocation(line: 526, column: 29, scope: !8761)
!8764 = !DILocation(line: 526, column: 32, scope: !8761)
!8765 = !DILocation(line: 526, column: 46, scope: !8761)
!8766 = !DILocation(line: 525, column: 29, scope: !8762)
!8767 = !DILocalVariable(name: "j", scope: !8768, file: !160, line: 528, type: !143)
!8768 = distinct !DILexicalBlock(scope: !8761, file: !160, line: 527, column: 27)
!8769 = !DILocation(line: 528, column: 36, scope: !8768)
!8770 = !DILocation(line: 529, column: 36, scope: !8771)
!8771 = distinct !DILexicalBlock(scope: !8768, file: !160, line: 529, column: 29)
!8772 = !DILocation(line: 529, column: 34, scope: !8771)
!8773 = !DILocation(line: 529, column: 41, scope: !8774)
!8774 = distinct !DILexicalBlock(scope: !8771, file: !160, line: 529, column: 29)
!8775 = !DILocation(line: 529, column: 45, scope: !8774)
!8776 = !DILocation(line: 529, column: 43, scope: !8774)
!8777 = !DILocation(line: 529, column: 29, scope: !8771)
!8778 = !DILocation(line: 530, column: 39, scope: !8774)
!8779 = !DILocation(line: 530, column: 43, scope: !8774)
!8780 = !DILocation(line: 530, column: 47, scope: !8774)
!8781 = !DILocation(line: 530, column: 45, scope: !8774)
!8782 = !DILocation(line: 530, column: 51, scope: !8774)
!8783 = !DILocation(line: 530, column: 49, scope: !8774)
!8784 = !DILocation(line: 530, column: 31, scope: !8774)
!8785 = !DILocation(line: 534, column: 35, scope: !8786)
!8786 = distinct !DILexicalBlock(scope: !8774, file: !160, line: 531, column: 33)
!8787 = !DILocation(line: 537, column: 35, scope: !8786)
!8788 = !DILocation(line: 538, column: 33, scope: !8786)
!8789 = !DILocation(line: 529, column: 53, scope: !8774)
!8790 = !DILocation(line: 529, column: 29, scope: !8774)
!8791 = distinct !{!8791, !8777, !8792}
!8792 = !DILocation(line: 538, column: 33, scope: !8771)
!8793 = !DILocation(line: 539, column: 27, scope: !8768)
!8794 = !DILocation(line: 541, column: 41, scope: !8795)
!8795 = distinct !DILexicalBlock(scope: !8762, file: !160, line: 541, column: 29)
!8796 = !DILocation(line: 541, column: 31, scope: !8795)
!8797 = !DILocation(line: 541, column: 29, scope: !8762)
!8798 = !DILocation(line: 542, column: 37, scope: !8795)
!8799 = !DILocation(line: 542, column: 27, scope: !8795)
!8800 = !DILocation(line: 543, column: 30, scope: !8762)
!8801 = !DILocation(line: 543, column: 27, scope: !8762)
!8802 = !DILocation(line: 545, column: 19, scope: !8713)
!8803 = !DILocation(line: 546, column: 26, scope: !8683)
!8804 = !DILocation(line: 546, column: 24, scope: !8683)
!8805 = !DILocation(line: 549, column: 21, scope: !8806)
!8806 = distinct !DILexicalBlock(scope: !8669, file: !160, line: 549, column: 17)
!8807 = !DILocation(line: 549, column: 19, scope: !8806)
!8808 = !DILocation(line: 549, column: 23, scope: !8806)
!8809 = !DILocation(line: 549, column: 27, scope: !8806)
!8810 = !DILocation(line: 549, column: 45, scope: !8806)
!8811 = !DILocation(line: 549, column: 50, scope: !8806)
!8812 = !DILocation(line: 549, column: 17, scope: !8669)
!8813 = !DILocalVariable(name: "ilim", scope: !8814, file: !160, line: 553, type: !143)
!8814 = distinct !DILexicalBlock(scope: !8806, file: !160, line: 550, column: 15)
!8815 = !DILocation(line: 553, column: 24, scope: !8814)
!8816 = !DILocation(line: 553, column: 31, scope: !8814)
!8817 = !DILocation(line: 553, column: 35, scope: !8814)
!8818 = !DILocation(line: 553, column: 33, scope: !8814)
!8819 = !DILocation(line: 555, column: 17, scope: !8814)
!8820 = !DILocation(line: 557, column: 25, scope: !8821)
!8821 = distinct !DILexicalBlock(scope: !8822, file: !160, line: 557, column: 25)
!8822 = distinct !DILexicalBlock(scope: !8823, file: !160, line: 556, column: 19)
!8823 = distinct !DILexicalBlock(scope: !8824, file: !160, line: 555, column: 17)
!8824 = distinct !DILexicalBlock(scope: !8814, file: !160, line: 555, column: 17)
!8825 = !DILocation(line: 557, column: 43, scope: !8821)
!8826 = !DILocation(line: 557, column: 48, scope: !8821)
!8827 = !DILocation(line: 557, column: 25, scope: !8822)
!8828 = !DILocation(line: 559, column: 29, scope: !8829)
!8829 = distinct !DILexicalBlock(scope: !8830, file: !160, line: 559, column: 29)
!8830 = distinct !DILexicalBlock(scope: !8821, file: !160, line: 558, column: 23)
!8831 = !DILocation(line: 559, column: 29, scope: !8830)
!8832 = !DILocation(line: 560, column: 27, scope: !8829)
!8833 = !DILocation(line: 561, column: 25, scope: !8830)
!8834 = distinct !{!8834, !8833, !8833}
!8835 = !DILocation(line: 561, column: 25, scope: !8836)
!8836 = distinct !DILexicalBlock(scope: !8837, file: !160, line: 561, column: 25)
!8837 = distinct !DILexicalBlock(scope: !8830, file: !160, line: 561, column: 25)
!8838 = !DILocation(line: 561, column: 25, scope: !8837)
!8839 = !DILocation(line: 562, column: 25, scope: !8830)
!8840 = distinct !{!8840, !8839, !8839}
!8841 = !DILocation(line: 562, column: 25, scope: !8842)
!8842 = distinct !DILexicalBlock(scope: !8843, file: !160, line: 562, column: 25)
!8843 = distinct !DILexicalBlock(scope: !8830, file: !160, line: 562, column: 25)
!8844 = !DILocation(line: 562, column: 25, scope: !8843)
!8845 = !DILocation(line: 563, column: 25, scope: !8830)
!8846 = distinct !{!8846, !8845, !8845}
!8847 = !DILocation(line: 563, column: 25, scope: !8848)
!8848 = distinct !DILexicalBlock(scope: !8849, file: !160, line: 563, column: 25)
!8849 = distinct !DILexicalBlock(scope: !8830, file: !160, line: 563, column: 25)
!8850 = !DILocation(line: 563, column: 25, scope: !8849)
!8851 = !DILocation(line: 564, column: 36, scope: !8830)
!8852 = !DILocation(line: 564, column: 38, scope: !8830)
!8853 = !DILocation(line: 564, column: 33, scope: !8830)
!8854 = !DILocation(line: 564, column: 29, scope: !8830)
!8855 = !DILocation(line: 564, column: 27, scope: !8830)
!8856 = !DILocation(line: 565, column: 23, scope: !8830)
!8857 = !DILocation(line: 566, column: 30, scope: !8858)
!8858 = distinct !DILexicalBlock(scope: !8821, file: !160, line: 566, column: 30)
!8859 = !DILocation(line: 566, column: 30, scope: !8821)
!8860 = !DILocation(line: 568, column: 25, scope: !8861)
!8861 = distinct !DILexicalBlock(scope: !8858, file: !160, line: 567, column: 23)
!8862 = distinct !{!8862, !8860, !8860}
!8863 = !DILocation(line: 568, column: 25, scope: !8864)
!8864 = distinct !DILexicalBlock(scope: !8865, file: !160, line: 568, column: 25)
!8865 = distinct !DILexicalBlock(scope: !8861, file: !160, line: 568, column: 25)
!8866 = !DILocation(line: 568, column: 25, scope: !8865)
!8867 = !DILocation(line: 569, column: 40, scope: !8861)
!8868 = !DILocation(line: 570, column: 23, scope: !8861)
!8869 = !DILocation(line: 571, column: 25, scope: !8870)
!8870 = distinct !DILexicalBlock(scope: !8822, file: !160, line: 571, column: 25)
!8871 = !DILocation(line: 571, column: 33, scope: !8870)
!8872 = !DILocation(line: 571, column: 35, scope: !8870)
!8873 = !DILocation(line: 571, column: 30, scope: !8870)
!8874 = !DILocation(line: 571, column: 25, scope: !8822)
!8875 = !DILocation(line: 572, column: 23, scope: !8870)
!8876 = !DILocation(line: 573, column: 21, scope: !8822)
!8877 = distinct !{!8877, !8876, !8876}
!8878 = !DILocation(line: 573, column: 21, scope: !8879)
!8879 = distinct !DILexicalBlock(scope: !8880, file: !160, line: 573, column: 21)
!8880 = distinct !DILexicalBlock(scope: !8822, file: !160, line: 573, column: 21)
!8881 = !DILocation(line: 573, column: 21, scope: !8880)
!8882 = !DILocation(line: 574, column: 25, scope: !8822)
!8883 = !DILocation(line: 574, column: 29, scope: !8822)
!8884 = !DILocation(line: 574, column: 23, scope: !8822)
!8885 = !DILocation(line: 555, column: 17, scope: !8823)
!8886 = distinct !{!8886, !8887, !8888}
!8887 = !DILocation(line: 555, column: 17, scope: !8824)
!8888 = !DILocation(line: 575, column: 19, scope: !8824)
!8889 = !DILocation(line: 577, column: 17, scope: !8814)
!8890 = !DILocation(line: 580, column: 9, scope: !8458)
!8891 = !DILocation(line: 582, column: 15, scope: !8892)
!8892 = distinct !DILexicalBlock(scope: !8419, file: !160, line: 582, column: 11)
!8893 = !DILocation(line: 582, column: 33, scope: !8892)
!8894 = !DILocation(line: 582, column: 36, scope: !8892)
!8895 = !DILocation(line: 583, column: 14, scope: !8892)
!8896 = !DILocation(line: 583, column: 17, scope: !8892)
!8897 = !DILocation(line: 584, column: 14, scope: !8892)
!8898 = !DILocation(line: 584, column: 17, scope: !8892)
!8899 = !DILocation(line: 584, column: 33, scope: !8892)
!8900 = !DILocation(line: 584, column: 35, scope: !8892)
!8901 = !DILocation(line: 584, column: 56, scope: !8892)
!8902 = !DILocation(line: 584, column: 58, scope: !8892)
!8903 = !DILocation(line: 584, column: 52, scope: !8892)
!8904 = !DILocation(line: 584, column: 47, scope: !8892)
!8905 = !DILocation(line: 585, column: 11, scope: !8892)
!8906 = !DILocation(line: 585, column: 15, scope: !8892)
!8907 = !DILocation(line: 582, column: 11, scope: !8419)
!8908 = !DILocation(line: 586, column: 9, scope: !8892)
!8909 = !DILocation(line: 589, column: 11, scope: !8910)
!8910 = distinct !DILexicalBlock(scope: !8419, file: !160, line: 589, column: 11)
!8911 = !DILocation(line: 589, column: 11, scope: !8419)
!8912 = !DILocation(line: 590, column: 9, scope: !8910)
!8913 = !DILocation(line: 591, column: 7, scope: !8419)
!8914 = distinct !{!8914, !8913, !8913}
!8915 = !DILocation(line: 591, column: 7, scope: !8916)
!8916 = distinct !DILexicalBlock(scope: !8917, file: !160, line: 591, column: 7)
!8917 = distinct !DILexicalBlock(scope: !8419, file: !160, line: 591, column: 7)
!8918 = !DILocation(line: 591, column: 7, scope: !8917)
!8919 = !DILocation(line: 594, column: 7, scope: !8419)
!8920 = distinct !{!8920, !8919, !8919}
!8921 = !DILocation(line: 594, column: 7, scope: !8922)
!8922 = distinct !DILexicalBlock(scope: !8923, file: !160, line: 594, column: 7)
!8923 = distinct !DILexicalBlock(scope: !8419, file: !160, line: 594, column: 7)
!8924 = !DILocation(line: 594, column: 7, scope: !8923)
!8925 = !DILocation(line: 595, column: 5, scope: !8419)
!8926 = !DILocation(line: 303, column: 75, scope: !8408)
!8927 = !DILocation(line: 303, column: 3, scope: !8408)
!8928 = distinct !{!8928, !8417, !8929}
!8929 = !DILocation(line: 595, column: 5, scope: !8405)
!8930 = !DILocation(line: 597, column: 7, scope: !8931)
!8931 = distinct !DILexicalBlock(scope: !8281, file: !160, line: 597, column: 7)
!8932 = !DILocation(line: 597, column: 11, scope: !8931)
!8933 = !DILocation(line: 597, column: 16, scope: !8931)
!8934 = !DILocation(line: 597, column: 19, scope: !8931)
!8935 = !DILocation(line: 597, column: 33, scope: !8931)
!8936 = !DILocation(line: 598, column: 7, scope: !8931)
!8937 = !DILocation(line: 598, column: 10, scope: !8931)
!8938 = !DILocation(line: 597, column: 7, scope: !8281)
!8939 = !DILocation(line: 599, column: 5, scope: !8931)
!8940 = !DILocation(line: 601, column: 7, scope: !8941)
!8941 = distinct !DILexicalBlock(scope: !8281, file: !160, line: 601, column: 7)
!8942 = !DILocation(line: 601, column: 20, scope: !8941)
!8943 = !DILocation(line: 601, column: 24, scope: !8941)
!8944 = !DILocation(line: 601, column: 7, scope: !8281)
!8945 = !DILocation(line: 602, column: 5, scope: !8941)
!8946 = !DILocation(line: 602, column: 13, scope: !8947)
!8947 = distinct !DILexicalBlock(scope: !8948, file: !160, line: 602, column: 5)
!8948 = distinct !DILexicalBlock(scope: !8941, file: !160, line: 602, column: 5)
!8949 = !DILocation(line: 602, column: 12, scope: !8947)
!8950 = !DILocation(line: 602, column: 5, scope: !8948)
!8951 = !DILocation(line: 603, column: 7, scope: !8947)
!8952 = distinct !{!8952, !8951, !8951}
!8953 = !DILocation(line: 603, column: 7, scope: !8954)
!8954 = distinct !DILexicalBlock(scope: !8955, file: !160, line: 603, column: 7)
!8955 = distinct !DILexicalBlock(scope: !8947, file: !160, line: 603, column: 7)
!8956 = !DILocation(line: 603, column: 7, scope: !8955)
!8957 = !DILocation(line: 602, column: 39, scope: !8947)
!8958 = !DILocation(line: 602, column: 5, scope: !8947)
!8959 = distinct !{!8959, !8950, !8960}
!8960 = !DILocation(line: 603, column: 7, scope: !8948)
!8961 = !DILocation(line: 605, column: 7, scope: !8962)
!8962 = distinct !DILexicalBlock(scope: !8281, file: !160, line: 605, column: 7)
!8963 = !DILocation(line: 605, column: 13, scope: !8962)
!8964 = !DILocation(line: 605, column: 11, scope: !8962)
!8965 = !DILocation(line: 605, column: 7, scope: !8281)
!8966 = !DILocation(line: 606, column: 5, scope: !8962)
!8967 = !DILocation(line: 606, column: 12, scope: !8962)
!8968 = !DILocation(line: 606, column: 17, scope: !8962)
!8969 = !DILocation(line: 607, column: 10, scope: !8281)
!8970 = !DILocation(line: 607, column: 3, scope: !8281)
!8971 = !DILocation(line: 612, column: 36, scope: !8281)
!8972 = !DILocation(line: 612, column: 44, scope: !8281)
!8973 = !DILocation(line: 612, column: 56, scope: !8281)
!8974 = !DILocation(line: 612, column: 61, scope: !8281)
!8975 = !DILocation(line: 613, column: 36, scope: !8281)
!8976 = !DILocation(line: 614, column: 36, scope: !8281)
!8977 = !DILocation(line: 614, column: 42, scope: !8281)
!8978 = !DILocation(line: 615, column: 36, scope: !8281)
!8979 = !DILocation(line: 615, column: 48, scope: !8281)
!8980 = !DILocation(line: 612, column: 10, scope: !8281)
!8981 = !DILocation(line: 612, column: 3, scope: !8281)
!8982 = !DILocation(line: 616, column: 1, scope: !8281)
!8983 = distinct !DISubprogram(name: "gettext_quote", scope: !160, file: !160, line: 182, type: !8984, isLocal: true, isDefinition: true, scopeLine: 183, flags: DIFlagPrototyped, isOptimized: false, unit: !159, variables: !48)
!8984 = !DISubroutineType(types: !8985)
!8985 = !{!35, !35, !109}
!8986 = !DILocalVariable(name: "msgid", arg: 1, scope: !8983, file: !160, line: 182, type: !35)
!8987 = !DILocation(line: 182, column: 28, scope: !8983)
!8988 = !DILocalVariable(name: "s", arg: 2, scope: !8983, file: !160, line: 182, type: !109)
!8989 = !DILocation(line: 182, column: 54, scope: !8983)
!8990 = !DILocalVariable(name: "translation", scope: !8983, file: !160, line: 184, type: !35)
!8991 = !DILocation(line: 184, column: 15, scope: !8983)
!8992 = !DILocation(line: 184, column: 29, scope: !8983)
!8993 = !DILocation(line: 185, column: 7, scope: !8994)
!8994 = distinct !DILexicalBlock(scope: !8983, file: !160, line: 185, column: 7)
!8995 = !DILocation(line: 185, column: 22, scope: !8994)
!8996 = !DILocation(line: 185, column: 19, scope: !8994)
!8997 = !DILocation(line: 185, column: 28, scope: !8994)
!8998 = !DILocation(line: 185, column: 31, scope: !8994)
!8999 = !DILocation(line: 185, column: 33, scope: !8994)
!9000 = !DILocation(line: 185, column: 7, scope: !8983)
!9001 = !DILocation(line: 186, column: 17, scope: !8994)
!9002 = !DILocation(line: 186, column: 5, scope: !8994)
!9003 = !DILocation(line: 187, column: 10, scope: !8983)
!9004 = !DILocation(line: 187, column: 3, scope: !8983)
!9005 = distinct !DISubprogram(name: "quotearg_alloc", scope: !160, file: !160, line: 643, type: !9006, isLocal: false, isDefinition: true, scopeLine: 645, flags: DIFlagPrototyped, isOptimized: false, unit: !159, variables: !48)
!9006 = !DISubroutineType(types: !9007)
!9007 = !{!38, !35, !143, !8240}
!9008 = !DILocalVariable(name: "arg", arg: 1, scope: !9005, file: !160, line: 643, type: !35)
!9009 = !DILocation(line: 643, column: 29, scope: !9005)
!9010 = !DILocalVariable(name: "argsize", arg: 2, scope: !9005, file: !160, line: 643, type: !143)
!9011 = !DILocation(line: 643, column: 41, scope: !9005)
!9012 = !DILocalVariable(name: "o", arg: 3, scope: !9005, file: !160, line: 644, type: !8240)
!9013 = !DILocation(line: 644, column: 47, scope: !9005)
!9014 = !DILocation(line: 646, column: 30, scope: !9005)
!9015 = !DILocation(line: 646, column: 35, scope: !9005)
!9016 = !DILocation(line: 646, column: 50, scope: !9005)
!9017 = !DILocation(line: 646, column: 10, scope: !9005)
!9018 = !DILocation(line: 646, column: 3, scope: !9005)
!9019 = distinct !DISubprogram(name: "quotearg_alloc_mem", scope: !160, file: !160, line: 656, type: !9020, isLocal: false, isDefinition: true, scopeLine: 658, flags: DIFlagPrototyped, isOptimized: false, unit: !159, variables: !48)
!9020 = !DISubroutineType(types: !9021)
!9021 = !{!38, !35, !143, !468, !8240}
!9022 = !DILocalVariable(name: "arg", arg: 1, scope: !9019, file: !160, line: 656, type: !35)
!9023 = !DILocation(line: 656, column: 33, scope: !9019)
!9024 = !DILocalVariable(name: "argsize", arg: 2, scope: !9019, file: !160, line: 656, type: !143)
!9025 = !DILocation(line: 656, column: 45, scope: !9019)
!9026 = !DILocalVariable(name: "size", arg: 3, scope: !9019, file: !160, line: 656, type: !468)
!9027 = !DILocation(line: 656, column: 62, scope: !9019)
!9028 = !DILocalVariable(name: "o", arg: 4, scope: !9019, file: !160, line: 657, type: !8240)
!9029 = !DILocation(line: 657, column: 51, scope: !9019)
!9030 = !DILocalVariable(name: "p", scope: !9019, file: !160, line: 659, type: !8240)
!9031 = !DILocation(line: 659, column: 33, scope: !9019)
!9032 = !DILocation(line: 659, column: 37, scope: !9019)
!9033 = !DILocation(line: 659, column: 41, scope: !9019)
!9034 = !DILocalVariable(name: "e", scope: !9019, file: !160, line: 660, type: !46)
!9035 = !DILocation(line: 660, column: 7, scope: !9019)
!9036 = !DILocation(line: 660, column: 11, scope: !9019)
!9037 = !DILocalVariable(name: "flags", scope: !9019, file: !160, line: 662, type: !46)
!9038 = !DILocation(line: 662, column: 7, scope: !9019)
!9039 = !DILocation(line: 662, column: 15, scope: !9019)
!9040 = !DILocation(line: 662, column: 18, scope: !9019)
!9041 = !DILocation(line: 662, column: 27, scope: !9019)
!9042 = !DILocation(line: 662, column: 24, scope: !9019)
!9043 = !DILocalVariable(name: "bufsize", scope: !9019, file: !160, line: 663, type: !143)
!9044 = !DILocation(line: 663, column: 10, scope: !9019)
!9045 = !DILocation(line: 663, column: 52, scope: !9019)
!9046 = !DILocation(line: 663, column: 57, scope: !9019)
!9047 = !DILocation(line: 663, column: 66, scope: !9019)
!9048 = !DILocation(line: 663, column: 69, scope: !9019)
!9049 = !DILocation(line: 664, column: 46, scope: !9019)
!9050 = !DILocation(line: 664, column: 53, scope: !9019)
!9051 = !DILocation(line: 664, column: 56, scope: !9019)
!9052 = !DILocation(line: 665, column: 46, scope: !9019)
!9053 = !DILocation(line: 665, column: 49, scope: !9019)
!9054 = !DILocation(line: 666, column: 46, scope: !9019)
!9055 = !DILocation(line: 666, column: 49, scope: !9019)
!9056 = !DILocation(line: 663, column: 20, scope: !9019)
!9057 = !DILocation(line: 666, column: 62, scope: !9019)
!9058 = !DILocalVariable(name: "buf", scope: !9019, file: !160, line: 667, type: !38)
!9059 = !DILocation(line: 667, column: 9, scope: !9019)
!9060 = !DILocation(line: 667, column: 27, scope: !9019)
!9061 = !DILocation(line: 667, column: 15, scope: !9019)
!9062 = !DILocation(line: 668, column: 29, scope: !9019)
!9063 = !DILocation(line: 668, column: 34, scope: !9019)
!9064 = !DILocation(line: 668, column: 43, scope: !9019)
!9065 = !DILocation(line: 668, column: 48, scope: !9019)
!9066 = !DILocation(line: 668, column: 57, scope: !9019)
!9067 = !DILocation(line: 668, column: 60, scope: !9019)
!9068 = !DILocation(line: 668, column: 67, scope: !9019)
!9069 = !DILocation(line: 669, column: 29, scope: !9019)
!9070 = !DILocation(line: 669, column: 32, scope: !9019)
!9071 = !DILocation(line: 670, column: 29, scope: !9019)
!9072 = !DILocation(line: 670, column: 32, scope: !9019)
!9073 = !DILocation(line: 670, column: 44, scope: !9019)
!9074 = !DILocation(line: 670, column: 47, scope: !9019)
!9075 = !DILocation(line: 668, column: 3, scope: !9019)
!9076 = !DILocation(line: 671, column: 11, scope: !9019)
!9077 = !DILocation(line: 671, column: 3, scope: !9019)
!9078 = !DILocation(line: 671, column: 9, scope: !9019)
!9079 = !DILocation(line: 672, column: 7, scope: !9080)
!9080 = distinct !DILexicalBlock(scope: !9019, file: !160, line: 672, column: 7)
!9081 = !DILocation(line: 672, column: 7, scope: !9019)
!9082 = !DILocation(line: 673, column: 13, scope: !9080)
!9083 = !DILocation(line: 673, column: 21, scope: !9080)
!9084 = !DILocation(line: 673, column: 6, scope: !9080)
!9085 = !DILocation(line: 673, column: 11, scope: !9080)
!9086 = !DILocation(line: 673, column: 5, scope: !9080)
!9087 = !DILocation(line: 674, column: 10, scope: !9019)
!9088 = !DILocation(line: 674, column: 3, scope: !9019)
!9089 = distinct !DISubprogram(name: "quotearg_free", scope: !160, file: !160, line: 692, type: !116, isLocal: false, isDefinition: true, scopeLine: 693, flags: DIFlagPrototyped, isOptimized: false, unit: !159, variables: !48)
!9090 = !DILocalVariable(name: "sv", scope: !9089, file: !160, line: 694, type: !209)
!9091 = !DILocation(line: 694, column: 19, scope: !9089)
!9092 = !DILocation(line: 694, column: 24, scope: !9089)
!9093 = !DILocalVariable(name: "i", scope: !9089, file: !160, line: 695, type: !199)
!9094 = !DILocation(line: 695, column: 16, scope: !9089)
!9095 = !DILocation(line: 696, column: 10, scope: !9096)
!9096 = distinct !DILexicalBlock(scope: !9089, file: !160, line: 696, column: 3)
!9097 = !DILocation(line: 696, column: 8, scope: !9096)
!9098 = !DILocation(line: 696, column: 15, scope: !9099)
!9099 = distinct !DILexicalBlock(scope: !9096, file: !160, line: 696, column: 3)
!9100 = !DILocation(line: 696, column: 19, scope: !9099)
!9101 = !DILocation(line: 696, column: 17, scope: !9099)
!9102 = !DILocation(line: 696, column: 3, scope: !9096)
!9103 = !DILocation(line: 697, column: 11, scope: !9099)
!9104 = !DILocation(line: 697, column: 14, scope: !9099)
!9105 = !DILocation(line: 697, column: 17, scope: !9099)
!9106 = !DILocation(line: 697, column: 5, scope: !9099)
!9107 = !DILocation(line: 696, column: 28, scope: !9099)
!9108 = !DILocation(line: 696, column: 3, scope: !9099)
!9109 = distinct !{!9109, !9102, !9110}
!9110 = !DILocation(line: 697, column: 20, scope: !9096)
!9111 = !DILocation(line: 698, column: 7, scope: !9112)
!9112 = distinct !DILexicalBlock(scope: !9089, file: !160, line: 698, column: 7)
!9113 = !DILocation(line: 698, column: 13, scope: !9112)
!9114 = !DILocation(line: 698, column: 17, scope: !9112)
!9115 = !DILocation(line: 698, column: 7, scope: !9089)
!9116 = !DILocation(line: 700, column: 13, scope: !9117)
!9117 = distinct !DILexicalBlock(scope: !9112, file: !160, line: 699, column: 5)
!9118 = !DILocation(line: 700, column: 19, scope: !9117)
!9119 = !DILocation(line: 700, column: 7, scope: !9117)
!9120 = !DILocation(line: 701, column: 21, scope: !9117)
!9121 = !DILocation(line: 702, column: 20, scope: !9117)
!9122 = !DILocation(line: 703, column: 5, scope: !9117)
!9123 = !DILocation(line: 704, column: 7, scope: !9124)
!9124 = distinct !DILexicalBlock(scope: !9089, file: !160, line: 704, column: 7)
!9125 = !DILocation(line: 704, column: 10, scope: !9124)
!9126 = !DILocation(line: 704, column: 7, scope: !9089)
!9127 = !DILocation(line: 706, column: 13, scope: !9128)
!9128 = distinct !DILexicalBlock(scope: !9124, file: !160, line: 705, column: 5)
!9129 = !DILocation(line: 706, column: 7, scope: !9128)
!9130 = !DILocation(line: 707, column: 15, scope: !9128)
!9131 = !DILocation(line: 708, column: 5, scope: !9128)
!9132 = !DILocation(line: 709, column: 10, scope: !9089)
!9133 = !DILocation(line: 710, column: 1, scope: !9089)
!9134 = distinct !DISubprogram(name: "quotearg_n", scope: !160, file: !160, line: 781, type: !9135, isLocal: false, isDefinition: true, scopeLine: 782, flags: DIFlagPrototyped, isOptimized: false, unit: !159, variables: !48)
!9135 = !DISubroutineType(types: !9136)
!9136 = !{!38, !46, !35}
!9137 = !DILocalVariable(name: "n", arg: 1, scope: !9134, file: !160, line: 781, type: !46)
!9138 = !DILocation(line: 781, column: 17, scope: !9134)
!9139 = !DILocalVariable(name: "arg", arg: 2, scope: !9134, file: !160, line: 781, type: !35)
!9140 = !DILocation(line: 781, column: 32, scope: !9134)
!9141 = !DILocation(line: 783, column: 30, scope: !9134)
!9142 = !DILocation(line: 783, column: 33, scope: !9134)
!9143 = !DILocation(line: 783, column: 10, scope: !9134)
!9144 = !DILocation(line: 783, column: 3, scope: !9134)
!9145 = distinct !DISubprogram(name: "quotearg_n_options", scope: !160, file: !160, line: 721, type: !9146, isLocal: true, isDefinition: true, scopeLine: 723, flags: DIFlagPrototyped, isOptimized: false, unit: !159, variables: !48)
!9146 = !DISubroutineType(types: !9147)
!9147 = !{!38, !46, !35, !143, !8240}
!9148 = !DILocalVariable(name: "n", arg: 1, scope: !9145, file: !160, line: 721, type: !46)
!9149 = !DILocation(line: 721, column: 25, scope: !9145)
!9150 = !DILocalVariable(name: "arg", arg: 2, scope: !9145, file: !160, line: 721, type: !35)
!9151 = !DILocation(line: 721, column: 40, scope: !9145)
!9152 = !DILocalVariable(name: "argsize", arg: 3, scope: !9145, file: !160, line: 721, type: !143)
!9153 = !DILocation(line: 721, column: 52, scope: !9145)
!9154 = !DILocalVariable(name: "options", arg: 4, scope: !9145, file: !160, line: 722, type: !8240)
!9155 = !DILocation(line: 722, column: 51, scope: !9145)
!9156 = !DILocalVariable(name: "e", scope: !9145, file: !160, line: 724, type: !46)
!9157 = !DILocation(line: 724, column: 7, scope: !9145)
!9158 = !DILocation(line: 724, column: 11, scope: !9145)
!9159 = !DILocalVariable(name: "n0", scope: !9145, file: !160, line: 726, type: !199)
!9160 = !DILocation(line: 726, column: 16, scope: !9145)
!9161 = !DILocation(line: 726, column: 21, scope: !9145)
!9162 = !DILocalVariable(name: "sv", scope: !9145, file: !160, line: 727, type: !209)
!9163 = !DILocation(line: 727, column: 19, scope: !9145)
!9164 = !DILocation(line: 727, column: 24, scope: !9145)
!9165 = !DILocation(line: 729, column: 7, scope: !9166)
!9166 = distinct !DILexicalBlock(scope: !9145, file: !160, line: 729, column: 7)
!9167 = !DILocation(line: 729, column: 9, scope: !9166)
!9168 = !DILocation(line: 729, column: 7, scope: !9145)
!9169 = !DILocation(line: 730, column: 5, scope: !9166)
!9170 = !DILocation(line: 732, column: 7, scope: !9171)
!9171 = distinct !DILexicalBlock(scope: !9145, file: !160, line: 732, column: 7)
!9172 = !DILocation(line: 732, column: 17, scope: !9171)
!9173 = !DILocation(line: 732, column: 14, scope: !9171)
!9174 = !DILocation(line: 732, column: 7, scope: !9145)
!9175 = !DILocalVariable(name: "n1", scope: !9176, file: !160, line: 739, type: !143)
!9176 = distinct !DILexicalBlock(scope: !9171, file: !160, line: 733, column: 5)
!9177 = !DILocation(line: 739, column: 14, scope: !9176)
!9178 = !DILocation(line: 739, column: 19, scope: !9176)
!9179 = !DILocation(line: 739, column: 22, scope: !9176)
!9180 = !DILocalVariable(name: "preallocated", scope: !9176, file: !160, line: 740, type: !131)
!9181 = !DILocation(line: 740, column: 12, scope: !9176)
!9182 = !DILocation(line: 740, column: 28, scope: !9176)
!9183 = !DILocation(line: 740, column: 31, scope: !9176)
!9184 = !DILocation(line: 742, column: 11, scope: !9185)
!9185 = distinct !DILexicalBlock(scope: !9176, file: !160, line: 742, column: 11)
!9186 = !DILocation(line: 742, column: 11, scope: !9176)
!9187 = !DILocation(line: 743, column: 9, scope: !9185)
!9188 = !DILocation(line: 745, column: 32, scope: !9176)
!9189 = !DILocation(line: 745, column: 54, scope: !9176)
!9190 = !DILocation(line: 745, column: 58, scope: !9176)
!9191 = !DILocation(line: 745, column: 61, scope: !9176)
!9192 = !DILocation(line: 745, column: 22, scope: !9176)
!9193 = !DILocation(line: 745, column: 20, scope: !9176)
!9194 = !DILocation(line: 745, column: 15, scope: !9176)
!9195 = !DILocation(line: 746, column: 11, scope: !9196)
!9196 = distinct !DILexicalBlock(scope: !9176, file: !160, line: 746, column: 11)
!9197 = !DILocation(line: 746, column: 11, scope: !9176)
!9198 = !DILocation(line: 747, column: 10, scope: !9196)
!9199 = !DILocation(line: 747, column: 15, scope: !9196)
!9200 = !DILocation(line: 747, column: 9, scope: !9196)
!9201 = !DILocation(line: 748, column: 15, scope: !9176)
!9202 = !DILocation(line: 748, column: 20, scope: !9176)
!9203 = !DILocation(line: 748, column: 18, scope: !9176)
!9204 = !DILocation(line: 748, column: 7, scope: !9176)
!9205 = !DILocation(line: 748, column: 32, scope: !9176)
!9206 = !DILocation(line: 748, column: 37, scope: !9176)
!9207 = !DILocation(line: 748, column: 35, scope: !9176)
!9208 = !DILocation(line: 748, column: 45, scope: !9176)
!9209 = !DILocation(line: 749, column: 16, scope: !9176)
!9210 = !DILocation(line: 749, column: 14, scope: !9176)
!9211 = !DILocation(line: 750, column: 5, scope: !9176)
!9212 = !DILocalVariable(name: "size", scope: !9213, file: !160, line: 753, type: !143)
!9213 = distinct !DILexicalBlock(scope: !9145, file: !160, line: 752, column: 3)
!9214 = !DILocation(line: 753, column: 12, scope: !9213)
!9215 = !DILocation(line: 753, column: 19, scope: !9213)
!9216 = !DILocation(line: 753, column: 22, scope: !9213)
!9217 = !DILocation(line: 753, column: 25, scope: !9213)
!9218 = !DILocalVariable(name: "val", scope: !9213, file: !160, line: 754, type: !38)
!9219 = !DILocation(line: 754, column: 11, scope: !9213)
!9220 = !DILocation(line: 754, column: 17, scope: !9213)
!9221 = !DILocation(line: 754, column: 20, scope: !9213)
!9222 = !DILocation(line: 754, column: 23, scope: !9213)
!9223 = !DILocalVariable(name: "flags", scope: !9213, file: !160, line: 756, type: !46)
!9224 = !DILocation(line: 756, column: 9, scope: !9213)
!9225 = !DILocation(line: 756, column: 17, scope: !9213)
!9226 = !DILocation(line: 756, column: 26, scope: !9213)
!9227 = !DILocation(line: 756, column: 32, scope: !9213)
!9228 = !DILocalVariable(name: "qsize", scope: !9213, file: !160, line: 757, type: !143)
!9229 = !DILocation(line: 757, column: 12, scope: !9213)
!9230 = !DILocation(line: 757, column: 46, scope: !9213)
!9231 = !DILocation(line: 757, column: 51, scope: !9213)
!9232 = !DILocation(line: 757, column: 57, scope: !9213)
!9233 = !DILocation(line: 757, column: 62, scope: !9213)
!9234 = !DILocation(line: 758, column: 46, scope: !9213)
!9235 = !DILocation(line: 758, column: 55, scope: !9213)
!9236 = !DILocation(line: 758, column: 62, scope: !9213)
!9237 = !DILocation(line: 759, column: 46, scope: !9213)
!9238 = !DILocation(line: 759, column: 55, scope: !9213)
!9239 = !DILocation(line: 760, column: 46, scope: !9213)
!9240 = !DILocation(line: 760, column: 55, scope: !9213)
!9241 = !DILocation(line: 761, column: 46, scope: !9213)
!9242 = !DILocation(line: 761, column: 55, scope: !9213)
!9243 = !DILocation(line: 757, column: 20, scope: !9213)
!9244 = !DILocation(line: 763, column: 9, scope: !9245)
!9245 = distinct !DILexicalBlock(scope: !9213, file: !160, line: 763, column: 9)
!9246 = !DILocation(line: 763, column: 17, scope: !9245)
!9247 = !DILocation(line: 763, column: 14, scope: !9245)
!9248 = !DILocation(line: 763, column: 9, scope: !9213)
!9249 = !DILocation(line: 765, column: 29, scope: !9250)
!9250 = distinct !DILexicalBlock(scope: !9245, file: !160, line: 764, column: 7)
!9251 = !DILocation(line: 765, column: 35, scope: !9250)
!9252 = !DILocation(line: 765, column: 27, scope: !9250)
!9253 = !DILocation(line: 765, column: 9, scope: !9250)
!9254 = !DILocation(line: 765, column: 12, scope: !9250)
!9255 = !DILocation(line: 765, column: 15, scope: !9250)
!9256 = !DILocation(line: 765, column: 20, scope: !9250)
!9257 = !DILocation(line: 766, column: 13, scope: !9258)
!9258 = distinct !DILexicalBlock(scope: !9250, file: !160, line: 766, column: 13)
!9259 = !DILocation(line: 766, column: 17, scope: !9258)
!9260 = !DILocation(line: 766, column: 13, scope: !9250)
!9261 = !DILocation(line: 767, column: 17, scope: !9258)
!9262 = !DILocation(line: 767, column: 11, scope: !9258)
!9263 = !DILocation(line: 768, column: 39, scope: !9250)
!9264 = !DILocation(line: 768, column: 27, scope: !9250)
!9265 = !DILocation(line: 768, column: 25, scope: !9250)
!9266 = !DILocation(line: 768, column: 9, scope: !9250)
!9267 = !DILocation(line: 768, column: 12, scope: !9250)
!9268 = !DILocation(line: 768, column: 15, scope: !9250)
!9269 = !DILocation(line: 768, column: 19, scope: !9250)
!9270 = !DILocation(line: 769, column: 35, scope: !9250)
!9271 = !DILocation(line: 769, column: 40, scope: !9250)
!9272 = !DILocation(line: 769, column: 46, scope: !9250)
!9273 = !DILocation(line: 769, column: 51, scope: !9250)
!9274 = !DILocation(line: 769, column: 60, scope: !9250)
!9275 = !DILocation(line: 769, column: 69, scope: !9250)
!9276 = !DILocation(line: 770, column: 35, scope: !9250)
!9277 = !DILocation(line: 770, column: 42, scope: !9250)
!9278 = !DILocation(line: 770, column: 51, scope: !9250)
!9279 = !DILocation(line: 771, column: 35, scope: !9250)
!9280 = !DILocation(line: 771, column: 44, scope: !9250)
!9281 = !DILocation(line: 772, column: 35, scope: !9250)
!9282 = !DILocation(line: 772, column: 44, scope: !9250)
!9283 = !DILocation(line: 769, column: 9, scope: !9250)
!9284 = !DILocation(line: 773, column: 7, scope: !9250)
!9285 = !DILocation(line: 775, column: 13, scope: !9213)
!9286 = !DILocation(line: 775, column: 5, scope: !9213)
!9287 = !DILocation(line: 775, column: 11, scope: !9213)
!9288 = !DILocation(line: 776, column: 12, scope: !9213)
!9289 = !DILocation(line: 776, column: 5, scope: !9213)
!9290 = distinct !DISubprogram(name: "quotearg_n_mem", scope: !160, file: !160, line: 787, type: !9291, isLocal: false, isDefinition: true, scopeLine: 788, flags: DIFlagPrototyped, isOptimized: false, unit: !159, variables: !48)
!9291 = !DISubroutineType(types: !9292)
!9292 = !{!38, !46, !35, !143}
!9293 = !DILocalVariable(name: "n", arg: 1, scope: !9290, file: !160, line: 787, type: !46)
!9294 = !DILocation(line: 787, column: 21, scope: !9290)
!9295 = !DILocalVariable(name: "arg", arg: 2, scope: !9290, file: !160, line: 787, type: !35)
!9296 = !DILocation(line: 787, column: 36, scope: !9290)
!9297 = !DILocalVariable(name: "argsize", arg: 3, scope: !9290, file: !160, line: 787, type: !143)
!9298 = !DILocation(line: 787, column: 48, scope: !9290)
!9299 = !DILocation(line: 789, column: 30, scope: !9290)
!9300 = !DILocation(line: 789, column: 33, scope: !9290)
!9301 = !DILocation(line: 789, column: 38, scope: !9290)
!9302 = !DILocation(line: 789, column: 10, scope: !9290)
!9303 = !DILocation(line: 789, column: 3, scope: !9290)
!9304 = distinct !DISubprogram(name: "quotearg", scope: !160, file: !160, line: 793, type: !2459, isLocal: false, isDefinition: true, scopeLine: 794, flags: DIFlagPrototyped, isOptimized: false, unit: !159, variables: !48)
!9305 = !DILocalVariable(name: "arg", arg: 1, scope: !9304, file: !160, line: 793, type: !35)
!9306 = !DILocation(line: 793, column: 23, scope: !9304)
!9307 = !DILocation(line: 795, column: 25, scope: !9304)
!9308 = !DILocation(line: 795, column: 10, scope: !9304)
!9309 = !DILocation(line: 795, column: 3, scope: !9304)
!9310 = distinct !DISubprogram(name: "quotearg_mem", scope: !160, file: !160, line: 799, type: !9311, isLocal: false, isDefinition: true, scopeLine: 800, flags: DIFlagPrototyped, isOptimized: false, unit: !159, variables: !48)
!9311 = !DISubroutineType(types: !9312)
!9312 = !{!38, !35, !143}
!9313 = !DILocalVariable(name: "arg", arg: 1, scope: !9310, file: !160, line: 799, type: !35)
!9314 = !DILocation(line: 799, column: 27, scope: !9310)
!9315 = !DILocalVariable(name: "argsize", arg: 2, scope: !9310, file: !160, line: 799, type: !143)
!9316 = !DILocation(line: 799, column: 39, scope: !9310)
!9317 = !DILocation(line: 801, column: 29, scope: !9310)
!9318 = !DILocation(line: 801, column: 34, scope: !9310)
!9319 = !DILocation(line: 801, column: 10, scope: !9310)
!9320 = !DILocation(line: 801, column: 3, scope: !9310)
!9321 = distinct !DISubprogram(name: "quotearg_n_style", scope: !160, file: !160, line: 805, type: !9322, isLocal: false, isDefinition: true, scopeLine: 806, flags: DIFlagPrototyped, isOptimized: false, unit: !159, variables: !48)
!9322 = !DISubroutineType(types: !9323)
!9323 = !{!38, !46, !109, !35}
!9324 = !DILocalVariable(name: "n", arg: 1, scope: !9321, file: !160, line: 805, type: !46)
!9325 = !DILocation(line: 805, column: 23, scope: !9321)
!9326 = !DILocalVariable(name: "s", arg: 2, scope: !9321, file: !160, line: 805, type: !109)
!9327 = !DILocation(line: 805, column: 45, scope: !9321)
!9328 = !DILocalVariable(name: "arg", arg: 3, scope: !9321, file: !160, line: 805, type: !35)
!9329 = !DILocation(line: 805, column: 60, scope: !9321)
!9330 = !DILocalVariable(name: "o", scope: !9321, file: !160, line: 807, type: !8241)
!9331 = !DILocation(line: 807, column: 32, scope: !9321)
!9332 = !DILocation(line: 807, column: 64, scope: !9321)
!9333 = !DILocation(line: 807, column: 36, scope: !9321)
!9334 = !DILocation(line: 808, column: 30, scope: !9321)
!9335 = !DILocation(line: 808, column: 33, scope: !9321)
!9336 = !DILocation(line: 808, column: 10, scope: !9321)
!9337 = !DILocation(line: 808, column: 3, scope: !9321)
!9338 = distinct !DISubprogram(name: "quoting_options_from_style", scope: !160, file: !160, line: 170, type: !9339, isLocal: true, isDefinition: true, scopeLine: 171, flags: DIFlagPrototyped, isOptimized: false, unit: !159, variables: !48)
!9339 = !DISubroutineType(types: !9340)
!9340 = !{!193, !109}
!9341 = !DILocalVariable(name: "style", arg: 1, scope: !9338, file: !160, line: 170, type: !109)
!9342 = !DILocation(line: 170, column: 48, scope: !9338)
!9343 = !DILocalVariable(name: "o", scope: !9338, file: !160, line: 172, type: !193)
!9344 = !DILocation(line: 172, column: 26, scope: !9338)
!9345 = !DILocation(line: 173, column: 13, scope: !9338)
!9346 = !DILocation(line: 173, column: 5, scope: !9338)
!9347 = !DILocation(line: 173, column: 11, scope: !9338)
!9348 = !DILocation(line: 174, column: 5, scope: !9338)
!9349 = !DILocation(line: 174, column: 11, scope: !9338)
!9350 = !DILocation(line: 175, column: 13, scope: !9338)
!9351 = !DILocation(line: 175, column: 3, scope: !9338)
!9352 = !DILocation(line: 176, column: 10, scope: !9338)
!9353 = !DILocation(line: 176, column: 3, scope: !9338)
!9354 = distinct !DISubprogram(name: "quotearg_n_style_mem", scope: !160, file: !160, line: 812, type: !9355, isLocal: false, isDefinition: true, scopeLine: 814, flags: DIFlagPrototyped, isOptimized: false, unit: !159, variables: !48)
!9355 = !DISubroutineType(types: !9356)
!9356 = !{!38, !46, !109, !35, !143}
!9357 = !DILocalVariable(name: "n", arg: 1, scope: !9354, file: !160, line: 812, type: !46)
!9358 = !DILocation(line: 812, column: 27, scope: !9354)
!9359 = !DILocalVariable(name: "s", arg: 2, scope: !9354, file: !160, line: 812, type: !109)
!9360 = !DILocation(line: 812, column: 49, scope: !9354)
!9361 = !DILocalVariable(name: "arg", arg: 3, scope: !9354, file: !160, line: 813, type: !35)
!9362 = !DILocation(line: 813, column: 35, scope: !9354)
!9363 = !DILocalVariable(name: "argsize", arg: 4, scope: !9354, file: !160, line: 813, type: !143)
!9364 = !DILocation(line: 813, column: 47, scope: !9354)
!9365 = !DILocalVariable(name: "o", scope: !9354, file: !160, line: 815, type: !8241)
!9366 = !DILocation(line: 815, column: 32, scope: !9354)
!9367 = !DILocation(line: 815, column: 64, scope: !9354)
!9368 = !DILocation(line: 815, column: 36, scope: !9354)
!9369 = !DILocation(line: 816, column: 30, scope: !9354)
!9370 = !DILocation(line: 816, column: 33, scope: !9354)
!9371 = !DILocation(line: 816, column: 38, scope: !9354)
!9372 = !DILocation(line: 816, column: 10, scope: !9354)
!9373 = !DILocation(line: 816, column: 3, scope: !9354)
!9374 = distinct !DISubprogram(name: "quotearg_style", scope: !160, file: !160, line: 820, type: !9375, isLocal: false, isDefinition: true, scopeLine: 821, flags: DIFlagPrototyped, isOptimized: false, unit: !159, variables: !48)
!9375 = !DISubroutineType(types: !9376)
!9376 = !{!38, !109, !35}
!9377 = !DILocalVariable(name: "s", arg: 1, scope: !9374, file: !160, line: 820, type: !109)
!9378 = !DILocation(line: 820, column: 36, scope: !9374)
!9379 = !DILocalVariable(name: "arg", arg: 2, scope: !9374, file: !160, line: 820, type: !35)
!9380 = !DILocation(line: 820, column: 51, scope: !9374)
!9381 = !DILocation(line: 822, column: 31, scope: !9374)
!9382 = !DILocation(line: 822, column: 34, scope: !9374)
!9383 = !DILocation(line: 822, column: 10, scope: !9374)
!9384 = !DILocation(line: 822, column: 3, scope: !9374)
!9385 = distinct !DISubprogram(name: "quotearg_style_mem", scope: !160, file: !160, line: 826, type: !9386, isLocal: false, isDefinition: true, scopeLine: 827, flags: DIFlagPrototyped, isOptimized: false, unit: !159, variables: !48)
!9386 = !DISubroutineType(types: !9387)
!9387 = !{!38, !109, !35, !143}
!9388 = !DILocalVariable(name: "s", arg: 1, scope: !9385, file: !160, line: 826, type: !109)
!9389 = !DILocation(line: 826, column: 40, scope: !9385)
!9390 = !DILocalVariable(name: "arg", arg: 2, scope: !9385, file: !160, line: 826, type: !35)
!9391 = !DILocation(line: 826, column: 55, scope: !9385)
!9392 = !DILocalVariable(name: "argsize", arg: 3, scope: !9385, file: !160, line: 826, type: !143)
!9393 = !DILocation(line: 826, column: 67, scope: !9385)
!9394 = !DILocation(line: 828, column: 35, scope: !9385)
!9395 = !DILocation(line: 828, column: 38, scope: !9385)
!9396 = !DILocation(line: 828, column: 43, scope: !9385)
!9397 = !DILocation(line: 828, column: 10, scope: !9385)
!9398 = !DILocation(line: 828, column: 3, scope: !9385)
!9399 = distinct !DISubprogram(name: "quotearg_char_mem", scope: !160, file: !160, line: 832, type: !9400, isLocal: false, isDefinition: true, scopeLine: 833, flags: DIFlagPrototyped, isOptimized: false, unit: !159, variables: !48)
!9400 = !DISubroutineType(types: !9401)
!9401 = !{!38, !35, !143, !37}
!9402 = !DILocalVariable(name: "arg", arg: 1, scope: !9399, file: !160, line: 832, type: !35)
!9403 = !DILocation(line: 832, column: 32, scope: !9399)
!9404 = !DILocalVariable(name: "argsize", arg: 2, scope: !9399, file: !160, line: 832, type: !143)
!9405 = !DILocation(line: 832, column: 44, scope: !9399)
!9406 = !DILocalVariable(name: "ch", arg: 3, scope: !9399, file: !160, line: 832, type: !37)
!9407 = !DILocation(line: 832, column: 58, scope: !9399)
!9408 = !DILocalVariable(name: "options", scope: !9399, file: !160, line: 834, type: !193)
!9409 = !DILocation(line: 834, column: 26, scope: !9399)
!9410 = !DILocation(line: 835, column: 13, scope: !9399)
!9411 = !DILocation(line: 836, column: 31, scope: !9399)
!9412 = !DILocation(line: 836, column: 3, scope: !9399)
!9413 = !DILocation(line: 837, column: 33, scope: !9399)
!9414 = !DILocation(line: 837, column: 38, scope: !9399)
!9415 = !DILocation(line: 837, column: 10, scope: !9399)
!9416 = !DILocation(line: 837, column: 3, scope: !9399)
!9417 = distinct !DISubprogram(name: "quotearg_char", scope: !160, file: !160, line: 841, type: !9418, isLocal: false, isDefinition: true, scopeLine: 842, flags: DIFlagPrototyped, isOptimized: false, unit: !159, variables: !48)
!9418 = !DISubroutineType(types: !9419)
!9419 = !{!38, !35, !37}
!9420 = !DILocalVariable(name: "arg", arg: 1, scope: !9417, file: !160, line: 841, type: !35)
!9421 = !DILocation(line: 841, column: 28, scope: !9417)
!9422 = !DILocalVariable(name: "ch", arg: 2, scope: !9417, file: !160, line: 841, type: !37)
!9423 = !DILocation(line: 841, column: 38, scope: !9417)
!9424 = !DILocation(line: 843, column: 29, scope: !9417)
!9425 = !DILocation(line: 843, column: 44, scope: !9417)
!9426 = !DILocation(line: 843, column: 10, scope: !9417)
!9427 = !DILocation(line: 843, column: 3, scope: !9417)
!9428 = distinct !DISubprogram(name: "quotearg_colon", scope: !160, file: !160, line: 847, type: !2459, isLocal: false, isDefinition: true, scopeLine: 848, flags: DIFlagPrototyped, isOptimized: false, unit: !159, variables: !48)
!9429 = !DILocalVariable(name: "arg", arg: 1, scope: !9428, file: !160, line: 847, type: !35)
!9430 = !DILocation(line: 847, column: 29, scope: !9428)
!9431 = !DILocation(line: 849, column: 25, scope: !9428)
!9432 = !DILocation(line: 849, column: 10, scope: !9428)
!9433 = !DILocation(line: 849, column: 3, scope: !9428)
!9434 = distinct !DISubprogram(name: "quotearg_colon_mem", scope: !160, file: !160, line: 853, type: !9311, isLocal: false, isDefinition: true, scopeLine: 854, flags: DIFlagPrototyped, isOptimized: false, unit: !159, variables: !48)
!9435 = !DILocalVariable(name: "arg", arg: 1, scope: !9434, file: !160, line: 853, type: !35)
!9436 = !DILocation(line: 853, column: 33, scope: !9434)
!9437 = !DILocalVariable(name: "argsize", arg: 2, scope: !9434, file: !160, line: 853, type: !143)
!9438 = !DILocation(line: 853, column: 45, scope: !9434)
!9439 = !DILocation(line: 855, column: 29, scope: !9434)
!9440 = !DILocation(line: 855, column: 34, scope: !9434)
!9441 = !DILocation(line: 855, column: 10, scope: !9434)
!9442 = !DILocation(line: 855, column: 3, scope: !9434)
!9443 = distinct !DISubprogram(name: "quotearg_n_custom", scope: !160, file: !160, line: 859, type: !9444, isLocal: false, isDefinition: true, scopeLine: 861, flags: DIFlagPrototyped, isOptimized: false, unit: !159, variables: !48)
!9444 = !DISubroutineType(types: !9445)
!9445 = !{!38, !46, !35, !35, !35}
!9446 = !DILocalVariable(name: "n", arg: 1, scope: !9443, file: !160, line: 859, type: !46)
!9447 = !DILocation(line: 859, column: 24, scope: !9443)
!9448 = !DILocalVariable(name: "left_quote", arg: 2, scope: !9443, file: !160, line: 859, type: !35)
!9449 = !DILocation(line: 859, column: 39, scope: !9443)
!9450 = !DILocalVariable(name: "right_quote", arg: 3, scope: !9443, file: !160, line: 860, type: !35)
!9451 = !DILocation(line: 860, column: 32, scope: !9443)
!9452 = !DILocalVariable(name: "arg", arg: 4, scope: !9443, file: !160, line: 860, type: !35)
!9453 = !DILocation(line: 860, column: 57, scope: !9443)
!9454 = !DILocation(line: 862, column: 33, scope: !9443)
!9455 = !DILocation(line: 862, column: 36, scope: !9443)
!9456 = !DILocation(line: 862, column: 48, scope: !9443)
!9457 = !DILocation(line: 862, column: 61, scope: !9443)
!9458 = !DILocation(line: 862, column: 10, scope: !9443)
!9459 = !DILocation(line: 862, column: 3, scope: !9443)
!9460 = distinct !DISubprogram(name: "quotearg_n_custom_mem", scope: !160, file: !160, line: 867, type: !9461, isLocal: false, isDefinition: true, scopeLine: 870, flags: DIFlagPrototyped, isOptimized: false, unit: !159, variables: !48)
!9461 = !DISubroutineType(types: !9462)
!9462 = !{!38, !46, !35, !35, !35, !143}
!9463 = !DILocalVariable(name: "n", arg: 1, scope: !9460, file: !160, line: 867, type: !46)
!9464 = !DILocation(line: 867, column: 28, scope: !9460)
!9465 = !DILocalVariable(name: "left_quote", arg: 2, scope: !9460, file: !160, line: 867, type: !35)
!9466 = !DILocation(line: 867, column: 43, scope: !9460)
!9467 = !DILocalVariable(name: "right_quote", arg: 3, scope: !9460, file: !160, line: 868, type: !35)
!9468 = !DILocation(line: 868, column: 36, scope: !9460)
!9469 = !DILocalVariable(name: "arg", arg: 4, scope: !9460, file: !160, line: 869, type: !35)
!9470 = !DILocation(line: 869, column: 36, scope: !9460)
!9471 = !DILocalVariable(name: "argsize", arg: 5, scope: !9460, file: !160, line: 869, type: !143)
!9472 = !DILocation(line: 869, column: 48, scope: !9460)
!9473 = !DILocalVariable(name: "o", scope: !9460, file: !160, line: 871, type: !193)
!9474 = !DILocation(line: 871, column: 26, scope: !9460)
!9475 = !DILocation(line: 871, column: 30, scope: !9460)
!9476 = !DILocation(line: 872, column: 27, scope: !9460)
!9477 = !DILocation(line: 872, column: 39, scope: !9460)
!9478 = !DILocation(line: 872, column: 3, scope: !9460)
!9479 = !DILocation(line: 873, column: 30, scope: !9460)
!9480 = !DILocation(line: 873, column: 33, scope: !9460)
!9481 = !DILocation(line: 873, column: 38, scope: !9460)
!9482 = !DILocation(line: 873, column: 10, scope: !9460)
!9483 = !DILocation(line: 873, column: 3, scope: !9460)
!9484 = distinct !DISubprogram(name: "quotearg_custom", scope: !160, file: !160, line: 877, type: !9485, isLocal: false, isDefinition: true, scopeLine: 879, flags: DIFlagPrototyped, isOptimized: false, unit: !159, variables: !48)
!9485 = !DISubroutineType(types: !9486)
!9486 = !{!38, !35, !35, !35}
!9487 = !DILocalVariable(name: "left_quote", arg: 1, scope: !9484, file: !160, line: 877, type: !35)
!9488 = !DILocation(line: 877, column: 30, scope: !9484)
!9489 = !DILocalVariable(name: "right_quote", arg: 2, scope: !9484, file: !160, line: 877, type: !35)
!9490 = !DILocation(line: 877, column: 54, scope: !9484)
!9491 = !DILocalVariable(name: "arg", arg: 3, scope: !9484, file: !160, line: 878, type: !35)
!9492 = !DILocation(line: 878, column: 30, scope: !9484)
!9493 = !DILocation(line: 880, column: 32, scope: !9484)
!9494 = !DILocation(line: 880, column: 44, scope: !9484)
!9495 = !DILocation(line: 880, column: 57, scope: !9484)
!9496 = !DILocation(line: 880, column: 10, scope: !9484)
!9497 = !DILocation(line: 880, column: 3, scope: !9484)
!9498 = distinct !DISubprogram(name: "quotearg_custom_mem", scope: !160, file: !160, line: 884, type: !9499, isLocal: false, isDefinition: true, scopeLine: 886, flags: DIFlagPrototyped, isOptimized: false, unit: !159, variables: !48)
!9499 = !DISubroutineType(types: !9500)
!9500 = !{!38, !35, !35, !35, !143}
!9501 = !DILocalVariable(name: "left_quote", arg: 1, scope: !9498, file: !160, line: 884, type: !35)
!9502 = !DILocation(line: 884, column: 34, scope: !9498)
!9503 = !DILocalVariable(name: "right_quote", arg: 2, scope: !9498, file: !160, line: 884, type: !35)
!9504 = !DILocation(line: 884, column: 58, scope: !9498)
!9505 = !DILocalVariable(name: "arg", arg: 3, scope: !9498, file: !160, line: 885, type: !35)
!9506 = !DILocation(line: 885, column: 34, scope: !9498)
!9507 = !DILocalVariable(name: "argsize", arg: 4, scope: !9498, file: !160, line: 885, type: !143)
!9508 = !DILocation(line: 885, column: 46, scope: !9498)
!9509 = !DILocation(line: 887, column: 36, scope: !9498)
!9510 = !DILocation(line: 887, column: 48, scope: !9498)
!9511 = !DILocation(line: 887, column: 61, scope: !9498)
!9512 = !DILocation(line: 888, column: 33, scope: !9498)
!9513 = !DILocation(line: 887, column: 10, scope: !9498)
!9514 = !DILocation(line: 887, column: 3, scope: !9498)
!9515 = distinct !DISubprogram(name: "get_root_dev_ino", scope: !457, file: !457, line: 29, type: !9516, isLocal: false, isDefinition: true, scopeLine: 30, flags: DIFlagPrototyped, isOptimized: false, unit: !456, variables: !48)
!9516 = !DISubroutineType(types: !9517)
!9517 = !{!9518, !9518}
!9518 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9519, size: 64)
!9519 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_ino", file: !399, line: 7, size: 128, elements: !9520)
!9520 = !{!9521, !9522}
!9521 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !9519, file: !399, line: 9, baseType: !402, size: 64)
!9522 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !9519, file: !399, line: 10, baseType: !371, size: 64, offset: 64)
!9523 = !DILocalVariable(name: "root_d_i", arg: 1, scope: !9515, file: !457, line: 29, type: !9518)
!9524 = !DILocation(line: 29, column: 35, scope: !9515)
!9525 = !DILocalVariable(name: "statbuf", scope: !9515, file: !457, line: 31, type: !9526)
!9526 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !328, line: 46, size: 1152, elements: !9527)
!9527 = !{!9528, !9529, !9530, !9531, !9532, !9533, !9534, !9535, !9536, !9537, !9538, !9539, !9544, !9545, !9546}
!9528 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !9526, file: !328, line: 48, baseType: !331, size: 64)
!9529 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !9526, file: !328, line: 53, baseType: !333, size: 64, offset: 64)
!9530 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !9526, file: !328, line: 61, baseType: !320, size: 64, offset: 128)
!9531 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !9526, file: !328, line: 62, baseType: !336, size: 32, offset: 192)
!9532 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !9526, file: !328, line: 64, baseType: !338, size: 32, offset: 224)
!9533 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !9526, file: !328, line: 65, baseType: !340, size: 32, offset: 256)
!9534 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !9526, file: !328, line: 67, baseType: !46, size: 32, offset: 288)
!9535 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !9526, file: !328, line: 69, baseType: !331, size: 64, offset: 320)
!9536 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !9526, file: !328, line: 74, baseType: !344, size: 64, offset: 384)
!9537 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !9526, file: !328, line: 78, baseType: !346, size: 64, offset: 448)
!9538 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !9526, file: !328, line: 80, baseType: !348, size: 64, offset: 512)
!9539 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !9526, file: !328, line: 91, baseType: !9540, size: 128, offset: 576)
!9540 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !351, line: 8, size: 128, elements: !9541)
!9541 = !{!9542, !9543}
!9542 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !9540, file: !351, line: 10, baseType: !354, size: 64)
!9543 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !9540, file: !351, line: 11, baseType: !356, size: 64, offset: 64)
!9544 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !9526, file: !328, line: 92, baseType: !9540, size: 128, offset: 704)
!9545 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !9526, file: !328, line: 93, baseType: !9540, size: 128, offset: 832)
!9546 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !9526, file: !328, line: 106, baseType: !360, size: 192, offset: 960)
!9547 = !DILocation(line: 31, column: 15, scope: !9515)
!9548 = !DILocation(line: 32, column: 7, scope: !9549)
!9549 = distinct !DILexicalBlock(scope: !9515, file: !457, line: 32, column: 7)
!9550 = !DILocation(line: 32, column: 7, scope: !9515)
!9551 = !DILocation(line: 33, column: 5, scope: !9549)
!9552 = !DILocation(line: 34, column: 30, scope: !9515)
!9553 = !DILocation(line: 34, column: 3, scope: !9515)
!9554 = !DILocation(line: 34, column: 13, scope: !9515)
!9555 = !DILocation(line: 34, column: 20, scope: !9515)
!9556 = !DILocation(line: 35, column: 30, scope: !9515)
!9557 = !DILocation(line: 35, column: 3, scope: !9515)
!9558 = !DILocation(line: 35, column: 13, scope: !9515)
!9559 = !DILocation(line: 35, column: 20, scope: !9515)
!9560 = !DILocation(line: 36, column: 10, scope: !9515)
!9561 = !DILocation(line: 36, column: 3, scope: !9515)
!9562 = !DILocation(line: 37, column: 1, scope: !9515)
!9563 = distinct !DISubprogram(name: "strip_trailing_slashes", scope: !459, file: !459, line: 31, type: !9564, isLocal: false, isDefinition: true, scopeLine: 32, flags: DIFlagPrototyped, isOptimized: false, unit: !458, variables: !48)
!9564 = !DISubroutineType(types: !9565)
!9565 = !{!131, !38}
!9566 = !DILocalVariable(name: "file", arg: 1, scope: !9563, file: !459, line: 31, type: !38)
!9567 = !DILocation(line: 31, column: 31, scope: !9563)
!9568 = !DILocalVariable(name: "base", scope: !9563, file: !459, line: 33, type: !38)
!9569 = !DILocation(line: 33, column: 9, scope: !9563)
!9570 = !DILocation(line: 33, column: 32, scope: !9563)
!9571 = !DILocation(line: 33, column: 16, scope: !9563)
!9572 = !DILocalVariable(name: "base_lim", scope: !9563, file: !459, line: 34, type: !38)
!9573 = !DILocation(line: 34, column: 9, scope: !9563)
!9574 = !DILocalVariable(name: "had_slash", scope: !9563, file: !459, line: 35, type: !131)
!9575 = !DILocation(line: 35, column: 8, scope: !9563)
!9576 = !DILocation(line: 39, column: 10, scope: !9577)
!9577 = distinct !DILexicalBlock(scope: !9563, file: !459, line: 39, column: 7)
!9578 = !DILocation(line: 39, column: 9, scope: !9577)
!9579 = !DILocation(line: 39, column: 7, scope: !9563)
!9580 = !DILocation(line: 40, column: 12, scope: !9577)
!9581 = !DILocation(line: 40, column: 10, scope: !9577)
!9582 = !DILocation(line: 40, column: 5, scope: !9577)
!9583 = !DILocation(line: 41, column: 14, scope: !9563)
!9584 = !DILocation(line: 41, column: 31, scope: !9563)
!9585 = !DILocation(line: 41, column: 21, scope: !9563)
!9586 = !DILocation(line: 41, column: 19, scope: !9563)
!9587 = !DILocation(line: 41, column: 12, scope: !9563)
!9588 = !DILocation(line: 42, column: 17, scope: !9563)
!9589 = !DILocation(line: 42, column: 16, scope: !9563)
!9590 = !DILocation(line: 42, column: 26, scope: !9563)
!9591 = !DILocation(line: 42, column: 13, scope: !9563)
!9592 = !DILocation(line: 43, column: 4, scope: !9563)
!9593 = !DILocation(line: 43, column: 13, scope: !9563)
!9594 = !DILocation(line: 44, column: 10, scope: !9563)
!9595 = !DILocation(line: 44, column: 3, scope: !9563)
!9596 = !DILocation(line: 36, column: 9, scope: !9597)
!9597 = distinct !DILexicalBlock(scope: !223, file: !224, line: 36, column: 7)
!9598 = !DILocation(line: 36, column: 7, scope: !223)
!9599 = !DILocalVariable(name: "can", scope: !9600, file: !224, line: 38, type: !131)
!9600 = distinct !DILexicalBlock(scope: !9597, file: !224, line: 37, column: 5)
!9601 = !DILocation(line: 38, column: 12, scope: !9600)
!9602 = !DILocation(line: 43, column: 14, scope: !9600)
!9603 = !DILocation(line: 43, column: 25, scope: !9600)
!9604 = !DILocation(line: 43, column: 11, scope: !9600)
!9605 = !DILocation(line: 45, column: 19, scope: !9600)
!9606 = !DILocation(line: 45, column: 17, scope: !9600)
!9607 = !DILocation(line: 46, column: 19, scope: !9600)
!9608 = !DILocation(line: 47, column: 5, scope: !9600)
!9609 = !DILocation(line: 49, column: 10, scope: !223)
!9610 = !DILocation(line: 49, column: 3, scope: !223)
!9611 = distinct !DISubprogram(name: "xnmalloc", scope: !464, file: !464, line: 122, type: !9612, isLocal: false, isDefinition: true, scopeLine: 123, flags: DIFlagPrototyped, isOptimized: false, unit: !460, variables: !48)
!9612 = !DISubroutineType(types: !9613)
!9613 = !{!39, !143, !143}
!9614 = !DILocalVariable(name: "n", arg: 1, scope: !9611, file: !464, line: 122, type: !143)
!9615 = !DILocation(line: 122, column: 18, scope: !9611)
!9616 = !DILocalVariable(name: "s", arg: 2, scope: !9611, file: !464, line: 122, type: !143)
!9617 = !DILocation(line: 122, column: 28, scope: !9611)
!9618 = !DILocation(line: 124, column: 7, scope: !9619)
!9619 = distinct !DILexicalBlock(scope: !9611, file: !464, line: 124, column: 7)
!9620 = !DILocation(line: 124, column: 7, scope: !9611)
!9621 = !DILocation(line: 125, column: 5, scope: !9619)
!9622 = !DILocation(line: 126, column: 19, scope: !9611)
!9623 = !DILocation(line: 126, column: 23, scope: !9611)
!9624 = !DILocation(line: 126, column: 21, scope: !9611)
!9625 = !DILocation(line: 126, column: 10, scope: !9611)
!9626 = !DILocation(line: 126, column: 3, scope: !9611)
!9627 = distinct !DISubprogram(name: "xmalloc", scope: !461, file: !461, line: 43, type: !9628, isLocal: false, isDefinition: true, scopeLine: 44, flags: DIFlagPrototyped, isOptimized: false, unit: !460, variables: !48)
!9628 = !DISubroutineType(types: !9629)
!9629 = !{!39, !143}
!9630 = !DILocalVariable(name: "n", arg: 1, scope: !9627, file: !461, line: 43, type: !143)
!9631 = !DILocation(line: 43, column: 17, scope: !9627)
!9632 = !DILocalVariable(name: "p", scope: !9627, file: !461, line: 45, type: !39)
!9633 = !DILocation(line: 45, column: 9, scope: !9627)
!9634 = !DILocation(line: 45, column: 21, scope: !9627)
!9635 = !DILocation(line: 45, column: 13, scope: !9627)
!9636 = !DILocation(line: 46, column: 8, scope: !9637)
!9637 = distinct !DILexicalBlock(scope: !9627, file: !461, line: 46, column: 7)
!9638 = !DILocation(line: 46, column: 10, scope: !9637)
!9639 = !DILocation(line: 46, column: 13, scope: !9637)
!9640 = !DILocation(line: 46, column: 15, scope: !9637)
!9641 = !DILocation(line: 46, column: 7, scope: !9627)
!9642 = !DILocation(line: 47, column: 5, scope: !9637)
!9643 = !DILocation(line: 48, column: 10, scope: !9627)
!9644 = !DILocation(line: 48, column: 3, scope: !9627)
!9645 = distinct !DISubprogram(name: "xnrealloc", scope: !464, file: !464, line: 133, type: !9646, isLocal: false, isDefinition: true, scopeLine: 134, flags: DIFlagPrototyped, isOptimized: false, unit: !460, variables: !48)
!9646 = !DISubroutineType(types: !9647)
!9647 = !{!39, !39, !143, !143}
!9648 = !DILocalVariable(name: "p", arg: 1, scope: !9645, file: !464, line: 133, type: !39)
!9649 = !DILocation(line: 133, column: 18, scope: !9645)
!9650 = !DILocalVariable(name: "n", arg: 2, scope: !9645, file: !464, line: 133, type: !143)
!9651 = !DILocation(line: 133, column: 28, scope: !9645)
!9652 = !DILocalVariable(name: "s", arg: 3, scope: !9645, file: !464, line: 133, type: !143)
!9653 = !DILocation(line: 133, column: 38, scope: !9645)
!9654 = !DILocation(line: 135, column: 7, scope: !9655)
!9655 = distinct !DILexicalBlock(scope: !9645, file: !464, line: 135, column: 7)
!9656 = !DILocation(line: 135, column: 7, scope: !9645)
!9657 = !DILocation(line: 136, column: 5, scope: !9655)
!9658 = !DILocation(line: 137, column: 20, scope: !9645)
!9659 = !DILocation(line: 137, column: 23, scope: !9645)
!9660 = !DILocation(line: 137, column: 27, scope: !9645)
!9661 = !DILocation(line: 137, column: 25, scope: !9645)
!9662 = !DILocation(line: 137, column: 10, scope: !9645)
!9663 = !DILocation(line: 137, column: 3, scope: !9645)
!9664 = distinct !DISubprogram(name: "xrealloc", scope: !461, file: !461, line: 55, type: !9665, isLocal: false, isDefinition: true, scopeLine: 56, flags: DIFlagPrototyped, isOptimized: false, unit: !460, variables: !48)
!9665 = !DISubroutineType(types: !9666)
!9666 = !{!39, !39, !143}
!9667 = !DILocalVariable(name: "p", arg: 1, scope: !9664, file: !461, line: 55, type: !39)
!9668 = !DILocation(line: 55, column: 17, scope: !9664)
!9669 = !DILocalVariable(name: "n", arg: 2, scope: !9664, file: !461, line: 55, type: !143)
!9670 = !DILocation(line: 55, column: 27, scope: !9664)
!9671 = !DILocation(line: 57, column: 16, scope: !9664)
!9672 = !DILocation(line: 57, column: 19, scope: !9664)
!9673 = !DILocation(line: 57, column: 7, scope: !9664)
!9674 = !DILocation(line: 57, column: 5, scope: !9664)
!9675 = !DILocation(line: 58, column: 8, scope: !9676)
!9676 = distinct !DILexicalBlock(scope: !9664, file: !461, line: 58, column: 7)
!9677 = !DILocation(line: 58, column: 10, scope: !9676)
!9678 = !DILocation(line: 58, column: 13, scope: !9676)
!9679 = !DILocation(line: 58, column: 15, scope: !9676)
!9680 = !DILocation(line: 58, column: 7, scope: !9664)
!9681 = !DILocation(line: 59, column: 5, scope: !9676)
!9682 = !DILocation(line: 60, column: 10, scope: !9664)
!9683 = !DILocation(line: 60, column: 3, scope: !9664)
!9684 = !DILocalVariable(name: "p", arg: 1, scope: !465, file: !464, line: 196, type: !39)
!9685 = !DILocation(line: 196, column: 19, scope: !465)
!9686 = !DILocalVariable(name: "pn", arg: 2, scope: !465, file: !464, line: 196, type: !468)
!9687 = !DILocation(line: 196, column: 30, scope: !465)
!9688 = !DILocalVariable(name: "s", arg: 3, scope: !465, file: !464, line: 196, type: !143)
!9689 = !DILocation(line: 196, column: 41, scope: !465)
!9690 = !DILocalVariable(name: "n", scope: !465, file: !464, line: 198, type: !143)
!9691 = !DILocation(line: 198, column: 10, scope: !465)
!9692 = !DILocation(line: 198, column: 15, scope: !465)
!9693 = !DILocation(line: 198, column: 14, scope: !465)
!9694 = !DILocation(line: 200, column: 9, scope: !9695)
!9695 = distinct !DILexicalBlock(scope: !465, file: !464, line: 200, column: 7)
!9696 = !DILocation(line: 200, column: 7, scope: !465)
!9697 = !DILocation(line: 202, column: 13, scope: !9698)
!9698 = distinct !DILexicalBlock(scope: !9699, file: !464, line: 202, column: 11)
!9699 = distinct !DILexicalBlock(scope: !9695, file: !464, line: 201, column: 5)
!9700 = !DILocation(line: 202, column: 11, scope: !9699)
!9701 = !DILocation(line: 210, column: 32, scope: !9702)
!9702 = distinct !DILexicalBlock(scope: !9698, file: !464, line: 203, column: 9)
!9703 = !DILocation(line: 210, column: 30, scope: !9702)
!9704 = !DILocation(line: 210, column: 13, scope: !9702)
!9705 = !DILocation(line: 211, column: 17, scope: !9702)
!9706 = !DILocation(line: 211, column: 16, scope: !9702)
!9707 = !DILocation(line: 211, column: 13, scope: !9702)
!9708 = !DILocation(line: 212, column: 9, scope: !9702)
!9709 = !DILocation(line: 213, column: 5, scope: !9699)
!9710 = !DILocation(line: 220, column: 33, scope: !9711)
!9711 = distinct !DILexicalBlock(scope: !9712, file: !464, line: 220, column: 11)
!9712 = distinct !DILexicalBlock(scope: !9695, file: !464, line: 215, column: 5)
!9713 = !DILocation(line: 220, column: 31, scope: !9711)
!9714 = !DILocation(line: 220, column: 38, scope: !9711)
!9715 = !DILocation(line: 220, column: 35, scope: !9711)
!9716 = !DILocation(line: 220, column: 11, scope: !9712)
!9717 = !DILocation(line: 221, column: 9, scope: !9711)
!9718 = !DILocation(line: 222, column: 13, scope: !9712)
!9719 = !DILocation(line: 222, column: 15, scope: !9712)
!9720 = !DILocation(line: 222, column: 20, scope: !9712)
!9721 = !DILocation(line: 222, column: 9, scope: !9712)
!9722 = !DILocation(line: 225, column: 9, scope: !465)
!9723 = !DILocation(line: 225, column: 4, scope: !465)
!9724 = !DILocation(line: 225, column: 7, scope: !465)
!9725 = !DILocation(line: 226, column: 20, scope: !465)
!9726 = !DILocation(line: 226, column: 23, scope: !465)
!9727 = !DILocation(line: 226, column: 27, scope: !465)
!9728 = !DILocation(line: 226, column: 25, scope: !465)
!9729 = !DILocation(line: 226, column: 10, scope: !465)
!9730 = !DILocation(line: 226, column: 3, scope: !465)
!9731 = distinct !DISubprogram(name: "xcharalloc", scope: !464, file: !464, line: 234, type: !9732, isLocal: false, isDefinition: true, scopeLine: 235, flags: DIFlagPrototyped, isOptimized: false, unit: !460, variables: !48)
!9732 = !DISubroutineType(types: !9733)
!9733 = !{!38, !143}
!9734 = !DILocalVariable(name: "n", arg: 1, scope: !9731, file: !464, line: 234, type: !143)
!9735 = !DILocation(line: 234, column: 20, scope: !9731)
!9736 = !DILocation(line: 236, column: 10, scope: !9731)
!9737 = !DILocation(line: 236, column: 3, scope: !9731)
!9738 = distinct !DISubprogram(name: "x2realloc", scope: !461, file: !461, line: 70, type: !9739, isLocal: false, isDefinition: true, scopeLine: 71, flags: DIFlagPrototyped, isOptimized: false, unit: !460, variables: !48)
!9739 = !DISubroutineType(types: !9740)
!9740 = !{!39, !39, !468}
!9741 = !DILocalVariable(name: "p", arg: 1, scope: !9738, file: !461, line: 70, type: !39)
!9742 = !DILocation(line: 70, column: 18, scope: !9738)
!9743 = !DILocalVariable(name: "pn", arg: 2, scope: !9738, file: !461, line: 70, type: !468)
!9744 = !DILocation(line: 70, column: 29, scope: !9738)
!9745 = !DILocation(line: 72, column: 22, scope: !9738)
!9746 = !DILocation(line: 72, column: 25, scope: !9738)
!9747 = !DILocation(line: 72, column: 10, scope: !9738)
!9748 = !DILocation(line: 72, column: 3, scope: !9738)
!9749 = distinct !DISubprogram(name: "xzalloc", scope: !461, file: !461, line: 80, type: !9628, isLocal: false, isDefinition: true, scopeLine: 81, flags: DIFlagPrototyped, isOptimized: false, unit: !460, variables: !48)
!9750 = !DILocalVariable(name: "s", arg: 1, scope: !9749, file: !461, line: 80, type: !143)
!9751 = !DILocation(line: 80, column: 17, scope: !9749)
!9752 = !DILocation(line: 82, column: 27, scope: !9749)
!9753 = !DILocation(line: 82, column: 18, scope: !9749)
!9754 = !DILocation(line: 82, column: 34, scope: !9749)
!9755 = !DILocation(line: 82, column: 10, scope: !9749)
!9756 = !DILocation(line: 82, column: 3, scope: !9749)
!9757 = distinct !DISubprogram(name: "xcalloc", scope: !461, file: !461, line: 89, type: !9612, isLocal: false, isDefinition: true, scopeLine: 90, flags: DIFlagPrototyped, isOptimized: false, unit: !460, variables: !48)
!9758 = !DILocalVariable(name: "n", arg: 1, scope: !9757, file: !461, line: 89, type: !143)
!9759 = !DILocation(line: 89, column: 17, scope: !9757)
!9760 = !DILocalVariable(name: "s", arg: 2, scope: !9757, file: !461, line: 89, type: !143)
!9761 = !DILocation(line: 89, column: 27, scope: !9757)
!9762 = !DILocalVariable(name: "p", scope: !9757, file: !461, line: 91, type: !39)
!9763 = !DILocation(line: 91, column: 9, scope: !9757)
!9764 = !DILocation(line: 97, column: 26, scope: !9765)
!9765 = distinct !DILexicalBlock(scope: !9757, file: !461, line: 96, column: 7)
!9766 = !DILocation(line: 97, column: 29, scope: !9765)
!9767 = !DILocation(line: 97, column: 18, scope: !9765)
!9768 = !DILocation(line: 97, column: 16, scope: !9765)
!9769 = !DILocation(line: 96, column: 7, scope: !9757)
!9770 = !DILocation(line: 98, column: 5, scope: !9765)
!9771 = !DILocation(line: 99, column: 10, scope: !9757)
!9772 = !DILocation(line: 99, column: 3, scope: !9757)
!9773 = distinct !DISubprogram(name: "xmemdup", scope: !461, file: !461, line: 107, type: !9774, isLocal: false, isDefinition: true, scopeLine: 108, flags: DIFlagPrototyped, isOptimized: false, unit: !460, variables: !48)
!9774 = !DISubroutineType(types: !9775)
!9775 = !{!39, !436, !143}
!9776 = !DILocalVariable(name: "p", arg: 1, scope: !9773, file: !461, line: 107, type: !436)
!9777 = !DILocation(line: 107, column: 22, scope: !9773)
!9778 = !DILocalVariable(name: "s", arg: 2, scope: !9773, file: !461, line: 107, type: !143)
!9779 = !DILocation(line: 107, column: 32, scope: !9773)
!9780 = !DILocation(line: 109, column: 27, scope: !9773)
!9781 = !DILocation(line: 109, column: 18, scope: !9773)
!9782 = !DILocation(line: 109, column: 31, scope: !9773)
!9783 = !DILocation(line: 109, column: 34, scope: !9773)
!9784 = !DILocation(line: 109, column: 10, scope: !9773)
!9785 = !DILocation(line: 109, column: 3, scope: !9773)
!9786 = distinct !DISubprogram(name: "xstrdup", scope: !461, file: !461, line: 115, type: !2459, isLocal: false, isDefinition: true, scopeLine: 116, flags: DIFlagPrototyped, isOptimized: false, unit: !460, variables: !48)
!9787 = !DILocalVariable(name: "string", arg: 1, scope: !9786, file: !461, line: 115, type: !35)
!9788 = !DILocation(line: 115, column: 22, scope: !9786)
!9789 = !DILocation(line: 117, column: 19, scope: !9786)
!9790 = !DILocation(line: 117, column: 35, scope: !9786)
!9791 = !DILocation(line: 117, column: 27, scope: !9786)
!9792 = !DILocation(line: 117, column: 43, scope: !9786)
!9793 = !DILocation(line: 117, column: 10, scope: !9786)
!9794 = !DILocation(line: 117, column: 3, scope: !9786)
!9795 = distinct !DISubprogram(name: "yesno", scope: !473, file: !473, line: 32, type: !225, isLocal: false, isDefinition: true, scopeLine: 33, flags: DIFlagPrototyped, isOptimized: false, unit: !472, variables: !48)
!9796 = !DILocalVariable(name: "yes", scope: !9795, file: !473, line: 34, type: !131)
!9797 = !DILocation(line: 34, column: 8, scope: !9795)
!9798 = !DILocalVariable(name: "c", scope: !9795, file: !473, line: 53, type: !46)
!9799 = !DILocation(line: 53, column: 7, scope: !9795)
!9800 = !DILocation(line: 53, column: 11, scope: !9795)
!9801 = !DILocation(line: 54, column: 10, scope: !9795)
!9802 = !DILocation(line: 54, column: 12, scope: !9795)
!9803 = !DILocation(line: 54, column: 19, scope: !9795)
!9804 = !DILocation(line: 54, column: 22, scope: !9795)
!9805 = !DILocation(line: 54, column: 24, scope: !9795)
!9806 = !DILocation(line: 54, column: 7, scope: !9795)
!9807 = !DILocation(line: 55, column: 3, scope: !9795)
!9808 = !DILocation(line: 55, column: 10, scope: !9795)
!9809 = !DILocation(line: 55, column: 12, scope: !9795)
!9810 = !DILocation(line: 55, column: 20, scope: !9795)
!9811 = !DILocation(line: 55, column: 23, scope: !9795)
!9812 = !DILocation(line: 55, column: 25, scope: !9795)
!9813 = !DILocation(line: 56, column: 9, scope: !9795)
!9814 = !DILocation(line: 56, column: 7, scope: !9795)
!9815 = distinct !{!9815, !9807, !9816}
!9816 = !DILocation(line: 56, column: 18, scope: !9795)
!9817 = !DILocation(line: 59, column: 10, scope: !9795)
!9818 = !DILocation(line: 59, column: 3, scope: !9795)
!9819 = distinct !DISubprogram(name: "euidaccess_stat", scope: !475, file: !475, line: 43, type: !9820, isLocal: false, isDefinition: true, scopeLine: 44, flags: DIFlagPrototyped, isOptimized: false, unit: !474, variables: !48)
!9820 = !DISubroutineType(types: !9821)
!9821 = !{!131, !9822, !46}
!9822 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9823, size: 64)
!9823 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9824)
!9824 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !328, line: 46, size: 1152, elements: !9825)
!9825 = !{!9826, !9827, !9828, !9829, !9830, !9831, !9832, !9833, !9834, !9835, !9836, !9837, !9842, !9843, !9844}
!9826 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !9824, file: !328, line: 48, baseType: !331, size: 64)
!9827 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !9824, file: !328, line: 53, baseType: !333, size: 64, offset: 64)
!9828 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !9824, file: !328, line: 61, baseType: !320, size: 64, offset: 128)
!9829 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !9824, file: !328, line: 62, baseType: !336, size: 32, offset: 192)
!9830 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !9824, file: !328, line: 64, baseType: !338, size: 32, offset: 224)
!9831 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !9824, file: !328, line: 65, baseType: !340, size: 32, offset: 256)
!9832 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !9824, file: !328, line: 67, baseType: !46, size: 32, offset: 288)
!9833 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !9824, file: !328, line: 69, baseType: !331, size: 64, offset: 320)
!9834 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !9824, file: !328, line: 74, baseType: !344, size: 64, offset: 384)
!9835 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !9824, file: !328, line: 78, baseType: !346, size: 64, offset: 448)
!9836 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !9824, file: !328, line: 80, baseType: !348, size: 64, offset: 512)
!9837 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !9824, file: !328, line: 91, baseType: !9838, size: 128, offset: 576)
!9838 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !351, line: 8, size: 128, elements: !9839)
!9839 = !{!9840, !9841}
!9840 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !9838, file: !351, line: 10, baseType: !354, size: 64)
!9841 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !9838, file: !351, line: 11, baseType: !356, size: 64, offset: 64)
!9842 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !9824, file: !328, line: 92, baseType: !9838, size: 128, offset: 704)
!9843 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !9824, file: !328, line: 93, baseType: !9838, size: 128, offset: 832)
!9844 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !9824, file: !328, line: 106, baseType: !360, size: 192, offset: 960)
!9845 = !DILocalVariable(name: "st", arg: 1, scope: !9819, file: !475, line: 43, type: !9822)
!9846 = !DILocation(line: 43, column: 37, scope: !9819)
!9847 = !DILocalVariable(name: "mode", arg: 2, scope: !9819, file: !475, line: 43, type: !46)
!9848 = !DILocation(line: 43, column: 45, scope: !9819)
!9849 = !DILocalVariable(name: "euid", scope: !9819, file: !475, line: 45, type: !9850)
!9850 = !DIDerivedType(tag: DW_TAG_typedef, name: "uid_t", file: !319, line: 80, baseType: !338)
!9851 = !DILocation(line: 45, column: 9, scope: !9819)
!9852 = !DILocalVariable(name: "granted", scope: !9819, file: !475, line: 46, type: !199)
!9853 = !DILocation(line: 46, column: 16, scope: !9819)
!9854 = !DILocation(line: 50, column: 10, scope: !9855)
!9855 = distinct !DILexicalBlock(scope: !9819, file: !475, line: 49, column: 7)
!9856 = !DILocation(line: 56, column: 7, scope: !9857)
!9857 = distinct !DILexicalBlock(scope: !9819, file: !475, line: 56, column: 7)
!9858 = !DILocation(line: 56, column: 12, scope: !9857)
!9859 = !DILocation(line: 56, column: 7, scope: !9819)
!9860 = !DILocation(line: 57, column: 5, scope: !9857)
!9861 = !DILocation(line: 59, column: 10, scope: !9819)
!9862 = !DILocation(line: 59, column: 8, scope: !9819)
!9863 = !DILocation(line: 63, column: 7, scope: !9864)
!9864 = distinct !DILexicalBlock(scope: !9819, file: !475, line: 63, column: 7)
!9865 = !DILocation(line: 63, column: 12, scope: !9864)
!9866 = !DILocation(line: 63, column: 17, scope: !9864)
!9867 = !DILocation(line: 63, column: 22, scope: !9864)
!9868 = !DILocation(line: 63, column: 27, scope: !9864)
!9869 = !DILocation(line: 63, column: 35, scope: !9864)
!9870 = !DILocation(line: 64, column: 21, scope: !9864)
!9871 = !DILocation(line: 64, column: 25, scope: !9864)
!9872 = !DILocation(line: 64, column: 29, scope: !9864)
!9873 = !DILocation(line: 64, column: 37, scope: !9864)
!9874 = !DILocation(line: 63, column: 7, scope: !9819)
!9875 = !DILocation(line: 65, column: 5, scope: !9864)
!9876 = !DILocation(line: 77, column: 15, scope: !9877)
!9877 = distinct !DILexicalBlock(scope: !9819, file: !475, line: 68, column: 10)
!9878 = !DILocation(line: 77, column: 19, scope: !9877)
!9879 = !DILocation(line: 77, column: 13, scope: !9877)
!9880 = !DILocation(line: 89, column: 7, scope: !9881)
!9881 = distinct !DILexicalBlock(scope: !9819, file: !475, line: 89, column: 7)
!9882 = !DILocation(line: 89, column: 15, scope: !9881)
!9883 = !DILocation(line: 89, column: 19, scope: !9881)
!9884 = !DILocation(line: 89, column: 12, scope: !9881)
!9885 = !DILocation(line: 89, column: 7, scope: !9819)
!9886 = !DILocation(line: 90, column: 13, scope: !9881)
!9887 = !DILocation(line: 90, column: 5, scope: !9881)
!9888 = !DILocalVariable(name: "egid", scope: !9889, file: !475, line: 93, type: !9890)
!9889 = distinct !DILexicalBlock(scope: !9881, file: !475, line: 92, column: 5)
!9890 = !DIDerivedType(tag: DW_TAG_typedef, name: "gid_t", file: !319, line: 65, baseType: !340)
!9891 = !DILocation(line: 93, column: 13, scope: !9889)
!9892 = !DILocation(line: 93, column: 20, scope: !9889)
!9893 = !DILocation(line: 94, column: 11, scope: !9894)
!9894 = distinct !DILexicalBlock(scope: !9889, file: !475, line: 94, column: 11)
!9895 = !DILocation(line: 94, column: 19, scope: !9894)
!9896 = !DILocation(line: 94, column: 23, scope: !9894)
!9897 = !DILocation(line: 94, column: 16, scope: !9894)
!9898 = !DILocation(line: 94, column: 30, scope: !9894)
!9899 = !DILocation(line: 94, column: 47, scope: !9894)
!9900 = !DILocation(line: 94, column: 51, scope: !9894)
!9901 = !DILocation(line: 94, column: 33, scope: !9894)
!9902 = !DILocation(line: 94, column: 11, scope: !9889)
!9903 = !DILocation(line: 95, column: 17, scope: !9894)
!9904 = !DILocation(line: 95, column: 9, scope: !9894)
!9905 = !DILocation(line: 98, column: 8, scope: !9906)
!9906 = distinct !DILexicalBlock(scope: !9819, file: !475, line: 98, column: 7)
!9907 = !DILocation(line: 98, column: 16, scope: !9906)
!9908 = !DILocation(line: 98, column: 15, scope: !9906)
!9909 = !DILocation(line: 98, column: 13, scope: !9906)
!9910 = !DILocation(line: 98, column: 25, scope: !9906)
!9911 = !DILocation(line: 98, column: 7, scope: !9819)
!9912 = !DILocation(line: 99, column: 5, scope: !9906)
!9913 = !DILocation(line: 101, column: 3, scope: !9819)
!9914 = !DILocation(line: 102, column: 1, scope: !9819)
!9915 = distinct !DISubprogram(name: "xfts_open", scope: !477, file: !477, line: 33, type: !9916, isLocal: false, isDefinition: true, scopeLine: 35, flags: DIFlagPrototyped, isOptimized: false, unit: !476, variables: !48)
!9916 = !DISubroutineType(types: !9917)
!9917 = !{!9918, !861, !46, !10001}
!9918 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9919, size: 64)
!9919 = !DIDerivedType(tag: DW_TAG_typedef, name: "FTS", file: !295, line: 183, baseType: !9920)
!9920 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !295, line: 68, size: 1024, elements: !9921)
!9921 = !{!9922, !9967, !9968, !9970, !9971, !9972, !9973, !9974, !9975, !9976, !9983, !9984, !9985, !9992}
!9922 = !DIDerivedType(tag: DW_TAG_member, name: "fts_cur", scope: !9920, file: !295, line: 69, baseType: !9923, size: 64)
!9923 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9924, size: 64)
!9924 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ftsent", file: !295, line: 185, size: 2112, elements: !9925)
!9925 = !{!9926, !9927, !9928, !9929, !9930, !9931, !9932, !9933, !9934, !9935, !9936, !9937, !9938, !9939, !9940, !9941, !9942, !9943, !9966}
!9926 = !DIDerivedType(tag: DW_TAG_member, name: "fts_cycle", scope: !9924, file: !295, line: 186, baseType: !9923, size: 64)
!9927 = !DIDerivedType(tag: DW_TAG_member, name: "fts_parent", scope: !9924, file: !295, line: 187, baseType: !9923, size: 64, offset: 64)
!9928 = !DIDerivedType(tag: DW_TAG_member, name: "fts_link", scope: !9924, file: !295, line: 188, baseType: !9923, size: 64, offset: 128)
!9929 = !DIDerivedType(tag: DW_TAG_member, name: "fts_number", scope: !9924, file: !295, line: 189, baseType: !306, size: 64, offset: 192)
!9930 = !DIDerivedType(tag: DW_TAG_member, name: "fts_pointer", scope: !9924, file: !295, line: 190, baseType: !39, size: 64, offset: 256)
!9931 = !DIDerivedType(tag: DW_TAG_member, name: "fts_accpath", scope: !9924, file: !295, line: 191, baseType: !38, size: 64, offset: 320)
!9932 = !DIDerivedType(tag: DW_TAG_member, name: "fts_path", scope: !9924, file: !295, line: 192, baseType: !38, size: 64, offset: 384)
!9933 = !DIDerivedType(tag: DW_TAG_member, name: "fts_errno", scope: !9924, file: !295, line: 193, baseType: !46, size: 32, offset: 448)
!9934 = !DIDerivedType(tag: DW_TAG_member, name: "fts_symfd", scope: !9924, file: !295, line: 194, baseType: !46, size: 32, offset: 480)
!9935 = !DIDerivedType(tag: DW_TAG_member, name: "fts_pathlen", scope: !9924, file: !295, line: 195, baseType: !143, size: 64, offset: 512)
!9936 = !DIDerivedType(tag: DW_TAG_member, name: "fts_fts", scope: !9924, file: !295, line: 197, baseType: !9918, size: 64, offset: 576)
!9937 = !DIDerivedType(tag: DW_TAG_member, name: "fts_level", scope: !9924, file: !295, line: 201, baseType: !315, size: 64, offset: 640)
!9938 = !DIDerivedType(tag: DW_TAG_member, name: "fts_namelen", scope: !9924, file: !295, line: 203, baseType: !143, size: 64, offset: 704)
!9939 = !DIDerivedType(tag: DW_TAG_member, name: "fts_n_dirs_remaining", scope: !9924, file: !295, line: 204, baseType: !318, size: 64, offset: 768)
!9940 = !DIDerivedType(tag: DW_TAG_member, name: "fts_info", scope: !9924, file: !295, line: 220, baseType: !183, size: 16, offset: 832)
!9941 = !DIDerivedType(tag: DW_TAG_member, name: "fts_flags", scope: !9924, file: !295, line: 224, baseType: !183, size: 16, offset: 848)
!9942 = !DIDerivedType(tag: DW_TAG_member, name: "fts_instr", scope: !9924, file: !295, line: 230, baseType: !183, size: 16, offset: 864)
!9943 = !DIDerivedType(tag: DW_TAG_member, name: "fts_statp", scope: !9924, file: !295, line: 232, baseType: !9944, size: 1152, offset: 896)
!9944 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9945, size: 1152, elements: !363)
!9945 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !328, line: 46, size: 1152, elements: !9946)
!9946 = !{!9947, !9948, !9949, !9950, !9951, !9952, !9953, !9954, !9955, !9956, !9957, !9958, !9963, !9964, !9965}
!9947 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !9945, file: !328, line: 48, baseType: !331, size: 64)
!9948 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !9945, file: !328, line: 53, baseType: !333, size: 64, offset: 64)
!9949 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !9945, file: !328, line: 61, baseType: !320, size: 64, offset: 128)
!9950 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !9945, file: !328, line: 62, baseType: !336, size: 32, offset: 192)
!9951 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !9945, file: !328, line: 64, baseType: !338, size: 32, offset: 224)
!9952 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !9945, file: !328, line: 65, baseType: !340, size: 32, offset: 256)
!9953 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !9945, file: !328, line: 67, baseType: !46, size: 32, offset: 288)
!9954 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !9945, file: !328, line: 69, baseType: !331, size: 64, offset: 320)
!9955 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !9945, file: !328, line: 74, baseType: !344, size: 64, offset: 384)
!9956 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !9945, file: !328, line: 78, baseType: !346, size: 64, offset: 448)
!9957 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !9945, file: !328, line: 80, baseType: !348, size: 64, offset: 512)
!9958 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !9945, file: !328, line: 91, baseType: !9959, size: 128, offset: 576)
!9959 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !351, line: 8, size: 128, elements: !9960)
!9960 = !{!9961, !9962}
!9961 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !9959, file: !351, line: 10, baseType: !354, size: 64)
!9962 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !9959, file: !351, line: 11, baseType: !356, size: 64, offset: 64)
!9963 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !9945, file: !328, line: 92, baseType: !9959, size: 128, offset: 704)
!9964 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !9945, file: !328, line: 93, baseType: !9959, size: 128, offset: 832)
!9965 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !9945, file: !328, line: 106, baseType: !360, size: 192, offset: 960)
!9966 = !DIDerivedType(tag: DW_TAG_member, name: "fts_name", scope: !9924, file: !295, line: 233, baseType: !366, size: 8, offset: 2048)
!9967 = !DIDerivedType(tag: DW_TAG_member, name: "fts_child", scope: !9920, file: !295, line: 70, baseType: !9923, size: 64, offset: 64)
!9968 = !DIDerivedType(tag: DW_TAG_member, name: "fts_array", scope: !9920, file: !295, line: 71, baseType: !9969, size: 64, offset: 128)
!9969 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9923, size: 64)
!9970 = !DIDerivedType(tag: DW_TAG_member, name: "fts_dev", scope: !9920, file: !295, line: 72, baseType: !371, size: 64, offset: 192)
!9971 = !DIDerivedType(tag: DW_TAG_member, name: "fts_path", scope: !9920, file: !295, line: 73, baseType: !38, size: 64, offset: 256)
!9972 = !DIDerivedType(tag: DW_TAG_member, name: "fts_rfd", scope: !9920, file: !295, line: 74, baseType: !46, size: 32, offset: 320)
!9973 = !DIDerivedType(tag: DW_TAG_member, name: "fts_cwd_fd", scope: !9920, file: !295, line: 75, baseType: !46, size: 32, offset: 352)
!9974 = !DIDerivedType(tag: DW_TAG_member, name: "fts_pathlen", scope: !9920, file: !295, line: 77, baseType: !143, size: 64, offset: 384)
!9975 = !DIDerivedType(tag: DW_TAG_member, name: "fts_nitems", scope: !9920, file: !295, line: 78, baseType: !143, size: 64, offset: 448)
!9976 = !DIDerivedType(tag: DW_TAG_member, name: "fts_compar", scope: !9920, file: !295, line: 79, baseType: !9977, size: 64, offset: 512)
!9977 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9978, size: 64)
!9978 = !DISubroutineType(types: !9979)
!9979 = !{!46, !9980, !9980}
!9980 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9981, size: 64)
!9981 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9982, size: 64)
!9982 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9924)
!9983 = !DIDerivedType(tag: DW_TAG_member, name: "fts_options", scope: !9920, file: !295, line: 144, baseType: !46, size: 32, offset: 576)
!9984 = !DIDerivedType(tag: DW_TAG_member, name: "fts_leaf_optimization_works_ht", scope: !9920, file: !295, line: 154, baseType: !386, size: 64, offset: 640)
!9985 = !DIDerivedType(tag: DW_TAG_member, name: "fts_cycle", scope: !9920, file: !295, line: 176, baseType: !9986, size: 64, offset: 704)
!9986 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9920, file: !295, line: 156, size: 64, elements: !9987)
!9987 = !{!9988, !9989}
!9988 = !DIDerivedType(tag: DW_TAG_member, name: "ht", scope: !9986, file: !295, line: 169, baseType: !386, size: 64)
!9989 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !9986, file: !295, line: 175, baseType: !9990, size: 64)
!9990 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9991, size: 64)
!9991 = !DICompositeType(tag: DW_TAG_structure_type, name: "cycle_check_state", file: !295, line: 175, flags: DIFlagFwdDecl)
!9992 = !DIDerivedType(tag: DW_TAG_member, name: "fts_fd_ring", scope: !9920, file: !295, line: 182, baseType: !9993, size: 256, offset: 768)
!9993 = !DIDerivedType(tag: DW_TAG_typedef, name: "I_ring", file: !411, line: 39, baseType: !9994)
!9994 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "I_ring", file: !411, line: 31, size: 256, elements: !9995)
!9995 = !{!9996, !9997, !9998, !9999, !10000}
!9996 = !DIDerivedType(tag: DW_TAG_member, name: "ir_data", scope: !9994, file: !411, line: 33, baseType: !415, size: 128)
!9997 = !DIDerivedType(tag: DW_TAG_member, name: "ir_default_val", scope: !9994, file: !411, line: 34, baseType: !46, size: 32, offset: 128)
!9998 = !DIDerivedType(tag: DW_TAG_member, name: "ir_front", scope: !9994, file: !411, line: 35, baseType: !199, size: 32, offset: 160)
!9999 = !DIDerivedType(tag: DW_TAG_member, name: "ir_back", scope: !9994, file: !411, line: 36, baseType: !199, size: 32, offset: 192)
!10000 = !DIDerivedType(tag: DW_TAG_member, name: "ir_empty", scope: !9994, file: !411, line: 37, baseType: !131, size: 8, offset: 224)
!10001 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10002, size: 64)
!10002 = !DISubroutineType(types: !10003)
!10003 = !{!46, !10004, !10004}
!10004 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10005, size: 64)
!10005 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10006, size: 64)
!10006 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10007)
!10007 = !DIDerivedType(tag: DW_TAG_typedef, name: "FTSENT", file: !295, line: 234, baseType: !9924)
!10008 = !DILocalVariable(name: "argv", arg: 1, scope: !9915, file: !477, line: 33, type: !861)
!10009 = !DILocation(line: 33, column: 26, scope: !9915)
!10010 = !DILocalVariable(name: "options", arg: 2, scope: !9915, file: !477, line: 33, type: !46)
!10011 = !DILocation(line: 33, column: 36, scope: !9915)
!10012 = !DILocalVariable(name: "compar", arg: 3, scope: !9915, file: !477, line: 34, type: !10001)
!10013 = !DILocation(line: 34, column: 18, scope: !9915)
!10014 = !DILocalVariable(name: "fts", scope: !9915, file: !477, line: 36, type: !9918)
!10015 = !DILocation(line: 36, column: 8, scope: !9915)
!10016 = !DILocation(line: 36, column: 24, scope: !9915)
!10017 = !DILocation(line: 36, column: 30, scope: !9915)
!10018 = !DILocation(line: 36, column: 38, scope: !9915)
!10019 = !DILocation(line: 36, column: 51, scope: !9915)
!10020 = !DILocation(line: 36, column: 14, scope: !9915)
!10021 = !DILocation(line: 37, column: 7, scope: !10022)
!10022 = distinct !DILexicalBlock(scope: !9915, file: !477, line: 37, column: 7)
!10023 = !DILocation(line: 37, column: 11, scope: !10022)
!10024 = !DILocation(line: 37, column: 7, scope: !9915)
!10025 = !DILocation(line: 41, column: 7, scope: !10026)
!10026 = distinct !DILexicalBlock(scope: !10027, file: !477, line: 41, column: 7)
!10027 = distinct !DILexicalBlock(scope: !10028, file: !477, line: 41, column: 7)
!10028 = distinct !DILexicalBlock(scope: !10022, file: !477, line: 38, column: 5)
!10029 = !DILocation(line: 41, column: 7, scope: !10027)
!10030 = !DILocation(line: 42, column: 7, scope: !10028)
!10031 = !DILocation(line: 45, column: 10, scope: !9915)
!10032 = !DILocation(line: 45, column: 3, scope: !9915)
!10033 = distinct !DISubprogram(name: "cycle_warning_required", scope: !477, file: !477, line: 56, type: !10034, isLocal: false, isDefinition: true, scopeLine: 57, flags: DIFlagPrototyped, isOptimized: false, unit: !476, variables: !48)
!10034 = !DISubroutineType(types: !10035)
!10035 = !{!131, !10036, !10005}
!10036 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10037, size: 64)
!10037 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9919)
!10038 = !DILocalVariable(name: "fts", arg: 1, scope: !10033, file: !477, line: 56, type: !10036)
!10039 = !DILocation(line: 56, column: 36, scope: !10033)
!10040 = !DILocalVariable(name: "ent", arg: 2, scope: !10033, file: !477, line: 56, type: !10005)
!10041 = !DILocation(line: 56, column: 55, scope: !10033)
!10042 = !DILocation(line: 62, column: 12, scope: !10033)
!10043 = !DILocation(line: 62, column: 38, scope: !10033)
!10044 = !DILocation(line: 62, column: 42, scope: !10033)
!10045 = !DILocation(line: 63, column: 11, scope: !10033)
!10046 = !DILocation(line: 63, column: 15, scope: !10033)
!10047 = !DILocation(line: 63, column: 41, scope: !10033)
!10048 = !DILocation(line: 63, column: 44, scope: !10033)
!10049 = !DILocation(line: 64, column: 15, scope: !10033)
!10050 = !DILocation(line: 64, column: 18, scope: !10033)
!10051 = !DILocation(line: 64, column: 23, scope: !10033)
!10052 = !DILocation(line: 64, column: 33, scope: !10033)
!10053 = !DILocation(line: 62, column: 3, scope: !10033)
!10054 = distinct !DISubprogram(name: "freadahead", scope: !479, file: !479, line: 26, type: !10055, isLocal: false, isDefinition: true, scopeLine: 27, flags: DIFlagPrototyped, isOptimized: false, unit: !478, variables: !48)
!10055 = !DISubroutineType(types: !10056)
!10056 = !{!143, !10057}
!10057 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10058, size: 64)
!10058 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !1925, line: 7, baseType: !10059)
!10059 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !1927, line: 245, size: 1728, elements: !10060)
!10060 = !{!10061, !10062, !10063, !10064, !10065, !10066, !10067, !10068, !10069, !10070, !10071, !10072, !10073, !10081, !10082, !10083, !10084, !10085, !10086, !10087, !10088, !10089, !10090, !10091, !10092, !10093, !10094, !10095, !10096}
!10061 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !10059, file: !1927, line: 246, baseType: !46, size: 32)
!10062 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !10059, file: !1927, line: 251, baseType: !38, size: 64, offset: 64)
!10063 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !10059, file: !1927, line: 252, baseType: !38, size: 64, offset: 128)
!10064 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !10059, file: !1927, line: 253, baseType: !38, size: 64, offset: 192)
!10065 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !10059, file: !1927, line: 254, baseType: !38, size: 64, offset: 256)
!10066 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !10059, file: !1927, line: 255, baseType: !38, size: 64, offset: 320)
!10067 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !10059, file: !1927, line: 256, baseType: !38, size: 64, offset: 384)
!10068 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !10059, file: !1927, line: 257, baseType: !38, size: 64, offset: 448)
!10069 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !10059, file: !1927, line: 258, baseType: !38, size: 64, offset: 512)
!10070 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !10059, file: !1927, line: 260, baseType: !38, size: 64, offset: 576)
!10071 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !10059, file: !1927, line: 261, baseType: !38, size: 64, offset: 640)
!10072 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !10059, file: !1927, line: 262, baseType: !38, size: 64, offset: 704)
!10073 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !10059, file: !1927, line: 264, baseType: !10074, size: 64, offset: 768)
!10074 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10075, size: 64)
!10075 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !1927, line: 160, size: 192, elements: !10076)
!10076 = !{!10077, !10078, !10080}
!10077 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !10075, file: !1927, line: 161, baseType: !10074, size: 64)
!10078 = !DIDerivedType(tag: DW_TAG_member, name: "_sbuf", scope: !10075, file: !1927, line: 162, baseType: !10079, size: 64, offset: 64)
!10079 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10059, size: 64)
!10080 = !DIDerivedType(tag: DW_TAG_member, name: "_pos", scope: !10075, file: !1927, line: 166, baseType: !46, size: 32, offset: 128)
!10081 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !10059, file: !1927, line: 266, baseType: !10079, size: 64, offset: 832)
!10082 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !10059, file: !1927, line: 268, baseType: !46, size: 32, offset: 896)
!10083 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !10059, file: !1927, line: 272, baseType: !46, size: 32, offset: 928)
!10084 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !10059, file: !1927, line: 274, baseType: !344, size: 64, offset: 960)
!10085 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !10059, file: !1927, line: 278, baseType: !183, size: 16, offset: 1024)
!10086 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !10059, file: !1927, line: 279, baseType: !1955, size: 8, offset: 1040)
!10087 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !10059, file: !1927, line: 280, baseType: !366, size: 8, offset: 1048)
!10088 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !10059, file: !1927, line: 284, baseType: !1958, size: 64, offset: 1088)
!10089 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !10059, file: !1927, line: 293, baseType: !1961, size: 64, offset: 1152)
!10090 = !DIDerivedType(tag: DW_TAG_member, name: "__pad1", scope: !10059, file: !1927, line: 301, baseType: !39, size: 64, offset: 1216)
!10091 = !DIDerivedType(tag: DW_TAG_member, name: "__pad2", scope: !10059, file: !1927, line: 302, baseType: !39, size: 64, offset: 1280)
!10092 = !DIDerivedType(tag: DW_TAG_member, name: "__pad3", scope: !10059, file: !1927, line: 303, baseType: !39, size: 64, offset: 1344)
!10093 = !DIDerivedType(tag: DW_TAG_member, name: "__pad4", scope: !10059, file: !1927, line: 304, baseType: !39, size: 64, offset: 1408)
!10094 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !10059, file: !1927, line: 306, baseType: !143, size: 64, offset: 1472)
!10095 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !10059, file: !1927, line: 307, baseType: !46, size: 32, offset: 1536)
!10096 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !10059, file: !1927, line: 309, baseType: !1969, size: 160, offset: 1568)
!10097 = !DILocalVariable(name: "fp", arg: 1, scope: !10054, file: !479, line: 26, type: !10057)
!10098 = !DILocation(line: 26, column: 19, scope: !10054)
!10099 = !DILocation(line: 29, column: 7, scope: !10100)
!10100 = distinct !DILexicalBlock(scope: !10054, file: !479, line: 29, column: 7)
!10101 = !DILocation(line: 29, column: 11, scope: !10100)
!10102 = !DILocation(line: 29, column: 27, scope: !10100)
!10103 = !DILocation(line: 29, column: 31, scope: !10100)
!10104 = !DILocation(line: 29, column: 25, scope: !10100)
!10105 = !DILocation(line: 29, column: 7, scope: !10054)
!10106 = !DILocation(line: 30, column: 5, scope: !10100)
!10107 = !DILocation(line: 31, column: 11, scope: !10054)
!10108 = !DILocation(line: 31, column: 15, scope: !10054)
!10109 = !DILocation(line: 31, column: 30, scope: !10054)
!10110 = !DILocation(line: 31, column: 34, scope: !10054)
!10111 = !DILocation(line: 31, column: 28, scope: !10054)
!10112 = !DILocation(line: 32, column: 13, scope: !10054)
!10113 = !DILocation(line: 32, column: 17, scope: !10054)
!10114 = !DILocation(line: 32, column: 24, scope: !10054)
!10115 = !DILocation(line: 32, column: 42, scope: !10054)
!10116 = !DILocation(line: 32, column: 46, scope: !10054)
!10117 = !DILocation(line: 32, column: 61, scope: !10054)
!10118 = !DILocation(line: 32, column: 65, scope: !10054)
!10119 = !DILocation(line: 32, column: 59, scope: !10054)
!10120 = !DILocation(line: 32, column: 10, scope: !10054)
!10121 = !DILocation(line: 31, column: 3, scope: !10054)
!10122 = !DILocation(line: 85, column: 1, scope: !10054)
!10123 = distinct !DISubprogram(name: "xalloc_die", scope: !481, file: !481, line: 32, type: !116, isLocal: false, isDefinition: true, scopeLine: 33, flags: DIFlagPrototyped | DIFlagNoReturn, isOptimized: false, unit: !480, variables: !48)
!10124 = !DILocation(line: 34, column: 10, scope: !10123)
!10125 = !DILocation(line: 34, column: 3, scope: !10123)
!10126 = !DILocation(line: 40, column: 3, scope: !10123)
!10127 = !DILocation(line: 41, column: 1, scope: !10123)
!10128 = distinct !DISubprogram(name: "set_cloexec_flag", scope: !483, file: !483, line: 39, type: !10129, isLocal: false, isDefinition: true, scopeLine: 40, flags: DIFlagPrototyped, isOptimized: false, unit: !482, variables: !48)
!10129 = !DISubroutineType(types: !10130)
!10130 = !{!46, !46, !131}
!10131 = !DILocalVariable(name: "desc", arg: 1, scope: !10128, file: !483, line: 39, type: !46)
!10132 = !DILocation(line: 39, column: 23, scope: !10128)
!10133 = !DILocalVariable(name: "value", arg: 2, scope: !10128, file: !483, line: 39, type: !131)
!10134 = !DILocation(line: 39, column: 34, scope: !10128)
!10135 = !DILocalVariable(name: "flags", scope: !10128, file: !483, line: 43, type: !46)
!10136 = !DILocation(line: 43, column: 7, scope: !10128)
!10137 = !DILocation(line: 43, column: 22, scope: !10128)
!10138 = !DILocation(line: 43, column: 15, scope: !10128)
!10139 = !DILocation(line: 45, column: 12, scope: !10140)
!10140 = distinct !DILexicalBlock(scope: !10128, file: !483, line: 45, column: 7)
!10141 = !DILocation(line: 45, column: 9, scope: !10140)
!10142 = !DILocation(line: 45, column: 7, scope: !10128)
!10143 = !DILocalVariable(name: "newflags", scope: !10144, file: !483, line: 47, type: !46)
!10144 = distinct !DILexicalBlock(scope: !10140, file: !483, line: 46, column: 5)
!10145 = !DILocation(line: 47, column: 11, scope: !10144)
!10146 = !DILocation(line: 47, column: 23, scope: !10144)
!10147 = !DILocation(line: 47, column: 31, scope: !10144)
!10148 = !DILocation(line: 47, column: 37, scope: !10144)
!10149 = !DILocation(line: 47, column: 52, scope: !10144)
!10150 = !DILocation(line: 47, column: 58, scope: !10144)
!10151 = !DILocation(line: 49, column: 11, scope: !10152)
!10152 = distinct !DILexicalBlock(scope: !10144, file: !483, line: 49, column: 11)
!10153 = !DILocation(line: 49, column: 20, scope: !10152)
!10154 = !DILocation(line: 49, column: 17, scope: !10152)
!10155 = !DILocation(line: 50, column: 11, scope: !10152)
!10156 = !DILocation(line: 50, column: 21, scope: !10152)
!10157 = !DILocation(line: 50, column: 36, scope: !10152)
!10158 = !DILocation(line: 50, column: 14, scope: !10152)
!10159 = !DILocation(line: 50, column: 46, scope: !10152)
!10160 = !DILocation(line: 49, column: 11, scope: !10144)
!10161 = !DILocation(line: 51, column: 9, scope: !10152)
!10162 = !DILocation(line: 52, column: 5, scope: !10144)
!10163 = !DILocation(line: 54, column: 3, scope: !10128)
!10164 = !DILocation(line: 72, column: 1, scope: !10128)
!10165 = distinct !DISubprogram(name: "dup_cloexec", scope: !483, file: !483, line: 80, type: !10166, isLocal: false, isDefinition: true, scopeLine: 81, flags: DIFlagPrototyped, isOptimized: false, unit: !482, variables: !48)
!10166 = !DISubroutineType(types: !10167)
!10167 = !{!46, !46}
!10168 = !DILocalVariable(name: "fd", arg: 1, scope: !10165, file: !483, line: 80, type: !46)
!10169 = !DILocation(line: 80, column: 18, scope: !10165)
!10170 = !DILocation(line: 82, column: 17, scope: !10165)
!10171 = !DILocation(line: 82, column: 10, scope: !10165)
!10172 = !DILocation(line: 82, column: 3, scope: !10165)
!10173 = distinct !DISubprogram(name: "close_stream", scope: !485, file: !485, line: 56, type: !10174, isLocal: false, isDefinition: true, scopeLine: 57, flags: DIFlagPrototyped, isOptimized: false, unit: !484, variables: !48)
!10174 = !DISubroutineType(types: !10175)
!10175 = !{!46, !10176}
!10176 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10177, size: 64)
!10177 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !1925, line: 7, baseType: !10178)
!10178 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !1927, line: 245, size: 1728, elements: !10179)
!10179 = !{!10180, !10181, !10182, !10183, !10184, !10185, !10186, !10187, !10188, !10189, !10190, !10191, !10192, !10200, !10201, !10202, !10203, !10204, !10205, !10206, !10207, !10208, !10209, !10210, !10211, !10212, !10213, !10214, !10215}
!10180 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !10178, file: !1927, line: 246, baseType: !46, size: 32)
!10181 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !10178, file: !1927, line: 251, baseType: !38, size: 64, offset: 64)
!10182 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !10178, file: !1927, line: 252, baseType: !38, size: 64, offset: 128)
!10183 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !10178, file: !1927, line: 253, baseType: !38, size: 64, offset: 192)
!10184 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !10178, file: !1927, line: 254, baseType: !38, size: 64, offset: 256)
!10185 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !10178, file: !1927, line: 255, baseType: !38, size: 64, offset: 320)
!10186 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !10178, file: !1927, line: 256, baseType: !38, size: 64, offset: 384)
!10187 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !10178, file: !1927, line: 257, baseType: !38, size: 64, offset: 448)
!10188 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !10178, file: !1927, line: 258, baseType: !38, size: 64, offset: 512)
!10189 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !10178, file: !1927, line: 260, baseType: !38, size: 64, offset: 576)
!10190 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !10178, file: !1927, line: 261, baseType: !38, size: 64, offset: 640)
!10191 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !10178, file: !1927, line: 262, baseType: !38, size: 64, offset: 704)
!10192 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !10178, file: !1927, line: 264, baseType: !10193, size: 64, offset: 768)
!10193 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10194, size: 64)
!10194 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !1927, line: 160, size: 192, elements: !10195)
!10195 = !{!10196, !10197, !10199}
!10196 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !10194, file: !1927, line: 161, baseType: !10193, size: 64)
!10197 = !DIDerivedType(tag: DW_TAG_member, name: "_sbuf", scope: !10194, file: !1927, line: 162, baseType: !10198, size: 64, offset: 64)
!10198 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10178, size: 64)
!10199 = !DIDerivedType(tag: DW_TAG_member, name: "_pos", scope: !10194, file: !1927, line: 166, baseType: !46, size: 32, offset: 128)
!10200 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !10178, file: !1927, line: 266, baseType: !10198, size: 64, offset: 832)
!10201 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !10178, file: !1927, line: 268, baseType: !46, size: 32, offset: 896)
!10202 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !10178, file: !1927, line: 272, baseType: !46, size: 32, offset: 928)
!10203 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !10178, file: !1927, line: 274, baseType: !344, size: 64, offset: 960)
!10204 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !10178, file: !1927, line: 278, baseType: !183, size: 16, offset: 1024)
!10205 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !10178, file: !1927, line: 279, baseType: !1955, size: 8, offset: 1040)
!10206 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !10178, file: !1927, line: 280, baseType: !366, size: 8, offset: 1048)
!10207 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !10178, file: !1927, line: 284, baseType: !1958, size: 64, offset: 1088)
!10208 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !10178, file: !1927, line: 293, baseType: !1961, size: 64, offset: 1152)
!10209 = !DIDerivedType(tag: DW_TAG_member, name: "__pad1", scope: !10178, file: !1927, line: 301, baseType: !39, size: 64, offset: 1216)
!10210 = !DIDerivedType(tag: DW_TAG_member, name: "__pad2", scope: !10178, file: !1927, line: 302, baseType: !39, size: 64, offset: 1280)
!10211 = !DIDerivedType(tag: DW_TAG_member, name: "__pad3", scope: !10178, file: !1927, line: 303, baseType: !39, size: 64, offset: 1344)
!10212 = !DIDerivedType(tag: DW_TAG_member, name: "__pad4", scope: !10178, file: !1927, line: 304, baseType: !39, size: 64, offset: 1408)
!10213 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !10178, file: !1927, line: 306, baseType: !143, size: 64, offset: 1472)
!10214 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !10178, file: !1927, line: 307, baseType: !46, size: 32, offset: 1536)
!10215 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !10178, file: !1927, line: 309, baseType: !1969, size: 160, offset: 1568)
!10216 = !DILocalVariable(name: "stream", arg: 1, scope: !10173, file: !485, line: 56, type: !10176)
!10217 = !DILocation(line: 56, column: 21, scope: !10173)
!10218 = !DILocalVariable(name: "some_pending", scope: !10173, file: !485, line: 58, type: !131)
!10219 = !DILocation(line: 58, column: 8, scope: !10173)
!10220 = !DILocation(line: 58, column: 36, scope: !10173)
!10221 = !DILocation(line: 58, column: 24, scope: !10173)
!10222 = !DILocation(line: 58, column: 44, scope: !10173)
!10223 = !DILocalVariable(name: "prev_fail", scope: !10173, file: !485, line: 59, type: !131)
!10224 = !DILocation(line: 59, column: 8, scope: !10173)
!10225 = !DILocation(line: 59, column: 21, scope: !10173)
!10226 = !DILocation(line: 59, column: 37, scope: !10173)
!10227 = !DILocalVariable(name: "fclose_fail", scope: !10173, file: !485, line: 60, type: !131)
!10228 = !DILocation(line: 60, column: 8, scope: !10173)
!10229 = !DILocation(line: 60, column: 31, scope: !10173)
!10230 = !DILocation(line: 60, column: 23, scope: !10173)
!10231 = !DILocation(line: 60, column: 39, scope: !10173)
!10232 = !DILocation(line: 70, column: 7, scope: !10233)
!10233 = distinct !DILexicalBlock(scope: !10173, file: !485, line: 70, column: 7)
!10234 = !DILocation(line: 70, column: 17, scope: !10233)
!10235 = !DILocation(line: 70, column: 21, scope: !10233)
!10236 = !DILocation(line: 70, column: 33, scope: !10233)
!10237 = !DILocation(line: 70, column: 37, scope: !10233)
!10238 = !DILocation(line: 70, column: 50, scope: !10233)
!10239 = !DILocation(line: 70, column: 53, scope: !10233)
!10240 = !DILocation(line: 70, column: 59, scope: !10233)
!10241 = !DILocation(line: 70, column: 7, scope: !10173)
!10242 = !DILocation(line: 72, column: 13, scope: !10243)
!10243 = distinct !DILexicalBlock(scope: !10244, file: !485, line: 72, column: 11)
!10244 = distinct !DILexicalBlock(scope: !10233, file: !485, line: 71, column: 5)
!10245 = !DILocation(line: 72, column: 11, scope: !10244)
!10246 = !DILocation(line: 73, column: 9, scope: !10243)
!10247 = !DILocation(line: 73, column: 15, scope: !10243)
!10248 = !DILocation(line: 74, column: 7, scope: !10244)
!10249 = !DILocation(line: 77, column: 3, scope: !10173)
!10250 = !DILocation(line: 78, column: 1, scope: !10173)
!10251 = distinct !DISubprogram(name: "cycle_check_init", scope: !487, file: !487, line: 43, type: !10252, isLocal: false, isDefinition: true, scopeLine: 44, flags: DIFlagPrototyped, isOptimized: false, unit: !486, variables: !48)
!10252 = !DISubroutineType(types: !10253)
!10253 = !{null, !10254}
!10254 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10255, size: 64)
!10255 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cycle_check_state", file: !395, line: 28, size: 256, elements: !10256)
!10256 = !{!10257, !10262, !10263}
!10257 = !DIDerivedType(tag: DW_TAG_member, name: "dev_ino", scope: !10255, file: !395, line: 30, baseType: !10258, size: 128)
!10258 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_ino", file: !399, line: 7, size: 128, elements: !10259)
!10259 = !{!10260, !10261}
!10260 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !10258, file: !399, line: 9, baseType: !402, size: 64)
!10261 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !10258, file: !399, line: 10, baseType: !371, size: 64, offset: 64)
!10262 = !DIDerivedType(tag: DW_TAG_member, name: "chdir_counter", scope: !10255, file: !395, line: 31, baseType: !405, size: 64, offset: 128)
!10263 = !DIDerivedType(tag: DW_TAG_member, name: "magic", scope: !10255, file: !395, line: 32, baseType: !46, size: 32, offset: 192)
!10264 = !DILocalVariable(name: "state", arg: 1, scope: !10251, file: !487, line: 43, type: !10254)
!10265 = !DILocation(line: 43, column: 45, scope: !10251)
!10266 = !DILocation(line: 45, column: 3, scope: !10251)
!10267 = !DILocation(line: 45, column: 10, scope: !10251)
!10268 = !DILocation(line: 45, column: 24, scope: !10251)
!10269 = !DILocation(line: 46, column: 3, scope: !10251)
!10270 = !DILocation(line: 46, column: 10, scope: !10251)
!10271 = !DILocation(line: 46, column: 16, scope: !10251)
!10272 = !DILocation(line: 47, column: 1, scope: !10251)
!10273 = distinct !DISubprogram(name: "cycle_check", scope: !487, file: !487, line: 58, type: !10274, isLocal: false, isDefinition: true, scopeLine: 59, flags: DIFlagPrototyped, isOptimized: false, unit: !486, variables: !48)
!10274 = !DISubroutineType(types: !10275)
!10275 = !{!131, !10254, !10276}
!10276 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10277, size: 64)
!10277 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10278)
!10278 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !328, line: 46, size: 1152, elements: !10279)
!10279 = !{!10280, !10281, !10282, !10283, !10284, !10285, !10286, !10287, !10288, !10289, !10290, !10291, !10296, !10297, !10298}
!10280 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !10278, file: !328, line: 48, baseType: !331, size: 64)
!10281 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !10278, file: !328, line: 53, baseType: !333, size: 64, offset: 64)
!10282 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !10278, file: !328, line: 61, baseType: !320, size: 64, offset: 128)
!10283 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !10278, file: !328, line: 62, baseType: !336, size: 32, offset: 192)
!10284 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !10278, file: !328, line: 64, baseType: !338, size: 32, offset: 224)
!10285 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !10278, file: !328, line: 65, baseType: !340, size: 32, offset: 256)
!10286 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !10278, file: !328, line: 67, baseType: !46, size: 32, offset: 288)
!10287 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !10278, file: !328, line: 69, baseType: !331, size: 64, offset: 320)
!10288 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !10278, file: !328, line: 74, baseType: !344, size: 64, offset: 384)
!10289 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !10278, file: !328, line: 78, baseType: !346, size: 64, offset: 448)
!10290 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !10278, file: !328, line: 80, baseType: !348, size: 64, offset: 512)
!10291 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !10278, file: !328, line: 91, baseType: !10292, size: 128, offset: 576)
!10292 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !351, line: 8, size: 128, elements: !10293)
!10293 = !{!10294, !10295}
!10294 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !10292, file: !351, line: 10, baseType: !354, size: 64)
!10295 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !10292, file: !351, line: 11, baseType: !356, size: 64, offset: 64)
!10296 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !10278, file: !328, line: 92, baseType: !10292, size: 128, offset: 704)
!10297 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !10278, file: !328, line: 93, baseType: !10292, size: 128, offset: 832)
!10298 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !10278, file: !328, line: 106, baseType: !360, size: 192, offset: 960)
!10299 = !DILocalVariable(name: "state", arg: 1, scope: !10273, file: !487, line: 58, type: !10254)
!10300 = !DILocation(line: 58, column: 40, scope: !10273)
!10301 = !DILocalVariable(name: "sb", arg: 2, scope: !10273, file: !487, line: 58, type: !10276)
!10302 = !DILocation(line: 58, column: 66, scope: !10273)
!10303 = !DILocation(line: 60, column: 3, scope: !10304)
!10304 = distinct !DILexicalBlock(scope: !10305, file: !487, line: 60, column: 3)
!10305 = distinct !DILexicalBlock(scope: !10273, file: !487, line: 60, column: 3)
!10306 = !DILocation(line: 60, column: 3, scope: !10305)
!10307 = !DILocation(line: 65, column: 7, scope: !10308)
!10308 = distinct !DILexicalBlock(scope: !10273, file: !487, line: 65, column: 7)
!10309 = !DILocation(line: 65, column: 14, scope: !10308)
!10310 = !DILocation(line: 65, column: 28, scope: !10308)
!10311 = !DILocation(line: 65, column: 31, scope: !10308)
!10312 = !DILocation(line: 65, column: 7, scope: !10273)
!10313 = !DILocation(line: 66, column: 5, scope: !10308)
!10314 = !DILocation(line: 70, column: 35, scope: !10315)
!10315 = distinct !DILexicalBlock(scope: !10273, file: !487, line: 70, column: 7)
!10316 = !DILocation(line: 70, column: 42, scope: !10315)
!10317 = !DILocation(line: 70, column: 32, scope: !10315)
!10318 = !DILocation(line: 70, column: 7, scope: !10315)
!10319 = !DILocation(line: 70, column: 7, scope: !10273)
!10320 = !DILocation(line: 77, column: 11, scope: !10321)
!10321 = distinct !DILexicalBlock(scope: !10322, file: !487, line: 77, column: 11)
!10322 = distinct !DILexicalBlock(scope: !10315, file: !487, line: 71, column: 5)
!10323 = !DILocation(line: 77, column: 18, scope: !10321)
!10324 = !DILocation(line: 77, column: 32, scope: !10321)
!10325 = !DILocation(line: 77, column: 11, scope: !10322)
!10326 = !DILocation(line: 78, column: 9, scope: !10321)
!10327 = !DILocation(line: 80, column: 31, scope: !10322)
!10328 = !DILocation(line: 80, column: 35, scope: !10322)
!10329 = !DILocation(line: 80, column: 7, scope: !10322)
!10330 = !DILocation(line: 80, column: 14, scope: !10322)
!10331 = !DILocation(line: 80, column: 22, scope: !10322)
!10332 = !DILocation(line: 80, column: 29, scope: !10322)
!10333 = !DILocation(line: 81, column: 31, scope: !10322)
!10334 = !DILocation(line: 81, column: 35, scope: !10322)
!10335 = !DILocation(line: 81, column: 7, scope: !10322)
!10336 = !DILocation(line: 81, column: 14, scope: !10322)
!10337 = !DILocation(line: 81, column: 22, scope: !10322)
!10338 = !DILocation(line: 81, column: 29, scope: !10322)
!10339 = !DILocation(line: 82, column: 5, scope: !10322)
!10340 = !DILocation(line: 84, column: 3, scope: !10273)
!10341 = !DILocation(line: 85, column: 1, scope: !10273)
!10342 = distinct !DISubprogram(name: "is_zero_or_power_of_two", scope: !487, file: !487, line: 37, type: !10343, isLocal: true, isDefinition: true, scopeLine: 38, flags: DIFlagPrototyped, isOptimized: false, unit: !486, variables: !48)
!10343 = !DISubroutineType(types: !10344)
!10344 = !{!131, !405}
!10345 = !DILocalVariable(name: "i", arg: 1, scope: !10342, file: !487, line: 37, type: !405)
!10346 = !DILocation(line: 37, column: 36, scope: !10342)
!10347 = !DILocation(line: 39, column: 11, scope: !10342)
!10348 = !DILocation(line: 39, column: 16, scope: !10342)
!10349 = !DILocation(line: 39, column: 18, scope: !10342)
!10350 = !DILocation(line: 39, column: 13, scope: !10342)
!10351 = !DILocation(line: 39, column: 24, scope: !10342)
!10352 = !DILocation(line: 39, column: 3, scope: !10342)
!10353 = distinct !DISubprogram(name: "dup_safer", scope: !489, file: !489, line: 31, type: !10166, isLocal: false, isDefinition: true, scopeLine: 32, flags: DIFlagPrototyped, isOptimized: false, unit: !488, variables: !48)
!10354 = !DILocalVariable(name: "fd", arg: 1, scope: !10353, file: !489, line: 31, type: !46)
!10355 = !DILocation(line: 31, column: 16, scope: !10353)
!10356 = !DILocation(line: 33, column: 17, scope: !10353)
!10357 = !DILocation(line: 33, column: 10, scope: !10353)
!10358 = !DILocation(line: 33, column: 3, scope: !10353)
!10359 = !DILocalVariable(name: "fd", arg: 1, scope: !233, file: !234, line: 166, type: !46)
!10360 = !DILocation(line: 166, column: 16, scope: !233)
!10361 = !DILocalVariable(name: "action", arg: 2, scope: !233, file: !234, line: 166, type: !46)
!10362 = !DILocation(line: 166, column: 24, scope: !233)
!10363 = !DILocalVariable(name: "arg", scope: !233, file: !234, line: 168, type: !10364)
!10364 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !2190, line: 30, baseType: !10365)
!10365 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !234, line: 168, baseType: !10366)
!10366 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10367, size: 192, elements: !363)
!10367 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", file: !234, line: 168, size: 192, elements: !10368)
!10368 = !{!10369, !10370, !10371, !10372}
!10369 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !10367, file: !234, line: 168, baseType: !199, size: 32)
!10370 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !10367, file: !234, line: 168, baseType: !199, size: 32, offset: 32)
!10371 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !10367, file: !234, line: 168, baseType: !39, size: 64, offset: 64)
!10372 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !10367, file: !234, line: 168, baseType: !39, size: 64, offset: 128)
!10373 = !DILocation(line: 168, column: 11, scope: !233)
!10374 = !DILocalVariable(name: "result", scope: !233, file: !234, line: 169, type: !46)
!10375 = !DILocation(line: 169, column: 7, scope: !233)
!10376 = !DILocation(line: 170, column: 3, scope: !233)
!10377 = !DILocation(line: 171, column: 11, scope: !233)
!10378 = !DILocation(line: 171, column: 3, scope: !233)
!10379 = !DILocalVariable(name: "target", scope: !10380, file: !234, line: 202, type: !46)
!10380 = distinct !DILexicalBlock(scope: !10381, file: !234, line: 201, column: 7)
!10381 = distinct !DILexicalBlock(scope: !233, file: !234, line: 172, column: 5)
!10382 = !DILocation(line: 202, column: 13, scope: !10380)
!10383 = !DILocation(line: 202, column: 22, scope: !10380)
!10384 = !DILocation(line: 216, column: 18, scope: !10385)
!10385 = distinct !DILexicalBlock(scope: !10380, file: !234, line: 216, column: 13)
!10386 = !DILocation(line: 216, column: 15, scope: !10385)
!10387 = !DILocation(line: 216, column: 13, scope: !10380)
!10388 = !DILocation(line: 218, column: 29, scope: !10389)
!10389 = distinct !DILexicalBlock(scope: !10385, file: !234, line: 217, column: 11)
!10390 = !DILocation(line: 218, column: 33, scope: !10389)
!10391 = !DILocation(line: 218, column: 41, scope: !10389)
!10392 = !DILocation(line: 218, column: 22, scope: !10389)
!10393 = !DILocation(line: 218, column: 20, scope: !10389)
!10394 = !DILocation(line: 219, column: 22, scope: !10395)
!10395 = distinct !DILexicalBlock(scope: !10389, file: !234, line: 219, column: 17)
!10396 = !DILocation(line: 219, column: 19, scope: !10395)
!10397 = !DILocation(line: 219, column: 29, scope: !10395)
!10398 = !DILocation(line: 219, column: 32, scope: !10395)
!10399 = !DILocation(line: 219, column: 38, scope: !10395)
!10400 = !DILocation(line: 219, column: 17, scope: !10389)
!10401 = !DILocation(line: 221, column: 36, scope: !10402)
!10402 = distinct !DILexicalBlock(scope: !10395, file: !234, line: 220, column: 15)
!10403 = !DILocation(line: 226, column: 15, scope: !10402)
!10404 = !DILocation(line: 229, column: 37, scope: !10405)
!10405 = distinct !DILexicalBlock(scope: !10395, file: !234, line: 228, column: 15)
!10406 = !DILocation(line: 229, column: 50, scope: !10405)
!10407 = !DILocation(line: 229, column: 26, scope: !10405)
!10408 = !DILocation(line: 229, column: 24, scope: !10405)
!10409 = !DILocation(line: 230, column: 21, scope: !10410)
!10410 = distinct !DILexicalBlock(scope: !10405, file: !234, line: 230, column: 21)
!10411 = !DILocation(line: 230, column: 28, scope: !10410)
!10412 = !DILocation(line: 230, column: 21, scope: !10405)
!10413 = !DILocation(line: 231, column: 19, scope: !10410)
!10414 = !DILocation(line: 232, column: 36, scope: !10405)
!10415 = !DILocation(line: 234, column: 11, scope: !10389)
!10416 = !DILocation(line: 236, column: 31, scope: !10385)
!10417 = !DILocation(line: 236, column: 44, scope: !10385)
!10418 = !DILocation(line: 236, column: 20, scope: !10385)
!10419 = !DILocation(line: 236, column: 18, scope: !10385)
!10420 = !DILocation(line: 237, column: 18, scope: !10421)
!10421 = distinct !DILexicalBlock(scope: !10380, file: !234, line: 237, column: 13)
!10422 = !DILocation(line: 237, column: 15, scope: !10421)
!10423 = !DILocation(line: 237, column: 25, scope: !10421)
!10424 = !DILocation(line: 237, column: 28, scope: !10421)
!10425 = !DILocation(line: 237, column: 47, scope: !10421)
!10426 = !DILocation(line: 237, column: 13, scope: !10380)
!10427 = !DILocalVariable(name: "flags", scope: !10428, file: !234, line: 239, type: !46)
!10428 = distinct !DILexicalBlock(scope: !10421, file: !234, line: 238, column: 11)
!10429 = !DILocation(line: 239, column: 17, scope: !10428)
!10430 = !DILocation(line: 239, column: 32, scope: !10428)
!10431 = !DILocation(line: 239, column: 25, scope: !10428)
!10432 = !DILocation(line: 240, column: 17, scope: !10433)
!10433 = distinct !DILexicalBlock(scope: !10428, file: !234, line: 240, column: 17)
!10434 = !DILocation(line: 240, column: 23, scope: !10433)
!10435 = !DILocation(line: 240, column: 27, scope: !10433)
!10436 = !DILocation(line: 240, column: 37, scope: !10433)
!10437 = !DILocation(line: 240, column: 54, scope: !10433)
!10438 = !DILocation(line: 240, column: 60, scope: !10433)
!10439 = !DILocation(line: 240, column: 30, scope: !10433)
!10440 = !DILocation(line: 240, column: 74, scope: !10433)
!10441 = !DILocation(line: 240, column: 17, scope: !10428)
!10442 = !DILocalVariable(name: "saved_errno", scope: !10443, file: !234, line: 242, type: !46)
!10443 = distinct !DILexicalBlock(scope: !10433, file: !234, line: 241, column: 15)
!10444 = !DILocation(line: 242, column: 21, scope: !10443)
!10445 = !DILocation(line: 242, column: 35, scope: !10443)
!10446 = !DILocation(line: 243, column: 24, scope: !10443)
!10447 = !DILocation(line: 243, column: 17, scope: !10443)
!10448 = !DILocation(line: 244, column: 25, scope: !10443)
!10449 = !DILocation(line: 244, column: 17, scope: !10443)
!10450 = !DILocation(line: 244, column: 23, scope: !10443)
!10451 = !DILocation(line: 245, column: 24, scope: !10443)
!10452 = !DILocation(line: 246, column: 15, scope: !10443)
!10453 = !DILocation(line: 247, column: 11, scope: !10428)
!10454 = !DILocation(line: 248, column: 9, scope: !10380)
!10455 = !DILocalVariable(name: "p", scope: !10456, file: !234, line: 284, type: !39)
!10456 = distinct !DILexicalBlock(scope: !10381, file: !234, line: 282, column: 7)
!10457 = !DILocation(line: 284, column: 15, scope: !10456)
!10458 = !DILocation(line: 284, column: 19, scope: !10456)
!10459 = !DILocation(line: 285, column: 25, scope: !10456)
!10460 = !DILocation(line: 285, column: 29, scope: !10456)
!10461 = !DILocation(line: 285, column: 37, scope: !10456)
!10462 = !DILocation(line: 285, column: 18, scope: !10456)
!10463 = !DILocation(line: 285, column: 16, scope: !10456)
!10464 = !DILocation(line: 289, column: 9, scope: !10456)
!10465 = !DILocation(line: 292, column: 3, scope: !233)
!10466 = !DILocation(line: 293, column: 10, scope: !233)
!10467 = !DILocation(line: 293, column: 3, scope: !233)
!10468 = distinct !DISubprogram(name: "fd_safer", scope: !491, file: !491, line: 37, type: !10166, isLocal: false, isDefinition: true, scopeLine: 38, flags: DIFlagPrototyped, isOptimized: false, unit: !490, variables: !48)
!10469 = !DILocalVariable(name: "fd", arg: 1, scope: !10468, file: !491, line: 37, type: !46)
!10470 = !DILocation(line: 37, column: 15, scope: !10468)
!10471 = !DILocation(line: 39, column: 23, scope: !10472)
!10472 = distinct !DILexicalBlock(scope: !10468, file: !491, line: 39, column: 7)
!10473 = !DILocation(line: 39, column: 20, scope: !10472)
!10474 = !DILocation(line: 39, column: 26, scope: !10472)
!10475 = !DILocation(line: 39, column: 29, scope: !10472)
!10476 = !DILocation(line: 39, column: 32, scope: !10472)
!10477 = !DILocation(line: 39, column: 7, scope: !10468)
!10478 = !DILocalVariable(name: "f", scope: !10479, file: !491, line: 41, type: !46)
!10479 = distinct !DILexicalBlock(scope: !10472, file: !491, line: 40, column: 5)
!10480 = !DILocation(line: 41, column: 11, scope: !10479)
!10481 = !DILocation(line: 41, column: 26, scope: !10479)
!10482 = !DILocation(line: 41, column: 15, scope: !10479)
!10483 = !DILocalVariable(name: "e", scope: !10479, file: !491, line: 42, type: !46)
!10484 = !DILocation(line: 42, column: 11, scope: !10479)
!10485 = !DILocation(line: 42, column: 15, scope: !10479)
!10486 = !DILocation(line: 43, column: 14, scope: !10479)
!10487 = !DILocation(line: 43, column: 7, scope: !10479)
!10488 = !DILocation(line: 44, column: 15, scope: !10479)
!10489 = !DILocation(line: 44, column: 7, scope: !10479)
!10490 = !DILocation(line: 44, column: 13, scope: !10479)
!10491 = !DILocation(line: 45, column: 12, scope: !10479)
!10492 = !DILocation(line: 45, column: 10, scope: !10479)
!10493 = !DILocation(line: 46, column: 5, scope: !10479)
!10494 = !DILocation(line: 48, column: 10, scope: !10468)
!10495 = !DILocation(line: 48, column: 3, scope: !10468)
