; ModuleID = 'chown.bc_orig.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, i8*, i8*, i8*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type { %struct._IO_marker*, %struct._IO_FILE*, i32 }
%struct.option = type { i8*, i32, i32*, i32 }
%struct.dev_ino = type { i64, i64 }
%struct.hash_tuning = type { float, float, float, float, i8 }
%struct.quoting_options = type { i32, i32, [8 x i32], i8*, i8* }
%struct.slotvec = type { i64, i8* }
%struct.Chown_option = type { i32, i8, %struct.dev_ino*, i8, i8, i8*, i8* }
%struct.stat = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, %struct.dev_ino, %struct.dev_ino, %struct.dev_ino, [3 x i64] }
%struct.group = type { i8*, i8*, i32, i8** }
%struct.passwd = type { i8*, i8*, i32, i32, i8*, i8*, i8* }
%struct.FTS = type { %struct._ftsent*, %struct._ftsent*, %struct._ftsent**, i64, i8*, i32, i32, i64, i64, i32 (%struct._ftsent**, %struct._ftsent**)*, i32, %struct.hash_table*, %union.anon, %struct.I_ring }
%struct._ftsent = type { %struct._ftsent*, %struct._ftsent*, %struct._ftsent*, i64, i8*, i8*, i8*, i32, i32, i64, %struct.FTS*, i64, i64, i64, i16, i16, i16, [1 x %struct.stat], [1 x i8] }
%struct.hash_table = type { %struct.hash_entry*, %struct.hash_entry*, i64, i64, i64, %struct.hash_tuning*, i64 (i8*, i64)*, i1 (i8*, i8*)*, void (i8*)*, %struct.hash_entry* }
%struct.hash_entry = type { i8*, %struct.hash_entry* }
%union.anon = type { %struct.hash_table* }
%struct.I_ring = type { [4 x i32], i32, i32, i32, i8 }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }
%struct.cycle_check_state = type { %struct.dev_ino, i64, i32 }
%struct.Active_dir = type { i64, i64, %struct._ftsent* }
%struct.dirent = type { i64, i64, i16, i8, [256 x i8] }
%struct.__dirstream = type opaque
%struct.LCO_ent = type { i64, i8 }
%struct.statfs = type { i64, i64, i64, i64, i64, i64, i64, %struct.__fsid_t, i64, i64, i64, [4 x i64] }
%struct.__fsid_t = type { [2 x i32] }
%struct.__mbstate_t = type { i32, %union.anon.24 }
%union.anon.24 = type { i32 }

@stderr = external global %struct._IO_FILE*, align 8
@.str = private unnamed_addr constant [39 x i8] c"Try `%s --help' for more information.\0A\00", align 1
@.str.1 = private unnamed_addr constant [97 x i8] c"Usage: %s [OPTION]... [OWNER][:[GROUP]] FILE...\0A  or:  %s [OPTION]... --reference=RFILE FILE...\0A\00", align 1
@stdout = external global %struct._IO_FILE*, align 8
@.str.2 = private unnamed_addr constant [373 x i8] c"Change the owner and/or group of each FILE to OWNER and/or GROUP.\0AWith --reference, change the owner and group of each FILE to those of RFILE.\0A\0A  -c, --changes          like verbose but report only when a change is made\0A      --dereference      affect the referent of each symbolic link (this is\0A                         the default), rather than the symbolic link itself\0A\00", align 1
@.str.3 = private unnamed_addr constant [201 x i8] c"  -h, --no-dereference   affect each symbolic link instead of any referenced\0A                         file (useful only on systems that can change the\0A                         ownership of a symlink)\0A\00", align 1
@.str.4 = private unnamed_addr constant [341 x i8] c"      --from=CURRENT_OWNER:CURRENT_GROUP\0A                         change the owner and/or group of each file only if\0A                         its current owner and/or group match those specified\0A                         here.  Either may be omitted, in which case a match\0A                         is not required for the omitted attribute.\0A\00", align 1
@.str.5 = private unnamed_addr constant [128 x i8] c"      --no-preserve-root  do not treat `/' specially (the default)\0A      --preserve-root    fail to operate recursively on `/'\0A\00", align 1
@.str.6 = private unnamed_addr constant [316 x i8] c"  -f, --silent, --quiet  suppress most error messages\0A      --reference=RFILE  use RFILE's owner and group rather than\0A                         specifying OWNER:GROUP values\0A  -R, --recursive        operate on files and directories recursively\0A  -v, --verbose          output a diagnostic for every file processed\0A\0A\00", align 1
@.str.7 = private unnamed_addr constant [464 x i8] c"The following options modify how a hierarchy is traversed when the -R\0Aoption is also specified.  If more than one is specified, only the final\0Aone takes effect.\0A\0A  -H                     if a command line argument is a symbolic link\0A                         to a directory, traverse it\0A  -L                     traverse every symbolic link to a directory\0A                         encountered\0A  -P                     do not traverse any symbolic links (default)\0A\0A\00", align 1
@.str.8 = private unnamed_addr constant [45 x i8] c"      --help     display this help and exit\0A\00", align 1
@.str.9 = private unnamed_addr constant [54 x i8] c"      --version  output version information and exit\0A\00", align 1
@.str.10 = private unnamed_addr constant [192 x i8] c"\0AOwner is unchanged if missing.  Group is unchanged if missing, but changed\0Ato login group if implied by a `:' following a symbolic OWNER.\0AOWNER and GROUP may be numeric as well as symbolic.\0A\00", align 1
@.str.11 = private unnamed_addr constant [201 x i8] c"\0AExamples:\0A  %s root /u        Change the owner of /u to \22root\22.\0A  %s root:staff /u  Likewise, but also change its group to \22staff\22.\0A  %s -hR root /u    Change the owner of /u and subfiles to \22root\22.\0A\00", align 1
@.str.24 = private unnamed_addr constant [23 x i8] c"\0AReport %s bugs to %s\0A\00", align 1
@.str.25 = private unnamed_addr constant [22 x i8] c"bug-coreutils@gnu.org\00", align 1
@.str.26 = private unnamed_addr constant [49 x i8] c"%s home page: <http://www.gnu.org/software/%s/>\0A\00", align 1
@.str.16 = private unnamed_addr constant [14 x i8] c"GNU coreutils\00", align 1
@.str.27 = private unnamed_addr constant [10 x i8] c"coreutils\00", align 1
@.str.28 = private unnamed_addr constant [64 x i8] c"General help using GNU software: <http://www.gnu.org/gethelp/>\0A\00", align 1
@.str.29 = private unnamed_addr constant [4 x i8] c"en_\00", align 1
@.str.30 = private unnamed_addr constant [69 x i8] c"Report %s translation bugs to <http://translationproject.org/team/>\0A\00", align 1
@.str.31 = private unnamed_addr constant [65 x i8] c"For complete documentation, run: info coreutils '%s invocation'\0A\00", align 1
@.str.12 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.13 = private unnamed_addr constant [9 x i8] c"HLPRcfhv\00", align 1
@long_options = internal constant [14 x %struct.option] [%struct.option { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.32, i32 0, i32 0), i32 0, i32* null, i32 82 }, %struct.option { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.33, i32 0, i32 0), i32 0, i32* null, i32 99 }, %struct.option { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.34, i32 0, i32 0), i32 0, i32* null, i32 128 }, %struct.option { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.35, i32 0, i32 0), i32 1, i32* null, i32 129 }, %struct.option { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.36, i32 0, i32 0), i32 0, i32* null, i32 104 }, %struct.option { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.37, i32 0, i32 0), i32 0, i32* null, i32 130 }, %struct.option { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.38, i32 0, i32 0), i32 0, i32* null, i32 131 }, %struct.option { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.39, i32 0, i32 0), i32 0, i32* null, i32 102 }, %struct.option { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.40, i32 0, i32 0), i32 0, i32* null, i32 102 }, %struct.option { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.41, i32 0, i32 0), i32 1, i32* null, i32 132 }, %struct.option { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.42, i32 0, i32 0), i32 0, i32* null, i32 118 }, %struct.option { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.43, i32 0, i32 0), i32 0, i32* null, i32 -130 }, %struct.option { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.44, i32 0, i32 0), i32 0, i32* null, i32 -131 }, %struct.option zeroinitializer], align 16, !dbg !0
@optarg = external global i8*, align 8
@reference_file = internal global i8* null, align 8, !dbg !38
@.str.14 = private unnamed_addr constant [7 x i8] c"%s: %s\00", align 1
@.str.15 = private unnamed_addr constant [6 x i8] c"chown\00", align 1
@.str.17 = private unnamed_addr constant [16 x i8] c"David MacKenzie\00", align 1
@.str.18 = private unnamed_addr constant [13 x i8] c"Jim Meyering\00", align 1
@.str.19 = private unnamed_addr constant [42 x i8] c"-R --dereference requires either -H or -L\00", align 1
@optind = external global i32, align 4
@.str.20 = private unnamed_addr constant [16 x i8] c"missing operand\00", align 1
@.str.21 = private unnamed_addr constant [25 x i8] c"missing operand after %s\00", align 1
@.str.22 = private unnamed_addr constant [31 x i8] c"failed to get attributes of %s\00", align 1
@main.dev_ino_buf = internal global %struct.dev_ino zeroinitializer, align 8, !dbg !18
@.str.23 = private unnamed_addr constant [2 x i8] c"/\00", align 1
@.str.32 = private unnamed_addr constant [10 x i8] c"recursive\00", align 1
@.str.33 = private unnamed_addr constant [8 x i8] c"changes\00", align 1
@.str.34 = private unnamed_addr constant [12 x i8] c"dereference\00", align 1
@.str.35 = private unnamed_addr constant [5 x i8] c"from\00", align 1
@.str.36 = private unnamed_addr constant [15 x i8] c"no-dereference\00", align 1
@.str.37 = private unnamed_addr constant [17 x i8] c"no-preserve-root\00", align 1
@.str.38 = private unnamed_addr constant [14 x i8] c"preserve-root\00", align 1
@.str.39 = private unnamed_addr constant [6 x i8] c"quiet\00", align 1
@.str.40 = private unnamed_addr constant [7 x i8] c"silent\00", align 1
@.str.41 = private unnamed_addr constant [10 x i8] c"reference\00", align 1
@.str.42 = private unnamed_addr constant [8 x i8] c"verbose\00", align 1
@.str.43 = private unnamed_addr constant [5 x i8] c"help\00", align 1
@.str.44 = private unnamed_addr constant [8 x i8] c"version\00", align 1
@.str.45 = private unnamed_addr constant [16 x i8] c"fts_read failed\00", align 1
@.str.1.46 = private unnamed_addr constant [17 x i8] c"fts_close failed\00", align 1
@.str.2.47 = private unnamed_addr constant [2 x i8] c"/\00", align 1
@.str.3.48 = private unnamed_addr constant [45 x i8] c"it is dangerous to operate recursively on %s\00", align 1
@.str.4.49 = private unnamed_addr constant [58 x i8] c"it is dangerous to operate recursively on %s (same as %s)\00", align 1
@.str.5.50 = private unnamed_addr constant [49 x i8] c"use --no-preserve-root to override this failsafe\00", align 1
@.str.6.51 = private unnamed_addr constant [17 x i8] c"cannot access %s\00", align 1
@.str.7.52 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str.8.53 = private unnamed_addr constant [25 x i8] c"cannot read directory %s\00", align 1
@.str.9.54 = private unnamed_addr constant [186 x i8] c"WARNING: Circular directory structure.\0AThis almost certainly means that you have a corrupted file system.\0ANOTIFY YOUR SYSTEM MANAGER.\0AThe following directory is part of the cycle:\0A  %s\0A\00", align 1
@.str.10.55 = private unnamed_addr constant [22 x i8] c"cannot dereference %s\00", align 1
@.str.11.56 = private unnamed_addr constant [25 x i8] c"changing ownership of %s\00", align 1
@.str.12.57 = private unnamed_addr constant [21 x i8] c"changing group of %s\00", align 1
@.str.13.58 = private unnamed_addr constant [56 x i8] c"neither symbolic link %s nor referent has been changed\0A\00", align 1
@.str.14.59 = private unnamed_addr constant [2 x i8] c":\00", align 1
@.str.16.60 = private unnamed_addr constant [27 x i8] c"changed group of %s to %s\0A\00", align 1
@.str.17.61 = private unnamed_addr constant [30 x i8] c"no change to ownership of %s\0A\00", align 1
@.str.15.62 = private unnamed_addr constant [31 x i8] c"changed ownership of %s to %s\0A\00", align 1
@.str.19.63 = private unnamed_addr constant [36 x i8] c"failed to change group of %s to %s\0A\00", align 1
@.str.20.64 = private unnamed_addr constant [34 x i8] c"failed to change ownership of %s\0A\00", align 1
@.str.18.65 = private unnamed_addr constant [40 x i8] c"failed to change ownership of %s to %s\0A\00", align 1
@.str.22.66 = private unnamed_addr constant [28 x i8] c"group of %s retained as %s\0A\00", align 1
@.str.23.67 = private unnamed_addr constant [26 x i8] c"ownership of %s retained\0A\00", align 1
@.str.21.68 = private unnamed_addr constant [32 x i8] c"ownership of %s retained as %s\0A\00", align 1
@Version = global i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.71, i32 0, i32 0), align 8, !dbg !52
@.str.71 = private unnamed_addr constant [10 x i8] c"8.2-dirty\00", align 1
@program_name = global i8* null, align 8, !dbg !57
@.str.76 = private unnamed_addr constant [56 x i8] c"A NULL argv[0] was passed through an exec system call.\0A\00", align 1
@.str.1.77 = private unnamed_addr constant [8 x i8] c"/.libs/\00", align 1
@.str.2.78 = private unnamed_addr constant [4 x i8] c"lt-\00", align 1
@program_invocation_short_name = external global i8*, align 8
@program_invocation_name = external global i8*, align 8
@.str.79 = private unnamed_addr constant [12 x i8] c"%s (%s) %s\0A\00", align 1
@.str.1.80 = private unnamed_addr constant [7 x i8] c"%s %s\0A\00", align 1
@.str.2.81 = private unnamed_addr constant [4 x i8] c"(C)\00", align 1
@.str.3.82 = private unnamed_addr constant [203 x i8] c"\0ALicense GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>.\0AThis is free software: you are free to change and redistribute it.\0AThere is NO WARRANTY, to the extent permitted by law.\0A\0A\00", align 1
@.str.4.83 = private unnamed_addr constant [16 x i8] c"Written by %s.\0A\00", align 1
@.str.5.84 = private unnamed_addr constant [23 x i8] c"Written by %s and %s.\0A\00", align 1
@.str.6.85 = private unnamed_addr constant [28 x i8] c"Written by %s, %s, and %s.\0A\00", align 1
@.str.7.86 = private unnamed_addr constant [32 x i8] c"Written by %s, %s, %s,\0Aand %s.\0A\00", align 1
@.str.8.87 = private unnamed_addr constant [36 x i8] c"Written by %s, %s, %s,\0A%s, and %s.\0A\00", align 1
@.str.9.88 = private unnamed_addr constant [40 x i8] c"Written by %s, %s, %s,\0A%s, %s, and %s.\0A\00", align 1
@.str.10.89 = private unnamed_addr constant [44 x i8] c"Written by %s, %s, %s,\0A%s, %s, %s, and %s.\0A\00", align 1
@.str.11.90 = private unnamed_addr constant [48 x i8] c"Written by %s, %s, %s,\0A%s, %s, %s, %s,\0Aand %s.\0A\00", align 1
@.str.12.91 = private unnamed_addr constant [52 x i8] c"Written by %s, %s, %s,\0A%s, %s, %s, %s,\0A%s, and %s.\0A\00", align 1
@.str.13.92 = private unnamed_addr constant [60 x i8] c"Written by %s, %s, %s,\0A%s, %s, %s, %s,\0A%s, %s, and others.\0A\00", align 1
@.str.14.95 = private unnamed_addr constant [21 x i8] c"\0AReport bugs to: %s\0A\00", align 1
@.str.15.96 = private unnamed_addr constant [22 x i8] c"bug-coreutils@gnu.org\00", align 1
@.str.16.97 = private unnamed_addr constant [20 x i8] c"%s home page: <%s>\0A\00", align 1
@.str.17.98 = private unnamed_addr constant [14 x i8] c"GNU coreutils\00", align 1
@.str.18.99 = private unnamed_addr constant [39 x i8] c"http://www.gnu.org/software/coreutils/\00", align 1
@.str.19.100 = private unnamed_addr constant [64 x i8] c"General help using GNU software: <http://www.gnu.org/gethelp/>\0A\00", align 1
@version_etc_copyright = constant [47 x i8] c"Copyright %s %d Free Software Foundation, Inc.\00", align 16, !dbg !63
@file_name = internal global i8* null, align 8, !dbg !71
@ignore_EPIPE = internal global i8 0, align 1, !dbg !77
@.str.107 = private unnamed_addr constant [12 x i8] c"write error\00", align 1
@.str.1.108 = private unnamed_addr constant [7 x i8] c"%s: %s\00", align 1
@.str.2.109 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@exit_failure = global i32 1, align 4, !dbg !80
@.str.112 = private unnamed_addr constant [2 x i8] c".\00", align 1
@.str.1.113 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.2.118 = private unnamed_addr constant [3 x i8] c"..\00", align 1
@.str.121 = private unnamed_addr constant [24 x i8] c"# entries:         %lu\0A\00", align 1
@.str.1.122 = private unnamed_addr constant [24 x i8] c"# buckets:         %lu\0A\00", align 1
@.str.2.123 = private unnamed_addr constant [33 x i8] c"# buckets used:    %lu (%.2f%%)\0A\00", align 1
@.str.3.124 = private unnamed_addr constant [24 x i8] c"max bucket length: %lu\0A\00", align 1
@default_tuning = internal constant %struct.hash_tuning { float 0.000000e+00, float 1.000000e+00, float 0x3FE99999A0000000, float 0x3FF69FBE80000000, i8 0 }, align 4, !dbg !86
@quoting_style_args = constant [9 x i8*] [i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.153, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.154, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.2.155, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3.156, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.4.157, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.5.158, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.6.159, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.7.160, i32 0, i32 0), i8* null], align 16, !dbg !105
@.str.153 = private unnamed_addr constant [8 x i8] c"literal\00", align 1
@.str.1.154 = private unnamed_addr constant [6 x i8] c"shell\00", align 1
@.str.2.155 = private unnamed_addr constant [13 x i8] c"shell-always\00", align 1
@.str.3.156 = private unnamed_addr constant [2 x i8] c"c\00", align 1
@.str.4.157 = private unnamed_addr constant [8 x i8] c"c-maybe\00", align 1
@.str.5.158 = private unnamed_addr constant [7 x i8] c"escape\00", align 1
@.str.6.159 = private unnamed_addr constant [7 x i8] c"locale\00", align 1
@.str.7.160 = private unnamed_addr constant [8 x i8] c"clocale\00", align 1
@quoting_style_vals = constant [8 x i32] [i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7], align 16, !dbg !145
@default_quoting_options = internal global %struct.quoting_options zeroinitializer, align 8, !dbg !151
@.str.8.161 = private unnamed_addr constant [2 x i8] c"\22\00", align 1
@.str.9.162 = private unnamed_addr constant [2 x i8] c"`\00", align 1
@.str.10.163 = private unnamed_addr constant [2 x i8] c"'\00", align 1
@slotvec = internal global %struct.slotvec* @slotvec0, align 8, !dbg !167
@nslots = internal global i32 1, align 4, !dbg !174
@slot0 = internal global [256 x i8] zeroinitializer, align 16, !dbg !162
@slotvec0 = internal global %struct.slotvec { i64 256, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @slot0, i32 0, i32 0) }, align 8, !dbg !176
@.str.170 = private unnamed_addr constant [2 x i8] c"/\00", align 1
@parse_with_separator.E_bad_spec = internal global i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.2.178, i32 0, i32 0), align 8, !dbg !182
@.str.3.175 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@parse_with_separator.E_invalid_user = internal global i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.177, i32 0, i32 0), align 8, !dbg !208
@parse_with_separator.E_invalid_group = internal global i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1.176, i32 0, i32 0), align 8, !dbg !210
@.str.1.176 = private unnamed_addr constant [14 x i8] c"invalid group\00", align 1
@.str.177 = private unnamed_addr constant [13 x i8] c"invalid user\00", align 1
@.str.2.178 = private unnamed_addr constant [13 x i8] c"invalid spec\00", align 1
@.str.191 = private unnamed_addr constant [38 x i8] c"0 <= strtol_base && strtol_base <= 36\00", align 1
@.str.1.192 = private unnamed_addr constant [20 x i8] c"../../lib/xstrtol.c\00", align 1
@__PRETTY_FUNCTION__.xstrtoul = private unnamed_addr constant [81 x i8] c"strtol_error xstrtoul(const char *, char **, int, unsigned long *, const char *)\00", align 1
@.str.195 = private unnamed_addr constant [16 x i8] c"errno != EINVAL\00", align 1
@.str.1.196 = private unnamed_addr constant [17 x i8] c"../../lib/xfts.c\00", align 1
@__PRETTY_FUNCTION__.xfts_open = private unnamed_addr constant [78 x i8] c"FTS *xfts_open(char *const *, int, int (*)(const FTSENT **, const FTSENT **))\00", align 1
@.str.201 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str.1.202 = private unnamed_addr constant [17 x i8] c"memory exhausted\00", align 1
@.str.211 = private unnamed_addr constant [25 x i8] c"state->magic == CC_MAGIC\00", align 1
@.str.1.212 = private unnamed_addr constant [24 x i8] c"../../lib/cycle-check.c\00", align 1
@__PRETTY_FUNCTION__.cycle_check = private unnamed_addr constant [67 x i8] c"_Bool cycle_check(struct cycle_check_state *, const struct stat *)\00", align 1

; Function Attrs: noinline noreturn nounwind uwtable
define void @usage(i32) #0 !dbg !467 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !470, metadata !DIExpression()), !dbg !471
  %3 = load i32, i32* %2, align 4, !dbg !472
  %4 = icmp ne i32 %3, 0, !dbg !474
  br i1 %4, label %5, label %9, !dbg !475

; <label>:5:                                      ; preds = %1
  %6 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !476
  %7 = load i8*, i8** @program_name, align 8, !dbg !477
  %8 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %6, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str, i32 0, i32 0), i8* %7), !dbg !478
  br label %35, !dbg !478

; <label>:9:                                      ; preds = %1
  %10 = load i8*, i8** @program_name, align 8, !dbg !479
  %11 = load i8*, i8** @program_name, align 8, !dbg !481
  %12 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([97 x i8], [97 x i8]* @.str.1, i32 0, i32 0), i8* %10, i8* %11), !dbg !482
  %13 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !483
  %14 = call i32 @fputs_unlocked(i8* getelementptr inbounds ([373 x i8], [373 x i8]* @.str.2, i32 0, i32 0), %struct._IO_FILE* %13), !dbg !483
  %15 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !484
  %16 = call i32 @fputs_unlocked(i8* getelementptr inbounds ([201 x i8], [201 x i8]* @.str.3, i32 0, i32 0), %struct._IO_FILE* %15), !dbg !484
  %17 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !485
  %18 = call i32 @fputs_unlocked(i8* getelementptr inbounds ([341 x i8], [341 x i8]* @.str.4, i32 0, i32 0), %struct._IO_FILE* %17), !dbg !485
  %19 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !486
  %20 = call i32 @fputs_unlocked(i8* getelementptr inbounds ([128 x i8], [128 x i8]* @.str.5, i32 0, i32 0), %struct._IO_FILE* %19), !dbg !486
  %21 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !487
  %22 = call i32 @fputs_unlocked(i8* getelementptr inbounds ([316 x i8], [316 x i8]* @.str.6, i32 0, i32 0), %struct._IO_FILE* %21), !dbg !487
  %23 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !488
  %24 = call i32 @fputs_unlocked(i8* getelementptr inbounds ([464 x i8], [464 x i8]* @.str.7, i32 0, i32 0), %struct._IO_FILE* %23), !dbg !488
  %25 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !489
  %26 = call i32 @fputs_unlocked(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.8, i32 0, i32 0), %struct._IO_FILE* %25), !dbg !489
  %27 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !490
  %28 = call i32 @fputs_unlocked(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.9, i32 0, i32 0), %struct._IO_FILE* %27), !dbg !490
  %29 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !491
  %30 = call i32 @fputs_unlocked(i8* getelementptr inbounds ([192 x i8], [192 x i8]* @.str.10, i32 0, i32 0), %struct._IO_FILE* %29), !dbg !491
  %31 = load i8*, i8** @program_name, align 8, !dbg !492
  %32 = load i8*, i8** @program_name, align 8, !dbg !493
  %33 = load i8*, i8** @program_name, align 8, !dbg !494
  %34 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([201 x i8], [201 x i8]* @.str.11, i32 0, i32 0), i8* %31, i8* %32, i8* %33), !dbg !495
  call void @emit_ancillary_info(), !dbg !496
  br label %35

; <label>:35:                                     ; preds = %9, %5
  %36 = load i32, i32* %2, align 4, !dbg !497
  call void @exit(i32 %36) #11, !dbg !498
  unreachable, !dbg !498
                                                  ; No predecessors!
  unreachable, !dbg !499
}

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

declare i32 @fprintf(%struct._IO_FILE*, i8*, ...) #2

declare i32 @printf(i8*, ...) #2

declare i32 @fputs_unlocked(i8*, %struct._IO_FILE*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @emit_ancillary_info() #3 !dbg !500 {
  %1 = alloca i8*, align 8
  %2 = load i8*, i8** @program_name, align 8, !dbg !504
  %3 = call i8* @last_component(i8* %2), !dbg !505
  %4 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.24, i32 0, i32 0), i8* %3, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.25, i32 0, i32 0)), !dbg !506
  %5 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.26, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.16, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.27, i32 0, i32 0)), !dbg !507
  %6 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !508
  %7 = call i32 @fputs_unlocked(i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.28, i32 0, i32 0), %struct._IO_FILE* %6), !dbg !508
  call void @llvm.dbg.declare(metadata i8** %1, metadata !509, metadata !DIExpression()), !dbg !510
  %8 = call i8* @setlocale(i32 5, i8* null) #8, !dbg !511
  store i8* %8, i8** %1, align 8, !dbg !510
  %9 = load i8*, i8** %1, align 8, !dbg !512
  %10 = icmp ne i8* %9, null, !dbg !512
  br i1 %10, label %11, label %19, !dbg !514

; <label>:11:                                     ; preds = %0
  %12 = load i8*, i8** %1, align 8, !dbg !515
  %13 = call i32 @strncmp(i8* %12, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.29, i32 0, i32 0), i64 3) #12, !dbg !516
  %14 = icmp ne i32 %13, 0, !dbg !516
  br i1 %14, label %15, label %19, !dbg !517

; <label>:15:                                     ; preds = %11
  %16 = load i8*, i8** @program_name, align 8, !dbg !518
  %17 = call i8* @last_component(i8* %16), !dbg !520
  %18 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.30, i32 0, i32 0), i8* %17), !dbg !521
  br label %19, !dbg !522

; <label>:19:                                     ; preds = %15, %11, %0
  %20 = load i8*, i8** @program_name, align 8, !dbg !523
  %21 = call i8* @last_component(i8* %20), !dbg !524
  %22 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.31, i32 0, i32 0), i8* %21), !dbg !525
  ret void, !dbg !526
}

; Function Attrs: noreturn nounwind
declare void @exit(i32) #4

; Function Attrs: nounwind
declare i8* @setlocale(i32, i8*) #5

; Function Attrs: nounwind readonly
declare i32 @strncmp(i8*, i8*, i64) #6

; Function Attrs: noinline nounwind uwtable
define void @klee_dump_memory() #3 !dbg !527 {
  ret void, !dbg !528
}

; Function Attrs: noinline nounwind uwtable
define i32 @main(i32, i8**) #3 !dbg !20 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 8
  %6 = alloca i8, align 1
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca %struct.Chown_option, align 8
  %14 = alloca i8, align 1
  %15 = alloca i32, align 4
  %16 = alloca i8*, align 8
  %17 = alloca i8*, align 8
  %18 = alloca i8*, align 8
  %19 = alloca %struct.stat, align 8
  %20 = alloca i8*, align 8
  store i32 0, i32* %3, align 4
  store i32 %0, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !529, metadata !DIExpression()), !dbg !530
  store i8** %1, i8*** %5, align 8
  call void @llvm.dbg.declare(metadata i8*** %5, metadata !531, metadata !DIExpression()), !dbg !532
  call void @llvm.dbg.declare(metadata i8* %6, metadata !533, metadata !DIExpression()), !dbg !534
  store i8 0, i8* %6, align 1, !dbg !534
  call void @llvm.dbg.declare(metadata i32* %7, metadata !535, metadata !DIExpression()), !dbg !536
  store i32 -1, i32* %7, align 4, !dbg !536
  call void @llvm.dbg.declare(metadata i32* %8, metadata !537, metadata !DIExpression()), !dbg !538
  store i32 -1, i32* %8, align 4, !dbg !538
  call void @llvm.dbg.declare(metadata i32* %9, metadata !539, metadata !DIExpression()), !dbg !540
  store i32 -1, i32* %9, align 4, !dbg !540
  call void @llvm.dbg.declare(metadata i32* %10, metadata !541, metadata !DIExpression()), !dbg !542
  store i32 -1, i32* %10, align 4, !dbg !542
  call void @llvm.dbg.declare(metadata i32* %11, metadata !543, metadata !DIExpression()), !dbg !544
  store i32 16, i32* %11, align 4, !dbg !544
  call void @llvm.dbg.declare(metadata i32* %12, metadata !545, metadata !DIExpression()), !dbg !546
  store i32 -1, i32* %12, align 4, !dbg !546
  call void @llvm.dbg.declare(metadata %struct.Chown_option* %13, metadata !547, metadata !DIExpression()), !dbg !558
  call void @llvm.dbg.declare(metadata i8* %14, metadata !559, metadata !DIExpression()), !dbg !560
  call void @llvm.dbg.declare(metadata i32* %15, metadata !561, metadata !DIExpression()), !dbg !562
  %21 = load i8**, i8*** %5, align 8, !dbg !563
  %22 = getelementptr inbounds i8*, i8** %21, i64 0, !dbg !563
  %23 = load i8*, i8** %22, align 8, !dbg !563
  call void @set_program_name(i8* %23), !dbg !564
  %24 = call i8* @setlocale(i32 6, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.12, i32 0, i32 0)) #8, !dbg !565
  %25 = call i32 @atexit(void ()* @close_stdout) #8, !dbg !566
  call void @chopt_init(%struct.Chown_option* %13), !dbg !567
  br label %26, !dbg !568

; <label>:26:                                     ; preds = %65, %2
  %27 = load i32, i32* %4, align 4, !dbg !569
  %28 = load i8**, i8*** %5, align 8, !dbg !570
  %29 = call i32 @getopt_long(i32 %27, i8** %28, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.13, i32 0, i32 0), %struct.option* getelementptr inbounds ([14 x %struct.option], [14 x %struct.option]* @long_options, i32 0, i32 0), i32* null) #8, !dbg !571
  store i32 %29, i32* %15, align 4, !dbg !572
  %30 = icmp ne i32 %29, -1, !dbg !573
  br i1 %30, label %31, label %66, !dbg !568

; <label>:31:                                     ; preds = %26
  %32 = load i32, i32* %15, align 4, !dbg !574
  switch i32 %32, label %64 [
    i32 72, label %33
    i32 76, label %34
    i32 80, label %35
    i32 104, label %36
    i32 128, label %37
    i32 130, label %38
    i32 131, label %39
    i32 132, label %40
    i32 129, label %42
    i32 82, label %52
    i32 99, label %54
    i32 102, label %56
    i32 118, label %58
    i32 -130, label %60
    i32 -131, label %61
  ], !dbg !576

; <label>:33:                                     ; preds = %31
  store i32 17, i32* %11, align 4, !dbg !577
  br label %65, !dbg !579

; <label>:34:                                     ; preds = %31
  store i32 2, i32* %11, align 4, !dbg !580
  br label %65, !dbg !581

; <label>:35:                                     ; preds = %31
  store i32 16, i32* %11, align 4, !dbg !582
  br label %65, !dbg !583

; <label>:36:                                     ; preds = %31
  store i32 0, i32* %12, align 4, !dbg !584
  br label %65, !dbg !585

; <label>:37:                                     ; preds = %31
  store i32 1, i32* %12, align 4, !dbg !586
  br label %65, !dbg !587

; <label>:38:                                     ; preds = %31
  store i8 0, i8* %6, align 1, !dbg !588
  br label %65, !dbg !589

; <label>:39:                                     ; preds = %31
  store i8 1, i8* %6, align 1, !dbg !590
  br label %65, !dbg !591

; <label>:40:                                     ; preds = %31
  %41 = load i8*, i8** @optarg, align 8, !dbg !592
  store i8* %41, i8** @reference_file, align 8, !dbg !593
  br label %65, !dbg !594

; <label>:42:                                     ; preds = %31
  call void @llvm.dbg.declare(metadata i8** %16, metadata !595, metadata !DIExpression()), !dbg !597
  call void @llvm.dbg.declare(metadata i8** %17, metadata !598, metadata !DIExpression()), !dbg !599
  call void @llvm.dbg.declare(metadata i8** %18, metadata !600, metadata !DIExpression()), !dbg !601
  %43 = load i8*, i8** @optarg, align 8, !dbg !602
  %44 = call i8* @parse_user_spec(i8* %43, i32* %9, i32* %10, i8** %16, i8** %17), !dbg !603
  store i8* %44, i8** %18, align 8, !dbg !601
  %45 = load i8*, i8** %18, align 8, !dbg !604
  %46 = icmp ne i8* %45, null, !dbg !604
  br i1 %46, label %47, label %51, !dbg !606

; <label>:47:                                     ; preds = %42
  %48 = load i8*, i8** %18, align 8, !dbg !607
  %49 = load i8*, i8** @optarg, align 8, !dbg !608
  %50 = call i8* @quote(i8* %49), !dbg !609
  call void (i32, i32, i8*, ...) @error(i32 1, i32 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.14, i32 0, i32 0), i8* %48, i8* %50), !dbg !610
  br label %51, !dbg !610

; <label>:51:                                     ; preds = %47, %42
  br label %65, !dbg !611

; <label>:52:                                     ; preds = %31
  %53 = getelementptr inbounds %struct.Chown_option, %struct.Chown_option* %13, i32 0, i32 1, !dbg !612
  store i8 1, i8* %53, align 4, !dbg !613
  br label %65, !dbg !614

; <label>:54:                                     ; preds = %31
  %55 = getelementptr inbounds %struct.Chown_option, %struct.Chown_option* %13, i32 0, i32 0, !dbg !615
  store i32 1, i32* %55, align 8, !dbg !616
  br label %65, !dbg !617

; <label>:56:                                     ; preds = %31
  %57 = getelementptr inbounds %struct.Chown_option, %struct.Chown_option* %13, i32 0, i32 4, !dbg !618
  store i8 1, i8* %57, align 1, !dbg !619
  br label %65, !dbg !620

; <label>:58:                                     ; preds = %31
  %59 = getelementptr inbounds %struct.Chown_option, %struct.Chown_option* %13, i32 0, i32 0, !dbg !621
  store i32 0, i32* %59, align 8, !dbg !622
  br label %65, !dbg !623

; <label>:60:                                     ; preds = %31
  call void @usage(i32 0) #13, !dbg !624
  unreachable, !dbg !624

; <label>:61:                                     ; preds = %31
  %62 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !625
  %63 = load i8*, i8** @Version, align 8, !dbg !625
  call void (%struct._IO_FILE*, i8*, i8*, i8*, ...) @version_etc(%struct._IO_FILE* %62, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.15, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.16, i32 0, i32 0), i8* %63, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.17, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.18, i32 0, i32 0), i8* null), !dbg !625
  call void @exit(i32 0) #11, !dbg !625
  unreachable, !dbg !625

; <label>:64:                                     ; preds = %31
  call void @usage(i32 1) #13, !dbg !626
  unreachable, !dbg !626

; <label>:65:                                     ; preds = %58, %56, %54, %52, %51, %40, %39, %38, %37, %36, %35, %34, %33
  br label %26, !dbg !568, !llvm.loop !627

; <label>:66:                                     ; preds = %26
  call void @klee_dump_memory(), !dbg !629
  %67 = getelementptr inbounds %struct.Chown_option, %struct.Chown_option* %13, i32 0, i32 1, !dbg !630
  %68 = load i8, i8* %67, align 4, !dbg !630
  %69 = trunc i8 %68 to i1, !dbg !630
  br i1 %69, label %70, label %79, !dbg !632

; <label>:70:                                     ; preds = %66
  %71 = load i32, i32* %11, align 4, !dbg !633
  %72 = icmp eq i32 %71, 16, !dbg !636
  br i1 %72, label %73, label %78, !dbg !637

; <label>:73:                                     ; preds = %70
  %74 = load i32, i32* %12, align 4, !dbg !638
  %75 = icmp eq i32 %74, 1, !dbg !641
  br i1 %75, label %76, label %77, !dbg !642

; <label>:76:                                     ; preds = %73
  call void (i32, i32, i8*, ...) @error(i32 1, i32 0, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.19, i32 0, i32 0)), !dbg !643
  br label %77, !dbg !643

; <label>:77:                                     ; preds = %76, %73
  store i32 0, i32* %12, align 4, !dbg !644
  br label %78, !dbg !645

; <label>:78:                                     ; preds = %77, %70
  br label %80, !dbg !646

; <label>:79:                                     ; preds = %66
  store i32 16, i32* %11, align 4, !dbg !647
  br label %80

; <label>:80:                                     ; preds = %79, %78
  %81 = load i32, i32* %12, align 4, !dbg !649
  %82 = icmp ne i32 %81, 0, !dbg !650
  %83 = getelementptr inbounds %struct.Chown_option, %struct.Chown_option* %13, i32 0, i32 3, !dbg !651
  %84 = zext i1 %82 to i8, !dbg !652
  store i8 %84, i8* %83, align 8, !dbg !652
  %85 = load i32, i32* %4, align 4, !dbg !653
  %86 = load i32, i32* @optind, align 4, !dbg !655
  %87 = sub nsw i32 %85, %86, !dbg !656
  %88 = load i8*, i8** @reference_file, align 8, !dbg !657
  %89 = icmp ne i8* %88, null, !dbg !657
  %90 = zext i1 %89 to i64, !dbg !657
  %91 = select i1 %89, i32 1, i32 2, !dbg !657
  %92 = icmp slt i32 %87, %91, !dbg !658
  br i1 %92, label %93, label %107, !dbg !659

; <label>:93:                                     ; preds = %80
  %94 = load i32, i32* %4, align 4, !dbg !660
  %95 = load i32, i32* @optind, align 4, !dbg !663
  %96 = icmp sle i32 %94, %95, !dbg !664
  br i1 %96, label %97, label %98, !dbg !665

; <label>:97:                                     ; preds = %93
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.20, i32 0, i32 0)), !dbg !666
  br label %106, !dbg !666

; <label>:98:                                     ; preds = %93
  %99 = load i8**, i8*** %5, align 8, !dbg !667
  %100 = load i32, i32* %4, align 4, !dbg !668
  %101 = sub nsw i32 %100, 1, !dbg !669
  %102 = sext i32 %101 to i64, !dbg !667
  %103 = getelementptr inbounds i8*, i8** %99, i64 %102, !dbg !667
  %104 = load i8*, i8** %103, align 8, !dbg !667
  %105 = call i8* @quote(i8* %104), !dbg !670
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.21, i32 0, i32 0), i8* %105), !dbg !671
  br label %106

; <label>:106:                                    ; preds = %98, %97
  call void @usage(i32 1) #13, !dbg !672
  unreachable, !dbg !672

; <label>:107:                                    ; preds = %80
  %108 = load i8*, i8** @reference_file, align 8, !dbg !673
  %109 = icmp ne i8* %108, null, !dbg !673
  br i1 %109, label %110, label %132, !dbg !675

; <label>:110:                                    ; preds = %107
  call void @llvm.dbg.declare(metadata %struct.stat* %19, metadata !676, metadata !DIExpression()), !dbg !709
  %111 = load i8*, i8** @reference_file, align 8, !dbg !710
  %112 = call i32 @stat(i8* %111, %struct.stat* %19) #8, !dbg !712
  %113 = icmp ne i32 %112, 0, !dbg !712
  br i1 %113, label %114, label %119, !dbg !713

; <label>:114:                                    ; preds = %110
  %115 = call i32* @__errno_location() #14, !dbg !714
  %116 = load i32, i32* %115, align 4, !dbg !714
  %117 = load i8*, i8** @reference_file, align 8, !dbg !715
  %118 = call i8* @quote(i8* %117), !dbg !716
  call void (i32, i32, i8*, ...) @error(i32 1, i32 %116, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.22, i32 0, i32 0), i8* %118), !dbg !717
  br label %119, !dbg !717

; <label>:119:                                    ; preds = %114, %110
  %120 = getelementptr inbounds %struct.stat, %struct.stat* %19, i32 0, i32 4, !dbg !718
  %121 = load i32, i32* %120, align 4, !dbg !718
  store i32 %121, i32* %7, align 4, !dbg !719
  %122 = getelementptr inbounds %struct.stat, %struct.stat* %19, i32 0, i32 5, !dbg !720
  %123 = load i32, i32* %122, align 8, !dbg !720
  store i32 %123, i32* %8, align 4, !dbg !721
  %124 = getelementptr inbounds %struct.stat, %struct.stat* %19, i32 0, i32 4, !dbg !722
  %125 = load i32, i32* %124, align 4, !dbg !722
  %126 = call i8* @uid_to_name(i32 %125), !dbg !723
  %127 = getelementptr inbounds %struct.Chown_option, %struct.Chown_option* %13, i32 0, i32 5, !dbg !724
  store i8* %126, i8** %127, align 8, !dbg !725
  %128 = getelementptr inbounds %struct.stat, %struct.stat* %19, i32 0, i32 5, !dbg !726
  %129 = load i32, i32* %128, align 8, !dbg !726
  %130 = call i8* @gid_to_name(i32 %129), !dbg !727
  %131 = getelementptr inbounds %struct.Chown_option, %struct.Chown_option* %13, i32 0, i32 6, !dbg !728
  store i8* %130, i8** %131, align 8, !dbg !729
  br label %165, !dbg !730

; <label>:132:                                    ; preds = %107
  call void @llvm.dbg.declare(metadata i8** %20, metadata !731, metadata !DIExpression()), !dbg !733
  %133 = load i8**, i8*** %5, align 8, !dbg !734
  %134 = load i32, i32* @optind, align 4, !dbg !735
  %135 = sext i32 %134 to i64, !dbg !734
  %136 = getelementptr inbounds i8*, i8** %133, i64 %135, !dbg !734
  %137 = load i8*, i8** %136, align 8, !dbg !734
  %138 = getelementptr inbounds %struct.Chown_option, %struct.Chown_option* %13, i32 0, i32 5, !dbg !736
  %139 = getelementptr inbounds %struct.Chown_option, %struct.Chown_option* %13, i32 0, i32 6, !dbg !737
  %140 = call i8* @parse_user_spec(i8* %137, i32* %7, i32* %8, i8** %138, i8** %139), !dbg !738
  store i8* %140, i8** %20, align 8, !dbg !733
  %141 = load i8*, i8** %20, align 8, !dbg !739
  %142 = icmp ne i8* %141, null, !dbg !739
  br i1 %142, label %143, label %151, !dbg !741

; <label>:143:                                    ; preds = %132
  %144 = load i8*, i8** %20, align 8, !dbg !742
  %145 = load i8**, i8*** %5, align 8, !dbg !743
  %146 = load i32, i32* @optind, align 4, !dbg !744
  %147 = sext i32 %146 to i64, !dbg !743
  %148 = getelementptr inbounds i8*, i8** %145, i64 %147, !dbg !743
  %149 = load i8*, i8** %148, align 8, !dbg !743
  %150 = call i8* @quote(i8* %149), !dbg !745
  call void (i32, i32, i8*, ...) @error(i32 1, i32 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.14, i32 0, i32 0), i8* %144, i8* %150), !dbg !746
  br label %151, !dbg !746

; <label>:151:                                    ; preds = %143, %132
  %152 = getelementptr inbounds %struct.Chown_option, %struct.Chown_option* %13, i32 0, i32 5, !dbg !747
  %153 = load i8*, i8** %152, align 8, !dbg !747
  %154 = icmp ne i8* %153, null, !dbg !749
  br i1 %154, label %162, label %155, !dbg !750

; <label>:155:                                    ; preds = %151
  %156 = getelementptr inbounds %struct.Chown_option, %struct.Chown_option* %13, i32 0, i32 6, !dbg !751
  %157 = load i8*, i8** %156, align 8, !dbg !751
  %158 = icmp ne i8* %157, null, !dbg !752
  br i1 %158, label %159, label %162, !dbg !753

; <label>:159:                                    ; preds = %155
  %160 = call i8* @bad_cast(i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.12, i32 0, i32 0)), !dbg !754
  %161 = getelementptr inbounds %struct.Chown_option, %struct.Chown_option* %13, i32 0, i32 5, !dbg !755
  store i8* %160, i8** %161, align 8, !dbg !756
  br label %162, !dbg !757

; <label>:162:                                    ; preds = %159, %155, %151
  %163 = load i32, i32* @optind, align 4, !dbg !758
  %164 = add nsw i32 %163, 1, !dbg !758
  store i32 %164, i32* @optind, align 4, !dbg !758
  br label %165

; <label>:165:                                    ; preds = %162, %119
  %166 = getelementptr inbounds %struct.Chown_option, %struct.Chown_option* %13, i32 0, i32 1, !dbg !759
  %167 = load i8, i8* %166, align 4, !dbg !759
  %168 = trunc i8 %167 to i1, !dbg !759
  br i1 %168, label %169, label %183, !dbg !761

; <label>:169:                                    ; preds = %165
  %170 = load i8, i8* %6, align 1, !dbg !762
  %171 = trunc i8 %170 to i1, !dbg !762
  br i1 %171, label %172, label %183, !dbg !763

; <label>:172:                                    ; preds = %169
  %173 = call %struct.dev_ino* @get_root_dev_ino(%struct.dev_ino* @main.dev_ino_buf), !dbg !764
  %174 = getelementptr inbounds %struct.Chown_option, %struct.Chown_option* %13, i32 0, i32 2, !dbg !766
  store %struct.dev_ino* %173, %struct.dev_ino** %174, align 8, !dbg !767
  %175 = getelementptr inbounds %struct.Chown_option, %struct.Chown_option* %13, i32 0, i32 2, !dbg !768
  %176 = load %struct.dev_ino*, %struct.dev_ino** %175, align 8, !dbg !768
  %177 = icmp eq %struct.dev_ino* %176, null, !dbg !770
  br i1 %177, label %178, label %182, !dbg !771

; <label>:178:                                    ; preds = %172
  %179 = call i32* @__errno_location() #14, !dbg !772
  %180 = load i32, i32* %179, align 4, !dbg !772
  %181 = call i8* @quote(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.23, i32 0, i32 0)), !dbg !773
  call void (i32, i32, i8*, ...) @error(i32 1, i32 %180, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.22, i32 0, i32 0), i8* %181), !dbg !774
  br label %182, !dbg !774

; <label>:182:                                    ; preds = %178, %172
  br label %183, !dbg !775

; <label>:183:                                    ; preds = %182, %169, %165
  %184 = load i32, i32* %11, align 4, !dbg !776
  %185 = or i32 %184, 1024, !dbg !776
  store i32 %185, i32* %11, align 4, !dbg !776
  %186 = load i8**, i8*** %5, align 8, !dbg !777
  %187 = load i32, i32* @optind, align 4, !dbg !778
  %188 = sext i32 %187 to i64, !dbg !779
  %189 = getelementptr inbounds i8*, i8** %186, i64 %188, !dbg !779
  %190 = load i32, i32* %11, align 4, !dbg !780
  %191 = load i32, i32* %7, align 4, !dbg !781
  %192 = load i32, i32* %8, align 4, !dbg !782
  %193 = load i32, i32* %9, align 4, !dbg !783
  %194 = load i32, i32* %10, align 4, !dbg !784
  %195 = call zeroext i1 @chown_files(i8** %189, i32 %190, i32 %191, i32 %192, i32 %193, i32 %194, %struct.Chown_option* %13), !dbg !785
  %196 = zext i1 %195 to i8, !dbg !786
  store i8 %196, i8* %14, align 1, !dbg !786
  call void @chopt_free(%struct.Chown_option* %13), !dbg !787
  %197 = load i8, i8* %14, align 1, !dbg !788
  %198 = trunc i8 %197 to i1, !dbg !788
  %199 = zext i1 %198 to i64, !dbg !788
  %200 = select i1 %198, i32 0, i32 1, !dbg !788
  call void @exit(i32 %200) #11, !dbg !789
  unreachable, !dbg !789
                                                  ; No predecessors!
  %202 = load i32, i32* %3, align 4, !dbg !790
  ret i32 %202, !dbg !790
}

; Function Attrs: nounwind
declare i32 @atexit(void ()*) #5

; Function Attrs: nounwind
declare i32 @getopt_long(i32, i8**, i8*, %struct.option*, i32*) #5

declare void @error(i32, i32, i8*, ...) #2

; Function Attrs: nounwind
declare i32 @stat(i8*, %struct.stat*) #5

; Function Attrs: nounwind readnone
declare i32* @__errno_location() #7

; Function Attrs: noinline nounwind uwtable
define internal i8* @bad_cast(i8*) #3 !dbg !791 {
  %2 = alloca i8*, align 8
  store i8* %0, i8** %2, align 8
  call void @llvm.dbg.declare(metadata i8** %2, metadata !794, metadata !DIExpression()), !dbg !795
  %3 = load i8*, i8** %2, align 8, !dbg !796
  ret i8* %3, !dbg !797
}

; Function Attrs: noinline nounwind uwtable
define void @chopt_init(%struct.Chown_option*) #3 !dbg !798 {
  %2 = alloca %struct.Chown_option*, align 8
  store %struct.Chown_option* %0, %struct.Chown_option** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.Chown_option** %2, metadata !816, metadata !DIExpression()), !dbg !817
  %3 = load %struct.Chown_option*, %struct.Chown_option** %2, align 8, !dbg !818
  %4 = getelementptr inbounds %struct.Chown_option, %struct.Chown_option* %3, i32 0, i32 0, !dbg !819
  store i32 2, i32* %4, align 8, !dbg !820
  %5 = load %struct.Chown_option*, %struct.Chown_option** %2, align 8, !dbg !821
  %6 = getelementptr inbounds %struct.Chown_option, %struct.Chown_option* %5, i32 0, i32 2, !dbg !822
  store %struct.dev_ino* null, %struct.dev_ino** %6, align 8, !dbg !823
  %7 = load %struct.Chown_option*, %struct.Chown_option** %2, align 8, !dbg !824
  %8 = getelementptr inbounds %struct.Chown_option, %struct.Chown_option* %7, i32 0, i32 3, !dbg !825
  store i8 1, i8* %8, align 8, !dbg !826
  %9 = load %struct.Chown_option*, %struct.Chown_option** %2, align 8, !dbg !827
  %10 = getelementptr inbounds %struct.Chown_option, %struct.Chown_option* %9, i32 0, i32 1, !dbg !828
  store i8 0, i8* %10, align 4, !dbg !829
  %11 = load %struct.Chown_option*, %struct.Chown_option** %2, align 8, !dbg !830
  %12 = getelementptr inbounds %struct.Chown_option, %struct.Chown_option* %11, i32 0, i32 4, !dbg !831
  store i8 0, i8* %12, align 1, !dbg !832
  %13 = load %struct.Chown_option*, %struct.Chown_option** %2, align 8, !dbg !833
  %14 = getelementptr inbounds %struct.Chown_option, %struct.Chown_option* %13, i32 0, i32 5, !dbg !834
  store i8* null, i8** %14, align 8, !dbg !835
  %15 = load %struct.Chown_option*, %struct.Chown_option** %2, align 8, !dbg !836
  %16 = getelementptr inbounds %struct.Chown_option, %struct.Chown_option* %15, i32 0, i32 6, !dbg !837
  store i8* null, i8** %16, align 8, !dbg !838
  ret void, !dbg !839
}

; Function Attrs: noinline nounwind uwtable
define void @chopt_free(%struct.Chown_option*) #3 !dbg !840 {
  %2 = alloca %struct.Chown_option*, align 8
  store %struct.Chown_option* %0, %struct.Chown_option** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.Chown_option** %2, metadata !841, metadata !DIExpression()), !dbg !842
  ret void, !dbg !843
}

; Function Attrs: noinline nounwind uwtable
define i8* @gid_to_name(i32) #3 !dbg !844 {
  %2 = alloca i32, align 4
  %3 = alloca [21 x i8], align 16
  %4 = alloca %struct.group*, align 8
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !847, metadata !DIExpression()), !dbg !848
  call void @llvm.dbg.declare(metadata [21 x i8]* %3, metadata !849, metadata !DIExpression()), !dbg !853
  call void @llvm.dbg.declare(metadata %struct.group** %4, metadata !854, metadata !DIExpression()), !dbg !863
  %5 = load i32, i32* %2, align 4, !dbg !864
  %6 = call %struct.group* @getgrgid(i32 %5), !dbg !865
  store %struct.group* %6, %struct.group** %4, align 8, !dbg !863
  %7 = load %struct.group*, %struct.group** %4, align 8, !dbg !866
  %8 = icmp ne %struct.group* %7, null, !dbg !866
  br i1 %8, label %9, label %13, !dbg !866

; <label>:9:                                      ; preds = %1
  %10 = load %struct.group*, %struct.group** %4, align 8, !dbg !867
  %11 = getelementptr inbounds %struct.group, %struct.group* %10, i32 0, i32 0, !dbg !868
  %12 = load i8*, i8** %11, align 8, !dbg !868
  br label %18, !dbg !866

; <label>:13:                                     ; preds = %1
  %14 = load i32, i32* %2, align 4, !dbg !869
  %15 = zext i32 %14 to i64, !dbg !869
  %16 = getelementptr inbounds [21 x i8], [21 x i8]* %3, i32 0, i32 0, !dbg !870
  %17 = call i8* @umaxtostr(i64 %15, i8* %16), !dbg !871
  br label %18, !dbg !866

; <label>:18:                                     ; preds = %13, %9
  %19 = phi i8* [ %12, %9 ], [ %17, %13 ], !dbg !866
  %20 = call noalias i8* @xstrdup(i8* %19), !dbg !872
  ret i8* %20, !dbg !873
}

declare %struct.group* @getgrgid(i32) #2

; Function Attrs: noinline nounwind uwtable
define i8* @uid_to_name(i32) #3 !dbg !874 {
  %2 = alloca i32, align 4
  %3 = alloca [21 x i8], align 16
  %4 = alloca %struct.passwd*, align 8
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !877, metadata !DIExpression()), !dbg !878
  call void @llvm.dbg.declare(metadata [21 x i8]* %3, metadata !879, metadata !DIExpression()), !dbg !880
  call void @llvm.dbg.declare(metadata %struct.passwd** %4, metadata !881, metadata !DIExpression()), !dbg !893
  %5 = load i32, i32* %2, align 4, !dbg !894
  %6 = call %struct.passwd* @getpwuid(i32 %5), !dbg !895
  store %struct.passwd* %6, %struct.passwd** %4, align 8, !dbg !893
  %7 = load %struct.passwd*, %struct.passwd** %4, align 8, !dbg !896
  %8 = icmp ne %struct.passwd* %7, null, !dbg !896
  br i1 %8, label %9, label %13, !dbg !896

; <label>:9:                                      ; preds = %1
  %10 = load %struct.passwd*, %struct.passwd** %4, align 8, !dbg !897
  %11 = getelementptr inbounds %struct.passwd, %struct.passwd* %10, i32 0, i32 0, !dbg !898
  %12 = load i8*, i8** %11, align 8, !dbg !898
  br label %18, !dbg !896

; <label>:13:                                     ; preds = %1
  %14 = load i32, i32* %2, align 4, !dbg !899
  %15 = zext i32 %14 to i64, !dbg !899
  %16 = getelementptr inbounds [21 x i8], [21 x i8]* %3, i32 0, i32 0, !dbg !900
  %17 = call i8* @umaxtostr(i64 %15, i8* %16), !dbg !901
  br label %18, !dbg !896

; <label>:18:                                     ; preds = %13, %9
  %19 = phi i8* [ %12, %9 ], [ %17, %13 ], !dbg !896
  %20 = call noalias i8* @xstrdup(i8* %19), !dbg !902
  ret i8* %20, !dbg !903
}

declare %struct.passwd* @getpwuid(i32) #2

; Function Attrs: noinline nounwind uwtable
define zeroext i1 @chown_files(i8**, i32, i32, i32, i32, i32, %struct.Chown_option*) #3 !dbg !904 {
  %8 = alloca i8**, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca %struct.Chown_option*, align 8
  %15 = alloca i8, align 1
  %16 = alloca i32, align 4
  %17 = alloca %struct.FTS*, align 8
  %18 = alloca %struct._ftsent*, align 8
  store i8** %0, i8*** %8, align 8
  call void @llvm.dbg.declare(metadata i8*** %8, metadata !909, metadata !DIExpression()), !dbg !910
  store i32 %1, i32* %9, align 4
  call void @llvm.dbg.declare(metadata i32* %9, metadata !911, metadata !DIExpression()), !dbg !912
  store i32 %2, i32* %10, align 4
  call void @llvm.dbg.declare(metadata i32* %10, metadata !913, metadata !DIExpression()), !dbg !914
  store i32 %3, i32* %11, align 4
  call void @llvm.dbg.declare(metadata i32* %11, metadata !915, metadata !DIExpression()), !dbg !916
  store i32 %4, i32* %12, align 4
  call void @llvm.dbg.declare(metadata i32* %12, metadata !917, metadata !DIExpression()), !dbg !918
  store i32 %5, i32* %13, align 4
  call void @llvm.dbg.declare(metadata i32* %13, metadata !919, metadata !DIExpression()), !dbg !920
  store %struct.Chown_option* %6, %struct.Chown_option** %14, align 8
  call void @llvm.dbg.declare(metadata %struct.Chown_option** %14, metadata !921, metadata !DIExpression()), !dbg !922
  call void @llvm.dbg.declare(metadata i8* %15, metadata !923, metadata !DIExpression()), !dbg !924
  store i8 1, i8* %15, align 1, !dbg !924
  call void @llvm.dbg.declare(metadata i32* %16, metadata !925, metadata !DIExpression()), !dbg !926
  %19 = load i32, i32* %12, align 4, !dbg !927
  %20 = icmp ne i32 %19, -1, !dbg !928
  br i1 %20, label %34, label %21, !dbg !929

; <label>:21:                                     ; preds = %7
  %22 = load i32, i32* %13, align 4, !dbg !930
  %23 = icmp ne i32 %22, -1, !dbg !931
  br i1 %23, label %34, label %24, !dbg !932

; <label>:24:                                     ; preds = %21
  %25 = load %struct.Chown_option*, %struct.Chown_option** %14, align 8, !dbg !933
  %26 = getelementptr inbounds %struct.Chown_option, %struct.Chown_option* %25, i32 0, i32 3, !dbg !934
  %27 = load i8, i8* %26, align 8, !dbg !934
  %28 = trunc i8 %27 to i1, !dbg !934
  br i1 %28, label %34, label %29, !dbg !935

; <label>:29:                                     ; preds = %24
  %30 = load %struct.Chown_option*, %struct.Chown_option** %14, align 8, !dbg !936
  %31 = getelementptr inbounds %struct.Chown_option, %struct.Chown_option* %30, i32 0, i32 0, !dbg !937
  %32 = load i32, i32* %31, align 8, !dbg !937
  %33 = icmp ne i32 %32, 2, !dbg !938
  br label %34, !dbg !935

; <label>:34:                                     ; preds = %29, %24, %21, %7
  %35 = phi i1 [ true, %24 ], [ true, %21 ], [ true, %7 ], [ %33, %29 ]
  %36 = zext i1 %35 to i64, !dbg !939
  %37 = select i1 %35, i32 0, i32 8, !dbg !939
  store i32 %37, i32* %16, align 4, !dbg !926
  call void @llvm.dbg.declare(metadata %struct.FTS** %17, metadata !940, metadata !DIExpression()), !dbg !1032
  %38 = load i8**, i8*** %8, align 8, !dbg !1033
  %39 = load i32, i32* %9, align 4, !dbg !1034
  %40 = load i32, i32* %16, align 4, !dbg !1035
  %41 = or i32 %39, %40, !dbg !1036
  %42 = call %struct.FTS* @xfts_open(i8** %38, i32 %41, i32 (%struct._ftsent**, %struct._ftsent**)* null), !dbg !1037
  store %struct.FTS* %42, %struct.FTS** %17, align 8, !dbg !1032
  br label %43, !dbg !1038

; <label>:43:                                     ; preds = %34, %62
  call void @llvm.dbg.declare(metadata %struct._ftsent** %18, metadata !1039, metadata !DIExpression()), !dbg !1043
  %44 = load %struct.FTS*, %struct.FTS** %17, align 8, !dbg !1044
  %45 = call %struct._ftsent* @fts_read(%struct.FTS* %44), !dbg !1045
  store %struct._ftsent* %45, %struct._ftsent** %18, align 8, !dbg !1046
  %46 = load %struct._ftsent*, %struct._ftsent** %18, align 8, !dbg !1047
  %47 = icmp eq %struct._ftsent* %46, null, !dbg !1049
  br i1 %47, label %48, label %62, !dbg !1050

; <label>:48:                                     ; preds = %43
  %49 = call i32* @__errno_location() #14, !dbg !1051
  %50 = load i32, i32* %49, align 4, !dbg !1051
  %51 = icmp ne i32 %50, 0, !dbg !1054
  br i1 %51, label %52, label %61, !dbg !1055

; <label>:52:                                     ; preds = %48
  %53 = load %struct.Chown_option*, %struct.Chown_option** %14, align 8, !dbg !1056
  %54 = getelementptr inbounds %struct.Chown_option, %struct.Chown_option* %53, i32 0, i32 4, !dbg !1059
  %55 = load i8, i8* %54, align 1, !dbg !1059
  %56 = trunc i8 %55 to i1, !dbg !1059
  br i1 %56, label %60, label %57, !dbg !1060

; <label>:57:                                     ; preds = %52
  %58 = call i32* @__errno_location() #14, !dbg !1061
  %59 = load i32, i32* %58, align 4, !dbg !1061
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %59, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.45, i32 0, i32 0)), !dbg !1062
  br label %60, !dbg !1062

; <label>:60:                                     ; preds = %57, %52
  store i8 0, i8* %15, align 1, !dbg !1063
  br label %61, !dbg !1064

; <label>:61:                                     ; preds = %60, %48
  br label %78, !dbg !1065

; <label>:62:                                     ; preds = %43
  %63 = load %struct.FTS*, %struct.FTS** %17, align 8, !dbg !1066
  %64 = load %struct._ftsent*, %struct._ftsent** %18, align 8, !dbg !1067
  %65 = load i32, i32* %10, align 4, !dbg !1068
  %66 = load i32, i32* %11, align 4, !dbg !1069
  %67 = load i32, i32* %12, align 4, !dbg !1070
  %68 = load i32, i32* %13, align 4, !dbg !1071
  %69 = load %struct.Chown_option*, %struct.Chown_option** %14, align 8, !dbg !1072
  %70 = call zeroext i1 @change_file_owner(%struct.FTS* %63, %struct._ftsent* %64, i32 %65, i32 %66, i32 %67, i32 %68, %struct.Chown_option* %69), !dbg !1073
  %71 = zext i1 %70 to i32, !dbg !1073
  %72 = load i8, i8* %15, align 1, !dbg !1074
  %73 = trunc i8 %72 to i1, !dbg !1074
  %74 = zext i1 %73 to i32, !dbg !1074
  %75 = and i32 %74, %71, !dbg !1074
  %76 = icmp ne i32 %75, 0, !dbg !1074
  %77 = zext i1 %76 to i8, !dbg !1074
  store i8 %77, i8* %15, align 1, !dbg !1074
  br label %43, !dbg !1038, !llvm.loop !1075

; <label>:78:                                     ; preds = %61
  %79 = load %struct.FTS*, %struct.FTS** %17, align 8, !dbg !1077
  %80 = call i32 @fts_close(%struct.FTS* %79), !dbg !1079
  %81 = icmp ne i32 %80, 0, !dbg !1080
  br i1 %81, label %82, label %85, !dbg !1081

; <label>:82:                                     ; preds = %78
  %83 = call i32* @__errno_location() #14, !dbg !1082
  %84 = load i32, i32* %83, align 4, !dbg !1082
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %84, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.1.46, i32 0, i32 0)), !dbg !1084
  store i8 0, i8* %15, align 1, !dbg !1085
  br label %85, !dbg !1086

; <label>:85:                                     ; preds = %82, %78
  %86 = load i8, i8* %15, align 1, !dbg !1087
  %87 = trunc i8 %86 to i1, !dbg !1087
  ret i1 %87, !dbg !1088
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i1 @change_file_owner(%struct.FTS*, %struct._ftsent*, i32, i32, i32, i32, %struct.Chown_option*) #3 !dbg !1089 {
  %8 = alloca i1, align 1
  %9 = alloca %struct.FTS*, align 8
  %10 = alloca %struct._ftsent*, align 8
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca %struct.Chown_option*, align 8
  %16 = alloca i8*, align 8
  %17 = alloca i8*, align 8
  %18 = alloca %struct.stat*, align 8
  %19 = alloca %struct.stat, align 8
  %20 = alloca i8, align 1
  %21 = alloca i8, align 1
  %22 = alloca i8, align 1
  %23 = alloca i32, align 4
  %24 = alloca i8, align 1
  %25 = alloca i32, align 4
  store %struct.FTS* %0, %struct.FTS** %9, align 8
  call void @llvm.dbg.declare(metadata %struct.FTS** %9, metadata !1092, metadata !DIExpression()), !dbg !1093
  store %struct._ftsent* %1, %struct._ftsent** %10, align 8
  call void @llvm.dbg.declare(metadata %struct._ftsent** %10, metadata !1094, metadata !DIExpression()), !dbg !1095
  store i32 %2, i32* %11, align 4
  call void @llvm.dbg.declare(metadata i32* %11, metadata !1096, metadata !DIExpression()), !dbg !1097
  store i32 %3, i32* %12, align 4
  call void @llvm.dbg.declare(metadata i32* %12, metadata !1098, metadata !DIExpression()), !dbg !1099
  store i32 %4, i32* %13, align 4
  call void @llvm.dbg.declare(metadata i32* %13, metadata !1100, metadata !DIExpression()), !dbg !1101
  store i32 %5, i32* %14, align 4
  call void @llvm.dbg.declare(metadata i32* %14, metadata !1102, metadata !DIExpression()), !dbg !1103
  store %struct.Chown_option* %6, %struct.Chown_option** %15, align 8
  call void @llvm.dbg.declare(metadata %struct.Chown_option** %15, metadata !1104, metadata !DIExpression()), !dbg !1105
  call void @llvm.dbg.declare(metadata i8** %16, metadata !1106, metadata !DIExpression()), !dbg !1107
  %26 = load %struct._ftsent*, %struct._ftsent** %10, align 8, !dbg !1108
  %27 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %26, i32 0, i32 6, !dbg !1109
  %28 = load i8*, i8** %27, align 8, !dbg !1109
  store i8* %28, i8** %16, align 8, !dbg !1107
  call void @llvm.dbg.declare(metadata i8** %17, metadata !1110, metadata !DIExpression()), !dbg !1111
  %29 = load %struct._ftsent*, %struct._ftsent** %10, align 8, !dbg !1112
  %30 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %29, i32 0, i32 5, !dbg !1113
  %31 = load i8*, i8** %30, align 8, !dbg !1113
  store i8* %31, i8** %17, align 8, !dbg !1111
  call void @llvm.dbg.declare(metadata %struct.stat** %18, metadata !1114, metadata !DIExpression()), !dbg !1117
  call void @llvm.dbg.declare(metadata %struct.stat* %19, metadata !1118, metadata !DIExpression()), !dbg !1119
  call void @llvm.dbg.declare(metadata i8* %20, metadata !1120, metadata !DIExpression()), !dbg !1121
  store i8 1, i8* %20, align 1, !dbg !1121
  call void @llvm.dbg.declare(metadata i8* %21, metadata !1122, metadata !DIExpression()), !dbg !1123
  call void @llvm.dbg.declare(metadata i8* %22, metadata !1124, metadata !DIExpression()), !dbg !1125
  store i8 1, i8* %22, align 1, !dbg !1125
  %32 = load %struct._ftsent*, %struct._ftsent** %10, align 8, !dbg !1126
  %33 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %32, i32 0, i32 14, !dbg !1127
  %34 = load i16, i16* %33, align 8, !dbg !1127
  %35 = zext i16 %34 to i32, !dbg !1126
  switch i32 %35, label %161 [
    i32 1, label %36
    i32 6, label %92
    i32 10, label %99
    i32 7, label %127
    i32 4, label %139
    i32 2, label %151
  ], !dbg !1128

; <label>:36:                                     ; preds = %7
  %37 = load %struct.Chown_option*, %struct.Chown_option** %15, align 8, !dbg !1129
  %38 = getelementptr inbounds %struct.Chown_option, %struct.Chown_option* %37, i32 0, i32 1, !dbg !1132
  %39 = load i8, i8* %38, align 4, !dbg !1132
  %40 = trunc i8 %39 to i1, !dbg !1132
  br i1 %40, label %41, label %91, !dbg !1133

; <label>:41:                                     ; preds = %36
  %42 = load %struct.Chown_option*, %struct.Chown_option** %15, align 8, !dbg !1134
  %43 = getelementptr inbounds %struct.Chown_option, %struct.Chown_option* %42, i32 0, i32 2, !dbg !1134
  %44 = load %struct.dev_ino*, %struct.dev_ino** %43, align 8, !dbg !1134
  %45 = icmp ne %struct.dev_ino* %44, null, !dbg !1134
  br i1 %45, label %46, label %90, !dbg !1134

; <label>:46:                                     ; preds = %41
  %47 = load %struct._ftsent*, %struct._ftsent** %10, align 8, !dbg !1134
  %48 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %47, i32 0, i32 17, !dbg !1134
  %49 = getelementptr inbounds [1 x %struct.stat], [1 x %struct.stat]* %48, i32 0, i32 0, !dbg !1134
  %50 = getelementptr inbounds %struct.stat, %struct.stat* %49, i32 0, i32 1, !dbg !1134
  %51 = load i64, i64* %50, align 8, !dbg !1134
  %52 = load %struct.Chown_option*, %struct.Chown_option** %15, align 8, !dbg !1134
  %53 = getelementptr inbounds %struct.Chown_option, %struct.Chown_option* %52, i32 0, i32 2, !dbg !1134
  %54 = load %struct.dev_ino*, %struct.dev_ino** %53, align 8, !dbg !1134
  %55 = getelementptr inbounds %struct.dev_ino, %struct.dev_ino* %54, i32 0, i32 0, !dbg !1134
  %56 = load i64, i64* %55, align 8, !dbg !1134
  %57 = icmp eq i64 %51, %56, !dbg !1134
  br i1 %57, label %58, label %90, !dbg !1134

; <label>:58:                                     ; preds = %46
  %59 = load %struct._ftsent*, %struct._ftsent** %10, align 8, !dbg !1134
  %60 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %59, i32 0, i32 17, !dbg !1134
  %61 = getelementptr inbounds [1 x %struct.stat], [1 x %struct.stat]* %60, i32 0, i32 0, !dbg !1134
  %62 = getelementptr inbounds %struct.stat, %struct.stat* %61, i32 0, i32 0, !dbg !1134
  %63 = load i64, i64* %62, align 8, !dbg !1134
  %64 = load %struct.Chown_option*, %struct.Chown_option** %15, align 8, !dbg !1134
  %65 = getelementptr inbounds %struct.Chown_option, %struct.Chown_option* %64, i32 0, i32 2, !dbg !1134
  %66 = load %struct.dev_ino*, %struct.dev_ino** %65, align 8, !dbg !1134
  %67 = getelementptr inbounds %struct.dev_ino, %struct.dev_ino* %66, i32 0, i32 1, !dbg !1134
  %68 = load i64, i64* %67, align 8, !dbg !1134
  %69 = icmp eq i64 %63, %68, !dbg !1134
  br i1 %69, label %70, label %90, !dbg !1137

; <label>:70:                                     ; preds = %58
  br label %71, !dbg !1138, !llvm.loop !1140

; <label>:71:                                     ; preds = %70
  %72 = load i8*, i8** %16, align 8, !dbg !1141
  %73 = call i32 @strcmp(i8* %72, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.47, i32 0, i32 0)) #12, !dbg !1141
  %74 = icmp eq i32 %73, 0, !dbg !1141
  br i1 %74, label %75, label %78, !dbg !1144

; <label>:75:                                     ; preds = %71
  %76 = load i8*, i8** %16, align 8, !dbg !1141
  %77 = call i8* @quote(i8* %76), !dbg !1141
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.3.48, i32 0, i32 0), i8* %77), !dbg !1141
  br label %82, !dbg !1141

; <label>:78:                                     ; preds = %71
  %79 = load i8*, i8** %16, align 8, !dbg !1141
  %80 = call i8* @quote_n(i32 0, i8* %79), !dbg !1141
  %81 = call i8* @quote_n(i32 1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.47, i32 0, i32 0)), !dbg !1141
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.4.49, i32 0, i32 0), i8* %80, i8* %81), !dbg !1141
  br label %82

; <label>:82:                                     ; preds = %78, %75
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.5.50, i32 0, i32 0)), !dbg !1144
  br label %83, !dbg !1144

; <label>:83:                                     ; preds = %82
  %84 = load %struct.FTS*, %struct.FTS** %9, align 8, !dbg !1145
  %85 = load %struct._ftsent*, %struct._ftsent** %10, align 8, !dbg !1146
  %86 = call i32 @fts_set(%struct.FTS* %84, %struct._ftsent* %85, i32 4), !dbg !1147
  %87 = load %struct.FTS*, %struct.FTS** %9, align 8, !dbg !1148
  %88 = call %struct._ftsent* @fts_read(%struct.FTS* %87), !dbg !1149
  %89 = bitcast %struct._ftsent* %88 to i8*, !dbg !1149
  call void @ignore_ptr(i8* %89), !dbg !1150
  store i1 false, i1* %8, align 1, !dbg !1151
  br label %477, !dbg !1151

; <label>:90:                                     ; preds = %58, %46, %41
  store i1 true, i1* %8, align 1, !dbg !1152
  br label %477, !dbg !1152

; <label>:91:                                     ; preds = %36
  br label %162, !dbg !1153

; <label>:92:                                     ; preds = %7
  %93 = load %struct.Chown_option*, %struct.Chown_option** %15, align 8, !dbg !1154
  %94 = getelementptr inbounds %struct.Chown_option, %struct.Chown_option* %93, i32 0, i32 1, !dbg !1156
  %95 = load i8, i8* %94, align 4, !dbg !1156
  %96 = trunc i8 %95 to i1, !dbg !1156
  br i1 %96, label %98, label %97, !dbg !1157

; <label>:97:                                     ; preds = %92
  store i1 true, i1* %8, align 1, !dbg !1158
  br label %477, !dbg !1158

; <label>:98:                                     ; preds = %92
  br label %162, !dbg !1159

; <label>:99:                                     ; preds = %7
  %100 = load %struct._ftsent*, %struct._ftsent** %10, align 8, !dbg !1160
  %101 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %100, i32 0, i32 11, !dbg !1162
  %102 = load i64, i64* %101, align 8, !dbg !1162
  %103 = icmp eq i64 %102, 0, !dbg !1163
  br i1 %103, label %104, label %115, !dbg !1164

; <label>:104:                                    ; preds = %99
  %105 = load %struct._ftsent*, %struct._ftsent** %10, align 8, !dbg !1165
  %106 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %105, i32 0, i32 3, !dbg !1166
  %107 = load i64, i64* %106, align 8, !dbg !1166
  %108 = icmp eq i64 %107, 0, !dbg !1167
  br i1 %108, label %109, label %115, !dbg !1168

; <label>:109:                                    ; preds = %104
  %110 = load %struct._ftsent*, %struct._ftsent** %10, align 8, !dbg !1169
  %111 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %110, i32 0, i32 3, !dbg !1171
  store i64 1, i64* %111, align 8, !dbg !1172
  %112 = load %struct.FTS*, %struct.FTS** %9, align 8, !dbg !1173
  %113 = load %struct._ftsent*, %struct._ftsent** %10, align 8, !dbg !1174
  %114 = call i32 @fts_set(%struct.FTS* %112, %struct._ftsent* %113, i32 1), !dbg !1175
  store i1 true, i1* %8, align 1, !dbg !1176
  br label %477, !dbg !1176

; <label>:115:                                    ; preds = %104, %99
  %116 = load %struct.Chown_option*, %struct.Chown_option** %15, align 8, !dbg !1177
  %117 = getelementptr inbounds %struct.Chown_option, %struct.Chown_option* %116, i32 0, i32 4, !dbg !1179
  %118 = load i8, i8* %117, align 1, !dbg !1179
  %119 = trunc i8 %118 to i1, !dbg !1179
  br i1 %119, label %126, label %120, !dbg !1180

; <label>:120:                                    ; preds = %115
  %121 = load %struct._ftsent*, %struct._ftsent** %10, align 8, !dbg !1181
  %122 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %121, i32 0, i32 7, !dbg !1182
  %123 = load i32, i32* %122, align 8, !dbg !1182
  %124 = load i8*, i8** %16, align 8, !dbg !1183
  %125 = call i8* @quote(i8* %124), !dbg !1184
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %123, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.6.51, i32 0, i32 0), i8* %125), !dbg !1185
  br label %126, !dbg !1185

; <label>:126:                                    ; preds = %120, %115
  store i8 0, i8* %20, align 1, !dbg !1186
  br label %162, !dbg !1187

; <label>:127:                                    ; preds = %7
  %128 = load %struct.Chown_option*, %struct.Chown_option** %15, align 8, !dbg !1188
  %129 = getelementptr inbounds %struct.Chown_option, %struct.Chown_option* %128, i32 0, i32 4, !dbg !1190
  %130 = load i8, i8* %129, align 1, !dbg !1190
  %131 = trunc i8 %130 to i1, !dbg !1190
  br i1 %131, label %138, label %132, !dbg !1191

; <label>:132:                                    ; preds = %127
  %133 = load %struct._ftsent*, %struct._ftsent** %10, align 8, !dbg !1192
  %134 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %133, i32 0, i32 7, !dbg !1193
  %135 = load i32, i32* %134, align 8, !dbg !1193
  %136 = load i8*, i8** %16, align 8, !dbg !1194
  %137 = call i8* @quote(i8* %136), !dbg !1195
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %135, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.7.52, i32 0, i32 0), i8* %137), !dbg !1196
  br label %138, !dbg !1196

; <label>:138:                                    ; preds = %132, %127
  store i8 0, i8* %20, align 1, !dbg !1197
  br label %162, !dbg !1198

; <label>:139:                                    ; preds = %7
  %140 = load %struct.Chown_option*, %struct.Chown_option** %15, align 8, !dbg !1199
  %141 = getelementptr inbounds %struct.Chown_option, %struct.Chown_option* %140, i32 0, i32 4, !dbg !1201
  %142 = load i8, i8* %141, align 1, !dbg !1201
  %143 = trunc i8 %142 to i1, !dbg !1201
  br i1 %143, label %150, label %144, !dbg !1202

; <label>:144:                                    ; preds = %139
  %145 = load %struct._ftsent*, %struct._ftsent** %10, align 8, !dbg !1203
  %146 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %145, i32 0, i32 7, !dbg !1204
  %147 = load i32, i32* %146, align 8, !dbg !1204
  %148 = load i8*, i8** %16, align 8, !dbg !1205
  %149 = call i8* @quote(i8* %148), !dbg !1206
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %147, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.8.53, i32 0, i32 0), i8* %149), !dbg !1207
  br label %150, !dbg !1207

; <label>:150:                                    ; preds = %144, %139
  store i8 0, i8* %20, align 1, !dbg !1208
  br label %162, !dbg !1209

; <label>:151:                                    ; preds = %7
  %152 = load %struct.FTS*, %struct.FTS** %9, align 8, !dbg !1210
  %153 = load %struct._ftsent*, %struct._ftsent** %10, align 8, !dbg !1212
  %154 = call zeroext i1 @cycle_warning_required(%struct.FTS* %152, %struct._ftsent* %153), !dbg !1213
  br i1 %154, label %155, label %160, !dbg !1214

; <label>:155:                                    ; preds = %151
  br label %156, !dbg !1215, !llvm.loop !1217

; <label>:156:                                    ; preds = %155
  %157 = load i8*, i8** %16, align 8, !dbg !1218
  %158 = call i8* @quote(i8* %157), !dbg !1218
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* getelementptr inbounds ([186 x i8], [186 x i8]* @.str.9.54, i32 0, i32 0), i8* %158), !dbg !1218
  br label %159, !dbg !1218

; <label>:159:                                    ; preds = %156
  store i1 false, i1* %8, align 1, !dbg !1220
  br label %477, !dbg !1220

; <label>:160:                                    ; preds = %151
  br label %162, !dbg !1221

; <label>:161:                                    ; preds = %7
  br label %162, !dbg !1222

; <label>:162:                                    ; preds = %161, %160, %150, %138, %126, %98, %91
  %163 = load i8, i8* %20, align 1, !dbg !1223
  %164 = trunc i8 %163 to i1, !dbg !1223
  br i1 %164, label %166, label %165, !dbg !1225

; <label>:165:                                    ; preds = %162
  store i8 0, i8* %21, align 1, !dbg !1226
  store %struct.stat* null, %struct.stat** %18, align 8, !dbg !1228
  br label %251, !dbg !1229

; <label>:166:                                    ; preds = %162
  %167 = load i32, i32* %13, align 4, !dbg !1230
  %168 = icmp eq i32 %167, -1, !dbg !1232
  br i1 %168, label %169, label %191, !dbg !1233

; <label>:169:                                    ; preds = %166
  %170 = load i32, i32* %14, align 4, !dbg !1234
  %171 = icmp eq i32 %170, -1, !dbg !1235
  br i1 %171, label %172, label %191, !dbg !1236

; <label>:172:                                    ; preds = %169
  %173 = load %struct.Chown_option*, %struct.Chown_option** %15, align 8, !dbg !1237
  %174 = getelementptr inbounds %struct.Chown_option, %struct.Chown_option* %173, i32 0, i32 0, !dbg !1238
  %175 = load i32, i32* %174, align 8, !dbg !1238
  %176 = icmp eq i32 %175, 2, !dbg !1239
  br i1 %176, label %177, label %191, !dbg !1240

; <label>:177:                                    ; preds = %172
  %178 = load %struct.Chown_option*, %struct.Chown_option** %15, align 8, !dbg !1241
  %179 = getelementptr inbounds %struct.Chown_option, %struct.Chown_option* %178, i32 0, i32 2, !dbg !1242
  %180 = load %struct.dev_ino*, %struct.dev_ino** %179, align 8, !dbg !1242
  %181 = icmp ne %struct.dev_ino* %180, null, !dbg !1241
  br i1 %181, label %191, label %182, !dbg !1243

; <label>:182:                                    ; preds = %177
  %183 = load %struct.Chown_option*, %struct.Chown_option** %15, align 8, !dbg !1244
  %184 = getelementptr inbounds %struct.Chown_option, %struct.Chown_option* %183, i32 0, i32 3, !dbg !1245
  %185 = load i8, i8* %184, align 8, !dbg !1245
  %186 = trunc i8 %185 to i1, !dbg !1245
  br i1 %186, label %191, label %187, !dbg !1246

; <label>:187:                                    ; preds = %182
  store i8 1, i8* %21, align 1, !dbg !1247
  %188 = load %struct._ftsent*, %struct._ftsent** %10, align 8, !dbg !1249
  %189 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %188, i32 0, i32 17, !dbg !1250
  %190 = getelementptr inbounds [1 x %struct.stat], [1 x %struct.stat]* %189, i32 0, i32 0, !dbg !1249
  store %struct.stat* %190, %struct.stat** %18, align 8, !dbg !1251
  br label %250, !dbg !1252

; <label>:191:                                    ; preds = %182, %177, %172, %169, %166
  %192 = load %struct._ftsent*, %struct._ftsent** %10, align 8, !dbg !1253
  %193 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %192, i32 0, i32 17, !dbg !1255
  %194 = getelementptr inbounds [1 x %struct.stat], [1 x %struct.stat]* %193, i32 0, i32 0, !dbg !1253
  store %struct.stat* %194, %struct.stat** %18, align 8, !dbg !1256
  %195 = load %struct.Chown_option*, %struct.Chown_option** %15, align 8, !dbg !1257
  %196 = getelementptr inbounds %struct.Chown_option, %struct.Chown_option* %195, i32 0, i32 3, !dbg !1259
  %197 = load i8, i8* %196, align 8, !dbg !1259
  %198 = trunc i8 %197 to i1, !dbg !1259
  br i1 %198, label %199, label %224, !dbg !1260

; <label>:199:                                    ; preds = %191
  %200 = load %struct.stat*, %struct.stat** %18, align 8, !dbg !1261
  %201 = getelementptr inbounds %struct.stat, %struct.stat* %200, i32 0, i32 3, !dbg !1261
  %202 = load i32, i32* %201, align 8, !dbg !1261
  %203 = and i32 %202, 61440, !dbg !1261
  %204 = icmp eq i32 %203, 40960, !dbg !1261
  br i1 %204, label %205, label %224, !dbg !1262

; <label>:205:                                    ; preds = %199
  %206 = load %struct.FTS*, %struct.FTS** %9, align 8, !dbg !1263
  %207 = getelementptr inbounds %struct.FTS, %struct.FTS* %206, i32 0, i32 6, !dbg !1266
  %208 = load i32, i32* %207, align 4, !dbg !1266
  %209 = load i8*, i8** %17, align 8, !dbg !1267
  %210 = call i32 @fstatat(i32 %208, i8* %209, %struct.stat* %19, i32 0) #8, !dbg !1268
  %211 = icmp ne i32 %210, 0, !dbg !1269
  br i1 %211, label %212, label %223, !dbg !1270

; <label>:212:                                    ; preds = %205
  %213 = load %struct.Chown_option*, %struct.Chown_option** %15, align 8, !dbg !1271
  %214 = getelementptr inbounds %struct.Chown_option, %struct.Chown_option* %213, i32 0, i32 4, !dbg !1274
  %215 = load i8, i8* %214, align 1, !dbg !1274
  %216 = trunc i8 %215 to i1, !dbg !1274
  br i1 %216, label %222, label %217, !dbg !1275

; <label>:217:                                    ; preds = %212
  %218 = call i32* @__errno_location() #14, !dbg !1276
  %219 = load i32, i32* %218, align 4, !dbg !1276
  %220 = load i8*, i8** %16, align 8, !dbg !1277
  %221 = call i8* @quote(i8* %220), !dbg !1278
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %219, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.10.55, i32 0, i32 0), i8* %221), !dbg !1279
  br label %222, !dbg !1279

; <label>:222:                                    ; preds = %217, %212
  store i8 0, i8* %20, align 1, !dbg !1280
  br label %223, !dbg !1281

; <label>:223:                                    ; preds = %222, %205
  store %struct.stat* %19, %struct.stat** %18, align 8, !dbg !1282
  br label %224, !dbg !1283

; <label>:224:                                    ; preds = %223, %199, %191
  %225 = load i8, i8* %20, align 1, !dbg !1284
  %226 = trunc i8 %225 to i1, !dbg !1284
  br i1 %226, label %227, label %247, !dbg !1285

; <label>:227:                                    ; preds = %224
  %228 = load i32, i32* %13, align 4, !dbg !1286
  %229 = icmp eq i32 %228, -1, !dbg !1287
  br i1 %229, label %236, label %230, !dbg !1288

; <label>:230:                                    ; preds = %227
  %231 = load i32, i32* %13, align 4, !dbg !1289
  %232 = load %struct.stat*, %struct.stat** %18, align 8, !dbg !1290
  %233 = getelementptr inbounds %struct.stat, %struct.stat* %232, i32 0, i32 4, !dbg !1291
  %234 = load i32, i32* %233, align 4, !dbg !1291
  %235 = icmp eq i32 %231, %234, !dbg !1292
  br i1 %235, label %236, label %247, !dbg !1293

; <label>:236:                                    ; preds = %230, %227
  %237 = load i32, i32* %14, align 4, !dbg !1294
  %238 = icmp eq i32 %237, -1, !dbg !1295
  br i1 %238, label %245, label %239, !dbg !1296

; <label>:239:                                    ; preds = %236
  %240 = load i32, i32* %14, align 4, !dbg !1297
  %241 = load %struct.stat*, %struct.stat** %18, align 8, !dbg !1298
  %242 = getelementptr inbounds %struct.stat, %struct.stat* %241, i32 0, i32 5, !dbg !1299
  %243 = load i32, i32* %242, align 8, !dbg !1299
  %244 = icmp eq i32 %240, %243, !dbg !1300
  br label %245, !dbg !1296

; <label>:245:                                    ; preds = %239, %236
  %246 = phi i1 [ true, %236 ], [ %244, %239 ]
  br label %247

; <label>:247:                                    ; preds = %245, %230, %224
  %248 = phi i1 [ false, %230 ], [ false, %224 ], [ %246, %245 ]
  %249 = zext i1 %248 to i8, !dbg !1301
  store i8 %249, i8* %21, align 1, !dbg !1301
  br label %250

; <label>:250:                                    ; preds = %247, %187
  br label %251

; <label>:251:                                    ; preds = %250, %165
  %252 = load i8, i8* %20, align 1, !dbg !1302
  %253 = trunc i8 %252 to i1, !dbg !1302
  br i1 %253, label %254, label %317, !dbg !1304

; <label>:254:                                    ; preds = %251
  %255 = load %struct._ftsent*, %struct._ftsent** %10, align 8, !dbg !1305
  %256 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %255, i32 0, i32 14, !dbg !1305
  %257 = load i16, i16* %256, align 8, !dbg !1305
  %258 = zext i16 %257 to i32, !dbg !1305
  %259 = icmp eq i32 %258, 1, !dbg !1305
  br i1 %259, label %278, label %260, !dbg !1305

; <label>:260:                                    ; preds = %254
  %261 = load %struct._ftsent*, %struct._ftsent** %10, align 8, !dbg !1305
  %262 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %261, i32 0, i32 14, !dbg !1305
  %263 = load i16, i16* %262, align 8, !dbg !1305
  %264 = zext i16 %263 to i32, !dbg !1305
  %265 = icmp eq i32 %264, 2, !dbg !1305
  br i1 %265, label %278, label %266, !dbg !1305

; <label>:266:                                    ; preds = %260
  %267 = load %struct._ftsent*, %struct._ftsent** %10, align 8, !dbg !1305
  %268 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %267, i32 0, i32 14, !dbg !1305
  %269 = load i16, i16* %268, align 8, !dbg !1305
  %270 = zext i16 %269 to i32, !dbg !1305
  %271 = icmp eq i32 %270, 6, !dbg !1305
  br i1 %271, label %278, label %272, !dbg !1305

; <label>:272:                                    ; preds = %266
  %273 = load %struct._ftsent*, %struct._ftsent** %10, align 8, !dbg !1305
  %274 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %273, i32 0, i32 14, !dbg !1305
  %275 = load i16, i16* %274, align 8, !dbg !1305
  %276 = zext i16 %275 to i32, !dbg !1305
  %277 = icmp eq i32 %276, 4, !dbg !1305
  br i1 %277, label %278, label %317, !dbg !1306

; <label>:278:                                    ; preds = %272, %266, %260, %254
  %279 = load %struct.Chown_option*, %struct.Chown_option** %15, align 8, !dbg !1307
  %280 = getelementptr inbounds %struct.Chown_option, %struct.Chown_option* %279, i32 0, i32 2, !dbg !1307
  %281 = load %struct.dev_ino*, %struct.dev_ino** %280, align 8, !dbg !1307
  %282 = icmp ne %struct.dev_ino* %281, null, !dbg !1307
  br i1 %282, label %283, label %317, !dbg !1307

; <label>:283:                                    ; preds = %278
  %284 = load %struct.stat*, %struct.stat** %18, align 8, !dbg !1307
  %285 = getelementptr inbounds %struct.stat, %struct.stat* %284, i32 0, i32 1, !dbg !1307
  %286 = load i64, i64* %285, align 8, !dbg !1307
  %287 = load %struct.Chown_option*, %struct.Chown_option** %15, align 8, !dbg !1307
  %288 = getelementptr inbounds %struct.Chown_option, %struct.Chown_option* %287, i32 0, i32 2, !dbg !1307
  %289 = load %struct.dev_ino*, %struct.dev_ino** %288, align 8, !dbg !1307
  %290 = getelementptr inbounds %struct.dev_ino, %struct.dev_ino* %289, i32 0, i32 0, !dbg !1307
  %291 = load i64, i64* %290, align 8, !dbg !1307
  %292 = icmp eq i64 %286, %291, !dbg !1307
  br i1 %292, label %293, label %317, !dbg !1307

; <label>:293:                                    ; preds = %283
  %294 = load %struct.stat*, %struct.stat** %18, align 8, !dbg !1307
  %295 = getelementptr inbounds %struct.stat, %struct.stat* %294, i32 0, i32 0, !dbg !1307
  %296 = load i64, i64* %295, align 8, !dbg !1307
  %297 = load %struct.Chown_option*, %struct.Chown_option** %15, align 8, !dbg !1307
  %298 = getelementptr inbounds %struct.Chown_option, %struct.Chown_option* %297, i32 0, i32 2, !dbg !1307
  %299 = load %struct.dev_ino*, %struct.dev_ino** %298, align 8, !dbg !1307
  %300 = getelementptr inbounds %struct.dev_ino, %struct.dev_ino* %299, i32 0, i32 1, !dbg !1307
  %301 = load i64, i64* %300, align 8, !dbg !1307
  %302 = icmp eq i64 %296, %301, !dbg !1307
  br i1 %302, label %303, label %317, !dbg !1308

; <label>:303:                                    ; preds = %293
  br label %304, !dbg !1309, !llvm.loop !1311

; <label>:304:                                    ; preds = %303
  %305 = load i8*, i8** %16, align 8, !dbg !1312
  %306 = call i32 @strcmp(i8* %305, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.47, i32 0, i32 0)) #12, !dbg !1312
  %307 = icmp eq i32 %306, 0, !dbg !1312
  br i1 %307, label %308, label %311, !dbg !1315

; <label>:308:                                    ; preds = %304
  %309 = load i8*, i8** %16, align 8, !dbg !1312
  %310 = call i8* @quote(i8* %309), !dbg !1312
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.3.48, i32 0, i32 0), i8* %310), !dbg !1312
  br label %315, !dbg !1312

; <label>:311:                                    ; preds = %304
  %312 = load i8*, i8** %16, align 8, !dbg !1312
  %313 = call i8* @quote_n(i32 0, i8* %312), !dbg !1312
  %314 = call i8* @quote_n(i32 1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.47, i32 0, i32 0)), !dbg !1312
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.4.49, i32 0, i32 0), i8* %313, i8* %314), !dbg !1312
  br label %315

; <label>:315:                                    ; preds = %311, %308
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.5.50, i32 0, i32 0)), !dbg !1315
  br label %316, !dbg !1315

; <label>:316:                                    ; preds = %315
  store i1 false, i1* %8, align 1, !dbg !1316
  br label %477, !dbg !1316

; <label>:317:                                    ; preds = %293, %283, %278, %272, %251
  %318 = load i8, i8* %21, align 1, !dbg !1317
  %319 = trunc i8 %318 to i1, !dbg !1317
  br i1 %319, label %320, label %391, !dbg !1319

; <label>:320:                                    ; preds = %317
  %321 = load %struct.Chown_option*, %struct.Chown_option** %15, align 8, !dbg !1320
  %322 = getelementptr inbounds %struct.Chown_option, %struct.Chown_option* %321, i32 0, i32 3, !dbg !1323
  %323 = load i8, i8* %322, align 8, !dbg !1323
  %324 = trunc i8 %323 to i1, !dbg !1323
  br i1 %324, label %343, label %325, !dbg !1324

; <label>:325:                                    ; preds = %320
  %326 = load %struct.FTS*, %struct.FTS** %9, align 8, !dbg !1325
  %327 = getelementptr inbounds %struct.FTS, %struct.FTS* %326, i32 0, i32 6, !dbg !1327
  %328 = load i32, i32* %327, align 4, !dbg !1327
  %329 = load i8*, i8** %17, align 8, !dbg !1328
  %330 = load i32, i32* %11, align 4, !dbg !1329
  %331 = load i32, i32* %12, align 4, !dbg !1330
  %332 = call i32 @lchownat(i32 %328, i8* %329, i32 %330, i32 %331), !dbg !1331
  %333 = icmp eq i32 %332, 0, !dbg !1332
  %334 = zext i1 %333 to i8, !dbg !1333
  store i8 %334, i8* %20, align 1, !dbg !1333
  %335 = load i8, i8* %20, align 1, !dbg !1334
  %336 = trunc i8 %335 to i1, !dbg !1334
  br i1 %336, label %342, label %337, !dbg !1336

; <label>:337:                                    ; preds = %325
  %338 = call i32* @__errno_location() #14, !dbg !1337
  %339 = load i32, i32* %338, align 4, !dbg !1337
  %340 = icmp eq i32 %339, 95, !dbg !1338
  br i1 %340, label %341, label %342, !dbg !1339

; <label>:341:                                    ; preds = %337
  store i8 1, i8* %20, align 1, !dbg !1340
  store i8 0, i8* %22, align 1, !dbg !1342
  br label %342, !dbg !1343

; <label>:342:                                    ; preds = %341, %337, %325
  br label %370, !dbg !1344

; <label>:343:                                    ; preds = %320
  call void @llvm.dbg.declare(metadata i32* %23, metadata !1345, metadata !DIExpression()), !dbg !1347
  %344 = load %struct.FTS*, %struct.FTS** %9, align 8, !dbg !1348
  %345 = getelementptr inbounds %struct.FTS, %struct.FTS* %344, i32 0, i32 6, !dbg !1349
  %346 = load i32, i32* %345, align 4, !dbg !1349
  %347 = load i8*, i8** %17, align 8, !dbg !1350
  %348 = load %struct.stat*, %struct.stat** %18, align 8, !dbg !1351
  %349 = load i32, i32* %11, align 4, !dbg !1352
  %350 = load i32, i32* %12, align 4, !dbg !1353
  %351 = load i32, i32* %13, align 4, !dbg !1354
  %352 = load i32, i32* %14, align 4, !dbg !1355
  %353 = call i32 @restricted_chown(i32 %346, i8* %347, %struct.stat* %348, i32 %349, i32 %350, i32 %351, i32 %352), !dbg !1356
  store i32 %353, i32* %23, align 4, !dbg !1347
  %354 = load i32, i32* %23, align 4, !dbg !1357
  switch i32 %354, label %368 [
    i32 2, label %355
    i32 5, label %356
    i32 6, label %366
    i32 4, label %367
    i32 3, label %367
  ], !dbg !1358

; <label>:355:                                    ; preds = %343
  br label %369, !dbg !1359

; <label>:356:                                    ; preds = %343
  %357 = load %struct.FTS*, %struct.FTS** %9, align 8, !dbg !1361
  %358 = getelementptr inbounds %struct.FTS, %struct.FTS* %357, i32 0, i32 6, !dbg !1362
  %359 = load i32, i32* %358, align 4, !dbg !1362
  %360 = load i8*, i8** %17, align 8, !dbg !1363
  %361 = load i32, i32* %11, align 4, !dbg !1364
  %362 = load i32, i32* %12, align 4, !dbg !1365
  %363 = call i32 @chownat(i32 %359, i8* %360, i32 %361, i32 %362), !dbg !1366
  %364 = icmp eq i32 %363, 0, !dbg !1367
  %365 = zext i1 %364 to i8, !dbg !1368
  store i8 %365, i8* %20, align 1, !dbg !1368
  br label %369, !dbg !1369

; <label>:366:                                    ; preds = %343
  store i8 0, i8* %20, align 1, !dbg !1370
  br label %369, !dbg !1371

; <label>:367:                                    ; preds = %343, %343
  store i8 0, i8* %21, align 1, !dbg !1372
  store i8 0, i8* %20, align 1, !dbg !1373
  br label %369, !dbg !1374

; <label>:368:                                    ; preds = %343
  call void @abort() #11, !dbg !1375
  unreachable, !dbg !1375

; <label>:369:                                    ; preds = %367, %366, %356, %355
  br label %370

; <label>:370:                                    ; preds = %369, %342
  %371 = load i8, i8* %21, align 1, !dbg !1376
  %372 = trunc i8 %371 to i1, !dbg !1376
  br i1 %372, label %373, label %390, !dbg !1378

; <label>:373:                                    ; preds = %370
  %374 = load i8, i8* %20, align 1, !dbg !1379
  %375 = trunc i8 %374 to i1, !dbg !1379
  br i1 %375, label %390, label %376, !dbg !1380

; <label>:376:                                    ; preds = %373
  %377 = load %struct.Chown_option*, %struct.Chown_option** %15, align 8, !dbg !1381
  %378 = getelementptr inbounds %struct.Chown_option, %struct.Chown_option* %377, i32 0, i32 4, !dbg !1382
  %379 = load i8, i8* %378, align 1, !dbg !1382
  %380 = trunc i8 %379 to i1, !dbg !1382
  br i1 %380, label %390, label %381, !dbg !1383

; <label>:381:                                    ; preds = %376
  %382 = call i32* @__errno_location() #14, !dbg !1384
  %383 = load i32, i32* %382, align 4, !dbg !1384
  %384 = load i32, i32* %11, align 4, !dbg !1385
  %385 = icmp ne i32 %384, -1, !dbg !1386
  %386 = zext i1 %385 to i64, !dbg !1385
  %387 = select i1 %385, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.11.56, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.12.57, i32 0, i32 0), !dbg !1385
  %388 = load i8*, i8** %16, align 8, !dbg !1387
  %389 = call i8* @quote(i8* %388), !dbg !1388
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %383, i8* %387, i8* %389), !dbg !1389
  br label %390, !dbg !1389

; <label>:390:                                    ; preds = %381, %376, %373, %370
  br label %391, !dbg !1390

; <label>:391:                                    ; preds = %390, %317
  %392 = load %struct.Chown_option*, %struct.Chown_option** %15, align 8, !dbg !1391
  %393 = getelementptr inbounds %struct.Chown_option, %struct.Chown_option* %392, i32 0, i32 0, !dbg !1393
  %394 = load i32, i32* %393, align 8, !dbg !1393
  %395 = icmp ne i32 %394, 2, !dbg !1394
  br i1 %395, label %396, label %465, !dbg !1395

; <label>:396:                                    ; preds = %391
  call void @llvm.dbg.declare(metadata i8* %24, metadata !1396, metadata !DIExpression()), !dbg !1398
  %397 = load i8, i8* %21, align 1, !dbg !1399
  %398 = trunc i8 %397 to i1, !dbg !1399
  br i1 %398, label %399, label %428, !dbg !1400

; <label>:399:                                    ; preds = %396
  %400 = load i8, i8* %20, align 1, !dbg !1401
  %401 = trunc i8 %400 to i1, !dbg !1401
  br i1 %401, label %402, label %428, !dbg !1402

; <label>:402:                                    ; preds = %399
  %403 = load i8, i8* %22, align 1, !dbg !1403
  %404 = trunc i8 %403 to i1, !dbg !1403
  br i1 %404, label %405, label %428, !dbg !1404

; <label>:405:                                    ; preds = %402
  %406 = load i32, i32* %11, align 4, !dbg !1405
  %407 = icmp eq i32 %406, -1, !dbg !1406
  br i1 %407, label %414, label %408, !dbg !1407

; <label>:408:                                    ; preds = %405
  %409 = load i32, i32* %11, align 4, !dbg !1408
  %410 = load %struct.stat*, %struct.stat** %18, align 8, !dbg !1409
  %411 = getelementptr inbounds %struct.stat, %struct.stat* %410, i32 0, i32 4, !dbg !1410
  %412 = load i32, i32* %411, align 4, !dbg !1410
  %413 = icmp eq i32 %409, %412, !dbg !1411
  br i1 %413, label %414, label %425, !dbg !1412

; <label>:414:                                    ; preds = %408, %405
  %415 = load i32, i32* %12, align 4, !dbg !1413
  %416 = icmp eq i32 %415, -1, !dbg !1414
  br i1 %416, label %423, label %417, !dbg !1415

; <label>:417:                                    ; preds = %414
  %418 = load i32, i32* %12, align 4, !dbg !1416
  %419 = load %struct.stat*, %struct.stat** %18, align 8, !dbg !1417
  %420 = getelementptr inbounds %struct.stat, %struct.stat* %419, i32 0, i32 5, !dbg !1418
  %421 = load i32, i32* %420, align 8, !dbg !1418
  %422 = icmp eq i32 %418, %421, !dbg !1419
  br label %423, !dbg !1415

; <label>:423:                                    ; preds = %417, %414
  %424 = phi i1 [ true, %414 ], [ %422, %417 ]
  br label %425

; <label>:425:                                    ; preds = %423, %408
  %426 = phi i1 [ false, %408 ], [ %424, %423 ]
  %427 = xor i1 %426, true, !dbg !1420
  br label %428

; <label>:428:                                    ; preds = %425, %402, %399, %396
  %429 = phi i1 [ false, %402 ], [ false, %399 ], [ false, %396 ], [ %427, %425 ]
  %430 = zext i1 %429 to i8, !dbg !1398
  store i8 %430, i8* %24, align 1, !dbg !1398
  %431 = load i8, i8* %24, align 1, !dbg !1421
  %432 = trunc i8 %431 to i1, !dbg !1421
  br i1 %432, label %438, label %433, !dbg !1423

; <label>:433:                                    ; preds = %428
  %434 = load %struct.Chown_option*, %struct.Chown_option** %15, align 8, !dbg !1424
  %435 = getelementptr inbounds %struct.Chown_option, %struct.Chown_option* %434, i32 0, i32 0, !dbg !1425
  %436 = load i32, i32* %435, align 8, !dbg !1425
  %437 = icmp eq i32 %436, 0, !dbg !1426
  br i1 %437, label %438, label %464, !dbg !1427

; <label>:438:                                    ; preds = %433, %428
  call void @llvm.dbg.declare(metadata i32* %25, metadata !1428, metadata !DIExpression()), !dbg !1430
  %439 = load i8, i8* %20, align 1, !dbg !1431
  %440 = trunc i8 %439 to i1, !dbg !1431
  br i1 %440, label %442, label %441, !dbg !1432

; <label>:441:                                    ; preds = %438
  br label %454, !dbg !1432

; <label>:442:                                    ; preds = %438
  %443 = load i8, i8* %22, align 1, !dbg !1433
  %444 = trunc i8 %443 to i1, !dbg !1433
  br i1 %444, label %446, label %445, !dbg !1434

; <label>:445:                                    ; preds = %442
  br label %452, !dbg !1434

; <label>:446:                                    ; preds = %442
  %447 = load i8, i8* %24, align 1, !dbg !1435
  %448 = trunc i8 %447 to i1, !dbg !1435
  %449 = xor i1 %448, true, !dbg !1436
  %450 = zext i1 %449 to i64, !dbg !1436
  %451 = select i1 %449, i32 4, i32 2, !dbg !1436
  br label %452, !dbg !1434

; <label>:452:                                    ; preds = %446, %445
  %453 = phi i32 [ 1, %445 ], [ %451, %446 ], !dbg !1434
  br label %454, !dbg !1432

; <label>:454:                                    ; preds = %452, %441
  %455 = phi i32 [ 3, %441 ], [ %453, %452 ], !dbg !1432
  store i32 %455, i32* %25, align 4, !dbg !1430
  %456 = load i8*, i8** %16, align 8, !dbg !1437
  %457 = load i32, i32* %25, align 4, !dbg !1438
  %458 = load %struct.Chown_option*, %struct.Chown_option** %15, align 8, !dbg !1439
  %459 = getelementptr inbounds %struct.Chown_option, %struct.Chown_option* %458, i32 0, i32 5, !dbg !1440
  %460 = load i8*, i8** %459, align 8, !dbg !1440
  %461 = load %struct.Chown_option*, %struct.Chown_option** %15, align 8, !dbg !1441
  %462 = getelementptr inbounds %struct.Chown_option, %struct.Chown_option* %461, i32 0, i32 6, !dbg !1442
  %463 = load i8*, i8** %462, align 8, !dbg !1442
  call void @describe_change(i8* %456, i32 %457, i8* %460, i8* %463), !dbg !1443
  br label %464, !dbg !1444

; <label>:464:                                    ; preds = %454, %433
  br label %465, !dbg !1445

; <label>:465:                                    ; preds = %464, %391
  %466 = load %struct.Chown_option*, %struct.Chown_option** %15, align 8, !dbg !1446
  %467 = getelementptr inbounds %struct.Chown_option, %struct.Chown_option* %466, i32 0, i32 1, !dbg !1448
  %468 = load i8, i8* %467, align 4, !dbg !1448
  %469 = trunc i8 %468 to i1, !dbg !1448
  br i1 %469, label %474, label %470, !dbg !1449

; <label>:470:                                    ; preds = %465
  %471 = load %struct.FTS*, %struct.FTS** %9, align 8, !dbg !1450
  %472 = load %struct._ftsent*, %struct._ftsent** %10, align 8, !dbg !1451
  %473 = call i32 @fts_set(%struct.FTS* %471, %struct._ftsent* %472, i32 4), !dbg !1452
  br label %474, !dbg !1452

; <label>:474:                                    ; preds = %470, %465
  %475 = load i8, i8* %20, align 1, !dbg !1453
  %476 = trunc i8 %475 to i1, !dbg !1453
  store i1 %476, i1* %8, align 1, !dbg !1454
  br label %477, !dbg !1454

; <label>:477:                                    ; preds = %474, %316, %159, %109, %97, %90, %83
  %478 = load i1, i1* %8, align 1, !dbg !1455
  ret i1 %478, !dbg !1455
}

; Function Attrs: nounwind readonly
declare i32 @strcmp(i8*, i8*) #6

; Function Attrs: noinline nounwind uwtable
define internal void @ignore_ptr(i8*) #3 !dbg !1456 {
  %2 = alloca i8*, align 8
  store i8* %0, i8** %2, align 8
  call void @llvm.dbg.declare(metadata i8** %2, metadata !1460, metadata !DIExpression()), !dbg !1461
  %3 = load i8*, i8** %2, align 8, !dbg !1462
  ret void, !dbg !1463
}

; Function Attrs: nounwind
declare i32 @fstatat(i32, i8*, %struct.stat*, i32) #5

; Function Attrs: noinline nounwind uwtable
define internal i32 @lchownat(i32, i8*, i32, i32) #3 !dbg !1464 {
  %5 = alloca i32, align 4
  %6 = alloca i8*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  store i32 %0, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !1468, metadata !DIExpression()), !dbg !1469
  store i8* %1, i8** %6, align 8
  call void @llvm.dbg.declare(metadata i8** %6, metadata !1470, metadata !DIExpression()), !dbg !1471
  store i32 %2, i32* %7, align 4
  call void @llvm.dbg.declare(metadata i32* %7, metadata !1472, metadata !DIExpression()), !dbg !1473
  store i32 %3, i32* %8, align 4
  call void @llvm.dbg.declare(metadata i32* %8, metadata !1474, metadata !DIExpression()), !dbg !1475
  %9 = load i32, i32* %5, align 4, !dbg !1476
  %10 = load i8*, i8** %6, align 8, !dbg !1477
  %11 = load i32, i32* %7, align 4, !dbg !1478
  %12 = load i32, i32* %8, align 4, !dbg !1479
  %13 = call i32 @fchownat(i32 %9, i8* %10, i32 %11, i32 %12, i32 256) #8, !dbg !1480
  ret i32 %13, !dbg !1481
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @restricted_chown(i32, i8*, %struct.stat*, i32, i32, i32, i32) #3 !dbg !1482 {
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i8*, align 8
  %11 = alloca %struct.stat*, align 8
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca %struct.stat, align 8
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  store i32 %0, i32* %9, align 4
  call void @llvm.dbg.declare(metadata i32* %9, metadata !1485, metadata !DIExpression()), !dbg !1486
  store i8* %1, i8** %10, align 8
  call void @llvm.dbg.declare(metadata i8** %10, metadata !1487, metadata !DIExpression()), !dbg !1488
  store %struct.stat* %2, %struct.stat** %11, align 8
  call void @llvm.dbg.declare(metadata %struct.stat** %11, metadata !1489, metadata !DIExpression()), !dbg !1490
  store i32 %3, i32* %12, align 4
  call void @llvm.dbg.declare(metadata i32* %12, metadata !1491, metadata !DIExpression()), !dbg !1492
  store i32 %4, i32* %13, align 4
  call void @llvm.dbg.declare(metadata i32* %13, metadata !1493, metadata !DIExpression()), !dbg !1494
  store i32 %5, i32* %14, align 4
  call void @llvm.dbg.declare(metadata i32* %14, metadata !1495, metadata !DIExpression()), !dbg !1496
  store i32 %6, i32* %15, align 4
  call void @llvm.dbg.declare(metadata i32* %15, metadata !1497, metadata !DIExpression()), !dbg !1498
  call void @llvm.dbg.declare(metadata i32* %16, metadata !1499, metadata !DIExpression()), !dbg !1500
  store i32 2, i32* %16, align 4, !dbg !1500
  call void @llvm.dbg.declare(metadata %struct.stat* %17, metadata !1501, metadata !DIExpression()), !dbg !1502
  call void @llvm.dbg.declare(metadata i32* %18, metadata !1503, metadata !DIExpression()), !dbg !1504
  store i32 2304, i32* %18, align 4, !dbg !1504
  call void @llvm.dbg.declare(metadata i32* %19, metadata !1505, metadata !DIExpression()), !dbg !1506
  %21 = load i32, i32* %14, align 4, !dbg !1507
  %22 = icmp eq i32 %21, -1, !dbg !1509
  br i1 %22, label %23, label %27, !dbg !1510

; <label>:23:                                     ; preds = %7
  %24 = load i32, i32* %15, align 4, !dbg !1511
  %25 = icmp eq i32 %24, -1, !dbg !1512
  br i1 %25, label %26, label %27, !dbg !1513

; <label>:26:                                     ; preds = %23
  store i32 5, i32* %8, align 4, !dbg !1514
  br label %136, !dbg !1514

; <label>:27:                                     ; preds = %23, %7
  %28 = load %struct.stat*, %struct.stat** %11, align 8, !dbg !1515
  %29 = getelementptr inbounds %struct.stat, %struct.stat* %28, i32 0, i32 3, !dbg !1515
  %30 = load i32, i32* %29, align 8, !dbg !1515
  %31 = and i32 %30, 61440, !dbg !1515
  %32 = icmp eq i32 %31, 32768, !dbg !1515
  br i1 %32, label %44, label %33, !dbg !1517

; <label>:33:                                     ; preds = %27
  %34 = load %struct.stat*, %struct.stat** %11, align 8, !dbg !1518
  %35 = getelementptr inbounds %struct.stat, %struct.stat* %34, i32 0, i32 3, !dbg !1518
  %36 = load i32, i32* %35, align 8, !dbg !1518
  %37 = and i32 %36, 61440, !dbg !1518
  %38 = icmp eq i32 %37, 16384, !dbg !1518
  br i1 %38, label %39, label %42, !dbg !1521

; <label>:39:                                     ; preds = %33
  %40 = load i32, i32* %18, align 4, !dbg !1522
  %41 = or i32 %40, 65536, !dbg !1522
  store i32 %41, i32* %18, align 4, !dbg !1522
  br label %43, !dbg !1523

; <label>:42:                                     ; preds = %33
  store i32 5, i32* %8, align 4, !dbg !1524
  br label %136, !dbg !1524

; <label>:43:                                     ; preds = %39
  br label %44, !dbg !1525

; <label>:44:                                     ; preds = %43, %27
  %45 = load i32, i32* %9, align 4, !dbg !1526
  %46 = load i8*, i8** %10, align 8, !dbg !1527
  %47 = load i32, i32* %18, align 4, !dbg !1528
  %48 = or i32 0, %47, !dbg !1529
  %49 = call i32 (i32, i8*, i32, ...) @openat(i32 %45, i8* %46, i32 %48), !dbg !1530
  store i32 %49, i32* %19, align 4, !dbg !1531
  %50 = load i32, i32* %19, align 4, !dbg !1532
  %51 = icmp sle i32 0, %50, !dbg !1534
  br i1 %51, label %75, label %52, !dbg !1535

; <label>:52:                                     ; preds = %44
  %53 = call i32* @__errno_location() #14, !dbg !1536
  %54 = load i32, i32* %53, align 4, !dbg !1536
  %55 = icmp eq i32 %54, 13, !dbg !1537
  br i1 %55, label %56, label %69, !dbg !1538

; <label>:56:                                     ; preds = %52
  %57 = load %struct.stat*, %struct.stat** %11, align 8, !dbg !1539
  %58 = getelementptr inbounds %struct.stat, %struct.stat* %57, i32 0, i32 3, !dbg !1539
  %59 = load i32, i32* %58, align 8, !dbg !1539
  %60 = and i32 %59, 61440, !dbg !1539
  %61 = icmp eq i32 %60, 32768, !dbg !1539
  br i1 %61, label %62, label %69, !dbg !1540

; <label>:62:                                     ; preds = %56
  %63 = load i32, i32* %9, align 4, !dbg !1541
  %64 = load i8*, i8** %10, align 8, !dbg !1542
  %65 = load i32, i32* %18, align 4, !dbg !1543
  %66 = or i32 1, %65, !dbg !1544
  %67 = call i32 (i32, i8*, i32, ...) @openat(i32 %63, i8* %64, i32 %66), !dbg !1545
  store i32 %67, i32* %19, align 4, !dbg !1546
  %68 = icmp sle i32 0, %67, !dbg !1547
  br i1 %68, label %75, label %69, !dbg !1548

; <label>:69:                                     ; preds = %62, %56, %52
  %70 = call i32* @__errno_location() #14, !dbg !1549
  %71 = load i32, i32* %70, align 4, !dbg !1549
  %72 = icmp eq i32 %71, 13, !dbg !1550
  %73 = zext i1 %72 to i64, !dbg !1549
  %74 = select i1 %72, i32 5, i32 6, !dbg !1549
  store i32 %74, i32* %8, align 4, !dbg !1551
  br label %136, !dbg !1551

; <label>:75:                                     ; preds = %62, %44
  %76 = load i32, i32* %19, align 4, !dbg !1552
  %77 = call i32 @fstat(i32 %76, %struct.stat* %17) #8, !dbg !1554
  %78 = icmp ne i32 %77, 0, !dbg !1555
  br i1 %78, label %79, label %80, !dbg !1556

; <label>:79:                                     ; preds = %75
  store i32 6, i32* %16, align 4, !dbg !1557
  br label %128, !dbg !1558

; <label>:80:                                     ; preds = %75
  %81 = load %struct.stat*, %struct.stat** %11, align 8, !dbg !1559
  %82 = getelementptr inbounds %struct.stat, %struct.stat* %81, i32 0, i32 1, !dbg !1559
  %83 = load i64, i64* %82, align 8, !dbg !1559
  %84 = getelementptr inbounds %struct.stat, %struct.stat* %17, i32 0, i32 1, !dbg !1559
  %85 = load i64, i64* %84, align 8, !dbg !1559
  %86 = icmp eq i64 %83, %85, !dbg !1559
  br i1 %86, label %87, label %94, !dbg !1559

; <label>:87:                                     ; preds = %80
  %88 = load %struct.stat*, %struct.stat** %11, align 8, !dbg !1559
  %89 = getelementptr inbounds %struct.stat, %struct.stat* %88, i32 0, i32 0, !dbg !1559
  %90 = load i64, i64* %89, align 8, !dbg !1559
  %91 = getelementptr inbounds %struct.stat, %struct.stat* %17, i32 0, i32 0, !dbg !1559
  %92 = load i64, i64* %91, align 8, !dbg !1559
  %93 = icmp eq i64 %90, %92, !dbg !1559
  br i1 %93, label %95, label %94, !dbg !1561

; <label>:94:                                     ; preds = %87, %80
  store i32 4, i32* %16, align 4, !dbg !1562
  br label %127, !dbg !1563

; <label>:95:                                     ; preds = %87
  %96 = load i32, i32* %14, align 4, !dbg !1564
  %97 = icmp eq i32 %96, -1, !dbg !1566
  br i1 %97, label %103, label %98, !dbg !1567

; <label>:98:                                     ; preds = %95
  %99 = load i32, i32* %14, align 4, !dbg !1568
  %100 = getelementptr inbounds %struct.stat, %struct.stat* %17, i32 0, i32 4, !dbg !1569
  %101 = load i32, i32* %100, align 4, !dbg !1569
  %102 = icmp eq i32 %99, %101, !dbg !1570
  br i1 %102, label %103, label %126, !dbg !1571

; <label>:103:                                    ; preds = %98, %95
  %104 = load i32, i32* %15, align 4, !dbg !1572
  %105 = icmp eq i32 %104, -1, !dbg !1573
  br i1 %105, label %111, label %106, !dbg !1574

; <label>:106:                                    ; preds = %103
  %107 = load i32, i32* %15, align 4, !dbg !1575
  %108 = getelementptr inbounds %struct.stat, %struct.stat* %17, i32 0, i32 5, !dbg !1576
  %109 = load i32, i32* %108, align 8, !dbg !1576
  %110 = icmp eq i32 %107, %109, !dbg !1577
  br i1 %110, label %111, label %126, !dbg !1578

; <label>:111:                                    ; preds = %106, %103
  %112 = load i32, i32* %19, align 4, !dbg !1579
  %113 = load i32, i32* %12, align 4, !dbg !1582
  %114 = load i32, i32* %13, align 4, !dbg !1583
  %115 = call i32 @fchown(i32 %112, i32 %113, i32 %114) #8, !dbg !1584
  %116 = icmp eq i32 %115, 0, !dbg !1585
  br i1 %116, label %117, label %124, !dbg !1586

; <label>:117:                                    ; preds = %111
  %118 = load i32, i32* %19, align 4, !dbg !1587
  %119 = call i32 @close(i32 %118), !dbg !1589
  %120 = icmp eq i32 %119, 0, !dbg !1590
  %121 = zext i1 %120 to i64, !dbg !1589
  %122 = select i1 %120, i32 2, i32 6, !dbg !1589
  store i32 %122, i32* %16, align 4, !dbg !1591
  %123 = load i32, i32* %16, align 4, !dbg !1592
  store i32 %123, i32* %8, align 4, !dbg !1593
  br label %136, !dbg !1593

; <label>:124:                                    ; preds = %111
  store i32 6, i32* %16, align 4, !dbg !1594
  br label %125

; <label>:125:                                    ; preds = %124
  br label %126, !dbg !1596

; <label>:126:                                    ; preds = %125, %106, %98
  br label %127

; <label>:127:                                    ; preds = %126, %94
  br label %128

; <label>:128:                                    ; preds = %127, %79
  call void @llvm.dbg.declare(metadata i32* %20, metadata !1597, metadata !DIExpression()), !dbg !1599
  %129 = call i32* @__errno_location() #14, !dbg !1600
  %130 = load i32, i32* %129, align 4, !dbg !1600
  store i32 %130, i32* %20, align 4, !dbg !1599
  %131 = load i32, i32* %19, align 4, !dbg !1601
  %132 = call i32 @close(i32 %131), !dbg !1602
  %133 = load i32, i32* %20, align 4, !dbg !1603
  %134 = call i32* @__errno_location() #14, !dbg !1604
  store i32 %133, i32* %134, align 4, !dbg !1605
  %135 = load i32, i32* %16, align 4, !dbg !1606
  store i32 %135, i32* %8, align 4, !dbg !1607
  br label %136, !dbg !1607

; <label>:136:                                    ; preds = %128, %117, %69, %42, %26
  %137 = load i32, i32* %8, align 4, !dbg !1608
  ret i32 %137, !dbg !1608
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @chownat(i32, i8*, i32, i32) #3 !dbg !1609 {
  %5 = alloca i32, align 4
  %6 = alloca i8*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  store i32 %0, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !1610, metadata !DIExpression()), !dbg !1611
  store i8* %1, i8** %6, align 8
  call void @llvm.dbg.declare(metadata i8** %6, metadata !1612, metadata !DIExpression()), !dbg !1613
  store i32 %2, i32* %7, align 4
  call void @llvm.dbg.declare(metadata i32* %7, metadata !1614, metadata !DIExpression()), !dbg !1615
  store i32 %3, i32* %8, align 4
  call void @llvm.dbg.declare(metadata i32* %8, metadata !1616, metadata !DIExpression()), !dbg !1617
  %9 = load i32, i32* %5, align 4, !dbg !1618
  %10 = load i8*, i8** %6, align 8, !dbg !1619
  %11 = load i32, i32* %7, align 4, !dbg !1620
  %12 = load i32, i32* %8, align 4, !dbg !1621
  %13 = call i32 @fchownat(i32 %9, i8* %10, i32 %11, i32 %12, i32 0) #8, !dbg !1622
  ret i32 %13, !dbg !1623
}

; Function Attrs: noreturn nounwind
declare void @abort() #4

; Function Attrs: noinline nounwind uwtable
define internal void @describe_change(i8*, i32, i8*, i8*) #3 !dbg !1624 {
  %5 = alloca i8*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i8*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i8*, align 8
  %10 = alloca i8*, align 8
  %11 = alloca i8*, align 8
  store i8* %0, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !1627, metadata !DIExpression()), !dbg !1628
  store i32 %1, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !1629, metadata !DIExpression()), !dbg !1630
  store i8* %2, i8** %7, align 8
  call void @llvm.dbg.declare(metadata i8** %7, metadata !1631, metadata !DIExpression()), !dbg !1632
  store i8* %3, i8** %8, align 8
  call void @llvm.dbg.declare(metadata i8** %8, metadata !1633, metadata !DIExpression()), !dbg !1634
  call void @llvm.dbg.declare(metadata i8** %9, metadata !1635, metadata !DIExpression()), !dbg !1636
  call void @llvm.dbg.declare(metadata i8** %10, metadata !1637, metadata !DIExpression()), !dbg !1638
  call void @llvm.dbg.declare(metadata i8** %11, metadata !1639, metadata !DIExpression()), !dbg !1640
  store i8* null, i8** %11, align 8, !dbg !1640
  %12 = load i32, i32* %6, align 4, !dbg !1641
  %13 = icmp eq i32 %12, 1, !dbg !1643
  br i1 %13, label %14, label %18, !dbg !1644

; <label>:14:                                     ; preds = %4
  %15 = load i8*, i8** %5, align 8, !dbg !1645
  %16 = call i8* @quote(i8* %15), !dbg !1647
  %17 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.13.58, i32 0, i32 0), i8* %16), !dbg !1648
  br label %88, !dbg !1649

; <label>:18:                                     ; preds = %4
  %19 = load i8*, i8** %7, align 8, !dbg !1650
  %20 = icmp ne i8* %19, null, !dbg !1650
  br i1 %20, label %21, label %43, !dbg !1652

; <label>:21:                                     ; preds = %18
  %22 = load i8*, i8** %8, align 8, !dbg !1653
  %23 = icmp ne i8* %22, null, !dbg !1653
  br i1 %23, label %24, label %40, !dbg !1656

; <label>:24:                                     ; preds = %21
  %25 = load i8*, i8** %7, align 8, !dbg !1657
  %26 = call i64 @strlen(i8* %25) #12, !dbg !1659
  %27 = add i64 %26, 1, !dbg !1660
  %28 = load i8*, i8** %8, align 8, !dbg !1661
  %29 = call i64 @strlen(i8* %28) #12, !dbg !1662
  %30 = add i64 %27, %29, !dbg !1663
  %31 = add i64 %30, 1, !dbg !1664
  %32 = call noalias i8* @xmalloc(i64 %31), !dbg !1665
  store i8* %32, i8** %11, align 8, !dbg !1666
  %33 = load i8*, i8** %11, align 8, !dbg !1667
  %34 = load i8*, i8** %7, align 8, !dbg !1668
  %35 = call i8* @stpcpy(i8* %33, i8* %34) #8, !dbg !1669
  %36 = call i8* @stpcpy(i8* %35, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.14.59, i32 0, i32 0)) #8, !dbg !1670
  %37 = load i8*, i8** %8, align 8, !dbg !1671
  %38 = call i8* @stpcpy(i8* %36, i8* %37) #8, !dbg !1672
  %39 = load i8*, i8** %11, align 8, !dbg !1673
  store i8* %39, i8** %10, align 8, !dbg !1674
  br label %42, !dbg !1675

; <label>:40:                                     ; preds = %21
  %41 = load i8*, i8** %7, align 8, !dbg !1676
  store i8* %41, i8** %10, align 8, !dbg !1678
  br label %42

; <label>:42:                                     ; preds = %40, %24
  br label %45, !dbg !1679

; <label>:43:                                     ; preds = %18
  %44 = load i8*, i8** %8, align 8, !dbg !1680
  store i8* %44, i8** %10, align 8, !dbg !1682
  br label %45

; <label>:45:                                     ; preds = %43, %42
  %46 = load i32, i32* %6, align 4, !dbg !1683
  switch i32 %46, label %80 [
    i32 2, label %47
    i32 3, label %58
    i32 4, label %69
  ], !dbg !1684

; <label>:47:                                     ; preds = %45
  %48 = load i8*, i8** %7, align 8, !dbg !1685
  %49 = icmp ne i8* %48, null, !dbg !1685
  br i1 %49, label %50, label %51, !dbg !1685

; <label>:50:                                     ; preds = %47
  br label %56, !dbg !1685

; <label>:51:                                     ; preds = %47
  %52 = load i8*, i8** %8, align 8, !dbg !1687
  %53 = icmp ne i8* %52, null, !dbg !1687
  %54 = zext i1 %53 to i64, !dbg !1687
  %55 = select i1 %53, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.16.60, i32 0, i32 0), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.17.61, i32 0, i32 0), !dbg !1687
  br label %56, !dbg !1685

; <label>:56:                                     ; preds = %51, %50
  %57 = phi i8* [ getelementptr inbounds ([31 x i8], [31 x i8]* @.str.15.62, i32 0, i32 0), %50 ], [ %55, %51 ], !dbg !1685
  store i8* %57, i8** %9, align 8, !dbg !1688
  br label %81, !dbg !1689

; <label>:58:                                     ; preds = %45
  %59 = load i8*, i8** %7, align 8, !dbg !1690
  %60 = icmp ne i8* %59, null, !dbg !1690
  br i1 %60, label %61, label %62, !dbg !1690

; <label>:61:                                     ; preds = %58
  br label %67, !dbg !1690

; <label>:62:                                     ; preds = %58
  %63 = load i8*, i8** %8, align 8, !dbg !1691
  %64 = icmp ne i8* %63, null, !dbg !1691
  %65 = zext i1 %64 to i64, !dbg !1691
  %66 = select i1 %64, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.19.63, i32 0, i32 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.20.64, i32 0, i32 0), !dbg !1691
  br label %67, !dbg !1690

; <label>:67:                                     ; preds = %62, %61
  %68 = phi i8* [ getelementptr inbounds ([40 x i8], [40 x i8]* @.str.18.65, i32 0, i32 0), %61 ], [ %66, %62 ], !dbg !1690
  store i8* %68, i8** %9, align 8, !dbg !1692
  br label %81, !dbg !1693

; <label>:69:                                     ; preds = %45
  %70 = load i8*, i8** %7, align 8, !dbg !1694
  %71 = icmp ne i8* %70, null, !dbg !1694
  br i1 %71, label %72, label %73, !dbg !1694

; <label>:72:                                     ; preds = %69
  br label %78, !dbg !1694

; <label>:73:                                     ; preds = %69
  %74 = load i8*, i8** %8, align 8, !dbg !1695
  %75 = icmp ne i8* %74, null, !dbg !1695
  %76 = zext i1 %75 to i64, !dbg !1695
  %77 = select i1 %75, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.22.66, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.23.67, i32 0, i32 0), !dbg !1695
  br label %78, !dbg !1694

; <label>:78:                                     ; preds = %73, %72
  %79 = phi i8* [ getelementptr inbounds ([32 x i8], [32 x i8]* @.str.21.68, i32 0, i32 0), %72 ], [ %77, %73 ], !dbg !1694
  store i8* %79, i8** %9, align 8, !dbg !1696
  br label %81, !dbg !1697

; <label>:80:                                     ; preds = %45
  call void @abort() #11, !dbg !1698
  unreachable, !dbg !1698

; <label>:81:                                     ; preds = %78, %67, %56
  %82 = load i8*, i8** %9, align 8, !dbg !1699
  %83 = load i8*, i8** %5, align 8, !dbg !1700
  %84 = call i8* @quote(i8* %83), !dbg !1701
  %85 = load i8*, i8** %10, align 8, !dbg !1702
  %86 = call i32 (i8*, ...) @printf(i8* %82, i8* %84, i8* %85), !dbg !1703
  %87 = load i8*, i8** %11, align 8, !dbg !1704
  call void @free(i8* %87) #8, !dbg !1705
  br label %88, !dbg !1706

; <label>:88:                                     ; preds = %81, %14
  ret void, !dbg !1706
}

; Function Attrs: nounwind readonly
declare i64 @strlen(i8*) #6

; Function Attrs: nounwind
declare i8* @stpcpy(i8*, i8*) #5

; Function Attrs: nounwind
declare void @free(i8*) #5

; Function Attrs: nounwind
declare i32 @fchownat(i32, i8*, i32, i32, i32) #5

declare i32 @openat(i32, i8*, i32, ...) #2

; Function Attrs: nounwind
declare i32 @fstat(i32, %struct.stat*) #5

; Function Attrs: nounwind
declare i32 @fchown(i32, i32, i32) #5

declare i32 @close(i32) #2

; Function Attrs: noinline nounwind uwtable
define void @set_program_name(i8*) #3 !dbg !1707 {
  %2 = alloca i8*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  store i8* %0, i8** %2, align 8
  call void @llvm.dbg.declare(metadata i8** %2, metadata !1710, metadata !DIExpression()), !dbg !1711
  call void @llvm.dbg.declare(metadata i8** %3, metadata !1712, metadata !DIExpression()), !dbg !1713
  call void @llvm.dbg.declare(metadata i8** %4, metadata !1714, metadata !DIExpression()), !dbg !1715
  %5 = load i8*, i8** %2, align 8, !dbg !1716
  %6 = icmp eq i8* %5, null, !dbg !1718
  br i1 %6, label %7, label %10, !dbg !1719

; <label>:7:                                      ; preds = %1
  %8 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !1720
  %9 = call i32 @fputs(i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.76, i32 0, i32 0), %struct._IO_FILE* %8), !dbg !1722
  call void @abort() #11, !dbg !1723
  unreachable, !dbg !1723

; <label>:10:                                     ; preds = %1
  %11 = load i8*, i8** %2, align 8, !dbg !1724
  %12 = call i8* @strrchr(i8* %11, i32 47) #12, !dbg !1725
  store i8* %12, i8** %3, align 8, !dbg !1726
  %13 = load i8*, i8** %3, align 8, !dbg !1727
  %14 = icmp ne i8* %13, null, !dbg !1728
  br i1 %14, label %15, label %18, !dbg !1727

; <label>:15:                                     ; preds = %10
  %16 = load i8*, i8** %3, align 8, !dbg !1729
  %17 = getelementptr inbounds i8, i8* %16, i64 1, !dbg !1730
  br label %20, !dbg !1727

; <label>:18:                                     ; preds = %10
  %19 = load i8*, i8** %2, align 8, !dbg !1731
  br label %20, !dbg !1727

; <label>:20:                                     ; preds = %18, %15
  %21 = phi i8* [ %17, %15 ], [ %19, %18 ], !dbg !1727
  store i8* %21, i8** %4, align 8, !dbg !1732
  %22 = load i8*, i8** %4, align 8, !dbg !1733
  %23 = load i8*, i8** %2, align 8, !dbg !1735
  %24 = ptrtoint i8* %22 to i64, !dbg !1736
  %25 = ptrtoint i8* %23 to i64, !dbg !1736
  %26 = sub i64 %24, %25, !dbg !1736
  %27 = icmp sge i64 %26, 7, !dbg !1737
  br i1 %27, label %28, label %43, !dbg !1738

; <label>:28:                                     ; preds = %20
  %29 = load i8*, i8** %4, align 8, !dbg !1739
  %30 = getelementptr inbounds i8, i8* %29, i64 -7, !dbg !1740
  %31 = call i32 @strncmp(i8* %30, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.77, i32 0, i32 0), i64 7) #12, !dbg !1741
  %32 = icmp eq i32 %31, 0, !dbg !1742
  br i1 %32, label %33, label %43, !dbg !1743

; <label>:33:                                     ; preds = %28
  %34 = load i8*, i8** %4, align 8, !dbg !1744
  store i8* %34, i8** %2, align 8, !dbg !1746
  %35 = load i8*, i8** %4, align 8, !dbg !1747
  %36 = call i32 @strncmp(i8* %35, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2.78, i32 0, i32 0), i64 3) #12, !dbg !1749
  %37 = icmp eq i32 %36, 0, !dbg !1750
  br i1 %37, label %38, label %42, !dbg !1751

; <label>:38:                                     ; preds = %33
  %39 = load i8*, i8** %4, align 8, !dbg !1752
  %40 = getelementptr inbounds i8, i8* %39, i64 3, !dbg !1754
  store i8* %40, i8** %2, align 8, !dbg !1755
  %41 = load i8*, i8** %2, align 8, !dbg !1756
  store i8* %41, i8** @program_invocation_short_name, align 8, !dbg !1757
  br label %42, !dbg !1758

; <label>:42:                                     ; preds = %38, %33
  br label %43, !dbg !1759

; <label>:43:                                     ; preds = %42, %28, %20
  %44 = load i8*, i8** %2, align 8, !dbg !1760
  store i8* %44, i8** @program_name, align 8, !dbg !1761
  %45 = load i8*, i8** %2, align 8, !dbg !1762
  store i8* %45, i8** @program_invocation_name, align 8, !dbg !1763
  ret void, !dbg !1764
}

declare i32 @fputs(i8*, %struct._IO_FILE*) #2

; Function Attrs: nounwind readonly
declare i8* @strrchr(i8*, i32) #6

; Function Attrs: noinline nounwind uwtable
define void @version_etc_arn(%struct._IO_FILE*, i8*, i8*, i8*, i8**, i64) #3 !dbg !1765 {
  %7 = alloca %struct._IO_FILE*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i8*, align 8
  %10 = alloca i8*, align 8
  %11 = alloca i8**, align 8
  %12 = alloca i64, align 8
  store %struct._IO_FILE* %0, %struct._IO_FILE** %7, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %7, metadata !1818, metadata !DIExpression()), !dbg !1819
  store i8* %1, i8** %8, align 8
  call void @llvm.dbg.declare(metadata i8** %8, metadata !1820, metadata !DIExpression()), !dbg !1821
  store i8* %2, i8** %9, align 8
  call void @llvm.dbg.declare(metadata i8** %9, metadata !1822, metadata !DIExpression()), !dbg !1823
  store i8* %3, i8** %10, align 8
  call void @llvm.dbg.declare(metadata i8** %10, metadata !1824, metadata !DIExpression()), !dbg !1825
  store i8** %4, i8*** %11, align 8
  call void @llvm.dbg.declare(metadata i8*** %11, metadata !1826, metadata !DIExpression()), !dbg !1827
  store i64 %5, i64* %12, align 8
  call void @llvm.dbg.declare(metadata i64* %12, metadata !1828, metadata !DIExpression()), !dbg !1829
  %13 = load i8*, i8** %8, align 8, !dbg !1830
  %14 = icmp ne i8* %13, null, !dbg !1830
  br i1 %14, label %15, label %21, !dbg !1832

; <label>:15:                                     ; preds = %6
  %16 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8, !dbg !1833
  %17 = load i8*, i8** %8, align 8, !dbg !1834
  %18 = load i8*, i8** %9, align 8, !dbg !1835
  %19 = load i8*, i8** %10, align 8, !dbg !1836
  %20 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %16, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.79, i32 0, i32 0), i8* %17, i8* %18, i8* %19), !dbg !1837
  br label %26, !dbg !1837

; <label>:21:                                     ; preds = %6
  %22 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8, !dbg !1838
  %23 = load i8*, i8** %9, align 8, !dbg !1839
  %24 = load i8*, i8** %10, align 8, !dbg !1840
  %25 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %22, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1.80, i32 0, i32 0), i8* %23, i8* %24), !dbg !1841
  br label %26

; <label>:26:                                     ; preds = %21, %15
  %27 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8, !dbg !1842
  %28 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %27, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @version_etc_copyright, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2.81, i32 0, i32 0), i32 2009), !dbg !1843
  %29 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8, !dbg !1844
  %30 = call i32 @fputs_unlocked(i8* getelementptr inbounds ([203 x i8], [203 x i8]* @.str.3.82, i32 0, i32 0), %struct._IO_FILE* %29), !dbg !1844
  %31 = load i64, i64* %12, align 8, !dbg !1845
  switch i64 %31, label %195 [
    i64 0, label %32
    i64 1, label %33
    i64 2, label %39
    i64 3, label %48
    i64 4, label %60
    i64 5, label %75
    i64 6, label %93
    i64 7, label %114
    i64 8, label %138
    i64 9, label %165
  ], !dbg !1846

; <label>:32:                                     ; preds = %26
  call void @abort() #11, !dbg !1847
  unreachable, !dbg !1847

; <label>:33:                                     ; preds = %26
  %34 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8, !dbg !1849
  %35 = load i8**, i8*** %11, align 8, !dbg !1850
  %36 = getelementptr inbounds i8*, i8** %35, i64 0, !dbg !1850
  %37 = load i8*, i8** %36, align 8, !dbg !1850
  %38 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %34, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.4.83, i32 0, i32 0), i8* %37), !dbg !1851
  br label %225, !dbg !1852

; <label>:39:                                     ; preds = %26
  %40 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8, !dbg !1853
  %41 = load i8**, i8*** %11, align 8, !dbg !1854
  %42 = getelementptr inbounds i8*, i8** %41, i64 0, !dbg !1854
  %43 = load i8*, i8** %42, align 8, !dbg !1854
  %44 = load i8**, i8*** %11, align 8, !dbg !1855
  %45 = getelementptr inbounds i8*, i8** %44, i64 1, !dbg !1855
  %46 = load i8*, i8** %45, align 8, !dbg !1855
  %47 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %40, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.5.84, i32 0, i32 0), i8* %43, i8* %46), !dbg !1856
  br label %225, !dbg !1857

; <label>:48:                                     ; preds = %26
  %49 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8, !dbg !1858
  %50 = load i8**, i8*** %11, align 8, !dbg !1859
  %51 = getelementptr inbounds i8*, i8** %50, i64 0, !dbg !1859
  %52 = load i8*, i8** %51, align 8, !dbg !1859
  %53 = load i8**, i8*** %11, align 8, !dbg !1860
  %54 = getelementptr inbounds i8*, i8** %53, i64 1, !dbg !1860
  %55 = load i8*, i8** %54, align 8, !dbg !1860
  %56 = load i8**, i8*** %11, align 8, !dbg !1861
  %57 = getelementptr inbounds i8*, i8** %56, i64 2, !dbg !1861
  %58 = load i8*, i8** %57, align 8, !dbg !1861
  %59 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %49, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.6.85, i32 0, i32 0), i8* %52, i8* %55, i8* %58), !dbg !1862
  br label %225, !dbg !1863

; <label>:60:                                     ; preds = %26
  %61 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8, !dbg !1864
  %62 = load i8**, i8*** %11, align 8, !dbg !1865
  %63 = getelementptr inbounds i8*, i8** %62, i64 0, !dbg !1865
  %64 = load i8*, i8** %63, align 8, !dbg !1865
  %65 = load i8**, i8*** %11, align 8, !dbg !1866
  %66 = getelementptr inbounds i8*, i8** %65, i64 1, !dbg !1866
  %67 = load i8*, i8** %66, align 8, !dbg !1866
  %68 = load i8**, i8*** %11, align 8, !dbg !1867
  %69 = getelementptr inbounds i8*, i8** %68, i64 2, !dbg !1867
  %70 = load i8*, i8** %69, align 8, !dbg !1867
  %71 = load i8**, i8*** %11, align 8, !dbg !1868
  %72 = getelementptr inbounds i8*, i8** %71, i64 3, !dbg !1868
  %73 = load i8*, i8** %72, align 8, !dbg !1868
  %74 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %61, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.7.86, i32 0, i32 0), i8* %64, i8* %67, i8* %70, i8* %73), !dbg !1869
  br label %225, !dbg !1870

; <label>:75:                                     ; preds = %26
  %76 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8, !dbg !1871
  %77 = load i8**, i8*** %11, align 8, !dbg !1872
  %78 = getelementptr inbounds i8*, i8** %77, i64 0, !dbg !1872
  %79 = load i8*, i8** %78, align 8, !dbg !1872
  %80 = load i8**, i8*** %11, align 8, !dbg !1873
  %81 = getelementptr inbounds i8*, i8** %80, i64 1, !dbg !1873
  %82 = load i8*, i8** %81, align 8, !dbg !1873
  %83 = load i8**, i8*** %11, align 8, !dbg !1874
  %84 = getelementptr inbounds i8*, i8** %83, i64 2, !dbg !1874
  %85 = load i8*, i8** %84, align 8, !dbg !1874
  %86 = load i8**, i8*** %11, align 8, !dbg !1875
  %87 = getelementptr inbounds i8*, i8** %86, i64 3, !dbg !1875
  %88 = load i8*, i8** %87, align 8, !dbg !1875
  %89 = load i8**, i8*** %11, align 8, !dbg !1876
  %90 = getelementptr inbounds i8*, i8** %89, i64 4, !dbg !1876
  %91 = load i8*, i8** %90, align 8, !dbg !1876
  %92 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %76, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.8.87, i32 0, i32 0), i8* %79, i8* %82, i8* %85, i8* %88, i8* %91), !dbg !1877
  br label %225, !dbg !1878

; <label>:93:                                     ; preds = %26
  %94 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8, !dbg !1879
  %95 = load i8**, i8*** %11, align 8, !dbg !1880
  %96 = getelementptr inbounds i8*, i8** %95, i64 0, !dbg !1880
  %97 = load i8*, i8** %96, align 8, !dbg !1880
  %98 = load i8**, i8*** %11, align 8, !dbg !1881
  %99 = getelementptr inbounds i8*, i8** %98, i64 1, !dbg !1881
  %100 = load i8*, i8** %99, align 8, !dbg !1881
  %101 = load i8**, i8*** %11, align 8, !dbg !1882
  %102 = getelementptr inbounds i8*, i8** %101, i64 2, !dbg !1882
  %103 = load i8*, i8** %102, align 8, !dbg !1882
  %104 = load i8**, i8*** %11, align 8, !dbg !1883
  %105 = getelementptr inbounds i8*, i8** %104, i64 3, !dbg !1883
  %106 = load i8*, i8** %105, align 8, !dbg !1883
  %107 = load i8**, i8*** %11, align 8, !dbg !1884
  %108 = getelementptr inbounds i8*, i8** %107, i64 4, !dbg !1884
  %109 = load i8*, i8** %108, align 8, !dbg !1884
  %110 = load i8**, i8*** %11, align 8, !dbg !1885
  %111 = getelementptr inbounds i8*, i8** %110, i64 5, !dbg !1885
  %112 = load i8*, i8** %111, align 8, !dbg !1885
  %113 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %94, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.9.88, i32 0, i32 0), i8* %97, i8* %100, i8* %103, i8* %106, i8* %109, i8* %112), !dbg !1886
  br label %225, !dbg !1887

; <label>:114:                                    ; preds = %26
  %115 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8, !dbg !1888
  %116 = load i8**, i8*** %11, align 8, !dbg !1889
  %117 = getelementptr inbounds i8*, i8** %116, i64 0, !dbg !1889
  %118 = load i8*, i8** %117, align 8, !dbg !1889
  %119 = load i8**, i8*** %11, align 8, !dbg !1890
  %120 = getelementptr inbounds i8*, i8** %119, i64 1, !dbg !1890
  %121 = load i8*, i8** %120, align 8, !dbg !1890
  %122 = load i8**, i8*** %11, align 8, !dbg !1891
  %123 = getelementptr inbounds i8*, i8** %122, i64 2, !dbg !1891
  %124 = load i8*, i8** %123, align 8, !dbg !1891
  %125 = load i8**, i8*** %11, align 8, !dbg !1892
  %126 = getelementptr inbounds i8*, i8** %125, i64 3, !dbg !1892
  %127 = load i8*, i8** %126, align 8, !dbg !1892
  %128 = load i8**, i8*** %11, align 8, !dbg !1893
  %129 = getelementptr inbounds i8*, i8** %128, i64 4, !dbg !1893
  %130 = load i8*, i8** %129, align 8, !dbg !1893
  %131 = load i8**, i8*** %11, align 8, !dbg !1894
  %132 = getelementptr inbounds i8*, i8** %131, i64 5, !dbg !1894
  %133 = load i8*, i8** %132, align 8, !dbg !1894
  %134 = load i8**, i8*** %11, align 8, !dbg !1895
  %135 = getelementptr inbounds i8*, i8** %134, i64 6, !dbg !1895
  %136 = load i8*, i8** %135, align 8, !dbg !1895
  %137 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %115, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.10.89, i32 0, i32 0), i8* %118, i8* %121, i8* %124, i8* %127, i8* %130, i8* %133, i8* %136), !dbg !1896
  br label %225, !dbg !1897

; <label>:138:                                    ; preds = %26
  %139 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8, !dbg !1898
  %140 = load i8**, i8*** %11, align 8, !dbg !1899
  %141 = getelementptr inbounds i8*, i8** %140, i64 0, !dbg !1899
  %142 = load i8*, i8** %141, align 8, !dbg !1899
  %143 = load i8**, i8*** %11, align 8, !dbg !1900
  %144 = getelementptr inbounds i8*, i8** %143, i64 1, !dbg !1900
  %145 = load i8*, i8** %144, align 8, !dbg !1900
  %146 = load i8**, i8*** %11, align 8, !dbg !1901
  %147 = getelementptr inbounds i8*, i8** %146, i64 2, !dbg !1901
  %148 = load i8*, i8** %147, align 8, !dbg !1901
  %149 = load i8**, i8*** %11, align 8, !dbg !1902
  %150 = getelementptr inbounds i8*, i8** %149, i64 3, !dbg !1902
  %151 = load i8*, i8** %150, align 8, !dbg !1902
  %152 = load i8**, i8*** %11, align 8, !dbg !1903
  %153 = getelementptr inbounds i8*, i8** %152, i64 4, !dbg !1903
  %154 = load i8*, i8** %153, align 8, !dbg !1903
  %155 = load i8**, i8*** %11, align 8, !dbg !1904
  %156 = getelementptr inbounds i8*, i8** %155, i64 5, !dbg !1904
  %157 = load i8*, i8** %156, align 8, !dbg !1904
  %158 = load i8**, i8*** %11, align 8, !dbg !1905
  %159 = getelementptr inbounds i8*, i8** %158, i64 6, !dbg !1905
  %160 = load i8*, i8** %159, align 8, !dbg !1905
  %161 = load i8**, i8*** %11, align 8, !dbg !1906
  %162 = getelementptr inbounds i8*, i8** %161, i64 7, !dbg !1906
  %163 = load i8*, i8** %162, align 8, !dbg !1906
  %164 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %139, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.11.90, i32 0, i32 0), i8* %142, i8* %145, i8* %148, i8* %151, i8* %154, i8* %157, i8* %160, i8* %163), !dbg !1907
  br label %225, !dbg !1908

; <label>:165:                                    ; preds = %26
  %166 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8, !dbg !1909
  %167 = load i8**, i8*** %11, align 8, !dbg !1910
  %168 = getelementptr inbounds i8*, i8** %167, i64 0, !dbg !1910
  %169 = load i8*, i8** %168, align 8, !dbg !1910
  %170 = load i8**, i8*** %11, align 8, !dbg !1911
  %171 = getelementptr inbounds i8*, i8** %170, i64 1, !dbg !1911
  %172 = load i8*, i8** %171, align 8, !dbg !1911
  %173 = load i8**, i8*** %11, align 8, !dbg !1912
  %174 = getelementptr inbounds i8*, i8** %173, i64 2, !dbg !1912
  %175 = load i8*, i8** %174, align 8, !dbg !1912
  %176 = load i8**, i8*** %11, align 8, !dbg !1913
  %177 = getelementptr inbounds i8*, i8** %176, i64 3, !dbg !1913
  %178 = load i8*, i8** %177, align 8, !dbg !1913
  %179 = load i8**, i8*** %11, align 8, !dbg !1914
  %180 = getelementptr inbounds i8*, i8** %179, i64 4, !dbg !1914
  %181 = load i8*, i8** %180, align 8, !dbg !1914
  %182 = load i8**, i8*** %11, align 8, !dbg !1915
  %183 = getelementptr inbounds i8*, i8** %182, i64 5, !dbg !1915
  %184 = load i8*, i8** %183, align 8, !dbg !1915
  %185 = load i8**, i8*** %11, align 8, !dbg !1916
  %186 = getelementptr inbounds i8*, i8** %185, i64 6, !dbg !1916
  %187 = load i8*, i8** %186, align 8, !dbg !1916
  %188 = load i8**, i8*** %11, align 8, !dbg !1917
  %189 = getelementptr inbounds i8*, i8** %188, i64 7, !dbg !1917
  %190 = load i8*, i8** %189, align 8, !dbg !1917
  %191 = load i8**, i8*** %11, align 8, !dbg !1918
  %192 = getelementptr inbounds i8*, i8** %191, i64 8, !dbg !1918
  %193 = load i8*, i8** %192, align 8, !dbg !1918
  %194 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %166, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.12.91, i32 0, i32 0), i8* %169, i8* %172, i8* %175, i8* %178, i8* %181, i8* %184, i8* %187, i8* %190, i8* %193), !dbg !1919
  br label %225, !dbg !1920

; <label>:195:                                    ; preds = %26
  %196 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8, !dbg !1921
  %197 = load i8**, i8*** %11, align 8, !dbg !1922
  %198 = getelementptr inbounds i8*, i8** %197, i64 0, !dbg !1922
  %199 = load i8*, i8** %198, align 8, !dbg !1922
  %200 = load i8**, i8*** %11, align 8, !dbg !1923
  %201 = getelementptr inbounds i8*, i8** %200, i64 1, !dbg !1923
  %202 = load i8*, i8** %201, align 8, !dbg !1923
  %203 = load i8**, i8*** %11, align 8, !dbg !1924
  %204 = getelementptr inbounds i8*, i8** %203, i64 2, !dbg !1924
  %205 = load i8*, i8** %204, align 8, !dbg !1924
  %206 = load i8**, i8*** %11, align 8, !dbg !1925
  %207 = getelementptr inbounds i8*, i8** %206, i64 3, !dbg !1925
  %208 = load i8*, i8** %207, align 8, !dbg !1925
  %209 = load i8**, i8*** %11, align 8, !dbg !1926
  %210 = getelementptr inbounds i8*, i8** %209, i64 4, !dbg !1926
  %211 = load i8*, i8** %210, align 8, !dbg !1926
  %212 = load i8**, i8*** %11, align 8, !dbg !1927
  %213 = getelementptr inbounds i8*, i8** %212, i64 5, !dbg !1927
  %214 = load i8*, i8** %213, align 8, !dbg !1927
  %215 = load i8**, i8*** %11, align 8, !dbg !1928
  %216 = getelementptr inbounds i8*, i8** %215, i64 6, !dbg !1928
  %217 = load i8*, i8** %216, align 8, !dbg !1928
  %218 = load i8**, i8*** %11, align 8, !dbg !1929
  %219 = getelementptr inbounds i8*, i8** %218, i64 7, !dbg !1929
  %220 = load i8*, i8** %219, align 8, !dbg !1929
  %221 = load i8**, i8*** %11, align 8, !dbg !1930
  %222 = getelementptr inbounds i8*, i8** %221, i64 8, !dbg !1930
  %223 = load i8*, i8** %222, align 8, !dbg !1930
  %224 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %196, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.13.92, i32 0, i32 0), i8* %199, i8* %202, i8* %205, i8* %208, i8* %211, i8* %214, i8* %217, i8* %220, i8* %223), !dbg !1931
  br label %225, !dbg !1932

; <label>:225:                                    ; preds = %195, %165, %138, %114, %93, %75, %60, %48, %39, %33
  ret void, !dbg !1933
}

; Function Attrs: noinline nounwind uwtable
define void @version_etc_ar(%struct._IO_FILE*, i8*, i8*, i8*, i8**) #3 !dbg !1934 {
  %6 = alloca %struct._IO_FILE*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i8*, align 8
  %10 = alloca i8**, align 8
  %11 = alloca i64, align 8
  store %struct._IO_FILE* %0, %struct._IO_FILE** %6, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %6, metadata !1937, metadata !DIExpression()), !dbg !1938
  store i8* %1, i8** %7, align 8
  call void @llvm.dbg.declare(metadata i8** %7, metadata !1939, metadata !DIExpression()), !dbg !1940
  store i8* %2, i8** %8, align 8
  call void @llvm.dbg.declare(metadata i8** %8, metadata !1941, metadata !DIExpression()), !dbg !1942
  store i8* %3, i8** %9, align 8
  call void @llvm.dbg.declare(metadata i8** %9, metadata !1943, metadata !DIExpression()), !dbg !1944
  store i8** %4, i8*** %10, align 8
  call void @llvm.dbg.declare(metadata i8*** %10, metadata !1945, metadata !DIExpression()), !dbg !1946
  call void @llvm.dbg.declare(metadata i64* %11, metadata !1947, metadata !DIExpression()), !dbg !1948
  store i64 0, i64* %11, align 8, !dbg !1949
  br label %12, !dbg !1951

; <label>:12:                                     ; preds = %19, %5
  %13 = load i8**, i8*** %10, align 8, !dbg !1952
  %14 = load i64, i64* %11, align 8, !dbg !1954
  %15 = getelementptr inbounds i8*, i8** %13, i64 %14, !dbg !1952
  %16 = load i8*, i8** %15, align 8, !dbg !1952
  %17 = icmp ne i8* %16, null, !dbg !1955
  br i1 %17, label %18, label %22, !dbg !1955

; <label>:18:                                     ; preds = %12
  br label %19, !dbg !1955

; <label>:19:                                     ; preds = %18
  %20 = load i64, i64* %11, align 8, !dbg !1956
  %21 = add i64 %20, 1, !dbg !1956
  store i64 %21, i64* %11, align 8, !dbg !1956
  br label %12, !dbg !1957, !llvm.loop !1958

; <label>:22:                                     ; preds = %12
  %23 = load %struct._IO_FILE*, %struct._IO_FILE** %6, align 8, !dbg !1960
  %24 = load i8*, i8** %7, align 8, !dbg !1961
  %25 = load i8*, i8** %8, align 8, !dbg !1962
  %26 = load i8*, i8** %9, align 8, !dbg !1963
  %27 = load i8**, i8*** %10, align 8, !dbg !1964
  %28 = load i64, i64* %11, align 8, !dbg !1965
  call void @version_etc_arn(%struct._IO_FILE* %23, i8* %24, i8* %25, i8* %26, i8** %27, i64 %28), !dbg !1966
  ret void, !dbg !1967
}

; Function Attrs: noinline nounwind uwtable
define void @version_etc_va(%struct._IO_FILE*, i8*, i8*, i8*, %struct.__va_list_tag*) #3 !dbg !1968 {
  %6 = alloca %struct._IO_FILE*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i8*, align 8
  %10 = alloca %struct.__va_list_tag*, align 8
  %11 = alloca i64, align 8
  %12 = alloca [10 x i8*], align 16
  store %struct._IO_FILE* %0, %struct._IO_FILE** %6, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %6, metadata !1978, metadata !DIExpression()), !dbg !1979
  store i8* %1, i8** %7, align 8
  call void @llvm.dbg.declare(metadata i8** %7, metadata !1980, metadata !DIExpression()), !dbg !1981
  store i8* %2, i8** %8, align 8
  call void @llvm.dbg.declare(metadata i8** %8, metadata !1982, metadata !DIExpression()), !dbg !1983
  store i8* %3, i8** %9, align 8
  call void @llvm.dbg.declare(metadata i8** %9, metadata !1984, metadata !DIExpression()), !dbg !1985
  store %struct.__va_list_tag* %4, %struct.__va_list_tag** %10, align 8
  call void @llvm.dbg.declare(metadata %struct.__va_list_tag** %10, metadata !1986, metadata !DIExpression()), !dbg !1987
  call void @llvm.dbg.declare(metadata i64* %11, metadata !1988, metadata !DIExpression()), !dbg !1989
  call void @llvm.dbg.declare(metadata [10 x i8*]* %12, metadata !1990, metadata !DIExpression()), !dbg !1994
  store i64 0, i64* %11, align 8, !dbg !1995
  br label %13, !dbg !1997

; <label>:13:                                     ; preds = %41, %5
  %14 = load i64, i64* %11, align 8, !dbg !1998
  %15 = icmp ult i64 %14, 10, !dbg !2000
  br i1 %15, label %16, label %38, !dbg !2001

; <label>:16:                                     ; preds = %13
  %17 = load %struct.__va_list_tag*, %struct.__va_list_tag** %10, align 8, !dbg !2002
  %18 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %17, i32 0, i32 0, !dbg !2002
  %19 = load i32, i32* %18, align 8, !dbg !2002
  %20 = icmp ule i32 %19, 40, !dbg !2002
  br i1 %20, label %21, label %27, !dbg !2002

; <label>:21:                                     ; preds = %16
  %22 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %17, i32 0, i32 3, !dbg !2002
  %23 = load i8*, i8** %22, align 8, !dbg !2002
  %24 = getelementptr i8, i8* %23, i32 %19, !dbg !2002
  %25 = bitcast i8* %24 to i8**, !dbg !2002
  %26 = add i32 %19, 8, !dbg !2002
  store i32 %26, i32* %18, align 8, !dbg !2002
  br label %32, !dbg !2002

; <label>:27:                                     ; preds = %16
  %28 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %17, i32 0, i32 2, !dbg !2002
  %29 = load i8*, i8** %28, align 8, !dbg !2002
  %30 = bitcast i8* %29 to i8**, !dbg !2002
  %31 = getelementptr i8, i8* %29, i32 8, !dbg !2002
  store i8* %31, i8** %28, align 8, !dbg !2002
  br label %32, !dbg !2002

; <label>:32:                                     ; preds = %27, %21
  %33 = phi i8** [ %25, %21 ], [ %30, %27 ], !dbg !2002
  %34 = load i8*, i8** %33, align 8, !dbg !2002
  %35 = load i64, i64* %11, align 8, !dbg !2003
  %36 = getelementptr inbounds [10 x i8*], [10 x i8*]* %12, i64 0, i64 %35, !dbg !2004
  store i8* %34, i8** %36, align 8, !dbg !2005
  %37 = icmp ne i8* %34, null, !dbg !2006
  br label %38

; <label>:38:                                     ; preds = %32, %13
  %39 = phi i1 [ false, %13 ], [ %37, %32 ]
  br i1 %39, label %40, label %44, !dbg !2007

; <label>:40:                                     ; preds = %38
  br label %41, !dbg !2007

; <label>:41:                                     ; preds = %40
  %42 = load i64, i64* %11, align 8, !dbg !2008
  %43 = add i64 %42, 1, !dbg !2008
  store i64 %43, i64* %11, align 8, !dbg !2008
  br label %13, !dbg !2009, !llvm.loop !2010

; <label>:44:                                     ; preds = %38
  %45 = load %struct._IO_FILE*, %struct._IO_FILE** %6, align 8, !dbg !2012
  %46 = load i8*, i8** %7, align 8, !dbg !2013
  %47 = load i8*, i8** %8, align 8, !dbg !2014
  %48 = load i8*, i8** %9, align 8, !dbg !2015
  %49 = getelementptr inbounds [10 x i8*], [10 x i8*]* %12, i32 0, i32 0, !dbg !2016
  %50 = load i64, i64* %11, align 8, !dbg !2017
  call void @version_etc_arn(%struct._IO_FILE* %45, i8* %46, i8* %47, i8* %48, i8** %49, i64 %50), !dbg !2018
  ret void, !dbg !2019
}

; Function Attrs: noinline nounwind uwtable
define void @version_etc(%struct._IO_FILE*, i8*, i8*, i8*, ...) #3 !dbg !2020 {
  %5 = alloca %struct._IO_FILE*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca [1 x %struct.__va_list_tag], align 16
  store %struct._IO_FILE* %0, %struct._IO_FILE** %5, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %5, metadata !2023, metadata !DIExpression()), !dbg !2024
  store i8* %1, i8** %6, align 8
  call void @llvm.dbg.declare(metadata i8** %6, metadata !2025, metadata !DIExpression()), !dbg !2026
  store i8* %2, i8** %7, align 8
  call void @llvm.dbg.declare(metadata i8** %7, metadata !2027, metadata !DIExpression()), !dbg !2028
  store i8* %3, i8** %8, align 8
  call void @llvm.dbg.declare(metadata i8** %8, metadata !2029, metadata !DIExpression()), !dbg !2030
  call void @llvm.dbg.declare(metadata [1 x %struct.__va_list_tag]* %9, metadata !2031, metadata !DIExpression()), !dbg !2038
  %10 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %9, i32 0, i32 0, !dbg !2039
  %11 = bitcast %struct.__va_list_tag* %10 to i8*, !dbg !2039
  call void @llvm.va_start(i8* %11), !dbg !2039
  %12 = load %struct._IO_FILE*, %struct._IO_FILE** %5, align 8, !dbg !2040
  %13 = load i8*, i8** %6, align 8, !dbg !2041
  %14 = load i8*, i8** %7, align 8, !dbg !2042
  %15 = load i8*, i8** %8, align 8, !dbg !2043
  %16 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %9, i32 0, i32 0, !dbg !2044
  call void @version_etc_va(%struct._IO_FILE* %12, i8* %13, i8* %14, i8* %15, %struct.__va_list_tag* %16), !dbg !2045
  %17 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %9, i32 0, i32 0, !dbg !2046
  %18 = bitcast %struct.__va_list_tag* %17 to i8*, !dbg !2046
  call void @llvm.va_end(i8* %18), !dbg !2046
  ret void, !dbg !2047
}

; Function Attrs: nounwind
declare void @llvm.va_start(i8*) #8

; Function Attrs: nounwind
declare void @llvm.va_end(i8*) #8

; Function Attrs: noinline nounwind uwtable
define void @emit_bug_reporting_address() #3 !dbg !2048 {
  %1 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.95, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.15.96, i32 0, i32 0)), !dbg !2049
  %2 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.16.97, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.17.98, i32 0, i32 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.18.99, i32 0, i32 0)), !dbg !2050
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2051
  %4 = call i32 @fputs_unlocked(i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.19.100, i32 0, i32 0), %struct._IO_FILE* %3), !dbg !2051
  ret void, !dbg !2052
}

; Function Attrs: noinline nounwind uwtable
define i8* @last_component(i8*) #3 !dbg !2053 {
  %2 = alloca i8*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca i8, align 1
  store i8* %0, i8** %2, align 8
  call void @llvm.dbg.declare(metadata i8** %2, metadata !2054, metadata !DIExpression()), !dbg !2055
  call void @llvm.dbg.declare(metadata i8** %3, metadata !2056, metadata !DIExpression()), !dbg !2057
  %6 = load i8*, i8** %2, align 8, !dbg !2058
  %7 = getelementptr inbounds i8, i8* %6, i64 0, !dbg !2059
  store i8* %7, i8** %3, align 8, !dbg !2057
  call void @llvm.dbg.declare(metadata i8** %4, metadata !2060, metadata !DIExpression()), !dbg !2061
  call void @llvm.dbg.declare(metadata i8* %5, metadata !2062, metadata !DIExpression()), !dbg !2063
  store i8 0, i8* %5, align 1, !dbg !2063
  br label %8, !dbg !2064

; <label>:8:                                      ; preds = %13, %1
  %9 = load i8*, i8** %3, align 8, !dbg !2065
  %10 = load i8, i8* %9, align 1, !dbg !2065
  %11 = sext i8 %10 to i32, !dbg !2065
  %12 = icmp eq i32 %11, 47, !dbg !2065
  br i1 %12, label %13, label %16, !dbg !2064

; <label>:13:                                     ; preds = %8
  %14 = load i8*, i8** %3, align 8, !dbg !2066
  %15 = getelementptr inbounds i8, i8* %14, i32 1, !dbg !2066
  store i8* %15, i8** %3, align 8, !dbg !2066
  br label %8, !dbg !2064, !llvm.loop !2067

; <label>:16:                                     ; preds = %8
  %17 = load i8*, i8** %3, align 8, !dbg !2068
  store i8* %17, i8** %4, align 8, !dbg !2070
  br label %18, !dbg !2071

; <label>:18:                                     ; preds = %35, %16
  %19 = load i8*, i8** %4, align 8, !dbg !2072
  %20 = load i8, i8* %19, align 1, !dbg !2074
  %21 = icmp ne i8 %20, 0, !dbg !2075
  br i1 %21, label %22, label %38, !dbg !2075

; <label>:22:                                     ; preds = %18
  %23 = load i8*, i8** %4, align 8, !dbg !2076
  %24 = load i8, i8* %23, align 1, !dbg !2076
  %25 = sext i8 %24 to i32, !dbg !2076
  %26 = icmp eq i32 %25, 47, !dbg !2076
  br i1 %26, label %27, label %28, !dbg !2079

; <label>:27:                                     ; preds = %22
  store i8 1, i8* %5, align 1, !dbg !2080
  br label %34, !dbg !2081

; <label>:28:                                     ; preds = %22
  %29 = load i8, i8* %5, align 1, !dbg !2082
  %30 = trunc i8 %29 to i1, !dbg !2082
  br i1 %30, label %31, label %33, !dbg !2084

; <label>:31:                                     ; preds = %28
  %32 = load i8*, i8** %4, align 8, !dbg !2085
  store i8* %32, i8** %3, align 8, !dbg !2087
  store i8 0, i8* %5, align 1, !dbg !2088
  br label %33, !dbg !2089

; <label>:33:                                     ; preds = %31, %28
  br label %34

; <label>:34:                                     ; preds = %33, %27
  br label %35, !dbg !2090

; <label>:35:                                     ; preds = %34
  %36 = load i8*, i8** %4, align 8, !dbg !2091
  %37 = getelementptr inbounds i8, i8* %36, i32 1, !dbg !2091
  store i8* %37, i8** %4, align 8, !dbg !2091
  br label %18, !dbg !2092, !llvm.loop !2093

; <label>:38:                                     ; preds = %18
  %39 = load i8*, i8** %3, align 8, !dbg !2095
  ret i8* %39, !dbg !2096
}

; Function Attrs: noinline nounwind uwtable
define i64 @base_len(i8*) #3 !dbg !2097 {
  %2 = alloca i8*, align 8
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  store i8* %0, i8** %2, align 8
  call void @llvm.dbg.declare(metadata i8** %2, metadata !2100, metadata !DIExpression()), !dbg !2101
  call void @llvm.dbg.declare(metadata i64* %3, metadata !2102, metadata !DIExpression()), !dbg !2103
  call void @llvm.dbg.declare(metadata i64* %4, metadata !2104, metadata !DIExpression()), !dbg !2105
  store i64 0, i64* %4, align 8, !dbg !2105
  %5 = load i8*, i8** %2, align 8, !dbg !2106
  %6 = call i64 @strlen(i8* %5) #12, !dbg !2108
  store i64 %6, i64* %3, align 8, !dbg !2109
  br label %7, !dbg !2110

; <label>:7:                                      ; preds = %21, %1
  %8 = load i64, i64* %3, align 8, !dbg !2111
  %9 = icmp ult i64 1, %8, !dbg !2113
  br i1 %9, label %10, label %18, !dbg !2114

; <label>:10:                                     ; preds = %7
  %11 = load i8*, i8** %2, align 8, !dbg !2115
  %12 = load i64, i64* %3, align 8, !dbg !2115
  %13 = sub i64 %12, 1, !dbg !2115
  %14 = getelementptr inbounds i8, i8* %11, i64 %13, !dbg !2115
  %15 = load i8, i8* %14, align 1, !dbg !2115
  %16 = sext i8 %15 to i32, !dbg !2115
  %17 = icmp eq i32 %16, 47, !dbg !2115
  br label %18

; <label>:18:                                     ; preds = %10, %7
  %19 = phi i1 [ false, %7 ], [ %17, %10 ]
  br i1 %19, label %20, label %24, !dbg !2116

; <label>:20:                                     ; preds = %18
  br label %21, !dbg !2117

; <label>:21:                                     ; preds = %20
  %22 = load i64, i64* %3, align 8, !dbg !2118
  %23 = add i64 %22, -1, !dbg !2118
  store i64 %23, i64* %3, align 8, !dbg !2118
  br label %7, !dbg !2119, !llvm.loop !2120

; <label>:24:                                     ; preds = %18
  %25 = load i64, i64* %3, align 8, !dbg !2122
  ret i64 %25, !dbg !2123
}

; Function Attrs: noinline nounwind uwtable
define void @close_stdout_set_file_name(i8*) #3 !dbg !2124 {
  %2 = alloca i8*, align 8
  store i8* %0, i8** %2, align 8
  call void @llvm.dbg.declare(metadata i8** %2, metadata !2125, metadata !DIExpression()), !dbg !2126
  %3 = load i8*, i8** %2, align 8, !dbg !2127
  store i8* %3, i8** @file_name, align 8, !dbg !2128
  ret void, !dbg !2129
}

; Function Attrs: noinline nounwind uwtable
define void @close_stdout_set_ignore_EPIPE(i1 zeroext) #3 !dbg !2130 {
  %2 = alloca i8, align 1
  %3 = zext i1 %0 to i8
  store i8 %3, i8* %2, align 1
  call void @llvm.dbg.declare(metadata i8* %2, metadata !2133, metadata !DIExpression()), !dbg !2134
  %4 = load i8, i8* %2, align 1, !dbg !2135
  %5 = trunc i8 %4 to i1, !dbg !2135
  %6 = zext i1 %5 to i8, !dbg !2136
  store i8 %6, i8* @ignore_EPIPE, align 1, !dbg !2136
  ret void, !dbg !2137
}

; Function Attrs: noinline nounwind uwtable
define void @close_stdout() #3 !dbg !2138 {
  %1 = alloca i8*, align 8
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2139
  %3 = call i32 @close_stream(%struct._IO_FILE* %2), !dbg !2141
  %4 = icmp ne i32 %3, 0, !dbg !2142
  br i1 %4, label %5, label %27, !dbg !2143

; <label>:5:                                      ; preds = %0
  %6 = load i8, i8* @ignore_EPIPE, align 1, !dbg !2144
  %7 = trunc i8 %6 to i1, !dbg !2144
  br i1 %7, label %8, label %12, !dbg !2145

; <label>:8:                                      ; preds = %5
  %9 = call i32* @__errno_location() #14, !dbg !2146
  %10 = load i32, i32* %9, align 4, !dbg !2146
  %11 = icmp eq i32 %10, 32, !dbg !2147
  br i1 %11, label %27, label %12, !dbg !2148

; <label>:12:                                     ; preds = %8, %5
  call void @llvm.dbg.declare(metadata i8** %1, metadata !2149, metadata !DIExpression()), !dbg !2151
  store i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.107, i32 0, i32 0), i8** %1, align 8, !dbg !2151
  %13 = load i8*, i8** @file_name, align 8, !dbg !2152
  %14 = icmp ne i8* %13, null, !dbg !2152
  br i1 %14, label %15, label %21, !dbg !2154

; <label>:15:                                     ; preds = %12
  %16 = call i32* @__errno_location() #14, !dbg !2155
  %17 = load i32, i32* %16, align 4, !dbg !2155
  %18 = load i8*, i8** @file_name, align 8, !dbg !2156
  %19 = call i8* @quotearg_colon(i8* %18), !dbg !2157
  %20 = load i8*, i8** %1, align 8, !dbg !2158
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %17, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1.108, i32 0, i32 0), i8* %19, i8* %20), !dbg !2159
  br label %25, !dbg !2159

; <label>:21:                                     ; preds = %12
  %22 = call i32* @__errno_location() #14, !dbg !2160
  %23 = load i32, i32* %22, align 4, !dbg !2160
  %24 = load i8*, i8** %1, align 8, !dbg !2161
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %23, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2.109, i32 0, i32 0), i8* %24), !dbg !2162
  br label %25

; <label>:25:                                     ; preds = %21, %15
  %26 = load volatile i32, i32* @exit_failure, align 4, !dbg !2163
  call void @_exit(i32 %26) #13, !dbg !2164
  unreachable, !dbg !2164

; <label>:27:                                     ; preds = %8, %0
  %28 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !2165
  %29 = call i32 @close_stream(%struct._IO_FILE* %28), !dbg !2167
  %30 = icmp ne i32 %29, 0, !dbg !2168
  br i1 %30, label %31, label %33, !dbg !2169

; <label>:31:                                     ; preds = %27
  %32 = load volatile i32, i32* @exit_failure, align 4, !dbg !2170
  call void @_exit(i32 %32) #13, !dbg !2171
  unreachable, !dbg !2171

; <label>:33:                                     ; preds = %27
  ret void, !dbg !2172
}

; Function Attrs: noreturn
declare void @_exit(i32) #9

; Function Attrs: noinline nounwind uwtable
define %struct.FTS* @fts_open(i8**, i32, i32 (%struct._ftsent**, %struct._ftsent**)*) #3 !dbg !2173 {
  %4 = alloca %struct.FTS*, align 8
  %5 = alloca i8**, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32 (%struct._ftsent**, %struct._ftsent**)*, align 8
  %8 = alloca %struct.FTS*, align 8
  %9 = alloca %struct._ftsent*, align 8
  %10 = alloca %struct._ftsent*, align 8
  %11 = alloca i64, align 8
  %12 = alloca %struct._ftsent*, align 8
  %13 = alloca %struct._ftsent*, align 8
  %14 = alloca i8, align 1
  %15 = alloca i32, align 4
  %16 = alloca i64, align 8
  %17 = alloca i64, align 8
  store i8** %0, i8*** %5, align 8
  call void @llvm.dbg.declare(metadata i8*** %5, metadata !2181, metadata !DIExpression()), !dbg !2182
  store i32 %1, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !2183, metadata !DIExpression()), !dbg !2184
  store i32 (%struct._ftsent**, %struct._ftsent**)* %2, i32 (%struct._ftsent**, %struct._ftsent**)** %7, align 8
  call void @llvm.dbg.declare(metadata i32 (%struct._ftsent**, %struct._ftsent**)** %7, metadata !2185, metadata !DIExpression()), !dbg !2186
  call void @llvm.dbg.declare(metadata %struct.FTS** %8, metadata !2187, metadata !DIExpression()), !dbg !2188
  call void @llvm.dbg.declare(metadata %struct._ftsent** %9, metadata !2189, metadata !DIExpression()), !dbg !2191
  call void @llvm.dbg.declare(metadata %struct._ftsent** %10, metadata !2192, metadata !DIExpression()), !dbg !2193
  call void @llvm.dbg.declare(metadata i64* %11, metadata !2194, metadata !DIExpression()), !dbg !2195
  call void @llvm.dbg.declare(metadata %struct._ftsent** %12, metadata !2196, metadata !DIExpression()), !dbg !2197
  store %struct._ftsent* null, %struct._ftsent** %12, align 8, !dbg !2197
  call void @llvm.dbg.declare(metadata %struct._ftsent** %13, metadata !2198, metadata !DIExpression()), !dbg !2199
  store %struct._ftsent* null, %struct._ftsent** %13, align 8, !dbg !2199
  call void @llvm.dbg.declare(metadata i8* %14, metadata !2200, metadata !DIExpression()), !dbg !2201
  %18 = load i32, i32* %6, align 4, !dbg !2202
  %19 = and i32 %18, -2048, !dbg !2204
  %20 = icmp ne i32 %19, 0, !dbg !2204
  br i1 %20, label %21, label %23, !dbg !2205

; <label>:21:                                     ; preds = %3
  %22 = call i32* @__errno_location() #14, !dbg !2206
  store i32 22, i32* %22, align 4, !dbg !2206
  store %struct.FTS* null, %struct.FTS** %4, align 8, !dbg !2208
  br label %259, !dbg !2208

; <label>:23:                                     ; preds = %3
  %24 = load i32, i32* %6, align 4, !dbg !2209
  %25 = and i32 %24, 4, !dbg !2211
  %26 = icmp ne i32 %25, 0, !dbg !2211
  br i1 %26, label %27, label %33, !dbg !2212

; <label>:27:                                     ; preds = %23
  %28 = load i32, i32* %6, align 4, !dbg !2213
  %29 = and i32 %28, 512, !dbg !2214
  %30 = icmp ne i32 %29, 0, !dbg !2214
  br i1 %30, label %31, label %33, !dbg !2215

; <label>:31:                                     ; preds = %27
  %32 = call i32* @__errno_location() #14, !dbg !2216
  store i32 22, i32* %32, align 4, !dbg !2216
  store %struct.FTS* null, %struct.FTS** %4, align 8, !dbg !2218
  br label %259, !dbg !2218

; <label>:33:                                     ; preds = %27, %23
  %34 = load i32, i32* %6, align 4, !dbg !2219
  %35 = and i32 %34, 18, !dbg !2221
  %36 = icmp ne i32 %35, 0, !dbg !2221
  br i1 %36, label %39, label %37, !dbg !2222

; <label>:37:                                     ; preds = %33
  %38 = call i32* @__errno_location() #14, !dbg !2223
  store i32 22, i32* %38, align 4, !dbg !2223
  store %struct.FTS* null, %struct.FTS** %4, align 8, !dbg !2225
  br label %259, !dbg !2225

; <label>:39:                                     ; preds = %33
  %40 = call noalias i8* @malloc(i64 128) #8, !dbg !2226
  %41 = bitcast i8* %40 to %struct.FTS*, !dbg !2226
  store %struct.FTS* %41, %struct.FTS** %8, align 8, !dbg !2228
  %42 = icmp eq %struct.FTS* %41, null, !dbg !2229
  br i1 %42, label %43, label %44, !dbg !2230

; <label>:43:                                     ; preds = %39
  store %struct.FTS* null, %struct.FTS** %4, align 8, !dbg !2231
  br label %259, !dbg !2231

; <label>:44:                                     ; preds = %39
  %45 = load %struct.FTS*, %struct.FTS** %8, align 8, !dbg !2232
  %46 = bitcast %struct.FTS* %45 to i8*, !dbg !2233
  call void @llvm.memset.p0i8.i64(i8* %46, i8 0, i64 128, i32 8, i1 false), !dbg !2233
  %47 = load i32 (%struct._ftsent**, %struct._ftsent**)*, i32 (%struct._ftsent**, %struct._ftsent**)** %7, align 8, !dbg !2234
  %48 = load %struct.FTS*, %struct.FTS** %8, align 8, !dbg !2235
  %49 = getelementptr inbounds %struct.FTS, %struct.FTS* %48, i32 0, i32 9, !dbg !2236
  store i32 (%struct._ftsent**, %struct._ftsent**)* %47, i32 (%struct._ftsent**, %struct._ftsent**)** %49, align 8, !dbg !2237
  %50 = load i32, i32* %6, align 4, !dbg !2238
  %51 = load %struct.FTS*, %struct.FTS** %8, align 8, !dbg !2239
  %52 = getelementptr inbounds %struct.FTS, %struct.FTS* %51, i32 0, i32 10, !dbg !2240
  store i32 %50, i32* %52, align 8, !dbg !2241
  %53 = load %struct.FTS*, %struct.FTS** %8, align 8, !dbg !2242
  %54 = getelementptr inbounds %struct.FTS, %struct.FTS* %53, i32 0, i32 10, !dbg !2242
  %55 = load i32, i32* %54, align 8, !dbg !2242
  %56 = and i32 %55, 2, !dbg !2242
  %57 = icmp ne i32 %56, 0, !dbg !2242
  br i1 %57, label %58, label %67, !dbg !2244

; <label>:58:                                     ; preds = %44
  %59 = load %struct.FTS*, %struct.FTS** %8, align 8, !dbg !2245
  %60 = getelementptr inbounds %struct.FTS, %struct.FTS* %59, i32 0, i32 10, !dbg !2245
  %61 = load i32, i32* %60, align 8, !dbg !2245
  %62 = or i32 %61, 4, !dbg !2245
  store i32 %62, i32* %60, align 8, !dbg !2245
  %63 = load %struct.FTS*, %struct.FTS** %8, align 8, !dbg !2247
  %64 = getelementptr inbounds %struct.FTS, %struct.FTS* %63, i32 0, i32 10, !dbg !2247
  %65 = load i32, i32* %64, align 8, !dbg !2247
  %66 = and i32 %65, -513, !dbg !2247
  store i32 %66, i32* %64, align 8, !dbg !2247
  br label %67, !dbg !2248

; <label>:67:                                     ; preds = %58, %44
  %68 = load %struct.FTS*, %struct.FTS** %8, align 8, !dbg !2249
  %69 = getelementptr inbounds %struct.FTS, %struct.FTS* %68, i32 0, i32 6, !dbg !2250
  store i32 -100, i32* %69, align 4, !dbg !2251
  %70 = load %struct.FTS*, %struct.FTS** %8, align 8, !dbg !2252
  %71 = getelementptr inbounds %struct.FTS, %struct.FTS* %70, i32 0, i32 10, !dbg !2252
  %72 = load i32, i32* %71, align 8, !dbg !2252
  %73 = and i32 %72, 512, !dbg !2252
  %74 = icmp ne i32 %73, 0, !dbg !2252
  br i1 %74, label %75, label %85, !dbg !2254

; <label>:75:                                     ; preds = %67
  br i1 true, label %85, label %76, !dbg !2255

; <label>:76:                                     ; preds = %75
  call void @llvm.dbg.declare(metadata i32* %15, metadata !2256, metadata !DIExpression()), !dbg !2258
  %77 = call i32 (i8*, i32, ...) @open_safer(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.112, i32 0, i32 0), i32 0), !dbg !2259
  store i32 %77, i32* %15, align 4, !dbg !2258
  %78 = load i32, i32* %15, align 4, !dbg !2260
  %79 = icmp slt i32 %78, 0, !dbg !2262
  br i1 %79, label %80, label %81, !dbg !2263

; <label>:80:                                     ; preds = %76
  br label %84, !dbg !2264

; <label>:81:                                     ; preds = %76
  %82 = load i32, i32* %15, align 4, !dbg !2266
  %83 = call i32 @close(i32 %82), !dbg !2268
  br label %84

; <label>:84:                                     ; preds = %81, %80
  br label %85, !dbg !2269

; <label>:85:                                     ; preds = %84, %75, %67
  call void @llvm.dbg.declare(metadata i64* %16, metadata !2270, metadata !DIExpression()), !dbg !2272
  %86 = load i8**, i8*** %5, align 8, !dbg !2273
  %87 = call i64 @fts_maxarglen(i8** %86), !dbg !2274
  store i64 %87, i64* %16, align 8, !dbg !2272
  %88 = load %struct.FTS*, %struct.FTS** %8, align 8, !dbg !2275
  %89 = load i64, i64* %16, align 8, !dbg !2277
  %90 = icmp ugt i64 %89, 4096, !dbg !2277
  br i1 %90, label %91, label %93, !dbg !2277

; <label>:91:                                     ; preds = %85
  %92 = load i64, i64* %16, align 8, !dbg !2277
  br label %94, !dbg !2277

; <label>:93:                                     ; preds = %85
  br label %94, !dbg !2277

; <label>:94:                                     ; preds = %93, %91
  %95 = phi i64 [ %92, %91 ], [ 4096, %93 ], !dbg !2277
  %96 = call zeroext i1 @fts_palloc(%struct.FTS* %88, i64 %95), !dbg !2278
  br i1 %96, label %98, label %97, !dbg !2279

; <label>:97:                                     ; preds = %94
  br label %256, !dbg !2280

; <label>:98:                                     ; preds = %94
  %99 = load i8**, i8*** %5, align 8, !dbg !2281
  %100 = load i8*, i8** %99, align 8, !dbg !2283
  %101 = icmp ne i8* %100, null, !dbg !2284
  br i1 %101, label %102, label %110, !dbg !2285

; <label>:102:                                    ; preds = %98
  %103 = load %struct.FTS*, %struct.FTS** %8, align 8, !dbg !2286
  %104 = call %struct._ftsent* @fts_alloc(%struct.FTS* %103, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1.113, i32 0, i32 0), i64 0), !dbg !2289
  store %struct._ftsent* %104, %struct._ftsent** %12, align 8, !dbg !2290
  %105 = icmp eq %struct._ftsent* %104, null, !dbg !2291
  br i1 %105, label %106, label %107, !dbg !2292

; <label>:106:                                    ; preds = %102
  br label %252, !dbg !2293

; <label>:107:                                    ; preds = %102
  %108 = load %struct._ftsent*, %struct._ftsent** %12, align 8, !dbg !2294
  %109 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %108, i32 0, i32 11, !dbg !2295
  store i64 -1, i64* %109, align 8, !dbg !2296
  br label %110, !dbg !2297

; <label>:110:                                    ; preds = %107, %98
  %111 = load i32 (%struct._ftsent**, %struct._ftsent**)*, i32 (%struct._ftsent**, %struct._ftsent**)** %7, align 8, !dbg !2298
  %112 = icmp eq i32 (%struct._ftsent**, %struct._ftsent**)* %111, null, !dbg !2299
  br i1 %112, label %119, label %113, !dbg !2300

; <label>:113:                                    ; preds = %110
  %114 = load %struct.FTS*, %struct.FTS** %8, align 8, !dbg !2301
  %115 = getelementptr inbounds %struct.FTS, %struct.FTS* %114, i32 0, i32 10, !dbg !2301
  %116 = load i32, i32* %115, align 8, !dbg !2301
  %117 = and i32 %116, 1024, !dbg !2301
  %118 = icmp ne i32 %117, 0, !dbg !2300
  br label %119, !dbg !2300

; <label>:119:                                    ; preds = %113, %110
  %120 = phi i1 [ true, %110 ], [ %118, %113 ]
  %121 = zext i1 %120 to i8, !dbg !2302
  store i8 %121, i8* %14, align 1, !dbg !2302
  store %struct._ftsent* null, %struct._ftsent** %10, align 8, !dbg !2303
  store i64 0, i64* %11, align 8, !dbg !2305
  br label %122, !dbg !2306

; <label>:122:                                    ; preds = %185, %119
  %123 = load i8**, i8*** %5, align 8, !dbg !2307
  %124 = load i8*, i8** %123, align 8, !dbg !2309
  %125 = icmp ne i8* %124, null, !dbg !2310
  br i1 %125, label %126, label %190, !dbg !2311

; <label>:126:                                    ; preds = %122
  call void @llvm.dbg.declare(metadata i64* %17, metadata !2312, metadata !DIExpression()), !dbg !2314
  %127 = load i8**, i8*** %5, align 8, !dbg !2315
  %128 = load i8*, i8** %127, align 8, !dbg !2316
  %129 = call i64 @strlen(i8* %128) #12, !dbg !2317
  store i64 %129, i64* %17, align 8, !dbg !2314
  %130 = load %struct.FTS*, %struct.FTS** %8, align 8, !dbg !2318
  %131 = load i8**, i8*** %5, align 8, !dbg !2320
  %132 = load i8*, i8** %131, align 8, !dbg !2321
  %133 = load i64, i64* %17, align 8, !dbg !2322
  %134 = call %struct._ftsent* @fts_alloc(%struct.FTS* %130, i8* %132, i64 %133), !dbg !2323
  store %struct._ftsent* %134, %struct._ftsent** %9, align 8, !dbg !2324
  %135 = icmp eq %struct._ftsent* %134, null, !dbg !2325
  br i1 %135, label %136, label %137, !dbg !2326

; <label>:136:                                    ; preds = %126
  br label %248, !dbg !2327

; <label>:137:                                    ; preds = %126
  %138 = load %struct._ftsent*, %struct._ftsent** %9, align 8, !dbg !2328
  %139 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %138, i32 0, i32 11, !dbg !2329
  store i64 0, i64* %139, align 8, !dbg !2330
  %140 = load %struct._ftsent*, %struct._ftsent** %12, align 8, !dbg !2331
  %141 = load %struct._ftsent*, %struct._ftsent** %9, align 8, !dbg !2332
  %142 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %141, i32 0, i32 1, !dbg !2333
  store %struct._ftsent* %140, %struct._ftsent** %142, align 8, !dbg !2334
  %143 = load %struct._ftsent*, %struct._ftsent** %9, align 8, !dbg !2335
  %144 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %143, i32 0, i32 18, !dbg !2336
  %145 = getelementptr inbounds [1 x i8], [1 x i8]* %144, i32 0, i32 0, !dbg !2335
  %146 = load %struct._ftsent*, %struct._ftsent** %9, align 8, !dbg !2337
  %147 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %146, i32 0, i32 5, !dbg !2338
  store i8* %145, i8** %147, align 8, !dbg !2339
  %148 = load i8, i8* %14, align 1, !dbg !2340
  %149 = trunc i8 %148 to i1, !dbg !2340
  br i1 %149, label %150, label %157, !dbg !2342

; <label>:150:                                    ; preds = %137
  %151 = load %struct._ftsent*, %struct._ftsent** %10, align 8, !dbg !2343
  %152 = icmp ne %struct._ftsent* %151, null, !dbg !2344
  br i1 %152, label %153, label %157, !dbg !2345

; <label>:153:                                    ; preds = %150
  %154 = load %struct._ftsent*, %struct._ftsent** %9, align 8, !dbg !2346
  %155 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %154, i32 0, i32 14, !dbg !2348
  store i16 11, i16* %155, align 8, !dbg !2349
  %156 = load %struct._ftsent*, %struct._ftsent** %9, align 8, !dbg !2350
  call void @fts_set_stat_required(%struct._ftsent* %156, i1 zeroext true), !dbg !2351
  br label %163, !dbg !2352

; <label>:157:                                    ; preds = %150, %137
  %158 = load %struct.FTS*, %struct.FTS** %8, align 8, !dbg !2353
  %159 = load %struct._ftsent*, %struct._ftsent** %9, align 8, !dbg !2355
  %160 = call zeroext i16 @fts_stat(%struct.FTS* %158, %struct._ftsent* %159, i1 zeroext false), !dbg !2356
  %161 = load %struct._ftsent*, %struct._ftsent** %9, align 8, !dbg !2357
  %162 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %161, i32 0, i32 14, !dbg !2358
  store i16 %160, i16* %162, align 8, !dbg !2359
  br label %163

; <label>:163:                                    ; preds = %157, %153
  %164 = load i32 (%struct._ftsent**, %struct._ftsent**)*, i32 (%struct._ftsent**, %struct._ftsent**)** %7, align 8, !dbg !2360
  %165 = icmp ne i32 (%struct._ftsent**, %struct._ftsent**)* %164, null, !dbg !2360
  br i1 %165, label %166, label %171, !dbg !2362

; <label>:166:                                    ; preds = %163
  %167 = load %struct._ftsent*, %struct._ftsent** %10, align 8, !dbg !2363
  %168 = load %struct._ftsent*, %struct._ftsent** %9, align 8, !dbg !2365
  %169 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %168, i32 0, i32 2, !dbg !2366
  store %struct._ftsent* %167, %struct._ftsent** %169, align 8, !dbg !2367
  %170 = load %struct._ftsent*, %struct._ftsent** %9, align 8, !dbg !2368
  store %struct._ftsent* %170, %struct._ftsent** %10, align 8, !dbg !2369
  br label %184, !dbg !2370

; <label>:171:                                    ; preds = %163
  %172 = load %struct._ftsent*, %struct._ftsent** %9, align 8, !dbg !2371
  %173 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %172, i32 0, i32 2, !dbg !2373
  store %struct._ftsent* null, %struct._ftsent** %173, align 8, !dbg !2374
  %174 = load %struct._ftsent*, %struct._ftsent** %10, align 8, !dbg !2375
  %175 = icmp eq %struct._ftsent* %174, null, !dbg !2377
  br i1 %175, label %176, label %178, !dbg !2378

; <label>:176:                                    ; preds = %171
  %177 = load %struct._ftsent*, %struct._ftsent** %9, align 8, !dbg !2379
  store %struct._ftsent* %177, %struct._ftsent** %10, align 8, !dbg !2380
  store %struct._ftsent* %177, %struct._ftsent** %13, align 8, !dbg !2381
  br label %183, !dbg !2382

; <label>:178:                                    ; preds = %171
  %179 = load %struct._ftsent*, %struct._ftsent** %9, align 8, !dbg !2383
  %180 = load %struct._ftsent*, %struct._ftsent** %13, align 8, !dbg !2385
  %181 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %180, i32 0, i32 2, !dbg !2386
  store %struct._ftsent* %179, %struct._ftsent** %181, align 8, !dbg !2387
  %182 = load %struct._ftsent*, %struct._ftsent** %9, align 8, !dbg !2388
  store %struct._ftsent* %182, %struct._ftsent** %13, align 8, !dbg !2389
  br label %183

; <label>:183:                                    ; preds = %178, %176
  br label %184

; <label>:184:                                    ; preds = %183, %166
  br label %185, !dbg !2390

; <label>:185:                                    ; preds = %184
  %186 = load i8**, i8*** %5, align 8, !dbg !2391
  %187 = getelementptr inbounds i8*, i8** %186, i32 1, !dbg !2391
  store i8** %187, i8*** %5, align 8, !dbg !2391
  %188 = load i64, i64* %11, align 8, !dbg !2392
  %189 = add i64 %188, 1, !dbg !2392
  store i64 %189, i64* %11, align 8, !dbg !2392
  br label %122, !dbg !2393, !llvm.loop !2394

; <label>:190:                                    ; preds = %122
  %191 = load i32 (%struct._ftsent**, %struct._ftsent**)*, i32 (%struct._ftsent**, %struct._ftsent**)** %7, align 8, !dbg !2396
  %192 = icmp ne i32 (%struct._ftsent**, %struct._ftsent**)* %191, null, !dbg !2396
  br i1 %192, label %193, label %201, !dbg !2398

; <label>:193:                                    ; preds = %190
  %194 = load i64, i64* %11, align 8, !dbg !2399
  %195 = icmp ugt i64 %194, 1, !dbg !2400
  br i1 %195, label %196, label %201, !dbg !2401

; <label>:196:                                    ; preds = %193
  %197 = load %struct.FTS*, %struct.FTS** %8, align 8, !dbg !2402
  %198 = load %struct._ftsent*, %struct._ftsent** %10, align 8, !dbg !2403
  %199 = load i64, i64* %11, align 8, !dbg !2404
  %200 = call %struct._ftsent* @fts_sort(%struct.FTS* %197, %struct._ftsent* %198, i64 %199), !dbg !2405
  store %struct._ftsent* %200, %struct._ftsent** %10, align 8, !dbg !2406
  br label %201, !dbg !2407

; <label>:201:                                    ; preds = %196, %193, %190
  %202 = load %struct.FTS*, %struct.FTS** %8, align 8, !dbg !2408
  %203 = call %struct._ftsent* @fts_alloc(%struct.FTS* %202, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1.113, i32 0, i32 0), i64 0), !dbg !2410
  %204 = load %struct.FTS*, %struct.FTS** %8, align 8, !dbg !2411
  %205 = getelementptr inbounds %struct.FTS, %struct.FTS* %204, i32 0, i32 0, !dbg !2412
  store %struct._ftsent* %203, %struct._ftsent** %205, align 8, !dbg !2413
  %206 = icmp eq %struct._ftsent* %203, null, !dbg !2414
  br i1 %206, label %207, label %208, !dbg !2415

; <label>:207:                                    ; preds = %201
  br label %248, !dbg !2416

; <label>:208:                                    ; preds = %201
  %209 = load %struct._ftsent*, %struct._ftsent** %10, align 8, !dbg !2417
  %210 = load %struct.FTS*, %struct.FTS** %8, align 8, !dbg !2418
  %211 = getelementptr inbounds %struct.FTS, %struct.FTS* %210, i32 0, i32 0, !dbg !2419
  %212 = load %struct._ftsent*, %struct._ftsent** %211, align 8, !dbg !2419
  %213 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %212, i32 0, i32 2, !dbg !2420
  store %struct._ftsent* %209, %struct._ftsent** %213, align 8, !dbg !2421
  %214 = load %struct.FTS*, %struct.FTS** %8, align 8, !dbg !2422
  %215 = getelementptr inbounds %struct.FTS, %struct.FTS* %214, i32 0, i32 0, !dbg !2423
  %216 = load %struct._ftsent*, %struct._ftsent** %215, align 8, !dbg !2423
  %217 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %216, i32 0, i32 14, !dbg !2424
  store i16 9, i16* %217, align 8, !dbg !2425
  %218 = load %struct.FTS*, %struct.FTS** %8, align 8, !dbg !2426
  %219 = call zeroext i1 @setup_dir(%struct.FTS* %218), !dbg !2428
  br i1 %219, label %221, label %220, !dbg !2429

; <label>:220:                                    ; preds = %208
  br label %248, !dbg !2430

; <label>:221:                                    ; preds = %208
  %222 = load %struct.FTS*, %struct.FTS** %8, align 8, !dbg !2431
  %223 = getelementptr inbounds %struct.FTS, %struct.FTS* %222, i32 0, i32 10, !dbg !2431
  %224 = load i32, i32* %223, align 8, !dbg !2431
  %225 = and i32 %224, 4, !dbg !2431
  %226 = icmp ne i32 %225, 0, !dbg !2431
  br i1 %226, label %244, label %227, !dbg !2433

; <label>:227:                                    ; preds = %221
  %228 = load %struct.FTS*, %struct.FTS** %8, align 8, !dbg !2434
  %229 = getelementptr inbounds %struct.FTS, %struct.FTS* %228, i32 0, i32 10, !dbg !2434
  %230 = load i32, i32* %229, align 8, !dbg !2434
  %231 = and i32 %230, 512, !dbg !2434
  %232 = icmp ne i32 %231, 0, !dbg !2434
  br i1 %232, label %244, label %233, !dbg !2435

; <label>:233:                                    ; preds = %227
  %234 = load %struct.FTS*, %struct.FTS** %8, align 8, !dbg !2436
  %235 = call i32 @diropen(%struct.FTS* %234, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.112, i32 0, i32 0)), !dbg !2437
  %236 = load %struct.FTS*, %struct.FTS** %8, align 8, !dbg !2438
  %237 = getelementptr inbounds %struct.FTS, %struct.FTS* %236, i32 0, i32 5, !dbg !2439
  store i32 %235, i32* %237, align 8, !dbg !2440
  %238 = icmp slt i32 %235, 0, !dbg !2441
  br i1 %238, label %239, label %244, !dbg !2442

; <label>:239:                                    ; preds = %233
  %240 = load %struct.FTS*, %struct.FTS** %8, align 8, !dbg !2443
  %241 = getelementptr inbounds %struct.FTS, %struct.FTS* %240, i32 0, i32 10, !dbg !2443
  %242 = load i32, i32* %241, align 8, !dbg !2443
  %243 = or i32 %242, 4, !dbg !2443
  store i32 %243, i32* %241, align 8, !dbg !2443
  br label %244, !dbg !2443

; <label>:244:                                    ; preds = %239, %233, %227, %221
  %245 = load %struct.FTS*, %struct.FTS** %8, align 8, !dbg !2444
  %246 = getelementptr inbounds %struct.FTS, %struct.FTS* %245, i32 0, i32 13, !dbg !2445
  call void @i_ring_init(%struct.I_ring* %246, i32 -1), !dbg !2446
  %247 = load %struct.FTS*, %struct.FTS** %8, align 8, !dbg !2447
  store %struct.FTS* %247, %struct.FTS** %4, align 8, !dbg !2448
  br label %259, !dbg !2448

; <label>:248:                                    ; preds = %220, %207, %136
  %249 = load %struct._ftsent*, %struct._ftsent** %10, align 8, !dbg !2449
  call void @fts_lfree(%struct._ftsent* %249), !dbg !2450
  %250 = load %struct._ftsent*, %struct._ftsent** %12, align 8, !dbg !2451
  %251 = bitcast %struct._ftsent* %250 to i8*, !dbg !2451
  call void @free(i8* %251) #8, !dbg !2452
  br label %252, !dbg !2452

; <label>:252:                                    ; preds = %248, %106
  %253 = load %struct.FTS*, %struct.FTS** %8, align 8, !dbg !2453
  %254 = getelementptr inbounds %struct.FTS, %struct.FTS* %253, i32 0, i32 4, !dbg !2454
  %255 = load i8*, i8** %254, align 8, !dbg !2454
  call void @free(i8* %255) #8, !dbg !2455
  br label %256, !dbg !2455

; <label>:256:                                    ; preds = %252, %97
  %257 = load %struct.FTS*, %struct.FTS** %8, align 8, !dbg !2456
  %258 = bitcast %struct.FTS* %257 to i8*, !dbg !2456
  call void @free(i8* %258) #8, !dbg !2457
  store %struct.FTS* null, %struct.FTS** %4, align 8, !dbg !2458
  br label %259, !dbg !2458

; <label>:259:                                    ; preds = %256, %244, %43, %37, %31, %21
  %260 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !2459
  ret %struct.FTS* %260, !dbg !2459
}

; Function Attrs: nounwind
declare noalias i8* @malloc(i64) #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i32, i1) #10

; Function Attrs: noinline nounwind uwtable
define internal i64 @fts_maxarglen(i8**) #3 !dbg !2460 {
  %2 = alloca i8**, align 8
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  store i8** %0, i8*** %2, align 8
  call void @llvm.dbg.declare(metadata i8*** %2, metadata !2463, metadata !DIExpression()), !dbg !2464
  call void @llvm.dbg.declare(metadata i64* %3, metadata !2465, metadata !DIExpression()), !dbg !2466
  call void @llvm.dbg.declare(metadata i64* %4, metadata !2467, metadata !DIExpression()), !dbg !2468
  store i64 0, i64* %4, align 8, !dbg !2469
  br label %5, !dbg !2471

; <label>:5:                                      ; preds = %18, %1
  %6 = load i8**, i8*** %2, align 8, !dbg !2472
  %7 = load i8*, i8** %6, align 8, !dbg !2474
  %8 = icmp ne i8* %7, null, !dbg !2475
  br i1 %8, label %9, label %21, !dbg !2475

; <label>:9:                                      ; preds = %5
  %10 = load i8**, i8*** %2, align 8, !dbg !2476
  %11 = load i8*, i8** %10, align 8, !dbg !2478
  %12 = call i64 @strlen(i8* %11) #12, !dbg !2479
  store i64 %12, i64* %3, align 8, !dbg !2480
  %13 = load i64, i64* %4, align 8, !dbg !2481
  %14 = icmp ugt i64 %12, %13, !dbg !2482
  br i1 %14, label %15, label %17, !dbg !2483

; <label>:15:                                     ; preds = %9
  %16 = load i64, i64* %3, align 8, !dbg !2484
  store i64 %16, i64* %4, align 8, !dbg !2485
  br label %17, !dbg !2486

; <label>:17:                                     ; preds = %15, %9
  br label %18, !dbg !2481

; <label>:18:                                     ; preds = %17
  %19 = load i8**, i8*** %2, align 8, !dbg !2487
  %20 = getelementptr inbounds i8*, i8** %19, i32 1, !dbg !2487
  store i8** %20, i8*** %2, align 8, !dbg !2487
  br label %5, !dbg !2488, !llvm.loop !2489

; <label>:21:                                     ; preds = %5
  %22 = load i64, i64* %4, align 8, !dbg !2491
  %23 = add i64 %22, 1, !dbg !2492
  ret i64 %23, !dbg !2493
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i1 @fts_palloc(%struct.FTS*, i64) #3 !dbg !2494 {
  %3 = alloca i1, align 1
  %4 = alloca %struct.FTS*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i64, align 8
  store %struct.FTS* %0, %struct.FTS** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.FTS** %4, metadata !2497, metadata !DIExpression()), !dbg !2498
  store i64 %1, i64* %5, align 8
  call void @llvm.dbg.declare(metadata i64* %5, metadata !2499, metadata !DIExpression()), !dbg !2500
  call void @llvm.dbg.declare(metadata i8** %6, metadata !2501, metadata !DIExpression()), !dbg !2502
  call void @llvm.dbg.declare(metadata i64* %7, metadata !2503, metadata !DIExpression()), !dbg !2504
  %8 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !2505
  %9 = getelementptr inbounds %struct.FTS, %struct.FTS* %8, i32 0, i32 7, !dbg !2506
  %10 = load i64, i64* %9, align 8, !dbg !2506
  %11 = load i64, i64* %5, align 8, !dbg !2507
  %12 = add i64 %10, %11, !dbg !2508
  %13 = add i64 %12, 256, !dbg !2509
  store i64 %13, i64* %7, align 8, !dbg !2504
  %14 = load i64, i64* %7, align 8, !dbg !2510
  %15 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !2512
  %16 = getelementptr inbounds %struct.FTS, %struct.FTS* %15, i32 0, i32 7, !dbg !2513
  %17 = load i64, i64* %16, align 8, !dbg !2513
  %18 = icmp ult i64 %14, %17, !dbg !2514
  br i1 %18, label %19, label %26, !dbg !2515

; <label>:19:                                     ; preds = %2
  %20 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !2516
  %21 = getelementptr inbounds %struct.FTS, %struct.FTS* %20, i32 0, i32 4, !dbg !2518
  %22 = load i8*, i8** %21, align 8, !dbg !2518
  call void @free(i8* %22) #8, !dbg !2519
  %23 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !2520
  %24 = getelementptr inbounds %struct.FTS, %struct.FTS* %23, i32 0, i32 4, !dbg !2521
  store i8* null, i8** %24, align 8, !dbg !2522
  %25 = call i32* @__errno_location() #14, !dbg !2523
  store i32 36, i32* %25, align 4, !dbg !2523
  store i1 false, i1* %3, align 1, !dbg !2524
  br label %49, !dbg !2524

; <label>:26:                                     ; preds = %2
  %27 = load i64, i64* %7, align 8, !dbg !2525
  %28 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !2526
  %29 = getelementptr inbounds %struct.FTS, %struct.FTS* %28, i32 0, i32 7, !dbg !2527
  store i64 %27, i64* %29, align 8, !dbg !2528
  %30 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !2529
  %31 = getelementptr inbounds %struct.FTS, %struct.FTS* %30, i32 0, i32 4, !dbg !2530
  %32 = load i8*, i8** %31, align 8, !dbg !2530
  %33 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !2531
  %34 = getelementptr inbounds %struct.FTS, %struct.FTS* %33, i32 0, i32 7, !dbg !2532
  %35 = load i64, i64* %34, align 8, !dbg !2532
  %36 = call i8* @realloc(i8* %32, i64 %35) #8, !dbg !2533
  store i8* %36, i8** %6, align 8, !dbg !2534
  %37 = load i8*, i8** %6, align 8, !dbg !2535
  %38 = icmp eq i8* %37, null, !dbg !2537
  br i1 %38, label %39, label %45, !dbg !2538

; <label>:39:                                     ; preds = %26
  %40 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !2539
  %41 = getelementptr inbounds %struct.FTS, %struct.FTS* %40, i32 0, i32 4, !dbg !2541
  %42 = load i8*, i8** %41, align 8, !dbg !2541
  call void @free(i8* %42) #8, !dbg !2542
  %43 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !2543
  %44 = getelementptr inbounds %struct.FTS, %struct.FTS* %43, i32 0, i32 4, !dbg !2544
  store i8* null, i8** %44, align 8, !dbg !2545
  store i1 false, i1* %3, align 1, !dbg !2546
  br label %49, !dbg !2546

; <label>:45:                                     ; preds = %26
  %46 = load i8*, i8** %6, align 8, !dbg !2547
  %47 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !2548
  %48 = getelementptr inbounds %struct.FTS, %struct.FTS* %47, i32 0, i32 4, !dbg !2549
  store i8* %46, i8** %48, align 8, !dbg !2550
  store i1 true, i1* %3, align 1, !dbg !2551
  br label %49, !dbg !2551

; <label>:49:                                     ; preds = %45, %39, %19
  %50 = load i1, i1* %3, align 1, !dbg !2552
  ret i1 %50, !dbg !2552
}

; Function Attrs: noinline nounwind uwtable
define internal %struct._ftsent* @fts_alloc(%struct.FTS*, i8*, i64) #3 !dbg !2553 {
  %4 = alloca %struct._ftsent*, align 8
  %5 = alloca %struct.FTS*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i64, align 8
  %8 = alloca %struct._ftsent*, align 8
  %9 = alloca i64, align 8
  store %struct.FTS* %0, %struct.FTS** %5, align 8
  call void @llvm.dbg.declare(metadata %struct.FTS** %5, metadata !2556, metadata !DIExpression()), !dbg !2557
  store i8* %1, i8** %6, align 8
  call void @llvm.dbg.declare(metadata i8** %6, metadata !2558, metadata !DIExpression()), !dbg !2559
  store i64 %2, i64* %7, align 8
  call void @llvm.dbg.declare(metadata i64* %7, metadata !2560, metadata !DIExpression()), !dbg !2561
  call void @llvm.dbg.declare(metadata %struct._ftsent** %8, metadata !2562, metadata !DIExpression()), !dbg !2563
  call void @llvm.dbg.declare(metadata i64* %9, metadata !2564, metadata !DIExpression()), !dbg !2565
  %10 = load i64, i64* %7, align 8, !dbg !2566
  %11 = add i64 264, %10, !dbg !2567
  store i64 %11, i64* %9, align 8, !dbg !2568
  %12 = load i64, i64* %9, align 8, !dbg !2569
  %13 = call noalias i8* @malloc(i64 %12) #8, !dbg !2571
  %14 = bitcast i8* %13 to %struct._ftsent*, !dbg !2571
  store %struct._ftsent* %14, %struct._ftsent** %8, align 8, !dbg !2572
  %15 = icmp eq %struct._ftsent* %14, null, !dbg !2573
  br i1 %15, label %16, label %17, !dbg !2574

; <label>:16:                                     ; preds = %3
  store %struct._ftsent* null, %struct._ftsent** %4, align 8, !dbg !2575
  br label %49, !dbg !2575

; <label>:17:                                     ; preds = %3
  %18 = load %struct._ftsent*, %struct._ftsent** %8, align 8, !dbg !2576
  %19 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %18, i32 0, i32 18, !dbg !2577
  %20 = getelementptr inbounds [1 x i8], [1 x i8]* %19, i32 0, i32 0, !dbg !2578
  %21 = load i8*, i8** %6, align 8, !dbg !2579
  %22 = load i64, i64* %7, align 8, !dbg !2580
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %20, i8* %21, i64 %22, i32 1, i1 false), !dbg !2578
  %23 = load %struct._ftsent*, %struct._ftsent** %8, align 8, !dbg !2581
  %24 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %23, i32 0, i32 18, !dbg !2582
  %25 = load i64, i64* %7, align 8, !dbg !2583
  %26 = getelementptr inbounds [1 x i8], [1 x i8]* %24, i64 0, i64 %25, !dbg !2581
  store i8 0, i8* %26, align 1, !dbg !2584
  %27 = load i64, i64* %7, align 8, !dbg !2585
  %28 = load %struct._ftsent*, %struct._ftsent** %8, align 8, !dbg !2586
  %29 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %28, i32 0, i32 12, !dbg !2587
  store i64 %27, i64* %29, align 8, !dbg !2588
  %30 = load %struct.FTS*, %struct.FTS** %5, align 8, !dbg !2589
  %31 = load %struct._ftsent*, %struct._ftsent** %8, align 8, !dbg !2590
  %32 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %31, i32 0, i32 10, !dbg !2591
  store %struct.FTS* %30, %struct.FTS** %32, align 8, !dbg !2592
  %33 = load %struct.FTS*, %struct.FTS** %5, align 8, !dbg !2593
  %34 = getelementptr inbounds %struct.FTS, %struct.FTS* %33, i32 0, i32 4, !dbg !2594
  %35 = load i8*, i8** %34, align 8, !dbg !2594
  %36 = load %struct._ftsent*, %struct._ftsent** %8, align 8, !dbg !2595
  %37 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %36, i32 0, i32 6, !dbg !2596
  store i8* %35, i8** %37, align 8, !dbg !2597
  %38 = load %struct._ftsent*, %struct._ftsent** %8, align 8, !dbg !2598
  %39 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %38, i32 0, i32 7, !dbg !2599
  store i32 0, i32* %39, align 8, !dbg !2600
  %40 = load %struct._ftsent*, %struct._ftsent** %8, align 8, !dbg !2601
  %41 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %40, i32 0, i32 15, !dbg !2602
  store i16 0, i16* %41, align 2, !dbg !2603
  %42 = load %struct._ftsent*, %struct._ftsent** %8, align 8, !dbg !2604
  %43 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %42, i32 0, i32 16, !dbg !2605
  store i16 3, i16* %43, align 4, !dbg !2606
  %44 = load %struct._ftsent*, %struct._ftsent** %8, align 8, !dbg !2607
  %45 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %44, i32 0, i32 3, !dbg !2608
  store i64 0, i64* %45, align 8, !dbg !2609
  %46 = load %struct._ftsent*, %struct._ftsent** %8, align 8, !dbg !2610
  %47 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %46, i32 0, i32 4, !dbg !2611
  store i8* null, i8** %47, align 8, !dbg !2612
  %48 = load %struct._ftsent*, %struct._ftsent** %8, align 8, !dbg !2613
  store %struct._ftsent* %48, %struct._ftsent** %4, align 8, !dbg !2614
  br label %49, !dbg !2614

; <label>:49:                                     ; preds = %17, %16
  %50 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !2615
  ret %struct._ftsent* %50, !dbg !2615
}

; Function Attrs: noinline nounwind uwtable
define internal void @fts_set_stat_required(%struct._ftsent*, i1 zeroext) #3 !dbg !2616 {
  %3 = alloca %struct._ftsent*, align 8
  %4 = alloca i8, align 1
  store %struct._ftsent* %0, %struct._ftsent** %3, align 8
  call void @llvm.dbg.declare(metadata %struct._ftsent** %3, metadata !2619, metadata !DIExpression()), !dbg !2620
  %5 = zext i1 %1 to i8
  store i8 %5, i8* %4, align 1
  call void @llvm.dbg.declare(metadata i8* %4, metadata !2621, metadata !DIExpression()), !dbg !2622
  br label %6, !dbg !2623, !llvm.loop !2624

; <label>:6:                                      ; preds = %2
  %7 = load %struct._ftsent*, %struct._ftsent** %3, align 8, !dbg !2625
  %8 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %7, i32 0, i32 14, !dbg !2625
  %9 = load i16, i16* %8, align 8, !dbg !2625
  %10 = zext i16 %9 to i32, !dbg !2625
  %11 = icmp eq i32 %10, 11, !dbg !2625
  br i1 %11, label %13, label %12, !dbg !2628

; <label>:12:                                     ; preds = %6
  call void @abort() #11, !dbg !2625
  unreachable, !dbg !2625

; <label>:13:                                     ; preds = %6
  br label %14, !dbg !2628

; <label>:14:                                     ; preds = %13
  %15 = load i8, i8* %4, align 1, !dbg !2629
  %16 = trunc i8 %15 to i1, !dbg !2629
  %17 = zext i1 %16 to i64, !dbg !2629
  %18 = select i1 %16, i32 2, i32 1, !dbg !2629
  %19 = sext i32 %18 to i64, !dbg !2630
  %20 = load %struct._ftsent*, %struct._ftsent** %3, align 8, !dbg !2631
  %21 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %20, i32 0, i32 17, !dbg !2632
  %22 = getelementptr inbounds [1 x %struct.stat], [1 x %struct.stat]* %21, i32 0, i32 0, !dbg !2633
  %23 = getelementptr inbounds %struct.stat, %struct.stat* %22, i32 0, i32 8, !dbg !2633
  store i64 %19, i64* %23, align 8, !dbg !2634
  ret void, !dbg !2635
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i16 @fts_stat(%struct.FTS*, %struct._ftsent*, i1 zeroext) #3 !dbg !2636 {
  %4 = alloca i16, align 2
  %5 = alloca %struct.FTS*, align 8
  %6 = alloca %struct._ftsent*, align 8
  %7 = alloca i8, align 1
  %8 = alloca %struct.stat*, align 8
  %9 = alloca i32, align 4
  store %struct.FTS* %0, %struct.FTS** %5, align 8
  call void @llvm.dbg.declare(metadata %struct.FTS** %5, metadata !2639, metadata !DIExpression()), !dbg !2640
  store %struct._ftsent* %1, %struct._ftsent** %6, align 8
  call void @llvm.dbg.declare(metadata %struct._ftsent** %6, metadata !2641, metadata !DIExpression()), !dbg !2642
  %10 = zext i1 %2 to i8
  store i8 %10, i8* %7, align 1
  call void @llvm.dbg.declare(metadata i8* %7, metadata !2643, metadata !DIExpression()), !dbg !2644
  call void @llvm.dbg.declare(metadata %struct.stat** %8, metadata !2645, metadata !DIExpression()), !dbg !2647
  %11 = load %struct._ftsent*, %struct._ftsent** %6, align 8, !dbg !2648
  %12 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %11, i32 0, i32 17, !dbg !2649
  %13 = getelementptr inbounds [1 x %struct.stat], [1 x %struct.stat]* %12, i32 0, i32 0, !dbg !2648
  store %struct.stat* %13, %struct.stat** %8, align 8, !dbg !2647
  call void @llvm.dbg.declare(metadata i32* %9, metadata !2650, metadata !DIExpression()), !dbg !2651
  %14 = load %struct._ftsent*, %struct._ftsent** %6, align 8, !dbg !2652
  %15 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %14, i32 0, i32 11, !dbg !2654
  %16 = load i64, i64* %15, align 8, !dbg !2654
  %17 = icmp eq i64 %16, 0, !dbg !2655
  br i1 %17, label %18, label %25, !dbg !2656

; <label>:18:                                     ; preds = %3
  %19 = load %struct.FTS*, %struct.FTS** %5, align 8, !dbg !2657
  %20 = getelementptr inbounds %struct.FTS, %struct.FTS* %19, i32 0, i32 10, !dbg !2657
  %21 = load i32, i32* %20, align 8, !dbg !2657
  %22 = and i32 %21, 1, !dbg !2657
  %23 = icmp ne i32 %22, 0, !dbg !2657
  br i1 %23, label %24, label %25, !dbg !2658

; <label>:24:                                     ; preds = %18
  store i8 1, i8* %7, align 1, !dbg !2659
  br label %25, !dbg !2660

; <label>:25:                                     ; preds = %24, %18, %3
  %26 = load %struct.FTS*, %struct.FTS** %5, align 8, !dbg !2661
  %27 = getelementptr inbounds %struct.FTS, %struct.FTS* %26, i32 0, i32 10, !dbg !2661
  %28 = load i32, i32* %27, align 8, !dbg !2661
  %29 = and i32 %28, 2, !dbg !2661
  %30 = icmp ne i32 %29, 0, !dbg !2661
  br i1 %30, label %34, label %31, !dbg !2663

; <label>:31:                                     ; preds = %25
  %32 = load i8, i8* %7, align 1, !dbg !2664
  %33 = trunc i8 %32 to i1, !dbg !2664
  br i1 %33, label %34, label %61, !dbg !2665

; <label>:34:                                     ; preds = %31, %25
  %35 = load %struct._ftsent*, %struct._ftsent** %6, align 8, !dbg !2666
  %36 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %35, i32 0, i32 5, !dbg !2669
  %37 = load i8*, i8** %36, align 8, !dbg !2669
  %38 = load %struct.stat*, %struct.stat** %8, align 8, !dbg !2670
  %39 = call i32 @stat(i8* %37, %struct.stat* %38) #8, !dbg !2671
  %40 = icmp ne i32 %39, 0, !dbg !2671
  br i1 %40, label %41, label %60, !dbg !2672

; <label>:41:                                     ; preds = %34
  %42 = call i32* @__errno_location() #14, !dbg !2673
  %43 = load i32, i32* %42, align 4, !dbg !2673
  store i32 %43, i32* %9, align 4, !dbg !2675
  %44 = call i32* @__errno_location() #14, !dbg !2676
  %45 = load i32, i32* %44, align 4, !dbg !2676
  %46 = icmp eq i32 %45, 2, !dbg !2678
  br i1 %46, label %47, label %56, !dbg !2679

; <label>:47:                                     ; preds = %41
  %48 = load %struct._ftsent*, %struct._ftsent** %6, align 8, !dbg !2680
  %49 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %48, i32 0, i32 5, !dbg !2681
  %50 = load i8*, i8** %49, align 8, !dbg !2681
  %51 = load %struct.stat*, %struct.stat** %8, align 8, !dbg !2682
  %52 = call i32 @lstat(i8* %50, %struct.stat* %51) #8, !dbg !2683
  %53 = icmp eq i32 %52, 0, !dbg !2684
  br i1 %53, label %54, label %56, !dbg !2685

; <label>:54:                                     ; preds = %47
  %55 = call i32* @__errno_location() #14, !dbg !2686
  store i32 0, i32* %55, align 4, !dbg !2686
  store i16 13, i16* %4, align 2, !dbg !2688
  br label %150, !dbg !2688

; <label>:56:                                     ; preds = %47, %41
  %57 = load i32, i32* %9, align 4, !dbg !2689
  %58 = load %struct._ftsent*, %struct._ftsent** %6, align 8, !dbg !2690
  %59 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %58, i32 0, i32 7, !dbg !2691
  store i32 %57, i32* %59, align 8, !dbg !2692
  br label %76, !dbg !2693

; <label>:60:                                     ; preds = %34
  br label %80, !dbg !2694

; <label>:61:                                     ; preds = %31
  %62 = load %struct.FTS*, %struct.FTS** %5, align 8, !dbg !2695
  %63 = getelementptr inbounds %struct.FTS, %struct.FTS* %62, i32 0, i32 6, !dbg !2697
  %64 = load i32, i32* %63, align 4, !dbg !2697
  %65 = load %struct._ftsent*, %struct._ftsent** %6, align 8, !dbg !2698
  %66 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %65, i32 0, i32 5, !dbg !2699
  %67 = load i8*, i8** %66, align 8, !dbg !2699
  %68 = load %struct.stat*, %struct.stat** %8, align 8, !dbg !2700
  %69 = call i32 @fstatat(i32 %64, i8* %67, %struct.stat* %68, i32 256) #8, !dbg !2701
  %70 = icmp ne i32 %69, 0, !dbg !2701
  br i1 %70, label %71, label %79, !dbg !2702

; <label>:71:                                     ; preds = %61
  %72 = call i32* @__errno_location() #14, !dbg !2703
  %73 = load i32, i32* %72, align 4, !dbg !2703
  %74 = load %struct._ftsent*, %struct._ftsent** %6, align 8, !dbg !2705
  %75 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %74, i32 0, i32 7, !dbg !2706
  store i32 %73, i32* %75, align 8, !dbg !2707
  br label %76, !dbg !2705

; <label>:76:                                     ; preds = %71, %56
  %77 = load %struct.stat*, %struct.stat** %8, align 8, !dbg !2708
  %78 = bitcast %struct.stat* %77 to i8*, !dbg !2709
  call void @llvm.memset.p0i8.i64(i8* %78, i8 0, i64 144, i32 8, i1 false), !dbg !2709
  store i16 10, i16* %4, align 2, !dbg !2710
  br label %150, !dbg !2710

; <label>:79:                                     ; preds = %61
  br label %80

; <label>:80:                                     ; preds = %79, %60
  %81 = load %struct.stat*, %struct.stat** %8, align 8, !dbg !2711
  %82 = getelementptr inbounds %struct.stat, %struct.stat* %81, i32 0, i32 3, !dbg !2711
  %83 = load i32, i32* %82, align 8, !dbg !2711
  %84 = and i32 %83, 61440, !dbg !2711
  %85 = icmp eq i32 %84, 16384, !dbg !2711
  br i1 %85, label %86, label %135, !dbg !2713

; <label>:86:                                     ; preds = %80
  %87 = load %struct.stat*, %struct.stat** %8, align 8, !dbg !2714
  %88 = getelementptr inbounds %struct.stat, %struct.stat* %87, i32 0, i32 2, !dbg !2716
  %89 = load i64, i64* %88, align 8, !dbg !2716
  %90 = load %struct.FTS*, %struct.FTS** %5, align 8, !dbg !2717
  %91 = getelementptr inbounds %struct.FTS, %struct.FTS* %90, i32 0, i32 10, !dbg !2717
  %92 = load i32, i32* %91, align 8, !dbg !2717
  %93 = and i32 %92, 32, !dbg !2717
  %94 = icmp ne i32 %93, 0, !dbg !2717
  %95 = zext i1 %94 to i64, !dbg !2717
  %96 = select i1 %94, i32 0, i32 2, !dbg !2717
  %97 = sext i32 %96 to i64, !dbg !2718
  %98 = sub i64 %89, %97, !dbg !2719
  %99 = load %struct._ftsent*, %struct._ftsent** %6, align 8, !dbg !2720
  %100 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %99, i32 0, i32 13, !dbg !2721
  store i64 %98, i64* %100, align 8, !dbg !2722
  %101 = load %struct._ftsent*, %struct._ftsent** %6, align 8, !dbg !2723
  %102 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %101, i32 0, i32 18, !dbg !2723
  %103 = getelementptr inbounds [1 x i8], [1 x i8]* %102, i64 0, i64 0, !dbg !2723
  %104 = load i8, i8* %103, align 8, !dbg !2723
  %105 = sext i8 %104 to i32, !dbg !2723
  %106 = icmp eq i32 %105, 46, !dbg !2723
  br i1 %106, label %107, label %134, !dbg !2723

; <label>:107:                                    ; preds = %86
  %108 = load %struct._ftsent*, %struct._ftsent** %6, align 8, !dbg !2723
  %109 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %108, i32 0, i32 18, !dbg !2723
  %110 = getelementptr inbounds [1 x i8], [1 x i8]* %109, i64 0, i64 1, !dbg !2723
  %111 = load i8, i8* %110, align 1, !dbg !2723
  %112 = icmp ne i8 %111, 0, !dbg !2723
  br i1 %112, label %113, label %126, !dbg !2723

; <label>:113:                                    ; preds = %107
  %114 = load %struct._ftsent*, %struct._ftsent** %6, align 8, !dbg !2723
  %115 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %114, i32 0, i32 18, !dbg !2723
  %116 = getelementptr inbounds [1 x i8], [1 x i8]* %115, i64 0, i64 1, !dbg !2723
  %117 = load i8, i8* %116, align 1, !dbg !2723
  %118 = sext i8 %117 to i32, !dbg !2723
  %119 = icmp eq i32 %118, 46, !dbg !2723
  br i1 %119, label %120, label %134, !dbg !2723

; <label>:120:                                    ; preds = %113
  %121 = load %struct._ftsent*, %struct._ftsent** %6, align 8, !dbg !2723
  %122 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %121, i32 0, i32 18, !dbg !2723
  %123 = getelementptr inbounds [1 x i8], [1 x i8]* %122, i64 0, i64 2, !dbg !2723
  %124 = load i8, i8* %123, align 2, !dbg !2723
  %125 = icmp ne i8 %124, 0, !dbg !2723
  br i1 %125, label %134, label %126, !dbg !2725

; <label>:126:                                    ; preds = %120, %107
  %127 = load %struct._ftsent*, %struct._ftsent** %6, align 8, !dbg !2726
  %128 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %127, i32 0, i32 11, !dbg !2728
  %129 = load i64, i64* %128, align 8, !dbg !2728
  %130 = icmp eq i64 %129, 0, !dbg !2729
  %131 = zext i1 %130 to i64, !dbg !2726
  %132 = select i1 %130, i32 1, i32 5, !dbg !2726
  %133 = trunc i32 %132 to i16, !dbg !2730
  store i16 %133, i16* %4, align 2, !dbg !2731
  br label %150, !dbg !2731

; <label>:134:                                    ; preds = %120, %113, %86
  store i16 1, i16* %4, align 2, !dbg !2732
  br label %150, !dbg !2732

; <label>:135:                                    ; preds = %80
  %136 = load %struct.stat*, %struct.stat** %8, align 8, !dbg !2733
  %137 = getelementptr inbounds %struct.stat, %struct.stat* %136, i32 0, i32 3, !dbg !2733
  %138 = load i32, i32* %137, align 8, !dbg !2733
  %139 = and i32 %138, 61440, !dbg !2733
  %140 = icmp eq i32 %139, 40960, !dbg !2733
  br i1 %140, label %141, label %142, !dbg !2735

; <label>:141:                                    ; preds = %135
  store i16 12, i16* %4, align 2, !dbg !2736
  br label %150, !dbg !2736

; <label>:142:                                    ; preds = %135
  %143 = load %struct.stat*, %struct.stat** %8, align 8, !dbg !2737
  %144 = getelementptr inbounds %struct.stat, %struct.stat* %143, i32 0, i32 3, !dbg !2737
  %145 = load i32, i32* %144, align 8, !dbg !2737
  %146 = and i32 %145, 61440, !dbg !2737
  %147 = icmp eq i32 %146, 32768, !dbg !2737
  br i1 %147, label %148, label %149, !dbg !2739

; <label>:148:                                    ; preds = %142
  store i16 8, i16* %4, align 2, !dbg !2740
  br label %150, !dbg !2740

; <label>:149:                                    ; preds = %142
  store i16 3, i16* %4, align 2, !dbg !2741
  br label %150, !dbg !2741

; <label>:150:                                    ; preds = %149, %148, %141, %134, %126, %76, %54
  %151 = load i16, i16* %4, align 2, !dbg !2742
  ret i16 %151, !dbg !2742
}

; Function Attrs: noinline nounwind uwtable
define internal %struct._ftsent* @fts_sort(%struct.FTS*, %struct._ftsent*, i64) #3 !dbg !2743 {
  %4 = alloca %struct._ftsent*, align 8
  %5 = alloca %struct.FTS*, align 8
  %6 = alloca %struct._ftsent*, align 8
  %7 = alloca i64, align 8
  %8 = alloca %struct._ftsent**, align 8
  %9 = alloca %struct._ftsent*, align 8
  %10 = alloca %struct._ftsent*, align 8
  %11 = alloca i32 (i8*, i8*)*, align 8
  %12 = alloca %struct._ftsent**, align 8
  store %struct.FTS* %0, %struct.FTS** %5, align 8
  call void @llvm.dbg.declare(metadata %struct.FTS** %5, metadata !2746, metadata !DIExpression()), !dbg !2747
  store %struct._ftsent* %1, %struct._ftsent** %6, align 8
  call void @llvm.dbg.declare(metadata %struct._ftsent** %6, metadata !2748, metadata !DIExpression()), !dbg !2749
  store i64 %2, i64* %7, align 8
  call void @llvm.dbg.declare(metadata i64* %7, metadata !2750, metadata !DIExpression()), !dbg !2751
  call void @llvm.dbg.declare(metadata %struct._ftsent*** %8, metadata !2752, metadata !DIExpression()), !dbg !2754
  call void @llvm.dbg.declare(metadata %struct._ftsent** %9, metadata !2755, metadata !DIExpression()), !dbg !2756
  call void @llvm.dbg.declare(metadata %struct._ftsent** %10, metadata !2757, metadata !DIExpression()), !dbg !2758
  call void @llvm.dbg.declare(metadata i32 (i8*, i8*)** %11, metadata !2759, metadata !DIExpression()), !dbg !2760
  %13 = ptrtoint %struct._ftsent** %10 to i64, !dbg !2761
  %14 = bitcast %struct._ftsent** %10 to i8*, !dbg !2762
  %15 = ptrtoint i8* %14 to i64, !dbg !2763
  %16 = icmp eq i64 %13, %15, !dbg !2764
  br i1 %16, label %17, label %22, !dbg !2765

; <label>:17:                                     ; preds = %3
  %18 = load %struct.FTS*, %struct.FTS** %5, align 8, !dbg !2766
  %19 = getelementptr inbounds %struct.FTS, %struct.FTS* %18, i32 0, i32 9, !dbg !2767
  %20 = load i32 (%struct._ftsent**, %struct._ftsent**)*, i32 (%struct._ftsent**, %struct._ftsent**)** %19, align 8, !dbg !2767
  %21 = bitcast i32 (%struct._ftsent**, %struct._ftsent**)* %20 to i32 (i8*, i8*)*, !dbg !2768
  br label %23, !dbg !2765

; <label>:22:                                     ; preds = %3
  br label %23, !dbg !2765

; <label>:23:                                     ; preds = %22, %17
  %24 = phi i32 (i8*, i8*)* [ %21, %17 ], [ @fts_compar, %22 ], !dbg !2765
  store i32 (i8*, i8*)* %24, i32 (i8*, i8*)** %11, align 8, !dbg !2760
  %25 = load i64, i64* %7, align 8, !dbg !2769
  %26 = load %struct.FTS*, %struct.FTS** %5, align 8, !dbg !2771
  %27 = getelementptr inbounds %struct.FTS, %struct.FTS* %26, i32 0, i32 8, !dbg !2772
  %28 = load i64, i64* %27, align 8, !dbg !2772
  %29 = icmp ugt i64 %25, %28, !dbg !2773
  br i1 %29, label %30, label %65, !dbg !2774

; <label>:30:                                     ; preds = %23
  call void @llvm.dbg.declare(metadata %struct._ftsent*** %12, metadata !2775, metadata !DIExpression()), !dbg !2777
  %31 = load i64, i64* %7, align 8, !dbg !2778
  %32 = add i64 %31, 40, !dbg !2779
  %33 = load %struct.FTS*, %struct.FTS** %5, align 8, !dbg !2780
  %34 = getelementptr inbounds %struct.FTS, %struct.FTS* %33, i32 0, i32 8, !dbg !2781
  store i64 %32, i64* %34, align 8, !dbg !2782
  %35 = load %struct.FTS*, %struct.FTS** %5, align 8, !dbg !2783
  %36 = getelementptr inbounds %struct.FTS, %struct.FTS* %35, i32 0, i32 8, !dbg !2785
  %37 = load i64, i64* %36, align 8, !dbg !2785
  %38 = icmp ult i64 2305843009213693951, %37, !dbg !2786
  br i1 %38, label %51, label %39, !dbg !2787

; <label>:39:                                     ; preds = %30
  %40 = load %struct.FTS*, %struct.FTS** %5, align 8, !dbg !2788
  %41 = getelementptr inbounds %struct.FTS, %struct.FTS* %40, i32 0, i32 2, !dbg !2789
  %42 = load %struct._ftsent**, %struct._ftsent*** %41, align 8, !dbg !2789
  %43 = bitcast %struct._ftsent** %42 to i8*, !dbg !2788
  %44 = load %struct.FTS*, %struct.FTS** %5, align 8, !dbg !2790
  %45 = getelementptr inbounds %struct.FTS, %struct.FTS* %44, i32 0, i32 8, !dbg !2791
  %46 = load i64, i64* %45, align 8, !dbg !2791
  %47 = mul i64 %46, 8, !dbg !2792
  %48 = call i8* @realloc(i8* %43, i64 %47) #8, !dbg !2793
  %49 = bitcast i8* %48 to %struct._ftsent**, !dbg !2793
  store %struct._ftsent** %49, %struct._ftsent*** %12, align 8, !dbg !2794
  %50 = icmp ne %struct._ftsent** %49, null, !dbg !2794
  br i1 %50, label %61, label %51, !dbg !2795

; <label>:51:                                     ; preds = %39, %30
  %52 = load %struct.FTS*, %struct.FTS** %5, align 8, !dbg !2796
  %53 = getelementptr inbounds %struct.FTS, %struct.FTS* %52, i32 0, i32 2, !dbg !2798
  %54 = load %struct._ftsent**, %struct._ftsent*** %53, align 8, !dbg !2798
  %55 = bitcast %struct._ftsent** %54 to i8*, !dbg !2796
  call void @free(i8* %55) #8, !dbg !2799
  %56 = load %struct.FTS*, %struct.FTS** %5, align 8, !dbg !2800
  %57 = getelementptr inbounds %struct.FTS, %struct.FTS* %56, i32 0, i32 2, !dbg !2801
  store %struct._ftsent** null, %struct._ftsent*** %57, align 8, !dbg !2802
  %58 = load %struct.FTS*, %struct.FTS** %5, align 8, !dbg !2803
  %59 = getelementptr inbounds %struct.FTS, %struct.FTS* %58, i32 0, i32 8, !dbg !2804
  store i64 0, i64* %59, align 8, !dbg !2805
  %60 = load %struct._ftsent*, %struct._ftsent** %6, align 8, !dbg !2806
  store %struct._ftsent* %60, %struct._ftsent** %4, align 8, !dbg !2807
  br label %113, !dbg !2807

; <label>:61:                                     ; preds = %39
  %62 = load %struct._ftsent**, %struct._ftsent*** %12, align 8, !dbg !2808
  %63 = load %struct.FTS*, %struct.FTS** %5, align 8, !dbg !2809
  %64 = getelementptr inbounds %struct.FTS, %struct.FTS* %63, i32 0, i32 2, !dbg !2810
  store %struct._ftsent** %62, %struct._ftsent*** %64, align 8, !dbg !2811
  br label %65, !dbg !2812

; <label>:65:                                     ; preds = %61, %23
  %66 = load %struct.FTS*, %struct.FTS** %5, align 8, !dbg !2813
  %67 = getelementptr inbounds %struct.FTS, %struct.FTS* %66, i32 0, i32 2, !dbg !2815
  %68 = load %struct._ftsent**, %struct._ftsent*** %67, align 8, !dbg !2815
  store %struct._ftsent** %68, %struct._ftsent*** %8, align 8, !dbg !2816
  %69 = load %struct._ftsent*, %struct._ftsent** %6, align 8, !dbg !2817
  store %struct._ftsent* %69, %struct._ftsent** %9, align 8, !dbg !2818
  br label %70, !dbg !2819

; <label>:70:                                     ; preds = %77, %65
  %71 = load %struct._ftsent*, %struct._ftsent** %9, align 8, !dbg !2820
  %72 = icmp ne %struct._ftsent* %71, null, !dbg !2822
  br i1 %72, label %73, label %81, !dbg !2822

; <label>:73:                                     ; preds = %70
  %74 = load %struct._ftsent*, %struct._ftsent** %9, align 8, !dbg !2823
  %75 = load %struct._ftsent**, %struct._ftsent*** %8, align 8, !dbg !2824
  %76 = getelementptr inbounds %struct._ftsent*, %struct._ftsent** %75, i32 1, !dbg !2824
  store %struct._ftsent** %76, %struct._ftsent*** %8, align 8, !dbg !2824
  store %struct._ftsent* %74, %struct._ftsent** %75, align 8, !dbg !2825
  br label %77, !dbg !2826

; <label>:77:                                     ; preds = %73
  %78 = load %struct._ftsent*, %struct._ftsent** %9, align 8, !dbg !2827
  %79 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %78, i32 0, i32 2, !dbg !2828
  %80 = load %struct._ftsent*, %struct._ftsent** %79, align 8, !dbg !2828
  store %struct._ftsent* %80, %struct._ftsent** %9, align 8, !dbg !2829
  br label %70, !dbg !2830, !llvm.loop !2831

; <label>:81:                                     ; preds = %70
  %82 = load %struct.FTS*, %struct.FTS** %5, align 8, !dbg !2833
  %83 = getelementptr inbounds %struct.FTS, %struct.FTS* %82, i32 0, i32 2, !dbg !2834
  %84 = load %struct._ftsent**, %struct._ftsent*** %83, align 8, !dbg !2834
  %85 = bitcast %struct._ftsent** %84 to i8*, !dbg !2835
  %86 = load i64, i64* %7, align 8, !dbg !2836
  %87 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %11, align 8, !dbg !2837
  call void @qsort(i8* %85, i64 %86, i64 8, i32 (i8*, i8*)* %87), !dbg !2838
  %88 = load %struct.FTS*, %struct.FTS** %5, align 8, !dbg !2839
  %89 = getelementptr inbounds %struct.FTS, %struct.FTS* %88, i32 0, i32 2, !dbg !2841
  %90 = load %struct._ftsent**, %struct._ftsent*** %89, align 8, !dbg !2841
  store %struct._ftsent** %90, %struct._ftsent*** %8, align 8, !dbg !2842
  %91 = load %struct._ftsent*, %struct._ftsent** %90, align 8, !dbg !2843
  store %struct._ftsent* %91, %struct._ftsent** %6, align 8, !dbg !2844
  br label %92, !dbg !2845

; <label>:92:                                     ; preds = %104, %81
  %93 = load i64, i64* %7, align 8, !dbg !2846
  %94 = add i64 %93, -1, !dbg !2846
  store i64 %94, i64* %7, align 8, !dbg !2846
  %95 = icmp ne i64 %94, 0, !dbg !2848
  br i1 %95, label %96, label %107, !dbg !2848

; <label>:96:                                     ; preds = %92
  %97 = load %struct._ftsent**, %struct._ftsent*** %8, align 8, !dbg !2849
  %98 = getelementptr inbounds %struct._ftsent*, %struct._ftsent** %97, i64 1, !dbg !2849
  %99 = load %struct._ftsent*, %struct._ftsent** %98, align 8, !dbg !2849
  %100 = load %struct._ftsent**, %struct._ftsent*** %8, align 8, !dbg !2850
  %101 = getelementptr inbounds %struct._ftsent*, %struct._ftsent** %100, i64 0, !dbg !2850
  %102 = load %struct._ftsent*, %struct._ftsent** %101, align 8, !dbg !2850
  %103 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %102, i32 0, i32 2, !dbg !2851
  store %struct._ftsent* %99, %struct._ftsent** %103, align 8, !dbg !2852
  br label %104, !dbg !2850

; <label>:104:                                    ; preds = %96
  %105 = load %struct._ftsent**, %struct._ftsent*** %8, align 8, !dbg !2853
  %106 = getelementptr inbounds %struct._ftsent*, %struct._ftsent** %105, i32 1, !dbg !2853
  store %struct._ftsent** %106, %struct._ftsent*** %8, align 8, !dbg !2853
  br label %92, !dbg !2854, !llvm.loop !2855

; <label>:107:                                    ; preds = %92
  %108 = load %struct._ftsent**, %struct._ftsent*** %8, align 8, !dbg !2857
  %109 = getelementptr inbounds %struct._ftsent*, %struct._ftsent** %108, i64 0, !dbg !2857
  %110 = load %struct._ftsent*, %struct._ftsent** %109, align 8, !dbg !2857
  %111 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %110, i32 0, i32 2, !dbg !2858
  store %struct._ftsent* null, %struct._ftsent** %111, align 8, !dbg !2859
  %112 = load %struct._ftsent*, %struct._ftsent** %6, align 8, !dbg !2860
  store %struct._ftsent* %112, %struct._ftsent** %4, align 8, !dbg !2861
  br label %113, !dbg !2861

; <label>:113:                                    ; preds = %107, %51
  %114 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !2862
  ret %struct._ftsent* %114, !dbg !2862
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i1 @setup_dir(%struct.FTS*) #3 !dbg !252 {
  %2 = alloca i1, align 1
  %3 = alloca %struct.FTS*, align 8
  store %struct.FTS* %0, %struct.FTS** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.FTS** %3, metadata !2863, metadata !DIExpression()), !dbg !2864
  %4 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !2865
  %5 = getelementptr inbounds %struct.FTS, %struct.FTS* %4, i32 0, i32 10, !dbg !2867
  %6 = load i32, i32* %5, align 8, !dbg !2867
  %7 = and i32 %6, 258, !dbg !2868
  %8 = icmp ne i32 %7, 0, !dbg !2868
  br i1 %8, label %9, label %21, !dbg !2869

; <label>:9:                                      ; preds = %1
  %10 = call %struct.hash_table* @hash_initialize(i64 31, %struct.hash_tuning* null, i64 (i8*, i64)* @AD_hash, i1 (i8*, i8*)* @AD_compare, void (i8*)* @free), !dbg !2870
  %11 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !2872
  %12 = getelementptr inbounds %struct.FTS, %struct.FTS* %11, i32 0, i32 12, !dbg !2873
  %13 = bitcast %union.anon* %12 to %struct.hash_table**, !dbg !2874
  store %struct.hash_table* %10, %struct.hash_table** %13, align 8, !dbg !2875
  %14 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !2876
  %15 = getelementptr inbounds %struct.FTS, %struct.FTS* %14, i32 0, i32 12, !dbg !2878
  %16 = bitcast %union.anon* %15 to %struct.hash_table**, !dbg !2879
  %17 = load %struct.hash_table*, %struct.hash_table** %16, align 8, !dbg !2879
  %18 = icmp ne %struct.hash_table* %17, null, !dbg !2876
  br i1 %18, label %20, label %19, !dbg !2880

; <label>:19:                                     ; preds = %9
  store i1 false, i1* %2, align 1, !dbg !2881
  br label %39, !dbg !2881

; <label>:20:                                     ; preds = %9
  br label %38, !dbg !2882

; <label>:21:                                     ; preds = %1
  %22 = call noalias i8* @malloc(i64 32) #8, !dbg !2883
  %23 = bitcast i8* %22 to %struct.cycle_check_state*, !dbg !2883
  %24 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !2885
  %25 = getelementptr inbounds %struct.FTS, %struct.FTS* %24, i32 0, i32 12, !dbg !2886
  %26 = bitcast %union.anon* %25 to %struct.cycle_check_state**, !dbg !2887
  store %struct.cycle_check_state* %23, %struct.cycle_check_state** %26, align 8, !dbg !2888
  %27 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !2889
  %28 = getelementptr inbounds %struct.FTS, %struct.FTS* %27, i32 0, i32 12, !dbg !2891
  %29 = bitcast %union.anon* %28 to %struct.cycle_check_state**, !dbg !2892
  %30 = load %struct.cycle_check_state*, %struct.cycle_check_state** %29, align 8, !dbg !2892
  %31 = icmp ne %struct.cycle_check_state* %30, null, !dbg !2889
  br i1 %31, label %33, label %32, !dbg !2893

; <label>:32:                                     ; preds = %21
  store i1 false, i1* %2, align 1, !dbg !2894
  br label %39, !dbg !2894

; <label>:33:                                     ; preds = %21
  %34 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !2895
  %35 = getelementptr inbounds %struct.FTS, %struct.FTS* %34, i32 0, i32 12, !dbg !2896
  %36 = bitcast %union.anon* %35 to %struct.cycle_check_state**, !dbg !2897
  %37 = load %struct.cycle_check_state*, %struct.cycle_check_state** %36, align 8, !dbg !2897
  call void @cycle_check_init(%struct.cycle_check_state* %37), !dbg !2898
  br label %38

; <label>:38:                                     ; preds = %33, %20
  store i1 true, i1* %2, align 1, !dbg !2899
  br label %39, !dbg !2899

; <label>:39:                                     ; preds = %38, %32, %19
  %40 = load i1, i1* %2, align 1, !dbg !2900
  ret i1 %40, !dbg !2900
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @diropen(%struct.FTS*, i8*) #3 !dbg !2901 {
  %3 = alloca %struct.FTS*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  store %struct.FTS* %0, %struct.FTS** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.FTS** %3, metadata !2906, metadata !DIExpression()), !dbg !2907
  store i8* %1, i8** %4, align 8
  call void @llvm.dbg.declare(metadata i8** %4, metadata !2908, metadata !DIExpression()), !dbg !2909
  call void @llvm.dbg.declare(metadata i32* %5, metadata !2910, metadata !DIExpression()), !dbg !2911
  %7 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !2912
  %8 = getelementptr inbounds %struct.FTS, %struct.FTS* %7, i32 0, i32 10, !dbg !2912
  %9 = load i32, i32* %8, align 8, !dbg !2912
  %10 = and i32 %9, 16, !dbg !2912
  %11 = icmp ne i32 %10, 0, !dbg !2912
  %12 = zext i1 %11 to i64, !dbg !2912
  %13 = select i1 %11, i32 131072, i32 0, !dbg !2912
  %14 = or i32 67840, %13, !dbg !2913
  store i32 %14, i32* %5, align 4, !dbg !2911
  call void @llvm.dbg.declare(metadata i32* %6, metadata !2914, metadata !DIExpression()), !dbg !2915
  %15 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !2916
  %16 = getelementptr inbounds %struct.FTS, %struct.FTS* %15, i32 0, i32 10, !dbg !2916
  %17 = load i32, i32* %16, align 8, !dbg !2916
  %18 = and i32 %17, 512, !dbg !2916
  %19 = icmp ne i32 %18, 0, !dbg !2916
  br i1 %19, label %20, label %27, !dbg !2916

; <label>:20:                                     ; preds = %2
  %21 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !2917
  %22 = getelementptr inbounds %struct.FTS, %struct.FTS* %21, i32 0, i32 6, !dbg !2918
  %23 = load i32, i32* %22, align 4, !dbg !2918
  %24 = load i8*, i8** %4, align 8, !dbg !2919
  %25 = load i32, i32* %5, align 4, !dbg !2920
  %26 = call i32 (i32, i8*, i32, ...) @openat_safer(i32 %23, i8* %24, i32 %25), !dbg !2921
  br label %31, !dbg !2916

; <label>:27:                                     ; preds = %2
  %28 = load i8*, i8** %4, align 8, !dbg !2922
  %29 = load i32, i32* %5, align 4, !dbg !2923
  %30 = call i32 (i8*, i32, ...) @open_safer(i8* %28, i32 %29), !dbg !2924
  br label %31, !dbg !2916

; <label>:31:                                     ; preds = %27, %20
  %32 = phi i32 [ %26, %20 ], [ %30, %27 ], !dbg !2916
  store i32 %32, i32* %6, align 4, !dbg !2915
  %33 = load i32, i32* %6, align 4, !dbg !2925
  %34 = icmp sle i32 0, %33, !dbg !2927
  br i1 %34, label %35, label %38, !dbg !2928

; <label>:35:                                     ; preds = %31
  %36 = load i32, i32* %6, align 4, !dbg !2929
  %37 = call i32 @set_cloexec_flag(i32 %36, i1 zeroext true), !dbg !2930
  br label %38, !dbg !2930

; <label>:38:                                     ; preds = %35, %31
  %39 = load i32, i32* %6, align 4, !dbg !2931
  ret i32 %39, !dbg !2932
}

; Function Attrs: noinline nounwind uwtable
define internal void @fts_lfree(%struct._ftsent*) #3 !dbg !2933 {
  %2 = alloca %struct._ftsent*, align 8
  %3 = alloca %struct._ftsent*, align 8
  store %struct._ftsent* %0, %struct._ftsent** %2, align 8
  call void @llvm.dbg.declare(metadata %struct._ftsent** %2, metadata !2936, metadata !DIExpression()), !dbg !2937
  call void @llvm.dbg.declare(metadata %struct._ftsent** %3, metadata !2938, metadata !DIExpression()), !dbg !2939
  br label %4, !dbg !2940

; <label>:4:                                      ; preds = %7, %1
  %5 = load %struct._ftsent*, %struct._ftsent** %2, align 8, !dbg !2941
  store %struct._ftsent* %5, %struct._ftsent** %3, align 8, !dbg !2942
  %6 = icmp ne %struct._ftsent* %5, null, !dbg !2940
  br i1 %6, label %7, label %13, !dbg !2940

; <label>:7:                                      ; preds = %4
  %8 = load %struct._ftsent*, %struct._ftsent** %2, align 8, !dbg !2943
  %9 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %8, i32 0, i32 2, !dbg !2945
  %10 = load %struct._ftsent*, %struct._ftsent** %9, align 8, !dbg !2945
  store %struct._ftsent* %10, %struct._ftsent** %2, align 8, !dbg !2946
  %11 = load %struct._ftsent*, %struct._ftsent** %3, align 8, !dbg !2947
  %12 = bitcast %struct._ftsent* %11 to i8*, !dbg !2947
  call void @free(i8* %12) #8, !dbg !2948
  br label %4, !dbg !2940, !llvm.loop !2949

; <label>:13:                                     ; preds = %4
  ret void, !dbg !2951
}

; Function Attrs: noinline nounwind uwtable
define internal i64 @AD_hash(i8*, i64) #3 !dbg !2952 {
  %3 = alloca i8*, align 8
  %4 = alloca i64, align 8
  %5 = alloca %struct.Active_dir*, align 8
  store i8* %0, i8** %3, align 8
  call void @llvm.dbg.declare(metadata i8** %3, metadata !2955, metadata !DIExpression()), !dbg !2956
  store i64 %1, i64* %4, align 8
  call void @llvm.dbg.declare(metadata i64* %4, metadata !2957, metadata !DIExpression()), !dbg !2958
  call void @llvm.dbg.declare(metadata %struct.Active_dir** %5, metadata !2959, metadata !DIExpression()), !dbg !2967
  %6 = load i8*, i8** %3, align 8, !dbg !2968
  %7 = bitcast i8* %6 to %struct.Active_dir*, !dbg !2968
  store %struct.Active_dir* %7, %struct.Active_dir** %5, align 8, !dbg !2967
  %8 = load %struct.Active_dir*, %struct.Active_dir** %5, align 8, !dbg !2969
  %9 = getelementptr inbounds %struct.Active_dir, %struct.Active_dir* %8, i32 0, i32 1, !dbg !2970
  %10 = load i64, i64* %9, align 8, !dbg !2970
  %11 = load i64, i64* %4, align 8, !dbg !2971
  %12 = urem i64 %10, %11, !dbg !2972
  ret i64 %12, !dbg !2973
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i1 @AD_compare(i8*, i8*) #3 !dbg !2974 {
  %3 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca %struct.Active_dir*, align 8
  %6 = alloca %struct.Active_dir*, align 8
  store i8* %0, i8** %3, align 8
  call void @llvm.dbg.declare(metadata i8** %3, metadata !2977, metadata !DIExpression()), !dbg !2978
  store i8* %1, i8** %4, align 8
  call void @llvm.dbg.declare(metadata i8** %4, metadata !2979, metadata !DIExpression()), !dbg !2980
  call void @llvm.dbg.declare(metadata %struct.Active_dir** %5, metadata !2981, metadata !DIExpression()), !dbg !2982
  %7 = load i8*, i8** %3, align 8, !dbg !2983
  %8 = bitcast i8* %7 to %struct.Active_dir*, !dbg !2983
  store %struct.Active_dir* %8, %struct.Active_dir** %5, align 8, !dbg !2982
  call void @llvm.dbg.declare(metadata %struct.Active_dir** %6, metadata !2984, metadata !DIExpression()), !dbg !2985
  %9 = load i8*, i8** %4, align 8, !dbg !2986
  %10 = bitcast i8* %9 to %struct.Active_dir*, !dbg !2986
  store %struct.Active_dir* %10, %struct.Active_dir** %6, align 8, !dbg !2985
  %11 = load %struct.Active_dir*, %struct.Active_dir** %5, align 8, !dbg !2987
  %12 = getelementptr inbounds %struct.Active_dir, %struct.Active_dir* %11, i32 0, i32 1, !dbg !2988
  %13 = load i64, i64* %12, align 8, !dbg !2988
  %14 = load %struct.Active_dir*, %struct.Active_dir** %6, align 8, !dbg !2989
  %15 = getelementptr inbounds %struct.Active_dir, %struct.Active_dir* %14, i32 0, i32 1, !dbg !2990
  %16 = load i64, i64* %15, align 8, !dbg !2990
  %17 = icmp eq i64 %13, %16, !dbg !2991
  br i1 %17, label %18, label %26, !dbg !2992

; <label>:18:                                     ; preds = %2
  %19 = load %struct.Active_dir*, %struct.Active_dir** %5, align 8, !dbg !2993
  %20 = getelementptr inbounds %struct.Active_dir, %struct.Active_dir* %19, i32 0, i32 0, !dbg !2994
  %21 = load i64, i64* %20, align 8, !dbg !2994
  %22 = load %struct.Active_dir*, %struct.Active_dir** %6, align 8, !dbg !2995
  %23 = getelementptr inbounds %struct.Active_dir, %struct.Active_dir* %22, i32 0, i32 0, !dbg !2996
  %24 = load i64, i64* %23, align 8, !dbg !2996
  %25 = icmp eq i64 %21, %24, !dbg !2997
  br label %26

; <label>:26:                                     ; preds = %18, %2
  %27 = phi i1 [ false, %2 ], [ %25, %18 ]
  ret i1 %27, !dbg !2998
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @fts_compar(i8*, i8*) #3 !dbg !2999 {
  %3 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca %struct._ftsent**, align 8
  %6 = alloca %struct._ftsent**, align 8
  store i8* %0, i8** %3, align 8
  call void @llvm.dbg.declare(metadata i8** %3, metadata !3000, metadata !DIExpression()), !dbg !3001
  store i8* %1, i8** %4, align 8
  call void @llvm.dbg.declare(metadata i8** %4, metadata !3002, metadata !DIExpression()), !dbg !3003
  call void @llvm.dbg.declare(metadata %struct._ftsent*** %5, metadata !3004, metadata !DIExpression()), !dbg !3005
  %7 = load i8*, i8** %3, align 8, !dbg !3006
  %8 = bitcast i8* %7 to %struct._ftsent**, !dbg !3007
  store %struct._ftsent** %8, %struct._ftsent*** %5, align 8, !dbg !3005
  call void @llvm.dbg.declare(metadata %struct._ftsent*** %6, metadata !3008, metadata !DIExpression()), !dbg !3009
  %9 = load i8*, i8** %4, align 8, !dbg !3010
  %10 = bitcast i8* %9 to %struct._ftsent**, !dbg !3011
  store %struct._ftsent** %10, %struct._ftsent*** %6, align 8, !dbg !3009
  %11 = load %struct._ftsent**, %struct._ftsent*** %5, align 8, !dbg !3012
  %12 = getelementptr inbounds %struct._ftsent*, %struct._ftsent** %11, i64 0, !dbg !3012
  %13 = load %struct._ftsent*, %struct._ftsent** %12, align 8, !dbg !3012
  %14 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %13, i32 0, i32 10, !dbg !3013
  %15 = load %struct.FTS*, %struct.FTS** %14, align 8, !dbg !3013
  %16 = getelementptr inbounds %struct.FTS, %struct.FTS* %15, i32 0, i32 9, !dbg !3014
  %17 = load i32 (%struct._ftsent**, %struct._ftsent**)*, i32 (%struct._ftsent**, %struct._ftsent**)** %16, align 8, !dbg !3014
  %18 = load %struct._ftsent**, %struct._ftsent*** %5, align 8, !dbg !3015
  %19 = load %struct._ftsent**, %struct._ftsent*** %6, align 8, !dbg !3016
  %20 = call i32 %17(%struct._ftsent** %18, %struct._ftsent** %19), !dbg !3012
  ret i32 %20, !dbg !3017
}

; Function Attrs: nounwind
declare i8* @realloc(i8*, i64) #5

declare void @qsort(i8*, i64, i64, i32 (i8*, i8*)*) #2

; Function Attrs: nounwind
declare i32 @lstat(i8*, %struct.stat*) #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i32, i1) #10

; Function Attrs: noinline nounwind uwtable
define i32 @fts_close(%struct.FTS*) #3 !dbg !3018 {
  %2 = alloca i32, align 4
  %3 = alloca %struct.FTS*, align 8
  %4 = alloca %struct._ftsent*, align 8
  %5 = alloca %struct._ftsent*, align 8
  %6 = alloca i32, align 4
  store %struct.FTS* %0, %struct.FTS** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.FTS** %3, metadata !3021, metadata !DIExpression()), !dbg !3022
  call void @llvm.dbg.declare(metadata %struct._ftsent** %4, metadata !3023, metadata !DIExpression()), !dbg !3024
  call void @llvm.dbg.declare(metadata %struct._ftsent** %5, metadata !3025, metadata !DIExpression()), !dbg !3026
  call void @llvm.dbg.declare(metadata i32* %6, metadata !3027, metadata !DIExpression()), !dbg !3028
  store i32 0, i32* %6, align 4, !dbg !3028
  %7 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !3029
  %8 = getelementptr inbounds %struct.FTS, %struct.FTS* %7, i32 0, i32 0, !dbg !3031
  %9 = load %struct._ftsent*, %struct._ftsent** %8, align 8, !dbg !3031
  %10 = icmp ne %struct._ftsent* %9, null, !dbg !3029
  br i1 %10, label %11, label %41, !dbg !3032

; <label>:11:                                     ; preds = %1
  %12 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !3033
  %13 = getelementptr inbounds %struct.FTS, %struct.FTS* %12, i32 0, i32 0, !dbg !3036
  %14 = load %struct._ftsent*, %struct._ftsent** %13, align 8, !dbg !3036
  store %struct._ftsent* %14, %struct._ftsent** %5, align 8, !dbg !3037
  br label %15, !dbg !3038

; <label>:15:                                     ; preds = %34, %11
  %16 = load %struct._ftsent*, %struct._ftsent** %5, align 8, !dbg !3039
  %17 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %16, i32 0, i32 11, !dbg !3041
  %18 = load i64, i64* %17, align 8, !dbg !3041
  %19 = icmp sge i64 %18, 0, !dbg !3042
  br i1 %19, label %20, label %38, !dbg !3043

; <label>:20:                                     ; preds = %15
  %21 = load %struct._ftsent*, %struct._ftsent** %5, align 8, !dbg !3044
  store %struct._ftsent* %21, %struct._ftsent** %4, align 8, !dbg !3046
  %22 = load %struct._ftsent*, %struct._ftsent** %5, align 8, !dbg !3047
  %23 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %22, i32 0, i32 2, !dbg !3048
  %24 = load %struct._ftsent*, %struct._ftsent** %23, align 8, !dbg !3048
  %25 = icmp ne %struct._ftsent* %24, null, !dbg !3049
  br i1 %25, label %26, label %30, !dbg !3047

; <label>:26:                                     ; preds = %20
  %27 = load %struct._ftsent*, %struct._ftsent** %5, align 8, !dbg !3050
  %28 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %27, i32 0, i32 2, !dbg !3051
  %29 = load %struct._ftsent*, %struct._ftsent** %28, align 8, !dbg !3051
  br label %34, !dbg !3047

; <label>:30:                                     ; preds = %20
  %31 = load %struct._ftsent*, %struct._ftsent** %5, align 8, !dbg !3052
  %32 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %31, i32 0, i32 1, !dbg !3053
  %33 = load %struct._ftsent*, %struct._ftsent** %32, align 8, !dbg !3053
  br label %34, !dbg !3047

; <label>:34:                                     ; preds = %30, %26
  %35 = phi %struct._ftsent* [ %29, %26 ], [ %33, %30 ], !dbg !3047
  store %struct._ftsent* %35, %struct._ftsent** %5, align 8, !dbg !3054
  %36 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !3055
  %37 = bitcast %struct._ftsent* %36 to i8*, !dbg !3055
  call void @free(i8* %37) #8, !dbg !3056
  br label %15, !dbg !3057, !llvm.loop !3058

; <label>:38:                                     ; preds = %15
  %39 = load %struct._ftsent*, %struct._ftsent** %5, align 8, !dbg !3060
  %40 = bitcast %struct._ftsent* %39 to i8*, !dbg !3060
  call void @free(i8* %40) #8, !dbg !3061
  br label %41, !dbg !3062

; <label>:41:                                     ; preds = %38, %1
  %42 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !3063
  %43 = getelementptr inbounds %struct.FTS, %struct.FTS* %42, i32 0, i32 1, !dbg !3065
  %44 = load %struct._ftsent*, %struct._ftsent** %43, align 8, !dbg !3065
  %45 = icmp ne %struct._ftsent* %44, null, !dbg !3063
  br i1 %45, label %46, label %50, !dbg !3066

; <label>:46:                                     ; preds = %41
  %47 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !3067
  %48 = getelementptr inbounds %struct.FTS, %struct.FTS* %47, i32 0, i32 1, !dbg !3068
  %49 = load %struct._ftsent*, %struct._ftsent** %48, align 8, !dbg !3068
  call void @fts_lfree(%struct._ftsent* %49), !dbg !3069
  br label %50, !dbg !3069

; <label>:50:                                     ; preds = %46, %41
  %51 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !3070
  %52 = getelementptr inbounds %struct.FTS, %struct.FTS* %51, i32 0, i32 2, !dbg !3071
  %53 = load %struct._ftsent**, %struct._ftsent*** %52, align 8, !dbg !3071
  %54 = bitcast %struct._ftsent** %53 to i8*, !dbg !3070
  call void @free(i8* %54) #8, !dbg !3072
  %55 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !3073
  %56 = getelementptr inbounds %struct.FTS, %struct.FTS* %55, i32 0, i32 4, !dbg !3074
  %57 = load i8*, i8** %56, align 8, !dbg !3074
  call void @free(i8* %57) #8, !dbg !3075
  %58 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !3076
  %59 = getelementptr inbounds %struct.FTS, %struct.FTS* %58, i32 0, i32 10, !dbg !3076
  %60 = load i32, i32* %59, align 8, !dbg !3076
  %61 = and i32 %60, 512, !dbg !3076
  %62 = icmp ne i32 %61, 0, !dbg !3076
  br i1 %62, label %63, label %79, !dbg !3078

; <label>:63:                                     ; preds = %50
  %64 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !3079
  %65 = getelementptr inbounds %struct.FTS, %struct.FTS* %64, i32 0, i32 6, !dbg !3082
  %66 = load i32, i32* %65, align 4, !dbg !3082
  %67 = icmp sle i32 0, %66, !dbg !3083
  br i1 %67, label %68, label %78, !dbg !3084

; <label>:68:                                     ; preds = %63
  %69 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !3085
  %70 = getelementptr inbounds %struct.FTS, %struct.FTS* %69, i32 0, i32 6, !dbg !3087
  %71 = load i32, i32* %70, align 4, !dbg !3087
  %72 = call i32 @close(i32 %71), !dbg !3088
  %73 = icmp ne i32 %72, 0, !dbg !3088
  br i1 %73, label %74, label %77, !dbg !3089

; <label>:74:                                     ; preds = %68
  %75 = call i32* @__errno_location() #14, !dbg !3090
  %76 = load i32, i32* %75, align 4, !dbg !3090
  store i32 %76, i32* %6, align 4, !dbg !3091
  br label %77, !dbg !3092

; <label>:77:                                     ; preds = %74, %68
  br label %78, !dbg !3093

; <label>:78:                                     ; preds = %77, %63
  br label %109, !dbg !3094

; <label>:79:                                     ; preds = %50
  %80 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !3095
  %81 = getelementptr inbounds %struct.FTS, %struct.FTS* %80, i32 0, i32 10, !dbg !3095
  %82 = load i32, i32* %81, align 8, !dbg !3095
  %83 = and i32 %82, 4, !dbg !3095
  %84 = icmp ne i32 %83, 0, !dbg !3095
  br i1 %84, label %108, label %85, !dbg !3097

; <label>:85:                                     ; preds = %79
  %86 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !3098
  %87 = getelementptr inbounds %struct.FTS, %struct.FTS* %86, i32 0, i32 5, !dbg !3101
  %88 = load i32, i32* %87, align 8, !dbg !3101
  %89 = call i32 @fchdir(i32 %88) #8, !dbg !3102
  %90 = icmp ne i32 %89, 0, !dbg !3102
  br i1 %90, label %91, label %94, !dbg !3103

; <label>:91:                                     ; preds = %85
  %92 = call i32* @__errno_location() #14, !dbg !3104
  %93 = load i32, i32* %92, align 4, !dbg !3104
  store i32 %93, i32* %6, align 4, !dbg !3105
  br label %94, !dbg !3106

; <label>:94:                                     ; preds = %91, %85
  %95 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !3107
  %96 = getelementptr inbounds %struct.FTS, %struct.FTS* %95, i32 0, i32 5, !dbg !3109
  %97 = load i32, i32* %96, align 8, !dbg !3109
  %98 = call i32 @close(i32 %97), !dbg !3110
  %99 = icmp ne i32 %98, 0, !dbg !3110
  br i1 %99, label %100, label %107, !dbg !3111

; <label>:100:                                    ; preds = %94
  %101 = load i32, i32* %6, align 4, !dbg !3112
  %102 = icmp eq i32 %101, 0, !dbg !3114
  br i1 %102, label %103, label %106, !dbg !3115

; <label>:103:                                    ; preds = %100
  %104 = call i32* @__errno_location() #14, !dbg !3116
  %105 = load i32, i32* %104, align 4, !dbg !3116
  store i32 %105, i32* %6, align 4, !dbg !3117
  br label %106, !dbg !3118

; <label>:106:                                    ; preds = %103, %100
  br label %107, !dbg !3119

; <label>:107:                                    ; preds = %106, %94
  br label %108, !dbg !3120

; <label>:108:                                    ; preds = %107, %79
  br label %109

; <label>:109:                                    ; preds = %108, %78
  %110 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !3121
  %111 = getelementptr inbounds %struct.FTS, %struct.FTS* %110, i32 0, i32 13, !dbg !3122
  call void @fd_ring_clear(%struct.I_ring* %111), !dbg !3123
  %112 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !3124
  %113 = getelementptr inbounds %struct.FTS, %struct.FTS* %112, i32 0, i32 11, !dbg !3126
  %114 = load %struct.hash_table*, %struct.hash_table** %113, align 8, !dbg !3126
  %115 = icmp ne %struct.hash_table* %114, null, !dbg !3124
  br i1 %115, label %116, label %120, !dbg !3127

; <label>:116:                                    ; preds = %109
  %117 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !3128
  %118 = getelementptr inbounds %struct.FTS, %struct.FTS* %117, i32 0, i32 11, !dbg !3129
  %119 = load %struct.hash_table*, %struct.hash_table** %118, align 8, !dbg !3129
  call void @hash_free(%struct.hash_table* %119), !dbg !3130
  br label %120, !dbg !3130

; <label>:120:                                    ; preds = %116, %109
  %121 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !3131
  call void @free_dir(%struct.FTS* %121), !dbg !3132
  %122 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !3133
  %123 = bitcast %struct.FTS* %122 to i8*, !dbg !3133
  call void @free(i8* %123) #8, !dbg !3134
  %124 = load i32, i32* %6, align 4, !dbg !3135
  %125 = icmp ne i32 %124, 0, !dbg !3135
  br i1 %125, label %126, label %129, !dbg !3137

; <label>:126:                                    ; preds = %120
  %127 = load i32, i32* %6, align 4, !dbg !3138
  %128 = call i32* @__errno_location() #14, !dbg !3138
  store i32 %127, i32* %128, align 4, !dbg !3138
  store i32 -1, i32* %2, align 4, !dbg !3140
  br label %130, !dbg !3140

; <label>:129:                                    ; preds = %120
  store i32 0, i32* %2, align 4, !dbg !3141
  br label %130, !dbg !3141

; <label>:130:                                    ; preds = %129, %126
  %131 = load i32, i32* %2, align 4, !dbg !3142
  ret i32 %131, !dbg !3142
}

; Function Attrs: nounwind
declare i32 @fchdir(i32) #5

; Function Attrs: noinline nounwind uwtable
define internal void @fd_ring_clear(%struct.I_ring*) #3 !dbg !3143 {
  %2 = alloca %struct.I_ring*, align 8
  %3 = alloca i32, align 4
  store %struct.I_ring* %0, %struct.I_ring** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.I_ring** %2, metadata !3147, metadata !DIExpression()), !dbg !3148
  br label %4, !dbg !3149

; <label>:4:                                      ; preds = %16, %1
  %5 = load %struct.I_ring*, %struct.I_ring** %2, align 8, !dbg !3150
  %6 = call zeroext i1 @i_ring_empty(%struct.I_ring* %5), !dbg !3151
  %7 = xor i1 %6, true, !dbg !3152
  br i1 %7, label %8, label %17, !dbg !3149

; <label>:8:                                      ; preds = %4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !3153, metadata !DIExpression()), !dbg !3155
  %9 = load %struct.I_ring*, %struct.I_ring** %2, align 8, !dbg !3156
  %10 = call i32 @i_ring_pop(%struct.I_ring* %9), !dbg !3157
  store i32 %10, i32* %3, align 4, !dbg !3155
  %11 = load i32, i32* %3, align 4, !dbg !3158
  %12 = icmp sle i32 0, %11, !dbg !3160
  br i1 %12, label %13, label %16, !dbg !3161

; <label>:13:                                     ; preds = %8
  %14 = load i32, i32* %3, align 4, !dbg !3162
  %15 = call i32 @close(i32 %14), !dbg !3163
  br label %16, !dbg !3163

; <label>:16:                                     ; preds = %13, %8
  br label %4, !dbg !3149, !llvm.loop !3164

; <label>:17:                                     ; preds = %4
  ret void, !dbg !3166
}

; Function Attrs: noinline nounwind uwtable
define internal void @free_dir(%struct.FTS*) #3 !dbg !3167 {
  %2 = alloca %struct.FTS*, align 8
  store %struct.FTS* %0, %struct.FTS** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.FTS** %2, metadata !3170, metadata !DIExpression()), !dbg !3171
  %3 = load %struct.FTS*, %struct.FTS** %2, align 8, !dbg !3172
  %4 = getelementptr inbounds %struct.FTS, %struct.FTS* %3, i32 0, i32 10, !dbg !3174
  %5 = load i32, i32* %4, align 8, !dbg !3174
  %6 = and i32 %5, 258, !dbg !3175
  %7 = icmp ne i32 %6, 0, !dbg !3175
  br i1 %7, label %8, label %20, !dbg !3176

; <label>:8:                                      ; preds = %1
  %9 = load %struct.FTS*, %struct.FTS** %2, align 8, !dbg !3177
  %10 = getelementptr inbounds %struct.FTS, %struct.FTS* %9, i32 0, i32 12, !dbg !3180
  %11 = bitcast %union.anon* %10 to %struct.hash_table**, !dbg !3181
  %12 = load %struct.hash_table*, %struct.hash_table** %11, align 8, !dbg !3181
  %13 = icmp ne %struct.hash_table* %12, null, !dbg !3177
  br i1 %13, label %14, label %19, !dbg !3182

; <label>:14:                                     ; preds = %8
  %15 = load %struct.FTS*, %struct.FTS** %2, align 8, !dbg !3183
  %16 = getelementptr inbounds %struct.FTS, %struct.FTS* %15, i32 0, i32 12, !dbg !3184
  %17 = bitcast %union.anon* %16 to %struct.hash_table**, !dbg !3185
  %18 = load %struct.hash_table*, %struct.hash_table** %17, align 8, !dbg !3185
  call void @hash_free(%struct.hash_table* %18), !dbg !3186
  br label %19, !dbg !3186

; <label>:19:                                     ; preds = %14, %8
  br label %26, !dbg !3187

; <label>:20:                                     ; preds = %1
  %21 = load %struct.FTS*, %struct.FTS** %2, align 8, !dbg !3188
  %22 = getelementptr inbounds %struct.FTS, %struct.FTS* %21, i32 0, i32 12, !dbg !3189
  %23 = bitcast %union.anon* %22 to %struct.cycle_check_state**, !dbg !3190
  %24 = load %struct.cycle_check_state*, %struct.cycle_check_state** %23, align 8, !dbg !3190
  %25 = bitcast %struct.cycle_check_state* %24 to i8*, !dbg !3188
  call void @free(i8* %25) #8, !dbg !3191
  br label %26

; <label>:26:                                     ; preds = %20, %19
  ret void, !dbg !3192
}

; Function Attrs: noinline nounwind uwtable
define %struct._ftsent* @fts_read(%struct.FTS*) #3 !dbg !3193 {
  %2 = alloca %struct._ftsent*, align 8
  %3 = alloca %struct.FTS*, align 8
  %4 = alloca %struct._ftsent*, align 8
  %5 = alloca %struct._ftsent*, align 8
  %6 = alloca i16, align 2
  %7 = alloca i8*, align 8
  %8 = alloca %struct._ftsent*, align 8
  %9 = alloca i32, align 4
  store %struct.FTS* %0, %struct.FTS** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.FTS** %3, metadata !3196, metadata !DIExpression()), !dbg !3197
  call void @llvm.dbg.declare(metadata %struct._ftsent** %4, metadata !3198, metadata !DIExpression()), !dbg !3199
  call void @llvm.dbg.declare(metadata %struct._ftsent** %5, metadata !3200, metadata !DIExpression()), !dbg !3201
  call void @llvm.dbg.declare(metadata i16* %6, metadata !3202, metadata !DIExpression()), !dbg !3203
  call void @llvm.dbg.declare(metadata i8** %7, metadata !3204, metadata !DIExpression()), !dbg !3205
  %10 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !3206
  %11 = getelementptr inbounds %struct.FTS, %struct.FTS* %10, i32 0, i32 0, !dbg !3208
  %12 = load %struct._ftsent*, %struct._ftsent** %11, align 8, !dbg !3208
  %13 = icmp eq %struct._ftsent* %12, null, !dbg !3209
  br i1 %13, label %20, label %14, !dbg !3210

; <label>:14:                                     ; preds = %1
  %15 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !3211
  %16 = getelementptr inbounds %struct.FTS, %struct.FTS* %15, i32 0, i32 10, !dbg !3211
  %17 = load i32, i32* %16, align 8, !dbg !3211
  %18 = and i32 %17, 8192, !dbg !3211
  %19 = icmp ne i32 %18, 0, !dbg !3211
  br i1 %19, label %20, label %21, !dbg !3212

; <label>:20:                                     ; preds = %14, %1
  store %struct._ftsent* null, %struct._ftsent** %2, align 8, !dbg !3213
  br label %751, !dbg !3213

; <label>:21:                                     ; preds = %14
  %22 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !3214
  %23 = getelementptr inbounds %struct.FTS, %struct.FTS* %22, i32 0, i32 0, !dbg !3215
  %24 = load %struct._ftsent*, %struct._ftsent** %23, align 8, !dbg !3215
  store %struct._ftsent* %24, %struct._ftsent** %4, align 8, !dbg !3216
  %25 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !3217
  %26 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %25, i32 0, i32 16, !dbg !3218
  %27 = load i16, i16* %26, align 4, !dbg !3218
  store i16 %27, i16* %6, align 2, !dbg !3219
  %28 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !3220
  %29 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %28, i32 0, i32 16, !dbg !3221
  store i16 3, i16* %29, align 4, !dbg !3222
  %30 = load i16, i16* %6, align 2, !dbg !3223
  %31 = zext i16 %30 to i32, !dbg !3223
  %32 = icmp eq i32 %31, 1, !dbg !3225
  br i1 %32, label %33, label %40, !dbg !3226

; <label>:33:                                     ; preds = %21
  %34 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !3227
  %35 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !3229
  %36 = call zeroext i16 @fts_stat(%struct.FTS* %34, %struct._ftsent* %35, i1 zeroext false), !dbg !3230
  %37 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !3231
  %38 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %37, i32 0, i32 14, !dbg !3232
  store i16 %36, i16* %38, align 8, !dbg !3233
  %39 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !3234
  store %struct._ftsent* %39, %struct._ftsent** %2, align 8, !dbg !3235
  br label %751, !dbg !3235

; <label>:40:                                     ; preds = %21
  %41 = load i16, i16* %6, align 2, !dbg !3236
  %42 = zext i16 %41 to i32, !dbg !3236
  %43 = icmp eq i32 %42, 2, !dbg !3238
  br i1 %43, label %44, label %95, !dbg !3239

; <label>:44:                                     ; preds = %40
  %45 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !3240
  %46 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %45, i32 0, i32 14, !dbg !3241
  %47 = load i16, i16* %46, align 8, !dbg !3241
  %48 = zext i16 %47 to i32, !dbg !3240
  %49 = icmp eq i32 %48, 12, !dbg !3242
  br i1 %49, label %56, label %50, !dbg !3243

; <label>:50:                                     ; preds = %44
  %51 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !3244
  %52 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %51, i32 0, i32 14, !dbg !3245
  %53 = load i16, i16* %52, align 8, !dbg !3245
  %54 = zext i16 %53 to i32, !dbg !3244
  %55 = icmp eq i32 %54, 13, !dbg !3246
  br i1 %55, label %56, label %95, !dbg !3247

; <label>:56:                                     ; preds = %50, %44
  %57 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !3248
  %58 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !3250
  %59 = call zeroext i16 @fts_stat(%struct.FTS* %57, %struct._ftsent* %58, i1 zeroext true), !dbg !3251
  %60 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !3252
  %61 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %60, i32 0, i32 14, !dbg !3253
  store i16 %59, i16* %61, align 8, !dbg !3254
  %62 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !3255
  %63 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %62, i32 0, i32 14, !dbg !3257
  %64 = load i16, i16* %63, align 8, !dbg !3257
  %65 = zext i16 %64 to i32, !dbg !3255
  %66 = icmp eq i32 %65, 1, !dbg !3258
  br i1 %66, label %67, label %94, !dbg !3259

; <label>:67:                                     ; preds = %56
  %68 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !3260
  %69 = getelementptr inbounds %struct.FTS, %struct.FTS* %68, i32 0, i32 10, !dbg !3260
  %70 = load i32, i32* %69, align 8, !dbg !3260
  %71 = and i32 %70, 4, !dbg !3260
  %72 = icmp ne i32 %71, 0, !dbg !3260
  br i1 %72, label %94, label %73, !dbg !3261

; <label>:73:                                     ; preds = %67
  %74 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !3262
  %75 = call i32 @diropen(%struct.FTS* %74, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.112, i32 0, i32 0)), !dbg !3265
  %76 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !3266
  %77 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %76, i32 0, i32 8, !dbg !3267
  store i32 %75, i32* %77, align 4, !dbg !3268
  %78 = icmp slt i32 %75, 0, !dbg !3269
  br i1 %78, label %79, label %86, !dbg !3270

; <label>:79:                                     ; preds = %73
  %80 = call i32* @__errno_location() #14, !dbg !3271
  %81 = load i32, i32* %80, align 4, !dbg !3271
  %82 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !3273
  %83 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %82, i32 0, i32 7, !dbg !3274
  store i32 %81, i32* %83, align 8, !dbg !3275
  %84 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !3276
  %85 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %84, i32 0, i32 14, !dbg !3277
  store i16 7, i16* %85, align 8, !dbg !3278
  br label %93, !dbg !3279

; <label>:86:                                     ; preds = %73
  %87 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !3280
  %88 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %87, i32 0, i32 15, !dbg !3281
  %89 = load i16, i16* %88, align 2, !dbg !3282
  %90 = zext i16 %89 to i32, !dbg !3282
  %91 = or i32 %90, 2, !dbg !3282
  %92 = trunc i32 %91 to i16, !dbg !3282
  store i16 %92, i16* %88, align 2, !dbg !3282
  br label %93

; <label>:93:                                     ; preds = %86, %79
  br label %94, !dbg !3283

; <label>:94:                                     ; preds = %93, %67, %56
  br label %432, !dbg !3284

; <label>:95:                                     ; preds = %50, %40
  %96 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !3285
  %97 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %96, i32 0, i32 14, !dbg !3287
  %98 = load i16, i16* %97, align 8, !dbg !3287
  %99 = zext i16 %98 to i32, !dbg !3285
  %100 = icmp eq i32 %99, 1, !dbg !3288
  br i1 %100, label %101, label %257, !dbg !3289

; <label>:101:                                    ; preds = %95
  %102 = load i16, i16* %6, align 2, !dbg !3290
  %103 = zext i16 %102 to i32, !dbg !3290
  %104 = icmp eq i32 %103, 4, !dbg !3293
  br i1 %104, label %121, label %105, !dbg !3294

; <label>:105:                                    ; preds = %101
  %106 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !3295
  %107 = getelementptr inbounds %struct.FTS, %struct.FTS* %106, i32 0, i32 10, !dbg !3295
  %108 = load i32, i32* %107, align 8, !dbg !3295
  %109 = and i32 %108, 64, !dbg !3295
  %110 = icmp ne i32 %109, 0, !dbg !3295
  br i1 %110, label %111, label %152, !dbg !3296

; <label>:111:                                    ; preds = %105
  %112 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !3297
  %113 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %112, i32 0, i32 17, !dbg !3298
  %114 = getelementptr inbounds [1 x %struct.stat], [1 x %struct.stat]* %113, i32 0, i32 0, !dbg !3299
  %115 = getelementptr inbounds %struct.stat, %struct.stat* %114, i32 0, i32 0, !dbg !3299
  %116 = load i64, i64* %115, align 8, !dbg !3299
  %117 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !3300
  %118 = getelementptr inbounds %struct.FTS, %struct.FTS* %117, i32 0, i32 3, !dbg !3301
  %119 = load i64, i64* %118, align 8, !dbg !3301
  %120 = icmp ne i64 %116, %119, !dbg !3302
  br i1 %120, label %121, label %152, !dbg !3303

; <label>:121:                                    ; preds = %111, %101
  %122 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !3304
  %123 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %122, i32 0, i32 15, !dbg !3307
  %124 = load i16, i16* %123, align 2, !dbg !3307
  %125 = zext i16 %124 to i32, !dbg !3304
  %126 = and i32 %125, 2, !dbg !3308
  %127 = icmp ne i32 %126, 0, !dbg !3308
  br i1 %127, label %128, label %133, !dbg !3309

; <label>:128:                                    ; preds = %121
  %129 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !3310
  %130 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %129, i32 0, i32 8, !dbg !3311
  %131 = load i32, i32* %130, align 4, !dbg !3311
  %132 = call i32 @close(i32 %131), !dbg !3312
  br label %133, !dbg !3313

; <label>:133:                                    ; preds = %128, %121
  %134 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !3314
  %135 = getelementptr inbounds %struct.FTS, %struct.FTS* %134, i32 0, i32 1, !dbg !3316
  %136 = load %struct._ftsent*, %struct._ftsent** %135, align 8, !dbg !3316
  %137 = icmp ne %struct._ftsent* %136, null, !dbg !3314
  br i1 %137, label %138, label %144, !dbg !3317

; <label>:138:                                    ; preds = %133
  %139 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !3318
  %140 = getelementptr inbounds %struct.FTS, %struct.FTS* %139, i32 0, i32 1, !dbg !3320
  %141 = load %struct._ftsent*, %struct._ftsent** %140, align 8, !dbg !3320
  call void @fts_lfree(%struct._ftsent* %141), !dbg !3321
  %142 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !3322
  %143 = getelementptr inbounds %struct.FTS, %struct.FTS* %142, i32 0, i32 1, !dbg !3323
  store %struct._ftsent* null, %struct._ftsent** %143, align 8, !dbg !3324
  br label %144, !dbg !3325

; <label>:144:                                    ; preds = %138, %133
  %145 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !3326
  %146 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %145, i32 0, i32 14, !dbg !3327
  store i16 6, i16* %146, align 8, !dbg !3328
  br label %147, !dbg !3329, !llvm.loop !3330

; <label>:147:                                    ; preds = %144
  %148 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !3331
  %149 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !3331
  call void @leave_dir(%struct.FTS* %148, %struct._ftsent* %149), !dbg !3331
  br label %150, !dbg !3331

; <label>:150:                                    ; preds = %147
  %151 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !3333
  store %struct._ftsent* %151, %struct._ftsent** %2, align 8, !dbg !3334
  br label %751, !dbg !3334

; <label>:152:                                    ; preds = %111, %105
  %153 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !3335
  %154 = getelementptr inbounds %struct.FTS, %struct.FTS* %153, i32 0, i32 1, !dbg !3337
  %155 = load %struct._ftsent*, %struct._ftsent** %154, align 8, !dbg !3337
  %156 = icmp ne %struct._ftsent* %155, null, !dbg !3338
  br i1 %156, label %157, label %173, !dbg !3339

; <label>:157:                                    ; preds = %152
  %158 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !3340
  %159 = getelementptr inbounds %struct.FTS, %struct.FTS* %158, i32 0, i32 10, !dbg !3340
  %160 = load i32, i32* %159, align 8, !dbg !3340
  %161 = and i32 %160, 4096, !dbg !3340
  %162 = icmp ne i32 %161, 0, !dbg !3340
  br i1 %162, label %163, label %173, !dbg !3341

; <label>:163:                                    ; preds = %157
  %164 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !3342
  %165 = getelementptr inbounds %struct.FTS, %struct.FTS* %164, i32 0, i32 10, !dbg !3342
  %166 = load i32, i32* %165, align 8, !dbg !3342
  %167 = and i32 %166, -4097, !dbg !3342
  store i32 %167, i32* %165, align 8, !dbg !3342
  %168 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !3344
  %169 = getelementptr inbounds %struct.FTS, %struct.FTS* %168, i32 0, i32 1, !dbg !3345
  %170 = load %struct._ftsent*, %struct._ftsent** %169, align 8, !dbg !3345
  call void @fts_lfree(%struct._ftsent* %170), !dbg !3346
  %171 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !3347
  %172 = getelementptr inbounds %struct.FTS, %struct.FTS* %171, i32 0, i32 1, !dbg !3348
  store %struct._ftsent* null, %struct._ftsent** %172, align 8, !dbg !3349
  br label %173, !dbg !3350

; <label>:173:                                    ; preds = %163, %157, %152
  %174 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !3351
  %175 = getelementptr inbounds %struct.FTS, %struct.FTS* %174, i32 0, i32 1, !dbg !3353
  %176 = load %struct._ftsent*, %struct._ftsent** %175, align 8, !dbg !3353
  %177 = icmp ne %struct._ftsent* %176, null, !dbg !3354
  br i1 %177, label %178, label %217, !dbg !3355

; <label>:178:                                    ; preds = %173
  %179 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !3356
  %180 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !3359
  %181 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !3360
  %182 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %181, i32 0, i32 5, !dbg !3361
  %183 = load i8*, i8** %182, align 8, !dbg !3361
  %184 = call i32 @fts_safe_changedir(%struct.FTS* %179, %struct._ftsent* %180, i32 -1, i8* %183), !dbg !3362
  %185 = icmp ne i32 %184, 0, !dbg !3362
  br i1 %185, label %186, label %216, !dbg !3363

; <label>:186:                                    ; preds = %178
  %187 = call i32* @__errno_location() #14, !dbg !3364
  %188 = load i32, i32* %187, align 4, !dbg !3364
  %189 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !3366
  %190 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %189, i32 0, i32 7, !dbg !3367
  store i32 %188, i32* %190, align 8, !dbg !3368
  %191 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !3369
  %192 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %191, i32 0, i32 15, !dbg !3370
  %193 = load i16, i16* %192, align 2, !dbg !3371
  %194 = zext i16 %193 to i32, !dbg !3371
  %195 = or i32 %194, 1, !dbg !3371
  %196 = trunc i32 %195 to i16, !dbg !3371
  store i16 %196, i16* %192, align 2, !dbg !3371
  %197 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !3372
  %198 = getelementptr inbounds %struct.FTS, %struct.FTS* %197, i32 0, i32 1, !dbg !3374
  %199 = load %struct._ftsent*, %struct._ftsent** %198, align 8, !dbg !3374
  store %struct._ftsent* %199, %struct._ftsent** %4, align 8, !dbg !3375
  br label %200, !dbg !3376

; <label>:200:                                    ; preds = %211, %186
  %201 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !3377
  %202 = icmp ne %struct._ftsent* %201, null, !dbg !3379
  br i1 %202, label %203, label %215, !dbg !3380

; <label>:203:                                    ; preds = %200
  %204 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !3381
  %205 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %204, i32 0, i32 1, !dbg !3382
  %206 = load %struct._ftsent*, %struct._ftsent** %205, align 8, !dbg !3382
  %207 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %206, i32 0, i32 5, !dbg !3383
  %208 = load i8*, i8** %207, align 8, !dbg !3383
  %209 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !3384
  %210 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %209, i32 0, i32 5, !dbg !3385
  store i8* %208, i8** %210, align 8, !dbg !3386
  br label %211, !dbg !3384

; <label>:211:                                    ; preds = %203
  %212 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !3387
  %213 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %212, i32 0, i32 2, !dbg !3388
  %214 = load %struct._ftsent*, %struct._ftsent** %213, align 8, !dbg !3388
  store %struct._ftsent* %214, %struct._ftsent** %4, align 8, !dbg !3389
  br label %200, !dbg !3390, !llvm.loop !3391

; <label>:215:                                    ; preds = %200
  br label %216, !dbg !3393

; <label>:216:                                    ; preds = %215, %178
  br label %251, !dbg !3394

; <label>:217:                                    ; preds = %173
  %218 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !3395
  %219 = call %struct._ftsent* @fts_build(%struct.FTS* %218, i32 3), !dbg !3397
  %220 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !3398
  %221 = getelementptr inbounds %struct.FTS, %struct.FTS* %220, i32 0, i32 1, !dbg !3399
  store %struct._ftsent* %219, %struct._ftsent** %221, align 8, !dbg !3400
  %222 = icmp eq %struct._ftsent* %219, null, !dbg !3401
  br i1 %222, label %223, label %250, !dbg !3402

; <label>:223:                                    ; preds = %217
  %224 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !3403
  %225 = getelementptr inbounds %struct.FTS, %struct.FTS* %224, i32 0, i32 10, !dbg !3403
  %226 = load i32, i32* %225, align 8, !dbg !3403
  %227 = and i32 %226, 8192, !dbg !3403
  %228 = icmp ne i32 %227, 0, !dbg !3403
  br i1 %228, label %229, label %230, !dbg !3406

; <label>:229:                                    ; preds = %223
  store %struct._ftsent* null, %struct._ftsent** %2, align 8, !dbg !3407
  br label %751, !dbg !3407

; <label>:230:                                    ; preds = %223
  %231 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !3408
  %232 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %231, i32 0, i32 7, !dbg !3410
  %233 = load i32, i32* %232, align 8, !dbg !3410
  %234 = icmp ne i32 %233, 0, !dbg !3408
  br i1 %234, label %235, label %244, !dbg !3411

; <label>:235:                                    ; preds = %230
  %236 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !3412
  %237 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %236, i32 0, i32 14, !dbg !3413
  %238 = load i16, i16* %237, align 8, !dbg !3413
  %239 = zext i16 %238 to i32, !dbg !3412
  %240 = icmp ne i32 %239, 4, !dbg !3414
  br i1 %240, label %241, label %244, !dbg !3415

; <label>:241:                                    ; preds = %235
  %242 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !3416
  %243 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %242, i32 0, i32 14, !dbg !3417
  store i16 7, i16* %243, align 8, !dbg !3418
  br label %244, !dbg !3416

; <label>:244:                                    ; preds = %241, %235, %230
  br label %245, !dbg !3419, !llvm.loop !3420

; <label>:245:                                    ; preds = %244
  %246 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !3421
  %247 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !3421
  call void @leave_dir(%struct.FTS* %246, %struct._ftsent* %247), !dbg !3421
  br label %248, !dbg !3421

; <label>:248:                                    ; preds = %245
  %249 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !3423
  store %struct._ftsent* %249, %struct._ftsent** %2, align 8, !dbg !3424
  br label %751, !dbg !3424

; <label>:250:                                    ; preds = %217
  br label %251

; <label>:251:                                    ; preds = %250, %216
  %252 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !3425
  %253 = getelementptr inbounds %struct.FTS, %struct.FTS* %252, i32 0, i32 1, !dbg !3426
  %254 = load %struct._ftsent*, %struct._ftsent** %253, align 8, !dbg !3426
  store %struct._ftsent* %254, %struct._ftsent** %4, align 8, !dbg !3427
  %255 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !3428
  %256 = getelementptr inbounds %struct.FTS, %struct.FTS* %255, i32 0, i32 1, !dbg !3429
  store %struct._ftsent* null, %struct._ftsent** %256, align 8, !dbg !3430
  br label %387, !dbg !3431

; <label>:257:                                    ; preds = %95
  br label %258, !dbg !3432

; <label>:258:                                    ; preds = %338, %257
  %259 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !3433
  store %struct._ftsent* %259, %struct._ftsent** %5, align 8, !dbg !3434
  %260 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !3435
  %261 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %260, i32 0, i32 2, !dbg !3437
  %262 = load %struct._ftsent*, %struct._ftsent** %261, align 8, !dbg !3437
  store %struct._ftsent* %262, %struct._ftsent** %4, align 8, !dbg !3438
  %263 = icmp ne %struct._ftsent* %262, null, !dbg !3439
  br i1 %263, label %264, label %547, !dbg !3440

; <label>:264:                                    ; preds = %258
  %265 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !3441
  %266 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !3443
  %267 = getelementptr inbounds %struct.FTS, %struct.FTS* %266, i32 0, i32 0, !dbg !3444
  store %struct._ftsent* %265, %struct._ftsent** %267, align 8, !dbg !3445
  %268 = load %struct._ftsent*, %struct._ftsent** %5, align 8, !dbg !3446
  %269 = bitcast %struct._ftsent* %268 to i8*, !dbg !3446
  call void @free(i8* %269) #8, !dbg !3447
  %270 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !3448
  %271 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %270, i32 0, i32 11, !dbg !3450
  %272 = load i64, i64* %271, align 8, !dbg !3450
  %273 = icmp eq i64 %272, 0, !dbg !3451
  br i1 %273, label %274, label %332, !dbg !3452

; <label>:274:                                    ; preds = %264
  %275 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !3453
  %276 = getelementptr inbounds %struct.FTS, %struct.FTS* %275, i32 0, i32 13, !dbg !3453
  call void @fd_ring_clear(%struct.I_ring* %276), !dbg !3453
  %277 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !3453
  %278 = getelementptr inbounds %struct.FTS, %struct.FTS* %277, i32 0, i32 10, !dbg !3453
  %279 = load i32, i32* %278, align 8, !dbg !3453
  %280 = and i32 %279, 4, !dbg !3453
  %281 = icmp ne i32 %280, 0, !dbg !3453
  br i1 %281, label %319, label %282, !dbg !3453

; <label>:282:                                    ; preds = %274
  %283 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !3453
  %284 = getelementptr inbounds %struct.FTS, %struct.FTS* %283, i32 0, i32 10, !dbg !3453
  %285 = load i32, i32* %284, align 8, !dbg !3453
  %286 = and i32 %285, 512, !dbg !3453
  %287 = icmp ne i32 %286, 0, !dbg !3453
  br i1 %287, label %288, label %302, !dbg !3453

; <label>:288:                                    ; preds = %282
  %289 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !3453
  %290 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !3453
  %291 = getelementptr inbounds %struct.FTS, %struct.FTS* %290, i32 0, i32 10, !dbg !3453
  %292 = load i32, i32* %291, align 8, !dbg !3453
  %293 = and i32 %292, 512, !dbg !3453
  %294 = icmp ne i32 %293, 0, !dbg !3453
  br i1 %294, label %295, label %296, !dbg !3453

; <label>:295:                                    ; preds = %288
  br label %300, !dbg !3453

; <label>:296:                                    ; preds = %288
  %297 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !3453
  %298 = getelementptr inbounds %struct.FTS, %struct.FTS* %297, i32 0, i32 5, !dbg !3453
  %299 = load i32, i32* %298, align 8, !dbg !3453
  br label %300, !dbg !3453

; <label>:300:                                    ; preds = %296, %295
  %301 = phi i32 [ -100, %295 ], [ %299, %296 ], !dbg !3453
  call void @cwd_advance_fd(%struct.FTS* %289, i32 %301, i1 zeroext true), !dbg !3453
  br label %316, !dbg !3453

; <label>:302:                                    ; preds = %282
  %303 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !3453
  %304 = getelementptr inbounds %struct.FTS, %struct.FTS* %303, i32 0, i32 10, !dbg !3453
  %305 = load i32, i32* %304, align 8, !dbg !3453
  %306 = and i32 %305, 512, !dbg !3453
  %307 = icmp ne i32 %306, 0, !dbg !3453
  br i1 %307, label %308, label %309, !dbg !3453

; <label>:308:                                    ; preds = %302
  br label %313, !dbg !3453

; <label>:309:                                    ; preds = %302
  %310 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !3453
  %311 = getelementptr inbounds %struct.FTS, %struct.FTS* %310, i32 0, i32 5, !dbg !3453
  %312 = load i32, i32* %311, align 8, !dbg !3453
  br label %313, !dbg !3453

; <label>:313:                                    ; preds = %309, %308
  %314 = phi i32 [ -100, %308 ], [ %312, %309 ], !dbg !3453
  %315 = call i32 @fchdir(i32 %314) #8, !dbg !3453
  br label %316, !dbg !3453

; <label>:316:                                    ; preds = %313, %300
  %317 = phi i32 [ 0, %300 ], [ %315, %313 ], !dbg !3453
  %318 = icmp ne i32 %317, 0, !dbg !3453
  br label %319

; <label>:319:                                    ; preds = %316, %274
  %320 = phi i1 [ false, %274 ], [ %318, %316 ]
  br i1 %320, label %321, label %326, !dbg !3456

; <label>:321:                                    ; preds = %319
  %322 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !3457
  %323 = getelementptr inbounds %struct.FTS, %struct.FTS* %322, i32 0, i32 10, !dbg !3457
  %324 = load i32, i32* %323, align 8, !dbg !3457
  %325 = or i32 %324, 8192, !dbg !3457
  store i32 %325, i32* %323, align 8, !dbg !3457
  store %struct._ftsent* null, %struct._ftsent** %2, align 8, !dbg !3459
  br label %751, !dbg !3459

; <label>:326:                                    ; preds = %319
  %327 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !3460
  call void @free_dir(%struct.FTS* %327), !dbg !3461
  %328 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !3462
  %329 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !3463
  call void @fts_load(%struct.FTS* %328, %struct._ftsent* %329), !dbg !3464
  %330 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !3465
  %331 = call zeroext i1 @setup_dir(%struct.FTS* %330), !dbg !3466
  br label %432, !dbg !3467

; <label>:332:                                    ; preds = %264
  %333 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !3468
  %334 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %333, i32 0, i32 16, !dbg !3470
  %335 = load i16, i16* %334, align 4, !dbg !3470
  %336 = zext i16 %335 to i32, !dbg !3468
  %337 = icmp eq i32 %336, 4, !dbg !3471
  br i1 %337, label %338, label %339, !dbg !3472

; <label>:338:                                    ; preds = %332
  br label %258, !dbg !3473

; <label>:339:                                    ; preds = %332
  %340 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !3474
  %341 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %340, i32 0, i32 16, !dbg !3476
  %342 = load i16, i16* %341, align 4, !dbg !3476
  %343 = zext i16 %342 to i32, !dbg !3474
  %344 = icmp eq i32 %343, 2, !dbg !3477
  br i1 %344, label %345, label %386, !dbg !3478

; <label>:345:                                    ; preds = %339
  %346 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !3479
  %347 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !3481
  %348 = call zeroext i16 @fts_stat(%struct.FTS* %346, %struct._ftsent* %347, i1 zeroext true), !dbg !3482
  %349 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !3483
  %350 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %349, i32 0, i32 14, !dbg !3484
  store i16 %348, i16* %350, align 8, !dbg !3485
  %351 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !3486
  %352 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %351, i32 0, i32 14, !dbg !3488
  %353 = load i16, i16* %352, align 8, !dbg !3488
  %354 = zext i16 %353 to i32, !dbg !3486
  %355 = icmp eq i32 %354, 1, !dbg !3489
  br i1 %355, label %356, label %383, !dbg !3490

; <label>:356:                                    ; preds = %345
  %357 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !3491
  %358 = getelementptr inbounds %struct.FTS, %struct.FTS* %357, i32 0, i32 10, !dbg !3491
  %359 = load i32, i32* %358, align 8, !dbg !3491
  %360 = and i32 %359, 4, !dbg !3491
  %361 = icmp ne i32 %360, 0, !dbg !3491
  br i1 %361, label %383, label %362, !dbg !3492

; <label>:362:                                    ; preds = %356
  %363 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !3493
  %364 = call i32 @diropen(%struct.FTS* %363, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.112, i32 0, i32 0)), !dbg !3496
  %365 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !3497
  %366 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %365, i32 0, i32 8, !dbg !3498
  store i32 %364, i32* %366, align 4, !dbg !3499
  %367 = icmp slt i32 %364, 0, !dbg !3500
  br i1 %367, label %368, label %375, !dbg !3501

; <label>:368:                                    ; preds = %362
  %369 = call i32* @__errno_location() #14, !dbg !3502
  %370 = load i32, i32* %369, align 4, !dbg !3502
  %371 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !3504
  %372 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %371, i32 0, i32 7, !dbg !3505
  store i32 %370, i32* %372, align 8, !dbg !3506
  %373 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !3507
  %374 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %373, i32 0, i32 14, !dbg !3508
  store i16 7, i16* %374, align 8, !dbg !3509
  br label %382, !dbg !3510

; <label>:375:                                    ; preds = %362
  %376 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !3511
  %377 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %376, i32 0, i32 15, !dbg !3512
  %378 = load i16, i16* %377, align 2, !dbg !3513
  %379 = zext i16 %378 to i32, !dbg !3513
  %380 = or i32 %379, 2, !dbg !3513
  %381 = trunc i32 %380 to i16, !dbg !3513
  store i16 %381, i16* %377, align 2, !dbg !3513
  br label %382

; <label>:382:                                    ; preds = %375, %368
  br label %383, !dbg !3514

; <label>:383:                                    ; preds = %382, %356, %345
  %384 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !3515
  %385 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %384, i32 0, i32 16, !dbg !3516
  store i16 3, i16* %385, align 4, !dbg !3517
  br label %386, !dbg !3518

; <label>:386:                                    ; preds = %383, %339
  br label %387, !dbg !3519

; <label>:387:                                    ; preds = %386, %251
  %388 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !3520
  %389 = getelementptr inbounds %struct.FTS, %struct.FTS* %388, i32 0, i32 4, !dbg !3521
  %390 = load i8*, i8** %389, align 8, !dbg !3521
  %391 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !3522
  %392 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %391, i32 0, i32 1, !dbg !3522
  %393 = load %struct._ftsent*, %struct._ftsent** %392, align 8, !dbg !3522
  %394 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %393, i32 0, i32 6, !dbg !3522
  %395 = load i8*, i8** %394, align 8, !dbg !3522
  %396 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !3522
  %397 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %396, i32 0, i32 1, !dbg !3522
  %398 = load %struct._ftsent*, %struct._ftsent** %397, align 8, !dbg !3522
  %399 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %398, i32 0, i32 9, !dbg !3522
  %400 = load i64, i64* %399, align 8, !dbg !3522
  %401 = sub i64 %400, 1, !dbg !3522
  %402 = getelementptr inbounds i8, i8* %395, i64 %401, !dbg !3522
  %403 = load i8, i8* %402, align 1, !dbg !3522
  %404 = sext i8 %403 to i32, !dbg !3522
  %405 = icmp eq i32 %404, 47, !dbg !3522
  br i1 %405, label %406, label %413, !dbg !3522

; <label>:406:                                    ; preds = %387
  %407 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !3522
  %408 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %407, i32 0, i32 1, !dbg !3522
  %409 = load %struct._ftsent*, %struct._ftsent** %408, align 8, !dbg !3522
  %410 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %409, i32 0, i32 9, !dbg !3522
  %411 = load i64, i64* %410, align 8, !dbg !3522
  %412 = sub i64 %411, 1, !dbg !3522
  br label %419, !dbg !3522

; <label>:413:                                    ; preds = %387
  %414 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !3522
  %415 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %414, i32 0, i32 1, !dbg !3522
  %416 = load %struct._ftsent*, %struct._ftsent** %415, align 8, !dbg !3522
  %417 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %416, i32 0, i32 9, !dbg !3522
  %418 = load i64, i64* %417, align 8, !dbg !3522
  br label %419, !dbg !3522

; <label>:419:                                    ; preds = %413, %406
  %420 = phi i64 [ %412, %406 ], [ %418, %413 ], !dbg !3522
  %421 = getelementptr inbounds i8, i8* %390, i64 %420, !dbg !3523
  store i8* %421, i8** %7, align 8, !dbg !3524
  %422 = load i8*, i8** %7, align 8, !dbg !3525
  %423 = getelementptr inbounds i8, i8* %422, i32 1, !dbg !3525
  store i8* %423, i8** %7, align 8, !dbg !3525
  store i8 47, i8* %422, align 1, !dbg !3526
  %424 = load i8*, i8** %7, align 8, !dbg !3527
  %425 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !3528
  %426 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %425, i32 0, i32 18, !dbg !3529
  %427 = getelementptr inbounds [1 x i8], [1 x i8]* %426, i32 0, i32 0, !dbg !3530
  %428 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !3531
  %429 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %428, i32 0, i32 12, !dbg !3532
  %430 = load i64, i64* %429, align 8, !dbg !3532
  %431 = add i64 %430, 1, !dbg !3533
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %424, i8* %427, i64 %431, i32 1, i1 false), !dbg !3530
  br label %432, !dbg !3530

; <label>:432:                                    ; preds = %419, %326, %94
  %433 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !3534
  %434 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !3535
  %435 = getelementptr inbounds %struct.FTS, %struct.FTS* %434, i32 0, i32 0, !dbg !3536
  store %struct._ftsent* %433, %struct._ftsent** %435, align 8, !dbg !3537
  %436 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !3538
  %437 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %436, i32 0, i32 14, !dbg !3540
  %438 = load i16, i16* %437, align 8, !dbg !3540
  %439 = zext i16 %438 to i32, !dbg !3538
  %440 = icmp eq i32 %439, 11, !dbg !3541
  br i1 %440, label %441, label %519, !dbg !3542

; <label>:441:                                    ; preds = %432
  %442 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !3543
  %443 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %442, i32 0, i32 17, !dbg !3546
  %444 = getelementptr inbounds [1 x %struct.stat], [1 x %struct.stat]* %443, i32 0, i32 0, !dbg !3547
  %445 = getelementptr inbounds %struct.stat, %struct.stat* %444, i32 0, i32 8, !dbg !3547
  %446 = load i64, i64* %445, align 8, !dbg !3547
  %447 = icmp eq i64 %446, 2, !dbg !3548
  br i1 %447, label %448, label %507, !dbg !3549

; <label>:448:                                    ; preds = %441
  call void @llvm.dbg.declare(metadata %struct._ftsent** %8, metadata !3550, metadata !DIExpression()), !dbg !3552
  %449 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !3553
  %450 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %449, i32 0, i32 1, !dbg !3554
  %451 = load %struct._ftsent*, %struct._ftsent** %450, align 8, !dbg !3554
  store %struct._ftsent* %451, %struct._ftsent** %8, align 8, !dbg !3552
  %452 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !3555
  %453 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %452, i32 0, i32 11, !dbg !3557
  %454 = load i64, i64* %453, align 8, !dbg !3557
  %455 = icmp slt i64 0, %454, !dbg !3558
  br i1 %455, label %456, label %477, !dbg !3559

; <label>:456:                                    ; preds = %448
  %457 = load %struct._ftsent*, %struct._ftsent** %8, align 8, !dbg !3560
  %458 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %457, i32 0, i32 13, !dbg !3561
  %459 = load i64, i64* %458, align 8, !dbg !3561
  %460 = icmp eq i64 %459, 0, !dbg !3562
  br i1 %460, label %461, label %477, !dbg !3563

; <label>:461:                                    ; preds = %456
  %462 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !3564
  %463 = getelementptr inbounds %struct.FTS, %struct.FTS* %462, i32 0, i32 10, !dbg !3564
  %464 = load i32, i32* %463, align 8, !dbg !3564
  %465 = and i32 %464, 8, !dbg !3564
  %466 = icmp ne i32 %465, 0, !dbg !3564
  br i1 %466, label %467, label %477, !dbg !3565

; <label>:467:                                    ; preds = %461
  %468 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !3566
  %469 = getelementptr inbounds %struct.FTS, %struct.FTS* %468, i32 0, i32 10, !dbg !3566
  %470 = load i32, i32* %469, align 8, !dbg !3566
  %471 = and i32 %470, 16, !dbg !3566
  %472 = icmp ne i32 %471, 0, !dbg !3566
  br i1 %472, label %473, label %477, !dbg !3567

; <label>:473:                                    ; preds = %467
  %474 = load %struct._ftsent*, %struct._ftsent** %8, align 8, !dbg !3568
  %475 = call zeroext i1 @link_count_optimize_ok(%struct._ftsent* %474), !dbg !3569
  br i1 %475, label %476, label %477, !dbg !3570

; <label>:476:                                    ; preds = %473
  br label %506, !dbg !3571

; <label>:477:                                    ; preds = %473, %467, %461, %456, %448
  %478 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !3573
  %479 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !3575
  %480 = call zeroext i16 @fts_stat(%struct.FTS* %478, %struct._ftsent* %479, i1 zeroext false), !dbg !3576
  %481 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !3577
  %482 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %481, i32 0, i32 14, !dbg !3578
  store i16 %480, i16* %482, align 8, !dbg !3579
  %483 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !3580
  %484 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %483, i32 0, i32 17, !dbg !3580
  %485 = getelementptr inbounds [1 x %struct.stat], [1 x %struct.stat]* %484, i32 0, i32 0, !dbg !3580
  %486 = getelementptr inbounds %struct.stat, %struct.stat* %485, i32 0, i32 3, !dbg !3580
  %487 = load i32, i32* %486, align 8, !dbg !3580
  %488 = and i32 %487, 61440, !dbg !3580
  %489 = icmp eq i32 %488, 16384, !dbg !3580
  br i1 %489, label %490, label %505, !dbg !3582

; <label>:490:                                    ; preds = %477
  %491 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !3583
  %492 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %491, i32 0, i32 11, !dbg !3584
  %493 = load i64, i64* %492, align 8, !dbg !3584
  %494 = icmp ne i64 %493, 0, !dbg !3585
  br i1 %494, label %495, label %505, !dbg !3586

; <label>:495:                                    ; preds = %490
  %496 = load %struct._ftsent*, %struct._ftsent** %8, align 8, !dbg !3587
  %497 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %496, i32 0, i32 13, !dbg !3588
  %498 = load i64, i64* %497, align 8, !dbg !3588
  %499 = icmp ne i64 %498, 0, !dbg !3587
  br i1 %499, label %500, label %505, !dbg !3589

; <label>:500:                                    ; preds = %495
  %501 = load %struct._ftsent*, %struct._ftsent** %8, align 8, !dbg !3590
  %502 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %501, i32 0, i32 13, !dbg !3591
  %503 = load i64, i64* %502, align 8, !dbg !3592
  %504 = add i64 %503, -1, !dbg !3592
  store i64 %504, i64* %502, align 8, !dbg !3592
  br label %505, !dbg !3590

; <label>:505:                                    ; preds = %500, %495, %490, %477
  br label %506

; <label>:506:                                    ; preds = %505, %476
  br label %518, !dbg !3593

; <label>:507:                                    ; preds = %441
  br label %508, !dbg !3594, !llvm.loop !3595

; <label>:508:                                    ; preds = %507
  %509 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !3596
  %510 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %509, i32 0, i32 17, !dbg !3596
  %511 = getelementptr inbounds [1 x %struct.stat], [1 x %struct.stat]* %510, i32 0, i32 0, !dbg !3596
  %512 = getelementptr inbounds %struct.stat, %struct.stat* %511, i32 0, i32 8, !dbg !3596
  %513 = load i64, i64* %512, align 8, !dbg !3596
  %514 = icmp eq i64 %513, 1, !dbg !3596
  br i1 %514, label %516, label %515, !dbg !3599

; <label>:515:                                    ; preds = %508
  call void @abort() #11, !dbg !3596
  unreachable, !dbg !3596

; <label>:516:                                    ; preds = %508
  br label %517, !dbg !3599

; <label>:517:                                    ; preds = %516
  br label %518

; <label>:518:                                    ; preds = %517, %506
  br label %519, !dbg !3600

; <label>:519:                                    ; preds = %518, %432
  %520 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !3601
  %521 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %520, i32 0, i32 14, !dbg !3603
  %522 = load i16, i16* %521, align 8, !dbg !3603
  %523 = zext i16 %522 to i32, !dbg !3601
  %524 = icmp eq i32 %523, 1, !dbg !3604
  br i1 %524, label %525, label %545, !dbg !3605

; <label>:525:                                    ; preds = %519
  %526 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !3606
  %527 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %526, i32 0, i32 11, !dbg !3609
  %528 = load i64, i64* %527, align 8, !dbg !3609
  %529 = icmp eq i64 %528, 0, !dbg !3610
  br i1 %529, label %530, label %538, !dbg !3611

; <label>:530:                                    ; preds = %525
  %531 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !3612
  %532 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %531, i32 0, i32 17, !dbg !3613
  %533 = getelementptr inbounds [1 x %struct.stat], [1 x %struct.stat]* %532, i32 0, i32 0, !dbg !3614
  %534 = getelementptr inbounds %struct.stat, %struct.stat* %533, i32 0, i32 0, !dbg !3614
  %535 = load i64, i64* %534, align 8, !dbg !3614
  %536 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !3615
  %537 = getelementptr inbounds %struct.FTS, %struct.FTS* %536, i32 0, i32 3, !dbg !3616
  store i64 %535, i64* %537, align 8, !dbg !3617
  br label %538, !dbg !3615

; <label>:538:                                    ; preds = %530, %525
  %539 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !3618
  %540 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !3620
  %541 = call zeroext i1 @enter_dir(%struct.FTS* %539, %struct._ftsent* %540), !dbg !3621
  br i1 %541, label %544, label %542, !dbg !3622

; <label>:542:                                    ; preds = %538
  %543 = call i32* @__errno_location() #14, !dbg !3623
  store i32 12, i32* %543, align 4, !dbg !3623
  store %struct._ftsent* null, %struct._ftsent** %2, align 8, !dbg !3625
  br label %751, !dbg !3625

; <label>:544:                                    ; preds = %538
  br label %545, !dbg !3626

; <label>:545:                                    ; preds = %544, %519
  %546 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !3627
  store %struct._ftsent* %546, %struct._ftsent** %2, align 8, !dbg !3628
  br label %751, !dbg !3628

; <label>:547:                                    ; preds = %258
  %548 = load %struct._ftsent*, %struct._ftsent** %5, align 8, !dbg !3629
  %549 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %548, i32 0, i32 1, !dbg !3630
  %550 = load %struct._ftsent*, %struct._ftsent** %549, align 8, !dbg !3630
  store %struct._ftsent* %550, %struct._ftsent** %4, align 8, !dbg !3631
  %551 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !3632
  %552 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !3633
  %553 = getelementptr inbounds %struct.FTS, %struct.FTS* %552, i32 0, i32 0, !dbg !3634
  store %struct._ftsent* %551, %struct._ftsent** %553, align 8, !dbg !3635
  %554 = load %struct._ftsent*, %struct._ftsent** %5, align 8, !dbg !3636
  %555 = bitcast %struct._ftsent* %554 to i8*, !dbg !3636
  call void @free(i8* %555) #8, !dbg !3637
  %556 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !3638
  %557 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %556, i32 0, i32 11, !dbg !3640
  %558 = load i64, i64* %557, align 8, !dbg !3640
  %559 = icmp eq i64 %558, -1, !dbg !3641
  br i1 %559, label %560, label %566, !dbg !3642

; <label>:560:                                    ; preds = %547
  %561 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !3643
  %562 = bitcast %struct._ftsent* %561 to i8*, !dbg !3643
  call void @free(i8* %562) #8, !dbg !3645
  %563 = call i32* @__errno_location() #14, !dbg !3646
  store i32 0, i32* %563, align 4, !dbg !3646
  %564 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !3647
  %565 = getelementptr inbounds %struct.FTS, %struct.FTS* %564, i32 0, i32 0, !dbg !3648
  store %struct._ftsent* null, %struct._ftsent** %565, align 8, !dbg !3649
  store %struct._ftsent* null, %struct._ftsent** %2, align 8, !dbg !3650
  br label %751, !dbg !3650

; <label>:566:                                    ; preds = %547
  br label %567, !dbg !3651, !llvm.loop !3652

; <label>:567:                                    ; preds = %566
  %568 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !3653
  %569 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %568, i32 0, i32 14, !dbg !3653
  %570 = load i16, i16* %569, align 8, !dbg !3653
  %571 = zext i16 %570 to i32, !dbg !3653
  %572 = icmp ne i32 %571, 11, !dbg !3653
  br i1 %572, label %574, label %573, !dbg !3656

; <label>:573:                                    ; preds = %567
  call void @abort() #11, !dbg !3653
  unreachable, !dbg !3653

; <label>:574:                                    ; preds = %567
  br label %575, !dbg !3656

; <label>:575:                                    ; preds = %574
  %576 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !3657
  %577 = getelementptr inbounds %struct.FTS, %struct.FTS* %576, i32 0, i32 4, !dbg !3658
  %578 = load i8*, i8** %577, align 8, !dbg !3658
  %579 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !3659
  %580 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %579, i32 0, i32 9, !dbg !3660
  %581 = load i64, i64* %580, align 8, !dbg !3660
  %582 = getelementptr inbounds i8, i8* %578, i64 %581, !dbg !3657
  store i8 0, i8* %582, align 1, !dbg !3661
  %583 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !3662
  %584 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %583, i32 0, i32 11, !dbg !3664
  %585 = load i64, i64* %584, align 8, !dbg !3664
  %586 = icmp eq i64 %585, 0, !dbg !3665
  br i1 %586, label %587, label %644, !dbg !3666

; <label>:587:                                    ; preds = %575
  %588 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !3667
  %589 = getelementptr inbounds %struct.FTS, %struct.FTS* %588, i32 0, i32 13, !dbg !3667
  call void @fd_ring_clear(%struct.I_ring* %589), !dbg !3667
  %590 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !3667
  %591 = getelementptr inbounds %struct.FTS, %struct.FTS* %590, i32 0, i32 10, !dbg !3667
  %592 = load i32, i32* %591, align 8, !dbg !3667
  %593 = and i32 %592, 4, !dbg !3667
  %594 = icmp ne i32 %593, 0, !dbg !3667
  br i1 %594, label %632, label %595, !dbg !3667

; <label>:595:                                    ; preds = %587
  %596 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !3667
  %597 = getelementptr inbounds %struct.FTS, %struct.FTS* %596, i32 0, i32 10, !dbg !3667
  %598 = load i32, i32* %597, align 8, !dbg !3667
  %599 = and i32 %598, 512, !dbg !3667
  %600 = icmp ne i32 %599, 0, !dbg !3667
  br i1 %600, label %601, label %615, !dbg !3667

; <label>:601:                                    ; preds = %595
  %602 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !3667
  %603 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !3667
  %604 = getelementptr inbounds %struct.FTS, %struct.FTS* %603, i32 0, i32 10, !dbg !3667
  %605 = load i32, i32* %604, align 8, !dbg !3667
  %606 = and i32 %605, 512, !dbg !3667
  %607 = icmp ne i32 %606, 0, !dbg !3667
  br i1 %607, label %608, label %609, !dbg !3667

; <label>:608:                                    ; preds = %601
  br label %613, !dbg !3667

; <label>:609:                                    ; preds = %601
  %610 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !3667
  %611 = getelementptr inbounds %struct.FTS, %struct.FTS* %610, i32 0, i32 5, !dbg !3667
  %612 = load i32, i32* %611, align 8, !dbg !3667
  br label %613, !dbg !3667

; <label>:613:                                    ; preds = %609, %608
  %614 = phi i32 [ -100, %608 ], [ %612, %609 ], !dbg !3667
  call void @cwd_advance_fd(%struct.FTS* %602, i32 %614, i1 zeroext true), !dbg !3667
  br label %629, !dbg !3667

; <label>:615:                                    ; preds = %595
  %616 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !3667
  %617 = getelementptr inbounds %struct.FTS, %struct.FTS* %616, i32 0, i32 10, !dbg !3667
  %618 = load i32, i32* %617, align 8, !dbg !3667
  %619 = and i32 %618, 512, !dbg !3667
  %620 = icmp ne i32 %619, 0, !dbg !3667
  br i1 %620, label %621, label %622, !dbg !3667

; <label>:621:                                    ; preds = %615
  br label %626, !dbg !3667

; <label>:622:                                    ; preds = %615
  %623 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !3667
  %624 = getelementptr inbounds %struct.FTS, %struct.FTS* %623, i32 0, i32 5, !dbg !3667
  %625 = load i32, i32* %624, align 8, !dbg !3667
  br label %626, !dbg !3667

; <label>:626:                                    ; preds = %622, %621
  %627 = phi i32 [ -100, %621 ], [ %625, %622 ], !dbg !3667
  %628 = call i32 @fchdir(i32 %627) #8, !dbg !3667
  br label %629, !dbg !3667

; <label>:629:                                    ; preds = %626, %613
  %630 = phi i32 [ 0, %613 ], [ %628, %626 ], !dbg !3667
  %631 = icmp ne i32 %630, 0, !dbg !3667
  br label %632

; <label>:632:                                    ; preds = %629, %587
  %633 = phi i1 [ false, %587 ], [ %631, %629 ]
  br i1 %633, label %634, label %643, !dbg !3670

; <label>:634:                                    ; preds = %632
  %635 = call i32* @__errno_location() #14, !dbg !3671
  %636 = load i32, i32* %635, align 4, !dbg !3671
  %637 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !3673
  %638 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %637, i32 0, i32 7, !dbg !3674
  store i32 %636, i32* %638, align 8, !dbg !3675
  %639 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !3676
  %640 = getelementptr inbounds %struct.FTS, %struct.FTS* %639, i32 0, i32 10, !dbg !3676
  %641 = load i32, i32* %640, align 8, !dbg !3676
  %642 = or i32 %641, 8192, !dbg !3676
  store i32 %642, i32* %640, align 8, !dbg !3676
  br label %643, !dbg !3677

; <label>:643:                                    ; preds = %634, %632
  br label %721, !dbg !3678

; <label>:644:                                    ; preds = %575
  %645 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !3679
  %646 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %645, i32 0, i32 15, !dbg !3681
  %647 = load i16, i16* %646, align 2, !dbg !3681
  %648 = zext i16 %647 to i32, !dbg !3679
  %649 = and i32 %648, 2, !dbg !3682
  %650 = icmp ne i32 %649, 0, !dbg !3682
  br i1 %650, label %651, label %696, !dbg !3683

; <label>:651:                                    ; preds = %644
  %652 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !3684
  %653 = getelementptr inbounds %struct.FTS, %struct.FTS* %652, i32 0, i32 10, !dbg !3684
  %654 = load i32, i32* %653, align 8, !dbg !3684
  %655 = and i32 %654, 4, !dbg !3684
  %656 = icmp ne i32 %655, 0, !dbg !3684
  br i1 %656, label %691, label %657, !dbg !3684

; <label>:657:                                    ; preds = %651
  %658 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !3684
  %659 = getelementptr inbounds %struct.FTS, %struct.FTS* %658, i32 0, i32 10, !dbg !3684
  %660 = load i32, i32* %659, align 8, !dbg !3684
  %661 = and i32 %660, 512, !dbg !3684
  %662 = icmp ne i32 %661, 0, !dbg !3684
  br i1 %662, label %663, label %668, !dbg !3687

; <label>:663:                                    ; preds = %657
  %664 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !3684
  %665 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !3684
  %666 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %665, i32 0, i32 8, !dbg !3684
  %667 = load i32, i32* %666, align 4, !dbg !3684
  call void @cwd_advance_fd(%struct.FTS* %664, i32 %667, i1 zeroext true), !dbg !3684
  br i1 false, label %674, label %691, !dbg !3684

; <label>:668:                                    ; preds = %657
  %669 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !3684
  %670 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %669, i32 0, i32 8, !dbg !3684
  %671 = load i32, i32* %670, align 4, !dbg !3684
  %672 = call i32 @fchdir(i32 %671) #8, !dbg !3684
  %673 = icmp ne i32 %672, 0, !dbg !3684
  br i1 %673, label %674, label %691, !dbg !3687

; <label>:674:                                    ; preds = %668, %663
  call void @llvm.dbg.declare(metadata i32* %9, metadata !3688, metadata !DIExpression()), !dbg !3690
  %675 = call i32* @__errno_location() #14, !dbg !3691
  %676 = load i32, i32* %675, align 4, !dbg !3691
  store i32 %676, i32* %9, align 4, !dbg !3690
  %677 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !3692
  %678 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %677, i32 0, i32 8, !dbg !3693
  %679 = load i32, i32* %678, align 4, !dbg !3693
  %680 = call i32 @close(i32 %679), !dbg !3694
  %681 = load i32, i32* %9, align 4, !dbg !3695
  %682 = call i32* @__errno_location() #14, !dbg !3695
  store i32 %681, i32* %682, align 4, !dbg !3695
  %683 = call i32* @__errno_location() #14, !dbg !3696
  %684 = load i32, i32* %683, align 4, !dbg !3696
  %685 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !3697
  %686 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %685, i32 0, i32 7, !dbg !3698
  store i32 %684, i32* %686, align 8, !dbg !3699
  %687 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !3700
  %688 = getelementptr inbounds %struct.FTS, %struct.FTS* %687, i32 0, i32 10, !dbg !3700
  %689 = load i32, i32* %688, align 8, !dbg !3700
  %690 = or i32 %689, 8192, !dbg !3700
  store i32 %690, i32* %688, align 8, !dbg !3700
  br label %691, !dbg !3701

; <label>:691:                                    ; preds = %674, %668, %663, %651
  %692 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !3702
  %693 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %692, i32 0, i32 8, !dbg !3703
  %694 = load i32, i32* %693, align 4, !dbg !3703
  %695 = call i32 @close(i32 %694), !dbg !3704
  br label %720, !dbg !3705

; <label>:696:                                    ; preds = %644
  %697 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !3706
  %698 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %697, i32 0, i32 15, !dbg !3708
  %699 = load i16, i16* %698, align 2, !dbg !3708
  %700 = zext i16 %699 to i32, !dbg !3706
  %701 = and i32 %700, 1, !dbg !3709
  %702 = icmp ne i32 %701, 0, !dbg !3709
  br i1 %702, label %719, label %703, !dbg !3710

; <label>:703:                                    ; preds = %696
  %704 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !3711
  %705 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !3712
  %706 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %705, i32 0, i32 1, !dbg !3713
  %707 = load %struct._ftsent*, %struct._ftsent** %706, align 8, !dbg !3713
  %708 = call i32 @fts_safe_changedir(%struct.FTS* %704, %struct._ftsent* %707, i32 -1, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2.118, i32 0, i32 0)), !dbg !3714
  %709 = icmp ne i32 %708, 0, !dbg !3714
  br i1 %709, label %710, label %719, !dbg !3715

; <label>:710:                                    ; preds = %703
  %711 = call i32* @__errno_location() #14, !dbg !3716
  %712 = load i32, i32* %711, align 4, !dbg !3716
  %713 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !3718
  %714 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %713, i32 0, i32 7, !dbg !3719
  store i32 %712, i32* %714, align 8, !dbg !3720
  %715 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !3721
  %716 = getelementptr inbounds %struct.FTS, %struct.FTS* %715, i32 0, i32 10, !dbg !3721
  %717 = load i32, i32* %716, align 8, !dbg !3721
  %718 = or i32 %717, 8192, !dbg !3721
  store i32 %718, i32* %716, align 8, !dbg !3721
  br label %719, !dbg !3722

; <label>:719:                                    ; preds = %710, %703, %696
  br label %720

; <label>:720:                                    ; preds = %719, %691
  br label %721

; <label>:721:                                    ; preds = %720, %643
  %722 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !3723
  %723 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %722, i32 0, i32 7, !dbg !3724
  %724 = load i32, i32* %723, align 8, !dbg !3724
  %725 = icmp ne i32 %724, 0, !dbg !3723
  %726 = zext i1 %725 to i64, !dbg !3723
  %727 = select i1 %725, i32 7, i32 6, !dbg !3723
  %728 = trunc i32 %727 to i16, !dbg !3723
  %729 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !3725
  %730 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %729, i32 0, i32 14, !dbg !3726
  store i16 %728, i16* %730, align 8, !dbg !3727
  %731 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !3728
  %732 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %731, i32 0, i32 7, !dbg !3730
  %733 = load i32, i32* %732, align 8, !dbg !3730
  %734 = icmp eq i32 %733, 0, !dbg !3731
  br i1 %734, label %735, label %740, !dbg !3732

; <label>:735:                                    ; preds = %721
  br label %736, !dbg !3733, !llvm.loop !3734

; <label>:736:                                    ; preds = %735
  %737 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !3735
  %738 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !3735
  call void @leave_dir(%struct.FTS* %737, %struct._ftsent* %738), !dbg !3735
  br label %739, !dbg !3735

; <label>:739:                                    ; preds = %736
  br label %740, !dbg !3735

; <label>:740:                                    ; preds = %739, %721
  %741 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !3737
  %742 = getelementptr inbounds %struct.FTS, %struct.FTS* %741, i32 0, i32 10, !dbg !3737
  %743 = load i32, i32* %742, align 8, !dbg !3737
  %744 = and i32 %743, 8192, !dbg !3737
  %745 = icmp ne i32 %744, 0, !dbg !3737
  br i1 %745, label %746, label %747, !dbg !3737

; <label>:746:                                    ; preds = %740
  br label %749, !dbg !3737

; <label>:747:                                    ; preds = %740
  %748 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !3738
  br label %749, !dbg !3737

; <label>:749:                                    ; preds = %747, %746
  %750 = phi %struct._ftsent* [ null, %746 ], [ %748, %747 ], !dbg !3737
  store %struct._ftsent* %750, %struct._ftsent** %2, align 8, !dbg !3739
  br label %751, !dbg !3739

; <label>:751:                                    ; preds = %749, %560, %545, %542, %321, %248, %229, %150, %33, %20
  %752 = load %struct._ftsent*, %struct._ftsent** %2, align 8, !dbg !3740
  ret %struct._ftsent* %752, !dbg !3740
}

; Function Attrs: noinline nounwind uwtable
define internal void @leave_dir(%struct.FTS*, %struct._ftsent*) #3 !dbg !3741 {
  %3 = alloca %struct.FTS*, align 8
  %4 = alloca %struct._ftsent*, align 8
  %5 = alloca %struct.stat*, align 8
  %6 = alloca %struct.Active_dir, align 8
  %7 = alloca i8*, align 8
  %8 = alloca %struct._ftsent*, align 8
  store %struct.FTS* %0, %struct.FTS** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.FTS** %3, metadata !3744, metadata !DIExpression()), !dbg !3745
  store %struct._ftsent* %1, %struct._ftsent** %4, align 8
  call void @llvm.dbg.declare(metadata %struct._ftsent** %4, metadata !3746, metadata !DIExpression()), !dbg !3747
  call void @llvm.dbg.declare(metadata %struct.stat** %5, metadata !3748, metadata !DIExpression()), !dbg !3751
  %9 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !3752
  %10 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %9, i32 0, i32 17, !dbg !3753
  %11 = getelementptr inbounds [1 x %struct.stat], [1 x %struct.stat]* %10, i32 0, i32 0, !dbg !3752
  store %struct.stat* %11, %struct.stat** %5, align 8, !dbg !3751
  %12 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !3754
  %13 = getelementptr inbounds %struct.FTS, %struct.FTS* %12, i32 0, i32 10, !dbg !3756
  %14 = load i32, i32* %13, align 8, !dbg !3756
  %15 = and i32 %14, 258, !dbg !3757
  %16 = icmp ne i32 %15, 0, !dbg !3757
  br i1 %16, label %17, label %37, !dbg !3758

; <label>:17:                                     ; preds = %2
  call void @llvm.dbg.declare(metadata %struct.Active_dir* %6, metadata !3759, metadata !DIExpression()), !dbg !3761
  call void @llvm.dbg.declare(metadata i8** %7, metadata !3762, metadata !DIExpression()), !dbg !3763
  %18 = load %struct.stat*, %struct.stat** %5, align 8, !dbg !3764
  %19 = getelementptr inbounds %struct.stat, %struct.stat* %18, i32 0, i32 0, !dbg !3765
  %20 = load i64, i64* %19, align 8, !dbg !3765
  %21 = getelementptr inbounds %struct.Active_dir, %struct.Active_dir* %6, i32 0, i32 0, !dbg !3766
  store i64 %20, i64* %21, align 8, !dbg !3767
  %22 = load %struct.stat*, %struct.stat** %5, align 8, !dbg !3768
  %23 = getelementptr inbounds %struct.stat, %struct.stat* %22, i32 0, i32 1, !dbg !3769
  %24 = load i64, i64* %23, align 8, !dbg !3769
  %25 = getelementptr inbounds %struct.Active_dir, %struct.Active_dir* %6, i32 0, i32 1, !dbg !3770
  store i64 %24, i64* %25, align 8, !dbg !3771
  %26 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !3772
  %27 = getelementptr inbounds %struct.FTS, %struct.FTS* %26, i32 0, i32 12, !dbg !3773
  %28 = bitcast %union.anon* %27 to %struct.hash_table**, !dbg !3774
  %29 = load %struct.hash_table*, %struct.hash_table** %28, align 8, !dbg !3774
  %30 = bitcast %struct.Active_dir* %6 to i8*, !dbg !3775
  %31 = call i8* @hash_delete(%struct.hash_table* %29, i8* %30), !dbg !3776
  store i8* %31, i8** %7, align 8, !dbg !3777
  %32 = load i8*, i8** %7, align 8, !dbg !3778
  %33 = icmp ne i8* %32, null, !dbg !3778
  br i1 %33, label %35, label %34, !dbg !3780

; <label>:34:                                     ; preds = %17
  call void @abort() #11, !dbg !3781
  unreachable, !dbg !3781

; <label>:35:                                     ; preds = %17
  %36 = load i8*, i8** %7, align 8, !dbg !3782
  call void @free(i8* %36) #8, !dbg !3783
  br label %108, !dbg !3784

; <label>:37:                                     ; preds = %2
  call void @llvm.dbg.declare(metadata %struct._ftsent** %8, metadata !3785, metadata !DIExpression()), !dbg !3787
  %38 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !3788
  %39 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %38, i32 0, i32 1, !dbg !3789
  %40 = load %struct._ftsent*, %struct._ftsent** %39, align 8, !dbg !3789
  store %struct._ftsent* %40, %struct._ftsent** %8, align 8, !dbg !3787
  %41 = load %struct._ftsent*, %struct._ftsent** %8, align 8, !dbg !3790
  %42 = icmp ne %struct._ftsent* %41, null, !dbg !3792
  br i1 %42, label %43, label %107, !dbg !3793

; <label>:43:                                     ; preds = %37
  %44 = load %struct._ftsent*, %struct._ftsent** %8, align 8, !dbg !3794
  %45 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %44, i32 0, i32 11, !dbg !3795
  %46 = load i64, i64* %45, align 8, !dbg !3795
  %47 = icmp sle i64 0, %46, !dbg !3796
  br i1 %47, label %48, label %107, !dbg !3797

; <label>:48:                                     ; preds = %43
  br label %49, !dbg !3798, !llvm.loop !3799

; <label>:49:                                     ; preds = %48
  %50 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !3800
  %51 = getelementptr inbounds %struct.FTS, %struct.FTS* %50, i32 0, i32 12, !dbg !3800
  %52 = bitcast %union.anon* %51 to %struct.cycle_check_state**, !dbg !3800
  %53 = load %struct.cycle_check_state*, %struct.cycle_check_state** %52, align 8, !dbg !3800
  %54 = getelementptr inbounds %struct.cycle_check_state, %struct.cycle_check_state* %53, i32 0, i32 1, !dbg !3800
  %55 = load i64, i64* %54, align 8, !dbg !3800
  %56 = icmp eq i64 %55, 0, !dbg !3800
  br i1 %56, label %57, label %58, !dbg !3803

; <label>:57:                                     ; preds = %49
  call void @abort() #11, !dbg !3800
  unreachable, !dbg !3800

; <label>:58:                                     ; preds = %49
  %59 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !3804
  %60 = getelementptr inbounds %struct.FTS, %struct.FTS* %59, i32 0, i32 12, !dbg !3804
  %61 = bitcast %union.anon* %60 to %struct.cycle_check_state**, !dbg !3804
  %62 = load %struct.cycle_check_state*, %struct.cycle_check_state** %61, align 8, !dbg !3804
  %63 = getelementptr inbounds %struct.cycle_check_state, %struct.cycle_check_state* %62, i32 0, i32 0, !dbg !3804
  %64 = getelementptr inbounds %struct.dev_ino, %struct.dev_ino* %63, i32 0, i32 0, !dbg !3804
  %65 = load i64, i64* %64, align 8, !dbg !3804
  %66 = load %struct.stat*, %struct.stat** %5, align 8, !dbg !3804
  %67 = getelementptr inbounds %struct.stat, %struct.stat* %66, i32 0, i32 1, !dbg !3804
  %68 = load i64, i64* %67, align 8, !dbg !3804
  %69 = icmp eq i64 %65, %68, !dbg !3804
  br i1 %69, label %70, label %105, !dbg !3804

; <label>:70:                                     ; preds = %58
  %71 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !3804
  %72 = getelementptr inbounds %struct.FTS, %struct.FTS* %71, i32 0, i32 12, !dbg !3804
  %73 = bitcast %union.anon* %72 to %struct.cycle_check_state**, !dbg !3804
  %74 = load %struct.cycle_check_state*, %struct.cycle_check_state** %73, align 8, !dbg !3804
  %75 = getelementptr inbounds %struct.cycle_check_state, %struct.cycle_check_state* %74, i32 0, i32 0, !dbg !3804
  %76 = getelementptr inbounds %struct.dev_ino, %struct.dev_ino* %75, i32 0, i32 1, !dbg !3804
  %77 = load i64, i64* %76, align 8, !dbg !3804
  %78 = load %struct.stat*, %struct.stat** %5, align 8, !dbg !3804
  %79 = getelementptr inbounds %struct.stat, %struct.stat* %78, i32 0, i32 0, !dbg !3804
  %80 = load i64, i64* %79, align 8, !dbg !3804
  %81 = icmp eq i64 %77, %80, !dbg !3804
  br i1 %81, label %82, label %105, !dbg !3803

; <label>:82:                                     ; preds = %70
  %83 = load %struct._ftsent*, %struct._ftsent** %8, align 8, !dbg !3806
  %84 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %83, i32 0, i32 17, !dbg !3806
  %85 = getelementptr inbounds [1 x %struct.stat], [1 x %struct.stat]* %84, i32 0, i32 0, !dbg !3806
  %86 = getelementptr inbounds %struct.stat, %struct.stat* %85, i32 0, i32 0, !dbg !3806
  %87 = load i64, i64* %86, align 8, !dbg !3806
  %88 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !3806
  %89 = getelementptr inbounds %struct.FTS, %struct.FTS* %88, i32 0, i32 12, !dbg !3806
  %90 = bitcast %union.anon* %89 to %struct.cycle_check_state**, !dbg !3806
  %91 = load %struct.cycle_check_state*, %struct.cycle_check_state** %90, align 8, !dbg !3806
  %92 = getelementptr inbounds %struct.cycle_check_state, %struct.cycle_check_state* %91, i32 0, i32 0, !dbg !3806
  %93 = getelementptr inbounds %struct.dev_ino, %struct.dev_ino* %92, i32 0, i32 1, !dbg !3806
  store i64 %87, i64* %93, align 8, !dbg !3806
  %94 = load %struct._ftsent*, %struct._ftsent** %8, align 8, !dbg !3806
  %95 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %94, i32 0, i32 17, !dbg !3806
  %96 = getelementptr inbounds [1 x %struct.stat], [1 x %struct.stat]* %95, i32 0, i32 0, !dbg !3806
  %97 = getelementptr inbounds %struct.stat, %struct.stat* %96, i32 0, i32 1, !dbg !3806
  %98 = load i64, i64* %97, align 8, !dbg !3806
  %99 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !3806
  %100 = getelementptr inbounds %struct.FTS, %struct.FTS* %99, i32 0, i32 12, !dbg !3806
  %101 = bitcast %union.anon* %100 to %struct.cycle_check_state**, !dbg !3806
  %102 = load %struct.cycle_check_state*, %struct.cycle_check_state** %101, align 8, !dbg !3806
  %103 = getelementptr inbounds %struct.cycle_check_state, %struct.cycle_check_state* %102, i32 0, i32 0, !dbg !3806
  %104 = getelementptr inbounds %struct.dev_ino, %struct.dev_ino* %103, i32 0, i32 0, !dbg !3806
  store i64 %98, i64* %104, align 8, !dbg !3806
  br label %105, !dbg !3806

; <label>:105:                                    ; preds = %82, %70, %58
  br label %106, !dbg !3803

; <label>:106:                                    ; preds = %105
  br label %107, !dbg !3803

; <label>:107:                                    ; preds = %106, %43, %37
  br label %108

; <label>:108:                                    ; preds = %107, %35
  ret void, !dbg !3808
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @fts_safe_changedir(%struct.FTS*, %struct._ftsent*, i32, i8*) #3 !dbg !3809 {
  %5 = alloca i32, align 4
  %6 = alloca %struct.FTS*, align 8
  %7 = alloca %struct._ftsent*, align 8
  %8 = alloca i32, align 4
  %9 = alloca i8*, align 8
  %10 = alloca i32, align 4
  %11 = alloca i8, align 1
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca %struct.stat, align 8
  %15 = alloca i32, align 4
  store %struct.FTS* %0, %struct.FTS** %6, align 8
  call void @llvm.dbg.declare(metadata %struct.FTS** %6, metadata !3812, metadata !DIExpression()), !dbg !3813
  store %struct._ftsent* %1, %struct._ftsent** %7, align 8
  call void @llvm.dbg.declare(metadata %struct._ftsent** %7, metadata !3814, metadata !DIExpression()), !dbg !3815
  store i32 %2, i32* %8, align 4
  call void @llvm.dbg.declare(metadata i32* %8, metadata !3816, metadata !DIExpression()), !dbg !3817
  store i8* %3, i8** %9, align 8
  call void @llvm.dbg.declare(metadata i8** %9, metadata !3818, metadata !DIExpression()), !dbg !3819
  call void @llvm.dbg.declare(metadata i32* %10, metadata !3820, metadata !DIExpression()), !dbg !3821
  call void @llvm.dbg.declare(metadata i8* %11, metadata !3822, metadata !DIExpression()), !dbg !3823
  %16 = load i8*, i8** %9, align 8, !dbg !3824
  %17 = icmp ne i8* %16, null, !dbg !3824
  br i1 %17, label %18, label %22, !dbg !3825

; <label>:18:                                     ; preds = %4
  %19 = load i8*, i8** %9, align 8, !dbg !3826
  %20 = call i32 @strcmp(i8* %19, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2.118, i32 0, i32 0)) #12, !dbg !3826
  %21 = icmp eq i32 %20, 0, !dbg !3826
  br label %22

; <label>:22:                                     ; preds = %18, %4
  %23 = phi i1 [ false, %4 ], [ %21, %18 ]
  %24 = zext i1 %23 to i8, !dbg !3823
  store i8 %24, i8* %11, align 1, !dbg !3823
  call void @llvm.dbg.declare(metadata i32* %12, metadata !3827, metadata !DIExpression()), !dbg !3828
  %25 = load %struct.FTS*, %struct.FTS** %6, align 8, !dbg !3829
  %26 = getelementptr inbounds %struct.FTS, %struct.FTS* %25, i32 0, i32 10, !dbg !3829
  %27 = load i32, i32* %26, align 8, !dbg !3829
  %28 = and i32 %27, 4, !dbg !3829
  %29 = icmp ne i32 %28, 0, !dbg !3829
  br i1 %29, label %30, label %43, !dbg !3831

; <label>:30:                                     ; preds = %22
  %31 = load %struct.FTS*, %struct.FTS** %6, align 8, !dbg !3832
  %32 = getelementptr inbounds %struct.FTS, %struct.FTS* %31, i32 0, i32 10, !dbg !3832
  %33 = load i32, i32* %32, align 8, !dbg !3832
  %34 = and i32 %33, 512, !dbg !3832
  %35 = icmp ne i32 %34, 0, !dbg !3832
  br i1 %35, label %36, label %42, !dbg !3835

; <label>:36:                                     ; preds = %30
  %37 = load i32, i32* %8, align 4, !dbg !3836
  %38 = icmp sle i32 0, %37, !dbg !3837
  br i1 %38, label %39, label %42, !dbg !3838

; <label>:39:                                     ; preds = %36
  %40 = load i32, i32* %8, align 4, !dbg !3839
  %41 = call i32 @close(i32 %40), !dbg !3840
  br label %42, !dbg !3840

; <label>:42:                                     ; preds = %39, %36, %30
  store i32 0, i32* %5, align 4, !dbg !3841
  br label %145, !dbg !3841

; <label>:43:                                     ; preds = %22
  %44 = load i32, i32* %8, align 4, !dbg !3842
  %45 = icmp slt i32 %44, 0, !dbg !3844
  br i1 %45, label %46, label %69, !dbg !3845

; <label>:46:                                     ; preds = %43
  %47 = load i8, i8* %11, align 1, !dbg !3846
  %48 = trunc i8 %47 to i1, !dbg !3846
  br i1 %48, label %49, label %69, !dbg !3847

; <label>:49:                                     ; preds = %46
  %50 = load %struct.FTS*, %struct.FTS** %6, align 8, !dbg !3848
  %51 = getelementptr inbounds %struct.FTS, %struct.FTS* %50, i32 0, i32 10, !dbg !3848
  %52 = load i32, i32* %51, align 8, !dbg !3848
  %53 = and i32 %52, 512, !dbg !3848
  %54 = icmp ne i32 %53, 0, !dbg !3848
  br i1 %54, label %55, label %69, !dbg !3849

; <label>:55:                                     ; preds = %49
  %56 = load %struct.FTS*, %struct.FTS** %6, align 8, !dbg !3850
  %57 = getelementptr inbounds %struct.FTS, %struct.FTS* %56, i32 0, i32 13, !dbg !3853
  %58 = call zeroext i1 @i_ring_empty(%struct.I_ring* %57), !dbg !3854
  br i1 %58, label %68, label %59, !dbg !3855

; <label>:59:                                     ; preds = %55
  call void @llvm.dbg.declare(metadata i32* %13, metadata !3856, metadata !DIExpression()), !dbg !3858
  %60 = load %struct.FTS*, %struct.FTS** %6, align 8, !dbg !3859
  %61 = getelementptr inbounds %struct.FTS, %struct.FTS* %60, i32 0, i32 13, !dbg !3860
  %62 = call i32 @i_ring_pop(%struct.I_ring* %61), !dbg !3861
  store i32 %62, i32* %13, align 4, !dbg !3862
  store i8 1, i8* %11, align 1, !dbg !3863
  %63 = load i32, i32* %13, align 4, !dbg !3864
  %64 = icmp sle i32 0, %63, !dbg !3866
  br i1 %64, label %65, label %67, !dbg !3867

; <label>:65:                                     ; preds = %59
  %66 = load i32, i32* %13, align 4, !dbg !3868
  store i32 %66, i32* %8, align 4, !dbg !3870
  store i8* null, i8** %9, align 8, !dbg !3871
  br label %67, !dbg !3872

; <label>:67:                                     ; preds = %65, %59
  br label %68, !dbg !3873

; <label>:68:                                     ; preds = %67, %55
  br label %69, !dbg !3874

; <label>:69:                                     ; preds = %68, %49, %46, %43
  %70 = load i32, i32* %8, align 4, !dbg !3875
  store i32 %70, i32* %12, align 4, !dbg !3876
  %71 = load i32, i32* %8, align 4, !dbg !3877
  %72 = icmp slt i32 %71, 0, !dbg !3879
  br i1 %72, label %73, label %79, !dbg !3880

; <label>:73:                                     ; preds = %69
  %74 = load %struct.FTS*, %struct.FTS** %6, align 8, !dbg !3881
  %75 = load i8*, i8** %9, align 8, !dbg !3882
  %76 = call i32 @diropen(%struct.FTS* %74, i8* %75), !dbg !3883
  store i32 %76, i32* %12, align 4, !dbg !3884
  %77 = icmp slt i32 %76, 0, !dbg !3885
  br i1 %77, label %78, label %79, !dbg !3886

; <label>:78:                                     ; preds = %73
  store i32 -1, i32* %5, align 4, !dbg !3887
  br label %145, !dbg !3887

; <label>:79:                                     ; preds = %73, %69
  %80 = load %struct.FTS*, %struct.FTS** %6, align 8, !dbg !3888
  %81 = getelementptr inbounds %struct.FTS, %struct.FTS* %80, i32 0, i32 10, !dbg !3888
  %82 = load i32, i32* %81, align 8, !dbg !3888
  %83 = and i32 %82, 2, !dbg !3888
  %84 = icmp ne i32 %83, 0, !dbg !3888
  br i1 %84, label %92, label %85, !dbg !3890

; <label>:85:                                     ; preds = %79
  %86 = load i8*, i8** %9, align 8, !dbg !3891
  %87 = icmp ne i8* %86, null, !dbg !3891
  br i1 %87, label %88, label %118, !dbg !3892

; <label>:88:                                     ; preds = %85
  %89 = load i8*, i8** %9, align 8, !dbg !3893
  %90 = call i32 @strcmp(i8* %89, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2.118, i32 0, i32 0)) #12, !dbg !3893
  %91 = icmp eq i32 %90, 0, !dbg !3893
  br i1 %91, label %92, label %118, !dbg !3894

; <label>:92:                                     ; preds = %88, %79
  call void @llvm.dbg.declare(metadata %struct.stat* %14, metadata !3895, metadata !DIExpression()), !dbg !3897
  %93 = load i32, i32* %12, align 4, !dbg !3898
  %94 = call i32 @fstat(i32 %93, %struct.stat* %14) #8, !dbg !3900
  %95 = icmp ne i32 %94, 0, !dbg !3900
  br i1 %95, label %96, label %97, !dbg !3901

; <label>:96:                                     ; preds = %92
  store i32 -1, i32* %10, align 4, !dbg !3902
  br label %133, !dbg !3904

; <label>:97:                                     ; preds = %92
  %98 = load %struct._ftsent*, %struct._ftsent** %7, align 8, !dbg !3905
  %99 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %98, i32 0, i32 17, !dbg !3907
  %100 = getelementptr inbounds [1 x %struct.stat], [1 x %struct.stat]* %99, i32 0, i32 0, !dbg !3908
  %101 = getelementptr inbounds %struct.stat, %struct.stat* %100, i32 0, i32 0, !dbg !3908
  %102 = load i64, i64* %101, align 8, !dbg !3908
  %103 = getelementptr inbounds %struct.stat, %struct.stat* %14, i32 0, i32 0, !dbg !3909
  %104 = load i64, i64* %103, align 8, !dbg !3909
  %105 = icmp ne i64 %102, %104, !dbg !3910
  br i1 %105, label %115, label %106, !dbg !3911

; <label>:106:                                    ; preds = %97
  %107 = load %struct._ftsent*, %struct._ftsent** %7, align 8, !dbg !3912
  %108 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %107, i32 0, i32 17, !dbg !3913
  %109 = getelementptr inbounds [1 x %struct.stat], [1 x %struct.stat]* %108, i32 0, i32 0, !dbg !3914
  %110 = getelementptr inbounds %struct.stat, %struct.stat* %109, i32 0, i32 1, !dbg !3914
  %111 = load i64, i64* %110, align 8, !dbg !3914
  %112 = getelementptr inbounds %struct.stat, %struct.stat* %14, i32 0, i32 1, !dbg !3915
  %113 = load i64, i64* %112, align 8, !dbg !3915
  %114 = icmp ne i64 %111, %113, !dbg !3916
  br i1 %114, label %115, label %117, !dbg !3917

; <label>:115:                                    ; preds = %106, %97
  %116 = call i32* @__errno_location() #14, !dbg !3918
  store i32 2, i32* %116, align 4, !dbg !3918
  store i32 -1, i32* %10, align 4, !dbg !3920
  br label %133, !dbg !3921

; <label>:117:                                    ; preds = %106
  br label %118, !dbg !3922

; <label>:118:                                    ; preds = %117, %88, %85
  %119 = load %struct.FTS*, %struct.FTS** %6, align 8, !dbg !3923
  %120 = getelementptr inbounds %struct.FTS, %struct.FTS* %119, i32 0, i32 10, !dbg !3923
  %121 = load i32, i32* %120, align 8, !dbg !3923
  %122 = and i32 %121, 512, !dbg !3923
  %123 = icmp ne i32 %122, 0, !dbg !3923
  br i1 %123, label %124, label %130, !dbg !3925

; <label>:124:                                    ; preds = %118
  %125 = load %struct.FTS*, %struct.FTS** %6, align 8, !dbg !3926
  %126 = load i32, i32* %12, align 4, !dbg !3928
  %127 = load i8, i8* %11, align 1, !dbg !3929
  %128 = trunc i8 %127 to i1, !dbg !3929
  %129 = xor i1 %128, true, !dbg !3930
  call void @cwd_advance_fd(%struct.FTS* %125, i32 %126, i1 zeroext %129), !dbg !3931
  store i32 0, i32* %5, align 4, !dbg !3932
  br label %145, !dbg !3932

; <label>:130:                                    ; preds = %118
  %131 = load i32, i32* %12, align 4, !dbg !3933
  %132 = call i32 @fchdir(i32 %131) #8, !dbg !3934
  store i32 %132, i32* %10, align 4, !dbg !3935
  br label %133, !dbg !3936

; <label>:133:                                    ; preds = %130, %115, %96
  %134 = load i32, i32* %8, align 4, !dbg !3937
  %135 = icmp slt i32 %134, 0, !dbg !3939
  br i1 %135, label %136, label %143, !dbg !3940

; <label>:136:                                    ; preds = %133
  call void @llvm.dbg.declare(metadata i32* %15, metadata !3941, metadata !DIExpression()), !dbg !3943
  %137 = call i32* @__errno_location() #14, !dbg !3944
  %138 = load i32, i32* %137, align 4, !dbg !3944
  store i32 %138, i32* %15, align 4, !dbg !3943
  %139 = load i32, i32* %12, align 4, !dbg !3945
  %140 = call i32 @close(i32 %139), !dbg !3946
  %141 = load i32, i32* %15, align 4, !dbg !3947
  %142 = call i32* @__errno_location() #14, !dbg !3947
  store i32 %141, i32* %142, align 4, !dbg !3947
  br label %143, !dbg !3948

; <label>:143:                                    ; preds = %136, %133
  %144 = load i32, i32* %10, align 4, !dbg !3949
  store i32 %144, i32* %5, align 4, !dbg !3950
  br label %145, !dbg !3950

; <label>:145:                                    ; preds = %143, %124, %78, %42
  %146 = load i32, i32* %5, align 4, !dbg !3951
  ret i32 %146, !dbg !3951
}

; Function Attrs: noinline nounwind uwtable
define internal %struct._ftsent* @fts_build(%struct.FTS*, i32) #3 !dbg !3952 {
  %3 = alloca %struct._ftsent*, align 8
  %4 = alloca %struct.FTS*, align 8
  %5 = alloca i32, align 4
  %6 = alloca %struct.dirent*, align 8
  %7 = alloca %struct._ftsent*, align 8
  %8 = alloca %struct._ftsent*, align 8
  %9 = alloca i64, align 8
  %10 = alloca %struct._ftsent*, align 8
  %11 = alloca %struct._ftsent*, align 8
  %12 = alloca %struct.__dirstream*, align 8
  %13 = alloca i8*, align 8
  %14 = alloca i32, align 4
  %15 = alloca i8, align 1
  %16 = alloca i8, align 1
  %17 = alloca i64, align 8
  %18 = alloca i64, align 8
  %19 = alloca i8, align 1
  %20 = alloca i64, align 8
  %21 = alloca i64, align 8
  %22 = alloca i64, align 8
  %23 = alloca i8*, align 8
  %24 = alloca i32, align 4
  %25 = alloca i8, align 1
  %26 = alloca i8, align 1
  store %struct.FTS* %0, %struct.FTS** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.FTS** %4, metadata !3955, metadata !DIExpression()), !dbg !3956
  store i32 %1, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !3957, metadata !DIExpression()), !dbg !3958
  call void @llvm.dbg.declare(metadata %struct.dirent** %6, metadata !3959, metadata !DIExpression()), !dbg !3970
  call void @llvm.dbg.declare(metadata %struct._ftsent** %7, metadata !3971, metadata !DIExpression()), !dbg !3972
  call void @llvm.dbg.declare(metadata %struct._ftsent** %8, metadata !3973, metadata !DIExpression()), !dbg !3974
  call void @llvm.dbg.declare(metadata i64* %9, metadata !3975, metadata !DIExpression()), !dbg !3976
  call void @llvm.dbg.declare(metadata %struct._ftsent** %10, metadata !3977, metadata !DIExpression()), !dbg !3978
  call void @llvm.dbg.declare(metadata %struct._ftsent** %11, metadata !3979, metadata !DIExpression()), !dbg !3980
  call void @llvm.dbg.declare(metadata %struct.__dirstream** %12, metadata !3981, metadata !DIExpression()), !dbg !3985
  call void @llvm.dbg.declare(metadata i8** %13, metadata !3986, metadata !DIExpression()), !dbg !3987
  call void @llvm.dbg.declare(metadata i32* %14, metadata !3988, metadata !DIExpression()), !dbg !3989
  call void @llvm.dbg.declare(metadata i8* %15, metadata !3990, metadata !DIExpression()), !dbg !3991
  call void @llvm.dbg.declare(metadata i8* %16, metadata !3992, metadata !DIExpression()), !dbg !3993
  call void @llvm.dbg.declare(metadata i64* %17, metadata !3994, metadata !DIExpression()), !dbg !3995
  call void @llvm.dbg.declare(metadata i64* %18, metadata !3996, metadata !DIExpression()), !dbg !3997
  call void @llvm.dbg.declare(metadata i8* %19, metadata !3998, metadata !DIExpression()), !dbg !3999
  call void @llvm.dbg.declare(metadata i64* %20, metadata !4000, metadata !DIExpression()), !dbg !4001
  call void @llvm.dbg.declare(metadata i64* %21, metadata !4002, metadata !DIExpression()), !dbg !4003
  call void @llvm.dbg.declare(metadata i64* %22, metadata !4004, metadata !DIExpression()), !dbg !4005
  call void @llvm.dbg.declare(metadata i8** %23, metadata !4006, metadata !DIExpression()), !dbg !4007
  %27 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !4008
  %28 = getelementptr inbounds %struct.FTS, %struct.FTS* %27, i32 0, i32 0, !dbg !4009
  %29 = load %struct._ftsent*, %struct._ftsent** %28, align 8, !dbg !4009
  store %struct._ftsent* %29, %struct._ftsent** %10, align 8, !dbg !4010
  %30 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !4011
  %31 = getelementptr inbounds %struct.FTS, %struct.FTS* %30, i32 0, i32 10, !dbg !4011
  %32 = load i32, i32* %31, align 8, !dbg !4011
  %33 = and i32 %32, 4, !dbg !4011
  %34 = icmp ne i32 %33, 0, !dbg !4011
  br i1 %34, label %49, label %35, !dbg !4011

; <label>:35:                                     ; preds = %2
  %36 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !4011
  %37 = getelementptr inbounds %struct.FTS, %struct.FTS* %36, i32 0, i32 10, !dbg !4011
  %38 = load i32, i32* %37, align 8, !dbg !4011
  %39 = and i32 %38, 512, !dbg !4011
  %40 = icmp ne i32 %39, 0, !dbg !4011
  br i1 %40, label %41, label %49, !dbg !4011

; <label>:41:                                     ; preds = %35
  %42 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !4011
  %43 = getelementptr inbounds %struct.FTS, %struct.FTS* %42, i32 0, i32 6, !dbg !4011
  %44 = load i32, i32* %43, align 4, !dbg !4011
  %45 = load %struct._ftsent*, %struct._ftsent** %10, align 8, !dbg !4011
  %46 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %45, i32 0, i32 5, !dbg !4011
  %47 = load i8*, i8** %46, align 8, !dbg !4011
  %48 = call %struct.__dirstream* @opendirat(i32 %44, i8* %47), !dbg !4011
  br label %54, !dbg !4011

; <label>:49:                                     ; preds = %35, %2
  %50 = load %struct._ftsent*, %struct._ftsent** %10, align 8, !dbg !4011
  %51 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %50, i32 0, i32 5, !dbg !4011
  %52 = load i8*, i8** %51, align 8, !dbg !4011
  %53 = call %struct.__dirstream* @opendir_safer(i8* %52), !dbg !4011
  br label %54, !dbg !4011

; <label>:54:                                     ; preds = %49, %41
  %55 = phi %struct.__dirstream* [ %48, %41 ], [ %53, %49 ], !dbg !4011
  store %struct.__dirstream* %55, %struct.__dirstream** %12, align 8, !dbg !4013
  %56 = icmp eq %struct.__dirstream* %55, null, !dbg !4014
  br i1 %56, label %57, label %68, !dbg !4015

; <label>:57:                                     ; preds = %54
  %58 = load i32, i32* %5, align 4, !dbg !4016
  %59 = icmp eq i32 %58, 3, !dbg !4019
  br i1 %59, label %60, label %67, !dbg !4020

; <label>:60:                                     ; preds = %57
  %61 = load %struct._ftsent*, %struct._ftsent** %10, align 8, !dbg !4021
  %62 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %61, i32 0, i32 14, !dbg !4023
  store i16 4, i16* %62, align 8, !dbg !4024
  %63 = call i32* @__errno_location() #14, !dbg !4025
  %64 = load i32, i32* %63, align 4, !dbg !4025
  %65 = load %struct._ftsent*, %struct._ftsent** %10, align 8, !dbg !4026
  %66 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %65, i32 0, i32 7, !dbg !4027
  store i32 %64, i32* %66, align 8, !dbg !4028
  br label %67, !dbg !4029

; <label>:67:                                     ; preds = %60, %57
  store %struct._ftsent* null, %struct._ftsent** %3, align 8, !dbg !4030
  br label %713, !dbg !4030

; <label>:68:                                     ; preds = %54
  %69 = load %struct._ftsent*, %struct._ftsent** %10, align 8, !dbg !4031
  %70 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %69, i32 0, i32 14, !dbg !4033
  %71 = load i16, i16* %70, align 8, !dbg !4033
  %72 = zext i16 %71 to i32, !dbg !4031
  %73 = icmp eq i32 %72, 11, !dbg !4034
  br i1 %73, label %74, label %80, !dbg !4035

; <label>:74:                                     ; preds = %68
  %75 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !4036
  %76 = load %struct._ftsent*, %struct._ftsent** %10, align 8, !dbg !4037
  %77 = call zeroext i16 @fts_stat(%struct.FTS* %75, %struct._ftsent* %76, i1 zeroext false), !dbg !4038
  %78 = load %struct._ftsent*, %struct._ftsent** %10, align 8, !dbg !4039
  %79 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %78, i32 0, i32 14, !dbg !4040
  store i16 %77, i16* %79, align 8, !dbg !4041
  br label %101, !dbg !4039

; <label>:80:                                     ; preds = %68
  %81 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !4042
  %82 = getelementptr inbounds %struct.FTS, %struct.FTS* %81, i32 0, i32 10, !dbg !4044
  %83 = load i32, i32* %82, align 8, !dbg !4044
  %84 = and i32 %83, 256, !dbg !4045
  %85 = icmp ne i32 %84, 0, !dbg !4045
  br i1 %85, label %86, label %100, !dbg !4046

; <label>:86:                                     ; preds = %80
  br label %87, !dbg !4047, !llvm.loop !4049

; <label>:87:                                     ; preds = %86
  %88 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !4050
  %89 = load %struct._ftsent*, %struct._ftsent** %10, align 8, !dbg !4050
  call void @leave_dir(%struct.FTS* %88, %struct._ftsent* %89), !dbg !4050
  br label %90, !dbg !4050

; <label>:90:                                     ; preds = %87
  %91 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !4052
  %92 = load %struct._ftsent*, %struct._ftsent** %10, align 8, !dbg !4053
  %93 = call zeroext i16 @fts_stat(%struct.FTS* %91, %struct._ftsent* %92, i1 zeroext false), !dbg !4054
  %94 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !4055
  %95 = load %struct._ftsent*, %struct._ftsent** %10, align 8, !dbg !4057
  %96 = call zeroext i1 @enter_dir(%struct.FTS* %94, %struct._ftsent* %95), !dbg !4058
  br i1 %96, label %99, label %97, !dbg !4059

; <label>:97:                                     ; preds = %90
  %98 = call i32* @__errno_location() #14, !dbg !4060
  store i32 12, i32* %98, align 4, !dbg !4060
  store %struct._ftsent* null, %struct._ftsent** %3, align 8, !dbg !4062
  br label %713, !dbg !4062

; <label>:99:                                     ; preds = %90
  br label %100, !dbg !4063

; <label>:100:                                    ; preds = %99, %80
  br label %101

; <label>:101:                                    ; preds = %100, %74
  %102 = load i32, i32* %5, align 4, !dbg !4064
  %103 = icmp eq i32 %102, 2, !dbg !4066
  br i1 %103, label %104, label %105, !dbg !4067

; <label>:104:                                    ; preds = %101
  store i64 0, i64* %18, align 8, !dbg !4068
  store i8 0, i8* %19, align 1, !dbg !4070
  br label %134, !dbg !4071

; <label>:105:                                    ; preds = %101
  %106 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !4072
  %107 = getelementptr inbounds %struct.FTS, %struct.FTS* %106, i32 0, i32 10, !dbg !4072
  %108 = load i32, i32* %107, align 8, !dbg !4072
  %109 = and i32 %108, 8, !dbg !4072
  %110 = icmp ne i32 %109, 0, !dbg !4072
  br i1 %110, label %111, label %132, !dbg !4074

; <label>:111:                                    ; preds = %105
  %112 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !4075
  %113 = getelementptr inbounds %struct.FTS, %struct.FTS* %112, i32 0, i32 10, !dbg !4075
  %114 = load i32, i32* %113, align 8, !dbg !4075
  %115 = and i32 %114, 16, !dbg !4075
  %116 = icmp ne i32 %115, 0, !dbg !4075
  br i1 %116, label %117, label %132, !dbg !4076

; <label>:117:                                    ; preds = %111
  %118 = load %struct._ftsent*, %struct._ftsent** %10, align 8, !dbg !4077
  %119 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %118, i32 0, i32 17, !dbg !4079
  %120 = getelementptr inbounds [1 x %struct.stat], [1 x %struct.stat]* %119, i32 0, i32 0, !dbg !4080
  %121 = getelementptr inbounds %struct.stat, %struct.stat* %120, i32 0, i32 2, !dbg !4080
  %122 = load i64, i64* %121, align 8, !dbg !4080
  %123 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !4081
  %124 = getelementptr inbounds %struct.FTS, %struct.FTS* %123, i32 0, i32 10, !dbg !4081
  %125 = load i32, i32* %124, align 8, !dbg !4081
  %126 = and i32 %125, 32, !dbg !4081
  %127 = icmp ne i32 %126, 0, !dbg !4081
  %128 = zext i1 %127 to i64, !dbg !4081
  %129 = select i1 %127, i32 0, i32 2, !dbg !4081
  %130 = sext i32 %129 to i64, !dbg !4082
  %131 = sub i64 %122, %130, !dbg !4083
  store i64 %131, i64* %18, align 8, !dbg !4084
  store i8 1, i8* %19, align 1, !dbg !4085
  br label %133, !dbg !4086

; <label>:132:                                    ; preds = %111, %105
  store i64 -1, i64* %18, align 8, !dbg !4087
  store i8 0, i8* %19, align 1, !dbg !4089
  br label %133

; <label>:133:                                    ; preds = %132, %117
  br label %134

; <label>:134:                                    ; preds = %133, %104
  %135 = load i64, i64* %18, align 8, !dbg !4090
  %136 = icmp ne i64 %135, 0, !dbg !4090
  br i1 %136, label %140, label %137, !dbg !4092

; <label>:137:                                    ; preds = %134
  %138 = load i32, i32* %5, align 4, !dbg !4093
  %139 = icmp eq i32 %138, 3, !dbg !4094
  br i1 %139, label %140, label %199, !dbg !4095

; <label>:140:                                    ; preds = %137, %134
  call void @llvm.dbg.declare(metadata i32* %24, metadata !4096, metadata !DIExpression()), !dbg !4098
  %141 = load %struct.__dirstream*, %struct.__dirstream** %12, align 8, !dbg !4099
  %142 = call i32 @dirfd(%struct.__dirstream* %141) #8, !dbg !4100
  store i32 %142, i32* %24, align 4, !dbg !4098
  %143 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !4101
  %144 = getelementptr inbounds %struct.FTS, %struct.FTS* %143, i32 0, i32 10, !dbg !4101
  %145 = load i32, i32* %144, align 8, !dbg !4101
  %146 = and i32 %145, 512, !dbg !4101
  %147 = icmp ne i32 %146, 0, !dbg !4101
  br i1 %147, label %148, label %156, !dbg !4103

; <label>:148:                                    ; preds = %140
  %149 = load i32, i32* %24, align 4, !dbg !4104
  %150 = icmp sle i32 0, %149, !dbg !4105
  br i1 %150, label %151, label %156, !dbg !4106

; <label>:151:                                    ; preds = %148
  %152 = load i32, i32* %24, align 4, !dbg !4107
  %153 = call i32 @dup_safer(i32 %152), !dbg !4109
  store i32 %153, i32* %24, align 4, !dbg !4110
  %154 = load i32, i32* %24, align 4, !dbg !4111
  %155 = call i32 @set_cloexec_flag(i32 %154, i1 zeroext true), !dbg !4112
  br label %156, !dbg !4113

; <label>:156:                                    ; preds = %151, %148, %140
  %157 = load i32, i32* %24, align 4, !dbg !4114
  %158 = icmp slt i32 %157, 0, !dbg !4116
  br i1 %158, label %165, label %159, !dbg !4117

; <label>:159:                                    ; preds = %156
  %160 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !4118
  %161 = load %struct._ftsent*, %struct._ftsent** %10, align 8, !dbg !4119
  %162 = load i32, i32* %24, align 4, !dbg !4120
  %163 = call i32 @fts_safe_changedir(%struct.FTS* %160, %struct._ftsent* %161, i32 %162, i8* null), !dbg !4121
  %164 = icmp ne i32 %163, 0, !dbg !4121
  br i1 %164, label %165, label %197, !dbg !4122

; <label>:165:                                    ; preds = %159, %156
  %166 = load i64, i64* %18, align 8, !dbg !4123
  %167 = icmp ne i64 %166, 0, !dbg !4123
  br i1 %167, label %168, label %176, !dbg !4126

; <label>:168:                                    ; preds = %165
  %169 = load i32, i32* %5, align 4, !dbg !4127
  %170 = icmp eq i32 %169, 3, !dbg !4128
  br i1 %170, label %171, label %176, !dbg !4129

; <label>:171:                                    ; preds = %168
  %172 = call i32* @__errno_location() #14, !dbg !4130
  %173 = load i32, i32* %172, align 4, !dbg !4130
  %174 = load %struct._ftsent*, %struct._ftsent** %10, align 8, !dbg !4131
  %175 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %174, i32 0, i32 7, !dbg !4132
  store i32 %173, i32* %175, align 8, !dbg !4133
  br label %176, !dbg !4131

; <label>:176:                                    ; preds = %171, %168, %165
  %177 = load %struct._ftsent*, %struct._ftsent** %10, align 8, !dbg !4134
  %178 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %177, i32 0, i32 15, !dbg !4135
  %179 = load i16, i16* %178, align 2, !dbg !4136
  %180 = zext i16 %179 to i32, !dbg !4136
  %181 = or i32 %180, 1, !dbg !4136
  %182 = trunc i32 %181 to i16, !dbg !4136
  store i16 %182, i16* %178, align 2, !dbg !4136
  store i8 0, i8* %15, align 1, !dbg !4137
  %183 = load %struct.__dirstream*, %struct.__dirstream** %12, align 8, !dbg !4138
  %184 = call i32 @closedir(%struct.__dirstream* %183), !dbg !4139
  %185 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !4140
  %186 = getelementptr inbounds %struct.FTS, %struct.FTS* %185, i32 0, i32 10, !dbg !4140
  %187 = load i32, i32* %186, align 8, !dbg !4140
  %188 = and i32 %187, 512, !dbg !4140
  %189 = icmp ne i32 %188, 0, !dbg !4140
  br i1 %189, label %190, label %196, !dbg !4142

; <label>:190:                                    ; preds = %176
  %191 = load i32, i32* %24, align 4, !dbg !4143
  %192 = icmp sle i32 0, %191, !dbg !4144
  br i1 %192, label %193, label %196, !dbg !4145

; <label>:193:                                    ; preds = %190
  %194 = load i32, i32* %24, align 4, !dbg !4146
  %195 = call i32 @close(i32 %194), !dbg !4147
  br label %196, !dbg !4147

; <label>:196:                                    ; preds = %193, %190, %176
  store %struct.__dirstream* null, %struct.__dirstream** %12, align 8, !dbg !4148
  br label %198, !dbg !4149

; <label>:197:                                    ; preds = %159
  store i8 1, i8* %15, align 1, !dbg !4150
  br label %198

; <label>:198:                                    ; preds = %197, %196
  br label %200, !dbg !4151

; <label>:199:                                    ; preds = %137
  store i8 0, i8* %15, align 1, !dbg !4152
  br label %200

; <label>:200:                                    ; preds = %199, %198
  %201 = load %struct._ftsent*, %struct._ftsent** %10, align 8, !dbg !4153
  %202 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %201, i32 0, i32 6, !dbg !4153
  %203 = load i8*, i8** %202, align 8, !dbg !4153
  %204 = load %struct._ftsent*, %struct._ftsent** %10, align 8, !dbg !4153
  %205 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %204, i32 0, i32 9, !dbg !4153
  %206 = load i64, i64* %205, align 8, !dbg !4153
  %207 = sub i64 %206, 1, !dbg !4153
  %208 = getelementptr inbounds i8, i8* %203, i64 %207, !dbg !4153
  %209 = load i8, i8* %208, align 1, !dbg !4153
  %210 = sext i8 %209 to i32, !dbg !4153
  %211 = icmp eq i32 %210, 47, !dbg !4153
  br i1 %211, label %212, label %217, !dbg !4153

; <label>:212:                                    ; preds = %200
  %213 = load %struct._ftsent*, %struct._ftsent** %10, align 8, !dbg !4153
  %214 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %213, i32 0, i32 9, !dbg !4153
  %215 = load i64, i64* %214, align 8, !dbg !4153
  %216 = sub i64 %215, 1, !dbg !4153
  br label %221, !dbg !4153

; <label>:217:                                    ; preds = %200
  %218 = load %struct._ftsent*, %struct._ftsent** %10, align 8, !dbg !4153
  %219 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %218, i32 0, i32 9, !dbg !4153
  %220 = load i64, i64* %219, align 8, !dbg !4153
  br label %221, !dbg !4153

; <label>:221:                                    ; preds = %217, %212
  %222 = phi i64 [ %216, %212 ], [ %220, %217 ], !dbg !4153
  store i64 %222, i64* %20, align 8, !dbg !4154
  %223 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !4155
  %224 = getelementptr inbounds %struct.FTS, %struct.FTS* %223, i32 0, i32 10, !dbg !4155
  %225 = load i32, i32* %224, align 8, !dbg !4155
  %226 = and i32 %225, 4, !dbg !4155
  %227 = icmp ne i32 %226, 0, !dbg !4155
  br i1 %227, label %228, label %236, !dbg !4157

; <label>:228:                                    ; preds = %221
  %229 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !4158
  %230 = getelementptr inbounds %struct.FTS, %struct.FTS* %229, i32 0, i32 4, !dbg !4160
  %231 = load i8*, i8** %230, align 8, !dbg !4160
  %232 = load i64, i64* %20, align 8, !dbg !4161
  %233 = getelementptr inbounds i8, i8* %231, i64 %232, !dbg !4162
  store i8* %233, i8** %23, align 8, !dbg !4163
  %234 = load i8*, i8** %23, align 8, !dbg !4164
  %235 = getelementptr inbounds i8, i8* %234, i32 1, !dbg !4164
  store i8* %235, i8** %23, align 8, !dbg !4164
  store i8 47, i8* %234, align 1, !dbg !4165
  br label %237, !dbg !4166

; <label>:236:                                    ; preds = %221
  store i8* null, i8** %23, align 8, !dbg !4167
  br label %237

; <label>:237:                                    ; preds = %236, %228
  %238 = load i64, i64* %20, align 8, !dbg !4169
  %239 = add i64 %238, 1, !dbg !4169
  store i64 %239, i64* %20, align 8, !dbg !4169
  %240 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !4170
  %241 = getelementptr inbounds %struct.FTS, %struct.FTS* %240, i32 0, i32 7, !dbg !4171
  %242 = load i64, i64* %241, align 8, !dbg !4171
  %243 = load i64, i64* %20, align 8, !dbg !4172
  %244 = sub i64 %242, %243, !dbg !4173
  store i64 %244, i64* %21, align 8, !dbg !4174
  %245 = load %struct._ftsent*, %struct._ftsent** %10, align 8, !dbg !4175
  %246 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %245, i32 0, i32 11, !dbg !4176
  %247 = load i64, i64* %246, align 8, !dbg !4176
  %248 = add nsw i64 %247, 1, !dbg !4177
  store i64 %248, i64* %17, align 8, !dbg !4178
  store i8 0, i8* %16, align 1, !dbg !4179
  store %struct._ftsent* null, %struct._ftsent** %11, align 8, !dbg !4180
  store %struct._ftsent* null, %struct._ftsent** %8, align 8, !dbg !4182
  store i64 0, i64* %9, align 8, !dbg !4183
  br label %249, !dbg !4184

; <label>:249:                                    ; preds = %548, %290, %237
  %250 = load %struct.__dirstream*, %struct.__dirstream** %12, align 8, !dbg !4185
  %251 = icmp ne %struct.__dirstream* %250, null, !dbg !4185
  br i1 %251, label %252, label %256, !dbg !4187

; <label>:252:                                    ; preds = %249
  %253 = load %struct.__dirstream*, %struct.__dirstream** %12, align 8, !dbg !4188
  %254 = call %struct.dirent* @readdir(%struct.__dirstream* %253), !dbg !4189
  store %struct.dirent* %254, %struct.dirent** %6, align 8, !dbg !4190
  %255 = icmp ne %struct.dirent* %254, null, !dbg !4187
  br label %256

; <label>:256:                                    ; preds = %252, %249
  %257 = phi i1 [ false, %249 ], [ %255, %252 ]
  br i1 %257, label %258, label %551, !dbg !4191

; <label>:258:                                    ; preds = %256
  call void @llvm.dbg.declare(metadata i8* %25, metadata !4192, metadata !DIExpression()), !dbg !4194
  %259 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !4195
  %260 = getelementptr inbounds %struct.FTS, %struct.FTS* %259, i32 0, i32 10, !dbg !4195
  %261 = load i32, i32* %260, align 8, !dbg !4195
  %262 = and i32 %261, 32, !dbg !4195
  %263 = icmp ne i32 %262, 0, !dbg !4195
  br i1 %263, label %291, label %264, !dbg !4197

; <label>:264:                                    ; preds = %258
  %265 = load %struct.dirent*, %struct.dirent** %6, align 8, !dbg !4198
  %266 = getelementptr inbounds %struct.dirent, %struct.dirent* %265, i32 0, i32 4, !dbg !4198
  %267 = getelementptr inbounds [256 x i8], [256 x i8]* %266, i64 0, i64 0, !dbg !4198
  %268 = load i8, i8* %267, align 1, !dbg !4198
  %269 = sext i8 %268 to i32, !dbg !4198
  %270 = icmp eq i32 %269, 46, !dbg !4198
  br i1 %270, label %271, label %291, !dbg !4198

; <label>:271:                                    ; preds = %264
  %272 = load %struct.dirent*, %struct.dirent** %6, align 8, !dbg !4198
  %273 = getelementptr inbounds %struct.dirent, %struct.dirent* %272, i32 0, i32 4, !dbg !4198
  %274 = getelementptr inbounds [256 x i8], [256 x i8]* %273, i64 0, i64 1, !dbg !4198
  %275 = load i8, i8* %274, align 1, !dbg !4198
  %276 = icmp ne i8 %275, 0, !dbg !4198
  br i1 %276, label %277, label %290, !dbg !4198

; <label>:277:                                    ; preds = %271
  %278 = load %struct.dirent*, %struct.dirent** %6, align 8, !dbg !4198
  %279 = getelementptr inbounds %struct.dirent, %struct.dirent* %278, i32 0, i32 4, !dbg !4198
  %280 = getelementptr inbounds [256 x i8], [256 x i8]* %279, i64 0, i64 1, !dbg !4198
  %281 = load i8, i8* %280, align 1, !dbg !4198
  %282 = sext i8 %281 to i32, !dbg !4198
  %283 = icmp eq i32 %282, 46, !dbg !4198
  br i1 %283, label %284, label %291, !dbg !4198

; <label>:284:                                    ; preds = %277
  %285 = load %struct.dirent*, %struct.dirent** %6, align 8, !dbg !4198
  %286 = getelementptr inbounds %struct.dirent, %struct.dirent* %285, i32 0, i32 4, !dbg !4198
  %287 = getelementptr inbounds [256 x i8], [256 x i8]* %286, i64 0, i64 2, !dbg !4198
  %288 = load i8, i8* %287, align 1, !dbg !4198
  %289 = icmp ne i8 %288, 0, !dbg !4198
  br i1 %289, label %291, label %290, !dbg !4199

; <label>:290:                                    ; preds = %284, %271
  br label %249, !dbg !4200, !llvm.loop !4201

; <label>:291:                                    ; preds = %284, %277, %264, %258
  %292 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !4203
  %293 = load %struct.dirent*, %struct.dirent** %6, align 8, !dbg !4205
  %294 = getelementptr inbounds %struct.dirent, %struct.dirent* %293, i32 0, i32 4, !dbg !4206
  %295 = getelementptr inbounds [256 x i8], [256 x i8]* %294, i32 0, i32 0, !dbg !4205
  %296 = load %struct.dirent*, %struct.dirent** %6, align 8, !dbg !4207
  %297 = getelementptr inbounds %struct.dirent, %struct.dirent* %296, i32 0, i32 4, !dbg !4207
  %298 = getelementptr inbounds [256 x i8], [256 x i8]* %297, i32 0, i32 0, !dbg !4207
  %299 = call i64 @strlen(i8* %298) #12, !dbg !4207
  %300 = call %struct._ftsent* @fts_alloc(%struct.FTS* %292, i8* %295, i64 %299), !dbg !4208
  store %struct._ftsent* %300, %struct._ftsent** %7, align 8, !dbg !4209
  %301 = icmp eq %struct._ftsent* %300, null, !dbg !4210
  br i1 %301, label %302, label %303, !dbg !4211

; <label>:302:                                    ; preds = %291
  br label %324, !dbg !4212

; <label>:303:                                    ; preds = %291
  %304 = load %struct.dirent*, %struct.dirent** %6, align 8, !dbg !4213
  %305 = getelementptr inbounds %struct.dirent, %struct.dirent* %304, i32 0, i32 4, !dbg !4213
  %306 = getelementptr inbounds [256 x i8], [256 x i8]* %305, i32 0, i32 0, !dbg !4213
  %307 = call i64 @strlen(i8* %306) #12, !dbg !4213
  %308 = load i64, i64* %21, align 8, !dbg !4215
  %309 = icmp uge i64 %307, %308, !dbg !4216
  br i1 %309, label %310, label %365, !dbg !4217

; <label>:310:                                    ; preds = %303
  %311 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !4218
  %312 = getelementptr inbounds %struct.FTS, %struct.FTS* %311, i32 0, i32 4, !dbg !4220
  %313 = load i8*, i8** %312, align 8, !dbg !4220
  store i8* %313, i8** %13, align 8, !dbg !4221
  %314 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !4222
  %315 = load %struct.dirent*, %struct.dirent** %6, align 8, !dbg !4224
  %316 = getelementptr inbounds %struct.dirent, %struct.dirent* %315, i32 0, i32 4, !dbg !4224
  %317 = getelementptr inbounds [256 x i8], [256 x i8]* %316, i32 0, i32 0, !dbg !4224
  %318 = call i64 @strlen(i8* %317) #12, !dbg !4224
  %319 = load i64, i64* %20, align 8, !dbg !4225
  %320 = add i64 %318, %319, !dbg !4226
  %321 = add i64 %320, 1, !dbg !4227
  %322 = call zeroext i1 @fts_palloc(%struct.FTS* %314, i64 %321), !dbg !4228
  br i1 %322, label %340, label %323, !dbg !4229

; <label>:323:                                    ; preds = %310
  br label %324, !dbg !4230

; <label>:324:                                    ; preds = %323, %302
  %325 = call i32* @__errno_location() #14, !dbg !4231
  %326 = load i32, i32* %325, align 4, !dbg !4231
  store i32 %326, i32* %14, align 4, !dbg !4233
  %327 = load %struct._ftsent*, %struct._ftsent** %7, align 8, !dbg !4234
  %328 = bitcast %struct._ftsent* %327 to i8*, !dbg !4234
  call void @free(i8* %328) #8, !dbg !4235
  %329 = load %struct._ftsent*, %struct._ftsent** %8, align 8, !dbg !4236
  call void @fts_lfree(%struct._ftsent* %329), !dbg !4237
  %330 = load %struct.__dirstream*, %struct.__dirstream** %12, align 8, !dbg !4238
  %331 = call i32 @closedir(%struct.__dirstream* %330), !dbg !4239
  %332 = load %struct._ftsent*, %struct._ftsent** %10, align 8, !dbg !4240
  %333 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %332, i32 0, i32 14, !dbg !4241
  store i16 7, i16* %333, align 8, !dbg !4242
  %334 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !4243
  %335 = getelementptr inbounds %struct.FTS, %struct.FTS* %334, i32 0, i32 10, !dbg !4243
  %336 = load i32, i32* %335, align 8, !dbg !4243
  %337 = or i32 %336, 8192, !dbg !4243
  store i32 %337, i32* %335, align 8, !dbg !4243
  %338 = load i32, i32* %14, align 4, !dbg !4244
  %339 = call i32* @__errno_location() #14, !dbg !4244
  store i32 %338, i32* %339, align 4, !dbg !4244
  store %struct._ftsent* null, %struct._ftsent** %3, align 8, !dbg !4245
  br label %713, !dbg !4245

; <label>:340:                                    ; preds = %310
  %341 = load i8*, i8** %13, align 8, !dbg !4246
  %342 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !4248
  %343 = getelementptr inbounds %struct.FTS, %struct.FTS* %342, i32 0, i32 4, !dbg !4249
  %344 = load i8*, i8** %343, align 8, !dbg !4249
  %345 = icmp ne i8* %341, %344, !dbg !4250
  br i1 %345, label %346, label %359, !dbg !4251

; <label>:346:                                    ; preds = %340
  store i8 1, i8* %16, align 1, !dbg !4252
  %347 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !4254
  %348 = getelementptr inbounds %struct.FTS, %struct.FTS* %347, i32 0, i32 10, !dbg !4254
  %349 = load i32, i32* %348, align 8, !dbg !4254
  %350 = and i32 %349, 4, !dbg !4254
  %351 = icmp ne i32 %350, 0, !dbg !4254
  br i1 %351, label %352, label %358, !dbg !4256

; <label>:352:                                    ; preds = %346
  %353 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !4257
  %354 = getelementptr inbounds %struct.FTS, %struct.FTS* %353, i32 0, i32 4, !dbg !4258
  %355 = load i8*, i8** %354, align 8, !dbg !4258
  %356 = load i64, i64* %20, align 8, !dbg !4259
  %357 = getelementptr inbounds i8, i8* %355, i64 %356, !dbg !4260
  store i8* %357, i8** %23, align 8, !dbg !4261
  br label %358, !dbg !4262

; <label>:358:                                    ; preds = %352, %346
  br label %359, !dbg !4263

; <label>:359:                                    ; preds = %358, %340
  %360 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !4264
  %361 = getelementptr inbounds %struct.FTS, %struct.FTS* %360, i32 0, i32 7, !dbg !4265
  %362 = load i64, i64* %361, align 8, !dbg !4265
  %363 = load i64, i64* %20, align 8, !dbg !4266
  %364 = sub i64 %362, %363, !dbg !4267
  store i64 %364, i64* %21, align 8, !dbg !4268
  br label %365, !dbg !4269

; <label>:365:                                    ; preds = %359, %303
  %366 = load i64, i64* %20, align 8, !dbg !4270
  %367 = load %struct.dirent*, %struct.dirent** %6, align 8, !dbg !4271
  %368 = getelementptr inbounds %struct.dirent, %struct.dirent* %367, i32 0, i32 4, !dbg !4271
  %369 = getelementptr inbounds [256 x i8], [256 x i8]* %368, i32 0, i32 0, !dbg !4271
  %370 = call i64 @strlen(i8* %369) #12, !dbg !4271
  %371 = add i64 %366, %370, !dbg !4272
  store i64 %371, i64* %22, align 8, !dbg !4273
  %372 = load i64, i64* %22, align 8, !dbg !4274
  %373 = load i64, i64* %20, align 8, !dbg !4276
  %374 = icmp ult i64 %372, %373, !dbg !4277
  br i1 %374, label %375, label %388, !dbg !4278

; <label>:375:                                    ; preds = %365
  %376 = load %struct._ftsent*, %struct._ftsent** %7, align 8, !dbg !4279
  %377 = bitcast %struct._ftsent* %376 to i8*, !dbg !4279
  call void @free(i8* %377) #8, !dbg !4281
  %378 = load %struct._ftsent*, %struct._ftsent** %8, align 8, !dbg !4282
  call void @fts_lfree(%struct._ftsent* %378), !dbg !4283
  %379 = load %struct.__dirstream*, %struct.__dirstream** %12, align 8, !dbg !4284
  %380 = call i32 @closedir(%struct.__dirstream* %379), !dbg !4285
  %381 = load %struct._ftsent*, %struct._ftsent** %10, align 8, !dbg !4286
  %382 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %381, i32 0, i32 14, !dbg !4287
  store i16 7, i16* %382, align 8, !dbg !4288
  %383 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !4289
  %384 = getelementptr inbounds %struct.FTS, %struct.FTS* %383, i32 0, i32 10, !dbg !4289
  %385 = load i32, i32* %384, align 8, !dbg !4289
  %386 = or i32 %385, 8192, !dbg !4289
  store i32 %386, i32* %384, align 8, !dbg !4289
  %387 = call i32* @__errno_location() #14, !dbg !4290
  store i32 36, i32* %387, align 4, !dbg !4290
  store %struct._ftsent* null, %struct._ftsent** %3, align 8, !dbg !4291
  br label %713, !dbg !4291

; <label>:388:                                    ; preds = %365
  %389 = load i64, i64* %17, align 8, !dbg !4292
  %390 = load %struct._ftsent*, %struct._ftsent** %7, align 8, !dbg !4293
  %391 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %390, i32 0, i32 11, !dbg !4294
  store i64 %389, i64* %391, align 8, !dbg !4295
  %392 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !4296
  %393 = getelementptr inbounds %struct.FTS, %struct.FTS* %392, i32 0, i32 0, !dbg !4297
  %394 = load %struct._ftsent*, %struct._ftsent** %393, align 8, !dbg !4297
  %395 = load %struct._ftsent*, %struct._ftsent** %7, align 8, !dbg !4298
  %396 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %395, i32 0, i32 1, !dbg !4299
  store %struct._ftsent* %394, %struct._ftsent** %396, align 8, !dbg !4300
  %397 = load i64, i64* %22, align 8, !dbg !4301
  %398 = load %struct._ftsent*, %struct._ftsent** %7, align 8, !dbg !4302
  %399 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %398, i32 0, i32 9, !dbg !4303
  store i64 %397, i64* %399, align 8, !dbg !4304
  %400 = load %struct.dirent*, %struct.dirent** %6, align 8, !dbg !4305
  %401 = getelementptr inbounds %struct.dirent, %struct.dirent* %400, i32 0, i32 0, !dbg !4305
  %402 = load i64, i64* %401, align 8, !dbg !4305
  %403 = load %struct._ftsent*, %struct._ftsent** %7, align 8, !dbg !4306
  %404 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %403, i32 0, i32 17, !dbg !4307
  %405 = getelementptr inbounds [1 x %struct.stat], [1 x %struct.stat]* %404, i32 0, i32 0, !dbg !4308
  %406 = getelementptr inbounds %struct.stat, %struct.stat* %405, i32 0, i32 1, !dbg !4308
  store i64 %402, i64* %406, align 8, !dbg !4309
  %407 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !4310
  %408 = getelementptr inbounds %struct.FTS, %struct.FTS* %407, i32 0, i32 10, !dbg !4310
  %409 = load i32, i32* %408, align 8, !dbg !4310
  %410 = and i32 %409, 4, !dbg !4310
  %411 = icmp ne i32 %410, 0, !dbg !4310
  br i1 %411, label %412, label %426, !dbg !4312

; <label>:412:                                    ; preds = %388
  %413 = load %struct._ftsent*, %struct._ftsent** %7, align 8, !dbg !4313
  %414 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %413, i32 0, i32 6, !dbg !4315
  %415 = load i8*, i8** %414, align 8, !dbg !4315
  %416 = load %struct._ftsent*, %struct._ftsent** %7, align 8, !dbg !4316
  %417 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %416, i32 0, i32 5, !dbg !4317
  store i8* %415, i8** %417, align 8, !dbg !4318
  %418 = load i8*, i8** %23, align 8, !dbg !4319
  %419 = load %struct._ftsent*, %struct._ftsent** %7, align 8, !dbg !4320
  %420 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %419, i32 0, i32 18, !dbg !4321
  %421 = getelementptr inbounds [1 x i8], [1 x i8]* %420, i32 0, i32 0, !dbg !4322
  %422 = load %struct._ftsent*, %struct._ftsent** %7, align 8, !dbg !4323
  %423 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %422, i32 0, i32 12, !dbg !4324
  %424 = load i64, i64* %423, align 8, !dbg !4324
  %425 = add i64 %424, 1, !dbg !4325
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %418, i8* %421, i64 %425, i32 1, i1 false), !dbg !4322
  br label %432, !dbg !4326

; <label>:426:                                    ; preds = %388
  %427 = load %struct._ftsent*, %struct._ftsent** %7, align 8, !dbg !4327
  %428 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %427, i32 0, i32 18, !dbg !4328
  %429 = getelementptr inbounds [1 x i8], [1 x i8]* %428, i32 0, i32 0, !dbg !4327
  %430 = load %struct._ftsent*, %struct._ftsent** %7, align 8, !dbg !4329
  %431 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %430, i32 0, i32 5, !dbg !4330
  store i8* %429, i8** %431, align 8, !dbg !4331
  br label %432

; <label>:432:                                    ; preds = %426, %412
  %433 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !4332
  %434 = getelementptr inbounds %struct.FTS, %struct.FTS* %433, i32 0, i32 9, !dbg !4334
  %435 = load i32 (%struct._ftsent**, %struct._ftsent**)*, i32 (%struct._ftsent**, %struct._ftsent**)** %434, align 8, !dbg !4334
  %436 = icmp eq i32 (%struct._ftsent**, %struct._ftsent**)* %435, null, !dbg !4335
  br i1 %436, label %443, label %437, !dbg !4336

; <label>:437:                                    ; preds = %432
  %438 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !4337
  %439 = getelementptr inbounds %struct.FTS, %struct.FTS* %438, i32 0, i32 10, !dbg !4337
  %440 = load i32, i32* %439, align 8, !dbg !4337
  %441 = and i32 %440, 1024, !dbg !4337
  %442 = icmp ne i32 %441, 0, !dbg !4337
  br i1 %442, label %443, label %498, !dbg !4338

; <label>:443:                                    ; preds = %437, %432
  call void @llvm.dbg.declare(metadata i8* %26, metadata !4339, metadata !DIExpression()), !dbg !4341
  %444 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !4342
  %445 = getelementptr inbounds %struct.FTS, %struct.FTS* %444, i32 0, i32 10, !dbg !4342
  %446 = load i32, i32* %445, align 8, !dbg !4342
  %447 = and i32 %446, 16, !dbg !4342
  %448 = icmp ne i32 %447, 0, !dbg !4342
  br i1 %448, label %449, label %468, !dbg !4343

; <label>:449:                                    ; preds = %443
  %450 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !4344
  %451 = getelementptr inbounds %struct.FTS, %struct.FTS* %450, i32 0, i32 10, !dbg !4344
  %452 = load i32, i32* %451, align 8, !dbg !4344
  %453 = and i32 %452, 8, !dbg !4344
  %454 = icmp ne i32 %453, 0, !dbg !4344
  br i1 %454, label %455, label %468, !dbg !4345

; <label>:455:                                    ; preds = %449
  %456 = load %struct.dirent*, %struct.dirent** %6, align 8, !dbg !4346
  %457 = getelementptr inbounds %struct.dirent, %struct.dirent* %456, i32 0, i32 3, !dbg !4346
  %458 = load i8, i8* %457, align 2, !dbg !4346
  %459 = zext i8 %458 to i32, !dbg !4346
  %460 = icmp ne i32 %459, 0, !dbg !4346
  br i1 %460, label %461, label %468, !dbg !4347

; <label>:461:                                    ; preds = %455
  %462 = load %struct.dirent*, %struct.dirent** %6, align 8, !dbg !4348
  %463 = getelementptr inbounds %struct.dirent, %struct.dirent* %462, i32 0, i32 3, !dbg !4348
  %464 = load i8, i8* %463, align 2, !dbg !4348
  %465 = zext i8 %464 to i32, !dbg !4348
  %466 = icmp eq i32 %465, 4, !dbg !4348
  %467 = xor i1 %466, true, !dbg !4349
  br label %468

; <label>:468:                                    ; preds = %461, %455, %449, %443
  %469 = phi i1 [ false, %455 ], [ false, %449 ], [ false, %443 ], [ %467, %461 ]
  %470 = zext i1 %469 to i8, !dbg !4341
  store i8 %470, i8* %26, align 1, !dbg !4341
  %471 = load %struct._ftsent*, %struct._ftsent** %7, align 8, !dbg !4350
  %472 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %471, i32 0, i32 14, !dbg !4351
  store i16 11, i16* %472, align 8, !dbg !4352
  %473 = load %struct._ftsent*, %struct._ftsent** %7, align 8, !dbg !4353
  %474 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %473, i32 0, i32 17, !dbg !4354
  %475 = getelementptr inbounds [1 x %struct.stat], [1 x %struct.stat]* %474, i32 0, i32 0, !dbg !4353
  %476 = load %struct.dirent*, %struct.dirent** %6, align 8, !dbg !4355
  %477 = getelementptr inbounds %struct.dirent, %struct.dirent* %476, i32 0, i32 3, !dbg !4355
  %478 = load i8, i8* %477, align 2, !dbg !4355
  %479 = zext i8 %478 to i32, !dbg !4355
  call void @set_stat_type(%struct.stat* %475, i32 %479), !dbg !4356
  %480 = load %struct._ftsent*, %struct._ftsent** %7, align 8, !dbg !4357
  %481 = load i8, i8* %26, align 1, !dbg !4358
  %482 = trunc i8 %481 to i1, !dbg !4358
  %483 = xor i1 %482, true, !dbg !4359
  call void @fts_set_stat_required(%struct._ftsent* %480, i1 zeroext %483), !dbg !4360
  %484 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !4361
  %485 = getelementptr inbounds %struct.FTS, %struct.FTS* %484, i32 0, i32 10, !dbg !4361
  %486 = load i32, i32* %485, align 8, !dbg !4361
  %487 = and i32 %486, 16, !dbg !4361
  %488 = icmp ne i32 %487, 0, !dbg !4361
  br i1 %488, label %489, label %495, !dbg !4362

; <label>:489:                                    ; preds = %468
  %490 = load %struct.dirent*, %struct.dirent** %6, align 8, !dbg !4363
  %491 = getelementptr inbounds %struct.dirent, %struct.dirent* %490, i32 0, i32 3, !dbg !4363
  %492 = load i8, i8* %491, align 2, !dbg !4363
  %493 = zext i8 %492 to i32, !dbg !4363
  %494 = icmp eq i32 %493, 4, !dbg !4363
  br label %495

; <label>:495:                                    ; preds = %489, %468
  %496 = phi i1 [ false, %468 ], [ %494, %489 ]
  %497 = zext i1 %496 to i8, !dbg !4364
  store i8 %497, i8* %25, align 1, !dbg !4364
  br label %524, !dbg !4365

; <label>:498:                                    ; preds = %437
  %499 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !4366
  %500 = load %struct._ftsent*, %struct._ftsent** %7, align 8, !dbg !4368
  %501 = call zeroext i16 @fts_stat(%struct.FTS* %499, %struct._ftsent* %500, i1 zeroext false), !dbg !4369
  %502 = load %struct._ftsent*, %struct._ftsent** %7, align 8, !dbg !4370
  %503 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %502, i32 0, i32 14, !dbg !4371
  store i16 %501, i16* %503, align 8, !dbg !4372
  %504 = load %struct._ftsent*, %struct._ftsent** %7, align 8, !dbg !4373
  %505 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %504, i32 0, i32 14, !dbg !4374
  %506 = load i16, i16* %505, align 8, !dbg !4374
  %507 = zext i16 %506 to i32, !dbg !4373
  %508 = icmp eq i32 %507, 1, !dbg !4375
  br i1 %508, label %521, label %509, !dbg !4376

; <label>:509:                                    ; preds = %498
  %510 = load %struct._ftsent*, %struct._ftsent** %7, align 8, !dbg !4377
  %511 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %510, i32 0, i32 14, !dbg !4378
  %512 = load i16, i16* %511, align 8, !dbg !4378
  %513 = zext i16 %512 to i32, !dbg !4377
  %514 = icmp eq i32 %513, 2, !dbg !4379
  br i1 %514, label %521, label %515, !dbg !4380

; <label>:515:                                    ; preds = %509
  %516 = load %struct._ftsent*, %struct._ftsent** %7, align 8, !dbg !4381
  %517 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %516, i32 0, i32 14, !dbg !4382
  %518 = load i16, i16* %517, align 8, !dbg !4382
  %519 = zext i16 %518 to i32, !dbg !4381
  %520 = icmp eq i32 %519, 5, !dbg !4383
  br label %521, !dbg !4380

; <label>:521:                                    ; preds = %515, %509, %498
  %522 = phi i1 [ true, %509 ], [ true, %498 ], [ %520, %515 ]
  %523 = zext i1 %522 to i8, !dbg !4384
  store i8 %523, i8* %25, align 1, !dbg !4384
  br label %524

; <label>:524:                                    ; preds = %521, %495
  %525 = load i64, i64* %18, align 8, !dbg !4385
  %526 = icmp ugt i64 %525, 0, !dbg !4387
  br i1 %526, label %527, label %536, !dbg !4388

; <label>:527:                                    ; preds = %524
  %528 = load i8, i8* %25, align 1, !dbg !4389
  %529 = trunc i8 %528 to i1, !dbg !4389
  br i1 %529, label %530, label %536, !dbg !4390

; <label>:530:                                    ; preds = %527
  %531 = load i8, i8* %19, align 1, !dbg !4391
  %532 = trunc i8 %531 to i1, !dbg !4391
  %533 = zext i1 %532 to i64, !dbg !4391
  %534 = load i64, i64* %18, align 8, !dbg !4392
  %535 = sub i64 %534, %533, !dbg !4392
  store i64 %535, i64* %18, align 8, !dbg !4392
  br label %536, !dbg !4393

; <label>:536:                                    ; preds = %530, %527, %524
  %537 = load %struct._ftsent*, %struct._ftsent** %7, align 8, !dbg !4394
  %538 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %537, i32 0, i32 2, !dbg !4395
  store %struct._ftsent* null, %struct._ftsent** %538, align 8, !dbg !4396
  %539 = load %struct._ftsent*, %struct._ftsent** %8, align 8, !dbg !4397
  %540 = icmp eq %struct._ftsent* %539, null, !dbg !4399
  br i1 %540, label %541, label %543, !dbg !4400

; <label>:541:                                    ; preds = %536
  %542 = load %struct._ftsent*, %struct._ftsent** %7, align 8, !dbg !4401
  store %struct._ftsent* %542, %struct._ftsent** %11, align 8, !dbg !4402
  store %struct._ftsent* %542, %struct._ftsent** %8, align 8, !dbg !4403
  br label %548, !dbg !4404

; <label>:543:                                    ; preds = %536
  %544 = load %struct._ftsent*, %struct._ftsent** %7, align 8, !dbg !4405
  %545 = load %struct._ftsent*, %struct._ftsent** %11, align 8, !dbg !4407
  %546 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %545, i32 0, i32 2, !dbg !4408
  store %struct._ftsent* %544, %struct._ftsent** %546, align 8, !dbg !4409
  %547 = load %struct._ftsent*, %struct._ftsent** %7, align 8, !dbg !4410
  store %struct._ftsent* %547, %struct._ftsent** %11, align 8, !dbg !4411
  br label %548

; <label>:548:                                    ; preds = %543, %541
  %549 = load i64, i64* %9, align 8, !dbg !4412
  %550 = add i64 %549, 1, !dbg !4412
  store i64 %550, i64* %9, align 8, !dbg !4412
  br label %249, !dbg !4413, !llvm.loop !4201

; <label>:551:                                    ; preds = %256
  %552 = load %struct.__dirstream*, %struct.__dirstream** %12, align 8, !dbg !4414
  %553 = icmp ne %struct.__dirstream* %552, null, !dbg !4414
  br i1 %553, label %554, label %557, !dbg !4416

; <label>:554:                                    ; preds = %551
  %555 = load %struct.__dirstream*, %struct.__dirstream** %12, align 8, !dbg !4417
  %556 = call i32 @closedir(%struct.__dirstream* %555), !dbg !4418
  br label %557, !dbg !4418

; <label>:557:                                    ; preds = %554, %551
  %558 = load i8, i8* %16, align 1, !dbg !4419
  %559 = trunc i8 %558 to i1, !dbg !4419
  br i1 %559, label %560, label %563, !dbg !4421

; <label>:560:                                    ; preds = %557
  %561 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !4422
  %562 = load %struct._ftsent*, %struct._ftsent** %8, align 8, !dbg !4423
  call void @fts_padjust(%struct.FTS* %561, %struct._ftsent* %562), !dbg !4424
  br label %563, !dbg !4424

; <label>:563:                                    ; preds = %560, %557
  %564 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !4425
  %565 = getelementptr inbounds %struct.FTS, %struct.FTS* %564, i32 0, i32 10, !dbg !4425
  %566 = load i32, i32* %565, align 8, !dbg !4425
  %567 = and i32 %566, 4, !dbg !4425
  %568 = icmp ne i32 %567, 0, !dbg !4425
  br i1 %568, label %569, label %583, !dbg !4427

; <label>:569:                                    ; preds = %563
  %570 = load i64, i64* %20, align 8, !dbg !4428
  %571 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !4431
  %572 = getelementptr inbounds %struct.FTS, %struct.FTS* %571, i32 0, i32 7, !dbg !4432
  %573 = load i64, i64* %572, align 8, !dbg !4432
  %574 = icmp eq i64 %570, %573, !dbg !4433
  br i1 %574, label %578, label %575, !dbg !4434

; <label>:575:                                    ; preds = %569
  %576 = load i64, i64* %9, align 8, !dbg !4435
  %577 = icmp eq i64 %576, 0, !dbg !4436
  br i1 %577, label %578, label %581, !dbg !4437

; <label>:578:                                    ; preds = %575, %569
  %579 = load i8*, i8** %23, align 8, !dbg !4438
  %580 = getelementptr inbounds i8, i8* %579, i32 -1, !dbg !4438
  store i8* %580, i8** %23, align 8, !dbg !4438
  br label %581, !dbg !4438

; <label>:581:                                    ; preds = %578, %575
  %582 = load i8*, i8** %23, align 8, !dbg !4439
  store i8 0, i8* %582, align 1, !dbg !4440
  br label %583, !dbg !4441

; <label>:583:                                    ; preds = %581, %563
  %584 = load i8, i8* %15, align 1, !dbg !4442
  %585 = trunc i8 %584 to i1, !dbg !4442
  br i1 %585, label %586, label %659, !dbg !4444

; <label>:586:                                    ; preds = %583
  %587 = load i32, i32* %5, align 4, !dbg !4445
  %588 = icmp eq i32 %587, 1, !dbg !4446
  br i1 %588, label %592, label %589, !dbg !4447

; <label>:589:                                    ; preds = %586
  %590 = load i64, i64* %9, align 8, !dbg !4448
  %591 = icmp ne i64 %590, 0, !dbg !4448
  br i1 %591, label %659, label %592, !dbg !4449

; <label>:592:                                    ; preds = %589, %586
  %593 = load %struct._ftsent*, %struct._ftsent** %10, align 8, !dbg !4450
  %594 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %593, i32 0, i32 11, !dbg !4451
  %595 = load i64, i64* %594, align 8, !dbg !4451
  %596 = icmp eq i64 %595, 0, !dbg !4452
  br i1 %596, label %597, label %644, !dbg !4453

; <label>:597:                                    ; preds = %592
  %598 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !4454
  %599 = getelementptr inbounds %struct.FTS, %struct.FTS* %598, i32 0, i32 13, !dbg !4454
  call void @fd_ring_clear(%struct.I_ring* %599), !dbg !4454
  %600 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !4454
  %601 = getelementptr inbounds %struct.FTS, %struct.FTS* %600, i32 0, i32 10, !dbg !4454
  %602 = load i32, i32* %601, align 8, !dbg !4454
  %603 = and i32 %602, 4, !dbg !4454
  %604 = icmp ne i32 %603, 0, !dbg !4454
  br i1 %604, label %642, label %605, !dbg !4454

; <label>:605:                                    ; preds = %597
  %606 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !4454
  %607 = getelementptr inbounds %struct.FTS, %struct.FTS* %606, i32 0, i32 10, !dbg !4454
  %608 = load i32, i32* %607, align 8, !dbg !4454
  %609 = and i32 %608, 512, !dbg !4454
  %610 = icmp ne i32 %609, 0, !dbg !4454
  br i1 %610, label %611, label %625, !dbg !4454

; <label>:611:                                    ; preds = %605
  %612 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !4454
  %613 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !4454
  %614 = getelementptr inbounds %struct.FTS, %struct.FTS* %613, i32 0, i32 10, !dbg !4454
  %615 = load i32, i32* %614, align 8, !dbg !4454
  %616 = and i32 %615, 512, !dbg !4454
  %617 = icmp ne i32 %616, 0, !dbg !4454
  br i1 %617, label %618, label %619, !dbg !4454

; <label>:618:                                    ; preds = %611
  br label %623, !dbg !4454

; <label>:619:                                    ; preds = %611
  %620 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !4454
  %621 = getelementptr inbounds %struct.FTS, %struct.FTS* %620, i32 0, i32 5, !dbg !4454
  %622 = load i32, i32* %621, align 8, !dbg !4454
  br label %623, !dbg !4454

; <label>:623:                                    ; preds = %619, %618
  %624 = phi i32 [ -100, %618 ], [ %622, %619 ], !dbg !4454
  call void @cwd_advance_fd(%struct.FTS* %612, i32 %624, i1 zeroext true), !dbg !4454
  br label %639, !dbg !4454

; <label>:625:                                    ; preds = %605
  %626 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !4454
  %627 = getelementptr inbounds %struct.FTS, %struct.FTS* %626, i32 0, i32 10, !dbg !4454
  %628 = load i32, i32* %627, align 8, !dbg !4454
  %629 = and i32 %628, 512, !dbg !4454
  %630 = icmp ne i32 %629, 0, !dbg !4454
  br i1 %630, label %631, label %632, !dbg !4454

; <label>:631:                                    ; preds = %625
  br label %636, !dbg !4454

; <label>:632:                                    ; preds = %625
  %633 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !4454
  %634 = getelementptr inbounds %struct.FTS, %struct.FTS* %633, i32 0, i32 5, !dbg !4454
  %635 = load i32, i32* %634, align 8, !dbg !4454
  br label %636, !dbg !4454

; <label>:636:                                    ; preds = %632, %631
  %637 = phi i32 [ -100, %631 ], [ %635, %632 ], !dbg !4454
  %638 = call i32 @fchdir(i32 %637) #8, !dbg !4454
  br label %639, !dbg !4454

; <label>:639:                                    ; preds = %636, %623
  %640 = phi i32 [ 0, %623 ], [ %638, %636 ], !dbg !4454
  %641 = icmp ne i32 %640, 0, !dbg !4454
  br label %642

; <label>:642:                                    ; preds = %639, %597
  %643 = phi i1 [ false, %597 ], [ %641, %639 ]
  br i1 %643, label %651, label %659, !dbg !4450

; <label>:644:                                    ; preds = %592
  %645 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !4455
  %646 = load %struct._ftsent*, %struct._ftsent** %10, align 8, !dbg !4456
  %647 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %646, i32 0, i32 1, !dbg !4457
  %648 = load %struct._ftsent*, %struct._ftsent** %647, align 8, !dbg !4457
  %649 = call i32 @fts_safe_changedir(%struct.FTS* %645, %struct._ftsent* %648, i32 -1, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2.118, i32 0, i32 0)), !dbg !4458
  %650 = icmp ne i32 %649, 0, !dbg !4458
  br i1 %650, label %651, label %659, !dbg !4453

; <label>:651:                                    ; preds = %644, %642
  %652 = load %struct._ftsent*, %struct._ftsent** %10, align 8, !dbg !4459
  %653 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %652, i32 0, i32 14, !dbg !4461
  store i16 7, i16* %653, align 8, !dbg !4462
  %654 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !4463
  %655 = getelementptr inbounds %struct.FTS, %struct.FTS* %654, i32 0, i32 10, !dbg !4463
  %656 = load i32, i32* %655, align 8, !dbg !4463
  %657 = or i32 %656, 8192, !dbg !4463
  store i32 %657, i32* %655, align 8, !dbg !4463
  %658 = load %struct._ftsent*, %struct._ftsent** %8, align 8, !dbg !4464
  call void @fts_lfree(%struct._ftsent* %658), !dbg !4465
  store %struct._ftsent* null, %struct._ftsent** %3, align 8, !dbg !4466
  br label %713, !dbg !4466

; <label>:659:                                    ; preds = %644, %642, %589, %583
  %660 = load i64, i64* %9, align 8, !dbg !4467
  %661 = icmp ne i64 %660, 0, !dbg !4467
  br i1 %661, label %670, label %662, !dbg !4469

; <label>:662:                                    ; preds = %659
  %663 = load i32, i32* %5, align 4, !dbg !4470
  %664 = icmp eq i32 %663, 3, !dbg !4473
  br i1 %664, label %665, label %668, !dbg !4474

; <label>:665:                                    ; preds = %662
  %666 = load %struct._ftsent*, %struct._ftsent** %10, align 8, !dbg !4475
  %667 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %666, i32 0, i32 14, !dbg !4476
  store i16 6, i16* %667, align 8, !dbg !4477
  br label %668, !dbg !4475

; <label>:668:                                    ; preds = %665, %662
  %669 = load %struct._ftsent*, %struct._ftsent** %8, align 8, !dbg !4478
  call void @fts_lfree(%struct._ftsent* %669), !dbg !4479
  store %struct._ftsent* null, %struct._ftsent** %3, align 8, !dbg !4480
  br label %713, !dbg !4480

; <label>:670:                                    ; preds = %659
  %671 = load i64, i64* %9, align 8, !dbg !4481
  %672 = icmp ugt i64 %671, 10000, !dbg !4483
  br i1 %672, label %673, label %698, !dbg !4484

; <label>:673:                                    ; preds = %670
  %674 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !4485
  %675 = getelementptr inbounds %struct.FTS, %struct.FTS* %674, i32 0, i32 9, !dbg !4486
  %676 = load i32 (%struct._ftsent**, %struct._ftsent**)*, i32 (%struct._ftsent**, %struct._ftsent**)** %675, align 8, !dbg !4486
  %677 = icmp ne i32 (%struct._ftsent**, %struct._ftsent**)* %676, null, !dbg !4485
  br i1 %677, label %698, label %678, !dbg !4487

; <label>:678:                                    ; preds = %673
  %679 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !4488
  %680 = getelementptr inbounds %struct.FTS, %struct.FTS* %679, i32 0, i32 10, !dbg !4488
  %681 = load i32, i32* %680, align 8, !dbg !4488
  %682 = and i32 %681, 512, !dbg !4488
  %683 = icmp ne i32 %682, 0, !dbg !4488
  br i1 %683, label %684, label %698, !dbg !4489

; <label>:684:                                    ; preds = %678
  %685 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !4490
  %686 = getelementptr inbounds %struct.FTS, %struct.FTS* %685, i32 0, i32 6, !dbg !4491
  %687 = load i32, i32* %686, align 4, !dbg !4491
  %688 = call zeroext i1 @dirent_inode_sort_may_be_useful(i32 %687), !dbg !4492
  br i1 %688, label %689, label %698, !dbg !4493

; <label>:689:                                    ; preds = %684
  %690 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !4494
  %691 = getelementptr inbounds %struct.FTS, %struct.FTS* %690, i32 0, i32 9, !dbg !4496
  store i32 (%struct._ftsent**, %struct._ftsent**)* @fts_compare_ino, i32 (%struct._ftsent**, %struct._ftsent**)** %691, align 8, !dbg !4497
  %692 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !4498
  %693 = load %struct._ftsent*, %struct._ftsent** %8, align 8, !dbg !4499
  %694 = load i64, i64* %9, align 8, !dbg !4500
  %695 = call %struct._ftsent* @fts_sort(%struct.FTS* %692, %struct._ftsent* %693, i64 %694), !dbg !4501
  store %struct._ftsent* %695, %struct._ftsent** %8, align 8, !dbg !4502
  %696 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !4503
  %697 = getelementptr inbounds %struct.FTS, %struct.FTS* %696, i32 0, i32 9, !dbg !4504
  store i32 (%struct._ftsent**, %struct._ftsent**)* null, i32 (%struct._ftsent**, %struct._ftsent**)** %697, align 8, !dbg !4505
  br label %698, !dbg !4506

; <label>:698:                                    ; preds = %689, %684, %678, %673, %670
  %699 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !4507
  %700 = getelementptr inbounds %struct.FTS, %struct.FTS* %699, i32 0, i32 9, !dbg !4509
  %701 = load i32 (%struct._ftsent**, %struct._ftsent**)*, i32 (%struct._ftsent**, %struct._ftsent**)** %700, align 8, !dbg !4509
  %702 = icmp ne i32 (%struct._ftsent**, %struct._ftsent**)* %701, null, !dbg !4507
  br i1 %702, label %703, label %711, !dbg !4510

; <label>:703:                                    ; preds = %698
  %704 = load i64, i64* %9, align 8, !dbg !4511
  %705 = icmp ugt i64 %704, 1, !dbg !4512
  br i1 %705, label %706, label %711, !dbg !4513

; <label>:706:                                    ; preds = %703
  %707 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !4514
  %708 = load %struct._ftsent*, %struct._ftsent** %8, align 8, !dbg !4515
  %709 = load i64, i64* %9, align 8, !dbg !4516
  %710 = call %struct._ftsent* @fts_sort(%struct.FTS* %707, %struct._ftsent* %708, i64 %709), !dbg !4517
  store %struct._ftsent* %710, %struct._ftsent** %8, align 8, !dbg !4518
  br label %711, !dbg !4519

; <label>:711:                                    ; preds = %706, %703, %698
  %712 = load %struct._ftsent*, %struct._ftsent** %8, align 8, !dbg !4520
  store %struct._ftsent* %712, %struct._ftsent** %3, align 8, !dbg !4521
  br label %713, !dbg !4521

; <label>:713:                                    ; preds = %711, %668, %651, %375, %324, %97, %67
  %714 = load %struct._ftsent*, %struct._ftsent** %3, align 8, !dbg !4522
  ret %struct._ftsent* %714, !dbg !4522
}

; Function Attrs: noinline nounwind uwtable
define internal void @cwd_advance_fd(%struct.FTS*, i32, i1 zeroext) #3 !dbg !4523 {
  %4 = alloca %struct.FTS*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i8, align 1
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  store %struct.FTS* %0, %struct.FTS** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.FTS** %4, metadata !4526, metadata !DIExpression()), !dbg !4527
  store i32 %1, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !4528, metadata !DIExpression()), !dbg !4529
  %9 = zext i1 %2 to i8
  store i8 %9, i8* %6, align 1
  call void @llvm.dbg.declare(metadata i8* %6, metadata !4530, metadata !DIExpression()), !dbg !4531
  call void @llvm.dbg.declare(metadata i32* %7, metadata !4532, metadata !DIExpression()), !dbg !4533
  %10 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !4534
  %11 = getelementptr inbounds %struct.FTS, %struct.FTS* %10, i32 0, i32 6, !dbg !4535
  %12 = load i32, i32* %11, align 4, !dbg !4535
  store i32 %12, i32* %7, align 4, !dbg !4533
  br label %13, !dbg !4536, !llvm.loop !4537

; <label>:13:                                     ; preds = %3
  %14 = load i32, i32* %7, align 4, !dbg !4538
  %15 = load i32, i32* %5, align 4, !dbg !4538
  %16 = icmp ne i32 %14, %15, !dbg !4538
  br i1 %16, label %21, label %17, !dbg !4538

; <label>:17:                                     ; preds = %13
  %18 = load i32, i32* %7, align 4, !dbg !4538
  %19 = icmp eq i32 %18, -100, !dbg !4538
  br i1 %19, label %21, label %20, !dbg !4541

; <label>:20:                                     ; preds = %17
  call void @abort() #11, !dbg !4538
  unreachable, !dbg !4538

; <label>:21:                                     ; preds = %17, %13
  br label %22, !dbg !4541

; <label>:22:                                     ; preds = %21
  %23 = load i8, i8* %6, align 1, !dbg !4542
  %24 = trunc i8 %23 to i1, !dbg !4542
  br i1 %24, label %25, label %36, !dbg !4544

; <label>:25:                                     ; preds = %22
  call void @llvm.dbg.declare(metadata i32* %8, metadata !4545, metadata !DIExpression()), !dbg !4547
  %26 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !4548
  %27 = getelementptr inbounds %struct.FTS, %struct.FTS* %26, i32 0, i32 13, !dbg !4549
  %28 = load i32, i32* %7, align 4, !dbg !4550
  %29 = call i32 @i_ring_push(%struct.I_ring* %27, i32 %28), !dbg !4551
  store i32 %29, i32* %8, align 4, !dbg !4547
  %30 = load i32, i32* %8, align 4, !dbg !4552
  %31 = icmp sle i32 0, %30, !dbg !4554
  br i1 %31, label %32, label %35, !dbg !4555

; <label>:32:                                     ; preds = %25
  %33 = load i32, i32* %8, align 4, !dbg !4556
  %34 = call i32 @close(i32 %33), !dbg !4557
  br label %35, !dbg !4557

; <label>:35:                                     ; preds = %32, %25
  br label %50, !dbg !4558

; <label>:36:                                     ; preds = %22
  %37 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !4559
  %38 = getelementptr inbounds %struct.FTS, %struct.FTS* %37, i32 0, i32 10, !dbg !4559
  %39 = load i32, i32* %38, align 8, !dbg !4559
  %40 = and i32 %39, 4, !dbg !4559
  %41 = icmp ne i32 %40, 0, !dbg !4559
  br i1 %41, label %49, label %42, !dbg !4561

; <label>:42:                                     ; preds = %36
  %43 = load i32, i32* %7, align 4, !dbg !4562
  %44 = icmp sle i32 0, %43, !dbg !4565
  br i1 %44, label %45, label %48, !dbg !4566

; <label>:45:                                     ; preds = %42
  %46 = load i32, i32* %7, align 4, !dbg !4567
  %47 = call i32 @close(i32 %46), !dbg !4568
  br label %48, !dbg !4568

; <label>:48:                                     ; preds = %45, %42
  br label %49, !dbg !4569

; <label>:49:                                     ; preds = %48, %36
  br label %50

; <label>:50:                                     ; preds = %49, %35
  %51 = load i32, i32* %5, align 4, !dbg !4570
  %52 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !4571
  %53 = getelementptr inbounds %struct.FTS, %struct.FTS* %52, i32 0, i32 6, !dbg !4572
  store i32 %51, i32* %53, align 4, !dbg !4573
  ret void, !dbg !4574
}

; Function Attrs: noinline nounwind uwtable
define internal void @fts_load(%struct.FTS*, %struct._ftsent*) #3 !dbg !4575 {
  %3 = alloca %struct.FTS*, align 8
  %4 = alloca %struct._ftsent*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i8*, align 8
  store %struct.FTS* %0, %struct.FTS** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.FTS** %3, metadata !4576, metadata !DIExpression()), !dbg !4577
  store %struct._ftsent* %1, %struct._ftsent** %4, align 8
  call void @llvm.dbg.declare(metadata %struct._ftsent** %4, metadata !4578, metadata !DIExpression()), !dbg !4579
  call void @llvm.dbg.declare(metadata i64* %5, metadata !4580, metadata !DIExpression()), !dbg !4581
  call void @llvm.dbg.declare(metadata i8** %6, metadata !4582, metadata !DIExpression()), !dbg !4583
  %7 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !4584
  %8 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %7, i32 0, i32 12, !dbg !4585
  %9 = load i64, i64* %8, align 8, !dbg !4585
  %10 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !4586
  %11 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %10, i32 0, i32 9, !dbg !4587
  store i64 %9, i64* %11, align 8, !dbg !4588
  store i64 %9, i64* %5, align 8, !dbg !4589
  %12 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !4590
  %13 = getelementptr inbounds %struct.FTS, %struct.FTS* %12, i32 0, i32 4, !dbg !4591
  %14 = load i8*, i8** %13, align 8, !dbg !4591
  %15 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !4592
  %16 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %15, i32 0, i32 18, !dbg !4593
  %17 = getelementptr inbounds [1 x i8], [1 x i8]* %16, i32 0, i32 0, !dbg !4594
  %18 = load i64, i64* %5, align 8, !dbg !4595
  %19 = add i64 %18, 1, !dbg !4596
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %14, i8* %17, i64 %19, i32 1, i1 false), !dbg !4594
  %20 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !4597
  %21 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %20, i32 0, i32 18, !dbg !4599
  %22 = getelementptr inbounds [1 x i8], [1 x i8]* %21, i32 0, i32 0, !dbg !4597
  %23 = call i8* @strrchr(i8* %22, i32 47) #12, !dbg !4600
  store i8* %23, i8** %6, align 8, !dbg !4601
  %24 = icmp ne i8* %23, null, !dbg !4601
  br i1 %24, label %25, label %50, !dbg !4602

; <label>:25:                                     ; preds = %2
  %26 = load i8*, i8** %6, align 8, !dbg !4603
  %27 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !4604
  %28 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %27, i32 0, i32 18, !dbg !4605
  %29 = getelementptr inbounds [1 x i8], [1 x i8]* %28, i32 0, i32 0, !dbg !4604
  %30 = icmp ne i8* %26, %29, !dbg !4606
  br i1 %30, label %37, label %31, !dbg !4607

; <label>:31:                                     ; preds = %25
  %32 = load i8*, i8** %6, align 8, !dbg !4608
  %33 = getelementptr inbounds i8, i8* %32, i64 1, !dbg !4608
  %34 = load i8, i8* %33, align 1, !dbg !4608
  %35 = sext i8 %34 to i32, !dbg !4608
  %36 = icmp ne i32 %35, 0, !dbg !4608
  br i1 %36, label %37, label %50, !dbg !4609

; <label>:37:                                     ; preds = %31, %25
  %38 = load i8*, i8** %6, align 8, !dbg !4610
  %39 = getelementptr inbounds i8, i8* %38, i32 1, !dbg !4610
  store i8* %39, i8** %6, align 8, !dbg !4610
  %40 = call i64 @strlen(i8* %39) #12, !dbg !4612
  store i64 %40, i64* %5, align 8, !dbg !4613
  %41 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !4614
  %42 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %41, i32 0, i32 18, !dbg !4615
  %43 = getelementptr inbounds [1 x i8], [1 x i8]* %42, i32 0, i32 0, !dbg !4616
  %44 = load i8*, i8** %6, align 8, !dbg !4617
  %45 = load i64, i64* %5, align 8, !dbg !4618
  %46 = add i64 %45, 1, !dbg !4619
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %43, i8* %44, i64 %46, i32 1, i1 false), !dbg !4616
  %47 = load i64, i64* %5, align 8, !dbg !4620
  %48 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !4621
  %49 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %48, i32 0, i32 12, !dbg !4622
  store i64 %47, i64* %49, align 8, !dbg !4623
  br label %50, !dbg !4624

; <label>:50:                                     ; preds = %37, %31, %2
  %51 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !4625
  %52 = getelementptr inbounds %struct.FTS, %struct.FTS* %51, i32 0, i32 4, !dbg !4626
  %53 = load i8*, i8** %52, align 8, !dbg !4626
  %54 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !4627
  %55 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %54, i32 0, i32 6, !dbg !4628
  store i8* %53, i8** %55, align 8, !dbg !4629
  %56 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !4630
  %57 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %56, i32 0, i32 5, !dbg !4631
  store i8* %53, i8** %57, align 8, !dbg !4632
  ret void, !dbg !4633
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i1 @link_count_optimize_ok(%struct._ftsent*) #3 !dbg !4634 {
  %2 = alloca i1, align 1
  %3 = alloca %struct._ftsent*, align 8
  %4 = alloca %struct.FTS*, align 8
  %5 = alloca %struct.hash_table*, align 8
  %6 = alloca %struct.LCO_ent, align 8
  %7 = alloca %struct.LCO_ent*, align 8
  %8 = alloca i8, align 1
  %9 = alloca %struct.LCO_ent*, align 8
  store %struct._ftsent* %0, %struct._ftsent** %3, align 8
  call void @llvm.dbg.declare(metadata %struct._ftsent** %3, metadata !4637, metadata !DIExpression()), !dbg !4638
  call void @llvm.dbg.declare(metadata %struct.FTS** %4, metadata !4639, metadata !DIExpression()), !dbg !4640
  %10 = load %struct._ftsent*, %struct._ftsent** %3, align 8, !dbg !4641
  %11 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %10, i32 0, i32 10, !dbg !4642
  %12 = load %struct.FTS*, %struct.FTS** %11, align 8, !dbg !4642
  store %struct.FTS* %12, %struct.FTS** %4, align 8, !dbg !4640
  call void @llvm.dbg.declare(metadata %struct.hash_table** %5, metadata !4643, metadata !DIExpression()), !dbg !4646
  %13 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !4647
  %14 = getelementptr inbounds %struct.FTS, %struct.FTS* %13, i32 0, i32 11, !dbg !4648
  %15 = load %struct.hash_table*, %struct.hash_table** %14, align 8, !dbg !4648
  store %struct.hash_table* %15, %struct.hash_table** %5, align 8, !dbg !4646
  call void @llvm.dbg.declare(metadata %struct.LCO_ent* %6, metadata !4649, metadata !DIExpression()), !dbg !4654
  call void @llvm.dbg.declare(metadata %struct.LCO_ent** %7, metadata !4655, metadata !DIExpression()), !dbg !4657
  call void @llvm.dbg.declare(metadata i8* %8, metadata !4658, metadata !DIExpression()), !dbg !4659
  call void @llvm.dbg.declare(metadata %struct.LCO_ent** %9, metadata !4660, metadata !DIExpression()), !dbg !4661
  %16 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !4662
  %17 = getelementptr inbounds %struct.FTS, %struct.FTS* %16, i32 0, i32 10, !dbg !4662
  %18 = load i32, i32* %17, align 8, !dbg !4662
  %19 = and i32 %18, 512, !dbg !4662
  %20 = icmp ne i32 %19, 0, !dbg !4662
  br i1 %20, label %22, label %21, !dbg !4664

; <label>:21:                                     ; preds = %1
  store i1 false, i1* %2, align 1, !dbg !4665
  br label %95, !dbg !4665

; <label>:22:                                     ; preds = %1
  %23 = load %struct.hash_table*, %struct.hash_table** %5, align 8, !dbg !4666
  %24 = icmp eq %struct.hash_table* %23, null, !dbg !4668
  br i1 %24, label %25, label %33, !dbg !4669

; <label>:25:                                     ; preds = %22
  %26 = call %struct.hash_table* @hash_initialize(i64 13, %struct.hash_tuning* null, i64 (i8*, i64)* @LCO_hash, i1 (i8*, i8*)* @LCO_compare, void (i8*)* @free), !dbg !4670
  %27 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !4672
  %28 = getelementptr inbounds %struct.FTS, %struct.FTS* %27, i32 0, i32 11, !dbg !4673
  store %struct.hash_table* %26, %struct.hash_table** %28, align 8, !dbg !4674
  store %struct.hash_table* %26, %struct.hash_table** %5, align 8, !dbg !4675
  %29 = load %struct.hash_table*, %struct.hash_table** %5, align 8, !dbg !4676
  %30 = icmp eq %struct.hash_table* %29, null, !dbg !4678
  br i1 %30, label %31, label %32, !dbg !4679

; <label>:31:                                     ; preds = %25
  store i1 false, i1* %2, align 1, !dbg !4680
  br label %95, !dbg !4680

; <label>:32:                                     ; preds = %25
  br label %33, !dbg !4681

; <label>:33:                                     ; preds = %32, %22
  %34 = load %struct._ftsent*, %struct._ftsent** %3, align 8, !dbg !4682
  %35 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %34, i32 0, i32 17, !dbg !4683
  %36 = getelementptr inbounds [1 x %struct.stat], [1 x %struct.stat]* %35, i32 0, i32 0, !dbg !4684
  %37 = getelementptr inbounds %struct.stat, %struct.stat* %36, i32 0, i32 0, !dbg !4684
  %38 = load i64, i64* %37, align 8, !dbg !4684
  %39 = getelementptr inbounds %struct.LCO_ent, %struct.LCO_ent* %6, i32 0, i32 0, !dbg !4685
  store i64 %38, i64* %39, align 8, !dbg !4686
  %40 = load %struct.hash_table*, %struct.hash_table** %5, align 8, !dbg !4687
  %41 = bitcast %struct.LCO_ent* %6 to i8*, !dbg !4688
  %42 = call i8* @hash_lookup(%struct.hash_table* %40, i8* %41), !dbg !4689
  %43 = bitcast i8* %42 to %struct.LCO_ent*, !dbg !4689
  store %struct.LCO_ent* %43, %struct.LCO_ent** %7, align 8, !dbg !4690
  %44 = load %struct.LCO_ent*, %struct.LCO_ent** %7, align 8, !dbg !4691
  %45 = icmp ne %struct.LCO_ent* %44, null, !dbg !4691
  br i1 %45, label %46, label %51, !dbg !4693

; <label>:46:                                     ; preds = %33
  %47 = load %struct.LCO_ent*, %struct.LCO_ent** %7, align 8, !dbg !4694
  %48 = getelementptr inbounds %struct.LCO_ent, %struct.LCO_ent* %47, i32 0, i32 1, !dbg !4695
  %49 = load i8, i8* %48, align 8, !dbg !4695
  %50 = trunc i8 %49 to i1, !dbg !4695
  store i1 %50, i1* %2, align 1, !dbg !4696
  br label %95, !dbg !4696

; <label>:51:                                     ; preds = %33
  %52 = call noalias i8* @malloc(i64 16) #8, !dbg !4697
  %53 = bitcast i8* %52 to %struct.LCO_ent*, !dbg !4697
  store %struct.LCO_ent* %53, %struct.LCO_ent** %9, align 8, !dbg !4698
  %54 = load %struct.LCO_ent*, %struct.LCO_ent** %9, align 8, !dbg !4699
  %55 = icmp eq %struct.LCO_ent* %54, null, !dbg !4701
  br i1 %55, label %56, label %57, !dbg !4702

; <label>:56:                                     ; preds = %51
  store i1 false, i1* %2, align 1, !dbg !4703
  br label %95, !dbg !4703

; <label>:57:                                     ; preds = %51
  %58 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !4704
  %59 = getelementptr inbounds %struct.FTS, %struct.FTS* %58, i32 0, i32 6, !dbg !4705
  %60 = load i32, i32* %59, align 4, !dbg !4705
  %61 = call zeroext i1 @leaf_optimization_applies(i32 %60), !dbg !4706
  %62 = zext i1 %61 to i8, !dbg !4707
  store i8 %62, i8* %8, align 1, !dbg !4707
  %63 = load i8, i8* %8, align 1, !dbg !4708
  %64 = trunc i8 %63 to i1, !dbg !4708
  %65 = load %struct.LCO_ent*, %struct.LCO_ent** %9, align 8, !dbg !4709
  %66 = getelementptr inbounds %struct.LCO_ent, %struct.LCO_ent* %65, i32 0, i32 1, !dbg !4710
  %67 = zext i1 %64 to i8, !dbg !4711
  store i8 %67, i8* %66, align 8, !dbg !4711
  %68 = load %struct._ftsent*, %struct._ftsent** %3, align 8, !dbg !4712
  %69 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %68, i32 0, i32 17, !dbg !4713
  %70 = getelementptr inbounds [1 x %struct.stat], [1 x %struct.stat]* %69, i32 0, i32 0, !dbg !4714
  %71 = getelementptr inbounds %struct.stat, %struct.stat* %70, i32 0, i32 0, !dbg !4714
  %72 = load i64, i64* %71, align 8, !dbg !4714
  %73 = load %struct.LCO_ent*, %struct.LCO_ent** %9, align 8, !dbg !4715
  %74 = getelementptr inbounds %struct.LCO_ent, %struct.LCO_ent* %73, i32 0, i32 0, !dbg !4716
  store i64 %72, i64* %74, align 8, !dbg !4717
  %75 = load %struct.hash_table*, %struct.hash_table** %5, align 8, !dbg !4718
  %76 = load %struct.LCO_ent*, %struct.LCO_ent** %9, align 8, !dbg !4719
  %77 = bitcast %struct.LCO_ent* %76 to i8*, !dbg !4719
  %78 = call i8* @hash_insert(%struct.hash_table* %75, i8* %77), !dbg !4720
  %79 = bitcast i8* %78 to %struct.LCO_ent*, !dbg !4720
  store %struct.LCO_ent* %79, %struct.LCO_ent** %7, align 8, !dbg !4721
  %80 = load %struct.LCO_ent*, %struct.LCO_ent** %7, align 8, !dbg !4722
  %81 = icmp eq %struct.LCO_ent* %80, null, !dbg !4724
  br i1 %81, label %82, label %85, !dbg !4725

; <label>:82:                                     ; preds = %57
  %83 = load %struct.LCO_ent*, %struct.LCO_ent** %9, align 8, !dbg !4726
  %84 = bitcast %struct.LCO_ent* %83 to i8*, !dbg !4726
  call void @free(i8* %84) #8, !dbg !4728
  store i1 false, i1* %2, align 1, !dbg !4729
  br label %95, !dbg !4729

; <label>:85:                                     ; preds = %57
  br label %86, !dbg !4730, !llvm.loop !4731

; <label>:86:                                     ; preds = %85
  %87 = load %struct.LCO_ent*, %struct.LCO_ent** %7, align 8, !dbg !4732
  %88 = load %struct.LCO_ent*, %struct.LCO_ent** %9, align 8, !dbg !4732
  %89 = icmp eq %struct.LCO_ent* %87, %88, !dbg !4732
  br i1 %89, label %91, label %90, !dbg !4735

; <label>:90:                                     ; preds = %86
  call void @abort() #11, !dbg !4732
  unreachable, !dbg !4732

; <label>:91:                                     ; preds = %86
  br label %92, !dbg !4735

; <label>:92:                                     ; preds = %91
  %93 = load i8, i8* %8, align 1, !dbg !4736
  %94 = trunc i8 %93 to i1, !dbg !4736
  store i1 %94, i1* %2, align 1, !dbg !4737
  br label %95, !dbg !4737

; <label>:95:                                     ; preds = %92, %82, %56, %46, %31, %21
  %96 = load i1, i1* %2, align 1, !dbg !4738
  ret i1 %96, !dbg !4738
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i1 @enter_dir(%struct.FTS*, %struct._ftsent*) #3 !dbg !4739 {
  %3 = alloca i1, align 1
  %4 = alloca %struct.FTS*, align 8
  %5 = alloca %struct._ftsent*, align 8
  %6 = alloca %struct.stat*, align 8
  %7 = alloca %struct.Active_dir*, align 8
  %8 = alloca %struct.Active_dir*, align 8
  store %struct.FTS* %0, %struct.FTS** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.FTS** %4, metadata !4742, metadata !DIExpression()), !dbg !4743
  store %struct._ftsent* %1, %struct._ftsent** %5, align 8
  call void @llvm.dbg.declare(metadata %struct._ftsent** %5, metadata !4744, metadata !DIExpression()), !dbg !4745
  %9 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !4746
  %10 = getelementptr inbounds %struct.FTS, %struct.FTS* %9, i32 0, i32 10, !dbg !4748
  %11 = load i32, i32* %10, align 8, !dbg !4748
  %12 = and i32 %11, 258, !dbg !4749
  %13 = icmp ne i32 %12, 0, !dbg !4749
  br i1 %13, label %14, label %63, !dbg !4750

; <label>:14:                                     ; preds = %2
  call void @llvm.dbg.declare(metadata %struct.stat** %6, metadata !4751, metadata !DIExpression()), !dbg !4753
  %15 = load %struct._ftsent*, %struct._ftsent** %5, align 8, !dbg !4754
  %16 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %15, i32 0, i32 17, !dbg !4755
  %17 = getelementptr inbounds [1 x %struct.stat], [1 x %struct.stat]* %16, i32 0, i32 0, !dbg !4754
  store %struct.stat* %17, %struct.stat** %6, align 8, !dbg !4753
  call void @llvm.dbg.declare(metadata %struct.Active_dir** %7, metadata !4756, metadata !DIExpression()), !dbg !4758
  %18 = call noalias i8* @malloc(i64 24) #8, !dbg !4759
  %19 = bitcast i8* %18 to %struct.Active_dir*, !dbg !4759
  store %struct.Active_dir* %19, %struct.Active_dir** %7, align 8, !dbg !4758
  call void @llvm.dbg.declare(metadata %struct.Active_dir** %8, metadata !4760, metadata !DIExpression()), !dbg !4761
  %20 = load %struct.Active_dir*, %struct.Active_dir** %7, align 8, !dbg !4762
  %21 = icmp ne %struct.Active_dir* %20, null, !dbg !4762
  br i1 %21, label %23, label %22, !dbg !4764

; <label>:22:                                     ; preds = %14
  store i1 false, i1* %3, align 1, !dbg !4765
  br label %80, !dbg !4765

; <label>:23:                                     ; preds = %14
  %24 = load %struct.stat*, %struct.stat** %6, align 8, !dbg !4766
  %25 = getelementptr inbounds %struct.stat, %struct.stat* %24, i32 0, i32 0, !dbg !4767
  %26 = load i64, i64* %25, align 8, !dbg !4767
  %27 = load %struct.Active_dir*, %struct.Active_dir** %7, align 8, !dbg !4768
  %28 = getelementptr inbounds %struct.Active_dir, %struct.Active_dir* %27, i32 0, i32 0, !dbg !4769
  store i64 %26, i64* %28, align 8, !dbg !4770
  %29 = load %struct.stat*, %struct.stat** %6, align 8, !dbg !4771
  %30 = getelementptr inbounds %struct.stat, %struct.stat* %29, i32 0, i32 1, !dbg !4772
  %31 = load i64, i64* %30, align 8, !dbg !4772
  %32 = load %struct.Active_dir*, %struct.Active_dir** %7, align 8, !dbg !4773
  %33 = getelementptr inbounds %struct.Active_dir, %struct.Active_dir* %32, i32 0, i32 1, !dbg !4774
  store i64 %31, i64* %33, align 8, !dbg !4775
  %34 = load %struct._ftsent*, %struct._ftsent** %5, align 8, !dbg !4776
  %35 = load %struct.Active_dir*, %struct.Active_dir** %7, align 8, !dbg !4777
  %36 = getelementptr inbounds %struct.Active_dir, %struct.Active_dir* %35, i32 0, i32 2, !dbg !4778
  store %struct._ftsent* %34, %struct._ftsent** %36, align 8, !dbg !4779
  %37 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !4780
  %38 = getelementptr inbounds %struct.FTS, %struct.FTS* %37, i32 0, i32 12, !dbg !4781
  %39 = bitcast %union.anon* %38 to %struct.hash_table**, !dbg !4782
  %40 = load %struct.hash_table*, %struct.hash_table** %39, align 8, !dbg !4782
  %41 = load %struct.Active_dir*, %struct.Active_dir** %7, align 8, !dbg !4783
  %42 = bitcast %struct.Active_dir* %41 to i8*, !dbg !4783
  %43 = call i8* @hash_insert(%struct.hash_table* %40, i8* %42), !dbg !4784
  %44 = bitcast i8* %43 to %struct.Active_dir*, !dbg !4784
  store %struct.Active_dir* %44, %struct.Active_dir** %8, align 8, !dbg !4785
  %45 = load %struct.Active_dir*, %struct.Active_dir** %8, align 8, !dbg !4786
  %46 = load %struct.Active_dir*, %struct.Active_dir** %7, align 8, !dbg !4788
  %47 = icmp ne %struct.Active_dir* %45, %46, !dbg !4789
  br i1 %47, label %48, label %62, !dbg !4790

; <label>:48:                                     ; preds = %23
  %49 = load %struct.Active_dir*, %struct.Active_dir** %7, align 8, !dbg !4791
  %50 = bitcast %struct.Active_dir* %49 to i8*, !dbg !4791
  call void @free(i8* %50) #8, !dbg !4793
  %51 = load %struct.Active_dir*, %struct.Active_dir** %8, align 8, !dbg !4794
  %52 = icmp ne %struct.Active_dir* %51, null, !dbg !4794
  br i1 %52, label %54, label %53, !dbg !4796

; <label>:53:                                     ; preds = %48
  store i1 false, i1* %3, align 1, !dbg !4797
  br label %80, !dbg !4797

; <label>:54:                                     ; preds = %48
  %55 = load %struct.Active_dir*, %struct.Active_dir** %8, align 8, !dbg !4798
  %56 = getelementptr inbounds %struct.Active_dir, %struct.Active_dir* %55, i32 0, i32 2, !dbg !4799
  %57 = load %struct._ftsent*, %struct._ftsent** %56, align 8, !dbg !4799
  %58 = load %struct._ftsent*, %struct._ftsent** %5, align 8, !dbg !4800
  %59 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %58, i32 0, i32 0, !dbg !4801
  store %struct._ftsent* %57, %struct._ftsent** %59, align 8, !dbg !4802
  %60 = load %struct._ftsent*, %struct._ftsent** %5, align 8, !dbg !4803
  %61 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %60, i32 0, i32 14, !dbg !4804
  store i16 2, i16* %61, align 8, !dbg !4805
  br label %62, !dbg !4806

; <label>:62:                                     ; preds = %54, %23
  br label %79, !dbg !4807

; <label>:63:                                     ; preds = %2
  %64 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !4808
  %65 = getelementptr inbounds %struct.FTS, %struct.FTS* %64, i32 0, i32 12, !dbg !4811
  %66 = bitcast %union.anon* %65 to %struct.cycle_check_state**, !dbg !4812
  %67 = load %struct.cycle_check_state*, %struct.cycle_check_state** %66, align 8, !dbg !4812
  %68 = load %struct._ftsent*, %struct._ftsent** %5, align 8, !dbg !4813
  %69 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %68, i32 0, i32 17, !dbg !4814
  %70 = getelementptr inbounds [1 x %struct.stat], [1 x %struct.stat]* %69, i32 0, i32 0, !dbg !4813
  %71 = call zeroext i1 @cycle_check(%struct.cycle_check_state* %67, %struct.stat* %70), !dbg !4815
  br i1 %71, label %72, label %78, !dbg !4816

; <label>:72:                                     ; preds = %63
  %73 = load %struct._ftsent*, %struct._ftsent** %5, align 8, !dbg !4817
  %74 = load %struct._ftsent*, %struct._ftsent** %5, align 8, !dbg !4819
  %75 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %74, i32 0, i32 0, !dbg !4820
  store %struct._ftsent* %73, %struct._ftsent** %75, align 8, !dbg !4821
  %76 = load %struct._ftsent*, %struct._ftsent** %5, align 8, !dbg !4822
  %77 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %76, i32 0, i32 14, !dbg !4823
  store i16 2, i16* %77, align 8, !dbg !4824
  br label %78, !dbg !4825

; <label>:78:                                     ; preds = %72, %63
  br label %79

; <label>:79:                                     ; preds = %78, %62
  store i1 true, i1* %3, align 1, !dbg !4826
  br label %80, !dbg !4826

; <label>:80:                                     ; preds = %79, %53, %22
  %81 = load i1, i1* %3, align 1, !dbg !4827
  ret i1 %81, !dbg !4827
}

; Function Attrs: noinline nounwind uwtable
define internal i64 @LCO_hash(i8*, i64) #3 !dbg !4828 {
  %3 = alloca i8*, align 8
  %4 = alloca i64, align 8
  %5 = alloca %struct.LCO_ent*, align 8
  store i8* %0, i8** %3, align 8
  call void @llvm.dbg.declare(metadata i8** %3, metadata !4829, metadata !DIExpression()), !dbg !4830
  store i64 %1, i64* %4, align 8
  call void @llvm.dbg.declare(metadata i64* %4, metadata !4831, metadata !DIExpression()), !dbg !4832
  call void @llvm.dbg.declare(metadata %struct.LCO_ent** %5, metadata !4833, metadata !DIExpression()), !dbg !4836
  %6 = load i8*, i8** %3, align 8, !dbg !4837
  %7 = bitcast i8* %6 to %struct.LCO_ent*, !dbg !4837
  store %struct.LCO_ent* %7, %struct.LCO_ent** %5, align 8, !dbg !4836
  %8 = load %struct.LCO_ent*, %struct.LCO_ent** %5, align 8, !dbg !4838
  %9 = getelementptr inbounds %struct.LCO_ent, %struct.LCO_ent* %8, i32 0, i32 0, !dbg !4839
  %10 = load i64, i64* %9, align 8, !dbg !4839
  %11 = load i64, i64* %4, align 8, !dbg !4840
  %12 = urem i64 %10, %11, !dbg !4841
  ret i64 %12, !dbg !4842
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i1 @LCO_compare(i8*, i8*) #3 !dbg !4843 {
  %3 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca %struct.LCO_ent*, align 8
  %6 = alloca %struct.LCO_ent*, align 8
  store i8* %0, i8** %3, align 8
  call void @llvm.dbg.declare(metadata i8** %3, metadata !4844, metadata !DIExpression()), !dbg !4845
  store i8* %1, i8** %4, align 8
  call void @llvm.dbg.declare(metadata i8** %4, metadata !4846, metadata !DIExpression()), !dbg !4847
  call void @llvm.dbg.declare(metadata %struct.LCO_ent** %5, metadata !4848, metadata !DIExpression()), !dbg !4849
  %7 = load i8*, i8** %3, align 8, !dbg !4850
  %8 = bitcast i8* %7 to %struct.LCO_ent*, !dbg !4850
  store %struct.LCO_ent* %8, %struct.LCO_ent** %5, align 8, !dbg !4849
  call void @llvm.dbg.declare(metadata %struct.LCO_ent** %6, metadata !4851, metadata !DIExpression()), !dbg !4852
  %9 = load i8*, i8** %4, align 8, !dbg !4853
  %10 = bitcast i8* %9 to %struct.LCO_ent*, !dbg !4853
  store %struct.LCO_ent* %10, %struct.LCO_ent** %6, align 8, !dbg !4852
  %11 = load %struct.LCO_ent*, %struct.LCO_ent** %5, align 8, !dbg !4854
  %12 = getelementptr inbounds %struct.LCO_ent, %struct.LCO_ent* %11, i32 0, i32 0, !dbg !4855
  %13 = load i64, i64* %12, align 8, !dbg !4855
  %14 = load %struct.LCO_ent*, %struct.LCO_ent** %6, align 8, !dbg !4856
  %15 = getelementptr inbounds %struct.LCO_ent, %struct.LCO_ent* %14, i32 0, i32 0, !dbg !4857
  %16 = load i64, i64* %15, align 8, !dbg !4857
  %17 = icmp eq i64 %13, %16, !dbg !4858
  ret i1 %17, !dbg !4859
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i1 @leaf_optimization_applies(i32) #3 !dbg !4860 {
  %2 = alloca i1, align 1
  %3 = alloca i32, align 4
  %4 = alloca %struct.statfs, align 8
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !4863, metadata !DIExpression()), !dbg !4864
  call void @llvm.dbg.declare(metadata %struct.statfs* %4, metadata !4865, metadata !DIExpression()), !dbg !4892
  %5 = load i32, i32* %3, align 4, !dbg !4893
  %6 = call i32 @fstatfs(i32 %5, %struct.statfs* %4) #8, !dbg !4895
  %7 = icmp ne i32 %6, 0, !dbg !4896
  br i1 %7, label %8, label %9, !dbg !4897

; <label>:8:                                      ; preds = %1
  store i1 false, i1* %2, align 1, !dbg !4898
  br label %15, !dbg !4898

; <label>:9:                                      ; preds = %1
  %10 = getelementptr inbounds %struct.statfs, %struct.statfs* %4, i32 0, i32 0, !dbg !4899
  %11 = load i64, i64* %10, align 8, !dbg !4899
  switch i64 %11, label %14 [
    i64 1382369651, label %12
    i64 40864, label %13
  ], !dbg !4900

; <label>:12:                                     ; preds = %9
  store i1 true, i1* %2, align 1, !dbg !4901
  br label %15, !dbg !4901

; <label>:13:                                     ; preds = %9
  br label %14, !dbg !4901

; <label>:14:                                     ; preds = %9, %13
  store i1 false, i1* %2, align 1, !dbg !4903
  br label %15, !dbg !4903

; <label>:15:                                     ; preds = %14, %12, %8
  %16 = load i1, i1* %2, align 1, !dbg !4904
  ret i1 %16, !dbg !4904
}

; Function Attrs: nounwind
declare i32 @fstatfs(i32, %struct.statfs*) #5

; Function Attrs: noinline nounwind uwtable
define internal %struct.__dirstream* @opendirat(i32, i8*) #3 !dbg !4905 {
  %3 = alloca %struct.__dirstream*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i8*, align 8
  %6 = alloca i32, align 4
  %7 = alloca %struct.__dirstream*, align 8
  %8 = alloca i32, align 4
  store i32 %0, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !4908, metadata !DIExpression()), !dbg !4909
  store i8* %1, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !4910, metadata !DIExpression()), !dbg !4911
  call void @llvm.dbg.declare(metadata i32* %6, metadata !4912, metadata !DIExpression()), !dbg !4913
  %9 = load i32, i32* %4, align 4, !dbg !4914
  %10 = load i8*, i8** %5, align 8, !dbg !4915
  %11 = call i32 (i32, i8*, i32, ...) @openat_safer(i32 %9, i8* %10, i32 67840), !dbg !4916
  store i32 %11, i32* %6, align 4, !dbg !4913
  call void @llvm.dbg.declare(metadata %struct.__dirstream** %7, metadata !4917, metadata !DIExpression()), !dbg !4918
  %12 = load i32, i32* %6, align 4, !dbg !4919
  %13 = icmp slt i32 %12, 0, !dbg !4921
  br i1 %13, label %14, label %15, !dbg !4922

; <label>:14:                                     ; preds = %2
  store %struct.__dirstream* null, %struct.__dirstream** %3, align 8, !dbg !4923
  br label %31, !dbg !4923

; <label>:15:                                     ; preds = %2
  %16 = load i32, i32* %6, align 4, !dbg !4924
  %17 = call i32 @set_cloexec_flag(i32 %16, i1 zeroext true), !dbg !4925
  %18 = load i32, i32* %6, align 4, !dbg !4926
  %19 = call %struct.__dirstream* @rpl_fdopendir(i32 %18), !dbg !4927
  store %struct.__dirstream* %19, %struct.__dirstream** %7, align 8, !dbg !4928
  %20 = load %struct.__dirstream*, %struct.__dirstream** %7, align 8, !dbg !4929
  %21 = icmp eq %struct.__dirstream* %20, null, !dbg !4931
  br i1 %21, label %22, label %29, !dbg !4932

; <label>:22:                                     ; preds = %15
  call void @llvm.dbg.declare(metadata i32* %8, metadata !4933, metadata !DIExpression()), !dbg !4935
  %23 = call i32* @__errno_location() #14, !dbg !4936
  %24 = load i32, i32* %23, align 4, !dbg !4936
  store i32 %24, i32* %8, align 4, !dbg !4935
  %25 = load i32, i32* %6, align 4, !dbg !4937
  %26 = call i32 @close(i32 %25), !dbg !4938
  %27 = load i32, i32* %8, align 4, !dbg !4939
  %28 = call i32* @__errno_location() #14, !dbg !4940
  store i32 %27, i32* %28, align 4, !dbg !4941
  br label %29, !dbg !4942

; <label>:29:                                     ; preds = %22, %15
  %30 = load %struct.__dirstream*, %struct.__dirstream** %7, align 8, !dbg !4943
  store %struct.__dirstream* %30, %struct.__dirstream** %3, align 8, !dbg !4944
  br label %31, !dbg !4944

; <label>:31:                                     ; preds = %29, %14
  %32 = load %struct.__dirstream*, %struct.__dirstream** %3, align 8, !dbg !4945
  ret %struct.__dirstream* %32, !dbg !4945
}

; Function Attrs: nounwind
declare i32 @dirfd(%struct.__dirstream*) #5

declare i32 @closedir(%struct.__dirstream*) #2

declare %struct.dirent* @readdir(%struct.__dirstream*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @set_stat_type(%struct.stat*, i32) #3 !dbg !4946 {
  %3 = alloca %struct.stat*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  store %struct.stat* %0, %struct.stat** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.stat** %3, metadata !4949, metadata !DIExpression()), !dbg !4950
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !4951, metadata !DIExpression()), !dbg !4952
  call void @llvm.dbg.declare(metadata i32* %5, metadata !4953, metadata !DIExpression()), !dbg !4955
  %6 = load i32, i32* %4, align 4, !dbg !4956
  switch i32 %6, label %14 [
    i32 6, label %7
    i32 2, label %8
    i32 4, label %9
    i32 1, label %10
    i32 10, label %11
    i32 8, label %12
    i32 12, label %13
  ], !dbg !4957

; <label>:7:                                      ; preds = %2
  store i32 24576, i32* %5, align 4, !dbg !4958
  br label %15, !dbg !4960

; <label>:8:                                      ; preds = %2
  store i32 8192, i32* %5, align 4, !dbg !4961
  br label %15, !dbg !4962

; <label>:9:                                      ; preds = %2
  store i32 16384, i32* %5, align 4, !dbg !4963
  br label %15, !dbg !4964

; <label>:10:                                     ; preds = %2
  store i32 4096, i32* %5, align 4, !dbg !4965
  br label %15, !dbg !4966

; <label>:11:                                     ; preds = %2
  store i32 40960, i32* %5, align 4, !dbg !4967
  br label %15, !dbg !4968

; <label>:12:                                     ; preds = %2
  store i32 32768, i32* %5, align 4, !dbg !4969
  br label %15, !dbg !4970

; <label>:13:                                     ; preds = %2
  store i32 49152, i32* %5, align 4, !dbg !4971
  br label %15, !dbg !4972

; <label>:14:                                     ; preds = %2
  store i32 0, i32* %5, align 4, !dbg !4973
  br label %15, !dbg !4974

; <label>:15:                                     ; preds = %14, %13, %12, %11, %10, %9, %8, %7
  %16 = load i32, i32* %5, align 4, !dbg !4975
  %17 = load %struct.stat*, %struct.stat** %3, align 8, !dbg !4976
  %18 = getelementptr inbounds %struct.stat, %struct.stat* %17, i32 0, i32 3, !dbg !4977
  store i32 %16, i32* %18, align 8, !dbg !4978
  ret void, !dbg !4979
}

; Function Attrs: noinline nounwind uwtable
define internal void @fts_padjust(%struct.FTS*, %struct._ftsent*) #3 !dbg !4980 {
  %3 = alloca %struct.FTS*, align 8
  %4 = alloca %struct._ftsent*, align 8
  %5 = alloca %struct._ftsent*, align 8
  %6 = alloca i8*, align 8
  store %struct.FTS* %0, %struct.FTS** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.FTS** %3, metadata !4981, metadata !DIExpression()), !dbg !4982
  store %struct._ftsent* %1, %struct._ftsent** %4, align 8
  call void @llvm.dbg.declare(metadata %struct._ftsent** %4, metadata !4983, metadata !DIExpression()), !dbg !4984
  call void @llvm.dbg.declare(metadata %struct._ftsent** %5, metadata !4985, metadata !DIExpression()), !dbg !4986
  call void @llvm.dbg.declare(metadata i8** %6, metadata !4987, metadata !DIExpression()), !dbg !4988
  %7 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !4989
  %8 = getelementptr inbounds %struct.FTS, %struct.FTS* %7, i32 0, i32 4, !dbg !4990
  %9 = load i8*, i8** %8, align 8, !dbg !4990
  store i8* %9, i8** %6, align 8, !dbg !4988
  %10 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !4991
  %11 = getelementptr inbounds %struct.FTS, %struct.FTS* %10, i32 0, i32 1, !dbg !4993
  %12 = load %struct._ftsent*, %struct._ftsent** %11, align 8, !dbg !4993
  store %struct._ftsent* %12, %struct._ftsent** %5, align 8, !dbg !4994
  br label %13, !dbg !4995

; <label>:13:                                     ; preds = %44, %2
  %14 = load %struct._ftsent*, %struct._ftsent** %5, align 8, !dbg !4996
  %15 = icmp ne %struct._ftsent* %14, null, !dbg !4998
  br i1 %15, label %16, label %48, !dbg !4998

; <label>:16:                                     ; preds = %13
  br label %17, !dbg !4999, !llvm.loop !5000

; <label>:17:                                     ; preds = %16
  %18 = load %struct._ftsent*, %struct._ftsent** %5, align 8, !dbg !5001
  %19 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %18, i32 0, i32 5, !dbg !5001
  %20 = load i8*, i8** %19, align 8, !dbg !5001
  %21 = load %struct._ftsent*, %struct._ftsent** %5, align 8, !dbg !5001
  %22 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %21, i32 0, i32 18, !dbg !5001
  %23 = getelementptr inbounds [1 x i8], [1 x i8]* %22, i32 0, i32 0, !dbg !5001
  %24 = icmp ne i8* %20, %23, !dbg !5001
  br i1 %24, label %25, label %39, !dbg !5004

; <label>:25:                                     ; preds = %17
  %26 = load i8*, i8** %6, align 8, !dbg !5005
  %27 = load %struct._ftsent*, %struct._ftsent** %5, align 8, !dbg !5005
  %28 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %27, i32 0, i32 5, !dbg !5005
  %29 = load i8*, i8** %28, align 8, !dbg !5005
  %30 = load %struct._ftsent*, %struct._ftsent** %5, align 8, !dbg !5005
  %31 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %30, i32 0, i32 6, !dbg !5005
  %32 = load i8*, i8** %31, align 8, !dbg !5005
  %33 = ptrtoint i8* %29 to i64, !dbg !5005
  %34 = ptrtoint i8* %32 to i64, !dbg !5005
  %35 = sub i64 %33, %34, !dbg !5005
  %36 = getelementptr inbounds i8, i8* %26, i64 %35, !dbg !5005
  %37 = load %struct._ftsent*, %struct._ftsent** %5, align 8, !dbg !5005
  %38 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %37, i32 0, i32 5, !dbg !5005
  store i8* %36, i8** %38, align 8, !dbg !5005
  br label %39, !dbg !5005

; <label>:39:                                     ; preds = %25, %17
  %40 = load i8*, i8** %6, align 8, !dbg !5004
  %41 = load %struct._ftsent*, %struct._ftsent** %5, align 8, !dbg !5004
  %42 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %41, i32 0, i32 6, !dbg !5004
  store i8* %40, i8** %42, align 8, !dbg !5004
  br label %43, !dbg !5004

; <label>:43:                                     ; preds = %39
  br label %44, !dbg !5004

; <label>:44:                                     ; preds = %43
  %45 = load %struct._ftsent*, %struct._ftsent** %5, align 8, !dbg !5007
  %46 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %45, i32 0, i32 2, !dbg !5008
  %47 = load %struct._ftsent*, %struct._ftsent** %46, align 8, !dbg !5008
  store %struct._ftsent* %47, %struct._ftsent** %5, align 8, !dbg !5009
  br label %13, !dbg !5010, !llvm.loop !5011

; <label>:48:                                     ; preds = %13
  %49 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !5013
  store %struct._ftsent* %49, %struct._ftsent** %5, align 8, !dbg !5015
  br label %50, !dbg !5016

; <label>:50:                                     ; preds = %95, %48
  %51 = load %struct._ftsent*, %struct._ftsent** %5, align 8, !dbg !5017
  %52 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %51, i32 0, i32 11, !dbg !5019
  %53 = load i64, i64* %52, align 8, !dbg !5019
  %54 = icmp sge i64 %53, 0, !dbg !5020
  br i1 %54, label %55, label %97, !dbg !5021

; <label>:55:                                     ; preds = %50
  br label %56, !dbg !5022, !llvm.loop !5024

; <label>:56:                                     ; preds = %55
  %57 = load %struct._ftsent*, %struct._ftsent** %5, align 8, !dbg !5025
  %58 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %57, i32 0, i32 5, !dbg !5025
  %59 = load i8*, i8** %58, align 8, !dbg !5025
  %60 = load %struct._ftsent*, %struct._ftsent** %5, align 8, !dbg !5025
  %61 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %60, i32 0, i32 18, !dbg !5025
  %62 = getelementptr inbounds [1 x i8], [1 x i8]* %61, i32 0, i32 0, !dbg !5025
  %63 = icmp ne i8* %59, %62, !dbg !5025
  br i1 %63, label %64, label %78, !dbg !5028

; <label>:64:                                     ; preds = %56
  %65 = load i8*, i8** %6, align 8, !dbg !5029
  %66 = load %struct._ftsent*, %struct._ftsent** %5, align 8, !dbg !5029
  %67 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %66, i32 0, i32 5, !dbg !5029
  %68 = load i8*, i8** %67, align 8, !dbg !5029
  %69 = load %struct._ftsent*, %struct._ftsent** %5, align 8, !dbg !5029
  %70 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %69, i32 0, i32 6, !dbg !5029
  %71 = load i8*, i8** %70, align 8, !dbg !5029
  %72 = ptrtoint i8* %68 to i64, !dbg !5029
  %73 = ptrtoint i8* %71 to i64, !dbg !5029
  %74 = sub i64 %72, %73, !dbg !5029
  %75 = getelementptr inbounds i8, i8* %65, i64 %74, !dbg !5029
  %76 = load %struct._ftsent*, %struct._ftsent** %5, align 8, !dbg !5029
  %77 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %76, i32 0, i32 5, !dbg !5029
  store i8* %75, i8** %77, align 8, !dbg !5029
  br label %78, !dbg !5029

; <label>:78:                                     ; preds = %64, %56
  %79 = load i8*, i8** %6, align 8, !dbg !5028
  %80 = load %struct._ftsent*, %struct._ftsent** %5, align 8, !dbg !5028
  %81 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %80, i32 0, i32 6, !dbg !5028
  store i8* %79, i8** %81, align 8, !dbg !5028
  br label %82, !dbg !5028

; <label>:82:                                     ; preds = %78
  %83 = load %struct._ftsent*, %struct._ftsent** %5, align 8, !dbg !5031
  %84 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %83, i32 0, i32 2, !dbg !5032
  %85 = load %struct._ftsent*, %struct._ftsent** %84, align 8, !dbg !5032
  %86 = icmp ne %struct._ftsent* %85, null, !dbg !5031
  br i1 %86, label %87, label %91, !dbg !5031

; <label>:87:                                     ; preds = %82
  %88 = load %struct._ftsent*, %struct._ftsent** %5, align 8, !dbg !5033
  %89 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %88, i32 0, i32 2, !dbg !5034
  %90 = load %struct._ftsent*, %struct._ftsent** %89, align 8, !dbg !5034
  br label %95, !dbg !5031

; <label>:91:                                     ; preds = %82
  %92 = load %struct._ftsent*, %struct._ftsent** %5, align 8, !dbg !5035
  %93 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %92, i32 0, i32 1, !dbg !5036
  %94 = load %struct._ftsent*, %struct._ftsent** %93, align 8, !dbg !5036
  br label %95, !dbg !5031

; <label>:95:                                     ; preds = %91, %87
  %96 = phi %struct._ftsent* [ %90, %87 ], [ %94, %91 ], !dbg !5031
  store %struct._ftsent* %96, %struct._ftsent** %5, align 8, !dbg !5037
  br label %50, !dbg !5038, !llvm.loop !5039

; <label>:97:                                     ; preds = %50
  ret void, !dbg !5041
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i1 @dirent_inode_sort_may_be_useful(i32) #3 !dbg !5042 {
  %2 = alloca i1, align 1
  %3 = alloca i32, align 4
  %4 = alloca %struct.statfs, align 8
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !5043, metadata !DIExpression()), !dbg !5044
  call void @llvm.dbg.declare(metadata %struct.statfs* %4, metadata !5045, metadata !DIExpression()), !dbg !5046
  %5 = load i32, i32* %3, align 4, !dbg !5047
  %6 = call i32 @fstatfs(i32 %5, %struct.statfs* %4) #8, !dbg !5049
  %7 = icmp ne i32 %6, 0, !dbg !5050
  br i1 %7, label %8, label %9, !dbg !5051

; <label>:8:                                      ; preds = %1
  store i1 true, i1* %2, align 1, !dbg !5052
  br label %14, !dbg !5052

; <label>:9:                                      ; preds = %1
  %10 = getelementptr inbounds %struct.statfs, %struct.statfs* %4, i32 0, i32 0, !dbg !5053
  %11 = load i64, i64* %10, align 8, !dbg !5053
  switch i64 %11, label %13 [
    i64 16914836, label %12
    i64 26985, label %12
  ], !dbg !5054

; <label>:12:                                     ; preds = %9, %9
  store i1 false, i1* %2, align 1, !dbg !5055
  br label %14, !dbg !5055

; <label>:13:                                     ; preds = %9
  store i1 true, i1* %2, align 1, !dbg !5057
  br label %14, !dbg !5057

; <label>:14:                                     ; preds = %13, %12, %8
  %15 = load i1, i1* %2, align 1, !dbg !5058
  ret i1 %15, !dbg !5058
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @fts_compare_ino(%struct._ftsent**, %struct._ftsent**) #3 !dbg !5059 {
  %3 = alloca %struct._ftsent**, align 8
  %4 = alloca %struct._ftsent**, align 8
  store %struct._ftsent** %0, %struct._ftsent*** %3, align 8
  call void @llvm.dbg.declare(metadata %struct._ftsent*** %3, metadata !5060, metadata !DIExpression()), !dbg !5061
  store %struct._ftsent** %1, %struct._ftsent*** %4, align 8
  call void @llvm.dbg.declare(metadata %struct._ftsent*** %4, metadata !5062, metadata !DIExpression()), !dbg !5063
  %5 = load %struct._ftsent**, %struct._ftsent*** %3, align 8, !dbg !5064
  %6 = getelementptr inbounds %struct._ftsent*, %struct._ftsent** %5, i64 0, !dbg !5064
  %7 = load %struct._ftsent*, %struct._ftsent** %6, align 8, !dbg !5064
  %8 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %7, i32 0, i32 17, !dbg !5065
  %9 = getelementptr inbounds [1 x %struct.stat], [1 x %struct.stat]* %8, i32 0, i32 0, !dbg !5066
  %10 = getelementptr inbounds %struct.stat, %struct.stat* %9, i32 0, i32 1, !dbg !5066
  %11 = load i64, i64* %10, align 8, !dbg !5066
  %12 = load %struct._ftsent**, %struct._ftsent*** %4, align 8, !dbg !5067
  %13 = getelementptr inbounds %struct._ftsent*, %struct._ftsent** %12, i64 0, !dbg !5067
  %14 = load %struct._ftsent*, %struct._ftsent** %13, align 8, !dbg !5067
  %15 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %14, i32 0, i32 17, !dbg !5068
  %16 = getelementptr inbounds [1 x %struct.stat], [1 x %struct.stat]* %15, i32 0, i32 0, !dbg !5069
  %17 = getelementptr inbounds %struct.stat, %struct.stat* %16, i32 0, i32 1, !dbg !5069
  %18 = load i64, i64* %17, align 8, !dbg !5069
  %19 = icmp ult i64 %11, %18, !dbg !5070
  br i1 %19, label %20, label %21, !dbg !5064

; <label>:20:                                     ; preds = %2
  br label %39, !dbg !5064

; <label>:21:                                     ; preds = %2
  %22 = load %struct._ftsent**, %struct._ftsent*** %4, align 8, !dbg !5071
  %23 = getelementptr inbounds %struct._ftsent*, %struct._ftsent** %22, i64 0, !dbg !5071
  %24 = load %struct._ftsent*, %struct._ftsent** %23, align 8, !dbg !5071
  %25 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %24, i32 0, i32 17, !dbg !5072
  %26 = getelementptr inbounds [1 x %struct.stat], [1 x %struct.stat]* %25, i32 0, i32 0, !dbg !5073
  %27 = getelementptr inbounds %struct.stat, %struct.stat* %26, i32 0, i32 1, !dbg !5073
  %28 = load i64, i64* %27, align 8, !dbg !5073
  %29 = load %struct._ftsent**, %struct._ftsent*** %3, align 8, !dbg !5074
  %30 = getelementptr inbounds %struct._ftsent*, %struct._ftsent** %29, i64 0, !dbg !5074
  %31 = load %struct._ftsent*, %struct._ftsent** %30, align 8, !dbg !5074
  %32 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %31, i32 0, i32 17, !dbg !5075
  %33 = getelementptr inbounds [1 x %struct.stat], [1 x %struct.stat]* %32, i32 0, i32 0, !dbg !5076
  %34 = getelementptr inbounds %struct.stat, %struct.stat* %33, i32 0, i32 1, !dbg !5076
  %35 = load i64, i64* %34, align 8, !dbg !5076
  %36 = icmp ult i64 %28, %35, !dbg !5077
  %37 = zext i1 %36 to i64, !dbg !5071
  %38 = select i1 %36, i32 1, i32 0, !dbg !5071
  br label %39, !dbg !5064

; <label>:39:                                     ; preds = %21, %20
  %40 = phi i32 [ -1, %20 ], [ %38, %21 ], !dbg !5064
  ret i32 %40, !dbg !5078
}

; Function Attrs: noinline nounwind uwtable
define i32 @fts_set(%struct.FTS*, %struct._ftsent*, i32) #3 !dbg !5079 {
  %4 = alloca i32, align 4
  %5 = alloca %struct.FTS*, align 8
  %6 = alloca %struct._ftsent*, align 8
  %7 = alloca i32, align 4
  store %struct.FTS* %0, %struct.FTS** %5, align 8
  call void @llvm.dbg.declare(metadata %struct.FTS** %5, metadata !5082, metadata !DIExpression()), !dbg !5083
  store %struct._ftsent* %1, %struct._ftsent** %6, align 8
  call void @llvm.dbg.declare(metadata %struct._ftsent** %6, metadata !5084, metadata !DIExpression()), !dbg !5085
  store i32 %2, i32* %7, align 4
  call void @llvm.dbg.declare(metadata i32* %7, metadata !5086, metadata !DIExpression()), !dbg !5087
  %8 = load i32, i32* %7, align 4, !dbg !5088
  %9 = icmp ne i32 %8, 0, !dbg !5090
  br i1 %9, label %10, label %24, !dbg !5091

; <label>:10:                                     ; preds = %3
  %11 = load i32, i32* %7, align 4, !dbg !5092
  %12 = icmp ne i32 %11, 1, !dbg !5093
  br i1 %12, label %13, label %24, !dbg !5094

; <label>:13:                                     ; preds = %10
  %14 = load i32, i32* %7, align 4, !dbg !5095
  %15 = icmp ne i32 %14, 2, !dbg !5096
  br i1 %15, label %16, label %24, !dbg !5097

; <label>:16:                                     ; preds = %13
  %17 = load i32, i32* %7, align 4, !dbg !5098
  %18 = icmp ne i32 %17, 3, !dbg !5099
  br i1 %18, label %19, label %24, !dbg !5100

; <label>:19:                                     ; preds = %16
  %20 = load i32, i32* %7, align 4, !dbg !5101
  %21 = icmp ne i32 %20, 4, !dbg !5102
  br i1 %21, label %22, label %24, !dbg !5103

; <label>:22:                                     ; preds = %19
  %23 = call i32* @__errno_location() #14, !dbg !5104
  store i32 22, i32* %23, align 4, !dbg !5104
  store i32 1, i32* %4, align 4, !dbg !5106
  br label %29, !dbg !5106

; <label>:24:                                     ; preds = %19, %16, %13, %10, %3
  %25 = load i32, i32* %7, align 4, !dbg !5107
  %26 = trunc i32 %25 to i16, !dbg !5107
  %27 = load %struct._ftsent*, %struct._ftsent** %6, align 8, !dbg !5108
  %28 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %27, i32 0, i32 16, !dbg !5109
  store i16 %26, i16* %28, align 4, !dbg !5110
  store i32 0, i32* %4, align 4, !dbg !5111
  br label %29, !dbg !5111

; <label>:29:                                     ; preds = %24, %22
  %30 = load i32, i32* %4, align 4, !dbg !5112
  ret i32 %30, !dbg !5112
}

; Function Attrs: noinline nounwind uwtable
define %struct._ftsent* @fts_children(%struct.FTS*, i32) #3 !dbg !5113 {
  %3 = alloca %struct._ftsent*, align 8
  %4 = alloca %struct.FTS*, align 8
  %5 = alloca i32, align 4
  %6 = alloca %struct._ftsent*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  store %struct.FTS* %0, %struct.FTS** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.FTS** %4, metadata !5114, metadata !DIExpression()), !dbg !5115
  store i32 %1, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !5116, metadata !DIExpression()), !dbg !5117
  call void @llvm.dbg.declare(metadata %struct._ftsent** %6, metadata !5118, metadata !DIExpression()), !dbg !5119
  call void @llvm.dbg.declare(metadata i32* %7, metadata !5120, metadata !DIExpression()), !dbg !5121
  %9 = load i32, i32* %5, align 4, !dbg !5122
  %10 = icmp ne i32 %9, 0, !dbg !5124
  br i1 %10, label %11, label %16, !dbg !5125

; <label>:11:                                     ; preds = %2
  %12 = load i32, i32* %5, align 4, !dbg !5126
  %13 = icmp ne i32 %12, 4096, !dbg !5127
  br i1 %13, label %14, label %16, !dbg !5128

; <label>:14:                                     ; preds = %11
  %15 = call i32* @__errno_location() #14, !dbg !5129
  store i32 22, i32* %15, align 4, !dbg !5129
  store %struct._ftsent* null, %struct._ftsent** %3, align 8, !dbg !5131
  br label %126, !dbg !5131

; <label>:16:                                     ; preds = %11, %2
  %17 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !5132
  %18 = getelementptr inbounds %struct.FTS, %struct.FTS* %17, i32 0, i32 0, !dbg !5133
  %19 = load %struct._ftsent*, %struct._ftsent** %18, align 8, !dbg !5133
  store %struct._ftsent* %19, %struct._ftsent** %6, align 8, !dbg !5134
  %20 = call i32* @__errno_location() #14, !dbg !5135
  store i32 0, i32* %20, align 4, !dbg !5135
  %21 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !5136
  %22 = getelementptr inbounds %struct.FTS, %struct.FTS* %21, i32 0, i32 10, !dbg !5136
  %23 = load i32, i32* %22, align 8, !dbg !5136
  %24 = and i32 %23, 8192, !dbg !5136
  %25 = icmp ne i32 %24, 0, !dbg !5136
  br i1 %25, label %26, label %27, !dbg !5138

; <label>:26:                                     ; preds = %16
  store %struct._ftsent* null, %struct._ftsent** %3, align 8, !dbg !5139
  br label %126, !dbg !5139

; <label>:27:                                     ; preds = %16
  %28 = load %struct._ftsent*, %struct._ftsent** %6, align 8, !dbg !5140
  %29 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %28, i32 0, i32 14, !dbg !5142
  %30 = load i16, i16* %29, align 8, !dbg !5142
  %31 = zext i16 %30 to i32, !dbg !5140
  %32 = icmp eq i32 %31, 9, !dbg !5143
  br i1 %32, label %33, label %37, !dbg !5144

; <label>:33:                                     ; preds = %27
  %34 = load %struct._ftsent*, %struct._ftsent** %6, align 8, !dbg !5145
  %35 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %34, i32 0, i32 2, !dbg !5146
  %36 = load %struct._ftsent*, %struct._ftsent** %35, align 8, !dbg !5146
  store %struct._ftsent* %36, %struct._ftsent** %3, align 8, !dbg !5147
  br label %126, !dbg !5147

; <label>:37:                                     ; preds = %27
  %38 = load %struct._ftsent*, %struct._ftsent** %6, align 8, !dbg !5148
  %39 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %38, i32 0, i32 14, !dbg !5150
  %40 = load i16, i16* %39, align 8, !dbg !5150
  %41 = zext i16 %40 to i32, !dbg !5148
  %42 = icmp ne i32 %41, 1, !dbg !5151
  br i1 %42, label %43, label %44, !dbg !5152

; <label>:43:                                     ; preds = %37
  store %struct._ftsent* null, %struct._ftsent** %3, align 8, !dbg !5153
  br label %126, !dbg !5153

; <label>:44:                                     ; preds = %37
  %45 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !5154
  %46 = getelementptr inbounds %struct.FTS, %struct.FTS* %45, i32 0, i32 1, !dbg !5156
  %47 = load %struct._ftsent*, %struct._ftsent** %46, align 8, !dbg !5156
  %48 = icmp ne %struct._ftsent* %47, null, !dbg !5157
  br i1 %48, label %49, label %53, !dbg !5158

; <label>:49:                                     ; preds = %44
  %50 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !5159
  %51 = getelementptr inbounds %struct.FTS, %struct.FTS* %50, i32 0, i32 1, !dbg !5160
  %52 = load %struct._ftsent*, %struct._ftsent** %51, align 8, !dbg !5160
  call void @fts_lfree(%struct._ftsent* %52), !dbg !5161
  br label %53, !dbg !5161

; <label>:53:                                     ; preds = %49, %44
  %54 = load i32, i32* %5, align 4, !dbg !5162
  %55 = icmp eq i32 %54, 4096, !dbg !5164
  br i1 %55, label %56, label %61, !dbg !5165

; <label>:56:                                     ; preds = %53
  %57 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !5166
  %58 = getelementptr inbounds %struct.FTS, %struct.FTS* %57, i32 0, i32 10, !dbg !5166
  %59 = load i32, i32* %58, align 8, !dbg !5166
  %60 = or i32 %59, 4096, !dbg !5166
  store i32 %60, i32* %58, align 8, !dbg !5166
  store i32 2, i32* %5, align 4, !dbg !5168
  br label %62, !dbg !5169

; <label>:61:                                     ; preds = %53
  store i32 1, i32* %5, align 4, !dbg !5170
  br label %62

; <label>:62:                                     ; preds = %61, %56
  %63 = load %struct._ftsent*, %struct._ftsent** %6, align 8, !dbg !5171
  %64 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %63, i32 0, i32 11, !dbg !5173
  %65 = load i64, i64* %64, align 8, !dbg !5173
  %66 = icmp ne i64 %65, 0, !dbg !5174
  br i1 %66, label %81, label %67, !dbg !5175

; <label>:67:                                     ; preds = %62
  %68 = load %struct._ftsent*, %struct._ftsent** %6, align 8, !dbg !5176
  %69 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %68, i32 0, i32 5, !dbg !5177
  %70 = load i8*, i8** %69, align 8, !dbg !5177
  %71 = getelementptr inbounds i8, i8* %70, i64 0, !dbg !5176
  %72 = load i8, i8* %71, align 1, !dbg !5176
  %73 = sext i8 %72 to i32, !dbg !5176
  %74 = icmp eq i32 %73, 47, !dbg !5178
  br i1 %74, label %81, label %75, !dbg !5179

; <label>:75:                                     ; preds = %67
  %76 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !5180
  %77 = getelementptr inbounds %struct.FTS, %struct.FTS* %76, i32 0, i32 10, !dbg !5180
  %78 = load i32, i32* %77, align 8, !dbg !5180
  %79 = and i32 %78, 4, !dbg !5180
  %80 = icmp ne i32 %79, 0, !dbg !5180
  br i1 %80, label %81, label %87, !dbg !5181

; <label>:81:                                     ; preds = %75, %67, %62
  %82 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !5182
  %83 = load i32, i32* %5, align 4, !dbg !5183
  %84 = call %struct._ftsent* @fts_build(%struct.FTS* %82, i32 %83), !dbg !5184
  %85 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !5185
  %86 = getelementptr inbounds %struct.FTS, %struct.FTS* %85, i32 0, i32 1, !dbg !5186
  store %struct._ftsent* %84, %struct._ftsent** %86, align 8, !dbg !5187
  store %struct._ftsent* %84, %struct._ftsent** %3, align 8, !dbg !5188
  br label %126, !dbg !5188

; <label>:87:                                     ; preds = %75
  %88 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !5189
  %89 = call i32 @diropen(%struct.FTS* %88, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.112, i32 0, i32 0)), !dbg !5191
  store i32 %89, i32* %7, align 4, !dbg !5192
  %90 = icmp slt i32 %89, 0, !dbg !5193
  br i1 %90, label %91, label %94, !dbg !5194

; <label>:91:                                     ; preds = %87
  %92 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !5195
  %93 = getelementptr inbounds %struct.FTS, %struct.FTS* %92, i32 0, i32 1, !dbg !5196
  store %struct._ftsent* null, %struct._ftsent** %93, align 8, !dbg !5197
  store %struct._ftsent* null, %struct._ftsent** %3, align 8, !dbg !5198
  br label %126, !dbg !5198

; <label>:94:                                     ; preds = %87
  %95 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !5199
  %96 = load i32, i32* %5, align 4, !dbg !5200
  %97 = call %struct._ftsent* @fts_build(%struct.FTS* %95, i32 %96), !dbg !5201
  %98 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !5202
  %99 = getelementptr inbounds %struct.FTS, %struct.FTS* %98, i32 0, i32 1, !dbg !5203
  store %struct._ftsent* %97, %struct._ftsent** %99, align 8, !dbg !5204
  %100 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !5205
  %101 = getelementptr inbounds %struct.FTS, %struct.FTS* %100, i32 0, i32 10, !dbg !5205
  %102 = load i32, i32* %101, align 8, !dbg !5205
  %103 = and i32 %102, 512, !dbg !5205
  %104 = icmp ne i32 %103, 0, !dbg !5205
  br i1 %104, label %105, label %108, !dbg !5207

; <label>:105:                                    ; preds = %94
  %106 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !5208
  %107 = load i32, i32* %7, align 4, !dbg !5210
  call void @cwd_advance_fd(%struct.FTS* %106, i32 %107, i1 zeroext true), !dbg !5211
  br label %122, !dbg !5212

; <label>:108:                                    ; preds = %94
  %109 = load i32, i32* %7, align 4, !dbg !5213
  %110 = call i32 @fchdir(i32 %109) #8, !dbg !5216
  %111 = icmp ne i32 %110, 0, !dbg !5216
  br i1 %111, label %112, label %119, !dbg !5217

; <label>:112:                                    ; preds = %108
  call void @llvm.dbg.declare(metadata i32* %8, metadata !5218, metadata !DIExpression()), !dbg !5220
  %113 = call i32* @__errno_location() #14, !dbg !5221
  %114 = load i32, i32* %113, align 4, !dbg !5221
  store i32 %114, i32* %8, align 4, !dbg !5220
  %115 = load i32, i32* %7, align 4, !dbg !5222
  %116 = call i32 @close(i32 %115), !dbg !5223
  %117 = load i32, i32* %8, align 4, !dbg !5224
  %118 = call i32* @__errno_location() #14, !dbg !5224
  store i32 %117, i32* %118, align 4, !dbg !5224
  store %struct._ftsent* null, %struct._ftsent** %3, align 8, !dbg !5225
  br label %126, !dbg !5225

; <label>:119:                                    ; preds = %108
  %120 = load i32, i32* %7, align 4, !dbg !5226
  %121 = call i32 @close(i32 %120), !dbg !5227
  br label %122

; <label>:122:                                    ; preds = %119, %105
  %123 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !5228
  %124 = getelementptr inbounds %struct.FTS, %struct.FTS* %123, i32 0, i32 1, !dbg !5229
  %125 = load %struct._ftsent*, %struct._ftsent** %124, align 8, !dbg !5229
  store %struct._ftsent* %125, %struct._ftsent** %3, align 8, !dbg !5230
  br label %126, !dbg !5230

; <label>:126:                                    ; preds = %122, %112, %91, %81, %43, %33, %26, %14
  %127 = load %struct._ftsent*, %struct._ftsent** %3, align 8, !dbg !5231
  ret %struct._ftsent* %127, !dbg !5231
}

; Function Attrs: noinline nounwind uwtable
define i64 @hash_get_n_buckets(%struct.hash_table*) #3 !dbg !5232 {
  %2 = alloca %struct.hash_table*, align 8
  store %struct.hash_table* %0, %struct.hash_table** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.hash_table** %2, metadata !5264, metadata !DIExpression()), !dbg !5265
  %3 = load %struct.hash_table*, %struct.hash_table** %2, align 8, !dbg !5266
  %4 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %3, i32 0, i32 2, !dbg !5267
  %5 = load i64, i64* %4, align 8, !dbg !5267
  ret i64 %5, !dbg !5268
}

; Function Attrs: noinline nounwind uwtable
define i64 @hash_get_n_buckets_used(%struct.hash_table*) #3 !dbg !5269 {
  %2 = alloca %struct.hash_table*, align 8
  store %struct.hash_table* %0, %struct.hash_table** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.hash_table** %2, metadata !5270, metadata !DIExpression()), !dbg !5271
  %3 = load %struct.hash_table*, %struct.hash_table** %2, align 8, !dbg !5272
  %4 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %3, i32 0, i32 3, !dbg !5273
  %5 = load i64, i64* %4, align 8, !dbg !5273
  ret i64 %5, !dbg !5274
}

; Function Attrs: noinline nounwind uwtable
define i64 @hash_get_n_entries(%struct.hash_table*) #3 !dbg !5275 {
  %2 = alloca %struct.hash_table*, align 8
  store %struct.hash_table* %0, %struct.hash_table** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.hash_table** %2, metadata !5276, metadata !DIExpression()), !dbg !5277
  %3 = load %struct.hash_table*, %struct.hash_table** %2, align 8, !dbg !5278
  %4 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %3, i32 0, i32 4, !dbg !5279
  %5 = load i64, i64* %4, align 8, !dbg !5279
  ret i64 %5, !dbg !5280
}

; Function Attrs: noinline nounwind uwtable
define i64 @hash_get_max_bucket_length(%struct.hash_table*) #3 !dbg !5281 {
  %2 = alloca %struct.hash_table*, align 8
  %3 = alloca %struct.hash_entry*, align 8
  %4 = alloca i64, align 8
  %5 = alloca %struct.hash_entry*, align 8
  %6 = alloca i64, align 8
  store %struct.hash_table* %0, %struct.hash_table** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.hash_table** %2, metadata !5282, metadata !DIExpression()), !dbg !5283
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %3, metadata !5284, metadata !DIExpression()), !dbg !5285
  call void @llvm.dbg.declare(metadata i64* %4, metadata !5286, metadata !DIExpression()), !dbg !5287
  store i64 0, i64* %4, align 8, !dbg !5287
  %7 = load %struct.hash_table*, %struct.hash_table** %2, align 8, !dbg !5288
  %8 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %7, i32 0, i32 0, !dbg !5290
  %9 = load %struct.hash_entry*, %struct.hash_entry** %8, align 8, !dbg !5290
  store %struct.hash_entry* %9, %struct.hash_entry** %3, align 8, !dbg !5291
  br label %10, !dbg !5292

; <label>:10:                                     ; preds = %40, %1
  %11 = load %struct.hash_entry*, %struct.hash_entry** %3, align 8, !dbg !5293
  %12 = load %struct.hash_table*, %struct.hash_table** %2, align 8, !dbg !5295
  %13 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %12, i32 0, i32 1, !dbg !5296
  %14 = load %struct.hash_entry*, %struct.hash_entry** %13, align 8, !dbg !5296
  %15 = icmp ult %struct.hash_entry* %11, %14, !dbg !5297
  br i1 %15, label %16, label %43, !dbg !5298

; <label>:16:                                     ; preds = %10
  %17 = load %struct.hash_entry*, %struct.hash_entry** %3, align 8, !dbg !5299
  %18 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %17, i32 0, i32 0, !dbg !5302
  %19 = load i8*, i8** %18, align 8, !dbg !5302
  %20 = icmp ne i8* %19, null, !dbg !5299
  br i1 %20, label %21, label %39, !dbg !5303

; <label>:21:                                     ; preds = %16
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %5, metadata !5304, metadata !DIExpression()), !dbg !5306
  %22 = load %struct.hash_entry*, %struct.hash_entry** %3, align 8, !dbg !5307
  store %struct.hash_entry* %22, %struct.hash_entry** %5, align 8, !dbg !5306
  call void @llvm.dbg.declare(metadata i64* %6, metadata !5308, metadata !DIExpression()), !dbg !5309
  store i64 1, i64* %6, align 8, !dbg !5309
  br label %23, !dbg !5310

; <label>:23:                                     ; preds = %29, %21
  %24 = load %struct.hash_entry*, %struct.hash_entry** %5, align 8, !dbg !5311
  %25 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %24, i32 0, i32 1, !dbg !5312
  %26 = load %struct.hash_entry*, %struct.hash_entry** %25, align 8, !dbg !5312
  store %struct.hash_entry* %26, %struct.hash_entry** %5, align 8, !dbg !5313
  %27 = load %struct.hash_entry*, %struct.hash_entry** %5, align 8, !dbg !5314
  %28 = icmp ne %struct.hash_entry* %27, null, !dbg !5310
  br i1 %28, label %29, label %32, !dbg !5310

; <label>:29:                                     ; preds = %23
  %30 = load i64, i64* %6, align 8, !dbg !5315
  %31 = add i64 %30, 1, !dbg !5315
  store i64 %31, i64* %6, align 8, !dbg !5315
  br label %23, !dbg !5310, !llvm.loop !5316

; <label>:32:                                     ; preds = %23
  %33 = load i64, i64* %6, align 8, !dbg !5317
  %34 = load i64, i64* %4, align 8, !dbg !5319
  %35 = icmp ugt i64 %33, %34, !dbg !5320
  br i1 %35, label %36, label %38, !dbg !5321

; <label>:36:                                     ; preds = %32
  %37 = load i64, i64* %6, align 8, !dbg !5322
  store i64 %37, i64* %4, align 8, !dbg !5323
  br label %38, !dbg !5324

; <label>:38:                                     ; preds = %36, %32
  br label %39, !dbg !5325

; <label>:39:                                     ; preds = %38, %16
  br label %40, !dbg !5326

; <label>:40:                                     ; preds = %39
  %41 = load %struct.hash_entry*, %struct.hash_entry** %3, align 8, !dbg !5327
  %42 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %41, i32 1, !dbg !5327
  store %struct.hash_entry* %42, %struct.hash_entry** %3, align 8, !dbg !5327
  br label %10, !dbg !5328, !llvm.loop !5329

; <label>:43:                                     ; preds = %10
  %44 = load i64, i64* %4, align 8, !dbg !5331
  ret i64 %44, !dbg !5332
}

; Function Attrs: noinline nounwind uwtable
define zeroext i1 @hash_table_ok(%struct.hash_table*) #3 !dbg !5333 {
  %2 = alloca i1, align 1
  %3 = alloca %struct.hash_table*, align 8
  %4 = alloca %struct.hash_entry*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca %struct.hash_entry*, align 8
  store %struct.hash_table* %0, %struct.hash_table** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.hash_table** %3, metadata !5336, metadata !DIExpression()), !dbg !5337
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %4, metadata !5338, metadata !DIExpression()), !dbg !5339
  call void @llvm.dbg.declare(metadata i64* %5, metadata !5340, metadata !DIExpression()), !dbg !5341
  store i64 0, i64* %5, align 8, !dbg !5341
  call void @llvm.dbg.declare(metadata i64* %6, metadata !5342, metadata !DIExpression()), !dbg !5343
  store i64 0, i64* %6, align 8, !dbg !5343
  %8 = load %struct.hash_table*, %struct.hash_table** %3, align 8, !dbg !5344
  %9 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %8, i32 0, i32 0, !dbg !5346
  %10 = load %struct.hash_entry*, %struct.hash_entry** %9, align 8, !dbg !5346
  store %struct.hash_entry* %10, %struct.hash_entry** %4, align 8, !dbg !5347
  br label %11, !dbg !5348

; <label>:11:                                     ; preds = %39, %1
  %12 = load %struct.hash_entry*, %struct.hash_entry** %4, align 8, !dbg !5349
  %13 = load %struct.hash_table*, %struct.hash_table** %3, align 8, !dbg !5351
  %14 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %13, i32 0, i32 1, !dbg !5352
  %15 = load %struct.hash_entry*, %struct.hash_entry** %14, align 8, !dbg !5352
  %16 = icmp ult %struct.hash_entry* %12, %15, !dbg !5353
  br i1 %16, label %17, label %42, !dbg !5354

; <label>:17:                                     ; preds = %11
  %18 = load %struct.hash_entry*, %struct.hash_entry** %4, align 8, !dbg !5355
  %19 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %18, i32 0, i32 0, !dbg !5358
  %20 = load i8*, i8** %19, align 8, !dbg !5358
  %21 = icmp ne i8* %20, null, !dbg !5355
  br i1 %21, label %22, label %38, !dbg !5359

; <label>:22:                                     ; preds = %17
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %7, metadata !5360, metadata !DIExpression()), !dbg !5362
  %23 = load %struct.hash_entry*, %struct.hash_entry** %4, align 8, !dbg !5363
  store %struct.hash_entry* %23, %struct.hash_entry** %7, align 8, !dbg !5362
  %24 = load i64, i64* %5, align 8, !dbg !5364
  %25 = add i64 %24, 1, !dbg !5364
  store i64 %25, i64* %5, align 8, !dbg !5364
  %26 = load i64, i64* %6, align 8, !dbg !5365
  %27 = add i64 %26, 1, !dbg !5365
  store i64 %27, i64* %6, align 8, !dbg !5365
  br label %28, !dbg !5366

; <label>:28:                                     ; preds = %34, %22
  %29 = load %struct.hash_entry*, %struct.hash_entry** %7, align 8, !dbg !5367
  %30 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %29, i32 0, i32 1, !dbg !5368
  %31 = load %struct.hash_entry*, %struct.hash_entry** %30, align 8, !dbg !5368
  store %struct.hash_entry* %31, %struct.hash_entry** %7, align 8, !dbg !5369
  %32 = load %struct.hash_entry*, %struct.hash_entry** %7, align 8, !dbg !5370
  %33 = icmp ne %struct.hash_entry* %32, null, !dbg !5366
  br i1 %33, label %34, label %37, !dbg !5366

; <label>:34:                                     ; preds = %28
  %35 = load i64, i64* %6, align 8, !dbg !5371
  %36 = add i64 %35, 1, !dbg !5371
  store i64 %36, i64* %6, align 8, !dbg !5371
  br label %28, !dbg !5366, !llvm.loop !5372

; <label>:37:                                     ; preds = %28
  br label %38, !dbg !5373

; <label>:38:                                     ; preds = %37, %17
  br label %39, !dbg !5374

; <label>:39:                                     ; preds = %38
  %40 = load %struct.hash_entry*, %struct.hash_entry** %4, align 8, !dbg !5375
  %41 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %40, i32 1, !dbg !5375
  store %struct.hash_entry* %41, %struct.hash_entry** %4, align 8, !dbg !5375
  br label %11, !dbg !5376, !llvm.loop !5377

; <label>:42:                                     ; preds = %11
  %43 = load i64, i64* %5, align 8, !dbg !5379
  %44 = load %struct.hash_table*, %struct.hash_table** %3, align 8, !dbg !5381
  %45 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %44, i32 0, i32 3, !dbg !5382
  %46 = load i64, i64* %45, align 8, !dbg !5382
  %47 = icmp eq i64 %43, %46, !dbg !5383
  br i1 %47, label %48, label %55, !dbg !5384

; <label>:48:                                     ; preds = %42
  %49 = load i64, i64* %6, align 8, !dbg !5385
  %50 = load %struct.hash_table*, %struct.hash_table** %3, align 8, !dbg !5386
  %51 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %50, i32 0, i32 4, !dbg !5387
  %52 = load i64, i64* %51, align 8, !dbg !5387
  %53 = icmp eq i64 %49, %52, !dbg !5388
  br i1 %53, label %54, label %55, !dbg !5389

; <label>:54:                                     ; preds = %48
  store i1 true, i1* %2, align 1, !dbg !5390
  br label %56, !dbg !5390

; <label>:55:                                     ; preds = %48, %42
  store i1 false, i1* %2, align 1, !dbg !5391
  br label %56, !dbg !5391

; <label>:56:                                     ; preds = %55, %54
  %57 = load i1, i1* %2, align 1, !dbg !5392
  ret i1 %57, !dbg !5392
}

; Function Attrs: noinline nounwind uwtable
define void @hash_print_statistics(%struct.hash_table*, %struct._IO_FILE*) #3 !dbg !5393 {
  %3 = alloca %struct.hash_table*, align 8
  %4 = alloca %struct._IO_FILE*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  store %struct.hash_table* %0, %struct.hash_table** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.hash_table** %3, metadata !5436, metadata !DIExpression()), !dbg !5437
  store %struct._IO_FILE* %1, %struct._IO_FILE** %4, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %4, metadata !5438, metadata !DIExpression()), !dbg !5439
  call void @llvm.dbg.declare(metadata i64* %5, metadata !5440, metadata !DIExpression()), !dbg !5441
  %9 = load %struct.hash_table*, %struct.hash_table** %3, align 8, !dbg !5442
  %10 = call i64 @hash_get_n_entries(%struct.hash_table* %9), !dbg !5443
  store i64 %10, i64* %5, align 8, !dbg !5441
  call void @llvm.dbg.declare(metadata i64* %6, metadata !5444, metadata !DIExpression()), !dbg !5445
  %11 = load %struct.hash_table*, %struct.hash_table** %3, align 8, !dbg !5446
  %12 = call i64 @hash_get_n_buckets(%struct.hash_table* %11), !dbg !5447
  store i64 %12, i64* %6, align 8, !dbg !5445
  call void @llvm.dbg.declare(metadata i64* %7, metadata !5448, metadata !DIExpression()), !dbg !5449
  %13 = load %struct.hash_table*, %struct.hash_table** %3, align 8, !dbg !5450
  %14 = call i64 @hash_get_n_buckets_used(%struct.hash_table* %13), !dbg !5451
  store i64 %14, i64* %7, align 8, !dbg !5449
  call void @llvm.dbg.declare(metadata i64* %8, metadata !5452, metadata !DIExpression()), !dbg !5453
  %15 = load %struct.hash_table*, %struct.hash_table** %3, align 8, !dbg !5454
  %16 = call i64 @hash_get_max_bucket_length(%struct.hash_table* %15), !dbg !5455
  store i64 %16, i64* %8, align 8, !dbg !5453
  %17 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8, !dbg !5456
  %18 = load i64, i64* %5, align 8, !dbg !5457
  %19 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %17, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.121, i32 0, i32 0), i64 %18), !dbg !5458
  %20 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8, !dbg !5459
  %21 = load i64, i64* %6, align 8, !dbg !5460
  %22 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %20, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.1.122, i32 0, i32 0), i64 %21), !dbg !5461
  %23 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8, !dbg !5462
  %24 = load i64, i64* %7, align 8, !dbg !5463
  %25 = load i64, i64* %7, align 8, !dbg !5464
  %26 = uitofp i64 %25 to double, !dbg !5464
  %27 = fmul double 1.000000e+02, %26, !dbg !5465
  %28 = load i64, i64* %6, align 8, !dbg !5466
  %29 = uitofp i64 %28 to double, !dbg !5466
  %30 = fdiv double %27, %29, !dbg !5467
  %31 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %23, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.2.123, i32 0, i32 0), i64 %24, double %30), !dbg !5468
  %32 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8, !dbg !5469
  %33 = load i64, i64* %8, align 8, !dbg !5470
  %34 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %32, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.124, i32 0, i32 0), i64 %33), !dbg !5471
  ret void, !dbg !5472
}

; Function Attrs: noinline nounwind uwtable
define i8* @hash_lookup(%struct.hash_table*, i8*) #3 !dbg !5473 {
  %3 = alloca i8*, align 8
  %4 = alloca %struct.hash_table*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca %struct.hash_entry*, align 8
  %7 = alloca %struct.hash_entry*, align 8
  store %struct.hash_table* %0, %struct.hash_table** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.hash_table** %4, metadata !5476, metadata !DIExpression()), !dbg !5477
  store i8* %1, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !5478, metadata !DIExpression()), !dbg !5479
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %6, metadata !5480, metadata !DIExpression()), !dbg !5481
  %8 = load %struct.hash_table*, %struct.hash_table** %4, align 8, !dbg !5482
  %9 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %8, i32 0, i32 0, !dbg !5483
  %10 = load %struct.hash_entry*, %struct.hash_entry** %9, align 8, !dbg !5483
  %11 = load %struct.hash_table*, %struct.hash_table** %4, align 8, !dbg !5484
  %12 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %11, i32 0, i32 6, !dbg !5485
  %13 = load i64 (i8*, i64)*, i64 (i8*, i64)** %12, align 8, !dbg !5485
  %14 = load i8*, i8** %5, align 8, !dbg !5486
  %15 = load %struct.hash_table*, %struct.hash_table** %4, align 8, !dbg !5487
  %16 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %15, i32 0, i32 2, !dbg !5488
  %17 = load i64, i64* %16, align 8, !dbg !5488
  %18 = call i64 %13(i8* %14, i64 %17), !dbg !5484
  %19 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %10, i64 %18, !dbg !5489
  store %struct.hash_entry* %19, %struct.hash_entry** %6, align 8, !dbg !5481
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %7, metadata !5490, metadata !DIExpression()), !dbg !5491
  %20 = load %struct.hash_entry*, %struct.hash_entry** %6, align 8, !dbg !5492
  %21 = load %struct.hash_table*, %struct.hash_table** %4, align 8, !dbg !5494
  %22 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %21, i32 0, i32 1, !dbg !5495
  %23 = load %struct.hash_entry*, %struct.hash_entry** %22, align 8, !dbg !5495
  %24 = icmp ult %struct.hash_entry* %20, %23, !dbg !5496
  br i1 %24, label %26, label %25, !dbg !5497

; <label>:25:                                     ; preds = %2
  call void @abort() #11, !dbg !5498
  unreachable, !dbg !5498

; <label>:26:                                     ; preds = %2
  %27 = load %struct.hash_entry*, %struct.hash_entry** %6, align 8, !dbg !5499
  %28 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %27, i32 0, i32 0, !dbg !5501
  %29 = load i8*, i8** %28, align 8, !dbg !5501
  %30 = icmp eq i8* %29, null, !dbg !5502
  br i1 %30, label %31, label %32, !dbg !5503

; <label>:31:                                     ; preds = %26
  store i8* null, i8** %3, align 8, !dbg !5504
  br label %62, !dbg !5504

; <label>:32:                                     ; preds = %26
  %33 = load %struct.hash_entry*, %struct.hash_entry** %6, align 8, !dbg !5505
  store %struct.hash_entry* %33, %struct.hash_entry** %7, align 8, !dbg !5507
  br label %34, !dbg !5508

; <label>:34:                                     ; preds = %57, %32
  %35 = load %struct.hash_entry*, %struct.hash_entry** %7, align 8, !dbg !5509
  %36 = icmp ne %struct.hash_entry* %35, null, !dbg !5511
  br i1 %36, label %37, label %61, !dbg !5511

; <label>:37:                                     ; preds = %34
  %38 = load i8*, i8** %5, align 8, !dbg !5512
  %39 = load %struct.hash_entry*, %struct.hash_entry** %7, align 8, !dbg !5514
  %40 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %39, i32 0, i32 0, !dbg !5515
  %41 = load i8*, i8** %40, align 8, !dbg !5515
  %42 = icmp eq i8* %38, %41, !dbg !5516
  br i1 %42, label %52, label %43, !dbg !5517

; <label>:43:                                     ; preds = %37
  %44 = load %struct.hash_table*, %struct.hash_table** %4, align 8, !dbg !5518
  %45 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %44, i32 0, i32 7, !dbg !5519
  %46 = load i1 (i8*, i8*)*, i1 (i8*, i8*)** %45, align 8, !dbg !5519
  %47 = load i8*, i8** %5, align 8, !dbg !5520
  %48 = load %struct.hash_entry*, %struct.hash_entry** %7, align 8, !dbg !5521
  %49 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %48, i32 0, i32 0, !dbg !5522
  %50 = load i8*, i8** %49, align 8, !dbg !5522
  %51 = call zeroext i1 %46(i8* %47, i8* %50), !dbg !5518
  br i1 %51, label %52, label %56, !dbg !5523

; <label>:52:                                     ; preds = %43, %37
  %53 = load %struct.hash_entry*, %struct.hash_entry** %7, align 8, !dbg !5524
  %54 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %53, i32 0, i32 0, !dbg !5525
  %55 = load i8*, i8** %54, align 8, !dbg !5525
  store i8* %55, i8** %3, align 8, !dbg !5526
  br label %62, !dbg !5526

; <label>:56:                                     ; preds = %43
  br label %57, !dbg !5527

; <label>:57:                                     ; preds = %56
  %58 = load %struct.hash_entry*, %struct.hash_entry** %7, align 8, !dbg !5528
  %59 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %58, i32 0, i32 1, !dbg !5529
  %60 = load %struct.hash_entry*, %struct.hash_entry** %59, align 8, !dbg !5529
  store %struct.hash_entry* %60, %struct.hash_entry** %7, align 8, !dbg !5530
  br label %34, !dbg !5531, !llvm.loop !5532

; <label>:61:                                     ; preds = %34
  store i8* null, i8** %3, align 8, !dbg !5534
  br label %62, !dbg !5534

; <label>:62:                                     ; preds = %61, %52, %31
  %63 = load i8*, i8** %3, align 8, !dbg !5535
  ret i8* %63, !dbg !5535
}

; Function Attrs: noinline nounwind uwtable
define i8* @hash_get_first(%struct.hash_table*) #3 !dbg !5536 {
  %2 = alloca i8*, align 8
  %3 = alloca %struct.hash_table*, align 8
  %4 = alloca %struct.hash_entry*, align 8
  store %struct.hash_table* %0, %struct.hash_table** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.hash_table** %3, metadata !5539, metadata !DIExpression()), !dbg !5540
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %4, metadata !5541, metadata !DIExpression()), !dbg !5542
  %5 = load %struct.hash_table*, %struct.hash_table** %3, align 8, !dbg !5543
  %6 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %5, i32 0, i32 4, !dbg !5545
  %7 = load i64, i64* %6, align 8, !dbg !5545
  %8 = icmp eq i64 %7, 0, !dbg !5546
  br i1 %8, label %9, label %10, !dbg !5547

; <label>:9:                                      ; preds = %1
  store i8* null, i8** %2, align 8, !dbg !5548
  br label %35, !dbg !5548

; <label>:10:                                     ; preds = %1
  %11 = load %struct.hash_table*, %struct.hash_table** %3, align 8, !dbg !5549
  %12 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %11, i32 0, i32 0, !dbg !5551
  %13 = load %struct.hash_entry*, %struct.hash_entry** %12, align 8, !dbg !5551
  store %struct.hash_entry* %13, %struct.hash_entry** %4, align 8, !dbg !5552
  br label %14, !dbg !5553

; <label>:14:                                     ; preds = %32, %10
  %15 = load %struct.hash_entry*, %struct.hash_entry** %4, align 8, !dbg !5554
  %16 = load %struct.hash_table*, %struct.hash_table** %3, align 8, !dbg !5557
  %17 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %16, i32 0, i32 1, !dbg !5558
  %18 = load %struct.hash_entry*, %struct.hash_entry** %17, align 8, !dbg !5558
  %19 = icmp ult %struct.hash_entry* %15, %18, !dbg !5559
  br i1 %19, label %21, label %20, !dbg !5560

; <label>:20:                                     ; preds = %14
  call void @abort() #11, !dbg !5561
  unreachable, !dbg !5561

; <label>:21:                                     ; preds = %14
  %22 = load %struct.hash_entry*, %struct.hash_entry** %4, align 8, !dbg !5562
  %23 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %22, i32 0, i32 0, !dbg !5564
  %24 = load i8*, i8** %23, align 8, !dbg !5564
  %25 = icmp ne i8* %24, null, !dbg !5562
  br i1 %25, label %26, label %30, !dbg !5565

; <label>:26:                                     ; preds = %21
  %27 = load %struct.hash_entry*, %struct.hash_entry** %4, align 8, !dbg !5566
  %28 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %27, i32 0, i32 0, !dbg !5567
  %29 = load i8*, i8** %28, align 8, !dbg !5567
  store i8* %29, i8** %2, align 8, !dbg !5568
  br label %35, !dbg !5568

; <label>:30:                                     ; preds = %21
  br label %31

; <label>:31:                                     ; preds = %30
  br label %32, !dbg !5569

; <label>:32:                                     ; preds = %31
  %33 = load %struct.hash_entry*, %struct.hash_entry** %4, align 8, !dbg !5570
  %34 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %33, i32 1, !dbg !5570
  store %struct.hash_entry* %34, %struct.hash_entry** %4, align 8, !dbg !5570
  br label %14, !dbg !5571, !llvm.loop !5572

; <label>:35:                                     ; preds = %26, %9
  %36 = load i8*, i8** %2, align 8, !dbg !5575
  ret i8* %36, !dbg !5575
}

; Function Attrs: noinline nounwind uwtable
define i8* @hash_get_next(%struct.hash_table*, i8*) #3 !dbg !5576 {
  %3 = alloca i8*, align 8
  %4 = alloca %struct.hash_table*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca %struct.hash_entry*, align 8
  %7 = alloca %struct.hash_entry*, align 8
  store %struct.hash_table* %0, %struct.hash_table** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.hash_table** %4, metadata !5577, metadata !DIExpression()), !dbg !5578
  store i8* %1, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !5579, metadata !DIExpression()), !dbg !5580
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %6, metadata !5581, metadata !DIExpression()), !dbg !5582
  %8 = load %struct.hash_table*, %struct.hash_table** %4, align 8, !dbg !5583
  %9 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %8, i32 0, i32 0, !dbg !5584
  %10 = load %struct.hash_entry*, %struct.hash_entry** %9, align 8, !dbg !5584
  %11 = load %struct.hash_table*, %struct.hash_table** %4, align 8, !dbg !5585
  %12 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %11, i32 0, i32 6, !dbg !5586
  %13 = load i64 (i8*, i64)*, i64 (i8*, i64)** %12, align 8, !dbg !5586
  %14 = load i8*, i8** %5, align 8, !dbg !5587
  %15 = load %struct.hash_table*, %struct.hash_table** %4, align 8, !dbg !5588
  %16 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %15, i32 0, i32 2, !dbg !5589
  %17 = load i64, i64* %16, align 8, !dbg !5589
  %18 = call i64 %13(i8* %14, i64 %17), !dbg !5585
  %19 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %10, i64 %18, !dbg !5590
  store %struct.hash_entry* %19, %struct.hash_entry** %6, align 8, !dbg !5582
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %7, metadata !5591, metadata !DIExpression()), !dbg !5592
  %20 = load %struct.hash_entry*, %struct.hash_entry** %6, align 8, !dbg !5593
  %21 = load %struct.hash_table*, %struct.hash_table** %4, align 8, !dbg !5595
  %22 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %21, i32 0, i32 1, !dbg !5596
  %23 = load %struct.hash_entry*, %struct.hash_entry** %22, align 8, !dbg !5596
  %24 = icmp ult %struct.hash_entry* %20, %23, !dbg !5597
  br i1 %24, label %26, label %25, !dbg !5598

; <label>:25:                                     ; preds = %2
  call void @abort() #11, !dbg !5599
  unreachable, !dbg !5599

; <label>:26:                                     ; preds = %2
  %27 = load %struct.hash_entry*, %struct.hash_entry** %6, align 8, !dbg !5600
  store %struct.hash_entry* %27, %struct.hash_entry** %7, align 8, !dbg !5602
  br label %28, !dbg !5603

; <label>:28:                                     ; preds = %49, %26
  %29 = load %struct.hash_entry*, %struct.hash_entry** %7, align 8, !dbg !5604
  %30 = icmp ne %struct.hash_entry* %29, null, !dbg !5606
  br i1 %30, label %31, label %53, !dbg !5606

; <label>:31:                                     ; preds = %28
  %32 = load %struct.hash_entry*, %struct.hash_entry** %7, align 8, !dbg !5607
  %33 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %32, i32 0, i32 0, !dbg !5609
  %34 = load i8*, i8** %33, align 8, !dbg !5609
  %35 = load i8*, i8** %5, align 8, !dbg !5610
  %36 = icmp eq i8* %34, %35, !dbg !5611
  br i1 %36, label %37, label %48, !dbg !5612

; <label>:37:                                     ; preds = %31
  %38 = load %struct.hash_entry*, %struct.hash_entry** %7, align 8, !dbg !5613
  %39 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %38, i32 0, i32 1, !dbg !5614
  %40 = load %struct.hash_entry*, %struct.hash_entry** %39, align 8, !dbg !5614
  %41 = icmp ne %struct.hash_entry* %40, null, !dbg !5613
  br i1 %41, label %42, label %48, !dbg !5615

; <label>:42:                                     ; preds = %37
  %43 = load %struct.hash_entry*, %struct.hash_entry** %7, align 8, !dbg !5616
  %44 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %43, i32 0, i32 1, !dbg !5617
  %45 = load %struct.hash_entry*, %struct.hash_entry** %44, align 8, !dbg !5617
  %46 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %45, i32 0, i32 0, !dbg !5618
  %47 = load i8*, i8** %46, align 8, !dbg !5618
  store i8* %47, i8** %3, align 8, !dbg !5619
  br label %72, !dbg !5619

; <label>:48:                                     ; preds = %37, %31
  br label %49, !dbg !5614

; <label>:49:                                     ; preds = %48
  %50 = load %struct.hash_entry*, %struct.hash_entry** %7, align 8, !dbg !5620
  %51 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %50, i32 0, i32 1, !dbg !5621
  %52 = load %struct.hash_entry*, %struct.hash_entry** %51, align 8, !dbg !5621
  store %struct.hash_entry* %52, %struct.hash_entry** %7, align 8, !dbg !5622
  br label %28, !dbg !5623, !llvm.loop !5624

; <label>:53:                                     ; preds = %28
  br label %54, !dbg !5626

; <label>:54:                                     ; preds = %70, %53
  %55 = load %struct.hash_entry*, %struct.hash_entry** %6, align 8, !dbg !5627
  %56 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %55, i32 1, !dbg !5627
  store %struct.hash_entry* %56, %struct.hash_entry** %6, align 8, !dbg !5627
  %57 = load %struct.hash_table*, %struct.hash_table** %4, align 8, !dbg !5628
  %58 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %57, i32 0, i32 1, !dbg !5629
  %59 = load %struct.hash_entry*, %struct.hash_entry** %58, align 8, !dbg !5629
  %60 = icmp ult %struct.hash_entry* %56, %59, !dbg !5630
  br i1 %60, label %61, label %71, !dbg !5626

; <label>:61:                                     ; preds = %54
  %62 = load %struct.hash_entry*, %struct.hash_entry** %6, align 8, !dbg !5631
  %63 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %62, i32 0, i32 0, !dbg !5633
  %64 = load i8*, i8** %63, align 8, !dbg !5633
  %65 = icmp ne i8* %64, null, !dbg !5631
  br i1 %65, label %66, label %70, !dbg !5634

; <label>:66:                                     ; preds = %61
  %67 = load %struct.hash_entry*, %struct.hash_entry** %6, align 8, !dbg !5635
  %68 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %67, i32 0, i32 0, !dbg !5636
  %69 = load i8*, i8** %68, align 8, !dbg !5636
  store i8* %69, i8** %3, align 8, !dbg !5637
  br label %72, !dbg !5637

; <label>:70:                                     ; preds = %61
  br label %54, !dbg !5626, !llvm.loop !5638

; <label>:71:                                     ; preds = %54
  store i8* null, i8** %3, align 8, !dbg !5640
  br label %72, !dbg !5640

; <label>:72:                                     ; preds = %71, %66, %42
  %73 = load i8*, i8** %3, align 8, !dbg !5641
  ret i8* %73, !dbg !5641
}

; Function Attrs: noinline nounwind uwtable
define i64 @hash_get_entries(%struct.hash_table*, i8**, i64) #3 !dbg !5642 {
  %4 = alloca i64, align 8
  %5 = alloca %struct.hash_table*, align 8
  %6 = alloca i8**, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca %struct.hash_entry*, align 8
  %10 = alloca %struct.hash_entry*, align 8
  store %struct.hash_table* %0, %struct.hash_table** %5, align 8
  call void @llvm.dbg.declare(metadata %struct.hash_table** %5, metadata !5646, metadata !DIExpression()), !dbg !5647
  store i8** %1, i8*** %6, align 8
  call void @llvm.dbg.declare(metadata i8*** %6, metadata !5648, metadata !DIExpression()), !dbg !5649
  store i64 %2, i64* %7, align 8
  call void @llvm.dbg.declare(metadata i64* %7, metadata !5650, metadata !DIExpression()), !dbg !5651
  call void @llvm.dbg.declare(metadata i64* %8, metadata !5652, metadata !DIExpression()), !dbg !5653
  store i64 0, i64* %8, align 8, !dbg !5653
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %9, metadata !5654, metadata !DIExpression()), !dbg !5655
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %10, metadata !5656, metadata !DIExpression()), !dbg !5657
  %11 = load %struct.hash_table*, %struct.hash_table** %5, align 8, !dbg !5658
  %12 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %11, i32 0, i32 0, !dbg !5660
  %13 = load %struct.hash_entry*, %struct.hash_entry** %12, align 8, !dbg !5660
  store %struct.hash_entry* %13, %struct.hash_entry** %9, align 8, !dbg !5661
  br label %14, !dbg !5662

; <label>:14:                                     ; preds = %50, %3
  %15 = load %struct.hash_entry*, %struct.hash_entry** %9, align 8, !dbg !5663
  %16 = load %struct.hash_table*, %struct.hash_table** %5, align 8, !dbg !5665
  %17 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %16, i32 0, i32 1, !dbg !5666
  %18 = load %struct.hash_entry*, %struct.hash_entry** %17, align 8, !dbg !5666
  %19 = icmp ult %struct.hash_entry* %15, %18, !dbg !5667
  br i1 %19, label %20, label %53, !dbg !5668

; <label>:20:                                     ; preds = %14
  %21 = load %struct.hash_entry*, %struct.hash_entry** %9, align 8, !dbg !5669
  %22 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %21, i32 0, i32 0, !dbg !5672
  %23 = load i8*, i8** %22, align 8, !dbg !5672
  %24 = icmp ne i8* %23, null, !dbg !5669
  br i1 %24, label %25, label %49, !dbg !5673

; <label>:25:                                     ; preds = %20
  %26 = load %struct.hash_entry*, %struct.hash_entry** %9, align 8, !dbg !5674
  store %struct.hash_entry* %26, %struct.hash_entry** %10, align 8, !dbg !5677
  br label %27, !dbg !5678

; <label>:27:                                     ; preds = %44, %25
  %28 = load %struct.hash_entry*, %struct.hash_entry** %10, align 8, !dbg !5679
  %29 = icmp ne %struct.hash_entry* %28, null, !dbg !5681
  br i1 %29, label %30, label %48, !dbg !5681

; <label>:30:                                     ; preds = %27
  %31 = load i64, i64* %8, align 8, !dbg !5682
  %32 = load i64, i64* %7, align 8, !dbg !5685
  %33 = icmp uge i64 %31, %32, !dbg !5686
  br i1 %33, label %34, label %36, !dbg !5687

; <label>:34:                                     ; preds = %30
  %35 = load i64, i64* %8, align 8, !dbg !5688
  store i64 %35, i64* %4, align 8, !dbg !5689
  br label %55, !dbg !5689

; <label>:36:                                     ; preds = %30
  %37 = load %struct.hash_entry*, %struct.hash_entry** %10, align 8, !dbg !5690
  %38 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %37, i32 0, i32 0, !dbg !5691
  %39 = load i8*, i8** %38, align 8, !dbg !5691
  %40 = load i8**, i8*** %6, align 8, !dbg !5692
  %41 = load i64, i64* %8, align 8, !dbg !5693
  %42 = add i64 %41, 1, !dbg !5693
  store i64 %42, i64* %8, align 8, !dbg !5693
  %43 = getelementptr inbounds i8*, i8** %40, i64 %41, !dbg !5692
  store i8* %39, i8** %43, align 8, !dbg !5694
  br label %44, !dbg !5695

; <label>:44:                                     ; preds = %36
  %45 = load %struct.hash_entry*, %struct.hash_entry** %10, align 8, !dbg !5696
  %46 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %45, i32 0, i32 1, !dbg !5697
  %47 = load %struct.hash_entry*, %struct.hash_entry** %46, align 8, !dbg !5697
  store %struct.hash_entry* %47, %struct.hash_entry** %10, align 8, !dbg !5698
  br label %27, !dbg !5699, !llvm.loop !5700

; <label>:48:                                     ; preds = %27
  br label %49, !dbg !5702

; <label>:49:                                     ; preds = %48, %20
  br label %50, !dbg !5703

; <label>:50:                                     ; preds = %49
  %51 = load %struct.hash_entry*, %struct.hash_entry** %9, align 8, !dbg !5704
  %52 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %51, i32 1, !dbg !5704
  store %struct.hash_entry* %52, %struct.hash_entry** %9, align 8, !dbg !5704
  br label %14, !dbg !5705, !llvm.loop !5706

; <label>:53:                                     ; preds = %14
  %54 = load i64, i64* %8, align 8, !dbg !5708
  store i64 %54, i64* %4, align 8, !dbg !5709
  br label %55, !dbg !5709

; <label>:55:                                     ; preds = %53, %34
  %56 = load i64, i64* %4, align 8, !dbg !5710
  ret i64 %56, !dbg !5710
}

; Function Attrs: noinline nounwind uwtable
define i64 @hash_do_for_each(%struct.hash_table*, i1 (i8*, i8*)*, i8*) #3 !dbg !5711 {
  %4 = alloca i64, align 8
  %5 = alloca %struct.hash_table*, align 8
  %6 = alloca i1 (i8*, i8*)*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i64, align 8
  %9 = alloca %struct.hash_entry*, align 8
  %10 = alloca %struct.hash_entry*, align 8
  store %struct.hash_table* %0, %struct.hash_table** %5, align 8
  call void @llvm.dbg.declare(metadata %struct.hash_table** %5, metadata !5718, metadata !DIExpression()), !dbg !5719
  store i1 (i8*, i8*)* %1, i1 (i8*, i8*)** %6, align 8
  call void @llvm.dbg.declare(metadata i1 (i8*, i8*)** %6, metadata !5720, metadata !DIExpression()), !dbg !5721
  store i8* %2, i8** %7, align 8
  call void @llvm.dbg.declare(metadata i8** %7, metadata !5722, metadata !DIExpression()), !dbg !5723
  call void @llvm.dbg.declare(metadata i64* %8, metadata !5724, metadata !DIExpression()), !dbg !5725
  store i64 0, i64* %8, align 8, !dbg !5725
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %9, metadata !5726, metadata !DIExpression()), !dbg !5727
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %10, metadata !5728, metadata !DIExpression()), !dbg !5729
  %11 = load %struct.hash_table*, %struct.hash_table** %5, align 8, !dbg !5730
  %12 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %11, i32 0, i32 0, !dbg !5732
  %13 = load %struct.hash_entry*, %struct.hash_entry** %12, align 8, !dbg !5732
  store %struct.hash_entry* %13, %struct.hash_entry** %9, align 8, !dbg !5733
  br label %14, !dbg !5734

; <label>:14:                                     ; preds = %48, %3
  %15 = load %struct.hash_entry*, %struct.hash_entry** %9, align 8, !dbg !5735
  %16 = load %struct.hash_table*, %struct.hash_table** %5, align 8, !dbg !5737
  %17 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %16, i32 0, i32 1, !dbg !5738
  %18 = load %struct.hash_entry*, %struct.hash_entry** %17, align 8, !dbg !5738
  %19 = icmp ult %struct.hash_entry* %15, %18, !dbg !5739
  br i1 %19, label %20, label %51, !dbg !5740

; <label>:20:                                     ; preds = %14
  %21 = load %struct.hash_entry*, %struct.hash_entry** %9, align 8, !dbg !5741
  %22 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %21, i32 0, i32 0, !dbg !5744
  %23 = load i8*, i8** %22, align 8, !dbg !5744
  %24 = icmp ne i8* %23, null, !dbg !5741
  br i1 %24, label %25, label %47, !dbg !5745

; <label>:25:                                     ; preds = %20
  %26 = load %struct.hash_entry*, %struct.hash_entry** %9, align 8, !dbg !5746
  store %struct.hash_entry* %26, %struct.hash_entry** %10, align 8, !dbg !5749
  br label %27, !dbg !5750

; <label>:27:                                     ; preds = %42, %25
  %28 = load %struct.hash_entry*, %struct.hash_entry** %10, align 8, !dbg !5751
  %29 = icmp ne %struct.hash_entry* %28, null, !dbg !5753
  br i1 %29, label %30, label %46, !dbg !5753

; <label>:30:                                     ; preds = %27
  %31 = load i1 (i8*, i8*)*, i1 (i8*, i8*)** %6, align 8, !dbg !5754
  %32 = load %struct.hash_entry*, %struct.hash_entry** %10, align 8, !dbg !5757
  %33 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %32, i32 0, i32 0, !dbg !5758
  %34 = load i8*, i8** %33, align 8, !dbg !5758
  %35 = load i8*, i8** %7, align 8, !dbg !5759
  %36 = call zeroext i1 %31(i8* %34, i8* %35), !dbg !5754
  br i1 %36, label %39, label %37, !dbg !5760

; <label>:37:                                     ; preds = %30
  %38 = load i64, i64* %8, align 8, !dbg !5761
  store i64 %38, i64* %4, align 8, !dbg !5762
  br label %53, !dbg !5762

; <label>:39:                                     ; preds = %30
  %40 = load i64, i64* %8, align 8, !dbg !5763
  %41 = add i64 %40, 1, !dbg !5763
  store i64 %41, i64* %8, align 8, !dbg !5763
  br label %42, !dbg !5764

; <label>:42:                                     ; preds = %39
  %43 = load %struct.hash_entry*, %struct.hash_entry** %10, align 8, !dbg !5765
  %44 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %43, i32 0, i32 1, !dbg !5766
  %45 = load %struct.hash_entry*, %struct.hash_entry** %44, align 8, !dbg !5766
  store %struct.hash_entry* %45, %struct.hash_entry** %10, align 8, !dbg !5767
  br label %27, !dbg !5768, !llvm.loop !5769

; <label>:46:                                     ; preds = %27
  br label %47, !dbg !5771

; <label>:47:                                     ; preds = %46, %20
  br label %48, !dbg !5772

; <label>:48:                                     ; preds = %47
  %49 = load %struct.hash_entry*, %struct.hash_entry** %9, align 8, !dbg !5773
  %50 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %49, i32 1, !dbg !5773
  store %struct.hash_entry* %50, %struct.hash_entry** %9, align 8, !dbg !5773
  br label %14, !dbg !5774, !llvm.loop !5775

; <label>:51:                                     ; preds = %14
  %52 = load i64, i64* %8, align 8, !dbg !5777
  store i64 %52, i64* %4, align 8, !dbg !5778
  br label %53, !dbg !5778

; <label>:53:                                     ; preds = %51, %37
  %54 = load i64, i64* %4, align 8, !dbg !5779
  ret i64 %54, !dbg !5779
}

; Function Attrs: noinline nounwind uwtable
define i64 @hash_string(i8*, i64) #3 !dbg !5780 {
  %3 = alloca i8*, align 8
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = alloca i8, align 1
  store i8* %0, i8** %3, align 8
  call void @llvm.dbg.declare(metadata i8** %3, metadata !5783, metadata !DIExpression()), !dbg !5784
  store i64 %1, i64* %4, align 8
  call void @llvm.dbg.declare(metadata i64* %4, metadata !5785, metadata !DIExpression()), !dbg !5786
  call void @llvm.dbg.declare(metadata i64* %5, metadata !5787, metadata !DIExpression()), !dbg !5788
  store i64 0, i64* %5, align 8, !dbg !5788
  call void @llvm.dbg.declare(metadata i8* %6, metadata !5789, metadata !DIExpression()), !dbg !5790
  br label %7, !dbg !5791

; <label>:7:                                      ; preds = %19, %2
  %8 = load i8*, i8** %3, align 8, !dbg !5792
  %9 = load i8, i8* %8, align 1, !dbg !5795
  store i8 %9, i8* %6, align 1, !dbg !5796
  %10 = icmp ne i8 %9, 0, !dbg !5797
  br i1 %10, label %11, label %22, !dbg !5797

; <label>:11:                                     ; preds = %7
  %12 = load i64, i64* %5, align 8, !dbg !5798
  %13 = mul i64 %12, 31, !dbg !5799
  %14 = load i8, i8* %6, align 1, !dbg !5800
  %15 = zext i8 %14 to i64, !dbg !5800
  %16 = add i64 %13, %15, !dbg !5801
  %17 = load i64, i64* %4, align 8, !dbg !5802
  %18 = urem i64 %16, %17, !dbg !5803
  store i64 %18, i64* %5, align 8, !dbg !5804
  br label %19, !dbg !5805

; <label>:19:                                     ; preds = %11
  %20 = load i8*, i8** %3, align 8, !dbg !5806
  %21 = getelementptr inbounds i8, i8* %20, i32 1, !dbg !5806
  store i8* %21, i8** %3, align 8, !dbg !5806
  br label %7, !dbg !5807, !llvm.loop !5808

; <label>:22:                                     ; preds = %7
  %23 = load i64, i64* %5, align 8, !dbg !5810
  ret i64 %23, !dbg !5811
}

; Function Attrs: noinline nounwind uwtable
define void @hash_reset_tuning(%struct.hash_tuning*) #3 !dbg !5812 {
  %2 = alloca %struct.hash_tuning*, align 8
  store %struct.hash_tuning* %0, %struct.hash_tuning** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.hash_tuning** %2, metadata !5816, metadata !DIExpression()), !dbg !5817
  %3 = load %struct.hash_tuning*, %struct.hash_tuning** %2, align 8, !dbg !5818
  %4 = bitcast %struct.hash_tuning* %3 to i8*, !dbg !5819
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %4, i8* bitcast (%struct.hash_tuning* @default_tuning to i8*), i64 20, i32 4, i1 false), !dbg !5819
  ret void, !dbg !5820
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i32, i1) #10

; Function Attrs: noinline nounwind uwtable
define %struct.hash_table* @hash_initialize(i64, %struct.hash_tuning*, i64 (i8*, i64)*, i1 (i8*, i8*)*, void (i8*)*) #3 !dbg !5821 {
  %6 = alloca %struct.hash_table*, align 8
  %7 = alloca i64, align 8
  %8 = alloca %struct.hash_tuning*, align 8
  %9 = alloca i64 (i8*, i64)*, align 8
  %10 = alloca i1 (i8*, i8*)*, align 8
  %11 = alloca void (i8*)*, align 8
  %12 = alloca %struct.hash_table*, align 8
  store i64 %0, i64* %7, align 8
  call void @llvm.dbg.declare(metadata i64* %7, metadata !5825, metadata !DIExpression()), !dbg !5826
  store %struct.hash_tuning* %1, %struct.hash_tuning** %8, align 8
  call void @llvm.dbg.declare(metadata %struct.hash_tuning** %8, metadata !5827, metadata !DIExpression()), !dbg !5828
  store i64 (i8*, i64)* %2, i64 (i8*, i64)** %9, align 8
  call void @llvm.dbg.declare(metadata i64 (i8*, i64)** %9, metadata !5829, metadata !DIExpression()), !dbg !5830
  store i1 (i8*, i8*)* %3, i1 (i8*, i8*)** %10, align 8
  call void @llvm.dbg.declare(metadata i1 (i8*, i8*)** %10, metadata !5831, metadata !DIExpression()), !dbg !5832
  store void (i8*)* %4, void (i8*)** %11, align 8
  call void @llvm.dbg.declare(metadata void (i8*)** %11, metadata !5833, metadata !DIExpression()), !dbg !5834
  call void @llvm.dbg.declare(metadata %struct.hash_table** %12, metadata !5835, metadata !DIExpression()), !dbg !5836
  %13 = load i64 (i8*, i64)*, i64 (i8*, i64)** %9, align 8, !dbg !5837
  %14 = icmp eq i64 (i8*, i64)* %13, null, !dbg !5839
  br i1 %14, label %15, label %16, !dbg !5840

; <label>:15:                                     ; preds = %5
  store i64 (i8*, i64)* @raw_hasher, i64 (i8*, i64)** %9, align 8, !dbg !5841
  br label %16, !dbg !5842

; <label>:16:                                     ; preds = %15, %5
  %17 = load i1 (i8*, i8*)*, i1 (i8*, i8*)** %10, align 8, !dbg !5843
  %18 = icmp eq i1 (i8*, i8*)* %17, null, !dbg !5845
  br i1 %18, label %19, label %20, !dbg !5846

; <label>:19:                                     ; preds = %16
  store i1 (i8*, i8*)* @raw_comparator, i1 (i8*, i8*)** %10, align 8, !dbg !5847
  br label %20, !dbg !5848

; <label>:20:                                     ; preds = %19, %16
  %21 = call noalias i8* @malloc(i64 80) #8, !dbg !5849
  %22 = bitcast i8* %21 to %struct.hash_table*, !dbg !5849
  store %struct.hash_table* %22, %struct.hash_table** %12, align 8, !dbg !5850
  %23 = load %struct.hash_table*, %struct.hash_table** %12, align 8, !dbg !5851
  %24 = icmp eq %struct.hash_table* %23, null, !dbg !5853
  br i1 %24, label %25, label %26, !dbg !5854

; <label>:25:                                     ; preds = %20
  store %struct.hash_table* null, %struct.hash_table** %6, align 8, !dbg !5855
  br label %90, !dbg !5855

; <label>:26:                                     ; preds = %20
  %27 = load %struct.hash_tuning*, %struct.hash_tuning** %8, align 8, !dbg !5856
  %28 = icmp ne %struct.hash_tuning* %27, null, !dbg !5856
  br i1 %28, label %30, label %29, !dbg !5858

; <label>:29:                                     ; preds = %26
  store %struct.hash_tuning* @default_tuning, %struct.hash_tuning** %8, align 8, !dbg !5859
  br label %30, !dbg !5860

; <label>:30:                                     ; preds = %29, %26
  %31 = load %struct.hash_tuning*, %struct.hash_tuning** %8, align 8, !dbg !5861
  %32 = load %struct.hash_table*, %struct.hash_table** %12, align 8, !dbg !5862
  %33 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %32, i32 0, i32 5, !dbg !5863
  store %struct.hash_tuning* %31, %struct.hash_tuning** %33, align 8, !dbg !5864
  %34 = load %struct.hash_table*, %struct.hash_table** %12, align 8, !dbg !5865
  %35 = call zeroext i1 @check_tuning(%struct.hash_table* %34), !dbg !5867
  br i1 %35, label %37, label %36, !dbg !5868

; <label>:36:                                     ; preds = %30
  br label %87, !dbg !5869

; <label>:37:                                     ; preds = %30
  %38 = load i64, i64* %7, align 8, !dbg !5871
  %39 = load %struct.hash_tuning*, %struct.hash_tuning** %8, align 8, !dbg !5872
  %40 = call i64 @compute_bucket_size(i64 %38, %struct.hash_tuning* %39), !dbg !5873
  %41 = load %struct.hash_table*, %struct.hash_table** %12, align 8, !dbg !5874
  %42 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %41, i32 0, i32 2, !dbg !5875
  store i64 %40, i64* %42, align 8, !dbg !5876
  %43 = load %struct.hash_table*, %struct.hash_table** %12, align 8, !dbg !5877
  %44 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %43, i32 0, i32 2, !dbg !5879
  %45 = load i64, i64* %44, align 8, !dbg !5879
  %46 = icmp ne i64 %45, 0, !dbg !5877
  br i1 %46, label %48, label %47, !dbg !5880

; <label>:47:                                     ; preds = %37
  br label %87, !dbg !5881

; <label>:48:                                     ; preds = %37
  %49 = load %struct.hash_table*, %struct.hash_table** %12, align 8, !dbg !5882
  %50 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %49, i32 0, i32 2, !dbg !5883
  %51 = load i64, i64* %50, align 8, !dbg !5883
  %52 = call noalias i8* @calloc(i64 %51, i64 16) #8, !dbg !5884
  %53 = bitcast i8* %52 to %struct.hash_entry*, !dbg !5884
  %54 = load %struct.hash_table*, %struct.hash_table** %12, align 8, !dbg !5885
  %55 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %54, i32 0, i32 0, !dbg !5886
  store %struct.hash_entry* %53, %struct.hash_entry** %55, align 8, !dbg !5887
  %56 = load %struct.hash_table*, %struct.hash_table** %12, align 8, !dbg !5888
  %57 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %56, i32 0, i32 0, !dbg !5890
  %58 = load %struct.hash_entry*, %struct.hash_entry** %57, align 8, !dbg !5890
  %59 = icmp eq %struct.hash_entry* %58, null, !dbg !5891
  br i1 %59, label %60, label %61, !dbg !5892

; <label>:60:                                     ; preds = %48
  br label %87, !dbg !5893

; <label>:61:                                     ; preds = %48
  %62 = load %struct.hash_table*, %struct.hash_table** %12, align 8, !dbg !5894
  %63 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %62, i32 0, i32 0, !dbg !5895
  %64 = load %struct.hash_entry*, %struct.hash_entry** %63, align 8, !dbg !5895
  %65 = load %struct.hash_table*, %struct.hash_table** %12, align 8, !dbg !5896
  %66 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %65, i32 0, i32 2, !dbg !5897
  %67 = load i64, i64* %66, align 8, !dbg !5897
  %68 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %64, i64 %67, !dbg !5898
  %69 = load %struct.hash_table*, %struct.hash_table** %12, align 8, !dbg !5899
  %70 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %69, i32 0, i32 1, !dbg !5900
  store %struct.hash_entry* %68, %struct.hash_entry** %70, align 8, !dbg !5901
  %71 = load %struct.hash_table*, %struct.hash_table** %12, align 8, !dbg !5902
  %72 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %71, i32 0, i32 3, !dbg !5903
  store i64 0, i64* %72, align 8, !dbg !5904
  %73 = load %struct.hash_table*, %struct.hash_table** %12, align 8, !dbg !5905
  %74 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %73, i32 0, i32 4, !dbg !5906
  store i64 0, i64* %74, align 8, !dbg !5907
  %75 = load i64 (i8*, i64)*, i64 (i8*, i64)** %9, align 8, !dbg !5908
  %76 = load %struct.hash_table*, %struct.hash_table** %12, align 8, !dbg !5909
  %77 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %76, i32 0, i32 6, !dbg !5910
  store i64 (i8*, i64)* %75, i64 (i8*, i64)** %77, align 8, !dbg !5911
  %78 = load i1 (i8*, i8*)*, i1 (i8*, i8*)** %10, align 8, !dbg !5912
  %79 = load %struct.hash_table*, %struct.hash_table** %12, align 8, !dbg !5913
  %80 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %79, i32 0, i32 7, !dbg !5914
  store i1 (i8*, i8*)* %78, i1 (i8*, i8*)** %80, align 8, !dbg !5915
  %81 = load void (i8*)*, void (i8*)** %11, align 8, !dbg !5916
  %82 = load %struct.hash_table*, %struct.hash_table** %12, align 8, !dbg !5917
  %83 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %82, i32 0, i32 8, !dbg !5918
  store void (i8*)* %81, void (i8*)** %83, align 8, !dbg !5919
  %84 = load %struct.hash_table*, %struct.hash_table** %12, align 8, !dbg !5920
  %85 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %84, i32 0, i32 9, !dbg !5921
  store %struct.hash_entry* null, %struct.hash_entry** %85, align 8, !dbg !5922
  %86 = load %struct.hash_table*, %struct.hash_table** %12, align 8, !dbg !5923
  store %struct.hash_table* %86, %struct.hash_table** %6, align 8, !dbg !5924
  br label %90, !dbg !5924

; <label>:87:                                     ; preds = %60, %47, %36
  %88 = load %struct.hash_table*, %struct.hash_table** %12, align 8, !dbg !5925
  %89 = bitcast %struct.hash_table* %88 to i8*, !dbg !5925
  call void @free(i8* %89) #8, !dbg !5926
  store %struct.hash_table* null, %struct.hash_table** %6, align 8, !dbg !5927
  br label %90, !dbg !5927

; <label>:90:                                     ; preds = %87, %61, %25
  %91 = load %struct.hash_table*, %struct.hash_table** %6, align 8, !dbg !5928
  ret %struct.hash_table* %91, !dbg !5928
}

; Function Attrs: noinline nounwind uwtable
define internal i64 @raw_hasher(i8*, i64) #3 !dbg !5929 {
  %3 = alloca i8*, align 8
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  store i8* %0, i8** %3, align 8
  call void @llvm.dbg.declare(metadata i8** %3, metadata !5930, metadata !DIExpression()), !dbg !5931
  store i64 %1, i64* %4, align 8
  call void @llvm.dbg.declare(metadata i64* %4, metadata !5932, metadata !DIExpression()), !dbg !5933
  call void @llvm.dbg.declare(metadata i64* %5, metadata !5934, metadata !DIExpression()), !dbg !5935
  %6 = load i8*, i8** %3, align 8, !dbg !5936
  %7 = ptrtoint i8* %6 to i64, !dbg !5937
  %8 = call i64 @rotr_sz(i64 %7, i32 3), !dbg !5938
  store i64 %8, i64* %5, align 8, !dbg !5935
  %9 = load i64, i64* %5, align 8, !dbg !5939
  %10 = load i64, i64* %4, align 8, !dbg !5940
  %11 = urem i64 %9, %10, !dbg !5941
  ret i64 %11, !dbg !5942
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i1 @raw_comparator(i8*, i8*) #3 !dbg !5943 {
  %3 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  store i8* %0, i8** %3, align 8
  call void @llvm.dbg.declare(metadata i8** %3, metadata !5944, metadata !DIExpression()), !dbg !5945
  store i8* %1, i8** %4, align 8
  call void @llvm.dbg.declare(metadata i8** %4, metadata !5946, metadata !DIExpression()), !dbg !5947
  %5 = load i8*, i8** %3, align 8, !dbg !5948
  %6 = load i8*, i8** %4, align 8, !dbg !5949
  %7 = icmp eq i8* %5, %6, !dbg !5950
  ret i1 %7, !dbg !5951
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i1 @check_tuning(%struct.hash_table*) #3 !dbg !5952 {
  %2 = alloca i1, align 1
  %3 = alloca %struct.hash_table*, align 8
  %4 = alloca %struct.hash_tuning*, align 8
  %5 = alloca float, align 4
  store %struct.hash_table* %0, %struct.hash_table** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.hash_table** %3, metadata !5955, metadata !DIExpression()), !dbg !5956
  call void @llvm.dbg.declare(metadata %struct.hash_tuning** %4, metadata !5957, metadata !DIExpression()), !dbg !5958
  %6 = load %struct.hash_table*, %struct.hash_table** %3, align 8, !dbg !5959
  %7 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %6, i32 0, i32 5, !dbg !5960
  %8 = load %struct.hash_tuning*, %struct.hash_tuning** %7, align 8, !dbg !5960
  store %struct.hash_tuning* %8, %struct.hash_tuning** %4, align 8, !dbg !5958
  call void @llvm.dbg.declare(metadata float* %5, metadata !5961, metadata !DIExpression()), !dbg !5962
  %9 = load %struct.hash_tuning*, %struct.hash_tuning** %4, align 8, !dbg !5963
  %10 = icmp eq %struct.hash_tuning* %9, @default_tuning, !dbg !5965
  br i1 %10, label %11, label %12, !dbg !5966

; <label>:11:                                     ; preds = %1
  store i1 true, i1* %2, align 1, !dbg !5967
  br label %66, !dbg !5967

; <label>:12:                                     ; preds = %1
  store float 0x3FB99999A0000000, float* %5, align 4, !dbg !5968
  %13 = load float, float* %5, align 4, !dbg !5969
  %14 = load %struct.hash_tuning*, %struct.hash_tuning** %4, align 8, !dbg !5971
  %15 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %14, i32 0, i32 2, !dbg !5972
  %16 = load float, float* %15, align 4, !dbg !5972
  %17 = fcmp olt float %13, %16, !dbg !5973
  br i1 %17, label %18, label %63, !dbg !5974

; <label>:18:                                     ; preds = %12
  %19 = load %struct.hash_tuning*, %struct.hash_tuning** %4, align 8, !dbg !5975
  %20 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %19, i32 0, i32 2, !dbg !5976
  %21 = load float, float* %20, align 4, !dbg !5976
  %22 = load float, float* %5, align 4, !dbg !5977
  %23 = fsub float 1.000000e+00, %22, !dbg !5978
  %24 = fcmp olt float %21, %23, !dbg !5979
  br i1 %24, label %25, label %63, !dbg !5980

; <label>:25:                                     ; preds = %18
  %26 = load float, float* %5, align 4, !dbg !5981
  %27 = fadd float 1.000000e+00, %26, !dbg !5982
  %28 = load %struct.hash_tuning*, %struct.hash_tuning** %4, align 8, !dbg !5983
  %29 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %28, i32 0, i32 3, !dbg !5984
  %30 = load float, float* %29, align 4, !dbg !5984
  %31 = fcmp olt float %27, %30, !dbg !5985
  br i1 %31, label %32, label %63, !dbg !5986

; <label>:32:                                     ; preds = %25
  %33 = load %struct.hash_tuning*, %struct.hash_tuning** %4, align 8, !dbg !5987
  %34 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %33, i32 0, i32 0, !dbg !5988
  %35 = load float, float* %34, align 4, !dbg !5988
  %36 = fcmp ole float 0.000000e+00, %35, !dbg !5989
  br i1 %36, label %37, label %63, !dbg !5990

; <label>:37:                                     ; preds = %32
  %38 = load %struct.hash_tuning*, %struct.hash_tuning** %4, align 8, !dbg !5991
  %39 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %38, i32 0, i32 0, !dbg !5992
  %40 = load float, float* %39, align 4, !dbg !5992
  %41 = load float, float* %5, align 4, !dbg !5993
  %42 = fadd float %40, %41, !dbg !5994
  %43 = load %struct.hash_tuning*, %struct.hash_tuning** %4, align 8, !dbg !5995
  %44 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %43, i32 0, i32 1, !dbg !5996
  %45 = load float, float* %44, align 4, !dbg !5996
  %46 = fcmp olt float %42, %45, !dbg !5997
  br i1 %46, label %47, label %63, !dbg !5998

; <label>:47:                                     ; preds = %37
  %48 = load %struct.hash_tuning*, %struct.hash_tuning** %4, align 8, !dbg !5999
  %49 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %48, i32 0, i32 1, !dbg !6000
  %50 = load float, float* %49, align 4, !dbg !6000
  %51 = fcmp ole float %50, 1.000000e+00, !dbg !6001
  br i1 %51, label %52, label %63, !dbg !6002

; <label>:52:                                     ; preds = %47
  %53 = load %struct.hash_tuning*, %struct.hash_tuning** %4, align 8, !dbg !6003
  %54 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %53, i32 0, i32 0, !dbg !6004
  %55 = load float, float* %54, align 4, !dbg !6004
  %56 = load float, float* %5, align 4, !dbg !6005
  %57 = fadd float %55, %56, !dbg !6006
  %58 = load %struct.hash_tuning*, %struct.hash_tuning** %4, align 8, !dbg !6007
  %59 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %58, i32 0, i32 2, !dbg !6008
  %60 = load float, float* %59, align 4, !dbg !6008
  %61 = fcmp olt float %57, %60, !dbg !6009
  br i1 %61, label %62, label %63, !dbg !6010

; <label>:62:                                     ; preds = %52
  store i1 true, i1* %2, align 1, !dbg !6011
  br label %66, !dbg !6011

; <label>:63:                                     ; preds = %52, %47, %37, %32, %25, %18, %12
  %64 = load %struct.hash_table*, %struct.hash_table** %3, align 8, !dbg !6012
  %65 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %64, i32 0, i32 5, !dbg !6013
  store %struct.hash_tuning* @default_tuning, %struct.hash_tuning** %65, align 8, !dbg !6014
  store i1 false, i1* %2, align 1, !dbg !6015
  br label %66, !dbg !6015

; <label>:66:                                     ; preds = %63, %62, %11
  %67 = load i1, i1* %2, align 1, !dbg !6016
  ret i1 %67, !dbg !6016
}

; Function Attrs: noinline nounwind uwtable
define internal i64 @compute_bucket_size(i64, %struct.hash_tuning*) #3 !dbg !6017 {
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = alloca %struct.hash_tuning*, align 8
  %6 = alloca float, align 4
  store i64 %0, i64* %4, align 8
  call void @llvm.dbg.declare(metadata i64* %4, metadata !6020, metadata !DIExpression()), !dbg !6021
  store %struct.hash_tuning* %1, %struct.hash_tuning** %5, align 8
  call void @llvm.dbg.declare(metadata %struct.hash_tuning** %5, metadata !6022, metadata !DIExpression()), !dbg !6023
  %7 = load %struct.hash_tuning*, %struct.hash_tuning** %5, align 8, !dbg !6024
  %8 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %7, i32 0, i32 4, !dbg !6026
  %9 = load i8, i8* %8, align 4, !dbg !6026
  %10 = trunc i8 %9 to i1, !dbg !6026
  br i1 %10, label %24, label %11, !dbg !6027

; <label>:11:                                     ; preds = %2
  call void @llvm.dbg.declare(metadata float* %6, metadata !6028, metadata !DIExpression()), !dbg !6030
  %12 = load i64, i64* %4, align 8, !dbg !6031
  %13 = uitofp i64 %12 to float, !dbg !6031
  %14 = load %struct.hash_tuning*, %struct.hash_tuning** %5, align 8, !dbg !6032
  %15 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %14, i32 0, i32 2, !dbg !6033
  %16 = load float, float* %15, align 4, !dbg !6033
  %17 = fdiv float %13, %16, !dbg !6034
  store float %17, float* %6, align 4, !dbg !6030
  %18 = load float, float* %6, align 4, !dbg !6035
  %19 = fcmp ole float 0x43F0000000000000, %18, !dbg !6037
  br i1 %19, label %20, label %21, !dbg !6038

; <label>:20:                                     ; preds = %11
  store i64 0, i64* %3, align 8, !dbg !6039
  br label %32, !dbg !6039

; <label>:21:                                     ; preds = %11
  %22 = load float, float* %6, align 4, !dbg !6040
  %23 = fptoui float %22 to i64, !dbg !6040
  store i64 %23, i64* %4, align 8, !dbg !6041
  br label %24, !dbg !6042

; <label>:24:                                     ; preds = %21, %2
  %25 = load i64, i64* %4, align 8, !dbg !6043
  %26 = call i64 @next_prime(i64 %25), !dbg !6044
  store i64 %26, i64* %4, align 8, !dbg !6045
  %27 = load i64, i64* %4, align 8, !dbg !6046
  %28 = icmp ult i64 2305843009213693951, %27, !dbg !6046
  br i1 %28, label %29, label %30, !dbg !6048

; <label>:29:                                     ; preds = %24
  store i64 0, i64* %3, align 8, !dbg !6049
  br label %32, !dbg !6049

; <label>:30:                                     ; preds = %24
  %31 = load i64, i64* %4, align 8, !dbg !6050
  store i64 %31, i64* %3, align 8, !dbg !6051
  br label %32, !dbg !6051

; <label>:32:                                     ; preds = %30, %29, %20
  %33 = load i64, i64* %3, align 8, !dbg !6052
  ret i64 %33, !dbg !6052
}

; Function Attrs: nounwind
declare noalias i8* @calloc(i64, i64) #5

; Function Attrs: noinline nounwind uwtable
define internal i64 @next_prime(i64) #3 !dbg !6053 {
  %2 = alloca i64, align 8
  store i64 %0, i64* %2, align 8
  call void @llvm.dbg.declare(metadata i64* %2, metadata !6056, metadata !DIExpression()), !dbg !6057
  %3 = load i64, i64* %2, align 8, !dbg !6058
  %4 = icmp ult i64 %3, 10, !dbg !6060
  br i1 %4, label %5, label %6, !dbg !6061

; <label>:5:                                      ; preds = %1
  store i64 10, i64* %2, align 8, !dbg !6062
  br label %6, !dbg !6063

; <label>:6:                                      ; preds = %5, %1
  %7 = load i64, i64* %2, align 8, !dbg !6064
  %8 = or i64 %7, 1, !dbg !6064
  store i64 %8, i64* %2, align 8, !dbg !6064
  br label %9, !dbg !6065

; <label>:9:                                      ; preds = %18, %6
  %10 = load i64, i64* %2, align 8, !dbg !6066
  %11 = icmp ne i64 -1, %10, !dbg !6067
  br i1 %11, label %12, label %16, !dbg !6068

; <label>:12:                                     ; preds = %9
  %13 = load i64, i64* %2, align 8, !dbg !6069
  %14 = call zeroext i1 @is_prime(i64 %13), !dbg !6070
  %15 = xor i1 %14, true, !dbg !6071
  br label %16

; <label>:16:                                     ; preds = %12, %9
  %17 = phi i1 [ false, %9 ], [ %15, %12 ]
  br i1 %17, label %18, label %21, !dbg !6065

; <label>:18:                                     ; preds = %16
  %19 = load i64, i64* %2, align 8, !dbg !6072
  %20 = add i64 %19, 2, !dbg !6072
  store i64 %20, i64* %2, align 8, !dbg !6072
  br label %9, !dbg !6065, !llvm.loop !6073

; <label>:21:                                     ; preds = %16
  %22 = load i64, i64* %2, align 8, !dbg !6075
  ret i64 %22, !dbg !6076
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i1 @is_prime(i64) #3 !dbg !6077 {
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  store i64 %0, i64* %2, align 8
  call void @llvm.dbg.declare(metadata i64* %2, metadata !6080, metadata !DIExpression()), !dbg !6081
  call void @llvm.dbg.declare(metadata i64* %3, metadata !6082, metadata !DIExpression()), !dbg !6083
  store i64 3, i64* %3, align 8, !dbg !6083
  call void @llvm.dbg.declare(metadata i64* %4, metadata !6084, metadata !DIExpression()), !dbg !6085
  %5 = load i64, i64* %3, align 8, !dbg !6086
  %6 = load i64, i64* %3, align 8, !dbg !6087
  %7 = mul i64 %5, %6, !dbg !6088
  store i64 %7, i64* %4, align 8, !dbg !6085
  br label %8, !dbg !6089

; <label>:8:                                      ; preds = %19, %1
  %9 = load i64, i64* %4, align 8, !dbg !6090
  %10 = load i64, i64* %2, align 8, !dbg !6091
  %11 = icmp ult i64 %9, %10, !dbg !6092
  br i1 %11, label %12, label %17, !dbg !6093

; <label>:12:                                     ; preds = %8
  %13 = load i64, i64* %2, align 8, !dbg !6094
  %14 = load i64, i64* %3, align 8, !dbg !6095
  %15 = urem i64 %13, %14, !dbg !6096
  %16 = icmp ne i64 %15, 0, !dbg !6093
  br label %17

; <label>:17:                                     ; preds = %12, %8
  %18 = phi i1 [ false, %8 ], [ %16, %12 ]
  br i1 %18, label %19, label %28, !dbg !6089

; <label>:19:                                     ; preds = %17
  %20 = load i64, i64* %3, align 8, !dbg !6097
  %21 = add i64 %20, 1, !dbg !6097
  store i64 %21, i64* %3, align 8, !dbg !6097
  %22 = load i64, i64* %3, align 8, !dbg !6099
  %23 = mul i64 4, %22, !dbg !6100
  %24 = load i64, i64* %4, align 8, !dbg !6101
  %25 = add i64 %24, %23, !dbg !6101
  store i64 %25, i64* %4, align 8, !dbg !6101
  %26 = load i64, i64* %3, align 8, !dbg !6102
  %27 = add i64 %26, 1, !dbg !6102
  store i64 %27, i64* %3, align 8, !dbg !6102
  br label %8, !dbg !6089, !llvm.loop !6103

; <label>:28:                                     ; preds = %17
  %29 = load i64, i64* %2, align 8, !dbg !6105
  %30 = load i64, i64* %3, align 8, !dbg !6106
  %31 = urem i64 %29, %30, !dbg !6107
  %32 = icmp ne i64 %31, 0, !dbg !6105
  %33 = zext i1 %32 to i64, !dbg !6105
  %34 = select i1 %32, i32 1, i32 0, !dbg !6105
  %35 = icmp ne i32 %34, 0, !dbg !6108
  ret i1 %35, !dbg !6109
}

; Function Attrs: noinline nounwind uwtable
define internal i64 @rotr_sz(i64, i32) #3 !dbg !6110 {
  %3 = alloca i64, align 8
  %4 = alloca i32, align 4
  store i64 %0, i64* %3, align 8
  call void @llvm.dbg.declare(metadata i64* %3, metadata !6114, metadata !DIExpression()), !dbg !6115
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !6116, metadata !DIExpression()), !dbg !6117
  %5 = load i64, i64* %3, align 8, !dbg !6118
  %6 = load i32, i32* %4, align 4, !dbg !6119
  %7 = zext i32 %6 to i64, !dbg !6120
  %8 = lshr i64 %5, %7, !dbg !6120
  %9 = load i64, i64* %3, align 8, !dbg !6121
  %10 = load i32, i32* %4, align 4, !dbg !6122
  %11 = sext i32 %10 to i64, !dbg !6122
  %12 = sub i64 64, %11, !dbg !6123
  %13 = shl i64 %9, %12, !dbg !6124
  %14 = or i64 %8, %13, !dbg !6125
  ret i64 %14, !dbg !6126
}

; Function Attrs: noinline nounwind uwtable
define void @hash_clear(%struct.hash_table*) #3 !dbg !6127 {
  %2 = alloca %struct.hash_table*, align 8
  %3 = alloca %struct.hash_entry*, align 8
  %4 = alloca %struct.hash_entry*, align 8
  %5 = alloca %struct.hash_entry*, align 8
  store %struct.hash_table* %0, %struct.hash_table** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.hash_table** %2, metadata !6130, metadata !DIExpression()), !dbg !6131
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %3, metadata !6132, metadata !DIExpression()), !dbg !6133
  %6 = load %struct.hash_table*, %struct.hash_table** %2, align 8, !dbg !6134
  %7 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %6, i32 0, i32 0, !dbg !6136
  %8 = load %struct.hash_entry*, %struct.hash_entry** %7, align 8, !dbg !6136
  store %struct.hash_entry* %8, %struct.hash_entry** %3, align 8, !dbg !6137
  br label %9, !dbg !6138

; <label>:9:                                      ; preds = %73, %1
  %10 = load %struct.hash_entry*, %struct.hash_entry** %3, align 8, !dbg !6139
  %11 = load %struct.hash_table*, %struct.hash_table** %2, align 8, !dbg !6141
  %12 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %11, i32 0, i32 1, !dbg !6142
  %13 = load %struct.hash_entry*, %struct.hash_entry** %12, align 8, !dbg !6142
  %14 = icmp ult %struct.hash_entry* %10, %13, !dbg !6143
  br i1 %14, label %15, label %76, !dbg !6144

; <label>:15:                                     ; preds = %9
  %16 = load %struct.hash_entry*, %struct.hash_entry** %3, align 8, !dbg !6145
  %17 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %16, i32 0, i32 0, !dbg !6148
  %18 = load i8*, i8** %17, align 8, !dbg !6148
  %19 = icmp ne i8* %18, null, !dbg !6145
  br i1 %19, label %20, label %72, !dbg !6149

; <label>:20:                                     ; preds = %15
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %4, metadata !6150, metadata !DIExpression()), !dbg !6152
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %5, metadata !6153, metadata !DIExpression()), !dbg !6154
  %21 = load %struct.hash_entry*, %struct.hash_entry** %3, align 8, !dbg !6155
  %22 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %21, i32 0, i32 1, !dbg !6157
  %23 = load %struct.hash_entry*, %struct.hash_entry** %22, align 8, !dbg !6157
  store %struct.hash_entry* %23, %struct.hash_entry** %4, align 8, !dbg !6158
  br label %24, !dbg !6159

; <label>:24:                                     ; preds = %53, %20
  %25 = load %struct.hash_entry*, %struct.hash_entry** %4, align 8, !dbg !6160
  %26 = icmp ne %struct.hash_entry* %25, null, !dbg !6162
  br i1 %26, label %27, label %55, !dbg !6162

; <label>:27:                                     ; preds = %24
  %28 = load %struct.hash_table*, %struct.hash_table** %2, align 8, !dbg !6163
  %29 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %28, i32 0, i32 8, !dbg !6166
  %30 = load void (i8*)*, void (i8*)** %29, align 8, !dbg !6166
  %31 = icmp ne void (i8*)* %30, null, !dbg !6163
  br i1 %31, label %32, label %39, !dbg !6167

; <label>:32:                                     ; preds = %27
  %33 = load %struct.hash_table*, %struct.hash_table** %2, align 8, !dbg !6168
  %34 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %33, i32 0, i32 8, !dbg !6169
  %35 = load void (i8*)*, void (i8*)** %34, align 8, !dbg !6169
  %36 = load %struct.hash_entry*, %struct.hash_entry** %4, align 8, !dbg !6170
  %37 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %36, i32 0, i32 0, !dbg !6171
  %38 = load i8*, i8** %37, align 8, !dbg !6171
  call void %35(i8* %38), !dbg !6168
  br label %39, !dbg !6168

; <label>:39:                                     ; preds = %32, %27
  %40 = load %struct.hash_entry*, %struct.hash_entry** %4, align 8, !dbg !6172
  %41 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %40, i32 0, i32 0, !dbg !6173
  store i8* null, i8** %41, align 8, !dbg !6174
  %42 = load %struct.hash_entry*, %struct.hash_entry** %4, align 8, !dbg !6175
  %43 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %42, i32 0, i32 1, !dbg !6176
  %44 = load %struct.hash_entry*, %struct.hash_entry** %43, align 8, !dbg !6176
  store %struct.hash_entry* %44, %struct.hash_entry** %5, align 8, !dbg !6177
  %45 = load %struct.hash_table*, %struct.hash_table** %2, align 8, !dbg !6178
  %46 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %45, i32 0, i32 9, !dbg !6179
  %47 = load %struct.hash_entry*, %struct.hash_entry** %46, align 8, !dbg !6179
  %48 = load %struct.hash_entry*, %struct.hash_entry** %4, align 8, !dbg !6180
  %49 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %48, i32 0, i32 1, !dbg !6181
  store %struct.hash_entry* %47, %struct.hash_entry** %49, align 8, !dbg !6182
  %50 = load %struct.hash_entry*, %struct.hash_entry** %4, align 8, !dbg !6183
  %51 = load %struct.hash_table*, %struct.hash_table** %2, align 8, !dbg !6184
  %52 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %51, i32 0, i32 9, !dbg !6185
  store %struct.hash_entry* %50, %struct.hash_entry** %52, align 8, !dbg !6186
  br label %53, !dbg !6187

; <label>:53:                                     ; preds = %39
  %54 = load %struct.hash_entry*, %struct.hash_entry** %5, align 8, !dbg !6188
  store %struct.hash_entry* %54, %struct.hash_entry** %4, align 8, !dbg !6189
  br label %24, !dbg !6190, !llvm.loop !6191

; <label>:55:                                     ; preds = %24
  %56 = load %struct.hash_table*, %struct.hash_table** %2, align 8, !dbg !6193
  %57 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %56, i32 0, i32 8, !dbg !6195
  %58 = load void (i8*)*, void (i8*)** %57, align 8, !dbg !6195
  %59 = icmp ne void (i8*)* %58, null, !dbg !6193
  br i1 %59, label %60, label %67, !dbg !6196

; <label>:60:                                     ; preds = %55
  %61 = load %struct.hash_table*, %struct.hash_table** %2, align 8, !dbg !6197
  %62 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %61, i32 0, i32 8, !dbg !6198
  %63 = load void (i8*)*, void (i8*)** %62, align 8, !dbg !6198
  %64 = load %struct.hash_entry*, %struct.hash_entry** %3, align 8, !dbg !6199
  %65 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %64, i32 0, i32 0, !dbg !6200
  %66 = load i8*, i8** %65, align 8, !dbg !6200
  call void %63(i8* %66), !dbg !6197
  br label %67, !dbg !6197

; <label>:67:                                     ; preds = %60, %55
  %68 = load %struct.hash_entry*, %struct.hash_entry** %3, align 8, !dbg !6201
  %69 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %68, i32 0, i32 0, !dbg !6202
  store i8* null, i8** %69, align 8, !dbg !6203
  %70 = load %struct.hash_entry*, %struct.hash_entry** %3, align 8, !dbg !6204
  %71 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %70, i32 0, i32 1, !dbg !6205
  store %struct.hash_entry* null, %struct.hash_entry** %71, align 8, !dbg !6206
  br label %72, !dbg !6207

; <label>:72:                                     ; preds = %67, %15
  br label %73, !dbg !6208

; <label>:73:                                     ; preds = %72
  %74 = load %struct.hash_entry*, %struct.hash_entry** %3, align 8, !dbg !6209
  %75 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %74, i32 1, !dbg !6209
  store %struct.hash_entry* %75, %struct.hash_entry** %3, align 8, !dbg !6209
  br label %9, !dbg !6210, !llvm.loop !6211

; <label>:76:                                     ; preds = %9
  %77 = load %struct.hash_table*, %struct.hash_table** %2, align 8, !dbg !6213
  %78 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %77, i32 0, i32 3, !dbg !6214
  store i64 0, i64* %78, align 8, !dbg !6215
  %79 = load %struct.hash_table*, %struct.hash_table** %2, align 8, !dbg !6216
  %80 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %79, i32 0, i32 4, !dbg !6217
  store i64 0, i64* %80, align 8, !dbg !6218
  ret void, !dbg !6219
}

; Function Attrs: noinline nounwind uwtable
define void @hash_free(%struct.hash_table*) #3 !dbg !6220 {
  %2 = alloca %struct.hash_table*, align 8
  %3 = alloca %struct.hash_entry*, align 8
  %4 = alloca %struct.hash_entry*, align 8
  %5 = alloca %struct.hash_entry*, align 8
  store %struct.hash_table* %0, %struct.hash_table** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.hash_table** %2, metadata !6221, metadata !DIExpression()), !dbg !6222
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %3, metadata !6223, metadata !DIExpression()), !dbg !6224
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %4, metadata !6225, metadata !DIExpression()), !dbg !6226
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %5, metadata !6227, metadata !DIExpression()), !dbg !6228
  %6 = load %struct.hash_table*, %struct.hash_table** %2, align 8, !dbg !6229
  %7 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %6, i32 0, i32 8, !dbg !6231
  %8 = load void (i8*)*, void (i8*)** %7, align 8, !dbg !6231
  %9 = icmp ne void (i8*)* %8, null, !dbg !6229
  br i1 %9, label %10, label %52, !dbg !6232

; <label>:10:                                     ; preds = %1
  %11 = load %struct.hash_table*, %struct.hash_table** %2, align 8, !dbg !6233
  %12 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %11, i32 0, i32 4, !dbg !6234
  %13 = load i64, i64* %12, align 8, !dbg !6234
  %14 = icmp ne i64 %13, 0, !dbg !6233
  br i1 %14, label %15, label %52, !dbg !6235

; <label>:15:                                     ; preds = %10
  %16 = load %struct.hash_table*, %struct.hash_table** %2, align 8, !dbg !6236
  %17 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %16, i32 0, i32 0, !dbg !6239
  %18 = load %struct.hash_entry*, %struct.hash_entry** %17, align 8, !dbg !6239
  store %struct.hash_entry* %18, %struct.hash_entry** %3, align 8, !dbg !6240
  br label %19, !dbg !6241

; <label>:19:                                     ; preds = %48, %15
  %20 = load %struct.hash_entry*, %struct.hash_entry** %3, align 8, !dbg !6242
  %21 = load %struct.hash_table*, %struct.hash_table** %2, align 8, !dbg !6244
  %22 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %21, i32 0, i32 1, !dbg !6245
  %23 = load %struct.hash_entry*, %struct.hash_entry** %22, align 8, !dbg !6245
  %24 = icmp ult %struct.hash_entry* %20, %23, !dbg !6246
  br i1 %24, label %25, label %51, !dbg !6247

; <label>:25:                                     ; preds = %19
  %26 = load %struct.hash_entry*, %struct.hash_entry** %3, align 8, !dbg !6248
  %27 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %26, i32 0, i32 0, !dbg !6251
  %28 = load i8*, i8** %27, align 8, !dbg !6251
  %29 = icmp ne i8* %28, null, !dbg !6248
  br i1 %29, label %30, label %47, !dbg !6252

; <label>:30:                                     ; preds = %25
  %31 = load %struct.hash_entry*, %struct.hash_entry** %3, align 8, !dbg !6253
  store %struct.hash_entry* %31, %struct.hash_entry** %4, align 8, !dbg !6256
  br label %32, !dbg !6257

; <label>:32:                                     ; preds = %42, %30
  %33 = load %struct.hash_entry*, %struct.hash_entry** %4, align 8, !dbg !6258
  %34 = icmp ne %struct.hash_entry* %33, null, !dbg !6260
  br i1 %34, label %35, label %46, !dbg !6260

; <label>:35:                                     ; preds = %32
  %36 = load %struct.hash_table*, %struct.hash_table** %2, align 8, !dbg !6261
  %37 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %36, i32 0, i32 8, !dbg !6262
  %38 = load void (i8*)*, void (i8*)** %37, align 8, !dbg !6262
  %39 = load %struct.hash_entry*, %struct.hash_entry** %4, align 8, !dbg !6263
  %40 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %39, i32 0, i32 0, !dbg !6264
  %41 = load i8*, i8** %40, align 8, !dbg !6264
  call void %38(i8* %41), !dbg !6261
  br label %42, !dbg !6261

; <label>:42:                                     ; preds = %35
  %43 = load %struct.hash_entry*, %struct.hash_entry** %4, align 8, !dbg !6265
  %44 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %43, i32 0, i32 1, !dbg !6266
  %45 = load %struct.hash_entry*, %struct.hash_entry** %44, align 8, !dbg !6266
  store %struct.hash_entry* %45, %struct.hash_entry** %4, align 8, !dbg !6267
  br label %32, !dbg !6268, !llvm.loop !6269

; <label>:46:                                     ; preds = %32
  br label %47, !dbg !6271

; <label>:47:                                     ; preds = %46, %25
  br label %48, !dbg !6272

; <label>:48:                                     ; preds = %47
  %49 = load %struct.hash_entry*, %struct.hash_entry** %3, align 8, !dbg !6273
  %50 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %49, i32 1, !dbg !6273
  store %struct.hash_entry* %50, %struct.hash_entry** %3, align 8, !dbg !6273
  br label %19, !dbg !6274, !llvm.loop !6275

; <label>:51:                                     ; preds = %19
  br label %52, !dbg !6277

; <label>:52:                                     ; preds = %51, %10, %1
  %53 = load %struct.hash_table*, %struct.hash_table** %2, align 8, !dbg !6278
  %54 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %53, i32 0, i32 0, !dbg !6280
  %55 = load %struct.hash_entry*, %struct.hash_entry** %54, align 8, !dbg !6280
  store %struct.hash_entry* %55, %struct.hash_entry** %3, align 8, !dbg !6281
  br label %56, !dbg !6282

; <label>:56:                                     ; preds = %78, %52
  %57 = load %struct.hash_entry*, %struct.hash_entry** %3, align 8, !dbg !6283
  %58 = load %struct.hash_table*, %struct.hash_table** %2, align 8, !dbg !6285
  %59 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %58, i32 0, i32 1, !dbg !6286
  %60 = load %struct.hash_entry*, %struct.hash_entry** %59, align 8, !dbg !6286
  %61 = icmp ult %struct.hash_entry* %57, %60, !dbg !6287
  br i1 %61, label %62, label %81, !dbg !6288

; <label>:62:                                     ; preds = %56
  %63 = load %struct.hash_entry*, %struct.hash_entry** %3, align 8, !dbg !6289
  %64 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %63, i32 0, i32 1, !dbg !6292
  %65 = load %struct.hash_entry*, %struct.hash_entry** %64, align 8, !dbg !6292
  store %struct.hash_entry* %65, %struct.hash_entry** %4, align 8, !dbg !6293
  br label %66, !dbg !6294

; <label>:66:                                     ; preds = %75, %62
  %67 = load %struct.hash_entry*, %struct.hash_entry** %4, align 8, !dbg !6295
  %68 = icmp ne %struct.hash_entry* %67, null, !dbg !6297
  br i1 %68, label %69, label %77, !dbg !6297

; <label>:69:                                     ; preds = %66
  %70 = load %struct.hash_entry*, %struct.hash_entry** %4, align 8, !dbg !6298
  %71 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %70, i32 0, i32 1, !dbg !6300
  %72 = load %struct.hash_entry*, %struct.hash_entry** %71, align 8, !dbg !6300
  store %struct.hash_entry* %72, %struct.hash_entry** %5, align 8, !dbg !6301
  %73 = load %struct.hash_entry*, %struct.hash_entry** %4, align 8, !dbg !6302
  %74 = bitcast %struct.hash_entry* %73 to i8*, !dbg !6302
  call void @free(i8* %74) #8, !dbg !6303
  br label %75, !dbg !6304

; <label>:75:                                     ; preds = %69
  %76 = load %struct.hash_entry*, %struct.hash_entry** %5, align 8, !dbg !6305
  store %struct.hash_entry* %76, %struct.hash_entry** %4, align 8, !dbg !6306
  br label %66, !dbg !6307, !llvm.loop !6308

; <label>:77:                                     ; preds = %66
  br label %78, !dbg !6310

; <label>:78:                                     ; preds = %77
  %79 = load %struct.hash_entry*, %struct.hash_entry** %3, align 8, !dbg !6311
  %80 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %79, i32 1, !dbg !6311
  store %struct.hash_entry* %80, %struct.hash_entry** %3, align 8, !dbg !6311
  br label %56, !dbg !6312, !llvm.loop !6313

; <label>:81:                                     ; preds = %56
  %82 = load %struct.hash_table*, %struct.hash_table** %2, align 8, !dbg !6315
  %83 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %82, i32 0, i32 9, !dbg !6317
  %84 = load %struct.hash_entry*, %struct.hash_entry** %83, align 8, !dbg !6317
  store %struct.hash_entry* %84, %struct.hash_entry** %4, align 8, !dbg !6318
  br label %85, !dbg !6319

; <label>:85:                                     ; preds = %94, %81
  %86 = load %struct.hash_entry*, %struct.hash_entry** %4, align 8, !dbg !6320
  %87 = icmp ne %struct.hash_entry* %86, null, !dbg !6322
  br i1 %87, label %88, label %96, !dbg !6322

; <label>:88:                                     ; preds = %85
  %89 = load %struct.hash_entry*, %struct.hash_entry** %4, align 8, !dbg !6323
  %90 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %89, i32 0, i32 1, !dbg !6325
  %91 = load %struct.hash_entry*, %struct.hash_entry** %90, align 8, !dbg !6325
  store %struct.hash_entry* %91, %struct.hash_entry** %5, align 8, !dbg !6326
  %92 = load %struct.hash_entry*, %struct.hash_entry** %4, align 8, !dbg !6327
  %93 = bitcast %struct.hash_entry* %92 to i8*, !dbg !6327
  call void @free(i8* %93) #8, !dbg !6328
  br label %94, !dbg !6329

; <label>:94:                                     ; preds = %88
  %95 = load %struct.hash_entry*, %struct.hash_entry** %5, align 8, !dbg !6330
  store %struct.hash_entry* %95, %struct.hash_entry** %4, align 8, !dbg !6331
  br label %85, !dbg !6332, !llvm.loop !6333

; <label>:96:                                     ; preds = %85
  %97 = load %struct.hash_table*, %struct.hash_table** %2, align 8, !dbg !6335
  %98 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %97, i32 0, i32 0, !dbg !6336
  %99 = load %struct.hash_entry*, %struct.hash_entry** %98, align 8, !dbg !6336
  %100 = bitcast %struct.hash_entry* %99 to i8*, !dbg !6335
  call void @free(i8* %100) #8, !dbg !6337
  %101 = load %struct.hash_table*, %struct.hash_table** %2, align 8, !dbg !6338
  %102 = bitcast %struct.hash_table* %101 to i8*, !dbg !6338
  call void @free(i8* %102) #8, !dbg !6339
  ret void, !dbg !6340
}

; Function Attrs: noinline nounwind uwtable
define zeroext i1 @hash_rehash(%struct.hash_table*, i64) #3 !dbg !6341 {
  %3 = alloca i1, align 1
  %4 = alloca %struct.hash_table*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %struct.hash_table, align 8
  %7 = alloca %struct.hash_table*, align 8
  %8 = alloca i64, align 8
  store %struct.hash_table* %0, %struct.hash_table** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.hash_table** %4, metadata !6344, metadata !DIExpression()), !dbg !6345
  store i64 %1, i64* %5, align 8
  call void @llvm.dbg.declare(metadata i64* %5, metadata !6346, metadata !DIExpression()), !dbg !6347
  call void @llvm.dbg.declare(metadata %struct.hash_table* %6, metadata !6348, metadata !DIExpression()), !dbg !6349
  call void @llvm.dbg.declare(metadata %struct.hash_table** %7, metadata !6350, metadata !DIExpression()), !dbg !6351
  call void @llvm.dbg.declare(metadata i64* %8, metadata !6352, metadata !DIExpression()), !dbg !6353
  %9 = load i64, i64* %5, align 8, !dbg !6354
  %10 = load %struct.hash_table*, %struct.hash_table** %4, align 8, !dbg !6355
  %11 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %10, i32 0, i32 5, !dbg !6356
  %12 = load %struct.hash_tuning*, %struct.hash_tuning** %11, align 8, !dbg !6356
  %13 = call i64 @compute_bucket_size(i64 %9, %struct.hash_tuning* %12), !dbg !6357
  store i64 %13, i64* %8, align 8, !dbg !6353
  %14 = load i64, i64* %8, align 8, !dbg !6358
  %15 = icmp ne i64 %14, 0, !dbg !6358
  br i1 %15, label %17, label %16, !dbg !6360

; <label>:16:                                     ; preds = %2
  store i1 false, i1* %3, align 1, !dbg !6361
  br label %127, !dbg !6361

; <label>:17:                                     ; preds = %2
  %18 = load i64, i64* %8, align 8, !dbg !6362
  %19 = load %struct.hash_table*, %struct.hash_table** %4, align 8, !dbg !6364
  %20 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %19, i32 0, i32 2, !dbg !6365
  %21 = load i64, i64* %20, align 8, !dbg !6365
  %22 = icmp eq i64 %18, %21, !dbg !6366
  br i1 %22, label %23, label %24, !dbg !6367

; <label>:23:                                     ; preds = %17
  store i1 true, i1* %3, align 1, !dbg !6368
  br label %127, !dbg !6368

; <label>:24:                                     ; preds = %17
  store %struct.hash_table* %6, %struct.hash_table** %7, align 8, !dbg !6369
  %25 = load i64, i64* %8, align 8, !dbg !6370
  %26 = call noalias i8* @calloc(i64 %25, i64 16) #8, !dbg !6371
  %27 = bitcast i8* %26 to %struct.hash_entry*, !dbg !6371
  %28 = load %struct.hash_table*, %struct.hash_table** %7, align 8, !dbg !6372
  %29 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %28, i32 0, i32 0, !dbg !6373
  store %struct.hash_entry* %27, %struct.hash_entry** %29, align 8, !dbg !6374
  %30 = load %struct.hash_table*, %struct.hash_table** %7, align 8, !dbg !6375
  %31 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %30, i32 0, i32 0, !dbg !6377
  %32 = load %struct.hash_entry*, %struct.hash_entry** %31, align 8, !dbg !6377
  %33 = icmp eq %struct.hash_entry* %32, null, !dbg !6378
  br i1 %33, label %34, label %35, !dbg !6379

; <label>:34:                                     ; preds = %24
  store i1 false, i1* %3, align 1, !dbg !6380
  br label %127, !dbg !6380

; <label>:35:                                     ; preds = %24
  %36 = load i64, i64* %8, align 8, !dbg !6381
  %37 = load %struct.hash_table*, %struct.hash_table** %7, align 8, !dbg !6382
  %38 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %37, i32 0, i32 2, !dbg !6383
  store i64 %36, i64* %38, align 8, !dbg !6384
  %39 = load %struct.hash_table*, %struct.hash_table** %7, align 8, !dbg !6385
  %40 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %39, i32 0, i32 0, !dbg !6386
  %41 = load %struct.hash_entry*, %struct.hash_entry** %40, align 8, !dbg !6386
  %42 = load i64, i64* %8, align 8, !dbg !6387
  %43 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %41, i64 %42, !dbg !6388
  %44 = load %struct.hash_table*, %struct.hash_table** %7, align 8, !dbg !6389
  %45 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %44, i32 0, i32 1, !dbg !6390
  store %struct.hash_entry* %43, %struct.hash_entry** %45, align 8, !dbg !6391
  %46 = load %struct.hash_table*, %struct.hash_table** %7, align 8, !dbg !6392
  %47 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %46, i32 0, i32 3, !dbg !6393
  store i64 0, i64* %47, align 8, !dbg !6394
  %48 = load %struct.hash_table*, %struct.hash_table** %7, align 8, !dbg !6395
  %49 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %48, i32 0, i32 4, !dbg !6396
  store i64 0, i64* %49, align 8, !dbg !6397
  %50 = load %struct.hash_table*, %struct.hash_table** %4, align 8, !dbg !6398
  %51 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %50, i32 0, i32 5, !dbg !6399
  %52 = load %struct.hash_tuning*, %struct.hash_tuning** %51, align 8, !dbg !6399
  %53 = load %struct.hash_table*, %struct.hash_table** %7, align 8, !dbg !6400
  %54 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %53, i32 0, i32 5, !dbg !6401
  store %struct.hash_tuning* %52, %struct.hash_tuning** %54, align 8, !dbg !6402
  %55 = load %struct.hash_table*, %struct.hash_table** %4, align 8, !dbg !6403
  %56 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %55, i32 0, i32 6, !dbg !6404
  %57 = load i64 (i8*, i64)*, i64 (i8*, i64)** %56, align 8, !dbg !6404
  %58 = load %struct.hash_table*, %struct.hash_table** %7, align 8, !dbg !6405
  %59 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %58, i32 0, i32 6, !dbg !6406
  store i64 (i8*, i64)* %57, i64 (i8*, i64)** %59, align 8, !dbg !6407
  %60 = load %struct.hash_table*, %struct.hash_table** %4, align 8, !dbg !6408
  %61 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %60, i32 0, i32 7, !dbg !6409
  %62 = load i1 (i8*, i8*)*, i1 (i8*, i8*)** %61, align 8, !dbg !6409
  %63 = load %struct.hash_table*, %struct.hash_table** %7, align 8, !dbg !6410
  %64 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %63, i32 0, i32 7, !dbg !6411
  store i1 (i8*, i8*)* %62, i1 (i8*, i8*)** %64, align 8, !dbg !6412
  %65 = load %struct.hash_table*, %struct.hash_table** %4, align 8, !dbg !6413
  %66 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %65, i32 0, i32 8, !dbg !6414
  %67 = load void (i8*)*, void (i8*)** %66, align 8, !dbg !6414
  %68 = load %struct.hash_table*, %struct.hash_table** %7, align 8, !dbg !6415
  %69 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %68, i32 0, i32 8, !dbg !6416
  store void (i8*)* %67, void (i8*)** %69, align 8, !dbg !6417
  %70 = load %struct.hash_table*, %struct.hash_table** %4, align 8, !dbg !6418
  %71 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %70, i32 0, i32 9, !dbg !6419
  %72 = load %struct.hash_entry*, %struct.hash_entry** %71, align 8, !dbg !6419
  %73 = load %struct.hash_table*, %struct.hash_table** %7, align 8, !dbg !6420
  %74 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %73, i32 0, i32 9, !dbg !6421
  store %struct.hash_entry* %72, %struct.hash_entry** %74, align 8, !dbg !6422
  %75 = load %struct.hash_table*, %struct.hash_table** %7, align 8, !dbg !6423
  %76 = load %struct.hash_table*, %struct.hash_table** %4, align 8, !dbg !6425
  %77 = call zeroext i1 @transfer_entries(%struct.hash_table* %75, %struct.hash_table* %76, i1 zeroext false), !dbg !6426
  br i1 %77, label %78, label %108, !dbg !6427

; <label>:78:                                     ; preds = %35
  %79 = load %struct.hash_table*, %struct.hash_table** %4, align 8, !dbg !6428
  %80 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %79, i32 0, i32 0, !dbg !6430
  %81 = load %struct.hash_entry*, %struct.hash_entry** %80, align 8, !dbg !6430
  %82 = bitcast %struct.hash_entry* %81 to i8*, !dbg !6428
  call void @free(i8* %82) #8, !dbg !6431
  %83 = load %struct.hash_table*, %struct.hash_table** %7, align 8, !dbg !6432
  %84 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %83, i32 0, i32 0, !dbg !6433
  %85 = load %struct.hash_entry*, %struct.hash_entry** %84, align 8, !dbg !6433
  %86 = load %struct.hash_table*, %struct.hash_table** %4, align 8, !dbg !6434
  %87 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %86, i32 0, i32 0, !dbg !6435
  store %struct.hash_entry* %85, %struct.hash_entry** %87, align 8, !dbg !6436
  %88 = load %struct.hash_table*, %struct.hash_table** %7, align 8, !dbg !6437
  %89 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %88, i32 0, i32 1, !dbg !6438
  %90 = load %struct.hash_entry*, %struct.hash_entry** %89, align 8, !dbg !6438
  %91 = load %struct.hash_table*, %struct.hash_table** %4, align 8, !dbg !6439
  %92 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %91, i32 0, i32 1, !dbg !6440
  store %struct.hash_entry* %90, %struct.hash_entry** %92, align 8, !dbg !6441
  %93 = load %struct.hash_table*, %struct.hash_table** %7, align 8, !dbg !6442
  %94 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %93, i32 0, i32 2, !dbg !6443
  %95 = load i64, i64* %94, align 8, !dbg !6443
  %96 = load %struct.hash_table*, %struct.hash_table** %4, align 8, !dbg !6444
  %97 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %96, i32 0, i32 2, !dbg !6445
  store i64 %95, i64* %97, align 8, !dbg !6446
  %98 = load %struct.hash_table*, %struct.hash_table** %7, align 8, !dbg !6447
  %99 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %98, i32 0, i32 3, !dbg !6448
  %100 = load i64, i64* %99, align 8, !dbg !6448
  %101 = load %struct.hash_table*, %struct.hash_table** %4, align 8, !dbg !6449
  %102 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %101, i32 0, i32 3, !dbg !6450
  store i64 %100, i64* %102, align 8, !dbg !6451
  %103 = load %struct.hash_table*, %struct.hash_table** %7, align 8, !dbg !6452
  %104 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %103, i32 0, i32 9, !dbg !6453
  %105 = load %struct.hash_entry*, %struct.hash_entry** %104, align 8, !dbg !6453
  %106 = load %struct.hash_table*, %struct.hash_table** %4, align 8, !dbg !6454
  %107 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %106, i32 0, i32 9, !dbg !6455
  store %struct.hash_entry* %105, %struct.hash_entry** %107, align 8, !dbg !6456
  store i1 true, i1* %3, align 1, !dbg !6457
  br label %127, !dbg !6457

; <label>:108:                                    ; preds = %35
  %109 = load %struct.hash_table*, %struct.hash_table** %7, align 8, !dbg !6458
  %110 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %109, i32 0, i32 9, !dbg !6459
  %111 = load %struct.hash_entry*, %struct.hash_entry** %110, align 8, !dbg !6459
  %112 = load %struct.hash_table*, %struct.hash_table** %4, align 8, !dbg !6460
  %113 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %112, i32 0, i32 9, !dbg !6461
  store %struct.hash_entry* %111, %struct.hash_entry** %113, align 8, !dbg !6462
  %114 = load %struct.hash_table*, %struct.hash_table** %4, align 8, !dbg !6463
  %115 = load %struct.hash_table*, %struct.hash_table** %7, align 8, !dbg !6465
  %116 = call zeroext i1 @transfer_entries(%struct.hash_table* %114, %struct.hash_table* %115, i1 zeroext true), !dbg !6466
  br i1 %116, label %117, label %121, !dbg !6467

; <label>:117:                                    ; preds = %108
  %118 = load %struct.hash_table*, %struct.hash_table** %4, align 8, !dbg !6468
  %119 = load %struct.hash_table*, %struct.hash_table** %7, align 8, !dbg !6469
  %120 = call zeroext i1 @transfer_entries(%struct.hash_table* %118, %struct.hash_table* %119, i1 zeroext false), !dbg !6470
  br i1 %120, label %122, label %121, !dbg !6471

; <label>:121:                                    ; preds = %117, %108
  call void @abort() #11, !dbg !6472
  unreachable, !dbg !6472

; <label>:122:                                    ; preds = %117
  %123 = load %struct.hash_table*, %struct.hash_table** %7, align 8, !dbg !6473
  %124 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %123, i32 0, i32 0, !dbg !6474
  %125 = load %struct.hash_entry*, %struct.hash_entry** %124, align 8, !dbg !6474
  %126 = bitcast %struct.hash_entry* %125 to i8*, !dbg !6473
  call void @free(i8* %126) #8, !dbg !6475
  store i1 false, i1* %3, align 1, !dbg !6476
  br label %127, !dbg !6476

; <label>:127:                                    ; preds = %122, %78, %34, %23, %16
  %128 = load i1, i1* %3, align 1, !dbg !6477
  ret i1 %128, !dbg !6477
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i1 @transfer_entries(%struct.hash_table*, %struct.hash_table*, i1 zeroext) #3 !dbg !6478 {
  %4 = alloca i1, align 1
  %5 = alloca %struct.hash_table*, align 8
  %6 = alloca %struct.hash_table*, align 8
  %7 = alloca i8, align 1
  %8 = alloca %struct.hash_entry*, align 8
  %9 = alloca %struct.hash_entry*, align 8
  %10 = alloca %struct.hash_entry*, align 8
  %11 = alloca i8*, align 8
  %12 = alloca %struct.hash_entry*, align 8
  %13 = alloca %struct.hash_entry*, align 8
  store %struct.hash_table* %0, %struct.hash_table** %5, align 8
  call void @llvm.dbg.declare(metadata %struct.hash_table** %5, metadata !6481, metadata !DIExpression()), !dbg !6482
  store %struct.hash_table* %1, %struct.hash_table** %6, align 8
  call void @llvm.dbg.declare(metadata %struct.hash_table** %6, metadata !6483, metadata !DIExpression()), !dbg !6484
  %14 = zext i1 %2 to i8
  store i8 %14, i8* %7, align 1
  call void @llvm.dbg.declare(metadata i8* %7, metadata !6485, metadata !DIExpression()), !dbg !6486
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %8, metadata !6487, metadata !DIExpression()), !dbg !6488
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %9, metadata !6489, metadata !DIExpression()), !dbg !6490
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %10, metadata !6491, metadata !DIExpression()), !dbg !6492
  %15 = load %struct.hash_table*, %struct.hash_table** %6, align 8, !dbg !6493
  %16 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %15, i32 0, i32 0, !dbg !6495
  %17 = load %struct.hash_entry*, %struct.hash_entry** %16, align 8, !dbg !6495
  store %struct.hash_entry* %17, %struct.hash_entry** %8, align 8, !dbg !6496
  br label %18, !dbg !6497

; <label>:18:                                     ; preds = %155, %3
  %19 = load %struct.hash_entry*, %struct.hash_entry** %8, align 8, !dbg !6498
  %20 = load %struct.hash_table*, %struct.hash_table** %6, align 8, !dbg !6500
  %21 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %20, i32 0, i32 1, !dbg !6501
  %22 = load %struct.hash_entry*, %struct.hash_entry** %21, align 8, !dbg !6501
  %23 = icmp ult %struct.hash_entry* %19, %22, !dbg !6502
  br i1 %23, label %24, label %158, !dbg !6503

; <label>:24:                                     ; preds = %18
  %25 = load %struct.hash_entry*, %struct.hash_entry** %8, align 8, !dbg !6504
  %26 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %25, i32 0, i32 0, !dbg !6506
  %27 = load i8*, i8** %26, align 8, !dbg !6506
  %28 = icmp ne i8* %27, null, !dbg !6504
  br i1 %28, label %29, label %154, !dbg !6507

; <label>:29:                                     ; preds = %24
  call void @llvm.dbg.declare(metadata i8** %11, metadata !6508, metadata !DIExpression()), !dbg !6510
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %12, metadata !6511, metadata !DIExpression()), !dbg !6512
  %30 = load %struct.hash_entry*, %struct.hash_entry** %8, align 8, !dbg !6513
  %31 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %30, i32 0, i32 1, !dbg !6515
  %32 = load %struct.hash_entry*, %struct.hash_entry** %31, align 8, !dbg !6515
  store %struct.hash_entry* %32, %struct.hash_entry** %9, align 8, !dbg !6516
  br label %33, !dbg !6517

; <label>:33:                                     ; preds = %86, %29
  %34 = load %struct.hash_entry*, %struct.hash_entry** %9, align 8, !dbg !6518
  %35 = icmp ne %struct.hash_entry* %34, null, !dbg !6520
  br i1 %35, label %36, label %88, !dbg !6520

; <label>:36:                                     ; preds = %33
  %37 = load %struct.hash_entry*, %struct.hash_entry** %9, align 8, !dbg !6521
  %38 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %37, i32 0, i32 0, !dbg !6523
  %39 = load i8*, i8** %38, align 8, !dbg !6523
  store i8* %39, i8** %11, align 8, !dbg !6524
  %40 = load %struct.hash_table*, %struct.hash_table** %5, align 8, !dbg !6525
  %41 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %40, i32 0, i32 0, !dbg !6526
  %42 = load %struct.hash_entry*, %struct.hash_entry** %41, align 8, !dbg !6526
  %43 = load %struct.hash_table*, %struct.hash_table** %5, align 8, !dbg !6527
  %44 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %43, i32 0, i32 6, !dbg !6528
  %45 = load i64 (i8*, i64)*, i64 (i8*, i64)** %44, align 8, !dbg !6528
  %46 = load i8*, i8** %11, align 8, !dbg !6529
  %47 = load %struct.hash_table*, %struct.hash_table** %5, align 8, !dbg !6530
  %48 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %47, i32 0, i32 2, !dbg !6531
  %49 = load i64, i64* %48, align 8, !dbg !6531
  %50 = call i64 %45(i8* %46, i64 %49), !dbg !6527
  %51 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %42, i64 %50, !dbg !6532
  store %struct.hash_entry* %51, %struct.hash_entry** %12, align 8, !dbg !6533
  %52 = load %struct.hash_entry*, %struct.hash_entry** %12, align 8, !dbg !6534
  %53 = load %struct.hash_table*, %struct.hash_table** %5, align 8, !dbg !6536
  %54 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %53, i32 0, i32 1, !dbg !6537
  %55 = load %struct.hash_entry*, %struct.hash_entry** %54, align 8, !dbg !6537
  %56 = icmp ult %struct.hash_entry* %52, %55, !dbg !6538
  br i1 %56, label %58, label %57, !dbg !6539

; <label>:57:                                     ; preds = %36
  call void @abort() #11, !dbg !6540
  unreachable, !dbg !6540

; <label>:58:                                     ; preds = %36
  %59 = load %struct.hash_entry*, %struct.hash_entry** %9, align 8, !dbg !6541
  %60 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %59, i32 0, i32 1, !dbg !6542
  %61 = load %struct.hash_entry*, %struct.hash_entry** %60, align 8, !dbg !6542
  store %struct.hash_entry* %61, %struct.hash_entry** %10, align 8, !dbg !6543
  %62 = load %struct.hash_entry*, %struct.hash_entry** %12, align 8, !dbg !6544
  %63 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %62, i32 0, i32 0, !dbg !6546
  %64 = load i8*, i8** %63, align 8, !dbg !6546
  %65 = icmp ne i8* %64, null, !dbg !6544
  br i1 %65, label %66, label %75, !dbg !6547

; <label>:66:                                     ; preds = %58
  %67 = load %struct.hash_entry*, %struct.hash_entry** %12, align 8, !dbg !6548
  %68 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %67, i32 0, i32 1, !dbg !6550
  %69 = load %struct.hash_entry*, %struct.hash_entry** %68, align 8, !dbg !6550
  %70 = load %struct.hash_entry*, %struct.hash_entry** %9, align 8, !dbg !6551
  %71 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %70, i32 0, i32 1, !dbg !6552
  store %struct.hash_entry* %69, %struct.hash_entry** %71, align 8, !dbg !6553
  %72 = load %struct.hash_entry*, %struct.hash_entry** %9, align 8, !dbg !6554
  %73 = load %struct.hash_entry*, %struct.hash_entry** %12, align 8, !dbg !6555
  %74 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %73, i32 0, i32 1, !dbg !6556
  store %struct.hash_entry* %72, %struct.hash_entry** %74, align 8, !dbg !6557
  br label %85, !dbg !6558

; <label>:75:                                     ; preds = %58
  %76 = load i8*, i8** %11, align 8, !dbg !6559
  %77 = load %struct.hash_entry*, %struct.hash_entry** %12, align 8, !dbg !6561
  %78 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %77, i32 0, i32 0, !dbg !6562
  store i8* %76, i8** %78, align 8, !dbg !6563
  %79 = load %struct.hash_table*, %struct.hash_table** %5, align 8, !dbg !6564
  %80 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %79, i32 0, i32 3, !dbg !6565
  %81 = load i64, i64* %80, align 8, !dbg !6566
  %82 = add i64 %81, 1, !dbg !6566
  store i64 %82, i64* %80, align 8, !dbg !6566
  %83 = load %struct.hash_table*, %struct.hash_table** %5, align 8, !dbg !6567
  %84 = load %struct.hash_entry*, %struct.hash_entry** %9, align 8, !dbg !6568
  call void @free_entry(%struct.hash_table* %83, %struct.hash_entry* %84), !dbg !6569
  br label %85

; <label>:85:                                     ; preds = %75, %66
  br label %86, !dbg !6570

; <label>:86:                                     ; preds = %85
  %87 = load %struct.hash_entry*, %struct.hash_entry** %10, align 8, !dbg !6571
  store %struct.hash_entry* %87, %struct.hash_entry** %9, align 8, !dbg !6572
  br label %33, !dbg !6573, !llvm.loop !6574

; <label>:88:                                     ; preds = %33
  %89 = load %struct.hash_entry*, %struct.hash_entry** %8, align 8, !dbg !6576
  %90 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %89, i32 0, i32 0, !dbg !6577
  %91 = load i8*, i8** %90, align 8, !dbg !6577
  store i8* %91, i8** %11, align 8, !dbg !6578
  %92 = load %struct.hash_entry*, %struct.hash_entry** %8, align 8, !dbg !6579
  %93 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %92, i32 0, i32 1, !dbg !6580
  store %struct.hash_entry* null, %struct.hash_entry** %93, align 8, !dbg !6581
  %94 = load i8, i8* %7, align 1, !dbg !6582
  %95 = trunc i8 %94 to i1, !dbg !6582
  br i1 %95, label %96, label %97, !dbg !6584

; <label>:96:                                     ; preds = %88
  br label %155, !dbg !6585

; <label>:97:                                     ; preds = %88
  %98 = load %struct.hash_table*, %struct.hash_table** %5, align 8, !dbg !6586
  %99 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %98, i32 0, i32 0, !dbg !6587
  %100 = load %struct.hash_entry*, %struct.hash_entry** %99, align 8, !dbg !6587
  %101 = load %struct.hash_table*, %struct.hash_table** %5, align 8, !dbg !6588
  %102 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %101, i32 0, i32 6, !dbg !6589
  %103 = load i64 (i8*, i64)*, i64 (i8*, i64)** %102, align 8, !dbg !6589
  %104 = load i8*, i8** %11, align 8, !dbg !6590
  %105 = load %struct.hash_table*, %struct.hash_table** %5, align 8, !dbg !6591
  %106 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %105, i32 0, i32 2, !dbg !6592
  %107 = load i64, i64* %106, align 8, !dbg !6592
  %108 = call i64 %103(i8* %104, i64 %107), !dbg !6588
  %109 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %100, i64 %108, !dbg !6593
  store %struct.hash_entry* %109, %struct.hash_entry** %12, align 8, !dbg !6594
  %110 = load %struct.hash_entry*, %struct.hash_entry** %12, align 8, !dbg !6595
  %111 = load %struct.hash_table*, %struct.hash_table** %5, align 8, !dbg !6597
  %112 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %111, i32 0, i32 1, !dbg !6598
  %113 = load %struct.hash_entry*, %struct.hash_entry** %112, align 8, !dbg !6598
  %114 = icmp ult %struct.hash_entry* %110, %113, !dbg !6599
  br i1 %114, label %116, label %115, !dbg !6600

; <label>:115:                                    ; preds = %97
  call void @abort() #11, !dbg !6601
  unreachable, !dbg !6601

; <label>:116:                                    ; preds = %97
  %117 = load %struct.hash_entry*, %struct.hash_entry** %12, align 8, !dbg !6602
  %118 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %117, i32 0, i32 0, !dbg !6604
  %119 = load i8*, i8** %118, align 8, !dbg !6604
  %120 = icmp ne i8* %119, null, !dbg !6602
  br i1 %120, label %121, label %139, !dbg !6605

; <label>:121:                                    ; preds = %116
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %13, metadata !6606, metadata !DIExpression()), !dbg !6608
  %122 = load %struct.hash_table*, %struct.hash_table** %5, align 8, !dbg !6609
  %123 = call %struct.hash_entry* @allocate_entry(%struct.hash_table* %122), !dbg !6610
  store %struct.hash_entry* %123, %struct.hash_entry** %13, align 8, !dbg !6608
  %124 = load %struct.hash_entry*, %struct.hash_entry** %13, align 8, !dbg !6611
  %125 = icmp eq %struct.hash_entry* %124, null, !dbg !6613
  br i1 %125, label %126, label %127, !dbg !6614

; <label>:126:                                    ; preds = %121
  store i1 false, i1* %4, align 1, !dbg !6615
  br label %159, !dbg !6615

; <label>:127:                                    ; preds = %121
  %128 = load i8*, i8** %11, align 8, !dbg !6616
  %129 = load %struct.hash_entry*, %struct.hash_entry** %13, align 8, !dbg !6617
  %130 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %129, i32 0, i32 0, !dbg !6618
  store i8* %128, i8** %130, align 8, !dbg !6619
  %131 = load %struct.hash_entry*, %struct.hash_entry** %12, align 8, !dbg !6620
  %132 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %131, i32 0, i32 1, !dbg !6621
  %133 = load %struct.hash_entry*, %struct.hash_entry** %132, align 8, !dbg !6621
  %134 = load %struct.hash_entry*, %struct.hash_entry** %13, align 8, !dbg !6622
  %135 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %134, i32 0, i32 1, !dbg !6623
  store %struct.hash_entry* %133, %struct.hash_entry** %135, align 8, !dbg !6624
  %136 = load %struct.hash_entry*, %struct.hash_entry** %13, align 8, !dbg !6625
  %137 = load %struct.hash_entry*, %struct.hash_entry** %12, align 8, !dbg !6626
  %138 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %137, i32 0, i32 1, !dbg !6627
  store %struct.hash_entry* %136, %struct.hash_entry** %138, align 8, !dbg !6628
  br label %147, !dbg !6629

; <label>:139:                                    ; preds = %116
  %140 = load i8*, i8** %11, align 8, !dbg !6630
  %141 = load %struct.hash_entry*, %struct.hash_entry** %12, align 8, !dbg !6632
  %142 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %141, i32 0, i32 0, !dbg !6633
  store i8* %140, i8** %142, align 8, !dbg !6634
  %143 = load %struct.hash_table*, %struct.hash_table** %5, align 8, !dbg !6635
  %144 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %143, i32 0, i32 3, !dbg !6636
  %145 = load i64, i64* %144, align 8, !dbg !6637
  %146 = add i64 %145, 1, !dbg !6637
  store i64 %146, i64* %144, align 8, !dbg !6637
  br label %147

; <label>:147:                                    ; preds = %139, %127
  %148 = load %struct.hash_entry*, %struct.hash_entry** %8, align 8, !dbg !6638
  %149 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %148, i32 0, i32 0, !dbg !6639
  store i8* null, i8** %149, align 8, !dbg !6640
  %150 = load %struct.hash_table*, %struct.hash_table** %6, align 8, !dbg !6641
  %151 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %150, i32 0, i32 3, !dbg !6642
  %152 = load i64, i64* %151, align 8, !dbg !6643
  %153 = add i64 %152, -1, !dbg !6643
  store i64 %153, i64* %151, align 8, !dbg !6643
  br label %154, !dbg !6644

; <label>:154:                                    ; preds = %147, %24
  br label %155, !dbg !6506

; <label>:155:                                    ; preds = %154, %96
  %156 = load %struct.hash_entry*, %struct.hash_entry** %8, align 8, !dbg !6645
  %157 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %156, i32 1, !dbg !6645
  store %struct.hash_entry* %157, %struct.hash_entry** %8, align 8, !dbg !6645
  br label %18, !dbg !6646, !llvm.loop !6647

; <label>:158:                                    ; preds = %18
  store i1 true, i1* %4, align 1, !dbg !6649
  br label %159, !dbg !6649

; <label>:159:                                    ; preds = %158, %126
  %160 = load i1, i1* %4, align 1, !dbg !6650
  ret i1 %160, !dbg !6650
}

; Function Attrs: noinline nounwind uwtable
define internal void @free_entry(%struct.hash_table*, %struct.hash_entry*) #3 !dbg !6651 {
  %3 = alloca %struct.hash_table*, align 8
  %4 = alloca %struct.hash_entry*, align 8
  store %struct.hash_table* %0, %struct.hash_table** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.hash_table** %3, metadata !6654, metadata !DIExpression()), !dbg !6655
  store %struct.hash_entry* %1, %struct.hash_entry** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %4, metadata !6656, metadata !DIExpression()), !dbg !6657
  %5 = load %struct.hash_entry*, %struct.hash_entry** %4, align 8, !dbg !6658
  %6 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %5, i32 0, i32 0, !dbg !6659
  store i8* null, i8** %6, align 8, !dbg !6660
  %7 = load %struct.hash_table*, %struct.hash_table** %3, align 8, !dbg !6661
  %8 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %7, i32 0, i32 9, !dbg !6662
  %9 = load %struct.hash_entry*, %struct.hash_entry** %8, align 8, !dbg !6662
  %10 = load %struct.hash_entry*, %struct.hash_entry** %4, align 8, !dbg !6663
  %11 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %10, i32 0, i32 1, !dbg !6664
  store %struct.hash_entry* %9, %struct.hash_entry** %11, align 8, !dbg !6665
  %12 = load %struct.hash_entry*, %struct.hash_entry** %4, align 8, !dbg !6666
  %13 = load %struct.hash_table*, %struct.hash_table** %3, align 8, !dbg !6667
  %14 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %13, i32 0, i32 9, !dbg !6668
  store %struct.hash_entry* %12, %struct.hash_entry** %14, align 8, !dbg !6669
  ret void, !dbg !6670
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.hash_entry* @allocate_entry(%struct.hash_table*) #3 !dbg !6671 {
  %2 = alloca %struct.hash_table*, align 8
  %3 = alloca %struct.hash_entry*, align 8
  store %struct.hash_table* %0, %struct.hash_table** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.hash_table** %2, metadata !6674, metadata !DIExpression()), !dbg !6675
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %3, metadata !6676, metadata !DIExpression()), !dbg !6677
  %4 = load %struct.hash_table*, %struct.hash_table** %2, align 8, !dbg !6678
  %5 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %4, i32 0, i32 9, !dbg !6680
  %6 = load %struct.hash_entry*, %struct.hash_entry** %5, align 8, !dbg !6680
  %7 = icmp ne %struct.hash_entry* %6, null, !dbg !6678
  br i1 %7, label %8, label %17, !dbg !6681

; <label>:8:                                      ; preds = %1
  %9 = load %struct.hash_table*, %struct.hash_table** %2, align 8, !dbg !6682
  %10 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %9, i32 0, i32 9, !dbg !6684
  %11 = load %struct.hash_entry*, %struct.hash_entry** %10, align 8, !dbg !6684
  store %struct.hash_entry* %11, %struct.hash_entry** %3, align 8, !dbg !6685
  %12 = load %struct.hash_entry*, %struct.hash_entry** %3, align 8, !dbg !6686
  %13 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %12, i32 0, i32 1, !dbg !6687
  %14 = load %struct.hash_entry*, %struct.hash_entry** %13, align 8, !dbg !6687
  %15 = load %struct.hash_table*, %struct.hash_table** %2, align 8, !dbg !6688
  %16 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %15, i32 0, i32 9, !dbg !6689
  store %struct.hash_entry* %14, %struct.hash_entry** %16, align 8, !dbg !6690
  br label %20, !dbg !6691

; <label>:17:                                     ; preds = %1
  %18 = call noalias i8* @malloc(i64 16) #8, !dbg !6692
  %19 = bitcast i8* %18 to %struct.hash_entry*, !dbg !6692
  store %struct.hash_entry* %19, %struct.hash_entry** %3, align 8, !dbg !6694
  br label %20

; <label>:20:                                     ; preds = %17, %8
  %21 = load %struct.hash_entry*, %struct.hash_entry** %3, align 8, !dbg !6695
  ret %struct.hash_entry* %21, !dbg !6696
}

; Function Attrs: noinline nounwind uwtable
define i8* @hash_insert(%struct.hash_table*, i8*) #3 !dbg !6697 {
  %3 = alloca i8*, align 8
  %4 = alloca %struct.hash_table*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca %struct.hash_entry*, align 8
  %8 = alloca %struct.hash_tuning*, align 8
  %9 = alloca float, align 4
  %10 = alloca %struct.hash_entry*, align 8
  store %struct.hash_table* %0, %struct.hash_table** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.hash_table** %4, metadata !6700, metadata !DIExpression()), !dbg !6701
  store i8* %1, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !6702, metadata !DIExpression()), !dbg !6703
  call void @llvm.dbg.declare(metadata i8** %6, metadata !6704, metadata !DIExpression()), !dbg !6705
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %7, metadata !6706, metadata !DIExpression()), !dbg !6707
  %11 = load i8*, i8** %5, align 8, !dbg !6708
  %12 = icmp ne i8* %11, null, !dbg !6708
  br i1 %12, label %14, label %13, !dbg !6710

; <label>:13:                                     ; preds = %2
  call void @abort() #11, !dbg !6711
  unreachable, !dbg !6711

; <label>:14:                                     ; preds = %2
  %15 = load %struct.hash_table*, %struct.hash_table** %4, align 8, !dbg !6712
  %16 = load i8*, i8** %5, align 8, !dbg !6714
  %17 = call i8* @hash_find_entry(%struct.hash_table* %15, i8* %16, %struct.hash_entry** %7, i1 zeroext false), !dbg !6715
  store i8* %17, i8** %6, align 8, !dbg !6716
  %18 = icmp ne i8* %17, null, !dbg !6717
  br i1 %18, label %19, label %21, !dbg !6718

; <label>:19:                                     ; preds = %14
  %20 = load i8*, i8** %6, align 8, !dbg !6719
  store i8* %20, i8** %3, align 8, !dbg !6720
  br label %145, !dbg !6720

; <label>:21:                                     ; preds = %14
  %22 = load %struct.hash_table*, %struct.hash_table** %4, align 8, !dbg !6721
  %23 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %22, i32 0, i32 3, !dbg !6723
  %24 = load i64, i64* %23, align 8, !dbg !6723
  %25 = uitofp i64 %24 to float, !dbg !6721
  %26 = load %struct.hash_table*, %struct.hash_table** %4, align 8, !dbg !6724
  %27 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %26, i32 0, i32 5, !dbg !6725
  %28 = load %struct.hash_tuning*, %struct.hash_tuning** %27, align 8, !dbg !6725
  %29 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %28, i32 0, i32 2, !dbg !6726
  %30 = load float, float* %29, align 4, !dbg !6726
  %31 = load %struct.hash_table*, %struct.hash_table** %4, align 8, !dbg !6727
  %32 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %31, i32 0, i32 2, !dbg !6728
  %33 = load i64, i64* %32, align 8, !dbg !6728
  %34 = uitofp i64 %33 to float, !dbg !6727
  %35 = fmul float %30, %34, !dbg !6729
  %36 = fcmp ogt float %25, %35, !dbg !6730
  br i1 %36, label %37, label %104, !dbg !6731

; <label>:37:                                     ; preds = %21
  %38 = load %struct.hash_table*, %struct.hash_table** %4, align 8, !dbg !6732
  %39 = call zeroext i1 @check_tuning(%struct.hash_table* %38), !dbg !6734
  %40 = load %struct.hash_table*, %struct.hash_table** %4, align 8, !dbg !6735
  %41 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %40, i32 0, i32 3, !dbg !6737
  %42 = load i64, i64* %41, align 8, !dbg !6737
  %43 = uitofp i64 %42 to float, !dbg !6735
  %44 = load %struct.hash_table*, %struct.hash_table** %4, align 8, !dbg !6738
  %45 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %44, i32 0, i32 5, !dbg !6739
  %46 = load %struct.hash_tuning*, %struct.hash_tuning** %45, align 8, !dbg !6739
  %47 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %46, i32 0, i32 2, !dbg !6740
  %48 = load float, float* %47, align 4, !dbg !6740
  %49 = load %struct.hash_table*, %struct.hash_table** %4, align 8, !dbg !6741
  %50 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %49, i32 0, i32 2, !dbg !6742
  %51 = load i64, i64* %50, align 8, !dbg !6742
  %52 = uitofp i64 %51 to float, !dbg !6741
  %53 = fmul float %48, %52, !dbg !6743
  %54 = fcmp ogt float %43, %53, !dbg !6744
  br i1 %54, label %55, label %103, !dbg !6745

; <label>:55:                                     ; preds = %37
  call void @llvm.dbg.declare(metadata %struct.hash_tuning** %8, metadata !6746, metadata !DIExpression()), !dbg !6748
  %56 = load %struct.hash_table*, %struct.hash_table** %4, align 8, !dbg !6749
  %57 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %56, i32 0, i32 5, !dbg !6750
  %58 = load %struct.hash_tuning*, %struct.hash_tuning** %57, align 8, !dbg !6750
  store %struct.hash_tuning* %58, %struct.hash_tuning** %8, align 8, !dbg !6748
  call void @llvm.dbg.declare(metadata float* %9, metadata !6751, metadata !DIExpression()), !dbg !6752
  %59 = load %struct.hash_tuning*, %struct.hash_tuning** %8, align 8, !dbg !6753
  %60 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %59, i32 0, i32 4, !dbg !6754
  %61 = load i8, i8* %60, align 4, !dbg !6754
  %62 = trunc i8 %61 to i1, !dbg !6754
  br i1 %62, label %63, label %72, !dbg !6753

; <label>:63:                                     ; preds = %55
  %64 = load %struct.hash_table*, %struct.hash_table** %4, align 8, !dbg !6755
  %65 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %64, i32 0, i32 2, !dbg !6756
  %66 = load i64, i64* %65, align 8, !dbg !6756
  %67 = uitofp i64 %66 to float, !dbg !6755
  %68 = load %struct.hash_tuning*, %struct.hash_tuning** %8, align 8, !dbg !6757
  %69 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %68, i32 0, i32 3, !dbg !6758
  %70 = load float, float* %69, align 4, !dbg !6758
  %71 = fmul float %67, %70, !dbg !6759
  br label %85, !dbg !6753

; <label>:72:                                     ; preds = %55
  %73 = load %struct.hash_table*, %struct.hash_table** %4, align 8, !dbg !6760
  %74 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %73, i32 0, i32 2, !dbg !6761
  %75 = load i64, i64* %74, align 8, !dbg !6761
  %76 = uitofp i64 %75 to float, !dbg !6760
  %77 = load %struct.hash_tuning*, %struct.hash_tuning** %8, align 8, !dbg !6762
  %78 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %77, i32 0, i32 3, !dbg !6763
  %79 = load float, float* %78, align 4, !dbg !6763
  %80 = fmul float %76, %79, !dbg !6764
  %81 = load %struct.hash_tuning*, %struct.hash_tuning** %8, align 8, !dbg !6765
  %82 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %81, i32 0, i32 2, !dbg !6766
  %83 = load float, float* %82, align 4, !dbg !6766
  %84 = fmul float %80, %83, !dbg !6767
  br label %85, !dbg !6753

; <label>:85:                                     ; preds = %72, %63
  %86 = phi float [ %71, %63 ], [ %84, %72 ], !dbg !6753
  store float %86, float* %9, align 4, !dbg !6752
  %87 = load float, float* %9, align 4, !dbg !6768
  %88 = fcmp ole float 0x43F0000000000000, %87, !dbg !6770
  br i1 %88, label %89, label %90, !dbg !6771

; <label>:89:                                     ; preds = %85
  store i8* null, i8** %3, align 8, !dbg !6772
  br label %145, !dbg !6772

; <label>:90:                                     ; preds = %85
  %91 = load %struct.hash_table*, %struct.hash_table** %4, align 8, !dbg !6773
  %92 = load float, float* %9, align 4, !dbg !6775
  %93 = fptoui float %92 to i64, !dbg !6775
  %94 = call zeroext i1 @hash_rehash(%struct.hash_table* %91, i64 %93), !dbg !6776
  br i1 %94, label %96, label %95, !dbg !6777

; <label>:95:                                     ; preds = %90
  store i8* null, i8** %3, align 8, !dbg !6778
  br label %145, !dbg !6778

; <label>:96:                                     ; preds = %90
  %97 = load %struct.hash_table*, %struct.hash_table** %4, align 8, !dbg !6779
  %98 = load i8*, i8** %5, align 8, !dbg !6781
  %99 = call i8* @hash_find_entry(%struct.hash_table* %97, i8* %98, %struct.hash_entry** %7, i1 zeroext false), !dbg !6782
  %100 = icmp ne i8* %99, null, !dbg !6783
  br i1 %100, label %101, label %102, !dbg !6784

; <label>:101:                                    ; preds = %96
  call void @abort() #11, !dbg !6785
  unreachable, !dbg !6785

; <label>:102:                                    ; preds = %96
  br label %103, !dbg !6786

; <label>:103:                                    ; preds = %102, %37
  br label %104, !dbg !6787

; <label>:104:                                    ; preds = %103, %21
  %105 = load %struct.hash_entry*, %struct.hash_entry** %7, align 8, !dbg !6788
  %106 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %105, i32 0, i32 0, !dbg !6790
  %107 = load i8*, i8** %106, align 8, !dbg !6790
  %108 = icmp ne i8* %107, null, !dbg !6788
  br i1 %108, label %109, label %132, !dbg !6791

; <label>:109:                                    ; preds = %104
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %10, metadata !6792, metadata !DIExpression()), !dbg !6794
  %110 = load %struct.hash_table*, %struct.hash_table** %4, align 8, !dbg !6795
  %111 = call %struct.hash_entry* @allocate_entry(%struct.hash_table* %110), !dbg !6796
  store %struct.hash_entry* %111, %struct.hash_entry** %10, align 8, !dbg !6794
  %112 = load %struct.hash_entry*, %struct.hash_entry** %10, align 8, !dbg !6797
  %113 = icmp eq %struct.hash_entry* %112, null, !dbg !6799
  br i1 %113, label %114, label %115, !dbg !6800

; <label>:114:                                    ; preds = %109
  store i8* null, i8** %3, align 8, !dbg !6801
  br label %145, !dbg !6801

; <label>:115:                                    ; preds = %109
  %116 = load i8*, i8** %5, align 8, !dbg !6802
  %117 = load %struct.hash_entry*, %struct.hash_entry** %10, align 8, !dbg !6803
  %118 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %117, i32 0, i32 0, !dbg !6804
  store i8* %116, i8** %118, align 8, !dbg !6805
  %119 = load %struct.hash_entry*, %struct.hash_entry** %7, align 8, !dbg !6806
  %120 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %119, i32 0, i32 1, !dbg !6807
  %121 = load %struct.hash_entry*, %struct.hash_entry** %120, align 8, !dbg !6807
  %122 = load %struct.hash_entry*, %struct.hash_entry** %10, align 8, !dbg !6808
  %123 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %122, i32 0, i32 1, !dbg !6809
  store %struct.hash_entry* %121, %struct.hash_entry** %123, align 8, !dbg !6810
  %124 = load %struct.hash_entry*, %struct.hash_entry** %10, align 8, !dbg !6811
  %125 = load %struct.hash_entry*, %struct.hash_entry** %7, align 8, !dbg !6812
  %126 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %125, i32 0, i32 1, !dbg !6813
  store %struct.hash_entry* %124, %struct.hash_entry** %126, align 8, !dbg !6814
  %127 = load %struct.hash_table*, %struct.hash_table** %4, align 8, !dbg !6815
  %128 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %127, i32 0, i32 4, !dbg !6816
  %129 = load i64, i64* %128, align 8, !dbg !6817
  %130 = add i64 %129, 1, !dbg !6817
  store i64 %130, i64* %128, align 8, !dbg !6817
  %131 = load i8*, i8** %5, align 8, !dbg !6818
  store i8* %131, i8** %3, align 8, !dbg !6819
  br label %145, !dbg !6819

; <label>:132:                                    ; preds = %104
  %133 = load i8*, i8** %5, align 8, !dbg !6820
  %134 = load %struct.hash_entry*, %struct.hash_entry** %7, align 8, !dbg !6821
  %135 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %134, i32 0, i32 0, !dbg !6822
  store i8* %133, i8** %135, align 8, !dbg !6823
  %136 = load %struct.hash_table*, %struct.hash_table** %4, align 8, !dbg !6824
  %137 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %136, i32 0, i32 4, !dbg !6825
  %138 = load i64, i64* %137, align 8, !dbg !6826
  %139 = add i64 %138, 1, !dbg !6826
  store i64 %139, i64* %137, align 8, !dbg !6826
  %140 = load %struct.hash_table*, %struct.hash_table** %4, align 8, !dbg !6827
  %141 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %140, i32 0, i32 3, !dbg !6828
  %142 = load i64, i64* %141, align 8, !dbg !6829
  %143 = add i64 %142, 1, !dbg !6829
  store i64 %143, i64* %141, align 8, !dbg !6829
  %144 = load i8*, i8** %5, align 8, !dbg !6830
  store i8* %144, i8** %3, align 8, !dbg !6831
  br label %145, !dbg !6831

; <label>:145:                                    ; preds = %132, %115, %114, %95, %89, %19
  %146 = load i8*, i8** %3, align 8, !dbg !6832
  ret i8* %146, !dbg !6832
}

; Function Attrs: noinline nounwind uwtable
define internal i8* @hash_find_entry(%struct.hash_table*, i8*, %struct.hash_entry**, i1 zeroext) #3 !dbg !6833 {
  %5 = alloca i8*, align 8
  %6 = alloca %struct.hash_table*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca %struct.hash_entry**, align 8
  %9 = alloca i8, align 1
  %10 = alloca %struct.hash_entry*, align 8
  %11 = alloca %struct.hash_entry*, align 8
  %12 = alloca i8*, align 8
  %13 = alloca %struct.hash_entry*, align 8
  %14 = alloca i8*, align 8
  %15 = alloca %struct.hash_entry*, align 8
  store %struct.hash_table* %0, %struct.hash_table** %6, align 8
  call void @llvm.dbg.declare(metadata %struct.hash_table** %6, metadata !6837, metadata !DIExpression()), !dbg !6838
  store i8* %1, i8** %7, align 8
  call void @llvm.dbg.declare(metadata i8** %7, metadata !6839, metadata !DIExpression()), !dbg !6840
  store %struct.hash_entry** %2, %struct.hash_entry*** %8, align 8
  call void @llvm.dbg.declare(metadata %struct.hash_entry*** %8, metadata !6841, metadata !DIExpression()), !dbg !6842
  %16 = zext i1 %3 to i8
  store i8 %16, i8* %9, align 1
  call void @llvm.dbg.declare(metadata i8* %9, metadata !6843, metadata !DIExpression()), !dbg !6844
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %10, metadata !6845, metadata !DIExpression()), !dbg !6846
  %17 = load %struct.hash_table*, %struct.hash_table** %6, align 8, !dbg !6847
  %18 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %17, i32 0, i32 0, !dbg !6848
  %19 = load %struct.hash_entry*, %struct.hash_entry** %18, align 8, !dbg !6848
  %20 = load %struct.hash_table*, %struct.hash_table** %6, align 8, !dbg !6849
  %21 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %20, i32 0, i32 6, !dbg !6850
  %22 = load i64 (i8*, i64)*, i64 (i8*, i64)** %21, align 8, !dbg !6850
  %23 = load i8*, i8** %7, align 8, !dbg !6851
  %24 = load %struct.hash_table*, %struct.hash_table** %6, align 8, !dbg !6852
  %25 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %24, i32 0, i32 2, !dbg !6853
  %26 = load i64, i64* %25, align 8, !dbg !6853
  %27 = call i64 %22(i8* %23, i64 %26), !dbg !6849
  %28 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %19, i64 %27, !dbg !6854
  store %struct.hash_entry* %28, %struct.hash_entry** %10, align 8, !dbg !6846
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %11, metadata !6855, metadata !DIExpression()), !dbg !6856
  %29 = load %struct.hash_entry*, %struct.hash_entry** %10, align 8, !dbg !6857
  %30 = load %struct.hash_table*, %struct.hash_table** %6, align 8, !dbg !6859
  %31 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %30, i32 0, i32 1, !dbg !6860
  %32 = load %struct.hash_entry*, %struct.hash_entry** %31, align 8, !dbg !6860
  %33 = icmp ult %struct.hash_entry* %29, %32, !dbg !6861
  br i1 %33, label %35, label %34, !dbg !6862

; <label>:34:                                     ; preds = %4
  call void @abort() #11, !dbg !6863
  unreachable, !dbg !6863

; <label>:35:                                     ; preds = %4
  %36 = load %struct.hash_entry*, %struct.hash_entry** %10, align 8, !dbg !6864
  %37 = load %struct.hash_entry**, %struct.hash_entry*** %8, align 8, !dbg !6865
  store %struct.hash_entry* %36, %struct.hash_entry** %37, align 8, !dbg !6866
  %38 = load %struct.hash_entry*, %struct.hash_entry** %10, align 8, !dbg !6867
  %39 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %38, i32 0, i32 0, !dbg !6869
  %40 = load i8*, i8** %39, align 8, !dbg !6869
  %41 = icmp eq i8* %40, null, !dbg !6870
  br i1 %41, label %42, label %43, !dbg !6871

; <label>:42:                                     ; preds = %35
  store i8* null, i8** %5, align 8, !dbg !6872
  br label %138, !dbg !6872

; <label>:43:                                     ; preds = %35
  %44 = load i8*, i8** %7, align 8, !dbg !6873
  %45 = load %struct.hash_entry*, %struct.hash_entry** %10, align 8, !dbg !6875
  %46 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %45, i32 0, i32 0, !dbg !6876
  %47 = load i8*, i8** %46, align 8, !dbg !6876
  %48 = icmp eq i8* %44, %47, !dbg !6877
  br i1 %48, label %58, label %49, !dbg !6878

; <label>:49:                                     ; preds = %43
  %50 = load %struct.hash_table*, %struct.hash_table** %6, align 8, !dbg !6879
  %51 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %50, i32 0, i32 7, !dbg !6880
  %52 = load i1 (i8*, i8*)*, i1 (i8*, i8*)** %51, align 8, !dbg !6880
  %53 = load i8*, i8** %7, align 8, !dbg !6881
  %54 = load %struct.hash_entry*, %struct.hash_entry** %10, align 8, !dbg !6882
  %55 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %54, i32 0, i32 0, !dbg !6883
  %56 = load i8*, i8** %55, align 8, !dbg !6883
  %57 = call zeroext i1 %52(i8* %53, i8* %56), !dbg !6879
  br i1 %57, label %58, label %85, !dbg !6884

; <label>:58:                                     ; preds = %49, %43
  call void @llvm.dbg.declare(metadata i8** %12, metadata !6885, metadata !DIExpression()), !dbg !6887
  %59 = load %struct.hash_entry*, %struct.hash_entry** %10, align 8, !dbg !6888
  %60 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %59, i32 0, i32 0, !dbg !6889
  %61 = load i8*, i8** %60, align 8, !dbg !6889
  store i8* %61, i8** %12, align 8, !dbg !6887
  %62 = load i8, i8* %9, align 1, !dbg !6890
  %63 = trunc i8 %62 to i1, !dbg !6890
  br i1 %63, label %64, label %83, !dbg !6892

; <label>:64:                                     ; preds = %58
  %65 = load %struct.hash_entry*, %struct.hash_entry** %10, align 8, !dbg !6893
  %66 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %65, i32 0, i32 1, !dbg !6896
  %67 = load %struct.hash_entry*, %struct.hash_entry** %66, align 8, !dbg !6896
  %68 = icmp ne %struct.hash_entry* %67, null, !dbg !6893
  br i1 %68, label %69, label %79, !dbg !6897

; <label>:69:                                     ; preds = %64
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %13, metadata !6898, metadata !DIExpression()), !dbg !6900
  %70 = load %struct.hash_entry*, %struct.hash_entry** %10, align 8, !dbg !6901
  %71 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %70, i32 0, i32 1, !dbg !6902
  %72 = load %struct.hash_entry*, %struct.hash_entry** %71, align 8, !dbg !6902
  store %struct.hash_entry* %72, %struct.hash_entry** %13, align 8, !dbg !6900
  %73 = load %struct.hash_entry*, %struct.hash_entry** %10, align 8, !dbg !6903
  %74 = load %struct.hash_entry*, %struct.hash_entry** %13, align 8, !dbg !6904
  %75 = bitcast %struct.hash_entry* %73 to i8*, !dbg !6905
  %76 = bitcast %struct.hash_entry* %74 to i8*, !dbg !6905
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %75, i8* %76, i64 16, i32 8, i1 false), !dbg !6905
  %77 = load %struct.hash_table*, %struct.hash_table** %6, align 8, !dbg !6906
  %78 = load %struct.hash_entry*, %struct.hash_entry** %13, align 8, !dbg !6907
  call void @free_entry(%struct.hash_table* %77, %struct.hash_entry* %78), !dbg !6908
  br label %82, !dbg !6909

; <label>:79:                                     ; preds = %64
  %80 = load %struct.hash_entry*, %struct.hash_entry** %10, align 8, !dbg !6910
  %81 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %80, i32 0, i32 0, !dbg !6912
  store i8* null, i8** %81, align 8, !dbg !6913
  br label %82

; <label>:82:                                     ; preds = %79, %69
  br label %83, !dbg !6914

; <label>:83:                                     ; preds = %82, %58
  %84 = load i8*, i8** %12, align 8, !dbg !6915
  store i8* %84, i8** %5, align 8, !dbg !6916
  br label %138, !dbg !6916

; <label>:85:                                     ; preds = %49
  %86 = load %struct.hash_entry*, %struct.hash_entry** %10, align 8, !dbg !6917
  store %struct.hash_entry* %86, %struct.hash_entry** %11, align 8, !dbg !6919
  br label %87, !dbg !6920

; <label>:87:                                     ; preds = %133, %85
  %88 = load %struct.hash_entry*, %struct.hash_entry** %11, align 8, !dbg !6921
  %89 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %88, i32 0, i32 1, !dbg !6923
  %90 = load %struct.hash_entry*, %struct.hash_entry** %89, align 8, !dbg !6923
  %91 = icmp ne %struct.hash_entry* %90, null, !dbg !6924
  br i1 %91, label %92, label %137, !dbg !6924

; <label>:92:                                     ; preds = %87
  %93 = load i8*, i8** %7, align 8, !dbg !6925
  %94 = load %struct.hash_entry*, %struct.hash_entry** %11, align 8, !dbg !6928
  %95 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %94, i32 0, i32 1, !dbg !6929
  %96 = load %struct.hash_entry*, %struct.hash_entry** %95, align 8, !dbg !6929
  %97 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %96, i32 0, i32 0, !dbg !6930
  %98 = load i8*, i8** %97, align 8, !dbg !6930
  %99 = icmp eq i8* %93, %98, !dbg !6931
  br i1 %99, label %111, label %100, !dbg !6932

; <label>:100:                                    ; preds = %92
  %101 = load %struct.hash_table*, %struct.hash_table** %6, align 8, !dbg !6933
  %102 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %101, i32 0, i32 7, !dbg !6934
  %103 = load i1 (i8*, i8*)*, i1 (i8*, i8*)** %102, align 8, !dbg !6934
  %104 = load i8*, i8** %7, align 8, !dbg !6935
  %105 = load %struct.hash_entry*, %struct.hash_entry** %11, align 8, !dbg !6936
  %106 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %105, i32 0, i32 1, !dbg !6937
  %107 = load %struct.hash_entry*, %struct.hash_entry** %106, align 8, !dbg !6937
  %108 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %107, i32 0, i32 0, !dbg !6938
  %109 = load i8*, i8** %108, align 8, !dbg !6938
  %110 = call zeroext i1 %103(i8* %104, i8* %109), !dbg !6933
  br i1 %110, label %111, label %132, !dbg !6939

; <label>:111:                                    ; preds = %100, %92
  call void @llvm.dbg.declare(metadata i8** %14, metadata !6940, metadata !DIExpression()), !dbg !6942
  %112 = load %struct.hash_entry*, %struct.hash_entry** %11, align 8, !dbg !6943
  %113 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %112, i32 0, i32 1, !dbg !6944
  %114 = load %struct.hash_entry*, %struct.hash_entry** %113, align 8, !dbg !6944
  %115 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %114, i32 0, i32 0, !dbg !6945
  %116 = load i8*, i8** %115, align 8, !dbg !6945
  store i8* %116, i8** %14, align 8, !dbg !6942
  %117 = load i8, i8* %9, align 1, !dbg !6946
  %118 = trunc i8 %117 to i1, !dbg !6946
  br i1 %118, label %119, label %130, !dbg !6948

; <label>:119:                                    ; preds = %111
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %15, metadata !6949, metadata !DIExpression()), !dbg !6951
  %120 = load %struct.hash_entry*, %struct.hash_entry** %11, align 8, !dbg !6952
  %121 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %120, i32 0, i32 1, !dbg !6953
  %122 = load %struct.hash_entry*, %struct.hash_entry** %121, align 8, !dbg !6953
  store %struct.hash_entry* %122, %struct.hash_entry** %15, align 8, !dbg !6951
  %123 = load %struct.hash_entry*, %struct.hash_entry** %15, align 8, !dbg !6954
  %124 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %123, i32 0, i32 1, !dbg !6955
  %125 = load %struct.hash_entry*, %struct.hash_entry** %124, align 8, !dbg !6955
  %126 = load %struct.hash_entry*, %struct.hash_entry** %11, align 8, !dbg !6956
  %127 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %126, i32 0, i32 1, !dbg !6957
  store %struct.hash_entry* %125, %struct.hash_entry** %127, align 8, !dbg !6958
  %128 = load %struct.hash_table*, %struct.hash_table** %6, align 8, !dbg !6959
  %129 = load %struct.hash_entry*, %struct.hash_entry** %15, align 8, !dbg !6960
  call void @free_entry(%struct.hash_table* %128, %struct.hash_entry* %129), !dbg !6961
  br label %130, !dbg !6962

; <label>:130:                                    ; preds = %119, %111
  %131 = load i8*, i8** %14, align 8, !dbg !6963
  store i8* %131, i8** %5, align 8, !dbg !6964
  br label %138, !dbg !6964

; <label>:132:                                    ; preds = %100
  br label %133, !dbg !6965

; <label>:133:                                    ; preds = %132
  %134 = load %struct.hash_entry*, %struct.hash_entry** %11, align 8, !dbg !6966
  %135 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %134, i32 0, i32 1, !dbg !6967
  %136 = load %struct.hash_entry*, %struct.hash_entry** %135, align 8, !dbg !6967
  store %struct.hash_entry* %136, %struct.hash_entry** %11, align 8, !dbg !6968
  br label %87, !dbg !6969, !llvm.loop !6970

; <label>:137:                                    ; preds = %87
  store i8* null, i8** %5, align 8, !dbg !6972
  br label %138, !dbg !6972

; <label>:138:                                    ; preds = %137, %130, %83, %42
  %139 = load i8*, i8** %5, align 8, !dbg !6973
  ret i8* %139, !dbg !6973
}

; Function Attrs: noinline nounwind uwtable
define i8* @hash_delete(%struct.hash_table*, i8*) #3 !dbg !6974 {
  %3 = alloca i8*, align 8
  %4 = alloca %struct.hash_table*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca %struct.hash_entry*, align 8
  %8 = alloca %struct.hash_tuning*, align 8
  %9 = alloca i64, align 8
  %10 = alloca %struct.hash_entry*, align 8
  %11 = alloca %struct.hash_entry*, align 8
  store %struct.hash_table* %0, %struct.hash_table** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.hash_table** %4, metadata !6975, metadata !DIExpression()), !dbg !6976
  store i8* %1, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !6977, metadata !DIExpression()), !dbg !6978
  call void @llvm.dbg.declare(metadata i8** %6, metadata !6979, metadata !DIExpression()), !dbg !6980
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %7, metadata !6981, metadata !DIExpression()), !dbg !6982
  %12 = load %struct.hash_table*, %struct.hash_table** %4, align 8, !dbg !6983
  %13 = load i8*, i8** %5, align 8, !dbg !6984
  %14 = call i8* @hash_find_entry(%struct.hash_table* %12, i8* %13, %struct.hash_entry** %7, i1 zeroext true), !dbg !6985
  store i8* %14, i8** %6, align 8, !dbg !6986
  %15 = load i8*, i8** %6, align 8, !dbg !6987
  %16 = icmp ne i8* %15, null, !dbg !6987
  br i1 %16, label %18, label %17, !dbg !6989

; <label>:17:                                     ; preds = %2
  store i8* null, i8** %3, align 8, !dbg !6990
  br label %123, !dbg !6990

; <label>:18:                                     ; preds = %2
  %19 = load %struct.hash_table*, %struct.hash_table** %4, align 8, !dbg !6991
  %20 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %19, i32 0, i32 4, !dbg !6992
  %21 = load i64, i64* %20, align 8, !dbg !6993
  %22 = add i64 %21, -1, !dbg !6993
  store i64 %22, i64* %20, align 8, !dbg !6993
  %23 = load %struct.hash_entry*, %struct.hash_entry** %7, align 8, !dbg !6994
  %24 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %23, i32 0, i32 0, !dbg !6996
  %25 = load i8*, i8** %24, align 8, !dbg !6996
  %26 = icmp ne i8* %25, null, !dbg !6994
  br i1 %26, label %121, label %27, !dbg !6997

; <label>:27:                                     ; preds = %18
  %28 = load %struct.hash_table*, %struct.hash_table** %4, align 8, !dbg !6998
  %29 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %28, i32 0, i32 3, !dbg !7000
  %30 = load i64, i64* %29, align 8, !dbg !7001
  %31 = add i64 %30, -1, !dbg !7001
  store i64 %31, i64* %29, align 8, !dbg !7001
  %32 = load %struct.hash_table*, %struct.hash_table** %4, align 8, !dbg !7002
  %33 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %32, i32 0, i32 3, !dbg !7004
  %34 = load i64, i64* %33, align 8, !dbg !7004
  %35 = uitofp i64 %34 to float, !dbg !7002
  %36 = load %struct.hash_table*, %struct.hash_table** %4, align 8, !dbg !7005
  %37 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %36, i32 0, i32 5, !dbg !7006
  %38 = load %struct.hash_tuning*, %struct.hash_tuning** %37, align 8, !dbg !7006
  %39 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %38, i32 0, i32 0, !dbg !7007
  %40 = load float, float* %39, align 4, !dbg !7007
  %41 = load %struct.hash_table*, %struct.hash_table** %4, align 8, !dbg !7008
  %42 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %41, i32 0, i32 2, !dbg !7009
  %43 = load i64, i64* %42, align 8, !dbg !7009
  %44 = uitofp i64 %43 to float, !dbg !7008
  %45 = fmul float %40, %44, !dbg !7010
  %46 = fcmp olt float %35, %45, !dbg !7011
  br i1 %46, label %47, label %120, !dbg !7012

; <label>:47:                                     ; preds = %27
  %48 = load %struct.hash_table*, %struct.hash_table** %4, align 8, !dbg !7013
  %49 = call zeroext i1 @check_tuning(%struct.hash_table* %48), !dbg !7015
  %50 = load %struct.hash_table*, %struct.hash_table** %4, align 8, !dbg !7016
  %51 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %50, i32 0, i32 3, !dbg !7018
  %52 = load i64, i64* %51, align 8, !dbg !7018
  %53 = uitofp i64 %52 to float, !dbg !7016
  %54 = load %struct.hash_table*, %struct.hash_table** %4, align 8, !dbg !7019
  %55 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %54, i32 0, i32 5, !dbg !7020
  %56 = load %struct.hash_tuning*, %struct.hash_tuning** %55, align 8, !dbg !7020
  %57 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %56, i32 0, i32 0, !dbg !7021
  %58 = load float, float* %57, align 4, !dbg !7021
  %59 = load %struct.hash_table*, %struct.hash_table** %4, align 8, !dbg !7022
  %60 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %59, i32 0, i32 2, !dbg !7023
  %61 = load i64, i64* %60, align 8, !dbg !7023
  %62 = uitofp i64 %61 to float, !dbg !7022
  %63 = fmul float %58, %62, !dbg !7024
  %64 = fcmp olt float %53, %63, !dbg !7025
  br i1 %64, label %65, label %119, !dbg !7026

; <label>:65:                                     ; preds = %47
  call void @llvm.dbg.declare(metadata %struct.hash_tuning** %8, metadata !7027, metadata !DIExpression()), !dbg !7029
  %66 = load %struct.hash_table*, %struct.hash_table** %4, align 8, !dbg !7030
  %67 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %66, i32 0, i32 5, !dbg !7031
  %68 = load %struct.hash_tuning*, %struct.hash_tuning** %67, align 8, !dbg !7031
  store %struct.hash_tuning* %68, %struct.hash_tuning** %8, align 8, !dbg !7029
  call void @llvm.dbg.declare(metadata i64* %9, metadata !7032, metadata !DIExpression()), !dbg !7033
  %69 = load %struct.hash_tuning*, %struct.hash_tuning** %8, align 8, !dbg !7034
  %70 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %69, i32 0, i32 4, !dbg !7035
  %71 = load i8, i8* %70, align 4, !dbg !7035
  %72 = trunc i8 %71 to i1, !dbg !7035
  br i1 %72, label %73, label %82, !dbg !7034

; <label>:73:                                     ; preds = %65
  %74 = load %struct.hash_table*, %struct.hash_table** %4, align 8, !dbg !7036
  %75 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %74, i32 0, i32 2, !dbg !7037
  %76 = load i64, i64* %75, align 8, !dbg !7037
  %77 = uitofp i64 %76 to float, !dbg !7036
  %78 = load %struct.hash_tuning*, %struct.hash_tuning** %8, align 8, !dbg !7038
  %79 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %78, i32 0, i32 1, !dbg !7039
  %80 = load float, float* %79, align 4, !dbg !7039
  %81 = fmul float %77, %80, !dbg !7040
  br label %95, !dbg !7034

; <label>:82:                                     ; preds = %65
  %83 = load %struct.hash_table*, %struct.hash_table** %4, align 8, !dbg !7041
  %84 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %83, i32 0, i32 2, !dbg !7042
  %85 = load i64, i64* %84, align 8, !dbg !7042
  %86 = uitofp i64 %85 to float, !dbg !7041
  %87 = load %struct.hash_tuning*, %struct.hash_tuning** %8, align 8, !dbg !7043
  %88 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %87, i32 0, i32 1, !dbg !7044
  %89 = load float, float* %88, align 4, !dbg !7044
  %90 = fmul float %86, %89, !dbg !7045
  %91 = load %struct.hash_tuning*, %struct.hash_tuning** %8, align 8, !dbg !7046
  %92 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %91, i32 0, i32 2, !dbg !7047
  %93 = load float, float* %92, align 4, !dbg !7047
  %94 = fmul float %90, %93, !dbg !7048
  br label %95, !dbg !7034

; <label>:95:                                     ; preds = %82, %73
  %96 = phi float [ %81, %73 ], [ %94, %82 ], !dbg !7034
  %97 = fptoui float %96 to i64, !dbg !7049
  store i64 %97, i64* %9, align 8, !dbg !7033
  %98 = load %struct.hash_table*, %struct.hash_table** %4, align 8, !dbg !7050
  %99 = load i64, i64* %9, align 8, !dbg !7052
  %100 = call zeroext i1 @hash_rehash(%struct.hash_table* %98, i64 %99), !dbg !7053
  br i1 %100, label %118, label %101, !dbg !7054

; <label>:101:                                    ; preds = %95
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %10, metadata !7055, metadata !DIExpression()), !dbg !7057
  %102 = load %struct.hash_table*, %struct.hash_table** %4, align 8, !dbg !7058
  %103 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %102, i32 0, i32 9, !dbg !7059
  %104 = load %struct.hash_entry*, %struct.hash_entry** %103, align 8, !dbg !7059
  store %struct.hash_entry* %104, %struct.hash_entry** %10, align 8, !dbg !7057
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %11, metadata !7060, metadata !DIExpression()), !dbg !7061
  br label %105, !dbg !7062

; <label>:105:                                    ; preds = %108, %101
  %106 = load %struct.hash_entry*, %struct.hash_entry** %10, align 8, !dbg !7063
  %107 = icmp ne %struct.hash_entry* %106, null, !dbg !7062
  br i1 %107, label %108, label %115, !dbg !7062

; <label>:108:                                    ; preds = %105
  %109 = load %struct.hash_entry*, %struct.hash_entry** %10, align 8, !dbg !7064
  %110 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %109, i32 0, i32 1, !dbg !7066
  %111 = load %struct.hash_entry*, %struct.hash_entry** %110, align 8, !dbg !7066
  store %struct.hash_entry* %111, %struct.hash_entry** %11, align 8, !dbg !7067
  %112 = load %struct.hash_entry*, %struct.hash_entry** %10, align 8, !dbg !7068
  %113 = bitcast %struct.hash_entry* %112 to i8*, !dbg !7068
  call void @free(i8* %113) #8, !dbg !7069
  %114 = load %struct.hash_entry*, %struct.hash_entry** %11, align 8, !dbg !7070
  store %struct.hash_entry* %114, %struct.hash_entry** %10, align 8, !dbg !7071
  br label %105, !dbg !7062, !llvm.loop !7072

; <label>:115:                                    ; preds = %105
  %116 = load %struct.hash_table*, %struct.hash_table** %4, align 8, !dbg !7074
  %117 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %116, i32 0, i32 9, !dbg !7075
  store %struct.hash_entry* null, %struct.hash_entry** %117, align 8, !dbg !7076
  br label %118, !dbg !7077

; <label>:118:                                    ; preds = %115, %95
  br label %119, !dbg !7078

; <label>:119:                                    ; preds = %118, %47
  br label %120, !dbg !7079

; <label>:120:                                    ; preds = %119, %27
  br label %121, !dbg !7080

; <label>:121:                                    ; preds = %120, %18
  %122 = load i8*, i8** %6, align 8, !dbg !7081
  store i8* %122, i8** %3, align 8, !dbg !7082
  br label %123, !dbg !7082

; <label>:123:                                    ; preds = %121, %17
  %124 = load i8*, i8** %3, align 8, !dbg !7083
  ret i8* %124, !dbg !7083
}

; Function Attrs: noinline nounwind uwtable
define void @i_ring_init(%struct.I_ring*, i32) #3 !dbg !7084 {
  %3 = alloca %struct.I_ring*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  store %struct.I_ring* %0, %struct.I_ring** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.I_ring** %3, metadata !7096, metadata !DIExpression()), !dbg !7097
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !7098, metadata !DIExpression()), !dbg !7099
  call void @llvm.dbg.declare(metadata i32* %5, metadata !7100, metadata !DIExpression()), !dbg !7101
  %6 = load %struct.I_ring*, %struct.I_ring** %3, align 8, !dbg !7102
  %7 = getelementptr inbounds %struct.I_ring, %struct.I_ring* %6, i32 0, i32 4, !dbg !7103
  store i8 1, i8* %7, align 4, !dbg !7104
  %8 = load %struct.I_ring*, %struct.I_ring** %3, align 8, !dbg !7105
  %9 = getelementptr inbounds %struct.I_ring, %struct.I_ring* %8, i32 0, i32 2, !dbg !7106
  store i32 0, i32* %9, align 4, !dbg !7107
  %10 = load %struct.I_ring*, %struct.I_ring** %3, align 8, !dbg !7108
  %11 = getelementptr inbounds %struct.I_ring, %struct.I_ring* %10, i32 0, i32 3, !dbg !7109
  store i32 0, i32* %11, align 4, !dbg !7110
  store i32 0, i32* %5, align 4, !dbg !7111
  br label %12, !dbg !7113

; <label>:12:                                     ; preds = %22, %2
  %13 = load i32, i32* %5, align 4, !dbg !7114
  %14 = icmp slt i32 %13, 4, !dbg !7116
  br i1 %14, label %15, label %25, !dbg !7117

; <label>:15:                                     ; preds = %12
  %16 = load i32, i32* %4, align 4, !dbg !7118
  %17 = load %struct.I_ring*, %struct.I_ring** %3, align 8, !dbg !7119
  %18 = getelementptr inbounds %struct.I_ring, %struct.I_ring* %17, i32 0, i32 0, !dbg !7120
  %19 = load i32, i32* %5, align 4, !dbg !7121
  %20 = sext i32 %19 to i64, !dbg !7119
  %21 = getelementptr inbounds [4 x i32], [4 x i32]* %18, i64 0, i64 %20, !dbg !7119
  store i32 %16, i32* %21, align 4, !dbg !7122
  br label %22, !dbg !7119

; <label>:22:                                     ; preds = %15
  %23 = load i32, i32* %5, align 4, !dbg !7123
  %24 = add nsw i32 %23, 1, !dbg !7123
  store i32 %24, i32* %5, align 4, !dbg !7123
  br label %12, !dbg !7124, !llvm.loop !7125

; <label>:25:                                     ; preds = %12
  %26 = load i32, i32* %4, align 4, !dbg !7127
  %27 = load %struct.I_ring*, %struct.I_ring** %3, align 8, !dbg !7128
  %28 = getelementptr inbounds %struct.I_ring, %struct.I_ring* %27, i32 0, i32 1, !dbg !7129
  store i32 %26, i32* %28, align 4, !dbg !7130
  ret void, !dbg !7131
}

; Function Attrs: noinline nounwind uwtable
define zeroext i1 @i_ring_empty(%struct.I_ring*) #3 !dbg !7132 {
  %2 = alloca %struct.I_ring*, align 8
  store %struct.I_ring* %0, %struct.I_ring** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.I_ring** %2, metadata !7137, metadata !DIExpression()), !dbg !7138
  %3 = load %struct.I_ring*, %struct.I_ring** %2, align 8, !dbg !7139
  %4 = getelementptr inbounds %struct.I_ring, %struct.I_ring* %3, i32 0, i32 4, !dbg !7140
  %5 = load i8, i8* %4, align 4, !dbg !7140
  %6 = trunc i8 %5 to i1, !dbg !7140
  ret i1 %6, !dbg !7141
}

; Function Attrs: noinline nounwind uwtable
define i32 @i_ring_push(%struct.I_ring*, i32) #3 !dbg !7142 {
  %3 = alloca %struct.I_ring*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  store %struct.I_ring* %0, %struct.I_ring** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.I_ring** %3, metadata !7145, metadata !DIExpression()), !dbg !7146
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !7147, metadata !DIExpression()), !dbg !7148
  call void @llvm.dbg.declare(metadata i32* %5, metadata !7149, metadata !DIExpression()), !dbg !7150
  %7 = load %struct.I_ring*, %struct.I_ring** %3, align 8, !dbg !7151
  %8 = getelementptr inbounds %struct.I_ring, %struct.I_ring* %7, i32 0, i32 2, !dbg !7152
  %9 = load i32, i32* %8, align 4, !dbg !7152
  %10 = load %struct.I_ring*, %struct.I_ring** %3, align 8, !dbg !7153
  %11 = getelementptr inbounds %struct.I_ring, %struct.I_ring* %10, i32 0, i32 4, !dbg !7154
  %12 = load i8, i8* %11, align 4, !dbg !7154
  %13 = trunc i8 %12 to i1, !dbg !7154
  %14 = xor i1 %13, true, !dbg !7155
  %15 = zext i1 %14 to i32, !dbg !7155
  %16 = add i32 %9, %15, !dbg !7156
  %17 = urem i32 %16, 4, !dbg !7157
  store i32 %17, i32* %5, align 4, !dbg !7150
  call void @llvm.dbg.declare(metadata i32* %6, metadata !7158, metadata !DIExpression()), !dbg !7159
  %18 = load %struct.I_ring*, %struct.I_ring** %3, align 8, !dbg !7160
  %19 = getelementptr inbounds %struct.I_ring, %struct.I_ring* %18, i32 0, i32 0, !dbg !7161
  %20 = load i32, i32* %5, align 4, !dbg !7162
  %21 = zext i32 %20 to i64, !dbg !7160
  %22 = getelementptr inbounds [4 x i32], [4 x i32]* %19, i64 0, i64 %21, !dbg !7160
  %23 = load i32, i32* %22, align 4, !dbg !7160
  store i32 %23, i32* %6, align 4, !dbg !7159
  %24 = load i32, i32* %4, align 4, !dbg !7163
  %25 = load %struct.I_ring*, %struct.I_ring** %3, align 8, !dbg !7164
  %26 = getelementptr inbounds %struct.I_ring, %struct.I_ring* %25, i32 0, i32 0, !dbg !7165
  %27 = load i32, i32* %5, align 4, !dbg !7166
  %28 = zext i32 %27 to i64, !dbg !7164
  %29 = getelementptr inbounds [4 x i32], [4 x i32]* %26, i64 0, i64 %28, !dbg !7164
  store i32 %24, i32* %29, align 4, !dbg !7167
  %30 = load i32, i32* %5, align 4, !dbg !7168
  %31 = load %struct.I_ring*, %struct.I_ring** %3, align 8, !dbg !7169
  %32 = getelementptr inbounds %struct.I_ring, %struct.I_ring* %31, i32 0, i32 2, !dbg !7170
  store i32 %30, i32* %32, align 4, !dbg !7171
  %33 = load i32, i32* %5, align 4, !dbg !7172
  %34 = load %struct.I_ring*, %struct.I_ring** %3, align 8, !dbg !7174
  %35 = getelementptr inbounds %struct.I_ring, %struct.I_ring* %34, i32 0, i32 3, !dbg !7175
  %36 = load i32, i32* %35, align 4, !dbg !7175
  %37 = icmp eq i32 %33, %36, !dbg !7176
  br i1 %37, label %38, label %52, !dbg !7177

; <label>:38:                                     ; preds = %2
  %39 = load %struct.I_ring*, %struct.I_ring** %3, align 8, !dbg !7178
  %40 = getelementptr inbounds %struct.I_ring, %struct.I_ring* %39, i32 0, i32 3, !dbg !7179
  %41 = load i32, i32* %40, align 4, !dbg !7179
  %42 = load %struct.I_ring*, %struct.I_ring** %3, align 8, !dbg !7180
  %43 = getelementptr inbounds %struct.I_ring, %struct.I_ring* %42, i32 0, i32 4, !dbg !7181
  %44 = load i8, i8* %43, align 4, !dbg !7181
  %45 = trunc i8 %44 to i1, !dbg !7181
  %46 = xor i1 %45, true, !dbg !7182
  %47 = zext i1 %46 to i32, !dbg !7182
  %48 = add i32 %41, %47, !dbg !7183
  %49 = urem i32 %48, 4, !dbg !7184
  %50 = load %struct.I_ring*, %struct.I_ring** %3, align 8, !dbg !7185
  %51 = getelementptr inbounds %struct.I_ring, %struct.I_ring* %50, i32 0, i32 3, !dbg !7186
  store i32 %49, i32* %51, align 4, !dbg !7187
  br label %52, !dbg !7185

; <label>:52:                                     ; preds = %38, %2
  %53 = load %struct.I_ring*, %struct.I_ring** %3, align 8, !dbg !7188
  %54 = getelementptr inbounds %struct.I_ring, %struct.I_ring* %53, i32 0, i32 4, !dbg !7189
  store i8 0, i8* %54, align 4, !dbg !7190
  %55 = load i32, i32* %6, align 4, !dbg !7191
  ret i32 %55, !dbg !7192
}

; Function Attrs: noinline nounwind uwtable
define i32 @i_ring_pop(%struct.I_ring*) #3 !dbg !7193 {
  %2 = alloca %struct.I_ring*, align 8
  %3 = alloca i32, align 4
  store %struct.I_ring* %0, %struct.I_ring** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.I_ring** %2, metadata !7196, metadata !DIExpression()), !dbg !7197
  call void @llvm.dbg.declare(metadata i32* %3, metadata !7198, metadata !DIExpression()), !dbg !7199
  %4 = load %struct.I_ring*, %struct.I_ring** %2, align 8, !dbg !7200
  %5 = call zeroext i1 @i_ring_empty(%struct.I_ring* %4), !dbg !7202
  br i1 %5, label %6, label %7, !dbg !7203

; <label>:6:                                      ; preds = %1
  call void @abort() #11, !dbg !7204
  unreachable, !dbg !7204

; <label>:7:                                      ; preds = %1
  %8 = load %struct.I_ring*, %struct.I_ring** %2, align 8, !dbg !7205
  %9 = getelementptr inbounds %struct.I_ring, %struct.I_ring* %8, i32 0, i32 0, !dbg !7206
  %10 = load %struct.I_ring*, %struct.I_ring** %2, align 8, !dbg !7207
  %11 = getelementptr inbounds %struct.I_ring, %struct.I_ring* %10, i32 0, i32 2, !dbg !7208
  %12 = load i32, i32* %11, align 4, !dbg !7208
  %13 = zext i32 %12 to i64, !dbg !7205
  %14 = getelementptr inbounds [4 x i32], [4 x i32]* %9, i64 0, i64 %13, !dbg !7205
  %15 = load i32, i32* %14, align 4, !dbg !7205
  store i32 %15, i32* %3, align 4, !dbg !7209
  %16 = load %struct.I_ring*, %struct.I_ring** %2, align 8, !dbg !7210
  %17 = getelementptr inbounds %struct.I_ring, %struct.I_ring* %16, i32 0, i32 1, !dbg !7211
  %18 = load i32, i32* %17, align 4, !dbg !7211
  %19 = load %struct.I_ring*, %struct.I_ring** %2, align 8, !dbg !7212
  %20 = getelementptr inbounds %struct.I_ring, %struct.I_ring* %19, i32 0, i32 0, !dbg !7213
  %21 = load %struct.I_ring*, %struct.I_ring** %2, align 8, !dbg !7214
  %22 = getelementptr inbounds %struct.I_ring, %struct.I_ring* %21, i32 0, i32 2, !dbg !7215
  %23 = load i32, i32* %22, align 4, !dbg !7215
  %24 = zext i32 %23 to i64, !dbg !7212
  %25 = getelementptr inbounds [4 x i32], [4 x i32]* %20, i64 0, i64 %24, !dbg !7212
  store i32 %18, i32* %25, align 4, !dbg !7216
  %26 = load %struct.I_ring*, %struct.I_ring** %2, align 8, !dbg !7217
  %27 = getelementptr inbounds %struct.I_ring, %struct.I_ring* %26, i32 0, i32 2, !dbg !7219
  %28 = load i32, i32* %27, align 4, !dbg !7219
  %29 = load %struct.I_ring*, %struct.I_ring** %2, align 8, !dbg !7220
  %30 = getelementptr inbounds %struct.I_ring, %struct.I_ring* %29, i32 0, i32 3, !dbg !7221
  %31 = load i32, i32* %30, align 4, !dbg !7221
  %32 = icmp eq i32 %28, %31, !dbg !7222
  br i1 %32, label %33, label %36, !dbg !7223

; <label>:33:                                     ; preds = %7
  %34 = load %struct.I_ring*, %struct.I_ring** %2, align 8, !dbg !7224
  %35 = getelementptr inbounds %struct.I_ring, %struct.I_ring* %34, i32 0, i32 4, !dbg !7225
  store i8 1, i8* %35, align 4, !dbg !7226
  br label %45, !dbg !7224

; <label>:36:                                     ; preds = %7
  %37 = load %struct.I_ring*, %struct.I_ring** %2, align 8, !dbg !7227
  %38 = getelementptr inbounds %struct.I_ring, %struct.I_ring* %37, i32 0, i32 2, !dbg !7228
  %39 = load i32, i32* %38, align 4, !dbg !7228
  %40 = add i32 %39, 4, !dbg !7229
  %41 = sub i32 %40, 1, !dbg !7230
  %42 = urem i32 %41, 4, !dbg !7231
  %43 = load %struct.I_ring*, %struct.I_ring** %2, align 8, !dbg !7232
  %44 = getelementptr inbounds %struct.I_ring, %struct.I_ring* %43, i32 0, i32 2, !dbg !7233
  store i32 %42, i32* %44, align 4, !dbg !7234
  br label %45

; <label>:45:                                     ; preds = %36, %33
  %46 = load i32, i32* %3, align 4, !dbg !7235
  ret i32 %46, !dbg !7236
}

; Function Attrs: noinline nounwind uwtable
define i32 @open_safer(i8*, i32, ...) #3 !dbg !7237 {
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca [1 x %struct.__va_list_tag], align 16
  store i8* %0, i8** %3, align 8
  call void @llvm.dbg.declare(metadata i8** %3, metadata !7240, metadata !DIExpression()), !dbg !7241
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !7242, metadata !DIExpression()), !dbg !7243
  call void @llvm.dbg.declare(metadata i32* %5, metadata !7244, metadata !DIExpression()), !dbg !7245
  store i32 0, i32* %5, align 4, !dbg !7245
  %7 = load i32, i32* %4, align 4, !dbg !7246
  %8 = and i32 %7, 64, !dbg !7248
  %9 = icmp ne i32 %8, 0, !dbg !7248
  br i1 %9, label %10, label %33, !dbg !7249

; <label>:10:                                     ; preds = %2
  call void @llvm.dbg.declare(metadata [1 x %struct.__va_list_tag]* %6, metadata !7250, metadata !DIExpression()), !dbg !7261
  %11 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %6, i32 0, i32 0, !dbg !7262
  %12 = bitcast %struct.__va_list_tag* %11 to i8*, !dbg !7262
  call void @llvm.va_start(i8* %12), !dbg !7262
  %13 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %6, i32 0, i32 0, !dbg !7263
  %14 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %13, i32 0, i32 0, !dbg !7263
  %15 = load i32, i32* %14, align 16, !dbg !7263
  %16 = icmp ule i32 %15, 40, !dbg !7263
  br i1 %16, label %17, label %23, !dbg !7263

; <label>:17:                                     ; preds = %10
  %18 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %13, i32 0, i32 3, !dbg !7263
  %19 = load i8*, i8** %18, align 16, !dbg !7263
  %20 = getelementptr i8, i8* %19, i32 %15, !dbg !7263
  %21 = bitcast i8* %20 to i32*, !dbg !7263
  %22 = add i32 %15, 8, !dbg !7263
  store i32 %22, i32* %14, align 16, !dbg !7263
  br label %28, !dbg !7263

; <label>:23:                                     ; preds = %10
  %24 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %13, i32 0, i32 2, !dbg !7263
  %25 = load i8*, i8** %24, align 8, !dbg !7263
  %26 = bitcast i8* %25 to i32*, !dbg !7263
  %27 = getelementptr i8, i8* %25, i32 8, !dbg !7263
  store i8* %27, i8** %24, align 8, !dbg !7263
  br label %28, !dbg !7263

; <label>:28:                                     ; preds = %23, %17
  %29 = phi i32* [ %21, %17 ], [ %26, %23 ], !dbg !7263
  %30 = load i32, i32* %29, align 4, !dbg !7263
  store i32 %30, i32* %5, align 4, !dbg !7264
  %31 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %6, i32 0, i32 0, !dbg !7265
  %32 = bitcast %struct.__va_list_tag* %31 to i8*, !dbg !7265
  call void @llvm.va_end(i8* %32), !dbg !7265
  br label %33, !dbg !7266

; <label>:33:                                     ; preds = %28, %2
  %34 = load i8*, i8** %3, align 8, !dbg !7267
  %35 = load i32, i32* %4, align 4, !dbg !7268
  %36 = load i32, i32* %5, align 4, !dbg !7269
  %37 = call i32 (i8*, i32, ...) @open(i8* %34, i32 %35, i32 %36), !dbg !7270
  %38 = call i32 @fd_safer(i32 %37), !dbg !7271
  ret i32 %38, !dbg !7272
}

declare i32 @open(i8*, i32, ...) #2

; Function Attrs: noinline nounwind uwtable
define i32 @openat_safer(i32, i8*, i32, ...) #3 !dbg !7273 {
  %4 = alloca i32, align 4
  %5 = alloca i8*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca [1 x %struct.__va_list_tag], align 16
  store i32 %0, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !7276, metadata !DIExpression()), !dbg !7277
  store i8* %1, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !7278, metadata !DIExpression()), !dbg !7279
  store i32 %2, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !7280, metadata !DIExpression()), !dbg !7281
  call void @llvm.dbg.declare(metadata i32* %7, metadata !7282, metadata !DIExpression()), !dbg !7283
  store i32 0, i32* %7, align 4, !dbg !7283
  %9 = load i32, i32* %6, align 4, !dbg !7284
  %10 = and i32 %9, 64, !dbg !7286
  %11 = icmp ne i32 %10, 0, !dbg !7286
  br i1 %11, label %12, label %35, !dbg !7287

; <label>:12:                                     ; preds = %3
  call void @llvm.dbg.declare(metadata [1 x %struct.__va_list_tag]* %8, metadata !7288, metadata !DIExpression()), !dbg !7299
  %13 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %8, i32 0, i32 0, !dbg !7300
  %14 = bitcast %struct.__va_list_tag* %13 to i8*, !dbg !7300
  call void @llvm.va_start(i8* %14), !dbg !7300
  %15 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %8, i32 0, i32 0, !dbg !7301
  %16 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %15, i32 0, i32 0, !dbg !7301
  %17 = load i32, i32* %16, align 16, !dbg !7301
  %18 = icmp ule i32 %17, 40, !dbg !7301
  br i1 %18, label %19, label %25, !dbg !7301

; <label>:19:                                     ; preds = %12
  %20 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %15, i32 0, i32 3, !dbg !7301
  %21 = load i8*, i8** %20, align 16, !dbg !7301
  %22 = getelementptr i8, i8* %21, i32 %17, !dbg !7301
  %23 = bitcast i8* %22 to i32*, !dbg !7301
  %24 = add i32 %17, 8, !dbg !7301
  store i32 %24, i32* %16, align 16, !dbg !7301
  br label %30, !dbg !7301

; <label>:25:                                     ; preds = %12
  %26 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %15, i32 0, i32 2, !dbg !7301
  %27 = load i8*, i8** %26, align 8, !dbg !7301
  %28 = bitcast i8* %27 to i32*, !dbg !7301
  %29 = getelementptr i8, i8* %27, i32 8, !dbg !7301
  store i8* %29, i8** %26, align 8, !dbg !7301
  br label %30, !dbg !7301

; <label>:30:                                     ; preds = %25, %19
  %31 = phi i32* [ %23, %19 ], [ %28, %25 ], !dbg !7301
  %32 = load i32, i32* %31, align 4, !dbg !7301
  store i32 %32, i32* %7, align 4, !dbg !7302
  %33 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %8, i32 0, i32 0, !dbg !7303
  %34 = bitcast %struct.__va_list_tag* %33 to i8*, !dbg !7303
  call void @llvm.va_end(i8* %34), !dbg !7303
  br label %35, !dbg !7304

; <label>:35:                                     ; preds = %30, %3
  %36 = load i32, i32* %4, align 4, !dbg !7305
  %37 = load i8*, i8** %5, align 8, !dbg !7306
  %38 = load i32, i32* %6, align 4, !dbg !7307
  %39 = load i32, i32* %7, align 4, !dbg !7308
  %40 = call i32 (i32, i8*, i32, ...) @openat(i32 %36, i8* %37, i32 %38, i32 %39), !dbg !7309
  %41 = call i32 @fd_safer(i32 %40), !dbg !7310
  ret i32 %41, !dbg !7311
}

; Function Attrs: noinline nounwind uwtable
define %struct.__dirstream* @opendir_safer(i8*) #3 !dbg !7312 {
  %2 = alloca i8*, align 8
  %3 = alloca %struct.__dirstream*, align 8
  %4 = alloca i32, align 4
  %5 = alloca %struct.__dirstream*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  store i8* %0, i8** %2, align 8
  call void @llvm.dbg.declare(metadata i8** %2, metadata !7315, metadata !DIExpression()), !dbg !7316
  call void @llvm.dbg.declare(metadata %struct.__dirstream** %3, metadata !7317, metadata !DIExpression()), !dbg !7318
  %8 = load i8*, i8** %2, align 8, !dbg !7319
  %9 = call %struct.__dirstream* @opendir(i8* %8), !dbg !7320
  store %struct.__dirstream* %9, %struct.__dirstream** %3, align 8, !dbg !7318
  %10 = load %struct.__dirstream*, %struct.__dirstream** %3, align 8, !dbg !7321
  %11 = icmp ne %struct.__dirstream* %10, null, !dbg !7321
  br i1 %11, label %12, label %39, !dbg !7323

; <label>:12:                                     ; preds = %1
  call void @llvm.dbg.declare(metadata i32* %4, metadata !7324, metadata !DIExpression()), !dbg !7326
  %13 = load %struct.__dirstream*, %struct.__dirstream** %3, align 8, !dbg !7327
  %14 = call i32 @dirfd(%struct.__dirstream* %13) #8, !dbg !7328
  store i32 %14, i32* %4, align 4, !dbg !7326
  %15 = load i32, i32* %4, align 4, !dbg !7329
  %16 = icmp sle i32 0, %15, !dbg !7331
  br i1 %16, label %17, label %38, !dbg !7332

; <label>:17:                                     ; preds = %12
  %18 = load i32, i32* %4, align 4, !dbg !7333
  %19 = icmp sle i32 %18, 2, !dbg !7334
  br i1 %19, label %20, label %38, !dbg !7335

; <label>:20:                                     ; preds = %17
  call void @llvm.dbg.declare(metadata %struct.__dirstream** %5, metadata !7336, metadata !DIExpression()), !dbg !7338
  call void @llvm.dbg.declare(metadata i32* %6, metadata !7339, metadata !DIExpression()), !dbg !7340
  call void @llvm.dbg.declare(metadata i32* %7, metadata !7341, metadata !DIExpression()), !dbg !7342
  %21 = load i32, i32* %4, align 4, !dbg !7343
  %22 = call i32 @dup_safer(i32 %21), !dbg !7344
  store i32 %22, i32* %7, align 4, !dbg !7342
  %23 = load i32, i32* %7, align 4, !dbg !7345
  %24 = call %struct.__dirstream* @rpl_fdopendir(i32 %23), !dbg !7346
  store %struct.__dirstream* %24, %struct.__dirstream** %5, align 8, !dbg !7347
  %25 = call i32* @__errno_location() #14, !dbg !7348
  %26 = load i32, i32* %25, align 4, !dbg !7348
  store i32 %26, i32* %6, align 4, !dbg !7349
  %27 = load %struct.__dirstream*, %struct.__dirstream** %5, align 8, !dbg !7350
  %28 = icmp ne %struct.__dirstream* %27, null, !dbg !7350
  br i1 %28, label %32, label %29, !dbg !7352

; <label>:29:                                     ; preds = %20
  %30 = load i32, i32* %7, align 4, !dbg !7353
  %31 = call i32 @close(i32 %30), !dbg !7354
  br label %32, !dbg !7354

; <label>:32:                                     ; preds = %29, %20
  %33 = load %struct.__dirstream*, %struct.__dirstream** %3, align 8, !dbg !7355
  %34 = call i32 @closedir(%struct.__dirstream* %33), !dbg !7356
  %35 = load i32, i32* %6, align 4, !dbg !7357
  %36 = call i32* @__errno_location() #14, !dbg !7358
  store i32 %35, i32* %36, align 4, !dbg !7359
  %37 = load %struct.__dirstream*, %struct.__dirstream** %5, align 8, !dbg !7360
  store %struct.__dirstream* %37, %struct.__dirstream** %3, align 8, !dbg !7361
  br label %38, !dbg !7362

; <label>:38:                                     ; preds = %32, %17, %12
  br label %39, !dbg !7363

; <label>:39:                                     ; preds = %38, %1
  %40 = load %struct.__dirstream*, %struct.__dirstream** %3, align 8, !dbg !7364
  ret %struct.__dirstream* %40, !dbg !7365
}

declare %struct.__dirstream* @opendir(i8*) #2

; Function Attrs: noinline nounwind uwtable
define i8* @quote_n(i32, i8*) #3 !dbg !7366 {
  %3 = alloca i32, align 4
  %4 = alloca i8*, align 8
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !7369, metadata !DIExpression()), !dbg !7370
  store i8* %1, i8** %4, align 8
  call void @llvm.dbg.declare(metadata i8** %4, metadata !7371, metadata !DIExpression()), !dbg !7372
  %5 = load i32, i32* %3, align 4, !dbg !7373
  %6 = load i8*, i8** %4, align 8, !dbg !7374
  %7 = call i8* @quotearg_n_style(i32 %5, i32 6, i8* %6), !dbg !7375
  ret i8* %7, !dbg !7376
}

; Function Attrs: noinline nounwind uwtable
define i8* @quote(i8*) #3 !dbg !7377 {
  %2 = alloca i8*, align 8
  store i8* %0, i8** %2, align 8
  call void @llvm.dbg.declare(metadata i8** %2, metadata !7380, metadata !DIExpression()), !dbg !7381
  %3 = load i8*, i8** %2, align 8, !dbg !7382
  %4 = call i8* @quote_n(i32 0, i8* %3), !dbg !7383
  ret i8* %4, !dbg !7384
}

; Function Attrs: noinline nounwind uwtable
define %struct.quoting_options* @clone_quoting_options(%struct.quoting_options*) #3 !dbg !7385 {
  %2 = alloca %struct.quoting_options*, align 8
  %3 = alloca i32, align 4
  %4 = alloca %struct.quoting_options*, align 8
  store %struct.quoting_options* %0, %struct.quoting_options** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %2, metadata !7389, metadata !DIExpression()), !dbg !7390
  call void @llvm.dbg.declare(metadata i32* %3, metadata !7391, metadata !DIExpression()), !dbg !7392
  %5 = call i32* @__errno_location() #14, !dbg !7393
  %6 = load i32, i32* %5, align 4, !dbg !7393
  store i32 %6, i32* %3, align 4, !dbg !7392
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %4, metadata !7394, metadata !DIExpression()), !dbg !7395
  %7 = load %struct.quoting_options*, %struct.quoting_options** %2, align 8, !dbg !7396
  %8 = icmp ne %struct.quoting_options* %7, null, !dbg !7396
  br i1 %8, label %9, label %11, !dbg !7396

; <label>:9:                                      ; preds = %1
  %10 = load %struct.quoting_options*, %struct.quoting_options** %2, align 8, !dbg !7397
  br label %12, !dbg !7396

; <label>:11:                                     ; preds = %1
  br label %12, !dbg !7396

; <label>:12:                                     ; preds = %11, %9
  %13 = phi %struct.quoting_options* [ %10, %9 ], [ @default_quoting_options, %11 ], !dbg !7396
  %14 = bitcast %struct.quoting_options* %13 to i8*, !dbg !7396
  %15 = call noalias i8* @xmemdup(i8* %14, i64 56), !dbg !7398
  %16 = bitcast i8* %15 to %struct.quoting_options*, !dbg !7398
  store %struct.quoting_options* %16, %struct.quoting_options** %4, align 8, !dbg !7395
  %17 = load i32, i32* %3, align 4, !dbg !7399
  %18 = call i32* @__errno_location() #14, !dbg !7400
  store i32 %17, i32* %18, align 4, !dbg !7401
  %19 = load %struct.quoting_options*, %struct.quoting_options** %4, align 8, !dbg !7402
  ret %struct.quoting_options* %19, !dbg !7403
}

; Function Attrs: noinline nounwind uwtable
define i32 @get_quoting_style(%struct.quoting_options*) #3 !dbg !7404 {
  %2 = alloca %struct.quoting_options*, align 8
  store %struct.quoting_options* %0, %struct.quoting_options** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %2, metadata !7407, metadata !DIExpression()), !dbg !7408
  %3 = load %struct.quoting_options*, %struct.quoting_options** %2, align 8, !dbg !7409
  %4 = icmp ne %struct.quoting_options* %3, null, !dbg !7409
  br i1 %4, label %5, label %7, !dbg !7409

; <label>:5:                                      ; preds = %1
  %6 = load %struct.quoting_options*, %struct.quoting_options** %2, align 8, !dbg !7410
  br label %8, !dbg !7409

; <label>:7:                                      ; preds = %1
  br label %8, !dbg !7409

; <label>:8:                                      ; preds = %7, %5
  %9 = phi %struct.quoting_options* [ %6, %5 ], [ @default_quoting_options, %7 ], !dbg !7409
  %10 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %9, i32 0, i32 0, !dbg !7411
  %11 = load i32, i32* %10, align 8, !dbg !7411
  ret i32 %11, !dbg !7412
}

; Function Attrs: noinline nounwind uwtable
define void @set_quoting_style(%struct.quoting_options*, i32) #3 !dbg !7413 {
  %3 = alloca %struct.quoting_options*, align 8
  %4 = alloca i32, align 4
  store %struct.quoting_options* %0, %struct.quoting_options** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %3, metadata !7416, metadata !DIExpression()), !dbg !7417
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !7418, metadata !DIExpression()), !dbg !7419
  %5 = load i32, i32* %4, align 4, !dbg !7420
  %6 = load %struct.quoting_options*, %struct.quoting_options** %3, align 8, !dbg !7421
  %7 = icmp ne %struct.quoting_options* %6, null, !dbg !7421
  br i1 %7, label %8, label %10, !dbg !7421

; <label>:8:                                      ; preds = %2
  %9 = load %struct.quoting_options*, %struct.quoting_options** %3, align 8, !dbg !7422
  br label %11, !dbg !7421

; <label>:10:                                     ; preds = %2
  br label %11, !dbg !7421

; <label>:11:                                     ; preds = %10, %8
  %12 = phi %struct.quoting_options* [ %9, %8 ], [ @default_quoting_options, %10 ], !dbg !7421
  %13 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %12, i32 0, i32 0, !dbg !7423
  store i32 %5, i32* %13, align 8, !dbg !7424
  ret void, !dbg !7425
}

; Function Attrs: noinline nounwind uwtable
define i32 @set_char_quoting(%struct.quoting_options*, i8 signext, i32) #3 !dbg !7426 {
  %4 = alloca %struct.quoting_options*, align 8
  %5 = alloca i8, align 1
  %6 = alloca i32, align 4
  %7 = alloca i8, align 1
  %8 = alloca i32*, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  store %struct.quoting_options* %0, %struct.quoting_options** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %4, metadata !7429, metadata !DIExpression()), !dbg !7430
  store i8 %1, i8* %5, align 1
  call void @llvm.dbg.declare(metadata i8* %5, metadata !7431, metadata !DIExpression()), !dbg !7432
  store i32 %2, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !7433, metadata !DIExpression()), !dbg !7434
  call void @llvm.dbg.declare(metadata i8* %7, metadata !7435, metadata !DIExpression()), !dbg !7436
  %11 = load i8, i8* %5, align 1, !dbg !7437
  store i8 %11, i8* %7, align 1, !dbg !7436
  call void @llvm.dbg.declare(metadata i32** %8, metadata !7438, metadata !DIExpression()), !dbg !7440
  %12 = load %struct.quoting_options*, %struct.quoting_options** %4, align 8, !dbg !7441
  %13 = icmp ne %struct.quoting_options* %12, null, !dbg !7441
  br i1 %13, label %14, label %16, !dbg !7441

; <label>:14:                                     ; preds = %3
  %15 = load %struct.quoting_options*, %struct.quoting_options** %4, align 8, !dbg !7442
  br label %17, !dbg !7441

; <label>:16:                                     ; preds = %3
  br label %17, !dbg !7441

; <label>:17:                                     ; preds = %16, %14
  %18 = phi %struct.quoting_options* [ %15, %14 ], [ @default_quoting_options, %16 ], !dbg !7441
  %19 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %18, i32 0, i32 2, !dbg !7443
  %20 = getelementptr inbounds [8 x i32], [8 x i32]* %19, i32 0, i32 0, !dbg !7444
  %21 = load i8, i8* %7, align 1, !dbg !7445
  %22 = zext i8 %21 to i64, !dbg !7445
  %23 = udiv i64 %22, 32, !dbg !7446
  %24 = getelementptr inbounds i32, i32* %20, i64 %23, !dbg !7447
  store i32* %24, i32** %8, align 8, !dbg !7440
  call void @llvm.dbg.declare(metadata i32* %9, metadata !7448, metadata !DIExpression()), !dbg !7449
  %25 = load i8, i8* %7, align 1, !dbg !7450
  %26 = zext i8 %25 to i64, !dbg !7450
  %27 = urem i64 %26, 32, !dbg !7451
  %28 = trunc i64 %27 to i32, !dbg !7450
  store i32 %28, i32* %9, align 4, !dbg !7449
  call void @llvm.dbg.declare(metadata i32* %10, metadata !7452, metadata !DIExpression()), !dbg !7453
  %29 = load i32*, i32** %8, align 8, !dbg !7454
  %30 = load i32, i32* %29, align 4, !dbg !7455
  %31 = load i32, i32* %9, align 4, !dbg !7456
  %32 = lshr i32 %30, %31, !dbg !7457
  %33 = and i32 %32, 1, !dbg !7458
  store i32 %33, i32* %10, align 4, !dbg !7453
  %34 = load i32, i32* %6, align 4, !dbg !7459
  %35 = and i32 %34, 1, !dbg !7460
  %36 = load i32, i32* %10, align 4, !dbg !7461
  %37 = xor i32 %35, %36, !dbg !7462
  %38 = load i32, i32* %9, align 4, !dbg !7463
  %39 = shl i32 %37, %38, !dbg !7464
  %40 = load i32*, i32** %8, align 8, !dbg !7465
  %41 = load i32, i32* %40, align 4, !dbg !7466
  %42 = xor i32 %41, %39, !dbg !7466
  store i32 %42, i32* %40, align 4, !dbg !7466
  %43 = load i32, i32* %10, align 4, !dbg !7467
  ret i32 %43, !dbg !7468
}

; Function Attrs: noinline nounwind uwtable
define i32 @set_quoting_flags(%struct.quoting_options*, i32) #3 !dbg !7469 {
  %3 = alloca %struct.quoting_options*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  store %struct.quoting_options* %0, %struct.quoting_options** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %3, metadata !7472, metadata !DIExpression()), !dbg !7473
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !7474, metadata !DIExpression()), !dbg !7475
  call void @llvm.dbg.declare(metadata i32* %5, metadata !7476, metadata !DIExpression()), !dbg !7477
  %6 = load %struct.quoting_options*, %struct.quoting_options** %3, align 8, !dbg !7478
  %7 = icmp ne %struct.quoting_options* %6, null, !dbg !7478
  br i1 %7, label %9, label %8, !dbg !7480

; <label>:8:                                      ; preds = %2
  store %struct.quoting_options* @default_quoting_options, %struct.quoting_options** %3, align 8, !dbg !7481
  br label %9, !dbg !7482

; <label>:9:                                      ; preds = %8, %2
  %10 = load %struct.quoting_options*, %struct.quoting_options** %3, align 8, !dbg !7483
  %11 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %10, i32 0, i32 1, !dbg !7484
  %12 = load i32, i32* %11, align 4, !dbg !7484
  store i32 %12, i32* %5, align 4, !dbg !7485
  %13 = load i32, i32* %4, align 4, !dbg !7486
  %14 = load %struct.quoting_options*, %struct.quoting_options** %3, align 8, !dbg !7487
  %15 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %14, i32 0, i32 1, !dbg !7488
  store i32 %13, i32* %15, align 4, !dbg !7489
  %16 = load i32, i32* %5, align 4, !dbg !7490
  ret i32 %16, !dbg !7491
}

; Function Attrs: noinline nounwind uwtable
define void @set_custom_quoting(%struct.quoting_options*, i8*, i8*) #3 !dbg !7492 {
  %4 = alloca %struct.quoting_options*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  store %struct.quoting_options* %0, %struct.quoting_options** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %4, metadata !7495, metadata !DIExpression()), !dbg !7496
  store i8* %1, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !7497, metadata !DIExpression()), !dbg !7498
  store i8* %2, i8** %6, align 8
  call void @llvm.dbg.declare(metadata i8** %6, metadata !7499, metadata !DIExpression()), !dbg !7500
  %7 = load %struct.quoting_options*, %struct.quoting_options** %4, align 8, !dbg !7501
  %8 = icmp ne %struct.quoting_options* %7, null, !dbg !7501
  br i1 %8, label %10, label %9, !dbg !7503

; <label>:9:                                      ; preds = %3
  store %struct.quoting_options* @default_quoting_options, %struct.quoting_options** %4, align 8, !dbg !7504
  br label %10, !dbg !7505

; <label>:10:                                     ; preds = %9, %3
  %11 = load %struct.quoting_options*, %struct.quoting_options** %4, align 8, !dbg !7506
  %12 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %11, i32 0, i32 0, !dbg !7507
  store i32 8, i32* %12, align 8, !dbg !7508
  %13 = load i8*, i8** %5, align 8, !dbg !7509
  %14 = icmp ne i8* %13, null, !dbg !7509
  br i1 %14, label %15, label %18, !dbg !7511

; <label>:15:                                     ; preds = %10
  %16 = load i8*, i8** %6, align 8, !dbg !7512
  %17 = icmp ne i8* %16, null, !dbg !7512
  br i1 %17, label %19, label %18, !dbg !7513

; <label>:18:                                     ; preds = %15, %10
  call void @abort() #11, !dbg !7514
  unreachable, !dbg !7514

; <label>:19:                                     ; preds = %15
  %20 = load i8*, i8** %5, align 8, !dbg !7515
  %21 = load %struct.quoting_options*, %struct.quoting_options** %4, align 8, !dbg !7516
  %22 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %21, i32 0, i32 3, !dbg !7517
  store i8* %20, i8** %22, align 8, !dbg !7518
  %23 = load i8*, i8** %6, align 8, !dbg !7519
  %24 = load %struct.quoting_options*, %struct.quoting_options** %4, align 8, !dbg !7520
  %25 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %24, i32 0, i32 4, !dbg !7521
  store i8* %23, i8** %25, align 8, !dbg !7522
  ret void, !dbg !7523
}

; Function Attrs: noinline nounwind uwtable
define i64 @quotearg_buffer(i8*, i64, i8*, i64, %struct.quoting_options*) #3 !dbg !7524 {
  %6 = alloca i8*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i64, align 8
  %10 = alloca %struct.quoting_options*, align 8
  %11 = alloca %struct.quoting_options*, align 8
  %12 = alloca i32, align 4
  %13 = alloca i64, align 8
  store i8* %0, i8** %6, align 8
  call void @llvm.dbg.declare(metadata i8** %6, metadata !7529, metadata !DIExpression()), !dbg !7530
  store i64 %1, i64* %7, align 8
  call void @llvm.dbg.declare(metadata i64* %7, metadata !7531, metadata !DIExpression()), !dbg !7532
  store i8* %2, i8** %8, align 8
  call void @llvm.dbg.declare(metadata i8** %8, metadata !7533, metadata !DIExpression()), !dbg !7534
  store i64 %3, i64* %9, align 8
  call void @llvm.dbg.declare(metadata i64* %9, metadata !7535, metadata !DIExpression()), !dbg !7536
  store %struct.quoting_options* %4, %struct.quoting_options** %10, align 8
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %10, metadata !7537, metadata !DIExpression()), !dbg !7538
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %11, metadata !7539, metadata !DIExpression()), !dbg !7540
  %14 = load %struct.quoting_options*, %struct.quoting_options** %10, align 8, !dbg !7541
  %15 = icmp ne %struct.quoting_options* %14, null, !dbg !7541
  br i1 %15, label %16, label %18, !dbg !7541

; <label>:16:                                     ; preds = %5
  %17 = load %struct.quoting_options*, %struct.quoting_options** %10, align 8, !dbg !7542
  br label %19, !dbg !7541

; <label>:18:                                     ; preds = %5
  br label %19, !dbg !7541

; <label>:19:                                     ; preds = %18, %16
  %20 = phi %struct.quoting_options* [ %17, %16 ], [ @default_quoting_options, %18 ], !dbg !7541
  store %struct.quoting_options* %20, %struct.quoting_options** %11, align 8, !dbg !7540
  call void @llvm.dbg.declare(metadata i32* %12, metadata !7543, metadata !DIExpression()), !dbg !7544
  %21 = call i32* @__errno_location() #14, !dbg !7545
  %22 = load i32, i32* %21, align 4, !dbg !7545
  store i32 %22, i32* %12, align 4, !dbg !7544
  call void @llvm.dbg.declare(metadata i64* %13, metadata !7546, metadata !DIExpression()), !dbg !7547
  %23 = load i8*, i8** %6, align 8, !dbg !7548
  %24 = load i64, i64* %7, align 8, !dbg !7549
  %25 = load i8*, i8** %8, align 8, !dbg !7550
  %26 = load i64, i64* %9, align 8, !dbg !7551
  %27 = load %struct.quoting_options*, %struct.quoting_options** %11, align 8, !dbg !7552
  %28 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %27, i32 0, i32 0, !dbg !7553
  %29 = load i32, i32* %28, align 8, !dbg !7553
  %30 = load %struct.quoting_options*, %struct.quoting_options** %11, align 8, !dbg !7554
  %31 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %30, i32 0, i32 1, !dbg !7555
  %32 = load i32, i32* %31, align 4, !dbg !7555
  %33 = load %struct.quoting_options*, %struct.quoting_options** %11, align 8, !dbg !7556
  %34 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %33, i32 0, i32 2, !dbg !7557
  %35 = getelementptr inbounds [8 x i32], [8 x i32]* %34, i32 0, i32 0, !dbg !7556
  %36 = load %struct.quoting_options*, %struct.quoting_options** %11, align 8, !dbg !7558
  %37 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %36, i32 0, i32 3, !dbg !7559
  %38 = load i8*, i8** %37, align 8, !dbg !7559
  %39 = load %struct.quoting_options*, %struct.quoting_options** %11, align 8, !dbg !7560
  %40 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %39, i32 0, i32 4, !dbg !7561
  %41 = load i8*, i8** %40, align 8, !dbg !7561
  %42 = call i64 @quotearg_buffer_restyled(i8* %23, i64 %24, i8* %25, i64 %26, i32 %29, i32 %32, i32* %35, i8* %38, i8* %41), !dbg !7562
  store i64 %42, i64* %13, align 8, !dbg !7547
  %43 = load i32, i32* %12, align 4, !dbg !7563
  %44 = call i32* @__errno_location() #14, !dbg !7564
  store i32 %43, i32* %44, align 4, !dbg !7565
  %45 = load i64, i64* %13, align 8, !dbg !7566
  ret i64 %45, !dbg !7567
}

; Function Attrs: noinline nounwind uwtable
define internal i64 @quotearg_buffer_restyled(i8*, i64, i8*, i64, i32, i32, i32*, i8*, i8*) #3 !dbg !7568 {
  %10 = alloca i64, align 8
  %11 = alloca i8*, align 8
  %12 = alloca i64, align 8
  %13 = alloca i8*, align 8
  %14 = alloca i64, align 8
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32*, align 8
  %18 = alloca i8*, align 8
  %19 = alloca i8*, align 8
  %20 = alloca i64, align 8
  %21 = alloca i64, align 8
  %22 = alloca i8*, align 8
  %23 = alloca i64, align 8
  %24 = alloca i8, align 1
  %25 = alloca i8, align 1
  %26 = alloca i8, align 1
  %27 = alloca i8, align 1
  %28 = alloca i8, align 1
  %29 = alloca i8, align 1
  %30 = alloca i64, align 8
  %31 = alloca i8, align 1
  %32 = alloca %struct.__mbstate_t, align 4
  %33 = alloca i32, align 4
  %34 = alloca i64, align 8
  %35 = alloca i64, align 8
  %36 = alloca i64, align 8
  store i8* %0, i8** %11, align 8
  call void @llvm.dbg.declare(metadata i8** %11, metadata !7573, metadata !DIExpression()), !dbg !7574
  store i64 %1, i64* %12, align 8
  call void @llvm.dbg.declare(metadata i64* %12, metadata !7575, metadata !DIExpression()), !dbg !7576
  store i8* %2, i8** %13, align 8
  call void @llvm.dbg.declare(metadata i8** %13, metadata !7577, metadata !DIExpression()), !dbg !7578
  store i64 %3, i64* %14, align 8
  call void @llvm.dbg.declare(metadata i64* %14, metadata !7579, metadata !DIExpression()), !dbg !7580
  store i32 %4, i32* %15, align 4
  call void @llvm.dbg.declare(metadata i32* %15, metadata !7581, metadata !DIExpression()), !dbg !7582
  store i32 %5, i32* %16, align 4
  call void @llvm.dbg.declare(metadata i32* %16, metadata !7583, metadata !DIExpression()), !dbg !7584
  store i32* %6, i32** %17, align 8
  call void @llvm.dbg.declare(metadata i32** %17, metadata !7585, metadata !DIExpression()), !dbg !7586
  store i8* %7, i8** %18, align 8
  call void @llvm.dbg.declare(metadata i8** %18, metadata !7587, metadata !DIExpression()), !dbg !7588
  store i8* %8, i8** %19, align 8
  call void @llvm.dbg.declare(metadata i8** %19, metadata !7589, metadata !DIExpression()), !dbg !7590
  call void @llvm.dbg.declare(metadata i64* %20, metadata !7591, metadata !DIExpression()), !dbg !7592
  call void @llvm.dbg.declare(metadata i64* %21, metadata !7593, metadata !DIExpression()), !dbg !7594
  store i64 0, i64* %21, align 8, !dbg !7594
  call void @llvm.dbg.declare(metadata i8** %22, metadata !7595, metadata !DIExpression()), !dbg !7596
  store i8* null, i8** %22, align 8, !dbg !7596
  call void @llvm.dbg.declare(metadata i64* %23, metadata !7597, metadata !DIExpression()), !dbg !7598
  store i64 0, i64* %23, align 8, !dbg !7598
  call void @llvm.dbg.declare(metadata i8* %24, metadata !7599, metadata !DIExpression()), !dbg !7600
  store i8 0, i8* %24, align 1, !dbg !7600
  call void @llvm.dbg.declare(metadata i8* %25, metadata !7601, metadata !DIExpression()), !dbg !7602
  %37 = call i64 @__ctype_get_mb_cur_max() #8, !dbg !7603
  %38 = icmp eq i64 %37, 1, !dbg !7604
  %39 = zext i1 %38 to i8, !dbg !7602
  store i8 %39, i8* %25, align 1, !dbg !7602
  call void @llvm.dbg.declare(metadata i8* %26, metadata !7605, metadata !DIExpression()), !dbg !7606
  %40 = load i32, i32* %16, align 4, !dbg !7607
  %41 = and i32 %40, 2, !dbg !7608
  %42 = icmp ne i32 %41, 0, !dbg !7609
  %43 = zext i1 %42 to i8, !dbg !7606
  store i8 %43, i8* %26, align 1, !dbg !7606
  %44 = load i32, i32* %15, align 4, !dbg !7610
  switch i32 %44, label %123 [
    i32 4, label %45
    i32 3, label %46
    i32 5, label %63
    i32 6, label %64
    i32 7, label %64
    i32 8, label %64
    i32 1, label %104
    i32 2, label %105
    i32 0, label %122
  ], !dbg !7611

; <label>:45:                                     ; preds = %9
  store i32 3, i32* %15, align 4, !dbg !7612
  store i8 1, i8* %26, align 1, !dbg !7614
  br label %46, !dbg !7615

; <label>:46:                                     ; preds = %9, %45
  %47 = load i8, i8* %26, align 1, !dbg !7616
  %48 = trunc i8 %47 to i1, !dbg !7616
  br i1 %48, label %62, label %49, !dbg !7618

; <label>:49:                                     ; preds = %46
  br label %50, !dbg !7619, !llvm.loop !7620

; <label>:50:                                     ; preds = %49
  %51 = load i64, i64* %21, align 8, !dbg !7621
  %52 = load i64, i64* %12, align 8, !dbg !7621
  %53 = icmp ult i64 %51, %52, !dbg !7621
  br i1 %53, label %54, label %58, !dbg !7624

; <label>:54:                                     ; preds = %50
  %55 = load i8*, i8** %11, align 8, !dbg !7621
  %56 = load i64, i64* %21, align 8, !dbg !7621
  %57 = getelementptr inbounds i8, i8* %55, i64 %56, !dbg !7621
  store i8 34, i8* %57, align 1, !dbg !7621
  br label %58, !dbg !7621

; <label>:58:                                     ; preds = %54, %50
  %59 = load i64, i64* %21, align 8, !dbg !7624
  %60 = add i64 %59, 1, !dbg !7624
  store i64 %60, i64* %21, align 8, !dbg !7624
  br label %61, !dbg !7624

; <label>:61:                                     ; preds = %58
  br label %62, !dbg !7624

; <label>:62:                                     ; preds = %61, %46
  store i8 1, i8* %24, align 1, !dbg !7625
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8.161, i32 0, i32 0), i8** %22, align 8, !dbg !7626
  store i64 1, i64* %23, align 8, !dbg !7627
  br label %124, !dbg !7628

; <label>:63:                                     ; preds = %9
  store i8 1, i8* %24, align 1, !dbg !7629
  store i8 0, i8* %26, align 1, !dbg !7630
  br label %124, !dbg !7631

; <label>:64:                                     ; preds = %9, %9, %9
  %65 = load i32, i32* %15, align 4, !dbg !7632
  %66 = icmp ne i32 %65, 8, !dbg !7635
  br i1 %66, label %67, label %72, !dbg !7636

; <label>:67:                                     ; preds = %64
  %68 = load i32, i32* %15, align 4, !dbg !7637
  %69 = call i8* @gettext_quote(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9.162, i32 0, i32 0), i32 %68), !dbg !7639
  store i8* %69, i8** %18, align 8, !dbg !7640
  %70 = load i32, i32* %15, align 4, !dbg !7641
  %71 = call i8* @gettext_quote(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.163, i32 0, i32 0), i32 %70), !dbg !7642
  store i8* %71, i8** %19, align 8, !dbg !7643
  br label %72, !dbg !7644

; <label>:72:                                     ; preds = %67, %64
  %73 = load i8, i8* %26, align 1, !dbg !7645
  %74 = trunc i8 %73 to i1, !dbg !7645
  br i1 %74, label %100, label %75, !dbg !7647

; <label>:75:                                     ; preds = %72
  %76 = load i8*, i8** %18, align 8, !dbg !7648
  store i8* %76, i8** %22, align 8, !dbg !7650
  br label %77, !dbg !7651

; <label>:77:                                     ; preds = %96, %75
  %78 = load i8*, i8** %22, align 8, !dbg !7652
  %79 = load i8, i8* %78, align 1, !dbg !7654
  %80 = icmp ne i8 %79, 0, !dbg !7655
  br i1 %80, label %81, label %99, !dbg !7655

; <label>:81:                                     ; preds = %77
  br label %82, !dbg !7656, !llvm.loop !7657

; <label>:82:                                     ; preds = %81
  %83 = load i64, i64* %21, align 8, !dbg !7658
  %84 = load i64, i64* %12, align 8, !dbg !7658
  %85 = icmp ult i64 %83, %84, !dbg !7658
  br i1 %85, label %86, label %92, !dbg !7661

; <label>:86:                                     ; preds = %82
  %87 = load i8*, i8** %22, align 8, !dbg !7658
  %88 = load i8, i8* %87, align 1, !dbg !7658
  %89 = load i8*, i8** %11, align 8, !dbg !7658
  %90 = load i64, i64* %21, align 8, !dbg !7658
  %91 = getelementptr inbounds i8, i8* %89, i64 %90, !dbg !7658
  store i8 %88, i8* %91, align 1, !dbg !7658
  br label %92, !dbg !7658

; <label>:92:                                     ; preds = %86, %82
  %93 = load i64, i64* %21, align 8, !dbg !7661
  %94 = add i64 %93, 1, !dbg !7661
  store i64 %94, i64* %21, align 8, !dbg !7661
  br label %95, !dbg !7661

; <label>:95:                                     ; preds = %92
  br label %96, !dbg !7661

; <label>:96:                                     ; preds = %95
  %97 = load i8*, i8** %22, align 8, !dbg !7662
  %98 = getelementptr inbounds i8, i8* %97, i32 1, !dbg !7662
  store i8* %98, i8** %22, align 8, !dbg !7662
  br label %77, !dbg !7663, !llvm.loop !7664

; <label>:99:                                     ; preds = %77
  br label %100, !dbg !7665

; <label>:100:                                    ; preds = %99, %72
  store i8 1, i8* %24, align 1, !dbg !7666
  %101 = load i8*, i8** %19, align 8, !dbg !7667
  store i8* %101, i8** %22, align 8, !dbg !7668
  %102 = load i8*, i8** %22, align 8, !dbg !7669
  %103 = call i64 @strlen(i8* %102) #12, !dbg !7670
  store i64 %103, i64* %23, align 8, !dbg !7671
  br label %124, !dbg !7672

; <label>:104:                                    ; preds = %9
  store i32 2, i32* %15, align 4, !dbg !7673
  store i8 1, i8* %26, align 1, !dbg !7674
  br label %105, !dbg !7675

; <label>:105:                                    ; preds = %9, %104
  %106 = load i8, i8* %26, align 1, !dbg !7676
  %107 = trunc i8 %106 to i1, !dbg !7676
  br i1 %107, label %121, label %108, !dbg !7678

; <label>:108:                                    ; preds = %105
  br label %109, !dbg !7679, !llvm.loop !7680

; <label>:109:                                    ; preds = %108
  %110 = load i64, i64* %21, align 8, !dbg !7681
  %111 = load i64, i64* %12, align 8, !dbg !7681
  %112 = icmp ult i64 %110, %111, !dbg !7681
  br i1 %112, label %113, label %117, !dbg !7684

; <label>:113:                                    ; preds = %109
  %114 = load i8*, i8** %11, align 8, !dbg !7681
  %115 = load i64, i64* %21, align 8, !dbg !7681
  %116 = getelementptr inbounds i8, i8* %114, i64 %115, !dbg !7681
  store i8 39, i8* %116, align 1, !dbg !7681
  br label %117, !dbg !7681

; <label>:117:                                    ; preds = %113, %109
  %118 = load i64, i64* %21, align 8, !dbg !7684
  %119 = add i64 %118, 1, !dbg !7684
  store i64 %119, i64* %21, align 8, !dbg !7684
  br label %120, !dbg !7684

; <label>:120:                                    ; preds = %117
  br label %121, !dbg !7684

; <label>:121:                                    ; preds = %120, %105
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.163, i32 0, i32 0), i8** %22, align 8, !dbg !7685
  store i64 1, i64* %23, align 8, !dbg !7686
  br label %124, !dbg !7687

; <label>:122:                                    ; preds = %9
  store i8 0, i8* %26, align 1, !dbg !7688
  br label %124, !dbg !7689

; <label>:123:                                    ; preds = %9
  call void @abort() #11, !dbg !7690
  unreachable, !dbg !7690

; <label>:124:                                    ; preds = %122, %121, %100, %63, %62
  store i64 0, i64* %20, align 8, !dbg !7691
  br label %125, !dbg !7693

; <label>:125:                                    ; preds = %743, %124
  %126 = load i64, i64* %14, align 8, !dbg !7694
  %127 = icmp eq i64 %126, -1, !dbg !7696
  br i1 %127, label %128, label %136, !dbg !7694

; <label>:128:                                    ; preds = %125
  %129 = load i8*, i8** %13, align 8, !dbg !7697
  %130 = load i64, i64* %20, align 8, !dbg !7698
  %131 = getelementptr inbounds i8, i8* %129, i64 %130, !dbg !7697
  %132 = load i8, i8* %131, align 1, !dbg !7697
  %133 = sext i8 %132 to i32, !dbg !7697
  %134 = icmp eq i32 %133, 0, !dbg !7699
  %135 = zext i1 %134 to i32, !dbg !7699
  br label %141, !dbg !7694

; <label>:136:                                    ; preds = %125
  %137 = load i64, i64* %20, align 8, !dbg !7700
  %138 = load i64, i64* %14, align 8, !dbg !7701
  %139 = icmp eq i64 %137, %138, !dbg !7702
  %140 = zext i1 %139 to i32, !dbg !7702
  br label %141, !dbg !7694

; <label>:141:                                    ; preds = %136, %128
  %142 = phi i32 [ %135, %128 ], [ %140, %136 ], !dbg !7694
  %143 = icmp ne i32 %142, 0, !dbg !7703
  %144 = xor i1 %143, true, !dbg !7703
  br i1 %144, label %145, label %746, !dbg !7704

; <label>:145:                                    ; preds = %141
  call void @llvm.dbg.declare(metadata i8* %27, metadata !7705, metadata !DIExpression()), !dbg !7707
  call void @llvm.dbg.declare(metadata i8* %28, metadata !7708, metadata !DIExpression()), !dbg !7709
  call void @llvm.dbg.declare(metadata i8* %29, metadata !7710, metadata !DIExpression()), !dbg !7711
  store i8 0, i8* %29, align 1, !dbg !7711
  %146 = load i8, i8* %24, align 1, !dbg !7712
  %147 = trunc i8 %146 to i1, !dbg !7712
  br i1 %147, label %148, label %170, !dbg !7714

; <label>:148:                                    ; preds = %145
  %149 = load i64, i64* %23, align 8, !dbg !7715
  %150 = icmp ne i64 %149, 0, !dbg !7715
  br i1 %150, label %151, label %170, !dbg !7716

; <label>:151:                                    ; preds = %148
  %152 = load i64, i64* %20, align 8, !dbg !7717
  %153 = load i64, i64* %23, align 8, !dbg !7718
  %154 = add i64 %152, %153, !dbg !7719
  %155 = load i64, i64* %14, align 8, !dbg !7720
  %156 = icmp ule i64 %154, %155, !dbg !7721
  br i1 %156, label %157, label %170, !dbg !7722

; <label>:157:                                    ; preds = %151
  %158 = load i8*, i8** %13, align 8, !dbg !7723
  %159 = load i64, i64* %20, align 8, !dbg !7724
  %160 = getelementptr inbounds i8, i8* %158, i64 %159, !dbg !7725
  %161 = load i8*, i8** %22, align 8, !dbg !7726
  %162 = load i64, i64* %23, align 8, !dbg !7727
  %163 = call i32 @memcmp(i8* %160, i8* %161, i64 %162) #12, !dbg !7728
  %164 = icmp eq i32 %163, 0, !dbg !7729
  br i1 %164, label %165, label %170, !dbg !7730

; <label>:165:                                    ; preds = %157
  %166 = load i8, i8* %26, align 1, !dbg !7731
  %167 = trunc i8 %166 to i1, !dbg !7731
  br i1 %167, label %168, label %169, !dbg !7734

; <label>:168:                                    ; preds = %165
  br label %796, !dbg !7735

; <label>:169:                                    ; preds = %165
  store i8 1, i8* %29, align 1, !dbg !7736
  br label %170, !dbg !7737

; <label>:170:                                    ; preds = %169, %157, %151, %148, %145
  %171 = load i8*, i8** %13, align 8, !dbg !7738
  %172 = load i64, i64* %20, align 8, !dbg !7739
  %173 = getelementptr inbounds i8, i8* %171, i64 %172, !dbg !7738
  %174 = load i8, i8* %173, align 1, !dbg !7738
  store i8 %174, i8* %27, align 1, !dbg !7740
  %175 = load i8, i8* %27, align 1, !dbg !7741
  %176 = zext i8 %175 to i32, !dbg !7741
  switch i32 %176, label %452 [
    i32 0, label %177
    i32 63, label %250
    i32 7, label %346
    i32 8, label %347
    i32 12, label %348
    i32 10, label %349
    i32 13, label %350
    i32 9, label %351
    i32 11, label %352
    i32 92, label %353
    i32 123, label %379
    i32 125, label %379
    i32 35, label %393
    i32 126, label %393
    i32 32, label %398
    i32 33, label %398
    i32 34, label %398
    i32 36, label %398
    i32 38, label %398
    i32 40, label %398
    i32 41, label %398
    i32 42, label %398
    i32 59, label %398
    i32 60, label %398
    i32 61, label %398
    i32 62, label %398
    i32 91, label %398
    i32 94, label %398
    i32 96, label %398
    i32 124, label %398
    i32 39, label %406
    i32 37, label %451
    i32 43, label %451
    i32 44, label %451
    i32 45, label %451
    i32 46, label %451
    i32 47, label %451
    i32 48, label %451
    i32 49, label %451
    i32 50, label %451
    i32 51, label %451
    i32 52, label %451
    i32 53, label %451
    i32 54, label %451
    i32 55, label %451
    i32 56, label %451
    i32 57, label %451
    i32 58, label %451
    i32 65, label %451
    i32 66, label %451
    i32 67, label %451
    i32 68, label %451
    i32 69, label %451
    i32 70, label %451
    i32 71, label %451
    i32 72, label %451
    i32 73, label %451
    i32 74, label %451
    i32 75, label %451
    i32 76, label %451
    i32 77, label %451
    i32 78, label %451
    i32 79, label %451
    i32 80, label %451
    i32 81, label %451
    i32 82, label %451
    i32 83, label %451
    i32 84, label %451
    i32 85, label %451
    i32 86, label %451
    i32 87, label %451
    i32 88, label %451
    i32 89, label %451
    i32 90, label %451
    i32 93, label %451
    i32 95, label %451
    i32 97, label %451
    i32 98, label %451
    i32 99, label %451
    i32 100, label %451
    i32 101, label %451
    i32 102, label %451
    i32 103, label %451
    i32 104, label %451
    i32 105, label %451
    i32 106, label %451
    i32 107, label %451
    i32 108, label %451
    i32 109, label %451
    i32 110, label %451
    i32 111, label %451
    i32 112, label %451
    i32 113, label %451
    i32 114, label %451
    i32 115, label %451
    i32 116, label %451
    i32 117, label %451
    i32 118, label %451
    i32 119, label %451
    i32 120, label %451
    i32 121, label %451
    i32 122, label %451
  ], !dbg !7742

; <label>:177:                                    ; preds = %170
  %178 = load i8, i8* %24, align 1, !dbg !7743
  %179 = trunc i8 %178 to i1, !dbg !7743
  br i1 %179, label %180, label %243, !dbg !7746

; <label>:180:                                    ; preds = %177
  %181 = load i8, i8* %26, align 1, !dbg !7747
  %182 = trunc i8 %181 to i1, !dbg !7747
  br i1 %182, label %183, label %184, !dbg !7750

; <label>:183:                                    ; preds = %180
  br label %796, !dbg !7751

; <label>:184:                                    ; preds = %180
  br label %185, !dbg !7752, !llvm.loop !7753

; <label>:185:                                    ; preds = %184
  %186 = load i64, i64* %21, align 8, !dbg !7754
  %187 = load i64, i64* %12, align 8, !dbg !7754
  %188 = icmp ult i64 %186, %187, !dbg !7754
  br i1 %188, label %189, label %193, !dbg !7757

; <label>:189:                                    ; preds = %185
  %190 = load i8*, i8** %11, align 8, !dbg !7754
  %191 = load i64, i64* %21, align 8, !dbg !7754
  %192 = getelementptr inbounds i8, i8* %190, i64 %191, !dbg !7754
  store i8 92, i8* %192, align 1, !dbg !7754
  br label %193, !dbg !7754

; <label>:193:                                    ; preds = %189, %185
  %194 = load i64, i64* %21, align 8, !dbg !7757
  %195 = add i64 %194, 1, !dbg !7757
  store i64 %195, i64* %21, align 8, !dbg !7757
  br label %196, !dbg !7757

; <label>:196:                                    ; preds = %193
  %197 = load i64, i64* %20, align 8, !dbg !7758
  %198 = add i64 %197, 1, !dbg !7760
  %199 = load i64, i64* %14, align 8, !dbg !7761
  %200 = icmp ult i64 %198, %199, !dbg !7762
  br i1 %200, label %201, label %242, !dbg !7763

; <label>:201:                                    ; preds = %196
  %202 = load i8*, i8** %13, align 8, !dbg !7764
  %203 = load i64, i64* %20, align 8, !dbg !7765
  %204 = add i64 %203, 1, !dbg !7766
  %205 = getelementptr inbounds i8, i8* %202, i64 %204, !dbg !7764
  %206 = load i8, i8* %205, align 1, !dbg !7764
  %207 = sext i8 %206 to i32, !dbg !7764
  %208 = icmp sle i32 48, %207, !dbg !7767
  br i1 %208, label %209, label %242, !dbg !7768

; <label>:209:                                    ; preds = %201
  %210 = load i8*, i8** %13, align 8, !dbg !7769
  %211 = load i64, i64* %20, align 8, !dbg !7770
  %212 = add i64 %211, 1, !dbg !7771
  %213 = getelementptr inbounds i8, i8* %210, i64 %212, !dbg !7769
  %214 = load i8, i8* %213, align 1, !dbg !7769
  %215 = sext i8 %214 to i32, !dbg !7769
  %216 = icmp sle i32 %215, 57, !dbg !7772
  br i1 %216, label %217, label %242, !dbg !7773

; <label>:217:                                    ; preds = %209
  br label %218, !dbg !7774, !llvm.loop !7776

; <label>:218:                                    ; preds = %217
  %219 = load i64, i64* %21, align 8, !dbg !7777
  %220 = load i64, i64* %12, align 8, !dbg !7777
  %221 = icmp ult i64 %219, %220, !dbg !7777
  br i1 %221, label %222, label %226, !dbg !7780

; <label>:222:                                    ; preds = %218
  %223 = load i8*, i8** %11, align 8, !dbg !7777
  %224 = load i64, i64* %21, align 8, !dbg !7777
  %225 = getelementptr inbounds i8, i8* %223, i64 %224, !dbg !7777
  store i8 48, i8* %225, align 1, !dbg !7777
  br label %226, !dbg !7777

; <label>:226:                                    ; preds = %222, %218
  %227 = load i64, i64* %21, align 8, !dbg !7780
  %228 = add i64 %227, 1, !dbg !7780
  store i64 %228, i64* %21, align 8, !dbg !7780
  br label %229, !dbg !7780

; <label>:229:                                    ; preds = %226
  br label %230, !dbg !7781, !llvm.loop !7782

; <label>:230:                                    ; preds = %229
  %231 = load i64, i64* %21, align 8, !dbg !7783
  %232 = load i64, i64* %12, align 8, !dbg !7783
  %233 = icmp ult i64 %231, %232, !dbg !7783
  br i1 %233, label %234, label %238, !dbg !7786

; <label>:234:                                    ; preds = %230
  %235 = load i8*, i8** %11, align 8, !dbg !7783
  %236 = load i64, i64* %21, align 8, !dbg !7783
  %237 = getelementptr inbounds i8, i8* %235, i64 %236, !dbg !7783
  store i8 48, i8* %237, align 1, !dbg !7783
  br label %238, !dbg !7783

; <label>:238:                                    ; preds = %234, %230
  %239 = load i64, i64* %21, align 8, !dbg !7786
  %240 = add i64 %239, 1, !dbg !7786
  store i64 %240, i64* %21, align 8, !dbg !7786
  br label %241, !dbg !7786

; <label>:241:                                    ; preds = %238
  br label %242, !dbg !7787

; <label>:242:                                    ; preds = %241, %209, %201, %196
  store i8 48, i8* %27, align 1, !dbg !7788
  br label %249, !dbg !7789

; <label>:243:                                    ; preds = %177
  %244 = load i32, i32* %16, align 4, !dbg !7790
  %245 = and i32 %244, 1, !dbg !7792
  %246 = icmp ne i32 %245, 0, !dbg !7792
  br i1 %246, label %247, label %248, !dbg !7793

; <label>:247:                                    ; preds = %243
  br label %743, !dbg !7794

; <label>:248:                                    ; preds = %243
  br label %249

; <label>:249:                                    ; preds = %248, %242
  br label %684, !dbg !7795

; <label>:250:                                    ; preds = %170
  %251 = load i32, i32* %15, align 4, !dbg !7796
  switch i32 %251, label %344 [
    i32 2, label %252
    i32 3, label %257
  ], !dbg !7797

; <label>:252:                                    ; preds = %250
  %253 = load i8, i8* %26, align 1, !dbg !7798
  %254 = trunc i8 %253 to i1, !dbg !7798
  br i1 %254, label %255, label %256, !dbg !7801

; <label>:255:                                    ; preds = %252
  br label %796, !dbg !7802

; <label>:256:                                    ; preds = %252
  br label %345, !dbg !7803

; <label>:257:                                    ; preds = %250
  %258 = load i32, i32* %16, align 4, !dbg !7804
  %259 = and i32 %258, 4, !dbg !7806
  %260 = icmp ne i32 %259, 0, !dbg !7806
  br i1 %260, label %261, label %343, !dbg !7807

; <label>:261:                                    ; preds = %257
  %262 = load i64, i64* %20, align 8, !dbg !7808
  %263 = add i64 %262, 2, !dbg !7809
  %264 = load i64, i64* %14, align 8, !dbg !7810
  %265 = icmp ult i64 %263, %264, !dbg !7811
  br i1 %265, label %266, label %343, !dbg !7812

; <label>:266:                                    ; preds = %261
  %267 = load i8*, i8** %13, align 8, !dbg !7813
  %268 = load i64, i64* %20, align 8, !dbg !7814
  %269 = add i64 %268, 1, !dbg !7815
  %270 = getelementptr inbounds i8, i8* %267, i64 %269, !dbg !7813
  %271 = load i8, i8* %270, align 1, !dbg !7813
  %272 = sext i8 %271 to i32, !dbg !7813
  %273 = icmp eq i32 %272, 63, !dbg !7816
  br i1 %273, label %274, label %343, !dbg !7817

; <label>:274:                                    ; preds = %266
  %275 = load i8*, i8** %13, align 8, !dbg !7818
  %276 = load i64, i64* %20, align 8, !dbg !7819
  %277 = add i64 %276, 2, !dbg !7820
  %278 = getelementptr inbounds i8, i8* %275, i64 %277, !dbg !7818
  %279 = load i8, i8* %278, align 1, !dbg !7818
  %280 = sext i8 %279 to i32, !dbg !7818
  switch i32 %280, label %341 [
    i32 33, label %281
    i32 39, label %281
    i32 40, label %281
    i32 41, label %281
    i32 45, label %281
    i32 47, label %281
    i32 60, label %281
    i32 61, label %281
    i32 62, label %281
  ], !dbg !7821

; <label>:281:                                    ; preds = %274, %274, %274, %274, %274, %274, %274, %274, %274
  %282 = load i8, i8* %26, align 1, !dbg !7822
  %283 = trunc i8 %282 to i1, !dbg !7822
  br i1 %283, label %284, label %285, !dbg !7825

; <label>:284:                                    ; preds = %281
  br label %796, !dbg !7826

; <label>:285:                                    ; preds = %281
  %286 = load i8*, i8** %13, align 8, !dbg !7827
  %287 = load i64, i64* %20, align 8, !dbg !7828
  %288 = add i64 %287, 2, !dbg !7829
  %289 = getelementptr inbounds i8, i8* %286, i64 %288, !dbg !7827
  %290 = load i8, i8* %289, align 1, !dbg !7827
  store i8 %290, i8* %27, align 1, !dbg !7830
  %291 = load i64, i64* %20, align 8, !dbg !7831
  %292 = add i64 %291, 2, !dbg !7831
  store i64 %292, i64* %20, align 8, !dbg !7831
  br label %293, !dbg !7832, !llvm.loop !7833

; <label>:293:                                    ; preds = %285
  %294 = load i64, i64* %21, align 8, !dbg !7834
  %295 = load i64, i64* %12, align 8, !dbg !7834
  %296 = icmp ult i64 %294, %295, !dbg !7834
  br i1 %296, label %297, label %301, !dbg !7837

; <label>:297:                                    ; preds = %293
  %298 = load i8*, i8** %11, align 8, !dbg !7834
  %299 = load i64, i64* %21, align 8, !dbg !7834
  %300 = getelementptr inbounds i8, i8* %298, i64 %299, !dbg !7834
  store i8 63, i8* %300, align 1, !dbg !7834
  br label %301, !dbg !7834

; <label>:301:                                    ; preds = %297, %293
  %302 = load i64, i64* %21, align 8, !dbg !7837
  %303 = add i64 %302, 1, !dbg !7837
  store i64 %303, i64* %21, align 8, !dbg !7837
  br label %304, !dbg !7837

; <label>:304:                                    ; preds = %301
  br label %305, !dbg !7838, !llvm.loop !7839

; <label>:305:                                    ; preds = %304
  %306 = load i64, i64* %21, align 8, !dbg !7840
  %307 = load i64, i64* %12, align 8, !dbg !7840
  %308 = icmp ult i64 %306, %307, !dbg !7840
  br i1 %308, label %309, label %313, !dbg !7843

; <label>:309:                                    ; preds = %305
  %310 = load i8*, i8** %11, align 8, !dbg !7840
  %311 = load i64, i64* %21, align 8, !dbg !7840
  %312 = getelementptr inbounds i8, i8* %310, i64 %311, !dbg !7840
  store i8 34, i8* %312, align 1, !dbg !7840
  br label %313, !dbg !7840

; <label>:313:                                    ; preds = %309, %305
  %314 = load i64, i64* %21, align 8, !dbg !7843
  %315 = add i64 %314, 1, !dbg !7843
  store i64 %315, i64* %21, align 8, !dbg !7843
  br label %316, !dbg !7843

; <label>:316:                                    ; preds = %313
  br label %317, !dbg !7844, !llvm.loop !7845

; <label>:317:                                    ; preds = %316
  %318 = load i64, i64* %21, align 8, !dbg !7846
  %319 = load i64, i64* %12, align 8, !dbg !7846
  %320 = icmp ult i64 %318, %319, !dbg !7846
  br i1 %320, label %321, label %325, !dbg !7849

; <label>:321:                                    ; preds = %317
  %322 = load i8*, i8** %11, align 8, !dbg !7846
  %323 = load i64, i64* %21, align 8, !dbg !7846
  %324 = getelementptr inbounds i8, i8* %322, i64 %323, !dbg !7846
  store i8 34, i8* %324, align 1, !dbg !7846
  br label %325, !dbg !7846

; <label>:325:                                    ; preds = %321, %317
  %326 = load i64, i64* %21, align 8, !dbg !7849
  %327 = add i64 %326, 1, !dbg !7849
  store i64 %327, i64* %21, align 8, !dbg !7849
  br label %328, !dbg !7849

; <label>:328:                                    ; preds = %325
  br label %329, !dbg !7850, !llvm.loop !7851

; <label>:329:                                    ; preds = %328
  %330 = load i64, i64* %21, align 8, !dbg !7852
  %331 = load i64, i64* %12, align 8, !dbg !7852
  %332 = icmp ult i64 %330, %331, !dbg !7852
  br i1 %332, label %333, label %337, !dbg !7855

; <label>:333:                                    ; preds = %329
  %334 = load i8*, i8** %11, align 8, !dbg !7852
  %335 = load i64, i64* %21, align 8, !dbg !7852
  %336 = getelementptr inbounds i8, i8* %334, i64 %335, !dbg !7852
  store i8 63, i8* %336, align 1, !dbg !7852
  br label %337, !dbg !7852

; <label>:337:                                    ; preds = %333, %329
  %338 = load i64, i64* %21, align 8, !dbg !7855
  %339 = add i64 %338, 1, !dbg !7855
  store i64 %339, i64* %21, align 8, !dbg !7855
  br label %340, !dbg !7855

; <label>:340:                                    ; preds = %337
  br label %342, !dbg !7856

; <label>:341:                                    ; preds = %274
  br label %342, !dbg !7857

; <label>:342:                                    ; preds = %341, %340
  br label %343, !dbg !7858

; <label>:343:                                    ; preds = %342, %266, %261, %257
  br label %345, !dbg !7859

; <label>:344:                                    ; preds = %250
  br label %345, !dbg !7860

; <label>:345:                                    ; preds = %344, %343, %256
  br label %684, !dbg !7861

; <label>:346:                                    ; preds = %170
  store i8 97, i8* %28, align 1, !dbg !7862
  br label %373, !dbg !7863

; <label>:347:                                    ; preds = %170
  store i8 98, i8* %28, align 1, !dbg !7864
  br label %373, !dbg !7865

; <label>:348:                                    ; preds = %170
  store i8 102, i8* %28, align 1, !dbg !7866
  br label %373, !dbg !7867

; <label>:349:                                    ; preds = %170
  store i8 110, i8* %28, align 1, !dbg !7868
  br label %365, !dbg !7869

; <label>:350:                                    ; preds = %170
  store i8 114, i8* %28, align 1, !dbg !7870
  br label %365, !dbg !7871

; <label>:351:                                    ; preds = %170
  store i8 116, i8* %28, align 1, !dbg !7872
  br label %365, !dbg !7873

; <label>:352:                                    ; preds = %170
  store i8 118, i8* %28, align 1, !dbg !7874
  br label %373, !dbg !7875

; <label>:353:                                    ; preds = %170
  %354 = load i8, i8* %27, align 1, !dbg !7876
  store i8 %354, i8* %28, align 1, !dbg !7877
  %355 = load i8, i8* %24, align 1, !dbg !7878
  %356 = trunc i8 %355 to i1, !dbg !7878
  br i1 %356, label %357, label %364, !dbg !7880

; <label>:357:                                    ; preds = %353
  %358 = load i8, i8* %26, align 1, !dbg !7881
  %359 = trunc i8 %358 to i1, !dbg !7881
  br i1 %359, label %360, label %364, !dbg !7882

; <label>:360:                                    ; preds = %357
  %361 = load i64, i64* %23, align 8, !dbg !7883
  %362 = icmp ne i64 %361, 0, !dbg !7883
  br i1 %362, label %363, label %364, !dbg !7884

; <label>:363:                                    ; preds = %360
  br label %729, !dbg !7885

; <label>:364:                                    ; preds = %360, %357, %353
  br label %365, !dbg !7883

; <label>:365:                                    ; preds = %364, %351, %350, %349
  %366 = load i32, i32* %15, align 4, !dbg !7886
  %367 = icmp eq i32 %366, 2, !dbg !7888
  br i1 %367, label %368, label %372, !dbg !7889

; <label>:368:                                    ; preds = %365
  %369 = load i8, i8* %26, align 1, !dbg !7890
  %370 = trunc i8 %369 to i1, !dbg !7890
  br i1 %370, label %371, label %372, !dbg !7891

; <label>:371:                                    ; preds = %368
  br label %796, !dbg !7892

; <label>:372:                                    ; preds = %368, %365
  br label %373, !dbg !7890

; <label>:373:                                    ; preds = %372, %352, %348, %347, %346
  %374 = load i8, i8* %24, align 1, !dbg !7893
  %375 = trunc i8 %374 to i1, !dbg !7893
  br i1 %375, label %376, label %378, !dbg !7895

; <label>:376:                                    ; preds = %373
  %377 = load i8, i8* %28, align 1, !dbg !7896
  store i8 %377, i8* %27, align 1, !dbg !7898
  br label %712, !dbg !7899

; <label>:378:                                    ; preds = %373
  br label %684, !dbg !7900

; <label>:379:                                    ; preds = %170, %170
  %380 = load i64, i64* %14, align 8, !dbg !7901
  %381 = icmp eq i64 %380, -1, !dbg !7903
  br i1 %381, label %382, label %388, !dbg !7904

; <label>:382:                                    ; preds = %379
  %383 = load i8*, i8** %13, align 8, !dbg !7905
  %384 = getelementptr inbounds i8, i8* %383, i64 1, !dbg !7905
  %385 = load i8, i8* %384, align 1, !dbg !7905
  %386 = sext i8 %385 to i32, !dbg !7905
  %387 = icmp eq i32 %386, 0, !dbg !7906
  br i1 %387, label %392, label %391, !dbg !7901

; <label>:388:                                    ; preds = %379
  %389 = load i64, i64* %14, align 8, !dbg !7907
  %390 = icmp eq i64 %389, 1, !dbg !7908
  br i1 %390, label %392, label %391, !dbg !7904

; <label>:391:                                    ; preds = %388, %382
  br label %684, !dbg !7909

; <label>:392:                                    ; preds = %388, %382
  br label %393, !dbg !7910

; <label>:393:                                    ; preds = %170, %170, %392
  %394 = load i64, i64* %20, align 8, !dbg !7911
  %395 = icmp ne i64 %394, 0, !dbg !7913
  br i1 %395, label %396, label %397, !dbg !7914

; <label>:396:                                    ; preds = %393
  br label %684, !dbg !7915

; <label>:397:                                    ; preds = %393
  br label %398, !dbg !7916

; <label>:398:                                    ; preds = %170, %170, %170, %170, %170, %170, %170, %170, %170, %170, %170, %170, %170, %170, %170, %170, %397
  %399 = load i32, i32* %15, align 4, !dbg !7917
  %400 = icmp eq i32 %399, 2, !dbg !7919
  br i1 %400, label %401, label %405, !dbg !7920

; <label>:401:                                    ; preds = %398
  %402 = load i8, i8* %26, align 1, !dbg !7921
  %403 = trunc i8 %402 to i1, !dbg !7921
  br i1 %403, label %404, label %405, !dbg !7922

; <label>:404:                                    ; preds = %401
  br label %796, !dbg !7923

; <label>:405:                                    ; preds = %401, %398
  br label %684, !dbg !7924

; <label>:406:                                    ; preds = %170
  %407 = load i32, i32* %15, align 4, !dbg !7925
  %408 = icmp eq i32 %407, 2, !dbg !7927
  br i1 %408, label %409, label %450, !dbg !7928

; <label>:409:                                    ; preds = %406
  %410 = load i8, i8* %26, align 1, !dbg !7929
  %411 = trunc i8 %410 to i1, !dbg !7929
  br i1 %411, label %412, label %413, !dbg !7932

; <label>:412:                                    ; preds = %409
  br label %796, !dbg !7933

; <label>:413:                                    ; preds = %409
  br label %414, !dbg !7934, !llvm.loop !7935

; <label>:414:                                    ; preds = %413
  %415 = load i64, i64* %21, align 8, !dbg !7936
  %416 = load i64, i64* %12, align 8, !dbg !7936
  %417 = icmp ult i64 %415, %416, !dbg !7936
  br i1 %417, label %418, label %422, !dbg !7939

; <label>:418:                                    ; preds = %414
  %419 = load i8*, i8** %11, align 8, !dbg !7936
  %420 = load i64, i64* %21, align 8, !dbg !7936
  %421 = getelementptr inbounds i8, i8* %419, i64 %420, !dbg !7936
  store i8 39, i8* %421, align 1, !dbg !7936
  br label %422, !dbg !7936

; <label>:422:                                    ; preds = %418, %414
  %423 = load i64, i64* %21, align 8, !dbg !7939
  %424 = add i64 %423, 1, !dbg !7939
  store i64 %424, i64* %21, align 8, !dbg !7939
  br label %425, !dbg !7939

; <label>:425:                                    ; preds = %422
  br label %426, !dbg !7940, !llvm.loop !7941

; <label>:426:                                    ; preds = %425
  %427 = load i64, i64* %21, align 8, !dbg !7942
  %428 = load i64, i64* %12, align 8, !dbg !7942
  %429 = icmp ult i64 %427, %428, !dbg !7942
  br i1 %429, label %430, label %434, !dbg !7945

; <label>:430:                                    ; preds = %426
  %431 = load i8*, i8** %11, align 8, !dbg !7942
  %432 = load i64, i64* %21, align 8, !dbg !7942
  %433 = getelementptr inbounds i8, i8* %431, i64 %432, !dbg !7942
  store i8 92, i8* %433, align 1, !dbg !7942
  br label %434, !dbg !7942

; <label>:434:                                    ; preds = %430, %426
  %435 = load i64, i64* %21, align 8, !dbg !7945
  %436 = add i64 %435, 1, !dbg !7945
  store i64 %436, i64* %21, align 8, !dbg !7945
  br label %437, !dbg !7945

; <label>:437:                                    ; preds = %434
  br label %438, !dbg !7946, !llvm.loop !7947

; <label>:438:                                    ; preds = %437
  %439 = load i64, i64* %21, align 8, !dbg !7948
  %440 = load i64, i64* %12, align 8, !dbg !7948
  %441 = icmp ult i64 %439, %440, !dbg !7948
  br i1 %441, label %442, label %446, !dbg !7951

; <label>:442:                                    ; preds = %438
  %443 = load i8*, i8** %11, align 8, !dbg !7948
  %444 = load i64, i64* %21, align 8, !dbg !7948
  %445 = getelementptr inbounds i8, i8* %443, i64 %444, !dbg !7948
  store i8 39, i8* %445, align 1, !dbg !7948
  br label %446, !dbg !7948

; <label>:446:                                    ; preds = %442, %438
  %447 = load i64, i64* %21, align 8, !dbg !7951
  %448 = add i64 %447, 1, !dbg !7951
  store i64 %448, i64* %21, align 8, !dbg !7951
  br label %449, !dbg !7951

; <label>:449:                                    ; preds = %446
  br label %450, !dbg !7952

; <label>:450:                                    ; preds = %449, %406
  br label %684, !dbg !7953

; <label>:451:                                    ; preds = %170, %170, %170, %170, %170, %170, %170, %170, %170, %170, %170, %170, %170, %170, %170, %170, %170, %170, %170, %170, %170, %170, %170, %170, %170, %170, %170, %170, %170, %170, %170, %170, %170, %170, %170, %170, %170, %170, %170, %170, %170, %170, %170, %170, %170, %170, %170, %170, %170, %170, %170, %170, %170, %170, %170, %170, %170, %170, %170, %170, %170, %170, %170, %170, %170, %170, %170, %170, %170, %170, %170
  br label %684, !dbg !7954

; <label>:452:                                    ; preds = %170
  call void @llvm.dbg.declare(metadata i64* %30, metadata !7955, metadata !DIExpression()), !dbg !7957
  call void @llvm.dbg.declare(metadata i8* %31, metadata !7958, metadata !DIExpression()), !dbg !7959
  %453 = load i8, i8* %25, align 1, !dbg !7960
  %454 = trunc i8 %453 to i1, !dbg !7960
  br i1 %454, label %455, label %467, !dbg !7962

; <label>:455:                                    ; preds = %452
  store i64 1, i64* %30, align 8, !dbg !7963
  %456 = call i16** @__ctype_b_loc() #14, !dbg !7965
  %457 = load i16*, i16** %456, align 8, !dbg !7965
  %458 = load i8, i8* %27, align 1, !dbg !7965
  %459 = zext i8 %458 to i32, !dbg !7965
  %460 = sext i32 %459 to i64, !dbg !7965
  %461 = getelementptr inbounds i16, i16* %457, i64 %460, !dbg !7965
  %462 = load i16, i16* %461, align 2, !dbg !7965
  %463 = zext i16 %462 to i32, !dbg !7965
  %464 = and i32 %463, 16384, !dbg !7965
  %465 = icmp ne i32 %464, 0, !dbg !7966
  %466 = zext i1 %465 to i8, !dbg !7967
  store i8 %466, i8* %31, align 1, !dbg !7967
  br label %564, !dbg !7968

; <label>:467:                                    ; preds = %452
  call void @llvm.dbg.declare(metadata %struct.__mbstate_t* %32, metadata !7969, metadata !DIExpression()), !dbg !7984
  %468 = bitcast %struct.__mbstate_t* %32 to i8*, !dbg !7985
  call void @llvm.memset.p0i8.i64(i8* %468, i8 0, i64 8, i32 4, i1 false), !dbg !7985
  store i64 0, i64* %30, align 8, !dbg !7986
  store i8 1, i8* %31, align 1, !dbg !7987
  %469 = load i64, i64* %14, align 8, !dbg !7988
  %470 = icmp eq i64 %469, -1, !dbg !7990
  br i1 %470, label %471, label %474, !dbg !7991

; <label>:471:                                    ; preds = %467
  %472 = load i8*, i8** %13, align 8, !dbg !7992
  %473 = call i64 @strlen(i8* %472) #12, !dbg !7993
  store i64 %473, i64* %14, align 8, !dbg !7994
  br label %474, !dbg !7995

; <label>:474:                                    ; preds = %471, %467
  br label %475, !dbg !7996, !llvm.loop !7997

; <label>:475:                                    ; preds = %559, %474
  call void @llvm.dbg.declare(metadata i32* %33, metadata !7999, metadata !DIExpression()), !dbg !8002
  call void @llvm.dbg.declare(metadata i64* %34, metadata !8003, metadata !DIExpression()), !dbg !8004
  %476 = load i8*, i8** %13, align 8, !dbg !8005
  %477 = load i64, i64* %20, align 8, !dbg !8006
  %478 = load i64, i64* %30, align 8, !dbg !8007
  %479 = add i64 %477, %478, !dbg !8008
  %480 = getelementptr inbounds i8, i8* %476, i64 %479, !dbg !8005
  %481 = load i64, i64* %14, align 8, !dbg !8009
  %482 = load i64, i64* %20, align 8, !dbg !8010
  %483 = load i64, i64* %30, align 8, !dbg !8011
  %484 = add i64 %482, %483, !dbg !8012
  %485 = sub i64 %481, %484, !dbg !8013
  %486 = call i64 @mbrtowc(i32* %33, i8* %480, i64 %485, %struct.__mbstate_t* %32) #8, !dbg !8014
  store i64 %486, i64* %34, align 8, !dbg !8004
  %487 = load i64, i64* %34, align 8, !dbg !8015
  %488 = icmp eq i64 %487, 0, !dbg !8017
  br i1 %488, label %489, label %490, !dbg !8018

; <label>:489:                                    ; preds = %475
  br label %563, !dbg !8019

; <label>:490:                                    ; preds = %475
  %491 = load i64, i64* %34, align 8, !dbg !8020
  %492 = icmp eq i64 %491, -1, !dbg !8022
  br i1 %492, label %493, label %494, !dbg !8023

; <label>:493:                                    ; preds = %490
  store i8 0, i8* %31, align 1, !dbg !8024
  br label %563, !dbg !8026

; <label>:494:                                    ; preds = %490
  %495 = load i64, i64* %34, align 8, !dbg !8027
  %496 = icmp eq i64 %495, -2, !dbg !8029
  br i1 %496, label %497, label %519, !dbg !8030

; <label>:497:                                    ; preds = %494
  store i8 0, i8* %31, align 1, !dbg !8031
  br label %498, !dbg !8033

; <label>:498:                                    ; preds = %515, %497
  %499 = load i64, i64* %20, align 8, !dbg !8034
  %500 = load i64, i64* %30, align 8, !dbg !8035
  %501 = add i64 %499, %500, !dbg !8036
  %502 = load i64, i64* %14, align 8, !dbg !8037
  %503 = icmp ult i64 %501, %502, !dbg !8038
  br i1 %503, label %504, label %513, !dbg !8039

; <label>:504:                                    ; preds = %498
  %505 = load i8*, i8** %13, align 8, !dbg !8040
  %506 = load i64, i64* %20, align 8, !dbg !8041
  %507 = load i64, i64* %30, align 8, !dbg !8042
  %508 = add i64 %506, %507, !dbg !8043
  %509 = getelementptr inbounds i8, i8* %505, i64 %508, !dbg !8040
  %510 = load i8, i8* %509, align 1, !dbg !8040
  %511 = sext i8 %510 to i32, !dbg !8040
  %512 = icmp ne i32 %511, 0, !dbg !8039
  br label %513

; <label>:513:                                    ; preds = %504, %498
  %514 = phi i1 [ false, %498 ], [ %512, %504 ]
  br i1 %514, label %515, label %518, !dbg !8033

; <label>:515:                                    ; preds = %513
  %516 = load i64, i64* %30, align 8, !dbg !8044
  %517 = add i64 %516, 1, !dbg !8044
  store i64 %517, i64* %30, align 8, !dbg !8044
  br label %498, !dbg !8033, !llvm.loop !8045

; <label>:518:                                    ; preds = %513
  br label %563, !dbg !8046

; <label>:519:                                    ; preds = %494
  %520 = load i8, i8* %26, align 1, !dbg !8047
  %521 = trunc i8 %520 to i1, !dbg !8047
  br i1 %521, label %522, label %547, !dbg !8050

; <label>:522:                                    ; preds = %519
  %523 = load i32, i32* %15, align 4, !dbg !8051
  %524 = icmp eq i32 %523, 2, !dbg !8052
  br i1 %524, label %525, label %547, !dbg !8053

; <label>:525:                                    ; preds = %522
  call void @llvm.dbg.declare(metadata i64* %35, metadata !8054, metadata !DIExpression()), !dbg !8056
  store i64 1, i64* %35, align 8, !dbg !8057
  br label %526, !dbg !8059

; <label>:526:                                    ; preds = %543, %525
  %527 = load i64, i64* %35, align 8, !dbg !8060
  %528 = load i64, i64* %34, align 8, !dbg !8062
  %529 = icmp ult i64 %527, %528, !dbg !8063
  br i1 %529, label %530, label %546, !dbg !8064

; <label>:530:                                    ; preds = %526
  %531 = load i8*, i8** %13, align 8, !dbg !8065
  %532 = load i64, i64* %20, align 8, !dbg !8066
  %533 = load i64, i64* %30, align 8, !dbg !8067
  %534 = add i64 %532, %533, !dbg !8068
  %535 = load i64, i64* %35, align 8, !dbg !8069
  %536 = add i64 %534, %535, !dbg !8070
  %537 = getelementptr inbounds i8, i8* %531, i64 %536, !dbg !8065
  %538 = load i8, i8* %537, align 1, !dbg !8065
  %539 = sext i8 %538 to i32, !dbg !8065
  switch i32 %539, label %541 [
    i32 91, label %540
    i32 92, label %540
    i32 94, label %540
    i32 96, label %540
    i32 124, label %540
  ], !dbg !8071

; <label>:540:                                    ; preds = %530, %530, %530, %530, %530
  br label %796, !dbg !8072

; <label>:541:                                    ; preds = %530
  br label %542, !dbg !8074

; <label>:542:                                    ; preds = %541
  br label %543, !dbg !8075

; <label>:543:                                    ; preds = %542
  %544 = load i64, i64* %35, align 8, !dbg !8076
  %545 = add i64 %544, 1, !dbg !8076
  store i64 %545, i64* %35, align 8, !dbg !8076
  br label %526, !dbg !8077, !llvm.loop !8078

; <label>:546:                                    ; preds = %526
  br label %547, !dbg !8080

; <label>:547:                                    ; preds = %546, %522, %519
  %548 = load i32, i32* %33, align 4, !dbg !8081
  %549 = call i32 @iswprint(i32 %548) #8, !dbg !8083
  %550 = icmp ne i32 %549, 0, !dbg !8083
  br i1 %550, label %552, label %551, !dbg !8084

; <label>:551:                                    ; preds = %547
  store i8 0, i8* %31, align 1, !dbg !8085
  br label %552, !dbg !8086

; <label>:552:                                    ; preds = %551, %547
  %553 = load i64, i64* %34, align 8, !dbg !8087
  %554 = load i64, i64* %30, align 8, !dbg !8088
  %555 = add i64 %554, %553, !dbg !8088
  store i64 %555, i64* %30, align 8, !dbg !8088
  br label %556

; <label>:556:                                    ; preds = %552
  br label %557

; <label>:557:                                    ; preds = %556
  br label %558

; <label>:558:                                    ; preds = %557
  br label %559, !dbg !8089

; <label>:559:                                    ; preds = %558
  %560 = call i32 @mbsinit(%struct.__mbstate_t* %32) #12, !dbg !8090
  %561 = icmp ne i32 %560, 0, !dbg !8091
  %562 = xor i1 %561, true, !dbg !8091
  br i1 %562, label %475, label %563, !dbg !8089, !llvm.loop !7997

; <label>:563:                                    ; preds = %559, %518, %493, %489
  br label %564

; <label>:564:                                    ; preds = %563, %455
  %565 = load i64, i64* %30, align 8, !dbg !8092
  %566 = icmp ult i64 1, %565, !dbg !8094
  br i1 %566, label %573, label %567, !dbg !8095

; <label>:567:                                    ; preds = %564
  %568 = load i8, i8* %24, align 1, !dbg !8096
  %569 = trunc i8 %568 to i1, !dbg !8096
  br i1 %569, label %570, label %683, !dbg !8097

; <label>:570:                                    ; preds = %567
  %571 = load i8, i8* %31, align 1, !dbg !8098
  %572 = trunc i8 %571 to i1, !dbg !8098
  br i1 %572, label %683, label %573, !dbg !8099

; <label>:573:                                    ; preds = %570, %564
  call void @llvm.dbg.declare(metadata i64* %36, metadata !8100, metadata !DIExpression()), !dbg !8102
  %574 = load i64, i64* %20, align 8, !dbg !8103
  %575 = load i64, i64* %30, align 8, !dbg !8104
  %576 = add i64 %574, %575, !dbg !8105
  store i64 %576, i64* %36, align 8, !dbg !8102
  br label %577, !dbg !8106

; <label>:577:                                    ; preds = %676, %573
  %578 = load i8, i8* %24, align 1, !dbg !8107
  %579 = trunc i8 %578 to i1, !dbg !8107
  br i1 %579, label %580, label %640, !dbg !8112

; <label>:580:                                    ; preds = %577
  %581 = load i8, i8* %31, align 1, !dbg !8113
  %582 = trunc i8 %581 to i1, !dbg !8113
  br i1 %582, label %640, label %583, !dbg !8114

; <label>:583:                                    ; preds = %580
  %584 = load i8, i8* %26, align 1, !dbg !8115
  %585 = trunc i8 %584 to i1, !dbg !8115
  br i1 %585, label %586, label %587, !dbg !8118

; <label>:586:                                    ; preds = %583
  br label %796, !dbg !8119

; <label>:587:                                    ; preds = %583
  br label %588, !dbg !8120, !llvm.loop !8121

; <label>:588:                                    ; preds = %587
  %589 = load i64, i64* %21, align 8, !dbg !8122
  %590 = load i64, i64* %12, align 8, !dbg !8122
  %591 = icmp ult i64 %589, %590, !dbg !8122
  br i1 %591, label %592, label %596, !dbg !8125

; <label>:592:                                    ; preds = %588
  %593 = load i8*, i8** %11, align 8, !dbg !8122
  %594 = load i64, i64* %21, align 8, !dbg !8122
  %595 = getelementptr inbounds i8, i8* %593, i64 %594, !dbg !8122
  store i8 92, i8* %595, align 1, !dbg !8122
  br label %596, !dbg !8122

; <label>:596:                                    ; preds = %592, %588
  %597 = load i64, i64* %21, align 8, !dbg !8125
  %598 = add i64 %597, 1, !dbg !8125
  store i64 %598, i64* %21, align 8, !dbg !8125
  br label %599, !dbg !8125

; <label>:599:                                    ; preds = %596
  br label %600, !dbg !8126, !llvm.loop !8127

; <label>:600:                                    ; preds = %599
  %601 = load i64, i64* %21, align 8, !dbg !8128
  %602 = load i64, i64* %12, align 8, !dbg !8128
  %603 = icmp ult i64 %601, %602, !dbg !8128
  br i1 %603, label %604, label %613, !dbg !8131

; <label>:604:                                    ; preds = %600
  %605 = load i8, i8* %27, align 1, !dbg !8128
  %606 = zext i8 %605 to i32, !dbg !8128
  %607 = ashr i32 %606, 6, !dbg !8128
  %608 = add nsw i32 48, %607, !dbg !8128
  %609 = trunc i32 %608 to i8, !dbg !8128
  %610 = load i8*, i8** %11, align 8, !dbg !8128
  %611 = load i64, i64* %21, align 8, !dbg !8128
  %612 = getelementptr inbounds i8, i8* %610, i64 %611, !dbg !8128
  store i8 %609, i8* %612, align 1, !dbg !8128
  br label %613, !dbg !8128

; <label>:613:                                    ; preds = %604, %600
  %614 = load i64, i64* %21, align 8, !dbg !8131
  %615 = add i64 %614, 1, !dbg !8131
  store i64 %615, i64* %21, align 8, !dbg !8131
  br label %616, !dbg !8131

; <label>:616:                                    ; preds = %613
  br label %617, !dbg !8132, !llvm.loop !8133

; <label>:617:                                    ; preds = %616
  %618 = load i64, i64* %21, align 8, !dbg !8134
  %619 = load i64, i64* %12, align 8, !dbg !8134
  %620 = icmp ult i64 %618, %619, !dbg !8134
  br i1 %620, label %621, label %631, !dbg !8137

; <label>:621:                                    ; preds = %617
  %622 = load i8, i8* %27, align 1, !dbg !8134
  %623 = zext i8 %622 to i32, !dbg !8134
  %624 = ashr i32 %623, 3, !dbg !8134
  %625 = and i32 %624, 7, !dbg !8134
  %626 = add nsw i32 48, %625, !dbg !8134
  %627 = trunc i32 %626 to i8, !dbg !8134
  %628 = load i8*, i8** %11, align 8, !dbg !8134
  %629 = load i64, i64* %21, align 8, !dbg !8134
  %630 = getelementptr inbounds i8, i8* %628, i64 %629, !dbg !8134
  store i8 %627, i8* %630, align 1, !dbg !8134
  br label %631, !dbg !8134

; <label>:631:                                    ; preds = %621, %617
  %632 = load i64, i64* %21, align 8, !dbg !8137
  %633 = add i64 %632, 1, !dbg !8137
  store i64 %633, i64* %21, align 8, !dbg !8137
  br label %634, !dbg !8137

; <label>:634:                                    ; preds = %631
  %635 = load i8, i8* %27, align 1, !dbg !8138
  %636 = zext i8 %635 to i32, !dbg !8138
  %637 = and i32 %636, 7, !dbg !8139
  %638 = add nsw i32 48, %637, !dbg !8140
  %639 = trunc i32 %638 to i8, !dbg !8141
  store i8 %639, i8* %27, align 1, !dbg !8142
  br label %657, !dbg !8143

; <label>:640:                                    ; preds = %580, %577
  %641 = load i8, i8* %29, align 1, !dbg !8144
  %642 = trunc i8 %641 to i1, !dbg !8144
  br i1 %642, label %643, label %656, !dbg !8146

; <label>:643:                                    ; preds = %640
  br label %644, !dbg !8147, !llvm.loop !8149

; <label>:644:                                    ; preds = %643
  %645 = load i64, i64* %21, align 8, !dbg !8150
  %646 = load i64, i64* %12, align 8, !dbg !8150
  %647 = icmp ult i64 %645, %646, !dbg !8150
  br i1 %647, label %648, label %652, !dbg !8153

; <label>:648:                                    ; preds = %644
  %649 = load i8*, i8** %11, align 8, !dbg !8150
  %650 = load i64, i64* %21, align 8, !dbg !8150
  %651 = getelementptr inbounds i8, i8* %649, i64 %650, !dbg !8150
  store i8 92, i8* %651, align 1, !dbg !8150
  br label %652, !dbg !8150

; <label>:652:                                    ; preds = %648, %644
  %653 = load i64, i64* %21, align 8, !dbg !8153
  %654 = add i64 %653, 1, !dbg !8153
  store i64 %654, i64* %21, align 8, !dbg !8153
  br label %655, !dbg !8153

; <label>:655:                                    ; preds = %652
  store i8 0, i8* %29, align 1, !dbg !8154
  br label %656, !dbg !8155

; <label>:656:                                    ; preds = %655, %640
  br label %657

; <label>:657:                                    ; preds = %656, %634
  %658 = load i64, i64* %36, align 8, !dbg !8156
  %659 = load i64, i64* %20, align 8, !dbg !8158
  %660 = add i64 %659, 1, !dbg !8159
  %661 = icmp ule i64 %658, %660, !dbg !8160
  br i1 %661, label %662, label %663, !dbg !8161

; <label>:662:                                    ; preds = %657
  br label %682, !dbg !8162

; <label>:663:                                    ; preds = %657
  br label %664, !dbg !8163, !llvm.loop !8164

; <label>:664:                                    ; preds = %663
  %665 = load i64, i64* %21, align 8, !dbg !8165
  %666 = load i64, i64* %12, align 8, !dbg !8165
  %667 = icmp ult i64 %665, %666, !dbg !8165
  br i1 %667, label %668, label %673, !dbg !8168

; <label>:668:                                    ; preds = %664
  %669 = load i8, i8* %27, align 1, !dbg !8165
  %670 = load i8*, i8** %11, align 8, !dbg !8165
  %671 = load i64, i64* %21, align 8, !dbg !8165
  %672 = getelementptr inbounds i8, i8* %670, i64 %671, !dbg !8165
  store i8 %669, i8* %672, align 1, !dbg !8165
  br label %673, !dbg !8165

; <label>:673:                                    ; preds = %668, %664
  %674 = load i64, i64* %21, align 8, !dbg !8168
  %675 = add i64 %674, 1, !dbg !8168
  store i64 %675, i64* %21, align 8, !dbg !8168
  br label %676, !dbg !8168

; <label>:676:                                    ; preds = %673
  %677 = load i8*, i8** %13, align 8, !dbg !8169
  %678 = load i64, i64* %20, align 8, !dbg !8170
  %679 = add i64 %678, 1, !dbg !8170
  store i64 %679, i64* %20, align 8, !dbg !8170
  %680 = getelementptr inbounds i8, i8* %677, i64 %679, !dbg !8169
  %681 = load i8, i8* %680, align 1, !dbg !8169
  store i8 %681, i8* %27, align 1, !dbg !8171
  br label %577, !dbg !8172, !llvm.loop !8173

; <label>:682:                                    ; preds = %662
  br label %729, !dbg !8176

; <label>:683:                                    ; preds = %570, %567
  br label %684, !dbg !8177

; <label>:684:                                    ; preds = %683, %451, %450, %405, %396, %391, %378, %345, %249
  %685 = load i8, i8* %24, align 1, !dbg !8178
  %686 = trunc i8 %685 to i1, !dbg !8178
  br i1 %686, label %690, label %687, !dbg !8180

; <label>:687:                                    ; preds = %684
  %688 = load i8, i8* %26, align 1, !dbg !8181
  %689 = trunc i8 %688 to i1, !dbg !8181
  br i1 %689, label %690, label %707, !dbg !8182

; <label>:690:                                    ; preds = %687, %684
  %691 = load i32*, i32** %17, align 8, !dbg !8183
  %692 = icmp ne i32* %691, null, !dbg !8183
  br i1 %692, label %693, label %707, !dbg !8184

; <label>:693:                                    ; preds = %690
  %694 = load i32*, i32** %17, align 8, !dbg !8185
  %695 = load i8, i8* %27, align 1, !dbg !8186
  %696 = zext i8 %695 to i64, !dbg !8186
  %697 = udiv i64 %696, 32, !dbg !8187
  %698 = getelementptr inbounds i32, i32* %694, i64 %697, !dbg !8185
  %699 = load i32, i32* %698, align 4, !dbg !8185
  %700 = load i8, i8* %27, align 1, !dbg !8188
  %701 = zext i8 %700 to i64, !dbg !8188
  %702 = urem i64 %701, 32, !dbg !8189
  %703 = trunc i64 %702 to i32, !dbg !8190
  %704 = shl i32 1, %703, !dbg !8190
  %705 = and i32 %699, %704, !dbg !8191
  %706 = icmp ne i32 %705, 0, !dbg !8191
  br i1 %706, label %711, label %707, !dbg !8192

; <label>:707:                                    ; preds = %693, %690, %687
  %708 = load i8, i8* %29, align 1, !dbg !8193
  %709 = trunc i8 %708 to i1, !dbg !8193
  br i1 %709, label %711, label %710, !dbg !8194

; <label>:710:                                    ; preds = %707
  br label %729, !dbg !8195

; <label>:711:                                    ; preds = %707, %693
  br label %712, !dbg !8193

; <label>:712:                                    ; preds = %711, %376
  %713 = load i8, i8* %26, align 1, !dbg !8196
  %714 = trunc i8 %713 to i1, !dbg !8196
  br i1 %714, label %715, label %716, !dbg !8198

; <label>:715:                                    ; preds = %712
  br label %796, !dbg !8199

; <label>:716:                                    ; preds = %712
  br label %717, !dbg !8200, !llvm.loop !8201

; <label>:717:                                    ; preds = %716
  %718 = load i64, i64* %21, align 8, !dbg !8202
  %719 = load i64, i64* %12, align 8, !dbg !8202
  %720 = icmp ult i64 %718, %719, !dbg !8202
  br i1 %720, label %721, label %725, !dbg !8205

; <label>:721:                                    ; preds = %717
  %722 = load i8*, i8** %11, align 8, !dbg !8202
  %723 = load i64, i64* %21, align 8, !dbg !8202
  %724 = getelementptr inbounds i8, i8* %722, i64 %723, !dbg !8202
  store i8 92, i8* %724, align 1, !dbg !8202
  br label %725, !dbg !8202

; <label>:725:                                    ; preds = %721, %717
  %726 = load i64, i64* %21, align 8, !dbg !8205
  %727 = add i64 %726, 1, !dbg !8205
  store i64 %727, i64* %21, align 8, !dbg !8205
  br label %728, !dbg !8205

; <label>:728:                                    ; preds = %725
  br label %729, !dbg !8205

; <label>:729:                                    ; preds = %728, %710, %682, %363
  br label %730, !dbg !8206, !llvm.loop !8207

; <label>:730:                                    ; preds = %729
  %731 = load i64, i64* %21, align 8, !dbg !8208
  %732 = load i64, i64* %12, align 8, !dbg !8208
  %733 = icmp ult i64 %731, %732, !dbg !8208
  br i1 %733, label %734, label %739, !dbg !8211

; <label>:734:                                    ; preds = %730
  %735 = load i8, i8* %27, align 1, !dbg !8208
  %736 = load i8*, i8** %11, align 8, !dbg !8208
  %737 = load i64, i64* %21, align 8, !dbg !8208
  %738 = getelementptr inbounds i8, i8* %736, i64 %737, !dbg !8208
  store i8 %735, i8* %738, align 1, !dbg !8208
  br label %739, !dbg !8208

; <label>:739:                                    ; preds = %734, %730
  %740 = load i64, i64* %21, align 8, !dbg !8211
  %741 = add i64 %740, 1, !dbg !8211
  store i64 %741, i64* %21, align 8, !dbg !8211
  br label %742, !dbg !8211

; <label>:742:                                    ; preds = %739
  br label %743, !dbg !8212

; <label>:743:                                    ; preds = %742, %247
  %744 = load i64, i64* %20, align 8, !dbg !8213
  %745 = add i64 %744, 1, !dbg !8213
  store i64 %745, i64* %20, align 8, !dbg !8213
  br label %125, !dbg !8214, !llvm.loop !8215

; <label>:746:                                    ; preds = %141
  %747 = load i64, i64* %21, align 8, !dbg !8217
  %748 = icmp eq i64 %747, 0, !dbg !8219
  br i1 %748, label %749, label %756, !dbg !8220

; <label>:749:                                    ; preds = %746
  %750 = load i32, i32* %15, align 4, !dbg !8221
  %751 = icmp eq i32 %750, 2, !dbg !8222
  br i1 %751, label %752, label %756, !dbg !8223

; <label>:752:                                    ; preds = %749
  %753 = load i8, i8* %26, align 1, !dbg !8224
  %754 = trunc i8 %753 to i1, !dbg !8224
  br i1 %754, label %755, label %756, !dbg !8225

; <label>:755:                                    ; preds = %752
  br label %796, !dbg !8226

; <label>:756:                                    ; preds = %752, %749, %746
  %757 = load i8*, i8** %22, align 8, !dbg !8227
  %758 = icmp ne i8* %757, null, !dbg !8227
  br i1 %758, label %759, label %786, !dbg !8229

; <label>:759:                                    ; preds = %756
  %760 = load i8, i8* %26, align 1, !dbg !8230
  %761 = trunc i8 %760 to i1, !dbg !8230
  br i1 %761, label %786, label %762, !dbg !8231

; <label>:762:                                    ; preds = %759
  br label %763, !dbg !8232

; <label>:763:                                    ; preds = %782, %762
  %764 = load i8*, i8** %22, align 8, !dbg !8233
  %765 = load i8, i8* %764, align 1, !dbg !8236
  %766 = icmp ne i8 %765, 0, !dbg !8237
  br i1 %766, label %767, label %785, !dbg !8237

; <label>:767:                                    ; preds = %763
  br label %768, !dbg !8238, !llvm.loop !8239

; <label>:768:                                    ; preds = %767
  %769 = load i64, i64* %21, align 8, !dbg !8240
  %770 = load i64, i64* %12, align 8, !dbg !8240
  %771 = icmp ult i64 %769, %770, !dbg !8240
  br i1 %771, label %772, label %778, !dbg !8243

; <label>:772:                                    ; preds = %768
  %773 = load i8*, i8** %22, align 8, !dbg !8240
  %774 = load i8, i8* %773, align 1, !dbg !8240
  %775 = load i8*, i8** %11, align 8, !dbg !8240
  %776 = load i64, i64* %21, align 8, !dbg !8240
  %777 = getelementptr inbounds i8, i8* %775, i64 %776, !dbg !8240
  store i8 %774, i8* %777, align 1, !dbg !8240
  br label %778, !dbg !8240

; <label>:778:                                    ; preds = %772, %768
  %779 = load i64, i64* %21, align 8, !dbg !8243
  %780 = add i64 %779, 1, !dbg !8243
  store i64 %780, i64* %21, align 8, !dbg !8243
  br label %781, !dbg !8243

; <label>:781:                                    ; preds = %778
  br label %782, !dbg !8243

; <label>:782:                                    ; preds = %781
  %783 = load i8*, i8** %22, align 8, !dbg !8244
  %784 = getelementptr inbounds i8, i8* %783, i32 1, !dbg !8244
  store i8* %784, i8** %22, align 8, !dbg !8244
  br label %763, !dbg !8245, !llvm.loop !8246

; <label>:785:                                    ; preds = %763
  br label %786, !dbg !8247

; <label>:786:                                    ; preds = %785, %759, %756
  %787 = load i64, i64* %21, align 8, !dbg !8248
  %788 = load i64, i64* %12, align 8, !dbg !8250
  %789 = icmp ult i64 %787, %788, !dbg !8251
  br i1 %789, label %790, label %794, !dbg !8252

; <label>:790:                                    ; preds = %786
  %791 = load i8*, i8** %11, align 8, !dbg !8253
  %792 = load i64, i64* %21, align 8, !dbg !8254
  %793 = getelementptr inbounds i8, i8* %791, i64 %792, !dbg !8253
  store i8 0, i8* %793, align 1, !dbg !8255
  br label %794, !dbg !8253

; <label>:794:                                    ; preds = %790, %786
  %795 = load i64, i64* %21, align 8, !dbg !8256
  store i64 %795, i64* %10, align 8, !dbg !8257
  br label %807, !dbg !8257

; <label>:796:                                    ; preds = %755, %715, %586, %540, %412, %404, %371, %284, %255, %183, %168
  %797 = load i8*, i8** %11, align 8, !dbg !8258
  %798 = load i64, i64* %12, align 8, !dbg !8259
  %799 = load i8*, i8** %13, align 8, !dbg !8260
  %800 = load i64, i64* %14, align 8, !dbg !8261
  %801 = load i32, i32* %15, align 4, !dbg !8262
  %802 = load i32, i32* %16, align 4, !dbg !8263
  %803 = and i32 %802, -3, !dbg !8264
  %804 = load i8*, i8** %18, align 8, !dbg !8265
  %805 = load i8*, i8** %19, align 8, !dbg !8266
  %806 = call i64 @quotearg_buffer_restyled(i8* %797, i64 %798, i8* %799, i64 %800, i32 %801, i32 %803, i32* null, i8* %804, i8* %805), !dbg !8267
  store i64 %806, i64* %10, align 8, !dbg !8268
  br label %807, !dbg !8268

; <label>:807:                                    ; preds = %796, %794
  %808 = load i64, i64* %10, align 8, !dbg !8269
  ret i64 %808, !dbg !8269
}

; Function Attrs: nounwind
declare i64 @__ctype_get_mb_cur_max() #5

; Function Attrs: noinline nounwind uwtable
define internal i8* @gettext_quote(i8*, i32) #3 !dbg !8270 {
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i8*, align 8
  store i8* %0, i8** %3, align 8
  call void @llvm.dbg.declare(metadata i8** %3, metadata !8273, metadata !DIExpression()), !dbg !8274
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !8275, metadata !DIExpression()), !dbg !8276
  call void @llvm.dbg.declare(metadata i8** %5, metadata !8277, metadata !DIExpression()), !dbg !8278
  %6 = load i8*, i8** %3, align 8, !dbg !8279
  store i8* %6, i8** %5, align 8, !dbg !8278
  %7 = load i8*, i8** %5, align 8, !dbg !8280
  %8 = load i8*, i8** %3, align 8, !dbg !8282
  %9 = icmp eq i8* %7, %8, !dbg !8283
  br i1 %9, label %10, label %14, !dbg !8284

; <label>:10:                                     ; preds = %2
  %11 = load i32, i32* %4, align 4, !dbg !8285
  %12 = icmp eq i32 %11, 7, !dbg !8286
  br i1 %12, label %13, label %14, !dbg !8287

; <label>:13:                                     ; preds = %10
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8.161, i32 0, i32 0), i8** %5, align 8, !dbg !8288
  br label %14, !dbg !8289

; <label>:14:                                     ; preds = %13, %10, %2
  %15 = load i8*, i8** %5, align 8, !dbg !8290
  ret i8* %15, !dbg !8291
}

; Function Attrs: nounwind readonly
declare i32 @memcmp(i8*, i8*, i64) #6

; Function Attrs: nounwind readnone
declare i16** @__ctype_b_loc() #7

; Function Attrs: nounwind
declare i64 @mbrtowc(i32*, i8*, i64, %struct.__mbstate_t*) #5

; Function Attrs: nounwind
declare i32 @iswprint(i32) #5

; Function Attrs: nounwind readonly
declare i32 @mbsinit(%struct.__mbstate_t*) #6

; Function Attrs: noinline nounwind uwtable
define i8* @quotearg_alloc(i8*, i64, %struct.quoting_options*) #3 !dbg !8292 {
  %4 = alloca i8*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %struct.quoting_options*, align 8
  store i8* %0, i8** %4, align 8
  call void @llvm.dbg.declare(metadata i8** %4, metadata !8295, metadata !DIExpression()), !dbg !8296
  store i64 %1, i64* %5, align 8
  call void @llvm.dbg.declare(metadata i64* %5, metadata !8297, metadata !DIExpression()), !dbg !8298
  store %struct.quoting_options* %2, %struct.quoting_options** %6, align 8
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %6, metadata !8299, metadata !DIExpression()), !dbg !8300
  %7 = load i8*, i8** %4, align 8, !dbg !8301
  %8 = load i64, i64* %5, align 8, !dbg !8302
  %9 = load %struct.quoting_options*, %struct.quoting_options** %6, align 8, !dbg !8303
  %10 = call i8* @quotearg_alloc_mem(i8* %7, i64 %8, i64* null, %struct.quoting_options* %9), !dbg !8304
  ret i8* %10, !dbg !8305
}

; Function Attrs: noinline nounwind uwtable
define i8* @quotearg_alloc_mem(i8*, i64, i64*, %struct.quoting_options*) #3 !dbg !8306 {
  %5 = alloca i8*, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64*, align 8
  %8 = alloca %struct.quoting_options*, align 8
  %9 = alloca %struct.quoting_options*, align 8
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i64, align 8
  %13 = alloca i8*, align 8
  store i8* %0, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !8309, metadata !DIExpression()), !dbg !8310
  store i64 %1, i64* %6, align 8
  call void @llvm.dbg.declare(metadata i64* %6, metadata !8311, metadata !DIExpression()), !dbg !8312
  store i64* %2, i64** %7, align 8
  call void @llvm.dbg.declare(metadata i64** %7, metadata !8313, metadata !DIExpression()), !dbg !8314
  store %struct.quoting_options* %3, %struct.quoting_options** %8, align 8
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %8, metadata !8315, metadata !DIExpression()), !dbg !8316
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %9, metadata !8317, metadata !DIExpression()), !dbg !8318
  %14 = load %struct.quoting_options*, %struct.quoting_options** %8, align 8, !dbg !8319
  %15 = icmp ne %struct.quoting_options* %14, null, !dbg !8319
  br i1 %15, label %16, label %18, !dbg !8319

; <label>:16:                                     ; preds = %4
  %17 = load %struct.quoting_options*, %struct.quoting_options** %8, align 8, !dbg !8320
  br label %19, !dbg !8319

; <label>:18:                                     ; preds = %4
  br label %19, !dbg !8319

; <label>:19:                                     ; preds = %18, %16
  %20 = phi %struct.quoting_options* [ %17, %16 ], [ @default_quoting_options, %18 ], !dbg !8319
  store %struct.quoting_options* %20, %struct.quoting_options** %9, align 8, !dbg !8318
  call void @llvm.dbg.declare(metadata i32* %10, metadata !8321, metadata !DIExpression()), !dbg !8322
  %21 = call i32* @__errno_location() #14, !dbg !8323
  %22 = load i32, i32* %21, align 4, !dbg !8323
  store i32 %22, i32* %10, align 4, !dbg !8322
  call void @llvm.dbg.declare(metadata i32* %11, metadata !8324, metadata !DIExpression()), !dbg !8325
  %23 = load %struct.quoting_options*, %struct.quoting_options** %9, align 8, !dbg !8326
  %24 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %23, i32 0, i32 1, !dbg !8327
  %25 = load i32, i32* %24, align 4, !dbg !8327
  %26 = load i64*, i64** %7, align 8, !dbg !8328
  %27 = icmp ne i64* %26, null, !dbg !8328
  %28 = zext i1 %27 to i64, !dbg !8328
  %29 = select i1 %27, i32 0, i32 1, !dbg !8328
  %30 = or i32 %25, %29, !dbg !8329
  store i32 %30, i32* %11, align 4, !dbg !8325
  call void @llvm.dbg.declare(metadata i64* %12, metadata !8330, metadata !DIExpression()), !dbg !8331
  %31 = load i8*, i8** %5, align 8, !dbg !8332
  %32 = load i64, i64* %6, align 8, !dbg !8333
  %33 = load %struct.quoting_options*, %struct.quoting_options** %9, align 8, !dbg !8334
  %34 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %33, i32 0, i32 0, !dbg !8335
  %35 = load i32, i32* %34, align 8, !dbg !8335
  %36 = load i32, i32* %11, align 4, !dbg !8336
  %37 = load %struct.quoting_options*, %struct.quoting_options** %9, align 8, !dbg !8337
  %38 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %37, i32 0, i32 2, !dbg !8338
  %39 = getelementptr inbounds [8 x i32], [8 x i32]* %38, i32 0, i32 0, !dbg !8337
  %40 = load %struct.quoting_options*, %struct.quoting_options** %9, align 8, !dbg !8339
  %41 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %40, i32 0, i32 3, !dbg !8340
  %42 = load i8*, i8** %41, align 8, !dbg !8340
  %43 = load %struct.quoting_options*, %struct.quoting_options** %9, align 8, !dbg !8341
  %44 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %43, i32 0, i32 4, !dbg !8342
  %45 = load i8*, i8** %44, align 8, !dbg !8342
  %46 = call i64 @quotearg_buffer_restyled(i8* null, i64 0, i8* %31, i64 %32, i32 %35, i32 %36, i32* %39, i8* %42, i8* %45), !dbg !8343
  %47 = add i64 %46, 1, !dbg !8344
  store i64 %47, i64* %12, align 8, !dbg !8331
  call void @llvm.dbg.declare(metadata i8** %13, metadata !8345, metadata !DIExpression()), !dbg !8346
  %48 = load i64, i64* %12, align 8, !dbg !8347
  %49 = call noalias i8* @xcharalloc(i64 %48), !dbg !8348
  store i8* %49, i8** %13, align 8, !dbg !8346
  %50 = load i8*, i8** %13, align 8, !dbg !8349
  %51 = load i64, i64* %12, align 8, !dbg !8350
  %52 = load i8*, i8** %5, align 8, !dbg !8351
  %53 = load i64, i64* %6, align 8, !dbg !8352
  %54 = load %struct.quoting_options*, %struct.quoting_options** %9, align 8, !dbg !8353
  %55 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %54, i32 0, i32 0, !dbg !8354
  %56 = load i32, i32* %55, align 8, !dbg !8354
  %57 = load i32, i32* %11, align 4, !dbg !8355
  %58 = load %struct.quoting_options*, %struct.quoting_options** %9, align 8, !dbg !8356
  %59 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %58, i32 0, i32 2, !dbg !8357
  %60 = getelementptr inbounds [8 x i32], [8 x i32]* %59, i32 0, i32 0, !dbg !8356
  %61 = load %struct.quoting_options*, %struct.quoting_options** %9, align 8, !dbg !8358
  %62 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %61, i32 0, i32 3, !dbg !8359
  %63 = load i8*, i8** %62, align 8, !dbg !8359
  %64 = load %struct.quoting_options*, %struct.quoting_options** %9, align 8, !dbg !8360
  %65 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %64, i32 0, i32 4, !dbg !8361
  %66 = load i8*, i8** %65, align 8, !dbg !8361
  %67 = call i64 @quotearg_buffer_restyled(i8* %50, i64 %51, i8* %52, i64 %53, i32 %56, i32 %57, i32* %60, i8* %63, i8* %66), !dbg !8362
  %68 = load i32, i32* %10, align 4, !dbg !8363
  %69 = call i32* @__errno_location() #14, !dbg !8364
  store i32 %68, i32* %69, align 4, !dbg !8365
  %70 = load i64*, i64** %7, align 8, !dbg !8366
  %71 = icmp ne i64* %70, null, !dbg !8366
  br i1 %71, label %72, label %76, !dbg !8368

; <label>:72:                                     ; preds = %19
  %73 = load i64, i64* %12, align 8, !dbg !8369
  %74 = sub i64 %73, 1, !dbg !8370
  %75 = load i64*, i64** %7, align 8, !dbg !8371
  store i64 %74, i64* %75, align 8, !dbg !8372
  br label %76, !dbg !8373

; <label>:76:                                     ; preds = %72, %19
  %77 = load i8*, i8** %13, align 8, !dbg !8374
  ret i8* %77, !dbg !8375
}

; Function Attrs: noinline nounwind uwtable
define void @quotearg_free() #3 !dbg !8376 {
  %1 = alloca %struct.slotvec*, align 8
  %2 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata %struct.slotvec** %1, metadata !8377, metadata !DIExpression()), !dbg !8378
  %3 = load %struct.slotvec*, %struct.slotvec** @slotvec, align 8, !dbg !8379
  store %struct.slotvec* %3, %struct.slotvec** %1, align 8, !dbg !8378
  call void @llvm.dbg.declare(metadata i32* %2, metadata !8380, metadata !DIExpression()), !dbg !8381
  store i32 1, i32* %2, align 4, !dbg !8382
  br label %4, !dbg !8384

; <label>:4:                                      ; preds = %15, %0
  %5 = load i32, i32* %2, align 4, !dbg !8385
  %6 = load i32, i32* @nslots, align 4, !dbg !8387
  %7 = icmp ult i32 %5, %6, !dbg !8388
  br i1 %7, label %8, label %18, !dbg !8389

; <label>:8:                                      ; preds = %4
  %9 = load %struct.slotvec*, %struct.slotvec** %1, align 8, !dbg !8390
  %10 = load i32, i32* %2, align 4, !dbg !8391
  %11 = zext i32 %10 to i64, !dbg !8390
  %12 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %9, i64 %11, !dbg !8390
  %13 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %12, i32 0, i32 1, !dbg !8392
  %14 = load i8*, i8** %13, align 8, !dbg !8392
  call void @free(i8* %14) #8, !dbg !8393
  br label %15, !dbg !8393

; <label>:15:                                     ; preds = %8
  %16 = load i32, i32* %2, align 4, !dbg !8394
  %17 = add i32 %16, 1, !dbg !8394
  store i32 %17, i32* %2, align 4, !dbg !8394
  br label %4, !dbg !8395, !llvm.loop !8396

; <label>:18:                                     ; preds = %4
  %19 = load %struct.slotvec*, %struct.slotvec** %1, align 8, !dbg !8398
  %20 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %19, i64 0, !dbg !8398
  %21 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %20, i32 0, i32 1, !dbg !8400
  %22 = load i8*, i8** %21, align 8, !dbg !8400
  %23 = icmp ne i8* %22, getelementptr inbounds ([256 x i8], [256 x i8]* @slot0, i32 0, i32 0), !dbg !8401
  br i1 %23, label %24, label %29, !dbg !8402

; <label>:24:                                     ; preds = %18
  %25 = load %struct.slotvec*, %struct.slotvec** %1, align 8, !dbg !8403
  %26 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %25, i64 0, !dbg !8403
  %27 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %26, i32 0, i32 1, !dbg !8405
  %28 = load i8*, i8** %27, align 8, !dbg !8405
  call void @free(i8* %28) #8, !dbg !8406
  store i64 256, i64* getelementptr inbounds (%struct.slotvec, %struct.slotvec* @slotvec0, i32 0, i32 0), align 8, !dbg !8407
  store i8* getelementptr inbounds ([256 x i8], [256 x i8]* @slot0, i32 0, i32 0), i8** getelementptr inbounds (%struct.slotvec, %struct.slotvec* @slotvec0, i32 0, i32 1), align 8, !dbg !8408
  br label %29, !dbg !8409

; <label>:29:                                     ; preds = %24, %18
  %30 = load %struct.slotvec*, %struct.slotvec** %1, align 8, !dbg !8410
  %31 = icmp ne %struct.slotvec* %30, @slotvec0, !dbg !8412
  br i1 %31, label %32, label %35, !dbg !8413

; <label>:32:                                     ; preds = %29
  %33 = load %struct.slotvec*, %struct.slotvec** %1, align 8, !dbg !8414
  %34 = bitcast %struct.slotvec* %33 to i8*, !dbg !8414
  call void @free(i8* %34) #8, !dbg !8416
  store %struct.slotvec* @slotvec0, %struct.slotvec** @slotvec, align 8, !dbg !8417
  br label %35, !dbg !8418

; <label>:35:                                     ; preds = %32, %29
  store i32 1, i32* @nslots, align 4, !dbg !8419
  ret void, !dbg !8420
}

; Function Attrs: noinline nounwind uwtable
define i8* @quotearg_n(i32, i8*) #3 !dbg !8421 {
  %3 = alloca i32, align 4
  %4 = alloca i8*, align 8
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !8424, metadata !DIExpression()), !dbg !8425
  store i8* %1, i8** %4, align 8
  call void @llvm.dbg.declare(metadata i8** %4, metadata !8426, metadata !DIExpression()), !dbg !8427
  %5 = load i32, i32* %3, align 4, !dbg !8428
  %6 = load i8*, i8** %4, align 8, !dbg !8429
  %7 = call i8* @quotearg_n_options(i32 %5, i8* %6, i64 -1, %struct.quoting_options* @default_quoting_options), !dbg !8430
  ret i8* %7, !dbg !8431
}

; Function Attrs: noinline nounwind uwtable
define internal i8* @quotearg_n_options(i32, i8*, i64, %struct.quoting_options*) #3 !dbg !8432 {
  %5 = alloca i32, align 4
  %6 = alloca i8*, align 8
  %7 = alloca i64, align 8
  %8 = alloca %struct.quoting_options*, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca %struct.slotvec*, align 8
  %12 = alloca i64, align 8
  %13 = alloca i8, align 1
  %14 = alloca i64, align 8
  %15 = alloca i8*, align 8
  %16 = alloca i32, align 4
  %17 = alloca i64, align 8
  store i32 %0, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !8435, metadata !DIExpression()), !dbg !8436
  store i8* %1, i8** %6, align 8
  call void @llvm.dbg.declare(metadata i8** %6, metadata !8437, metadata !DIExpression()), !dbg !8438
  store i64 %2, i64* %7, align 8
  call void @llvm.dbg.declare(metadata i64* %7, metadata !8439, metadata !DIExpression()), !dbg !8440
  store %struct.quoting_options* %3, %struct.quoting_options** %8, align 8
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %8, metadata !8441, metadata !DIExpression()), !dbg !8442
  call void @llvm.dbg.declare(metadata i32* %9, metadata !8443, metadata !DIExpression()), !dbg !8444
  %18 = call i32* @__errno_location() #14, !dbg !8445
  %19 = load i32, i32* %18, align 4, !dbg !8445
  store i32 %19, i32* %9, align 4, !dbg !8444
  call void @llvm.dbg.declare(metadata i32* %10, metadata !8446, metadata !DIExpression()), !dbg !8447
  %20 = load i32, i32* %5, align 4, !dbg !8448
  store i32 %20, i32* %10, align 4, !dbg !8447
  call void @llvm.dbg.declare(metadata %struct.slotvec** %11, metadata !8449, metadata !DIExpression()), !dbg !8450
  %21 = load %struct.slotvec*, %struct.slotvec** @slotvec, align 8, !dbg !8451
  store %struct.slotvec* %21, %struct.slotvec** %11, align 8, !dbg !8450
  %22 = load i32, i32* %5, align 4, !dbg !8452
  %23 = icmp slt i32 %22, 0, !dbg !8454
  br i1 %23, label %24, label %25, !dbg !8455

; <label>:24:                                     ; preds = %4
  call void @abort() #11, !dbg !8456
  unreachable, !dbg !8456

; <label>:25:                                     ; preds = %4
  %26 = load i32, i32* @nslots, align 4, !dbg !8457
  %27 = load i32, i32* %10, align 4, !dbg !8459
  %28 = icmp ule i32 %26, %27, !dbg !8460
  br i1 %28, label %29, label %70, !dbg !8461

; <label>:29:                                     ; preds = %25
  call void @llvm.dbg.declare(metadata i64* %12, metadata !8462, metadata !DIExpression()), !dbg !8464
  %30 = load i32, i32* %10, align 4, !dbg !8465
  %31 = add i32 %30, 1, !dbg !8466
  %32 = zext i32 %31 to i64, !dbg !8465
  store i64 %32, i64* %12, align 8, !dbg !8464
  call void @llvm.dbg.declare(metadata i8* %13, metadata !8467, metadata !DIExpression()), !dbg !8468
  %33 = load %struct.slotvec*, %struct.slotvec** %11, align 8, !dbg !8469
  %34 = icmp eq %struct.slotvec* %33, @slotvec0, !dbg !8470
  %35 = zext i1 %34 to i8, !dbg !8468
  store i8 %35, i8* %13, align 1, !dbg !8468
  %36 = load i64, i64* %12, align 8, !dbg !8471
  %37 = icmp ult i64 1152921504606846975, %36, !dbg !8471
  br i1 %37, label %38, label %39, !dbg !8473

; <label>:38:                                     ; preds = %29
  call void @xalloc_die() #13, !dbg !8474
  unreachable, !dbg !8474

; <label>:39:                                     ; preds = %29
  %40 = load i8, i8* %13, align 1, !dbg !8475
  %41 = trunc i8 %40 to i1, !dbg !8475
  br i1 %41, label %42, label %43, !dbg !8475

; <label>:42:                                     ; preds = %39
  br label %45, !dbg !8475

; <label>:43:                                     ; preds = %39
  %44 = load %struct.slotvec*, %struct.slotvec** %11, align 8, !dbg !8476
  br label %45, !dbg !8475

; <label>:45:                                     ; preds = %43, %42
  %46 = phi %struct.slotvec* [ null, %42 ], [ %44, %43 ], !dbg !8475
  %47 = bitcast %struct.slotvec* %46 to i8*, !dbg !8475
  %48 = load i64, i64* %12, align 8, !dbg !8477
  %49 = mul i64 %48, 16, !dbg !8478
  %50 = call i8* @xrealloc(i8* %47, i64 %49), !dbg !8479
  %51 = bitcast i8* %50 to %struct.slotvec*, !dbg !8479
  store %struct.slotvec* %51, %struct.slotvec** %11, align 8, !dbg !8480
  store %struct.slotvec* %51, %struct.slotvec** @slotvec, align 8, !dbg !8481
  %52 = load i8, i8* %13, align 1, !dbg !8482
  %53 = trunc i8 %52 to i1, !dbg !8482
  br i1 %53, label %54, label %57, !dbg !8484

; <label>:54:                                     ; preds = %45
  %55 = load %struct.slotvec*, %struct.slotvec** %11, align 8, !dbg !8485
  %56 = bitcast %struct.slotvec* %55 to i8*, !dbg !8486
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %56, i8* bitcast (%struct.slotvec* @slotvec0 to i8*), i64 16, i32 8, i1 false), !dbg !8486
  br label %57, !dbg !8487

; <label>:57:                                     ; preds = %54, %45
  %58 = load %struct.slotvec*, %struct.slotvec** %11, align 8, !dbg !8488
  %59 = load i32, i32* @nslots, align 4, !dbg !8489
  %60 = zext i32 %59 to i64, !dbg !8490
  %61 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %58, i64 %60, !dbg !8490
  %62 = bitcast %struct.slotvec* %61 to i8*, !dbg !8491
  %63 = load i64, i64* %12, align 8, !dbg !8492
  %64 = load i32, i32* @nslots, align 4, !dbg !8493
  %65 = zext i32 %64 to i64, !dbg !8493
  %66 = sub i64 %63, %65, !dbg !8494
  %67 = mul i64 %66, 16, !dbg !8495
  call void @llvm.memset.p0i8.i64(i8* %62, i8 0, i64 %67, i32 8, i1 false), !dbg !8491
  %68 = load i64, i64* %12, align 8, !dbg !8496
  %69 = trunc i64 %68 to i32, !dbg !8496
  store i32 %69, i32* @nslots, align 4, !dbg !8497
  br label %70, !dbg !8498

; <label>:70:                                     ; preds = %57, %25
  call void @llvm.dbg.declare(metadata i64* %14, metadata !8499, metadata !DIExpression()), !dbg !8501
  %71 = load %struct.slotvec*, %struct.slotvec** %11, align 8, !dbg !8502
  %72 = load i32, i32* %5, align 4, !dbg !8503
  %73 = sext i32 %72 to i64, !dbg !8502
  %74 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %71, i64 %73, !dbg !8502
  %75 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %74, i32 0, i32 0, !dbg !8504
  %76 = load i64, i64* %75, align 8, !dbg !8504
  store i64 %76, i64* %14, align 8, !dbg !8501
  call void @llvm.dbg.declare(metadata i8** %15, metadata !8505, metadata !DIExpression()), !dbg !8506
  %77 = load %struct.slotvec*, %struct.slotvec** %11, align 8, !dbg !8507
  %78 = load i32, i32* %5, align 4, !dbg !8508
  %79 = sext i32 %78 to i64, !dbg !8507
  %80 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %77, i64 %79, !dbg !8507
  %81 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %80, i32 0, i32 1, !dbg !8509
  %82 = load i8*, i8** %81, align 8, !dbg !8509
  store i8* %82, i8** %15, align 8, !dbg !8506
  call void @llvm.dbg.declare(metadata i32* %16, metadata !8510, metadata !DIExpression()), !dbg !8511
  %83 = load %struct.quoting_options*, %struct.quoting_options** %8, align 8, !dbg !8512
  %84 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %83, i32 0, i32 1, !dbg !8513
  %85 = load i32, i32* %84, align 4, !dbg !8513
  %86 = or i32 %85, 1, !dbg !8514
  store i32 %86, i32* %16, align 4, !dbg !8511
  call void @llvm.dbg.declare(metadata i64* %17, metadata !8515, metadata !DIExpression()), !dbg !8516
  %87 = load i8*, i8** %15, align 8, !dbg !8517
  %88 = load i64, i64* %14, align 8, !dbg !8518
  %89 = load i8*, i8** %6, align 8, !dbg !8519
  %90 = load i64, i64* %7, align 8, !dbg !8520
  %91 = load %struct.quoting_options*, %struct.quoting_options** %8, align 8, !dbg !8521
  %92 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %91, i32 0, i32 0, !dbg !8522
  %93 = load i32, i32* %92, align 8, !dbg !8522
  %94 = load i32, i32* %16, align 4, !dbg !8523
  %95 = load %struct.quoting_options*, %struct.quoting_options** %8, align 8, !dbg !8524
  %96 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %95, i32 0, i32 2, !dbg !8525
  %97 = getelementptr inbounds [8 x i32], [8 x i32]* %96, i32 0, i32 0, !dbg !8524
  %98 = load %struct.quoting_options*, %struct.quoting_options** %8, align 8, !dbg !8526
  %99 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %98, i32 0, i32 3, !dbg !8527
  %100 = load i8*, i8** %99, align 8, !dbg !8527
  %101 = load %struct.quoting_options*, %struct.quoting_options** %8, align 8, !dbg !8528
  %102 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %101, i32 0, i32 4, !dbg !8529
  %103 = load i8*, i8** %102, align 8, !dbg !8529
  %104 = call i64 @quotearg_buffer_restyled(i8* %87, i64 %88, i8* %89, i64 %90, i32 %93, i32 %94, i32* %97, i8* %100, i8* %103), !dbg !8530
  store i64 %104, i64* %17, align 8, !dbg !8516
  %105 = load i64, i64* %14, align 8, !dbg !8531
  %106 = load i64, i64* %17, align 8, !dbg !8533
  %107 = icmp ule i64 %105, %106, !dbg !8534
  br i1 %107, label %108, label %146, !dbg !8535

; <label>:108:                                    ; preds = %70
  %109 = load i64, i64* %17, align 8, !dbg !8536
  %110 = add i64 %109, 1, !dbg !8538
  store i64 %110, i64* %14, align 8, !dbg !8539
  %111 = load %struct.slotvec*, %struct.slotvec** %11, align 8, !dbg !8540
  %112 = load i32, i32* %5, align 4, !dbg !8541
  %113 = sext i32 %112 to i64, !dbg !8540
  %114 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %111, i64 %113, !dbg !8540
  %115 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %114, i32 0, i32 0, !dbg !8542
  store i64 %110, i64* %115, align 8, !dbg !8543
  %116 = load i8*, i8** %15, align 8, !dbg !8544
  %117 = icmp ne i8* %116, getelementptr inbounds ([256 x i8], [256 x i8]* @slot0, i32 0, i32 0), !dbg !8546
  br i1 %117, label %118, label %120, !dbg !8547

; <label>:118:                                    ; preds = %108
  %119 = load i8*, i8** %15, align 8, !dbg !8548
  call void @free(i8* %119) #8, !dbg !8549
  br label %120, !dbg !8549

; <label>:120:                                    ; preds = %118, %108
  %121 = load i64, i64* %14, align 8, !dbg !8550
  %122 = call noalias i8* @xcharalloc(i64 %121), !dbg !8551
  store i8* %122, i8** %15, align 8, !dbg !8552
  %123 = load %struct.slotvec*, %struct.slotvec** %11, align 8, !dbg !8553
  %124 = load i32, i32* %5, align 4, !dbg !8554
  %125 = sext i32 %124 to i64, !dbg !8553
  %126 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %123, i64 %125, !dbg !8553
  %127 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %126, i32 0, i32 1, !dbg !8555
  store i8* %122, i8** %127, align 8, !dbg !8556
  %128 = load i8*, i8** %15, align 8, !dbg !8557
  %129 = load i64, i64* %14, align 8, !dbg !8558
  %130 = load i8*, i8** %6, align 8, !dbg !8559
  %131 = load i64, i64* %7, align 8, !dbg !8560
  %132 = load %struct.quoting_options*, %struct.quoting_options** %8, align 8, !dbg !8561
  %133 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %132, i32 0, i32 0, !dbg !8562
  %134 = load i32, i32* %133, align 8, !dbg !8562
  %135 = load i32, i32* %16, align 4, !dbg !8563
  %136 = load %struct.quoting_options*, %struct.quoting_options** %8, align 8, !dbg !8564
  %137 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %136, i32 0, i32 2, !dbg !8565
  %138 = getelementptr inbounds [8 x i32], [8 x i32]* %137, i32 0, i32 0, !dbg !8564
  %139 = load %struct.quoting_options*, %struct.quoting_options** %8, align 8, !dbg !8566
  %140 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %139, i32 0, i32 3, !dbg !8567
  %141 = load i8*, i8** %140, align 8, !dbg !8567
  %142 = load %struct.quoting_options*, %struct.quoting_options** %8, align 8, !dbg !8568
  %143 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %142, i32 0, i32 4, !dbg !8569
  %144 = load i8*, i8** %143, align 8, !dbg !8569
  %145 = call i64 @quotearg_buffer_restyled(i8* %128, i64 %129, i8* %130, i64 %131, i32 %134, i32 %135, i32* %138, i8* %141, i8* %144), !dbg !8570
  br label %146, !dbg !8571

; <label>:146:                                    ; preds = %120, %70
  %147 = load i32, i32* %9, align 4, !dbg !8572
  %148 = call i32* @__errno_location() #14, !dbg !8573
  store i32 %147, i32* %148, align 4, !dbg !8574
  %149 = load i8*, i8** %15, align 8, !dbg !8575
  ret i8* %149, !dbg !8576
}

; Function Attrs: noinline nounwind uwtable
define i8* @quotearg_n_mem(i32, i8*, i64) #3 !dbg !8577 {
  %4 = alloca i32, align 4
  %5 = alloca i8*, align 8
  %6 = alloca i64, align 8
  store i32 %0, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !8580, metadata !DIExpression()), !dbg !8581
  store i8* %1, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !8582, metadata !DIExpression()), !dbg !8583
  store i64 %2, i64* %6, align 8
  call void @llvm.dbg.declare(metadata i64* %6, metadata !8584, metadata !DIExpression()), !dbg !8585
  %7 = load i32, i32* %4, align 4, !dbg !8586
  %8 = load i8*, i8** %5, align 8, !dbg !8587
  %9 = load i64, i64* %6, align 8, !dbg !8588
  %10 = call i8* @quotearg_n_options(i32 %7, i8* %8, i64 %9, %struct.quoting_options* @default_quoting_options), !dbg !8589
  ret i8* %10, !dbg !8590
}

; Function Attrs: noinline nounwind uwtable
define i8* @quotearg(i8*) #3 !dbg !8591 {
  %2 = alloca i8*, align 8
  store i8* %0, i8** %2, align 8
  call void @llvm.dbg.declare(metadata i8** %2, metadata !8592, metadata !DIExpression()), !dbg !8593
  %3 = load i8*, i8** %2, align 8, !dbg !8594
  %4 = call i8* @quotearg_n(i32 0, i8* %3), !dbg !8595
  ret i8* %4, !dbg !8596
}

; Function Attrs: noinline nounwind uwtable
define i8* @quotearg_mem(i8*, i64) #3 !dbg !8597 {
  %3 = alloca i8*, align 8
  %4 = alloca i64, align 8
  store i8* %0, i8** %3, align 8
  call void @llvm.dbg.declare(metadata i8** %3, metadata !8600, metadata !DIExpression()), !dbg !8601
  store i64 %1, i64* %4, align 8
  call void @llvm.dbg.declare(metadata i64* %4, metadata !8602, metadata !DIExpression()), !dbg !8603
  %5 = load i8*, i8** %3, align 8, !dbg !8604
  %6 = load i64, i64* %4, align 8, !dbg !8605
  %7 = call i8* @quotearg_n_mem(i32 0, i8* %5, i64 %6), !dbg !8606
  ret i8* %7, !dbg !8607
}

; Function Attrs: noinline nounwind uwtable
define i8* @quotearg_n_style(i32, i32, i8*) #3 !dbg !8608 {
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i8*, align 8
  %7 = alloca %struct.quoting_options, align 8
  store i32 %0, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !8611, metadata !DIExpression()), !dbg !8612
  store i32 %1, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !8613, metadata !DIExpression()), !dbg !8614
  store i8* %2, i8** %6, align 8
  call void @llvm.dbg.declare(metadata i8** %6, metadata !8615, metadata !DIExpression()), !dbg !8616
  call void @llvm.dbg.declare(metadata %struct.quoting_options* %7, metadata !8617, metadata !DIExpression()), !dbg !8618
  %8 = load i32, i32* %5, align 4, !dbg !8619
  call void @quoting_options_from_style(%struct.quoting_options* sret %7, i32 %8), !dbg !8620
  %9 = load i32, i32* %4, align 4, !dbg !8621
  %10 = load i8*, i8** %6, align 8, !dbg !8622
  %11 = call i8* @quotearg_n_options(i32 %9, i8* %10, i64 -1, %struct.quoting_options* %7), !dbg !8623
  ret i8* %11, !dbg !8624
}

; Function Attrs: noinline nounwind uwtable
define internal void @quoting_options_from_style(%struct.quoting_options* noalias sret, i32) #3 !dbg !8625 {
  %3 = alloca i32, align 4
  %4 = alloca %struct.quoting_options, align 8
  store i32 %1, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !8628, metadata !DIExpression()), !dbg !8629
  call void @llvm.dbg.declare(metadata %struct.quoting_options* %4, metadata !8630, metadata !DIExpression()), !dbg !8631
  %5 = load i32, i32* %3, align 4, !dbg !8632
  %6 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %4, i32 0, i32 0, !dbg !8633
  store i32 %5, i32* %6, align 8, !dbg !8634
  %7 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %4, i32 0, i32 1, !dbg !8635
  store i32 0, i32* %7, align 4, !dbg !8636
  %8 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %4, i32 0, i32 2, !dbg !8637
  %9 = getelementptr inbounds [8 x i32], [8 x i32]* %8, i32 0, i32 0, !dbg !8638
  %10 = bitcast i32* %9 to i8*, !dbg !8638
  call void @llvm.memset.p0i8.i64(i8* %10, i8 0, i64 32, i32 8, i1 false), !dbg !8638
  %11 = bitcast %struct.quoting_options* %0 to i8*, !dbg !8639
  %12 = bitcast %struct.quoting_options* %4 to i8*, !dbg !8639
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %11, i8* %12, i64 56, i32 8, i1 false), !dbg !8639
  ret void, !dbg !8640
}

; Function Attrs: noinline nounwind uwtable
define i8* @quotearg_n_style_mem(i32, i32, i8*, i64) #3 !dbg !8641 {
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i8*, align 8
  %8 = alloca i64, align 8
  %9 = alloca %struct.quoting_options, align 8
  store i32 %0, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !8644, metadata !DIExpression()), !dbg !8645
  store i32 %1, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !8646, metadata !DIExpression()), !dbg !8647
  store i8* %2, i8** %7, align 8
  call void @llvm.dbg.declare(metadata i8** %7, metadata !8648, metadata !DIExpression()), !dbg !8649
  store i64 %3, i64* %8, align 8
  call void @llvm.dbg.declare(metadata i64* %8, metadata !8650, metadata !DIExpression()), !dbg !8651
  call void @llvm.dbg.declare(metadata %struct.quoting_options* %9, metadata !8652, metadata !DIExpression()), !dbg !8653
  %10 = load i32, i32* %6, align 4, !dbg !8654
  call void @quoting_options_from_style(%struct.quoting_options* sret %9, i32 %10), !dbg !8655
  %11 = load i32, i32* %5, align 4, !dbg !8656
  %12 = load i8*, i8** %7, align 8, !dbg !8657
  %13 = load i64, i64* %8, align 8, !dbg !8658
  %14 = call i8* @quotearg_n_options(i32 %11, i8* %12, i64 %13, %struct.quoting_options* %9), !dbg !8659
  ret i8* %14, !dbg !8660
}

; Function Attrs: noinline nounwind uwtable
define i8* @quotearg_style(i32, i8*) #3 !dbg !8661 {
  %3 = alloca i32, align 4
  %4 = alloca i8*, align 8
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !8664, metadata !DIExpression()), !dbg !8665
  store i8* %1, i8** %4, align 8
  call void @llvm.dbg.declare(metadata i8** %4, metadata !8666, metadata !DIExpression()), !dbg !8667
  %5 = load i32, i32* %3, align 4, !dbg !8668
  %6 = load i8*, i8** %4, align 8, !dbg !8669
  %7 = call i8* @quotearg_n_style(i32 0, i32 %5, i8* %6), !dbg !8670
  ret i8* %7, !dbg !8671
}

; Function Attrs: noinline nounwind uwtable
define i8* @quotearg_style_mem(i32, i8*, i64) #3 !dbg !8672 {
  %4 = alloca i32, align 4
  %5 = alloca i8*, align 8
  %6 = alloca i64, align 8
  store i32 %0, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !8675, metadata !DIExpression()), !dbg !8676
  store i8* %1, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !8677, metadata !DIExpression()), !dbg !8678
  store i64 %2, i64* %6, align 8
  call void @llvm.dbg.declare(metadata i64* %6, metadata !8679, metadata !DIExpression()), !dbg !8680
  %7 = load i32, i32* %4, align 4, !dbg !8681
  %8 = load i8*, i8** %5, align 8, !dbg !8682
  %9 = load i64, i64* %6, align 8, !dbg !8683
  %10 = call i8* @quotearg_n_style_mem(i32 0, i32 %7, i8* %8, i64 %9), !dbg !8684
  ret i8* %10, !dbg !8685
}

; Function Attrs: noinline nounwind uwtable
define i8* @quotearg_char_mem(i8*, i64, i8 signext) #3 !dbg !8686 {
  %4 = alloca i8*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i8, align 1
  %7 = alloca %struct.quoting_options, align 8
  store i8* %0, i8** %4, align 8
  call void @llvm.dbg.declare(metadata i8** %4, metadata !8689, metadata !DIExpression()), !dbg !8690
  store i64 %1, i64* %5, align 8
  call void @llvm.dbg.declare(metadata i64* %5, metadata !8691, metadata !DIExpression()), !dbg !8692
  store i8 %2, i8* %6, align 1
  call void @llvm.dbg.declare(metadata i8* %6, metadata !8693, metadata !DIExpression()), !dbg !8694
  call void @llvm.dbg.declare(metadata %struct.quoting_options* %7, metadata !8695, metadata !DIExpression()), !dbg !8696
  %8 = bitcast %struct.quoting_options* %7 to i8*, !dbg !8697
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %8, i8* bitcast (%struct.quoting_options* @default_quoting_options to i8*), i64 56, i32 8, i1 false), !dbg !8697
  %9 = load i8, i8* %6, align 1, !dbg !8698
  %10 = call i32 @set_char_quoting(%struct.quoting_options* %7, i8 signext %9, i32 1), !dbg !8699
  %11 = load i8*, i8** %4, align 8, !dbg !8700
  %12 = load i64, i64* %5, align 8, !dbg !8701
  %13 = call i8* @quotearg_n_options(i32 0, i8* %11, i64 %12, %struct.quoting_options* %7), !dbg !8702
  ret i8* %13, !dbg !8703
}

; Function Attrs: noinline nounwind uwtable
define i8* @quotearg_char(i8*, i8 signext) #3 !dbg !8704 {
  %3 = alloca i8*, align 8
  %4 = alloca i8, align 1
  store i8* %0, i8** %3, align 8
  call void @llvm.dbg.declare(metadata i8** %3, metadata !8707, metadata !DIExpression()), !dbg !8708
  store i8 %1, i8* %4, align 1
  call void @llvm.dbg.declare(metadata i8* %4, metadata !8709, metadata !DIExpression()), !dbg !8710
  %5 = load i8*, i8** %3, align 8, !dbg !8711
  %6 = load i8, i8* %4, align 1, !dbg !8712
  %7 = call i8* @quotearg_char_mem(i8* %5, i64 -1, i8 signext %6), !dbg !8713
  ret i8* %7, !dbg !8714
}

; Function Attrs: noinline nounwind uwtable
define i8* @quotearg_colon(i8*) #3 !dbg !8715 {
  %2 = alloca i8*, align 8
  store i8* %0, i8** %2, align 8
  call void @llvm.dbg.declare(metadata i8** %2, metadata !8716, metadata !DIExpression()), !dbg !8717
  %3 = load i8*, i8** %2, align 8, !dbg !8718
  %4 = call i8* @quotearg_char(i8* %3, i8 signext 58), !dbg !8719
  ret i8* %4, !dbg !8720
}

; Function Attrs: noinline nounwind uwtable
define i8* @quotearg_colon_mem(i8*, i64) #3 !dbg !8721 {
  %3 = alloca i8*, align 8
  %4 = alloca i64, align 8
  store i8* %0, i8** %3, align 8
  call void @llvm.dbg.declare(metadata i8** %3, metadata !8722, metadata !DIExpression()), !dbg !8723
  store i64 %1, i64* %4, align 8
  call void @llvm.dbg.declare(metadata i64* %4, metadata !8724, metadata !DIExpression()), !dbg !8725
  %5 = load i8*, i8** %3, align 8, !dbg !8726
  %6 = load i64, i64* %4, align 8, !dbg !8727
  %7 = call i8* @quotearg_char_mem(i8* %5, i64 %6, i8 signext 58), !dbg !8728
  ret i8* %7, !dbg !8729
}

; Function Attrs: noinline nounwind uwtable
define i8* @quotearg_n_custom(i32, i8*, i8*, i8*) #3 !dbg !8730 {
  %5 = alloca i32, align 4
  %6 = alloca i8*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i8*, align 8
  store i32 %0, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !8733, metadata !DIExpression()), !dbg !8734
  store i8* %1, i8** %6, align 8
  call void @llvm.dbg.declare(metadata i8** %6, metadata !8735, metadata !DIExpression()), !dbg !8736
  store i8* %2, i8** %7, align 8
  call void @llvm.dbg.declare(metadata i8** %7, metadata !8737, metadata !DIExpression()), !dbg !8738
  store i8* %3, i8** %8, align 8
  call void @llvm.dbg.declare(metadata i8** %8, metadata !8739, metadata !DIExpression()), !dbg !8740
  %9 = load i32, i32* %5, align 4, !dbg !8741
  %10 = load i8*, i8** %6, align 8, !dbg !8742
  %11 = load i8*, i8** %7, align 8, !dbg !8743
  %12 = load i8*, i8** %8, align 8, !dbg !8744
  %13 = call i8* @quotearg_n_custom_mem(i32 %9, i8* %10, i8* %11, i8* %12, i64 -1), !dbg !8745
  ret i8* %13, !dbg !8746
}

; Function Attrs: noinline nounwind uwtable
define i8* @quotearg_n_custom_mem(i32, i8*, i8*, i8*, i64) #3 !dbg !8747 {
  %6 = alloca i32, align 4
  %7 = alloca i8*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i8*, align 8
  %10 = alloca i64, align 8
  %11 = alloca %struct.quoting_options, align 8
  store i32 %0, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !8750, metadata !DIExpression()), !dbg !8751
  store i8* %1, i8** %7, align 8
  call void @llvm.dbg.declare(metadata i8** %7, metadata !8752, metadata !DIExpression()), !dbg !8753
  store i8* %2, i8** %8, align 8
  call void @llvm.dbg.declare(metadata i8** %8, metadata !8754, metadata !DIExpression()), !dbg !8755
  store i8* %3, i8** %9, align 8
  call void @llvm.dbg.declare(metadata i8** %9, metadata !8756, metadata !DIExpression()), !dbg !8757
  store i64 %4, i64* %10, align 8
  call void @llvm.dbg.declare(metadata i64* %10, metadata !8758, metadata !DIExpression()), !dbg !8759
  call void @llvm.dbg.declare(metadata %struct.quoting_options* %11, metadata !8760, metadata !DIExpression()), !dbg !8761
  %12 = bitcast %struct.quoting_options* %11 to i8*, !dbg !8762
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %12, i8* bitcast (%struct.quoting_options* @default_quoting_options to i8*), i64 56, i32 8, i1 false), !dbg !8762
  %13 = load i8*, i8** %7, align 8, !dbg !8763
  %14 = load i8*, i8** %8, align 8, !dbg !8764
  call void @set_custom_quoting(%struct.quoting_options* %11, i8* %13, i8* %14), !dbg !8765
  %15 = load i32, i32* %6, align 4, !dbg !8766
  %16 = load i8*, i8** %9, align 8, !dbg !8767
  %17 = load i64, i64* %10, align 8, !dbg !8768
  %18 = call i8* @quotearg_n_options(i32 %15, i8* %16, i64 %17, %struct.quoting_options* %11), !dbg !8769
  ret i8* %18, !dbg !8770
}

; Function Attrs: noinline nounwind uwtable
define i8* @quotearg_custom(i8*, i8*, i8*) #3 !dbg !8771 {
  %4 = alloca i8*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  store i8* %0, i8** %4, align 8
  call void @llvm.dbg.declare(metadata i8** %4, metadata !8774, metadata !DIExpression()), !dbg !8775
  store i8* %1, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !8776, metadata !DIExpression()), !dbg !8777
  store i8* %2, i8** %6, align 8
  call void @llvm.dbg.declare(metadata i8** %6, metadata !8778, metadata !DIExpression()), !dbg !8779
  %7 = load i8*, i8** %4, align 8, !dbg !8780
  %8 = load i8*, i8** %5, align 8, !dbg !8781
  %9 = load i8*, i8** %6, align 8, !dbg !8782
  %10 = call i8* @quotearg_n_custom(i32 0, i8* %7, i8* %8, i8* %9), !dbg !8783
  ret i8* %10, !dbg !8784
}

; Function Attrs: noinline nounwind uwtable
define i8* @quotearg_custom_mem(i8*, i8*, i8*, i64) #3 !dbg !8785 {
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i64, align 8
  store i8* %0, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !8788, metadata !DIExpression()), !dbg !8789
  store i8* %1, i8** %6, align 8
  call void @llvm.dbg.declare(metadata i8** %6, metadata !8790, metadata !DIExpression()), !dbg !8791
  store i8* %2, i8** %7, align 8
  call void @llvm.dbg.declare(metadata i8** %7, metadata !8792, metadata !DIExpression()), !dbg !8793
  store i64 %3, i64* %8, align 8
  call void @llvm.dbg.declare(metadata i64* %8, metadata !8794, metadata !DIExpression()), !dbg !8795
  %9 = load i8*, i8** %5, align 8, !dbg !8796
  %10 = load i8*, i8** %6, align 8, !dbg !8797
  %11 = load i8*, i8** %7, align 8, !dbg !8798
  %12 = load i64, i64* %8, align 8, !dbg !8799
  %13 = call i8* @quotearg_n_custom_mem(i32 0, i8* %9, i8* %10, i8* %11, i64 %12), !dbg !8800
  ret i8* %13, !dbg !8801
}

; Function Attrs: noinline nounwind uwtable
define %struct.dev_ino* @get_root_dev_ino(%struct.dev_ino*) #3 !dbg !8802 {
  %2 = alloca %struct.dev_ino*, align 8
  %3 = alloca %struct.dev_ino*, align 8
  %4 = alloca %struct.stat, align 8
  store %struct.dev_ino* %0, %struct.dev_ino** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.dev_ino** %3, metadata !8810, metadata !DIExpression()), !dbg !8811
  call void @llvm.dbg.declare(metadata %struct.stat* %4, metadata !8812, metadata !DIExpression()), !dbg !8834
  %5 = call i32 @lstat(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.170, i32 0, i32 0), %struct.stat* %4) #8, !dbg !8835
  %6 = icmp ne i32 %5, 0, !dbg !8835
  br i1 %6, label %7, label %8, !dbg !8837

; <label>:7:                                      ; preds = %1
  store %struct.dev_ino* null, %struct.dev_ino** %2, align 8, !dbg !8838
  br label %18, !dbg !8838

; <label>:8:                                      ; preds = %1
  %9 = getelementptr inbounds %struct.stat, %struct.stat* %4, i32 0, i32 1, !dbg !8839
  %10 = load i64, i64* %9, align 8, !dbg !8839
  %11 = load %struct.dev_ino*, %struct.dev_ino** %3, align 8, !dbg !8840
  %12 = getelementptr inbounds %struct.dev_ino, %struct.dev_ino* %11, i32 0, i32 0, !dbg !8841
  store i64 %10, i64* %12, align 8, !dbg !8842
  %13 = getelementptr inbounds %struct.stat, %struct.stat* %4, i32 0, i32 0, !dbg !8843
  %14 = load i64, i64* %13, align 8, !dbg !8843
  %15 = load %struct.dev_ino*, %struct.dev_ino** %3, align 8, !dbg !8844
  %16 = getelementptr inbounds %struct.dev_ino, %struct.dev_ino* %15, i32 0, i32 1, !dbg !8845
  store i64 %14, i64* %16, align 8, !dbg !8846
  %17 = load %struct.dev_ino*, %struct.dev_ino** %3, align 8, !dbg !8847
  store %struct.dev_ino* %17, %struct.dev_ino** %2, align 8, !dbg !8848
  br label %18, !dbg !8848

; <label>:18:                                     ; preds = %8, %7
  %19 = load %struct.dev_ino*, %struct.dev_ino** %2, align 8, !dbg !8849
  ret %struct.dev_ino* %19, !dbg !8849
}

; Function Attrs: noinline nounwind uwtable
define i8* @umaxtostr(i64, i8*) #3 !dbg !8850 {
  %3 = alloca i64, align 8
  %4 = alloca i8*, align 8
  %5 = alloca i8*, align 8
  store i64 %0, i64* %3, align 8
  call void @llvm.dbg.declare(metadata i64* %3, metadata !8854, metadata !DIExpression()), !dbg !8855
  store i8* %1, i8** %4, align 8
  call void @llvm.dbg.declare(metadata i8** %4, metadata !8856, metadata !DIExpression()), !dbg !8857
  call void @llvm.dbg.declare(metadata i8** %5, metadata !8858, metadata !DIExpression()), !dbg !8859
  %6 = load i8*, i8** %4, align 8, !dbg !8860
  %7 = getelementptr inbounds i8, i8* %6, i64 20, !dbg !8861
  store i8* %7, i8** %5, align 8, !dbg !8859
  %8 = load i8*, i8** %5, align 8, !dbg !8862
  store i8 0, i8* %8, align 1, !dbg !8863
  br label %9, !dbg !8864, !llvm.loop !8866

; <label>:9:                                      ; preds = %16, %2
  %10 = load i64, i64* %3, align 8, !dbg !8868
  %11 = urem i64 %10, 10, !dbg !8869
  %12 = add i64 48, %11, !dbg !8870
  %13 = trunc i64 %12 to i8, !dbg !8871
  %14 = load i8*, i8** %5, align 8, !dbg !8872
  %15 = getelementptr inbounds i8, i8* %14, i32 -1, !dbg !8872
  store i8* %15, i8** %5, align 8, !dbg !8872
  store i8 %13, i8* %15, align 1, !dbg !8873
  br label %16, !dbg !8874

; <label>:16:                                     ; preds = %9
  %17 = load i64, i64* %3, align 8, !dbg !8875
  %18 = udiv i64 %17, 10, !dbg !8875
  store i64 %18, i64* %3, align 8, !dbg !8875
  %19 = icmp ne i64 %18, 0, !dbg !8876
  br i1 %19, label %9, label %20, !dbg !8874, !llvm.loop !8866

; <label>:20:                                     ; preds = %16
  %21 = load i8*, i8** %5, align 8, !dbg !8877
  ret i8* %21, !dbg !8878
}

; Function Attrs: noinline nounwind uwtable
define i8* @parse_user_spec(i8*, i32*, i32*, i8**, i8**) #3 !dbg !8879 {
  %6 = alloca i8*, align 8
  %7 = alloca i32*, align 8
  %8 = alloca i32*, align 8
  %9 = alloca i8**, align 8
  %10 = alloca i8**, align 8
  %11 = alloca i8*, align 8
  %12 = alloca i8*, align 8
  %13 = alloca i8*, align 8
  store i8* %0, i8** %6, align 8
  call void @llvm.dbg.declare(metadata i8** %6, metadata !8882, metadata !DIExpression()), !dbg !8883
  store i32* %1, i32** %7, align 8
  call void @llvm.dbg.declare(metadata i32** %7, metadata !8884, metadata !DIExpression()), !dbg !8885
  store i32* %2, i32** %8, align 8
  call void @llvm.dbg.declare(metadata i32** %8, metadata !8886, metadata !DIExpression()), !dbg !8887
  store i8** %3, i8*** %9, align 8
  call void @llvm.dbg.declare(metadata i8*** %9, metadata !8888, metadata !DIExpression()), !dbg !8889
  store i8** %4, i8*** %10, align 8
  call void @llvm.dbg.declare(metadata i8*** %10, metadata !8890, metadata !DIExpression()), !dbg !8891
  call void @llvm.dbg.declare(metadata i8** %11, metadata !8892, metadata !DIExpression()), !dbg !8893
  %14 = load i8*, i8** %6, align 8, !dbg !8894
  %15 = call i8* @strchr(i8* %14, i32 58) #12, !dbg !8895
  store i8* %15, i8** %11, align 8, !dbg !8893
  call void @llvm.dbg.declare(metadata i8** %12, metadata !8896, metadata !DIExpression()), !dbg !8897
  %16 = load i8*, i8** %6, align 8, !dbg !8898
  %17 = load i8*, i8** %11, align 8, !dbg !8899
  %18 = load i32*, i32** %7, align 8, !dbg !8900
  %19 = load i32*, i32** %8, align 8, !dbg !8901
  %20 = load i8**, i8*** %9, align 8, !dbg !8902
  %21 = load i8**, i8*** %10, align 8, !dbg !8903
  %22 = call i8* @parse_with_separator(i8* %16, i8* %17, i32* %18, i32* %19, i8** %20, i8** %21), !dbg !8904
  store i8* %22, i8** %12, align 8, !dbg !8897
  %23 = load i8*, i8** %11, align 8, !dbg !8905
  %24 = icmp ne i8* %23, null, !dbg !8905
  br i1 %24, label %44, label %25, !dbg !8907

; <label>:25:                                     ; preds = %5
  %26 = load i8*, i8** %12, align 8, !dbg !8908
  %27 = icmp ne i8* %26, null, !dbg !8908
  br i1 %27, label %28, label %44, !dbg !8909

; <label>:28:                                     ; preds = %25
  call void @llvm.dbg.declare(metadata i8** %13, metadata !8910, metadata !DIExpression()), !dbg !8912
  %29 = load i8*, i8** %6, align 8, !dbg !8913
  %30 = call i8* @strchr(i8* %29, i32 46) #12, !dbg !8914
  store i8* %30, i8** %13, align 8, !dbg !8912
  %31 = load i8*, i8** %13, align 8, !dbg !8915
  %32 = icmp ne i8* %31, null, !dbg !8915
  br i1 %32, label %33, label %43, !dbg !8917

; <label>:33:                                     ; preds = %28
  %34 = load i8*, i8** %6, align 8, !dbg !8918
  %35 = load i8*, i8** %13, align 8, !dbg !8919
  %36 = load i32*, i32** %7, align 8, !dbg !8920
  %37 = load i32*, i32** %8, align 8, !dbg !8921
  %38 = load i8**, i8*** %9, align 8, !dbg !8922
  %39 = load i8**, i8*** %10, align 8, !dbg !8923
  %40 = call i8* @parse_with_separator(i8* %34, i8* %35, i32* %36, i32* %37, i8** %38, i8** %39), !dbg !8924
  %41 = icmp ne i8* %40, null, !dbg !8924
  br i1 %41, label %43, label %42, !dbg !8925

; <label>:42:                                     ; preds = %33
  store i8* null, i8** %12, align 8, !dbg !8926
  br label %43, !dbg !8927

; <label>:43:                                     ; preds = %42, %33, %28
  br label %44, !dbg !8928

; <label>:44:                                     ; preds = %43, %25, %5
  %45 = load i8*, i8** %12, align 8, !dbg !8929
  ret i8* %45, !dbg !8930
}

; Function Attrs: nounwind readonly
declare i8* @strchr(i8*, i32) #6

; Function Attrs: noinline nounwind uwtable
define internal i8* @parse_with_separator(i8*, i8*, i32*, i32*, i8**, i8**) #3 !dbg !184 {
  %7 = alloca i8*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i32*, align 8
  %10 = alloca i32*, align 8
  %11 = alloca i8**, align 8
  %12 = alloca i8**, align 8
  %13 = alloca i8*, align 8
  %14 = alloca %struct.passwd*, align 8
  %15 = alloca %struct.group*, align 8
  %16 = alloca i8*, align 8
  %17 = alloca i8*, align 8
  %18 = alloca i8*, align 8
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca i64, align 8
  %22 = alloca i8, align 1
  %23 = alloca i64, align 8
  %24 = alloca [21 x i8], align 16
  %25 = alloca i64, align 8
  store i8* %0, i8** %7, align 8
  call void @llvm.dbg.declare(metadata i8** %7, metadata !8931, metadata !DIExpression()), !dbg !8932
  store i8* %1, i8** %8, align 8
  call void @llvm.dbg.declare(metadata i8** %8, metadata !8933, metadata !DIExpression()), !dbg !8934
  store i32* %2, i32** %9, align 8
  call void @llvm.dbg.declare(metadata i32** %9, metadata !8935, metadata !DIExpression()), !dbg !8936
  store i32* %3, i32** %10, align 8
  call void @llvm.dbg.declare(metadata i32** %10, metadata !8937, metadata !DIExpression()), !dbg !8938
  store i8** %4, i8*** %11, align 8
  call void @llvm.dbg.declare(metadata i8*** %11, metadata !8939, metadata !DIExpression()), !dbg !8940
  store i8** %5, i8*** %12, align 8
  call void @llvm.dbg.declare(metadata i8*** %12, metadata !8941, metadata !DIExpression()), !dbg !8942
  call void @llvm.dbg.declare(metadata i8** %13, metadata !8943, metadata !DIExpression()), !dbg !8944
  call void @llvm.dbg.declare(metadata %struct.passwd** %14, metadata !8945, metadata !DIExpression()), !dbg !8957
  call void @llvm.dbg.declare(metadata %struct.group** %15, metadata !8958, metadata !DIExpression()), !dbg !8967
  call void @llvm.dbg.declare(metadata i8** %16, metadata !8968, metadata !DIExpression()), !dbg !8969
  call void @llvm.dbg.declare(metadata i8** %17, metadata !8970, metadata !DIExpression()), !dbg !8971
  call void @llvm.dbg.declare(metadata i8** %18, metadata !8972, metadata !DIExpression()), !dbg !8973
  store i8* null, i8** %18, align 8, !dbg !8973
  call void @llvm.dbg.declare(metadata i32* %19, metadata !8974, metadata !DIExpression()), !dbg !8975
  %26 = load i32*, i32** %9, align 8, !dbg !8976
  %27 = load i32, i32* %26, align 4, !dbg !8977
  store i32 %27, i32* %19, align 4, !dbg !8975
  call void @llvm.dbg.declare(metadata i32* %20, metadata !8978, metadata !DIExpression()), !dbg !8979
  %28 = load i32*, i32** %10, align 8, !dbg !8980
  %29 = load i32, i32* %28, align 4, !dbg !8981
  store i32 %29, i32* %20, align 4, !dbg !8979
  store i8* null, i8** %13, align 8, !dbg !8982
  %30 = load i8**, i8*** %12, align 8, !dbg !8983
  store i8* null, i8** %30, align 8, !dbg !8984
  %31 = load i8**, i8*** %11, align 8, !dbg !8985
  store i8* null, i8** %31, align 8, !dbg !8986
  store i8* null, i8** %16, align 8, !dbg !8987
  %32 = load i8*, i8** %8, align 8, !dbg !8988
  %33 = icmp eq i8* %32, null, !dbg !8990
  br i1 %33, label %34, label %42, !dbg !8991

; <label>:34:                                     ; preds = %6
  %35 = load i8*, i8** %7, align 8, !dbg !8992
  %36 = load i8, i8* %35, align 1, !dbg !8995
  %37 = icmp ne i8 %36, 0, !dbg !8995
  br i1 %37, label %38, label %41, !dbg !8996

; <label>:38:                                     ; preds = %34
  %39 = load i8*, i8** %7, align 8, !dbg !8997
  %40 = call noalias i8* @xstrdup(i8* %39), !dbg !8998
  store i8* %40, i8** %16, align 8, !dbg !8999
  br label %41, !dbg !9000

; <label>:41:                                     ; preds = %38, %34
  br label %59, !dbg !9001

; <label>:42:                                     ; preds = %6
  call void @llvm.dbg.declare(metadata i64* %21, metadata !9002, metadata !DIExpression()), !dbg !9004
  %43 = load i8*, i8** %8, align 8, !dbg !9005
  %44 = load i8*, i8** %7, align 8, !dbg !9006
  %45 = ptrtoint i8* %43 to i64, !dbg !9007
  %46 = ptrtoint i8* %44 to i64, !dbg !9007
  %47 = sub i64 %45, %46, !dbg !9007
  store i64 %47, i64* %21, align 8, !dbg !9004
  %48 = load i64, i64* %21, align 8, !dbg !9008
  %49 = icmp ne i64 %48, 0, !dbg !9010
  br i1 %49, label %50, label %58, !dbg !9011

; <label>:50:                                     ; preds = %42
  %51 = load i8*, i8** %7, align 8, !dbg !9012
  %52 = load i64, i64* %21, align 8, !dbg !9014
  %53 = add i64 %52, 1, !dbg !9015
  %54 = call noalias i8* @xmemdup(i8* %51, i64 %53), !dbg !9016
  store i8* %54, i8** %16, align 8, !dbg !9017
  %55 = load i8*, i8** %16, align 8, !dbg !9018
  %56 = load i64, i64* %21, align 8, !dbg !9019
  %57 = getelementptr inbounds i8, i8* %55, i64 %56, !dbg !9018
  store i8 0, i8* %57, align 1, !dbg !9020
  br label %58, !dbg !9021

; <label>:58:                                     ; preds = %50, %42
  br label %59

; <label>:59:                                     ; preds = %58, %41
  %60 = load i8*, i8** %8, align 8, !dbg !9022
  %61 = icmp eq i8* %60, null, !dbg !9023
  br i1 %61, label %68, label %62, !dbg !9024

; <label>:62:                                     ; preds = %59
  %63 = load i8*, i8** %8, align 8, !dbg !9025
  %64 = getelementptr inbounds i8, i8* %63, i64 1, !dbg !9026
  %65 = load i8, i8* %64, align 1, !dbg !9027
  %66 = sext i8 %65 to i32, !dbg !9027
  %67 = icmp eq i32 %66, 0, !dbg !9028
  br i1 %67, label %68, label %69, !dbg !9022

; <label>:68:                                     ; preds = %62, %59
  br label %72, !dbg !9022

; <label>:69:                                     ; preds = %62
  %70 = load i8*, i8** %8, align 8, !dbg !9029
  %71 = getelementptr inbounds i8, i8* %70, i64 1, !dbg !9030
  br label %72, !dbg !9022

; <label>:72:                                     ; preds = %69, %68
  %73 = phi i8* [ null, %68 ], [ %71, %69 ], !dbg !9022
  store i8* %73, i8** %17, align 8, !dbg !9031
  %74 = load i8*, i8** %16, align 8, !dbg !9032
  %75 = icmp ne i8* %74, null, !dbg !9034
  br i1 %75, label %76, label %151, !dbg !9035

; <label>:76:                                     ; preds = %72
  %77 = load i8*, i8** %16, align 8, !dbg !9036
  %78 = load i8, i8* %77, align 1, !dbg !9038
  %79 = sext i8 %78 to i32, !dbg !9038
  %80 = icmp eq i32 %79, 43, !dbg !9039
  br i1 %80, label %81, label %82, !dbg !9038

; <label>:81:                                     ; preds = %76
  br label %85, !dbg !9038

; <label>:82:                                     ; preds = %76
  %83 = load i8*, i8** %16, align 8, !dbg !9040
  %84 = call %struct.passwd* @getpwnam(i8* %83), !dbg !9041
  br label %85, !dbg !9038

; <label>:85:                                     ; preds = %82, %81
  %86 = phi %struct.passwd* [ null, %81 ], [ %84, %82 ], !dbg !9038
  store %struct.passwd* %86, %struct.passwd** %14, align 8, !dbg !9042
  %87 = load %struct.passwd*, %struct.passwd** %14, align 8, !dbg !9043
  %88 = icmp eq %struct.passwd* %87, null, !dbg !9045
  br i1 %88, label %89, label %120, !dbg !9046

; <label>:89:                                     ; preds = %85
  call void @llvm.dbg.declare(metadata i8* %22, metadata !9047, metadata !DIExpression()), !dbg !9049
  %90 = load i8*, i8** %8, align 8, !dbg !9050
  %91 = icmp ne i8* %90, null, !dbg !9051
  br i1 %91, label %92, label %95, !dbg !9052

; <label>:92:                                     ; preds = %89
  %93 = load i8*, i8** %17, align 8, !dbg !9053
  %94 = icmp eq i8* %93, null, !dbg !9054
  br label %95

; <label>:95:                                     ; preds = %92, %89
  %96 = phi i1 [ false, %89 ], [ %94, %92 ]
  %97 = zext i1 %96 to i8, !dbg !9049
  store i8 %97, i8* %22, align 1, !dbg !9049
  %98 = load i8, i8* %22, align 1, !dbg !9055
  %99 = trunc i8 %98 to i1, !dbg !9055
  br i1 %99, label %100, label %102, !dbg !9057

; <label>:100:                                    ; preds = %95
  %101 = load i8*, i8** @parse_with_separator.E_bad_spec, align 8, !dbg !9058
  store i8* %101, i8** %13, align 8, !dbg !9060
  br label %119, !dbg !9061

; <label>:102:                                    ; preds = %95
  call void @llvm.dbg.declare(metadata i64* %23, metadata !9062, metadata !DIExpression()), !dbg !9064
  %103 = load i8*, i8** %16, align 8, !dbg !9065
  %104 = call i32 @xstrtoul(i8* %103, i8** null, i32 10, i64* %23, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3.175, i32 0, i32 0)), !dbg !9067
  %105 = icmp eq i32 %104, 0, !dbg !9068
  br i1 %105, label %106, label %116, !dbg !9069

; <label>:106:                                    ; preds = %102
  %107 = load i64, i64* %23, align 8, !dbg !9070
  %108 = icmp ule i64 %107, 4294967295, !dbg !9071
  br i1 %108, label %109, label %116, !dbg !9072

; <label>:109:                                    ; preds = %106
  %110 = load i64, i64* %23, align 8, !dbg !9073
  %111 = trunc i64 %110 to i32, !dbg !9074
  %112 = icmp ne i32 %111, -1, !dbg !9075
  br i1 %112, label %113, label %116, !dbg !9076

; <label>:113:                                    ; preds = %109
  %114 = load i64, i64* %23, align 8, !dbg !9077
  %115 = trunc i64 %114 to i32, !dbg !9077
  store i32 %115, i32* %19, align 4, !dbg !9078
  br label %118, !dbg !9079

; <label>:116:                                    ; preds = %109, %106, %102
  %117 = load i8*, i8** @parse_with_separator.E_invalid_user, align 8, !dbg !9080
  store i8* %117, i8** %13, align 8, !dbg !9081
  br label %118

; <label>:118:                                    ; preds = %116, %113
  br label %119

; <label>:119:                                    ; preds = %118, %100
  br label %150, !dbg !9082

; <label>:120:                                    ; preds = %85
  %121 = load %struct.passwd*, %struct.passwd** %14, align 8, !dbg !9083
  %122 = getelementptr inbounds %struct.passwd, %struct.passwd* %121, i32 0, i32 2, !dbg !9085
  %123 = load i32, i32* %122, align 8, !dbg !9085
  store i32 %123, i32* %19, align 4, !dbg !9086
  %124 = load i8*, i8** %17, align 8, !dbg !9087
  %125 = icmp eq i8* %124, null, !dbg !9089
  br i1 %125, label %126, label %149, !dbg !9090

; <label>:126:                                    ; preds = %120
  %127 = load i8*, i8** %8, align 8, !dbg !9091
  %128 = icmp ne i8* %127, null, !dbg !9092
  br i1 %128, label %129, label %149, !dbg !9093

; <label>:129:                                    ; preds = %126
  call void @llvm.dbg.declare(metadata [21 x i8]* %24, metadata !9094, metadata !DIExpression()), !dbg !9096
  %130 = load %struct.passwd*, %struct.passwd** %14, align 8, !dbg !9097
  %131 = getelementptr inbounds %struct.passwd, %struct.passwd* %130, i32 0, i32 3, !dbg !9098
  %132 = load i32, i32* %131, align 4, !dbg !9098
  store i32 %132, i32* %20, align 4, !dbg !9099
  %133 = load i32, i32* %20, align 4, !dbg !9100
  %134 = call %struct.group* @getgrgid(i32 %133), !dbg !9101
  store %struct.group* %134, %struct.group** %15, align 8, !dbg !9102
  %135 = load %struct.group*, %struct.group** %15, align 8, !dbg !9103
  %136 = icmp ne %struct.group* %135, null, !dbg !9103
  br i1 %136, label %137, label %141, !dbg !9103

; <label>:137:                                    ; preds = %129
  %138 = load %struct.group*, %struct.group** %15, align 8, !dbg !9104
  %139 = getelementptr inbounds %struct.group, %struct.group* %138, i32 0, i32 0, !dbg !9105
  %140 = load i8*, i8** %139, align 8, !dbg !9105
  br label %146, !dbg !9103

; <label>:141:                                    ; preds = %129
  %142 = load i32, i32* %20, align 4, !dbg !9106
  %143 = zext i32 %142 to i64, !dbg !9106
  %144 = getelementptr inbounds [21 x i8], [21 x i8]* %24, i32 0, i32 0, !dbg !9107
  %145 = call i8* @umaxtostr(i64 %143, i8* %144), !dbg !9108
  br label %146, !dbg !9103

; <label>:146:                                    ; preds = %141, %137
  %147 = phi i8* [ %140, %137 ], [ %145, %141 ], !dbg !9103
  %148 = call noalias i8* @xstrdup(i8* %147), !dbg !9109
  store i8* %148, i8** %18, align 8, !dbg !9110
  call void @endgrent(), !dbg !9111
  br label %149, !dbg !9112

; <label>:149:                                    ; preds = %146, %126, %120
  br label %150

; <label>:150:                                    ; preds = %149, %119
  call void @endpwent(), !dbg !9113
  br label %151, !dbg !9114

; <label>:151:                                    ; preds = %150, %72
  %152 = load i8*, i8** %17, align 8, !dbg !9115
  %153 = icmp ne i8* %152, null, !dbg !9117
  br i1 %153, label %154, label %194, !dbg !9118

; <label>:154:                                    ; preds = %151
  %155 = load i8*, i8** %13, align 8, !dbg !9119
  %156 = icmp eq i8* %155, null, !dbg !9120
  br i1 %156, label %157, label %194, !dbg !9121

; <label>:157:                                    ; preds = %154
  %158 = load i8*, i8** %17, align 8, !dbg !9122
  %159 = load i8, i8* %158, align 1, !dbg !9124
  %160 = sext i8 %159 to i32, !dbg !9124
  %161 = icmp eq i32 %160, 43, !dbg !9125
  br i1 %161, label %162, label %163, !dbg !9124

; <label>:162:                                    ; preds = %157
  br label %166, !dbg !9124

; <label>:163:                                    ; preds = %157
  %164 = load i8*, i8** %17, align 8, !dbg !9126
  %165 = call %struct.group* @getgrnam(i8* %164), !dbg !9127
  br label %166, !dbg !9124

; <label>:166:                                    ; preds = %163, %162
  %167 = phi %struct.group* [ null, %162 ], [ %165, %163 ], !dbg !9124
  store %struct.group* %167, %struct.group** %15, align 8, !dbg !9128
  %168 = load %struct.group*, %struct.group** %15, align 8, !dbg !9129
  %169 = icmp eq %struct.group* %168, null, !dbg !9131
  br i1 %169, label %170, label %187, !dbg !9132

; <label>:170:                                    ; preds = %166
  call void @llvm.dbg.declare(metadata i64* %25, metadata !9133, metadata !DIExpression()), !dbg !9135
  %171 = load i8*, i8** %17, align 8, !dbg !9136
  %172 = call i32 @xstrtoul(i8* %171, i8** null, i32 10, i64* %25, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3.175, i32 0, i32 0)), !dbg !9138
  %173 = icmp eq i32 %172, 0, !dbg !9139
  br i1 %173, label %174, label %184, !dbg !9140

; <label>:174:                                    ; preds = %170
  %175 = load i64, i64* %25, align 8, !dbg !9141
  %176 = icmp ule i64 %175, 4294967295, !dbg !9142
  br i1 %176, label %177, label %184, !dbg !9143

; <label>:177:                                    ; preds = %174
  %178 = load i64, i64* %25, align 8, !dbg !9144
  %179 = trunc i64 %178 to i32, !dbg !9145
  %180 = icmp ne i32 %179, -1, !dbg !9146
  br i1 %180, label %181, label %184, !dbg !9147

; <label>:181:                                    ; preds = %177
  %182 = load i64, i64* %25, align 8, !dbg !9148
  %183 = trunc i64 %182 to i32, !dbg !9148
  store i32 %183, i32* %20, align 4, !dbg !9149
  br label %186, !dbg !9150

; <label>:184:                                    ; preds = %177, %174, %170
  %185 = load i8*, i8** @parse_with_separator.E_invalid_group, align 8, !dbg !9151
  store i8* %185, i8** %13, align 8, !dbg !9152
  br label %186

; <label>:186:                                    ; preds = %184, %181
  br label %191, !dbg !9153

; <label>:187:                                    ; preds = %166
  %188 = load %struct.group*, %struct.group** %15, align 8, !dbg !9154
  %189 = getelementptr inbounds %struct.group, %struct.group* %188, i32 0, i32 2, !dbg !9155
  %190 = load i32, i32* %189, align 8, !dbg !9155
  store i32 %190, i32* %20, align 4, !dbg !9156
  br label %191

; <label>:191:                                    ; preds = %187, %186
  call void @endgrent(), !dbg !9157
  %192 = load i8*, i8** %17, align 8, !dbg !9158
  %193 = call noalias i8* @xstrdup(i8* %192), !dbg !9159
  store i8* %193, i8** %18, align 8, !dbg !9160
  br label %194, !dbg !9161

; <label>:194:                                    ; preds = %191, %154, %151
  %195 = load i8*, i8** %13, align 8, !dbg !9162
  %196 = icmp eq i8* %195, null, !dbg !9164
  br i1 %196, label %197, label %206, !dbg !9165

; <label>:197:                                    ; preds = %194
  %198 = load i32, i32* %19, align 4, !dbg !9166
  %199 = load i32*, i32** %9, align 8, !dbg !9168
  store i32 %198, i32* %199, align 4, !dbg !9169
  %200 = load i32, i32* %20, align 4, !dbg !9170
  %201 = load i32*, i32** %10, align 8, !dbg !9171
  store i32 %200, i32* %201, align 4, !dbg !9172
  %202 = load i8*, i8** %16, align 8, !dbg !9173
  %203 = load i8**, i8*** %11, align 8, !dbg !9174
  store i8* %202, i8** %203, align 8, !dbg !9175
  %204 = load i8*, i8** %18, align 8, !dbg !9176
  %205 = load i8**, i8*** %12, align 8, !dbg !9177
  store i8* %204, i8** %205, align 8, !dbg !9178
  store i8* null, i8** %16, align 8, !dbg !9179
  br label %208, !dbg !9180

; <label>:206:                                    ; preds = %194
  %207 = load i8*, i8** %18, align 8, !dbg !9181
  call void @free(i8* %207) #8, !dbg !9182
  br label %208

; <label>:208:                                    ; preds = %206, %197
  %209 = load i8*, i8** %16, align 8, !dbg !9183
  call void @free(i8* %209) #8, !dbg !9184
  %210 = load i8*, i8** %13, align 8, !dbg !9185
  ret i8* %210, !dbg !9186
}

declare %struct.passwd* @getpwnam(i8*) #2

declare void @endgrent() #2

declare void @endpwent() #2

declare %struct.group* @getgrnam(i8*) #2

; Function Attrs: noinline nounwind uwtable
define noalias i8* @xnmalloc(i64, i64) #3 !dbg !9187 {
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  store i64 %0, i64* %3, align 8
  call void @llvm.dbg.declare(metadata i64* %3, metadata !9190, metadata !DIExpression()), !dbg !9191
  store i64 %1, i64* %4, align 8
  call void @llvm.dbg.declare(metadata i64* %4, metadata !9192, metadata !DIExpression()), !dbg !9193
  %5 = load i64, i64* %4, align 8, !dbg !9194
  %6 = udiv i64 -1, %5, !dbg !9194
  %7 = load i64, i64* %3, align 8, !dbg !9194
  %8 = icmp ult i64 %6, %7, !dbg !9194
  br i1 %8, label %9, label %10, !dbg !9196

; <label>:9:                                      ; preds = %2
  call void @xalloc_die() #13, !dbg !9197
  unreachable, !dbg !9197

; <label>:10:                                     ; preds = %2
  %11 = load i64, i64* %3, align 8, !dbg !9198
  %12 = load i64, i64* %4, align 8, !dbg !9199
  %13 = mul i64 %11, %12, !dbg !9200
  %14 = call noalias i8* @xmalloc(i64 %13), !dbg !9201
  ret i8* %14, !dbg !9202
}

; Function Attrs: noinline nounwind uwtable
define noalias i8* @xmalloc(i64) #3 !dbg !9203 {
  %2 = alloca i64, align 8
  %3 = alloca i8*, align 8
  store i64 %0, i64* %2, align 8
  call void @llvm.dbg.declare(metadata i64* %2, metadata !9206, metadata !DIExpression()), !dbg !9207
  call void @llvm.dbg.declare(metadata i8** %3, metadata !9208, metadata !DIExpression()), !dbg !9209
  %4 = load i64, i64* %2, align 8, !dbg !9210
  %5 = call noalias i8* @malloc(i64 %4) #8, !dbg !9211
  store i8* %5, i8** %3, align 8, !dbg !9209
  %6 = load i8*, i8** %3, align 8, !dbg !9212
  %7 = icmp ne i8* %6, null, !dbg !9212
  br i1 %7, label %12, label %8, !dbg !9214

; <label>:8:                                      ; preds = %1
  %9 = load i64, i64* %2, align 8, !dbg !9215
  %10 = icmp ne i64 %9, 0, !dbg !9216
  br i1 %10, label %11, label %12, !dbg !9217

; <label>:11:                                     ; preds = %8
  call void @xalloc_die() #13, !dbg !9218
  unreachable, !dbg !9218

; <label>:12:                                     ; preds = %8, %1
  %13 = load i8*, i8** %3, align 8, !dbg !9219
  ret i8* %13, !dbg !9220
}

; Function Attrs: noinline nounwind uwtable
define i8* @xnrealloc(i8*, i64, i64) #3 !dbg !9221 {
  %4 = alloca i8*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  store i8* %0, i8** %4, align 8
  call void @llvm.dbg.declare(metadata i8** %4, metadata !9224, metadata !DIExpression()), !dbg !9225
  store i64 %1, i64* %5, align 8
  call void @llvm.dbg.declare(metadata i64* %5, metadata !9226, metadata !DIExpression()), !dbg !9227
  store i64 %2, i64* %6, align 8
  call void @llvm.dbg.declare(metadata i64* %6, metadata !9228, metadata !DIExpression()), !dbg !9229
  %7 = load i64, i64* %6, align 8, !dbg !9230
  %8 = udiv i64 -1, %7, !dbg !9230
  %9 = load i64, i64* %5, align 8, !dbg !9230
  %10 = icmp ult i64 %8, %9, !dbg !9230
  br i1 %10, label %11, label %12, !dbg !9232

; <label>:11:                                     ; preds = %3
  call void @xalloc_die() #13, !dbg !9233
  unreachable, !dbg !9233

; <label>:12:                                     ; preds = %3
  %13 = load i8*, i8** %4, align 8, !dbg !9234
  %14 = load i64, i64* %5, align 8, !dbg !9235
  %15 = load i64, i64* %6, align 8, !dbg !9236
  %16 = mul i64 %14, %15, !dbg !9237
  %17 = call i8* @xrealloc(i8* %13, i64 %16), !dbg !9238
  ret i8* %17, !dbg !9239
}

; Function Attrs: noinline nounwind uwtable
define i8* @xrealloc(i8*, i64) #3 !dbg !9240 {
  %3 = alloca i8*, align 8
  %4 = alloca i64, align 8
  store i8* %0, i8** %3, align 8
  call void @llvm.dbg.declare(metadata i8** %3, metadata !9243, metadata !DIExpression()), !dbg !9244
  store i64 %1, i64* %4, align 8
  call void @llvm.dbg.declare(metadata i64* %4, metadata !9245, metadata !DIExpression()), !dbg !9246
  %5 = load i8*, i8** %3, align 8, !dbg !9247
  %6 = load i64, i64* %4, align 8, !dbg !9248
  %7 = call i8* @realloc(i8* %5, i64 %6) #8, !dbg !9249
  store i8* %7, i8** %3, align 8, !dbg !9250
  %8 = load i8*, i8** %3, align 8, !dbg !9251
  %9 = icmp ne i8* %8, null, !dbg !9251
  br i1 %9, label %14, label %10, !dbg !9253

; <label>:10:                                     ; preds = %2
  %11 = load i64, i64* %4, align 8, !dbg !9254
  %12 = icmp ne i64 %11, 0, !dbg !9255
  br i1 %12, label %13, label %14, !dbg !9256

; <label>:13:                                     ; preds = %10
  call void @xalloc_die() #13, !dbg !9257
  unreachable, !dbg !9257

; <label>:14:                                     ; preds = %10, %2
  %15 = load i8*, i8** %3, align 8, !dbg !9258
  ret i8* %15, !dbg !9259
}

; Function Attrs: noinline nounwind uwtable
define i8* @x2nrealloc(i8*, i64*, i64) #3 !dbg !435 {
  %4 = alloca i8*, align 8
  %5 = alloca i64*, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  store i8* %0, i8** %4, align 8
  call void @llvm.dbg.declare(metadata i8** %4, metadata !9260, metadata !DIExpression()), !dbg !9261
  store i64* %1, i64** %5, align 8
  call void @llvm.dbg.declare(metadata i64** %5, metadata !9262, metadata !DIExpression()), !dbg !9263
  store i64 %2, i64* %6, align 8
  call void @llvm.dbg.declare(metadata i64* %6, metadata !9264, metadata !DIExpression()), !dbg !9265
  call void @llvm.dbg.declare(metadata i64* %7, metadata !9266, metadata !DIExpression()), !dbg !9267
  %8 = load i64*, i64** %5, align 8, !dbg !9268
  %9 = load i64, i64* %8, align 8, !dbg !9269
  store i64 %9, i64* %7, align 8, !dbg !9267
  %10 = load i8*, i8** %4, align 8, !dbg !9270
  %11 = icmp ne i8* %10, null, !dbg !9270
  br i1 %11, label %26, label %12, !dbg !9272

; <label>:12:                                     ; preds = %3
  %13 = load i64, i64* %7, align 8, !dbg !9273
  %14 = icmp ne i64 %13, 0, !dbg !9273
  br i1 %14, label %25, label %15, !dbg !9276

; <label>:15:                                     ; preds = %12
  %16 = load i64, i64* %6, align 8, !dbg !9277
  %17 = udiv i64 64, %16, !dbg !9279
  store i64 %17, i64* %7, align 8, !dbg !9280
  %18 = load i64, i64* %7, align 8, !dbg !9281
  %19 = icmp ne i64 %18, 0, !dbg !9282
  %20 = xor i1 %19, true, !dbg !9282
  %21 = zext i1 %20 to i32, !dbg !9282
  %22 = sext i32 %21 to i64, !dbg !9282
  %23 = load i64, i64* %7, align 8, !dbg !9283
  %24 = add i64 %23, %22, !dbg !9283
  store i64 %24, i64* %7, align 8, !dbg !9283
  br label %25, !dbg !9284

; <label>:25:                                     ; preds = %15, %12
  br label %38, !dbg !9285

; <label>:26:                                     ; preds = %3
  %27 = load i64, i64* %6, align 8, !dbg !9286
  %28 = udiv i64 -6148914691236517206, %27, !dbg !9289
  %29 = load i64, i64* %7, align 8, !dbg !9290
  %30 = icmp ule i64 %28, %29, !dbg !9291
  br i1 %30, label %31, label %32, !dbg !9292

; <label>:31:                                     ; preds = %26
  call void @xalloc_die() #13, !dbg !9293
  unreachable, !dbg !9293

; <label>:32:                                     ; preds = %26
  %33 = load i64, i64* %7, align 8, !dbg !9294
  %34 = add i64 %33, 1, !dbg !9295
  %35 = udiv i64 %34, 2, !dbg !9296
  %36 = load i64, i64* %7, align 8, !dbg !9297
  %37 = add i64 %36, %35, !dbg !9297
  store i64 %37, i64* %7, align 8, !dbg !9297
  br label %38

; <label>:38:                                     ; preds = %32, %25
  %39 = load i64, i64* %7, align 8, !dbg !9298
  %40 = load i64*, i64** %5, align 8, !dbg !9299
  store i64 %39, i64* %40, align 8, !dbg !9300
  %41 = load i8*, i8** %4, align 8, !dbg !9301
  %42 = load i64, i64* %7, align 8, !dbg !9302
  %43 = load i64, i64* %6, align 8, !dbg !9303
  %44 = mul i64 %42, %43, !dbg !9304
  %45 = call i8* @xrealloc(i8* %41, i64 %44), !dbg !9305
  ret i8* %45, !dbg !9306
}

; Function Attrs: noinline nounwind uwtable
define noalias i8* @xcharalloc(i64) #3 !dbg !9307 {
  %2 = alloca i64, align 8
  store i64 %0, i64* %2, align 8
  call void @llvm.dbg.declare(metadata i64* %2, metadata !9310, metadata !DIExpression()), !dbg !9311
  %3 = load i64, i64* %2, align 8, !dbg !9312
  %4 = call noalias i8* @xmalloc(i64 %3), !dbg !9312
  ret i8* %4, !dbg !9313
}

; Function Attrs: noinline nounwind uwtable
define i8* @x2realloc(i8*, i64*) #3 !dbg !9314 {
  %3 = alloca i8*, align 8
  %4 = alloca i64*, align 8
  store i8* %0, i8** %3, align 8
  call void @llvm.dbg.declare(metadata i8** %3, metadata !9317, metadata !DIExpression()), !dbg !9318
  store i64* %1, i64** %4, align 8
  call void @llvm.dbg.declare(metadata i64** %4, metadata !9319, metadata !DIExpression()), !dbg !9320
  %5 = load i8*, i8** %3, align 8, !dbg !9321
  %6 = load i64*, i64** %4, align 8, !dbg !9322
  %7 = call i8* @x2nrealloc(i8* %5, i64* %6, i64 1), !dbg !9323
  ret i8* %7, !dbg !9324
}

; Function Attrs: noinline nounwind uwtable
define noalias i8* @xzalloc(i64) #3 !dbg !9325 {
  %2 = alloca i64, align 8
  store i64 %0, i64* %2, align 8
  call void @llvm.dbg.declare(metadata i64* %2, metadata !9326, metadata !DIExpression()), !dbg !9327
  %3 = load i64, i64* %2, align 8, !dbg !9328
  %4 = call noalias i8* @xmalloc(i64 %3), !dbg !9329
  %5 = load i64, i64* %2, align 8, !dbg !9330
  call void @llvm.memset.p0i8.i64(i8* %4, i8 0, i64 %5, i32 1, i1 false), !dbg !9331
  ret i8* %4, !dbg !9332
}

; Function Attrs: noinline nounwind uwtable
define noalias i8* @xcalloc(i64, i64) #3 !dbg !9333 {
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = alloca i8*, align 8
  store i64 %0, i64* %3, align 8
  call void @llvm.dbg.declare(metadata i64* %3, metadata !9334, metadata !DIExpression()), !dbg !9335
  store i64 %1, i64* %4, align 8
  call void @llvm.dbg.declare(metadata i64* %4, metadata !9336, metadata !DIExpression()), !dbg !9337
  call void @llvm.dbg.declare(metadata i8** %5, metadata !9338, metadata !DIExpression()), !dbg !9339
  %6 = load i64, i64* %3, align 8, !dbg !9340
  %7 = load i64, i64* %4, align 8, !dbg !9342
  %8 = call noalias i8* @calloc(i64 %6, i64 %7) #8, !dbg !9343
  store i8* %8, i8** %5, align 8, !dbg !9344
  %9 = icmp ne i8* %8, null, !dbg !9344
  br i1 %9, label %11, label %10, !dbg !9345

; <label>:10:                                     ; preds = %2
  call void @xalloc_die() #13, !dbg !9346
  unreachable, !dbg !9346

; <label>:11:                                     ; preds = %2
  %12 = load i8*, i8** %5, align 8, !dbg !9347
  ret i8* %12, !dbg !9348
}

; Function Attrs: noinline nounwind uwtable
define noalias i8* @xmemdup(i8*, i64) #3 !dbg !9349 {
  %3 = alloca i8*, align 8
  %4 = alloca i64, align 8
  store i8* %0, i8** %3, align 8
  call void @llvm.dbg.declare(metadata i8** %3, metadata !9352, metadata !DIExpression()), !dbg !9353
  store i64 %1, i64* %4, align 8
  call void @llvm.dbg.declare(metadata i64* %4, metadata !9354, metadata !DIExpression()), !dbg !9355
  %5 = load i64, i64* %4, align 8, !dbg !9356
  %6 = call noalias i8* @xmalloc(i64 %5), !dbg !9357
  %7 = load i8*, i8** %3, align 8, !dbg !9358
  %8 = load i64, i64* %4, align 8, !dbg !9359
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %6, i8* %7, i64 %8, i32 1, i1 false), !dbg !9360
  ret i8* %6, !dbg !9361
}

; Function Attrs: noinline nounwind uwtable
define noalias i8* @xstrdup(i8*) #3 !dbg !9362 {
  %2 = alloca i8*, align 8
  store i8* %0, i8** %2, align 8
  call void @llvm.dbg.declare(metadata i8** %2, metadata !9363, metadata !DIExpression()), !dbg !9364
  %3 = load i8*, i8** %2, align 8, !dbg !9365
  %4 = load i8*, i8** %2, align 8, !dbg !9366
  %5 = call i64 @strlen(i8* %4) #12, !dbg !9367
  %6 = add i64 %5, 1, !dbg !9368
  %7 = call noalias i8* @xmemdup(i8* %3, i64 %6), !dbg !9369
  ret i8* %7, !dbg !9370
}

; Function Attrs: noinline nounwind uwtable
define i32 @xstrtoul(i8*, i8**, i32, i64*, i8*) #3 !dbg !9371 {
  %6 = alloca i32, align 4
  %7 = alloca i8*, align 8
  %8 = alloca i8**, align 8
  %9 = alloca i32, align 4
  %10 = alloca i64*, align 8
  %11 = alloca i8*, align 8
  %12 = alloca i8*, align 8
  %13 = alloca i8**, align 8
  %14 = alloca i64, align 8
  %15 = alloca i32, align 4
  %16 = alloca i8*, align 8
  %17 = alloca i8, align 1
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  store i8* %0, i8** %7, align 8
  call void @llvm.dbg.declare(metadata i8** %7, metadata !9377, metadata !DIExpression()), !dbg !9378
  store i8** %1, i8*** %8, align 8
  call void @llvm.dbg.declare(metadata i8*** %8, metadata !9379, metadata !DIExpression()), !dbg !9380
  store i32 %2, i32* %9, align 4
  call void @llvm.dbg.declare(metadata i32* %9, metadata !9381, metadata !DIExpression()), !dbg !9382
  store i64* %3, i64** %10, align 8
  call void @llvm.dbg.declare(metadata i64** %10, metadata !9383, metadata !DIExpression()), !dbg !9384
  store i8* %4, i8** %11, align 8
  call void @llvm.dbg.declare(metadata i8** %11, metadata !9385, metadata !DIExpression()), !dbg !9386
  call void @llvm.dbg.declare(metadata i8** %12, metadata !9387, metadata !DIExpression()), !dbg !9388
  call void @llvm.dbg.declare(metadata i8*** %13, metadata !9389, metadata !DIExpression()), !dbg !9390
  call void @llvm.dbg.declare(metadata i64* %14, metadata !9391, metadata !DIExpression()), !dbg !9392
  call void @llvm.dbg.declare(metadata i32* %15, metadata !9393, metadata !DIExpression()), !dbg !9394
  store i32 0, i32* %15, align 4, !dbg !9394
  %21 = load i32, i32* %9, align 4, !dbg !9395
  %22 = icmp sle i32 0, %21, !dbg !9395
  br i1 %22, label %23, label %27, !dbg !9395

; <label>:23:                                     ; preds = %5
  %24 = load i32, i32* %9, align 4, !dbg !9395
  %25 = icmp sle i32 %24, 36, !dbg !9395
  br i1 %25, label %26, label %27, !dbg !9398

; <label>:26:                                     ; preds = %23
  br label %28, !dbg !9398

; <label>:27:                                     ; preds = %23, %5
  call void @__assert_fail(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.191, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.1.192, i32 0, i32 0), i32 83, i8* getelementptr inbounds ([81 x i8], [81 x i8]* @__PRETTY_FUNCTION__.xstrtoul, i32 0, i32 0)) #11, !dbg !9395
  unreachable, !dbg !9395

; <label>:28:                                     ; preds = %26
  %29 = load i8**, i8*** %8, align 8, !dbg !9399
  %30 = icmp ne i8** %29, null, !dbg !9399
  br i1 %30, label %31, label %33, !dbg !9399

; <label>:31:                                     ; preds = %28
  %32 = load i8**, i8*** %8, align 8, !dbg !9400
  br label %34, !dbg !9399

; <label>:33:                                     ; preds = %28
  br label %34, !dbg !9399

; <label>:34:                                     ; preds = %33, %31
  %35 = phi i8** [ %32, %31 ], [ %12, %33 ], !dbg !9399
  store i8** %35, i8*** %13, align 8, !dbg !9401
  call void @llvm.dbg.declare(metadata i8** %16, metadata !9402, metadata !DIExpression()), !dbg !9405
  %36 = load i8*, i8** %7, align 8, !dbg !9406
  store i8* %36, i8** %16, align 8, !dbg !9405
  call void @llvm.dbg.declare(metadata i8* %17, metadata !9407, metadata !DIExpression()), !dbg !9408
  %37 = load i8*, i8** %16, align 8, !dbg !9409
  %38 = load i8, i8* %37, align 1, !dbg !9410
  store i8 %38, i8* %17, align 1, !dbg !9408
  br label %39, !dbg !9411

; <label>:39:                                     ; preds = %50, %34
  %40 = call i16** @__ctype_b_loc() #14, !dbg !9412
  %41 = load i16*, i16** %40, align 8, !dbg !9412
  %42 = load i8, i8* %17, align 1, !dbg !9412
  %43 = zext i8 %42 to i32, !dbg !9412
  %44 = sext i32 %43 to i64, !dbg !9412
  %45 = getelementptr inbounds i16, i16* %41, i64 %44, !dbg !9412
  %46 = load i16, i16* %45, align 2, !dbg !9412
  %47 = zext i16 %46 to i32, !dbg !9412
  %48 = and i32 %47, 8192, !dbg !9412
  %49 = icmp ne i32 %48, 0, !dbg !9411
  br i1 %49, label %50, label %54, !dbg !9411

; <label>:50:                                     ; preds = %39
  %51 = load i8*, i8** %16, align 8, !dbg !9413
  %52 = getelementptr inbounds i8, i8* %51, i32 1, !dbg !9413
  store i8* %52, i8** %16, align 8, !dbg !9413
  %53 = load i8, i8* %52, align 1, !dbg !9414
  store i8 %53, i8* %17, align 1, !dbg !9415
  br label %39, !dbg !9411, !llvm.loop !9416

; <label>:54:                                     ; preds = %39
  %55 = load i8, i8* %17, align 1, !dbg !9418
  %56 = zext i8 %55 to i32, !dbg !9418
  %57 = icmp eq i32 %56, 45, !dbg !9420
  br i1 %57, label %58, label %59, !dbg !9421

; <label>:58:                                     ; preds = %54
  store i32 4, i32* %6, align 4, !dbg !9422
  br label %215, !dbg !9422

; <label>:59:                                     ; preds = %54
  %60 = call i32* @__errno_location() #14, !dbg !9423
  store i32 0, i32* %60, align 4, !dbg !9424
  %61 = load i8*, i8** %7, align 8, !dbg !9425
  %62 = load i8**, i8*** %13, align 8, !dbg !9426
  %63 = load i32, i32* %9, align 4, !dbg !9427
  %64 = call i64 @strtoul(i8* %61, i8** %62, i32 %63) #8, !dbg !9428
  store i64 %64, i64* %14, align 8, !dbg !9429
  %65 = load i8**, i8*** %13, align 8, !dbg !9430
  %66 = load i8*, i8** %65, align 8, !dbg !9432
  %67 = load i8*, i8** %7, align 8, !dbg !9433
  %68 = icmp eq i8* %66, %67, !dbg !9434
  br i1 %68, label %69, label %89, !dbg !9435

; <label>:69:                                     ; preds = %59
  %70 = load i8*, i8** %11, align 8, !dbg !9436
  %71 = icmp ne i8* %70, null, !dbg !9436
  br i1 %71, label %72, label %87, !dbg !9439

; <label>:72:                                     ; preds = %69
  %73 = load i8**, i8*** %13, align 8, !dbg !9440
  %74 = load i8*, i8** %73, align 8, !dbg !9441
  %75 = load i8, i8* %74, align 1, !dbg !9442
  %76 = sext i8 %75 to i32, !dbg !9442
  %77 = icmp ne i32 %76, 0, !dbg !9442
  br i1 %77, label %78, label %87, !dbg !9443

; <label>:78:                                     ; preds = %72
  %79 = load i8*, i8** %11, align 8, !dbg !9444
  %80 = load i8**, i8*** %13, align 8, !dbg !9445
  %81 = load i8*, i8** %80, align 8, !dbg !9446
  %82 = load i8, i8* %81, align 1, !dbg !9447
  %83 = sext i8 %82 to i32, !dbg !9447
  %84 = call i8* @strchr(i8* %79, i32 %83) #12, !dbg !9448
  %85 = icmp ne i8* %84, null, !dbg !9448
  br i1 %85, label %86, label %87, !dbg !9449

; <label>:86:                                     ; preds = %78
  store i64 1, i64* %14, align 8, !dbg !9450
  br label %88, !dbg !9451

; <label>:87:                                     ; preds = %78, %72, %69
  store i32 4, i32* %6, align 4, !dbg !9452
  br label %215, !dbg !9452

; <label>:88:                                     ; preds = %86
  br label %100, !dbg !9453

; <label>:89:                                     ; preds = %59
  %90 = call i32* @__errno_location() #14, !dbg !9454
  %91 = load i32, i32* %90, align 4, !dbg !9454
  %92 = icmp ne i32 %91, 0, !dbg !9456
  br i1 %92, label %93, label %99, !dbg !9457

; <label>:93:                                     ; preds = %89
  %94 = call i32* @__errno_location() #14, !dbg !9458
  %95 = load i32, i32* %94, align 4, !dbg !9458
  %96 = icmp ne i32 %95, 34, !dbg !9461
  br i1 %96, label %97, label %98, !dbg !9462

; <label>:97:                                     ; preds = %93
  store i32 4, i32* %6, align 4, !dbg !9463
  br label %215, !dbg !9463

; <label>:98:                                     ; preds = %93
  store i32 1, i32* %15, align 4, !dbg !9464
  br label %99, !dbg !9465

; <label>:99:                                     ; preds = %98, %89
  br label %100

; <label>:100:                                    ; preds = %99, %88
  %101 = load i8*, i8** %11, align 8, !dbg !9466
  %102 = icmp ne i8* %101, null, !dbg !9466
  br i1 %102, label %107, label %103, !dbg !9468

; <label>:103:                                    ; preds = %100
  %104 = load i64, i64* %14, align 8, !dbg !9469
  %105 = load i64*, i64** %10, align 8, !dbg !9471
  store i64 %104, i64* %105, align 8, !dbg !9472
  %106 = load i32, i32* %15, align 4, !dbg !9473
  store i32 %106, i32* %6, align 4, !dbg !9474
  br label %215, !dbg !9474

; <label>:107:                                    ; preds = %100
  %108 = load i8**, i8*** %13, align 8, !dbg !9475
  %109 = load i8*, i8** %108, align 8, !dbg !9477
  %110 = load i8, i8* %109, align 1, !dbg !9478
  %111 = sext i8 %110 to i32, !dbg !9478
  %112 = icmp ne i32 %111, 0, !dbg !9479
  br i1 %112, label %113, label %211, !dbg !9480

; <label>:113:                                    ; preds = %107
  call void @llvm.dbg.declare(metadata i32* %18, metadata !9481, metadata !DIExpression()), !dbg !9483
  store i32 1024, i32* %18, align 4, !dbg !9483
  call void @llvm.dbg.declare(metadata i32* %19, metadata !9484, metadata !DIExpression()), !dbg !9485
  store i32 1, i32* %19, align 4, !dbg !9485
  call void @llvm.dbg.declare(metadata i32* %20, metadata !9486, metadata !DIExpression()), !dbg !9487
  %114 = load i8*, i8** %11, align 8, !dbg !9488
  %115 = load i8**, i8*** %13, align 8, !dbg !9490
  %116 = load i8*, i8** %115, align 8, !dbg !9491
  %117 = load i8, i8* %116, align 1, !dbg !9492
  %118 = sext i8 %117 to i32, !dbg !9492
  %119 = call i8* @strchr(i8* %114, i32 %118) #12, !dbg !9493
  %120 = icmp ne i8* %119, null, !dbg !9493
  br i1 %120, label %126, label %121, !dbg !9494

; <label>:121:                                    ; preds = %113
  %122 = load i64, i64* %14, align 8, !dbg !9495
  %123 = load i64*, i64** %10, align 8, !dbg !9497
  store i64 %122, i64* %123, align 8, !dbg !9498
  %124 = load i32, i32* %15, align 4, !dbg !9499
  %125 = or i32 %124, 2, !dbg !9500
  store i32 %125, i32* %6, align 4, !dbg !9501
  br label %215, !dbg !9501

; <label>:126:                                    ; preds = %113
  %127 = load i8*, i8** %11, align 8, !dbg !9502
  %128 = call i8* @strchr(i8* %127, i32 48) #12, !dbg !9504
  %129 = icmp ne i8* %128, null, !dbg !9504
  br i1 %129, label %130, label %153, !dbg !9505

; <label>:130:                                    ; preds = %126
  %131 = load i8**, i8*** %13, align 8, !dbg !9506
  %132 = getelementptr inbounds i8*, i8** %131, i64 0, !dbg !9506
  %133 = load i8*, i8** %132, align 8, !dbg !9506
  %134 = getelementptr inbounds i8, i8* %133, i64 1, !dbg !9506
  %135 = load i8, i8* %134, align 1, !dbg !9506
  %136 = sext i8 %135 to i32, !dbg !9506
  switch i32 %136, label %152 [
    i32 105, label %137
    i32 66, label %149
    i32 68, label %149
  ], !dbg !9508

; <label>:137:                                    ; preds = %130
  %138 = load i8**, i8*** %13, align 8, !dbg !9509
  %139 = getelementptr inbounds i8*, i8** %138, i64 0, !dbg !9509
  %140 = load i8*, i8** %139, align 8, !dbg !9509
  %141 = getelementptr inbounds i8, i8* %140, i64 2, !dbg !9509
  %142 = load i8, i8* %141, align 1, !dbg !9509
  %143 = sext i8 %142 to i32, !dbg !9509
  %144 = icmp eq i32 %143, 66, !dbg !9512
  br i1 %144, label %145, label %148, !dbg !9513

; <label>:145:                                    ; preds = %137
  %146 = load i32, i32* %19, align 4, !dbg !9514
  %147 = add nsw i32 %146, 2, !dbg !9514
  store i32 %147, i32* %19, align 4, !dbg !9514
  br label %148, !dbg !9515

; <label>:148:                                    ; preds = %145, %137
  br label %152, !dbg !9516

; <label>:149:                                    ; preds = %130, %130
  store i32 1000, i32* %18, align 4, !dbg !9517
  %150 = load i32, i32* %19, align 4, !dbg !9518
  %151 = add nsw i32 %150, 1, !dbg !9518
  store i32 %151, i32* %19, align 4, !dbg !9518
  br label %152, !dbg !9519

; <label>:152:                                    ; preds = %130, %149, %148
  br label %153, !dbg !9520

; <label>:153:                                    ; preds = %152, %126
  %154 = load i8**, i8*** %13, align 8, !dbg !9521
  %155 = load i8*, i8** %154, align 8, !dbg !9522
  %156 = load i8, i8* %155, align 1, !dbg !9523
  %157 = sext i8 %156 to i32, !dbg !9523
  switch i32 %157, label %189 [
    i32 98, label %158
    i32 66, label %160
    i32 99, label %162
    i32 69, label %163
    i32 71, label %166
    i32 103, label %166
    i32 107, label %169
    i32 75, label %169
    i32 77, label %172
    i32 109, label %172
    i32 80, label %175
    i32 84, label %178
    i32 116, label %178
    i32 119, label %181
    i32 89, label %183
    i32 90, label %186
  ], !dbg !9524

; <label>:158:                                    ; preds = %153
  %159 = call i32 @bkm_scale(i64* %14, i32 512), !dbg !9525
  store i32 %159, i32* %20, align 4, !dbg !9527
  br label %194, !dbg !9528

; <label>:160:                                    ; preds = %153
  %161 = call i32 @bkm_scale(i64* %14, i32 1024), !dbg !9529
  store i32 %161, i32* %20, align 4, !dbg !9530
  br label %194, !dbg !9531

; <label>:162:                                    ; preds = %153
  store i32 0, i32* %20, align 4, !dbg !9532
  br label %194, !dbg !9533

; <label>:163:                                    ; preds = %153
  %164 = load i32, i32* %18, align 4, !dbg !9534
  %165 = call i32 @bkm_scale_by_power(i64* %14, i32 %164, i32 6), !dbg !9535
  store i32 %165, i32* %20, align 4, !dbg !9536
  br label %194, !dbg !9537

; <label>:166:                                    ; preds = %153, %153
  %167 = load i32, i32* %18, align 4, !dbg !9538
  %168 = call i32 @bkm_scale_by_power(i64* %14, i32 %167, i32 3), !dbg !9539
  store i32 %168, i32* %20, align 4, !dbg !9540
  br label %194, !dbg !9541

; <label>:169:                                    ; preds = %153, %153
  %170 = load i32, i32* %18, align 4, !dbg !9542
  %171 = call i32 @bkm_scale_by_power(i64* %14, i32 %170, i32 1), !dbg !9543
  store i32 %171, i32* %20, align 4, !dbg !9544
  br label %194, !dbg !9545

; <label>:172:                                    ; preds = %153, %153
  %173 = load i32, i32* %18, align 4, !dbg !9546
  %174 = call i32 @bkm_scale_by_power(i64* %14, i32 %173, i32 2), !dbg !9547
  store i32 %174, i32* %20, align 4, !dbg !9548
  br label %194, !dbg !9549

; <label>:175:                                    ; preds = %153
  %176 = load i32, i32* %18, align 4, !dbg !9550
  %177 = call i32 @bkm_scale_by_power(i64* %14, i32 %176, i32 5), !dbg !9551
  store i32 %177, i32* %20, align 4, !dbg !9552
  br label %194, !dbg !9553

; <label>:178:                                    ; preds = %153, %153
  %179 = load i32, i32* %18, align 4, !dbg !9554
  %180 = call i32 @bkm_scale_by_power(i64* %14, i32 %179, i32 4), !dbg !9555
  store i32 %180, i32* %20, align 4, !dbg !9556
  br label %194, !dbg !9557

; <label>:181:                                    ; preds = %153
  %182 = call i32 @bkm_scale(i64* %14, i32 2), !dbg !9558
  store i32 %182, i32* %20, align 4, !dbg !9559
  br label %194, !dbg !9560

; <label>:183:                                    ; preds = %153
  %184 = load i32, i32* %18, align 4, !dbg !9561
  %185 = call i32 @bkm_scale_by_power(i64* %14, i32 %184, i32 8), !dbg !9562
  store i32 %185, i32* %20, align 4, !dbg !9563
  br label %194, !dbg !9564

; <label>:186:                                    ; preds = %153
  %187 = load i32, i32* %18, align 4, !dbg !9565
  %188 = call i32 @bkm_scale_by_power(i64* %14, i32 %187, i32 7), !dbg !9566
  store i32 %188, i32* %20, align 4, !dbg !9567
  br label %194, !dbg !9568

; <label>:189:                                    ; preds = %153
  %190 = load i64, i64* %14, align 8, !dbg !9569
  %191 = load i64*, i64** %10, align 8, !dbg !9570
  store i64 %190, i64* %191, align 8, !dbg !9571
  %192 = load i32, i32* %15, align 4, !dbg !9572
  %193 = or i32 %192, 2, !dbg !9573
  store i32 %193, i32* %6, align 4, !dbg !9574
  br label %215, !dbg !9574

; <label>:194:                                    ; preds = %186, %183, %181, %178, %175, %172, %169, %166, %163, %162, %160, %158
  %195 = load i32, i32* %20, align 4, !dbg !9575
  %196 = load i32, i32* %15, align 4, !dbg !9576
  %197 = or i32 %196, %195, !dbg !9576
  store i32 %197, i32* %15, align 4, !dbg !9576
  %198 = load i32, i32* %19, align 4, !dbg !9577
  %199 = load i8**, i8*** %13, align 8, !dbg !9578
  %200 = load i8*, i8** %199, align 8, !dbg !9579
  %201 = sext i32 %198 to i64, !dbg !9579
  %202 = getelementptr inbounds i8, i8* %200, i64 %201, !dbg !9579
  store i8* %202, i8** %199, align 8, !dbg !9579
  %203 = load i8**, i8*** %13, align 8, !dbg !9580
  %204 = load i8*, i8** %203, align 8, !dbg !9582
  %205 = load i8, i8* %204, align 1, !dbg !9583
  %206 = icmp ne i8 %205, 0, !dbg !9583
  br i1 %206, label %207, label %210, !dbg !9584

; <label>:207:                                    ; preds = %194
  %208 = load i32, i32* %15, align 4, !dbg !9585
  %209 = or i32 %208, 2, !dbg !9585
  store i32 %209, i32* %15, align 4, !dbg !9585
  br label %210, !dbg !9586

; <label>:210:                                    ; preds = %207, %194
  br label %211, !dbg !9587

; <label>:211:                                    ; preds = %210, %107
  %212 = load i64, i64* %14, align 8, !dbg !9588
  %213 = load i64*, i64** %10, align 8, !dbg !9589
  store i64 %212, i64* %213, align 8, !dbg !9590
  %214 = load i32, i32* %15, align 4, !dbg !9591
  store i32 %214, i32* %6, align 4, !dbg !9592
  br label %215, !dbg !9592

; <label>:215:                                    ; preds = %211, %189, %121, %103, %97, %87, %58
  %216 = load i32, i32* %6, align 4, !dbg !9593
  ret i32 %216, !dbg !9593
}

; Function Attrs: noreturn nounwind
declare void @__assert_fail(i8*, i8*, i32, i8*) #4

; Function Attrs: nounwind
declare i64 @strtoul(i8*, i8**, i32) #5

; Function Attrs: noinline nounwind uwtable
define internal i32 @bkm_scale(i64*, i32) #3 !dbg !9594 {
  %3 = alloca i32, align 4
  %4 = alloca i64*, align 8
  %5 = alloca i32, align 4
  store i64* %0, i64** %4, align 8
  call void @llvm.dbg.declare(metadata i64** %4, metadata !9597, metadata !DIExpression()), !dbg !9598
  store i32 %1, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !9599, metadata !DIExpression()), !dbg !9600
  %6 = load i32, i32* %5, align 4, !dbg !9601
  %7 = sext i32 %6 to i64, !dbg !9601
  %8 = udiv i64 -1, %7, !dbg !9603
  %9 = load i64*, i64** %4, align 8, !dbg !9604
  %10 = load i64, i64* %9, align 8, !dbg !9605
  %11 = icmp ult i64 %8, %10, !dbg !9606
  br i1 %11, label %12, label %14, !dbg !9607

; <label>:12:                                     ; preds = %2
  %13 = load i64*, i64** %4, align 8, !dbg !9608
  store i64 -1, i64* %13, align 8, !dbg !9610
  store i32 1, i32* %3, align 4, !dbg !9611
  br label %20, !dbg !9611

; <label>:14:                                     ; preds = %2
  %15 = load i32, i32* %5, align 4, !dbg !9612
  %16 = sext i32 %15 to i64, !dbg !9612
  %17 = load i64*, i64** %4, align 8, !dbg !9613
  %18 = load i64, i64* %17, align 8, !dbg !9614
  %19 = mul i64 %18, %16, !dbg !9614
  store i64 %19, i64* %17, align 8, !dbg !9614
  store i32 0, i32* %3, align 4, !dbg !9615
  br label %20, !dbg !9615

; <label>:20:                                     ; preds = %14, %12
  %21 = load i32, i32* %3, align 4, !dbg !9616
  ret i32 %21, !dbg !9616
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @bkm_scale_by_power(i64*, i32, i32) #3 !dbg !9617 {
  %4 = alloca i64*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  store i64* %0, i64** %4, align 8
  call void @llvm.dbg.declare(metadata i64** %4, metadata !9620, metadata !DIExpression()), !dbg !9621
  store i32 %1, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !9622, metadata !DIExpression()), !dbg !9623
  store i32 %2, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !9624, metadata !DIExpression()), !dbg !9625
  call void @llvm.dbg.declare(metadata i32* %7, metadata !9626, metadata !DIExpression()), !dbg !9627
  store i32 0, i32* %7, align 4, !dbg !9627
  br label %8, !dbg !9628

; <label>:8:                                      ; preds = %12, %3
  %9 = load i32, i32* %6, align 4, !dbg !9629
  %10 = add nsw i32 %9, -1, !dbg !9629
  store i32 %10, i32* %6, align 4, !dbg !9629
  %11 = icmp ne i32 %9, 0, !dbg !9628
  br i1 %11, label %12, label %18, !dbg !9628

; <label>:12:                                     ; preds = %8
  %13 = load i64*, i64** %4, align 8, !dbg !9630
  %14 = load i32, i32* %5, align 4, !dbg !9631
  %15 = call i32 @bkm_scale(i64* %13, i32 %14), !dbg !9632
  %16 = load i32, i32* %7, align 4, !dbg !9633
  %17 = or i32 %16, %15, !dbg !9633
  store i32 %17, i32* %7, align 4, !dbg !9633
  br label %8, !dbg !9628, !llvm.loop !9634

; <label>:18:                                     ; preds = %8
  %19 = load i32, i32* %7, align 4, !dbg !9636
  ret i32 %19, !dbg !9637
}

; Function Attrs: noinline nounwind uwtable
define %struct.FTS* @xfts_open(i8**, i32, i32 (%struct._ftsent**, %struct._ftsent**)*) #3 !dbg !9638 {
  %4 = alloca i8**, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32 (%struct._ftsent**, %struct._ftsent**)*, align 8
  %7 = alloca %struct.FTS*, align 8
  store i8** %0, i8*** %4, align 8
  call void @llvm.dbg.declare(metadata i8*** %4, metadata !9731, metadata !DIExpression()), !dbg !9732
  store i32 %1, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !9733, metadata !DIExpression()), !dbg !9734
  store i32 (%struct._ftsent**, %struct._ftsent**)* %2, i32 (%struct._ftsent**, %struct._ftsent**)** %6, align 8
  call void @llvm.dbg.declare(metadata i32 (%struct._ftsent**, %struct._ftsent**)** %6, metadata !9735, metadata !DIExpression()), !dbg !9736
  call void @llvm.dbg.declare(metadata %struct.FTS** %7, metadata !9737, metadata !DIExpression()), !dbg !9738
  %8 = load i8**, i8*** %4, align 8, !dbg !9739
  %9 = load i32, i32* %5, align 4, !dbg !9740
  %10 = or i32 %9, 512, !dbg !9741
  %11 = load i32 (%struct._ftsent**, %struct._ftsent**)*, i32 (%struct._ftsent**, %struct._ftsent**)** %6, align 8, !dbg !9742
  %12 = call %struct.FTS* @fts_open(i8** %8, i32 %10, i32 (%struct._ftsent**, %struct._ftsent**)* %11), !dbg !9743
  store %struct.FTS* %12, %struct.FTS** %7, align 8, !dbg !9738
  %13 = load %struct.FTS*, %struct.FTS** %7, align 8, !dbg !9744
  %14 = icmp eq %struct.FTS* %13, null, !dbg !9746
  br i1 %14, label %15, label %22, !dbg !9747

; <label>:15:                                     ; preds = %3
  %16 = call i32* @__errno_location() #14, !dbg !9748
  %17 = load i32, i32* %16, align 4, !dbg !9748
  %18 = icmp ne i32 %17, 22, !dbg !9748
  br i1 %18, label %19, label %20, !dbg !9752

; <label>:19:                                     ; preds = %15
  br label %21, !dbg !9752

; <label>:20:                                     ; preds = %15
  call void @__assert_fail(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.195, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.1.196, i32 0, i32 0), i32 41, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @__PRETTY_FUNCTION__.xfts_open, i32 0, i32 0)) #11, !dbg !9748
  unreachable, !dbg !9748

; <label>:21:                                     ; preds = %19
  call void @xalloc_die() #13, !dbg !9753
  unreachable, !dbg !9753

; <label>:22:                                     ; preds = %3
  %23 = load %struct.FTS*, %struct.FTS** %7, align 8, !dbg !9754
  ret %struct.FTS* %23, !dbg !9755
}

; Function Attrs: noinline nounwind uwtable
define zeroext i1 @cycle_warning_required(%struct.FTS*, %struct._ftsent*) #3 !dbg !9756 {
  %3 = alloca %struct.FTS*, align 8
  %4 = alloca %struct._ftsent*, align 8
  store %struct.FTS* %0, %struct.FTS** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.FTS** %3, metadata !9761, metadata !DIExpression()), !dbg !9762
  store %struct._ftsent* %1, %struct._ftsent** %4, align 8
  call void @llvm.dbg.declare(metadata %struct._ftsent** %4, metadata !9763, metadata !DIExpression()), !dbg !9764
  %5 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !9765
  %6 = getelementptr inbounds %struct.FTS, %struct.FTS* %5, i32 0, i32 10, !dbg !9765
  %7 = load i32, i32* %6, align 8, !dbg !9765
  %8 = and i32 %7, 16, !dbg !9765
  %9 = icmp ne i32 %8, 0, !dbg !9765
  br i1 %9, label %10, label %16, !dbg !9766

; <label>:10:                                     ; preds = %2
  %11 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !9767
  %12 = getelementptr inbounds %struct.FTS, %struct.FTS* %11, i32 0, i32 10, !dbg !9767
  %13 = load i32, i32* %12, align 8, !dbg !9767
  %14 = and i32 %13, 1, !dbg !9767
  %15 = icmp ne i32 %14, 0, !dbg !9767
  br i1 %15, label %16, label %35, !dbg !9768

; <label>:16:                                     ; preds = %10, %2
  %17 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !9769
  %18 = getelementptr inbounds %struct.FTS, %struct.FTS* %17, i32 0, i32 10, !dbg !9769
  %19 = load i32, i32* %18, align 8, !dbg !9769
  %20 = and i32 %19, 16, !dbg !9769
  %21 = icmp ne i32 %20, 0, !dbg !9769
  br i1 %21, label %22, label %33, !dbg !9770

; <label>:22:                                     ; preds = %16
  %23 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !9771
  %24 = getelementptr inbounds %struct.FTS, %struct.FTS* %23, i32 0, i32 10, !dbg !9771
  %25 = load i32, i32* %24, align 8, !dbg !9771
  %26 = and i32 %25, 1, !dbg !9771
  %27 = icmp ne i32 %26, 0, !dbg !9771
  br i1 %27, label %28, label %33, !dbg !9772

; <label>:28:                                     ; preds = %22
  %29 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !9773
  %30 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %29, i32 0, i32 11, !dbg !9774
  %31 = load i64, i64* %30, align 8, !dbg !9774
  %32 = icmp ne i64 %31, 0, !dbg !9775
  br label %33

; <label>:33:                                     ; preds = %28, %22, %16
  %34 = phi i1 [ false, %22 ], [ false, %16 ], [ %32, %28 ]
  br label %35, !dbg !9768

; <label>:35:                                     ; preds = %33, %10
  %36 = phi i1 [ true, %10 ], [ %34, %33 ]
  ret i1 %36, !dbg !9776
}

; Function Attrs: noinline noreturn nounwind uwtable
define void @xalloc_die() #0 !dbg !9777 {
  %1 = load volatile i32, i32* @exit_failure, align 4, !dbg !9778
  call void (i32, i32, i8*, ...) @error(i32 %1, i32 0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.201, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.1.202, i32 0, i32 0)), !dbg !9779
  call void @abort() #11, !dbg !9780
  unreachable, !dbg !9780
                                                  ; No predecessors!
  unreachable, !dbg !9781
}

; Function Attrs: noinline nounwind uwtable
define i32 @set_cloexec_flag(i32, i1 zeroext) #3 !dbg !9782 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8, align 1
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  store i32 %0, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !9785, metadata !DIExpression()), !dbg !9786
  %8 = zext i1 %1 to i8
  store i8 %8, i8* %5, align 1
  call void @llvm.dbg.declare(metadata i8* %5, metadata !9787, metadata !DIExpression()), !dbg !9788
  call void @llvm.dbg.declare(metadata i32* %6, metadata !9789, metadata !DIExpression()), !dbg !9790
  %9 = load i32, i32* %4, align 4, !dbg !9791
  %10 = call i32 (i32, i32, ...) @fcntl(i32 %9, i32 1, i32 0), !dbg !9792
  store i32 %10, i32* %6, align 4, !dbg !9790
  %11 = load i32, i32* %6, align 4, !dbg !9793
  %12 = icmp sle i32 0, %11, !dbg !9795
  br i1 %12, label %13, label %34, !dbg !9796

; <label>:13:                                     ; preds = %2
  call void @llvm.dbg.declare(metadata i32* %7, metadata !9797, metadata !DIExpression()), !dbg !9799
  %14 = load i8, i8* %5, align 1, !dbg !9800
  %15 = trunc i8 %14 to i1, !dbg !9800
  br i1 %15, label %16, label %19, !dbg !9800

; <label>:16:                                     ; preds = %13
  %17 = load i32, i32* %6, align 4, !dbg !9801
  %18 = or i32 %17, 1, !dbg !9802
  br label %22, !dbg !9800

; <label>:19:                                     ; preds = %13
  %20 = load i32, i32* %6, align 4, !dbg !9803
  %21 = and i32 %20, -2, !dbg !9804
  br label %22, !dbg !9800

; <label>:22:                                     ; preds = %19, %16
  %23 = phi i32 [ %18, %16 ], [ %21, %19 ], !dbg !9800
  store i32 %23, i32* %7, align 4, !dbg !9799
  %24 = load i32, i32* %6, align 4, !dbg !9805
  %25 = load i32, i32* %7, align 4, !dbg !9807
  %26 = icmp eq i32 %24, %25, !dbg !9808
  br i1 %26, label %32, label %27, !dbg !9809

; <label>:27:                                     ; preds = %22
  %28 = load i32, i32* %4, align 4, !dbg !9810
  %29 = load i32, i32* %7, align 4, !dbg !9811
  %30 = call i32 (i32, i32, ...) @fcntl(i32 %28, i32 2, i32 %29), !dbg !9812
  %31 = icmp ne i32 %30, -1, !dbg !9813
  br i1 %31, label %32, label %33, !dbg !9814

; <label>:32:                                     ; preds = %27, %22
  store i32 0, i32* %3, align 4, !dbg !9815
  br label %35, !dbg !9815

; <label>:33:                                     ; preds = %27
  br label %34, !dbg !9816

; <label>:34:                                     ; preds = %33, %2
  store i32 -1, i32* %3, align 4, !dbg !9817
  br label %35, !dbg !9817

; <label>:35:                                     ; preds = %34, %32
  %36 = load i32, i32* %3, align 4, !dbg !9818
  ret i32 %36, !dbg !9818
}

declare i32 @fcntl(i32, i32, ...) #2

; Function Attrs: noinline nounwind uwtable
define i32 @dup_cloexec(i32) #3 !dbg !9819 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !9822, metadata !DIExpression()), !dbg !9823
  call void @llvm.dbg.declare(metadata i32* %3, metadata !9824, metadata !DIExpression()), !dbg !9825
  %4 = load i32, i32* %2, align 4, !dbg !9826
  %5 = call i32 (i32, i32, ...) @fcntl(i32 %4, i32 1030, i32 0), !dbg !9827
  store i32 %5, i32* %3, align 4, !dbg !9828
  %6 = load i32, i32* %3, align 4, !dbg !9829
  ret i32 %6, !dbg !9830
}

; Function Attrs: noinline nounwind uwtable
define i32 @close_stream(%struct._IO_FILE*) #3 !dbg !9831 {
  %2 = alloca i32, align 4
  %3 = alloca %struct._IO_FILE*, align 8
  %4 = alloca i8, align 1
  %5 = alloca i8, align 1
  %6 = alloca i8, align 1
  store %struct._IO_FILE* %0, %struct._IO_FILE** %3, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %3, metadata !9874, metadata !DIExpression()), !dbg !9875
  call void @llvm.dbg.declare(metadata i8* %4, metadata !9876, metadata !DIExpression()), !dbg !9877
  %7 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8, !dbg !9878
  %8 = call i64 @__fpending(%struct._IO_FILE* %7) #8, !dbg !9879
  %9 = icmp ne i64 %8, 0, !dbg !9880
  %10 = zext i1 %9 to i8, !dbg !9877
  store i8 %10, i8* %4, align 1, !dbg !9877
  call void @llvm.dbg.declare(metadata i8* %5, metadata !9881, metadata !DIExpression()), !dbg !9882
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8, !dbg !9883
  %12 = call i32 @ferror_unlocked(%struct._IO_FILE* %11) #8, !dbg !9883
  %13 = icmp ne i32 %12, 0, !dbg !9884
  %14 = zext i1 %13 to i8, !dbg !9882
  store i8 %14, i8* %5, align 1, !dbg !9882
  call void @llvm.dbg.declare(metadata i8* %6, metadata !9885, metadata !DIExpression()), !dbg !9886
  %15 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8, !dbg !9887
  %16 = call i32 @fclose(%struct._IO_FILE* %15), !dbg !9888
  %17 = icmp ne i32 %16, 0, !dbg !9889
  %18 = zext i1 %17 to i8, !dbg !9886
  store i8 %18, i8* %6, align 1, !dbg !9886
  %19 = load i8, i8* %5, align 1, !dbg !9890
  %20 = trunc i8 %19 to i1, !dbg !9890
  br i1 %20, label %31, label %21, !dbg !9892

; <label>:21:                                     ; preds = %1
  %22 = load i8, i8* %6, align 1, !dbg !9893
  %23 = trunc i8 %22 to i1, !dbg !9893
  br i1 %23, label %24, label %37, !dbg !9894

; <label>:24:                                     ; preds = %21
  %25 = load i8, i8* %4, align 1, !dbg !9895
  %26 = trunc i8 %25 to i1, !dbg !9895
  br i1 %26, label %31, label %27, !dbg !9896

; <label>:27:                                     ; preds = %24
  %28 = call i32* @__errno_location() #14, !dbg !9897
  %29 = load i32, i32* %28, align 4, !dbg !9897
  %30 = icmp ne i32 %29, 9, !dbg !9898
  br i1 %30, label %31, label %37, !dbg !9899

; <label>:31:                                     ; preds = %27, %24, %1
  %32 = load i8, i8* %6, align 1, !dbg !9900
  %33 = trunc i8 %32 to i1, !dbg !9900
  br i1 %33, label %36, label %34, !dbg !9903

; <label>:34:                                     ; preds = %31
  %35 = call i32* @__errno_location() #14, !dbg !9904
  store i32 0, i32* %35, align 4, !dbg !9905
  br label %36, !dbg !9904

; <label>:36:                                     ; preds = %34, %31
  store i32 -1, i32* %2, align 4, !dbg !9906
  br label %38, !dbg !9906

; <label>:37:                                     ; preds = %27, %21
  store i32 0, i32* %2, align 4, !dbg !9907
  br label %38, !dbg !9907

; <label>:38:                                     ; preds = %37, %36
  %39 = load i32, i32* %2, align 4, !dbg !9908
  ret i32 %39, !dbg !9908
}

; Function Attrs: nounwind
declare i64 @__fpending(%struct._IO_FILE*) #5

; Function Attrs: nounwind
declare i32 @ferror_unlocked(%struct._IO_FILE*) #5

declare i32 @fclose(%struct._IO_FILE*) #2

; Function Attrs: noinline nounwind uwtable
define void @cycle_check_init(%struct.cycle_check_state*) #3 !dbg !9909 {
  %2 = alloca %struct.cycle_check_state*, align 8
  store %struct.cycle_check_state* %0, %struct.cycle_check_state** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.cycle_check_state** %2, metadata !9922, metadata !DIExpression()), !dbg !9923
  %3 = load %struct.cycle_check_state*, %struct.cycle_check_state** %2, align 8, !dbg !9924
  %4 = getelementptr inbounds %struct.cycle_check_state, %struct.cycle_check_state* %3, i32 0, i32 1, !dbg !9925
  store i64 0, i64* %4, align 8, !dbg !9926
  %5 = load %struct.cycle_check_state*, %struct.cycle_check_state** %2, align 8, !dbg !9927
  %6 = getelementptr inbounds %struct.cycle_check_state, %struct.cycle_check_state* %5, i32 0, i32 2, !dbg !9928
  store i32 9827862, i32* %6, align 8, !dbg !9929
  ret void, !dbg !9930
}

; Function Attrs: noinline nounwind uwtable
define zeroext i1 @cycle_check(%struct.cycle_check_state*, %struct.stat*) #3 !dbg !9931 {
  %3 = alloca i1, align 1
  %4 = alloca %struct.cycle_check_state*, align 8
  %5 = alloca %struct.stat*, align 8
  store %struct.cycle_check_state* %0, %struct.cycle_check_state** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.cycle_check_state** %4, metadata !9957, metadata !DIExpression()), !dbg !9958
  store %struct.stat* %1, %struct.stat** %5, align 8
  call void @llvm.dbg.declare(metadata %struct.stat** %5, metadata !9959, metadata !DIExpression()), !dbg !9960
  %6 = load %struct.cycle_check_state*, %struct.cycle_check_state** %4, align 8, !dbg !9961
  %7 = getelementptr inbounds %struct.cycle_check_state, %struct.cycle_check_state* %6, i32 0, i32 2, !dbg !9961
  %8 = load i32, i32* %7, align 8, !dbg !9961
  %9 = icmp eq i32 %8, 9827862, !dbg !9961
  br i1 %9, label %10, label %11, !dbg !9964

; <label>:10:                                     ; preds = %2
  br label %12, !dbg !9964

; <label>:11:                                     ; preds = %2
  call void @__assert_fail(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.211, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.1.212, i32 0, i32 0), i32 60, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @__PRETTY_FUNCTION__.cycle_check, i32 0, i32 0)) #11, !dbg !9961
  unreachable, !dbg !9961

; <label>:12:                                     ; preds = %10
  %13 = load %struct.cycle_check_state*, %struct.cycle_check_state** %4, align 8, !dbg !9965
  %14 = getelementptr inbounds %struct.cycle_check_state, %struct.cycle_check_state* %13, i32 0, i32 1, !dbg !9967
  %15 = load i64, i64* %14, align 8, !dbg !9967
  %16 = icmp ne i64 %15, 0, !dbg !9965
  br i1 %16, label %17, label %36, !dbg !9968

; <label>:17:                                     ; preds = %12
  %18 = load %struct.stat*, %struct.stat** %5, align 8, !dbg !9969
  %19 = getelementptr inbounds %struct.stat, %struct.stat* %18, i32 0, i32 1, !dbg !9969
  %20 = load i64, i64* %19, align 8, !dbg !9969
  %21 = load %struct.cycle_check_state*, %struct.cycle_check_state** %4, align 8, !dbg !9969
  %22 = getelementptr inbounds %struct.cycle_check_state, %struct.cycle_check_state* %21, i32 0, i32 0, !dbg !9969
  %23 = getelementptr inbounds %struct.dev_ino, %struct.dev_ino* %22, i32 0, i32 0, !dbg !9969
  %24 = load i64, i64* %23, align 8, !dbg !9969
  %25 = icmp eq i64 %20, %24, !dbg !9969
  br i1 %25, label %26, label %36, !dbg !9969

; <label>:26:                                     ; preds = %17
  %27 = load %struct.stat*, %struct.stat** %5, align 8, !dbg !9969
  %28 = getelementptr inbounds %struct.stat, %struct.stat* %27, i32 0, i32 0, !dbg !9969
  %29 = load i64, i64* %28, align 8, !dbg !9969
  %30 = load %struct.cycle_check_state*, %struct.cycle_check_state** %4, align 8, !dbg !9969
  %31 = getelementptr inbounds %struct.cycle_check_state, %struct.cycle_check_state* %30, i32 0, i32 0, !dbg !9969
  %32 = getelementptr inbounds %struct.dev_ino, %struct.dev_ino* %31, i32 0, i32 1, !dbg !9969
  %33 = load i64, i64* %32, align 8, !dbg !9969
  %34 = icmp eq i64 %29, %33, !dbg !9969
  br i1 %34, label %35, label %36, !dbg !9970

; <label>:35:                                     ; preds = %26
  store i1 true, i1* %3, align 1, !dbg !9971
  br label %62, !dbg !9971

; <label>:36:                                     ; preds = %26, %17, %12
  %37 = load %struct.cycle_check_state*, %struct.cycle_check_state** %4, align 8, !dbg !9972
  %38 = getelementptr inbounds %struct.cycle_check_state, %struct.cycle_check_state* %37, i32 0, i32 1, !dbg !9974
  %39 = load i64, i64* %38, align 8, !dbg !9975
  %40 = add i64 %39, 1, !dbg !9975
  store i64 %40, i64* %38, align 8, !dbg !9975
  %41 = call zeroext i1 @is_zero_or_power_of_two(i64 %40), !dbg !9976
  br i1 %41, label %42, label %61, !dbg !9977

; <label>:42:                                     ; preds = %36
  %43 = load %struct.cycle_check_state*, %struct.cycle_check_state** %4, align 8, !dbg !9978
  %44 = getelementptr inbounds %struct.cycle_check_state, %struct.cycle_check_state* %43, i32 0, i32 1, !dbg !9981
  %45 = load i64, i64* %44, align 8, !dbg !9981
  %46 = icmp eq i64 %45, 0, !dbg !9982
  br i1 %46, label %47, label %48, !dbg !9983

; <label>:47:                                     ; preds = %42
  store i1 true, i1* %3, align 1, !dbg !9984
  br label %62, !dbg !9984

; <label>:48:                                     ; preds = %42
  %49 = load %struct.stat*, %struct.stat** %5, align 8, !dbg !9985
  %50 = getelementptr inbounds %struct.stat, %struct.stat* %49, i32 0, i32 0, !dbg !9986
  %51 = load i64, i64* %50, align 8, !dbg !9986
  %52 = load %struct.cycle_check_state*, %struct.cycle_check_state** %4, align 8, !dbg !9987
  %53 = getelementptr inbounds %struct.cycle_check_state, %struct.cycle_check_state* %52, i32 0, i32 0, !dbg !9988
  %54 = getelementptr inbounds %struct.dev_ino, %struct.dev_ino* %53, i32 0, i32 1, !dbg !9989
  store i64 %51, i64* %54, align 8, !dbg !9990
  %55 = load %struct.stat*, %struct.stat** %5, align 8, !dbg !9991
  %56 = getelementptr inbounds %struct.stat, %struct.stat* %55, i32 0, i32 1, !dbg !9992
  %57 = load i64, i64* %56, align 8, !dbg !9992
  %58 = load %struct.cycle_check_state*, %struct.cycle_check_state** %4, align 8, !dbg !9993
  %59 = getelementptr inbounds %struct.cycle_check_state, %struct.cycle_check_state* %58, i32 0, i32 0, !dbg !9994
  %60 = getelementptr inbounds %struct.dev_ino, %struct.dev_ino* %59, i32 0, i32 0, !dbg !9995
  store i64 %57, i64* %60, align 8, !dbg !9996
  br label %61, !dbg !9997

; <label>:61:                                     ; preds = %48, %36
  store i1 false, i1* %3, align 1, !dbg !9998
  br label %62, !dbg !9998

; <label>:62:                                     ; preds = %61, %47, %35
  %63 = load i1, i1* %3, align 1, !dbg !9999
  ret i1 %63, !dbg !9999
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i1 @is_zero_or_power_of_two(i64) #3 !dbg !10000 {
  %2 = alloca i64, align 8
  store i64 %0, i64* %2, align 8
  call void @llvm.dbg.declare(metadata i64* %2, metadata !10003, metadata !DIExpression()), !dbg !10004
  %3 = load i64, i64* %2, align 8, !dbg !10005
  %4 = load i64, i64* %2, align 8, !dbg !10006
  %5 = sub i64 %4, 1, !dbg !10007
  %6 = and i64 %3, %5, !dbg !10008
  %7 = icmp eq i64 %6, 0, !dbg !10009
  ret i1 %7, !dbg !10010
}

; Function Attrs: noinline nounwind uwtable
define i32 @dup_safer(i32) #3 !dbg !10011 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !10012, metadata !DIExpression()), !dbg !10013
  %3 = load i32, i32* %2, align 4, !dbg !10014
  %4 = call i32 (i32, i32, ...) @fcntl(i32 %3, i32 0, i32 3), !dbg !10015
  ret i32 %4, !dbg !10016
}

; Function Attrs: noinline nounwind uwtable
define i32 @dup_safer_flag(i32, i32) #3 !dbg !10017 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  store i32 %0, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !10020, metadata !DIExpression()), !dbg !10021
  store i32 %1, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !10022, metadata !DIExpression()), !dbg !10023
  %6 = load i32, i32* %5, align 4, !dbg !10024
  %7 = and i32 %6, 524288, !dbg !10026
  %8 = icmp ne i32 %7, 0, !dbg !10026
  br i1 %8, label %9, label %12, !dbg !10027

; <label>:9:                                      ; preds = %2
  %10 = load i32, i32* %4, align 4, !dbg !10028
  %11 = call i32 (i32, i32, ...) @fcntl(i32 %10, i32 1030, i32 3), !dbg !10030
  store i32 %11, i32* %3, align 4, !dbg !10031
  br label %15, !dbg !10031

; <label>:12:                                     ; preds = %2
  %13 = load i32, i32* %4, align 4, !dbg !10032
  %14 = call i32 @dup_safer(i32 %13), !dbg !10033
  store i32 %14, i32* %3, align 4, !dbg !10034
  br label %15, !dbg !10034

; <label>:15:                                     ; preds = %12, %9
  %16 = load i32, i32* %3, align 4, !dbg !10035
  ret i32 %16, !dbg !10035
}

; Function Attrs: noinline nounwind uwtable
define i32 @fd_safer(i32) #3 !dbg !10036 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !10037, metadata !DIExpression()), !dbg !10038
  %5 = load i32, i32* %2, align 4, !dbg !10039
  %6 = icmp sle i32 0, %5, !dbg !10041
  br i1 %6, label %7, label %20, !dbg !10042

; <label>:7:                                      ; preds = %1
  %8 = load i32, i32* %2, align 4, !dbg !10043
  %9 = icmp sle i32 %8, 2, !dbg !10044
  br i1 %9, label %10, label %20, !dbg !10045

; <label>:10:                                     ; preds = %7
  call void @llvm.dbg.declare(metadata i32* %3, metadata !10046, metadata !DIExpression()), !dbg !10048
  %11 = load i32, i32* %2, align 4, !dbg !10049
  %12 = call i32 @dup_safer(i32 %11), !dbg !10050
  store i32 %12, i32* %3, align 4, !dbg !10048
  call void @llvm.dbg.declare(metadata i32* %4, metadata !10051, metadata !DIExpression()), !dbg !10052
  %13 = call i32* @__errno_location() #14, !dbg !10053
  %14 = load i32, i32* %13, align 4, !dbg !10053
  store i32 %14, i32* %4, align 4, !dbg !10052
  %15 = load i32, i32* %2, align 4, !dbg !10054
  %16 = call i32 @close(i32 %15), !dbg !10055
  %17 = load i32, i32* %4, align 4, !dbg !10056
  %18 = call i32* @__errno_location() #14, !dbg !10057
  store i32 %17, i32* %18, align 4, !dbg !10058
  %19 = load i32, i32* %3, align 4, !dbg !10059
  store i32 %19, i32* %2, align 4, !dbg !10060
  br label %20, !dbg !10061

; <label>:20:                                     ; preds = %10, %7, %1
  %21 = load i32, i32* %2, align 4, !dbg !10062
  ret i32 %21, !dbg !10063
}

; Function Attrs: noinline nounwind uwtable
define i32 @fd_safer_flag(i32, i32) #3 !dbg !10064 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !10065, metadata !DIExpression()), !dbg !10066
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !10067, metadata !DIExpression()), !dbg !10068
  %7 = load i32, i32* %3, align 4, !dbg !10069
  %8 = icmp sle i32 0, %7, !dbg !10071
  br i1 %8, label %9, label %23, !dbg !10072

; <label>:9:                                      ; preds = %2
  %10 = load i32, i32* %3, align 4, !dbg !10073
  %11 = icmp sle i32 %10, 2, !dbg !10074
  br i1 %11, label %12, label %23, !dbg !10075

; <label>:12:                                     ; preds = %9
  call void @llvm.dbg.declare(metadata i32* %5, metadata !10076, metadata !DIExpression()), !dbg !10078
  %13 = load i32, i32* %3, align 4, !dbg !10079
  %14 = load i32, i32* %4, align 4, !dbg !10080
  %15 = call i32 @dup_safer_flag(i32 %13, i32 %14), !dbg !10081
  store i32 %15, i32* %5, align 4, !dbg !10078
  call void @llvm.dbg.declare(metadata i32* %6, metadata !10082, metadata !DIExpression()), !dbg !10083
  %16 = call i32* @__errno_location() #14, !dbg !10084
  %17 = load i32, i32* %16, align 4, !dbg !10084
  store i32 %17, i32* %6, align 4, !dbg !10083
  %18 = load i32, i32* %3, align 4, !dbg !10085
  %19 = call i32 @close(i32 %18), !dbg !10086
  %20 = load i32, i32* %6, align 4, !dbg !10087
  %21 = call i32* @__errno_location() #14, !dbg !10088
  store i32 %20, i32* %21, align 4, !dbg !10089
  %22 = load i32, i32* %5, align 4, !dbg !10090
  store i32 %22, i32* %3, align 4, !dbg !10091
  br label %23, !dbg !10092

; <label>:23:                                     ; preds = %12, %9, %2
  %24 = load i32, i32* %3, align 4, !dbg !10093
  ret i32 %24, !dbg !10094
}

; Function Attrs: noinline nounwind uwtable
define %struct.__dirstream* @rpl_fdopendir(i32) #3 !dbg !10095 {
  %2 = alloca %struct.__dirstream*, align 8
  %3 = alloca i32, align 4
  %4 = alloca %struct.stat, align 8
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !10098, metadata !DIExpression()), !dbg !10099
  call void @llvm.dbg.declare(metadata %struct.stat* %4, metadata !10100, metadata !DIExpression()), !dbg !10122
  %5 = load i32, i32* %3, align 4, !dbg !10123
  %6 = call i32 @fstat(i32 %5, %struct.stat* %4) #8, !dbg !10125
  %7 = icmp ne i32 %6, 0, !dbg !10125
  br i1 %7, label %8, label %9, !dbg !10126

; <label>:8:                                      ; preds = %1
  store %struct.__dirstream* null, %struct.__dirstream** %2, align 8, !dbg !10127
  br label %19, !dbg !10127

; <label>:9:                                      ; preds = %1
  %10 = getelementptr inbounds %struct.stat, %struct.stat* %4, i32 0, i32 3, !dbg !10128
  %11 = load i32, i32* %10, align 8, !dbg !10128
  %12 = and i32 %11, 61440, !dbg !10128
  %13 = icmp eq i32 %12, 16384, !dbg !10128
  br i1 %13, label %16, label %14, !dbg !10130

; <label>:14:                                     ; preds = %9
  %15 = call i32* @__errno_location() #14, !dbg !10131
  store i32 20, i32* %15, align 4, !dbg !10133
  store %struct.__dirstream* null, %struct.__dirstream** %2, align 8, !dbg !10134
  br label %19, !dbg !10134

; <label>:16:                                     ; preds = %9
  %17 = load i32, i32* %3, align 4, !dbg !10135
  %18 = call %struct.__dirstream* @fdopendir(i32 %17), !dbg !10136
  store %struct.__dirstream* %18, %struct.__dirstream** %2, align 8, !dbg !10137
  br label %19, !dbg !10137

; <label>:19:                                     ; preds = %16, %14, %8
  %20 = load %struct.__dirstream*, %struct.__dirstream** %2, align 8, !dbg !10138
  ret %struct.__dirstream* %20, !dbg !10138
}

declare %struct.__dirstream* @fdopendir(i32) #2

attributes #0 = { noinline noreturn nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { argmemonly nounwind }
attributes #11 = { noreturn nounwind }
attributes #12 = { nounwind readonly }
attributes #13 = { noreturn }
attributes #14 = { nounwind readnone }

!llvm.dbg.cu = !{!2, !212, !54, !59, !233, !65, !240, !73, !82, !243, !88, !410, !416, !418, !420, !422, !107, !425, !427, !196, !430, !442, !446, !449, !451, !453, !455, !457, !459, !461}
!llvm.ident = !{!463, !463, !463, !463, !463, !463, !463, !463, !463, !463, !463, !463, !463, !463, !463, !463, !463, !463, !463, !463, !463, !463, !463, !463, !463, !463, !463, !463, !463, !463}
!llvm.module.flags = !{!464, !465, !466}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "long_options", scope: !2, file: !3, line: 54, type: !40, isLocal: true, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 6.0.0 (tags/RELEASE_600/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !11, globals: !17)
!3 = !DIFile(filename: "../../src/chown.c", directory: "/home/ma481/Downloads/Chisel/chisel-bench/benchmark/chown-8.2/original/obj-llvm/src")
!4 = !{!5}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "Verbosity", file: !6, line: 31, size: 32, elements: !7)
!6 = !DIFile(filename: "../../src/chown-core.h", directory: "/home/ma481/Downloads/Chisel/chisel-bench/benchmark/chown-8.2/original/obj-llvm/src")
!7 = !{!8, !9, !10}
!8 = !DIEnumerator(name: "V_high", value: 0)
!9 = !DIEnumerator(name: "V_changes_only", value: 1)
!10 = !DIEnumerator(name: "V_off", value: 2)
!11 = !{!12, !15, !16}
!12 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13, size: 64)
!13 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !14)
!14 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!15 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14, size: 64)
!16 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!17 = !{!18, !38, !0}
!18 = !DIGlobalVariableExpression(var: !19, expr: !DIExpression())
!19 = distinct !DIGlobalVariable(name: "dev_ino_buf", scope: !20, file: !3, line: 315, type: !26, isLocal: true, isDefinition: true)
!20 = distinct !DISubprogram(name: "main", scope: !3, file: !3, line: 155, type: !21, isLocal: false, isDefinition: true, scopeLine: 156, flags: DIFlagPrototyped, isOptimized: false, unit: !2, variables: !25)
!21 = !DISubroutineType(types: !22)
!22 = !{!23, !23, !24}
!23 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!24 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15, size: 64)
!25 = !{}
!26 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_ino", file: !27, line: 7, size: 128, elements: !28)
!27 = !DIFile(filename: "../../lib/dev-ino.h", directory: "/home/ma481/Downloads/Chisel/chisel-bench/benchmark/chown-8.2/original/obj-llvm/src")
!28 = !{!29, !35}
!29 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !26, file: !27, line: 9, baseType: !30, size: 64)
!30 = !DIDerivedType(tag: DW_TAG_typedef, name: "ino_t", file: !31, line: 48, baseType: !32)
!31 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/sys/types.h", directory: "/home/ma481/Downloads/Chisel/chisel-bench/benchmark/chown-8.2/original/obj-llvm/src")
!32 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ino_t", file: !33, line: 136, baseType: !34)
!33 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "/home/ma481/Downloads/Chisel/chisel-bench/benchmark/chown-8.2/original/obj-llvm/src")
!34 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!35 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !26, file: !27, line: 10, baseType: !36, size: 64, offset: 64)
!36 = !DIDerivedType(tag: DW_TAG_typedef, name: "dev_t", file: !31, line: 60, baseType: !37)
!37 = !DIDerivedType(tag: DW_TAG_typedef, name: "__dev_t", file: !33, line: 133, baseType: !34)
!38 = !DIGlobalVariableExpression(var: !39, expr: !DIExpression())
!39 = distinct !DIGlobalVariable(name: "reference_file", scope: !2, file: !3, line: 41, type: !15, isLocal: true, isDefinition: true)
!40 = !DICompositeType(tag: DW_TAG_array_type, baseType: !41, size: 3584, elements: !50)
!41 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !42)
!42 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "option", file: !43, line: 50, size: 256, elements: !44)
!43 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/getopt_ext.h", directory: "/home/ma481/Downloads/Chisel/chisel-bench/benchmark/chown-8.2/original/obj-llvm/src")
!44 = !{!45, !46, !47, !49}
!45 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !42, file: !43, line: 52, baseType: !12, size: 64)
!46 = !DIDerivedType(tag: DW_TAG_member, name: "has_arg", scope: !42, file: !43, line: 55, baseType: !23, size: 32, offset: 64)
!47 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !42, file: !43, line: 56, baseType: !48, size: 64, offset: 128)
!48 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !23, size: 64)
!49 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !42, file: !43, line: 57, baseType: !23, size: 32, offset: 192)
!50 = !{!51}
!51 = !DISubrange(count: 14)
!52 = !DIGlobalVariableExpression(var: !53, expr: !DIExpression())
!53 = distinct !DIGlobalVariable(name: "Version", scope: !54, file: !55, line: 2, type: !12, isLocal: false, isDefinition: true)
!54 = distinct !DICompileUnit(language: DW_LANG_C99, file: !55, producer: "clang version 6.0.0 (tags/RELEASE_600/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !25, globals: !56)
!55 = !DIFile(filename: "version.c", directory: "/home/ma481/Downloads/Chisel/chisel-bench/benchmark/chown-8.2/original/obj-llvm/src")
!56 = !{!52}
!57 = !DIGlobalVariableExpression(var: !58, expr: !DIExpression())
!58 = distinct !DIGlobalVariable(name: "program_name", scope: !59, file: !60, line: 33, type: !12, isLocal: false, isDefinition: true)
!59 = distinct !DICompileUnit(language: DW_LANG_C99, file: !60, producer: "clang version 6.0.0 (tags/RELEASE_600/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !25, retainedTypes: !61, globals: !62)
!60 = !DIFile(filename: "../../lib/progname.c", directory: "/home/ma481/Downloads/Chisel/chisel-bench/benchmark/chown-8.2/original/obj-llvm/lib")
!61 = !{!16, !15}
!62 = !{!57}
!63 = !DIGlobalVariableExpression(var: !64, expr: !DIExpression())
!64 = distinct !DIGlobalVariable(name: "version_etc_copyright", scope: !65, file: !66, line: 26, type: !68, isLocal: false, isDefinition: true)
!65 = distinct !DICompileUnit(language: DW_LANG_C99, file: !66, producer: "clang version 6.0.0 (tags/RELEASE_600/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !25, globals: !67)
!66 = !DIFile(filename: "../../lib/version-etc-fsf.c", directory: "/home/ma481/Downloads/Chisel/chisel-bench/benchmark/chown-8.2/original/obj-llvm/lib")
!67 = !{!63}
!68 = !DICompositeType(tag: DW_TAG_array_type, baseType: !13, size: 376, elements: !69)
!69 = !{!70}
!70 = !DISubrange(count: 47)
!71 = !DIGlobalVariableExpression(var: !72, expr: !DIExpression())
!72 = distinct !DIGlobalVariable(name: "file_name", scope: !73, file: !74, line: 36, type: !12, isLocal: true, isDefinition: true)
!73 = distinct !DICompileUnit(language: DW_LANG_C99, file: !74, producer: "clang version 6.0.0 (tags/RELEASE_600/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !25, retainedTypes: !75, globals: !76)
!74 = !DIFile(filename: "../../lib/closeout.c", directory: "/home/ma481/Downloads/Chisel/chisel-bench/benchmark/chown-8.2/original/obj-llvm/lib")
!75 = !{!12}
!76 = !{!71, !77}
!77 = !DIGlobalVariableExpression(var: !78, expr: !DIExpression())
!78 = distinct !DIGlobalVariable(name: "ignore_EPIPE", scope: !73, file: !74, line: 46, type: !79, isLocal: true, isDefinition: true)
!79 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!80 = !DIGlobalVariableExpression(var: !81, expr: !DIExpression())
!81 = distinct !DIGlobalVariable(name: "exit_failure", scope: !82, file: !83, line: 24, type: !85, isLocal: false, isDefinition: true)
!82 = distinct !DICompileUnit(language: DW_LANG_C99, file: !83, producer: "clang version 6.0.0 (tags/RELEASE_600/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !25, globals: !84)
!83 = !DIFile(filename: "../../lib/exitfail.c", directory: "/home/ma481/Downloads/Chisel/chisel-bench/benchmark/chown-8.2/original/obj-llvm/lib")
!84 = !{!80}
!85 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !23)
!86 = !DIGlobalVariableExpression(var: !87, expr: !DIExpression())
!87 = distinct !DIGlobalVariable(name: "default_tuning", scope: !88, file: !89, line: 131, type: !94, isLocal: true, isDefinition: true)
!88 = distinct !DICompileUnit(language: DW_LANG_C99, file: !89, producer: "clang version 6.0.0 (tags/RELEASE_600/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !25, retainedTypes: !90, globals: !93)
!89 = !DIFile(filename: "../../lib/hash.c", directory: "/home/ma481/Downloads/Chisel/chisel-bench/benchmark/chown-8.2/original/obj-llvm/lib")
!90 = !{!34, !16, !91}
!91 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !92, line: 62, baseType: !34)
!92 = !DIFile(filename: "/home/ma481/Downloads/LLVM_6.0/lib/clang/6.0.0/include/stddef.h", directory: "/home/ma481/Downloads/Chisel/chisel-bench/benchmark/chown-8.2/original/obj-llvm/lib")
!93 = !{!86}
!94 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !95)
!95 = !DIDerivedType(tag: DW_TAG_typedef, name: "Hash_tuning", file: !96, line: 57, baseType: !97)
!96 = !DIFile(filename: "../../lib/hash.h", directory: "/home/ma481/Downloads/Chisel/chisel-bench/benchmark/chown-8.2/original/obj-llvm/lib")
!97 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hash_tuning", file: !96, line: 45, size: 160, elements: !98)
!98 = !{!99, !101, !102, !103, !104}
!99 = !DIDerivedType(tag: DW_TAG_member, name: "shrink_threshold", scope: !97, file: !96, line: 50, baseType: !100, size: 32)
!100 = !DIBasicType(name: "float", size: 32, encoding: DW_ATE_float)
!101 = !DIDerivedType(tag: DW_TAG_member, name: "shrink_factor", scope: !97, file: !96, line: 51, baseType: !100, size: 32, offset: 32)
!102 = !DIDerivedType(tag: DW_TAG_member, name: "growth_threshold", scope: !97, file: !96, line: 52, baseType: !100, size: 32, offset: 64)
!103 = !DIDerivedType(tag: DW_TAG_member, name: "growth_factor", scope: !97, file: !96, line: 53, baseType: !100, size: 32, offset: 96)
!104 = !DIDerivedType(tag: DW_TAG_member, name: "is_n_buckets", scope: !97, file: !96, line: 54, baseType: !79, size: 8, offset: 128)
!105 = !DIGlobalVariableExpression(var: !106, expr: !DIExpression())
!106 = distinct !DIGlobalVariable(name: "quoting_style_args", scope: !107, file: !108, line: 66, type: !178, isLocal: false, isDefinition: true)
!107 = distinct !DICompileUnit(language: DW_LANG_C99, file: !108, producer: "clang version 6.0.0 (tags/RELEASE_600/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !109, retainedTypes: !142, globals: !144)
!108 = !DIFile(filename: "../../lib/quotearg.c", directory: "/home/ma481/Downloads/Chisel/chisel-bench/benchmark/chown-8.2/original/obj-llvm/lib")
!109 = !{!110, !122, !127}
!110 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "quoting_style", file: !111, line: 32, size: 32, elements: !112)
!111 = !DIFile(filename: "../../lib/quotearg.h", directory: "/home/ma481/Downloads/Chisel/chisel-bench/benchmark/chown-8.2/original/obj-llvm/lib")
!112 = !{!113, !114, !115, !116, !117, !118, !119, !120, !121}
!113 = !DIEnumerator(name: "literal_quoting_style", value: 0)
!114 = !DIEnumerator(name: "shell_quoting_style", value: 1)
!115 = !DIEnumerator(name: "shell_always_quoting_style", value: 2)
!116 = !DIEnumerator(name: "c_quoting_style", value: 3)
!117 = !DIEnumerator(name: "c_maybe_quoting_style", value: 4)
!118 = !DIEnumerator(name: "escape_quoting_style", value: 5)
!119 = !DIEnumerator(name: "locale_quoting_style", value: 6)
!120 = !DIEnumerator(name: "clocale_quoting_style", value: 7)
!121 = !DIEnumerator(name: "custom_quoting_style", value: 8)
!122 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "quoting_flags", file: !111, line: 209, size: 32, elements: !123)
!123 = !{!124, !125, !126}
!124 = !DIEnumerator(name: "QA_ELIDE_NULL_BYTES", value: 1)
!125 = !DIEnumerator(name: "QA_ELIDE_OUTER_QUOTES", value: 2)
!126 = !DIEnumerator(name: "QA_SPLIT_TRIGRAPHS", value: 4)
!127 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !128, line: 46, size: 32, elements: !129)
!128 = !DIFile(filename: "/usr/include/ctype.h", directory: "/home/ma481/Downloads/Chisel/chisel-bench/benchmark/chown-8.2/original/obj-llvm/lib")
!129 = !{!130, !131, !132, !133, !134, !135, !136, !137, !138, !139, !140, !141}
!130 = !DIEnumerator(name: "_ISupper", value: 256)
!131 = !DIEnumerator(name: "_ISlower", value: 512)
!132 = !DIEnumerator(name: "_ISalpha", value: 1024)
!133 = !DIEnumerator(name: "_ISdigit", value: 2048)
!134 = !DIEnumerator(name: "_ISxdigit", value: 4096)
!135 = !DIEnumerator(name: "_ISspace", value: 8192)
!136 = !DIEnumerator(name: "_ISprint", value: 16384)
!137 = !DIEnumerator(name: "_ISgraph", value: 32768)
!138 = !DIEnumerator(name: "_ISblank", value: 1)
!139 = !DIEnumerator(name: "_IScntrl", value: 2)
!140 = !DIEnumerator(name: "_ISpunct", value: 4)
!141 = !DIEnumerator(name: "_ISalnum", value: 8)
!142 = !{!91, !23, !143, !12}
!143 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!144 = !{!105, !145, !151, !162, !167, !174, !176}
!145 = !DIGlobalVariableExpression(var: !146, expr: !DIExpression())
!146 = distinct !DIGlobalVariable(name: "quoting_style_vals", scope: !107, file: !108, line: 80, type: !147, isLocal: false, isDefinition: true)
!147 = !DICompositeType(tag: DW_TAG_array_type, baseType: !148, size: 256, elements: !149)
!148 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !110)
!149 = !{!150}
!150 = !DISubrange(count: 8)
!151 = !DIGlobalVariableExpression(var: !152, expr: !DIExpression())
!152 = distinct !DIGlobalVariable(name: "default_quoting_options", scope: !107, file: !108, line: 93, type: !153, isLocal: true, isDefinition: true)
!153 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quoting_options", file: !108, line: 46, size: 448, elements: !154)
!154 = !{!155, !156, !157, !160, !161}
!155 = !DIDerivedType(tag: DW_TAG_member, name: "style", scope: !153, file: !108, line: 49, baseType: !110, size: 32)
!156 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !153, file: !108, line: 52, baseType: !23, size: 32, offset: 32)
!157 = !DIDerivedType(tag: DW_TAG_member, name: "quote_these_too", scope: !153, file: !108, line: 56, baseType: !158, size: 256, offset: 64)
!158 = !DICompositeType(tag: DW_TAG_array_type, baseType: !159, size: 256, elements: !149)
!159 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!160 = !DIDerivedType(tag: DW_TAG_member, name: "left_quote", scope: !153, file: !108, line: 59, baseType: !12, size: 64, offset: 320)
!161 = !DIDerivedType(tag: DW_TAG_member, name: "right_quote", scope: !153, file: !108, line: 62, baseType: !12, size: 64, offset: 384)
!162 = !DIGlobalVariableExpression(var: !163, expr: !DIExpression())
!163 = distinct !DIGlobalVariable(name: "slot0", scope: !107, file: !108, line: 686, type: !164, isLocal: true, isDefinition: true)
!164 = !DICompositeType(tag: DW_TAG_array_type, baseType: !14, size: 2048, elements: !165)
!165 = !{!166}
!166 = !DISubrange(count: 256)
!167 = !DIGlobalVariableExpression(var: !168, expr: !DIExpression())
!168 = distinct !DIGlobalVariable(name: "slotvec", scope: !107, file: !108, line: 689, type: !169, isLocal: true, isDefinition: true)
!169 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !170, size: 64)
!170 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "slotvec", file: !108, line: 678, size: 128, elements: !171)
!171 = !{!172, !173}
!172 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !170, file: !108, line: 680, baseType: !91, size: 64)
!173 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !170, file: !108, line: 681, baseType: !15, size: 64, offset: 64)
!174 = !DIGlobalVariableExpression(var: !175, expr: !DIExpression())
!175 = distinct !DIGlobalVariable(name: "nslots", scope: !107, file: !108, line: 687, type: !159, isLocal: true, isDefinition: true)
!176 = !DIGlobalVariableExpression(var: !177, expr: !DIExpression())
!177 = distinct !DIGlobalVariable(name: "slotvec0", scope: !107, file: !108, line: 688, type: !170, isLocal: true, isDefinition: true)
!178 = !DICompositeType(tag: DW_TAG_array_type, baseType: !179, size: 576, elements: !180)
!179 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12)
!180 = !{!181}
!181 = !DISubrange(count: 9)
!182 = !DIGlobalVariableExpression(var: !183, expr: !DIExpression())
!183 = distinct !DIGlobalVariable(name: "E_bad_spec", scope: !184, file: !185, line: 108, type: !12, isLocal: true, isDefinition: true)
!184 = distinct !DISubprogram(name: "parse_with_separator", scope: !185, file: !185, line: 102, type: !186, isLocal: true, isDefinition: true, scopeLine: 105, flags: DIFlagPrototyped, isOptimized: false, unit: !196, variables: !25)
!185 = !DIFile(filename: "../../lib/userspec.c", directory: "/home/ma481/Downloads/Chisel/chisel-bench/benchmark/chown-8.2/original/obj-llvm/lib")
!186 = !DISubroutineType(types: !187)
!187 = !{!12, !12, !12, !188, !193, !24, !24}
!188 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !189, size: 64)
!189 = !DIDerivedType(tag: DW_TAG_typedef, name: "uid_t", file: !190, line: 80, baseType: !191)
!190 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/sys/types.h", directory: "/home/ma481/Downloads/Chisel/chisel-bench/benchmark/chown-8.2/original/obj-llvm/lib")
!191 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uid_t", file: !192, line: 134, baseType: !159)
!192 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "/home/ma481/Downloads/Chisel/chisel-bench/benchmark/chown-8.2/original/obj-llvm/lib")
!193 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !194, size: 64)
!194 = !DIDerivedType(tag: DW_TAG_typedef, name: "gid_t", file: !190, line: 65, baseType: !195)
!195 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gid_t", file: !192, line: 135, baseType: !159)
!196 = distinct !DICompileUnit(language: DW_LANG_C99, file: !185, producer: "clang version 6.0.0 (tags/RELEASE_600/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !197, retainedTypes: !206, globals: !207)
!197 = !{!198}
!198 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "strtol_error", file: !199, line: 26, size: 32, elements: !200)
!199 = !DIFile(filename: "../../lib/xstrtol.h", directory: "/home/ma481/Downloads/Chisel/chisel-bench/benchmark/chown-8.2/original/obj-llvm/lib")
!200 = !{!201, !202, !203, !204, !205}
!201 = !DIEnumerator(name: "LONGINT_OK", value: 0)
!202 = !DIEnumerator(name: "LONGINT_OVERFLOW", value: 1)
!203 = !DIEnumerator(name: "LONGINT_INVALID_SUFFIX_CHAR", value: 2)
!204 = !DIEnumerator(name: "LONGINT_INVALID_SUFFIX_CHAR_WITH_OVERFLOW", value: 3)
!205 = !DIEnumerator(name: "LONGINT_INVALID", value: 4)
!206 = !{!16, !189, !194, !12}
!207 = !{!208, !210, !182}
!208 = !DIGlobalVariableExpression(var: !209, expr: !DIExpression())
!209 = distinct !DIGlobalVariable(name: "E_invalid_user", scope: !184, file: !185, line: 106, type: !12, isLocal: true, isDefinition: true)
!210 = !DIGlobalVariableExpression(var: !211, expr: !DIExpression())
!211 = distinct !DIGlobalVariable(name: "E_invalid_group", scope: !184, file: !185, line: 107, type: !12, isLocal: true, isDefinition: true)
!212 = distinct !DICompileUnit(language: DW_LANG_C99, file: !213, producer: "clang version 6.0.0 (tags/RELEASE_600/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !214, retainedTypes: !228)
!213 = !DIFile(filename: "../../src/chown-core.c", directory: "/home/ma481/Downloads/Chisel/chisel-bench/benchmark/chown-8.2/original/obj-llvm/src")
!214 = !{!5, !215, !222}
!215 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "RCH_status", file: !213, line: 39, size: 32, elements: !216)
!216 = !{!217, !218, !219, !220, !221}
!217 = !DIEnumerator(name: "RC_ok", value: 2)
!218 = !DIEnumerator(name: "RC_excluded", value: 3)
!219 = !DIEnumerator(name: "RC_inode_changed", value: 4)
!220 = !DIEnumerator(name: "RC_do_ordinary_chown", value: 5)
!221 = !DIEnumerator(name: "RC_error", value: 6)
!222 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "Change_status", file: !6, line: 23, size: 32, elements: !223)
!223 = !{!224, !225, !226, !227}
!224 = !DIEnumerator(name: "CH_NOT_APPLIED", value: 1)
!225 = !DIEnumerator(name: "CH_SUCCEEDED", value: 2)
!226 = !DIEnumerator(name: "CH_FAILED", value: 3)
!227 = !DIEnumerator(name: "CH_NO_CHANGE_REQUESTED", value: 4)
!228 = !{!229, !231, !16, !12}
!229 = !DIDerivedType(tag: DW_TAG_typedef, name: "uid_t", file: !31, line: 80, baseType: !230)
!230 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uid_t", file: !33, line: 134, baseType: !159)
!231 = !DIDerivedType(tag: DW_TAG_typedef, name: "gid_t", file: !31, line: 65, baseType: !232)
!232 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gid_t", file: !33, line: 135, baseType: !159)
!233 = distinct !DICompileUnit(language: DW_LANG_C99, file: !234, producer: "clang version 6.0.0 (tags/RELEASE_600/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !235, retainedTypes: !239)
!234 = !DIFile(filename: "../../lib/version-etc.c", directory: "/home/ma481/Downloads/Chisel/chisel-bench/benchmark/chown-8.2/original/obj-llvm/lib")
!235 = !{!236}
!236 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !234, line: 41, size: 32, elements: !237)
!237 = !{!238}
!238 = !DIEnumerator(name: "COPYRIGHT_YEAR", value: 2009)
!239 = !{!12, !16}
!240 = distinct !DICompileUnit(language: DW_LANG_C99, file: !241, producer: "clang version 6.0.0 (tags/RELEASE_600/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !25, retainedTypes: !242)
!241 = !DIFile(filename: "../../lib/basename-lgpl.c", directory: "/home/ma481/Downloads/Chisel/chisel-bench/benchmark/chown-8.2/original/obj-llvm/lib")
!242 = !{!15}
!243 = distinct !DICompileUnit(language: DW_LANG_C99, file: !244, producer: "clang version 6.0.0 (tags/RELEASE_600/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !245, retainedTypes: !400)
!244 = !DIFile(filename: "../../lib/fts.c", directory: "/home/ma481/Downloads/Chisel/chisel-bench/benchmark/chown-8.2/original/obj-llvm/lib")
!245 = !{!246, !250, !382, !385, !397}
!246 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "Fts_stat", file: !244, line: 148, size: 32, elements: !247)
!247 = !{!248, !249}
!248 = !DIEnumerator(name: "FTS_NO_STAT_REQUIRED", value: 1)
!249 = !DIEnumerator(name: "FTS_STAT_REQUIRED", value: 2)
!250 = !DICompositeType(tag: DW_TAG_enumeration_type, scope: !252, file: !251, line: 54, size: 32, elements: !380)
!251 = !DIFile(filename: "../../lib/fts-cycle.c", directory: "/home/ma481/Downloads/Chisel/chisel-bench/benchmark/chown-8.2/original/obj-llvm/lib")
!252 = distinct !DISubprogram(name: "setup_dir", scope: !251, file: !251, line: 50, type: !253, isLocal: true, isDefinition: true, scopeLine: 51, flags: DIFlagPrototyped, isOptimized: false, unit: !243, variables: !25)
!253 = !DISubroutineType(types: !254)
!254 = !{!79, !255}
!255 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !256, size: 64)
!256 = !DIDerivedType(tag: DW_TAG_typedef, name: "FTS", file: !257, line: 183, baseType: !258)
!257 = !DIFile(filename: "../../lib/fts_.h", directory: "/home/ma481/Downloads/Chisel/chisel-bench/benchmark/chown-8.2/original/obj-llvm/lib")
!258 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !257, line: 68, size: 1024, elements: !259)
!259 = !{!260, !325, !326, !328, !330, !331, !332, !333, !334, !335, !342, !343, !346, !367}
!260 = !DIDerivedType(tag: DW_TAG_member, name: "fts_cur", scope: !258, file: !257, line: 69, baseType: !261, size: 64)
!261 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !262, size: 64)
!262 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ftsent", file: !257, line: 185, size: 2112, elements: !263)
!263 = !{!264, !265, !266, !267, !269, !270, !271, !272, !273, !274, !275, !276, !278, !279, !282, !283, !284, !285, !323}
!264 = !DIDerivedType(tag: DW_TAG_member, name: "fts_cycle", scope: !262, file: !257, line: 186, baseType: !261, size: 64)
!265 = !DIDerivedType(tag: DW_TAG_member, name: "fts_parent", scope: !262, file: !257, line: 187, baseType: !261, size: 64, offset: 64)
!266 = !DIDerivedType(tag: DW_TAG_member, name: "fts_link", scope: !262, file: !257, line: 188, baseType: !261, size: 64, offset: 128)
!267 = !DIDerivedType(tag: DW_TAG_member, name: "fts_number", scope: !262, file: !257, line: 189, baseType: !268, size: 64, offset: 192)
!268 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!269 = !DIDerivedType(tag: DW_TAG_member, name: "fts_pointer", scope: !262, file: !257, line: 190, baseType: !16, size: 64, offset: 256)
!270 = !DIDerivedType(tag: DW_TAG_member, name: "fts_accpath", scope: !262, file: !257, line: 191, baseType: !15, size: 64, offset: 320)
!271 = !DIDerivedType(tag: DW_TAG_member, name: "fts_path", scope: !262, file: !257, line: 192, baseType: !15, size: 64, offset: 384)
!272 = !DIDerivedType(tag: DW_TAG_member, name: "fts_errno", scope: !262, file: !257, line: 193, baseType: !23, size: 32, offset: 448)
!273 = !DIDerivedType(tag: DW_TAG_member, name: "fts_symfd", scope: !262, file: !257, line: 194, baseType: !23, size: 32, offset: 480)
!274 = !DIDerivedType(tag: DW_TAG_member, name: "fts_pathlen", scope: !262, file: !257, line: 195, baseType: !91, size: 64, offset: 512)
!275 = !DIDerivedType(tag: DW_TAG_member, name: "fts_fts", scope: !262, file: !257, line: 197, baseType: !255, size: 64, offset: 576)
!276 = !DIDerivedType(tag: DW_TAG_member, name: "fts_level", scope: !262, file: !257, line: 201, baseType: !277, size: 64, offset: 640)
!277 = !DIDerivedType(tag: DW_TAG_typedef, name: "ptrdiff_t", file: !92, line: 51, baseType: !268)
!278 = !DIDerivedType(tag: DW_TAG_member, name: "fts_namelen", scope: !262, file: !257, line: 203, baseType: !91, size: 64, offset: 704)
!279 = !DIDerivedType(tag: DW_TAG_member, name: "fts_n_dirs_remaining", scope: !262, file: !257, line: 204, baseType: !280, size: 64, offset: 768)
!280 = !DIDerivedType(tag: DW_TAG_typedef, name: "nlink_t", file: !190, line: 75, baseType: !281)
!281 = !DIDerivedType(tag: DW_TAG_typedef, name: "__nlink_t", file: !192, line: 139, baseType: !34)
!282 = !DIDerivedType(tag: DW_TAG_member, name: "fts_info", scope: !262, file: !257, line: 220, baseType: !143, size: 16, offset: 832)
!283 = !DIDerivedType(tag: DW_TAG_member, name: "fts_flags", scope: !262, file: !257, line: 224, baseType: !143, size: 16, offset: 848)
!284 = !DIDerivedType(tag: DW_TAG_member, name: "fts_instr", scope: !262, file: !257, line: 230, baseType: !143, size: 16, offset: 864)
!285 = !DIDerivedType(tag: DW_TAG_member, name: "fts_statp", scope: !262, file: !257, line: 232, baseType: !286, size: 1152, offset: 896)
!286 = !DICompositeType(tag: DW_TAG_array_type, baseType: !287, size: 1152, elements: !321)
!287 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !288, line: 46, size: 1152, elements: !289)
!288 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stat.h", directory: "/home/ma481/Downloads/Chisel/chisel-bench/benchmark/chown-8.2/original/obj-llvm/lib")
!289 = !{!290, !292, !294, !295, !297, !298, !299, !300, !301, !303, !305, !307, !315, !316, !317}
!290 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !287, file: !288, line: 48, baseType: !291, size: 64)
!291 = !DIDerivedType(tag: DW_TAG_typedef, name: "__dev_t", file: !192, line: 133, baseType: !34)
!292 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !287, file: !288, line: 53, baseType: !293, size: 64, offset: 64)
!293 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ino_t", file: !192, line: 136, baseType: !34)
!294 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !287, file: !288, line: 61, baseType: !281, size: 64, offset: 128)
!295 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !287, file: !288, line: 62, baseType: !296, size: 32, offset: 192)
!296 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mode_t", file: !192, line: 138, baseType: !159)
!297 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !287, file: !288, line: 64, baseType: !191, size: 32, offset: 224)
!298 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !287, file: !288, line: 65, baseType: !195, size: 32, offset: 256)
!299 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !287, file: !288, line: 67, baseType: !23, size: 32, offset: 288)
!300 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !287, file: !288, line: 69, baseType: !291, size: 64, offset: 320)
!301 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !287, file: !288, line: 74, baseType: !302, size: 64, offset: 384)
!302 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off_t", file: !192, line: 140, baseType: !268)
!303 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !287, file: !288, line: 78, baseType: !304, size: 64, offset: 448)
!304 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blksize_t", file: !192, line: 162, baseType: !268)
!305 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !287, file: !288, line: 80, baseType: !306, size: 64, offset: 512)
!306 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blkcnt_t", file: !192, line: 167, baseType: !268)
!307 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !287, file: !288, line: 91, baseType: !308, size: 128, offset: 576)
!308 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !309, line: 8, size: 128, elements: !310)
!309 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/struct_timespec.h", directory: "/home/ma481/Downloads/Chisel/chisel-bench/benchmark/chown-8.2/original/obj-llvm/lib")
!310 = !{!311, !313}
!311 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !308, file: !309, line: 10, baseType: !312, size: 64)
!312 = !DIDerivedType(tag: DW_TAG_typedef, name: "__time_t", file: !192, line: 148, baseType: !268)
!313 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !308, file: !309, line: 11, baseType: !314, size: 64, offset: 64)
!314 = !DIDerivedType(tag: DW_TAG_typedef, name: "__syscall_slong_t", file: !192, line: 184, baseType: !268)
!315 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !287, file: !288, line: 92, baseType: !308, size: 128, offset: 704)
!316 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !287, file: !288, line: 93, baseType: !308, size: 128, offset: 832)
!317 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !287, file: !288, line: 106, baseType: !318, size: 192, offset: 960)
!318 = !DICompositeType(tag: DW_TAG_array_type, baseType: !314, size: 192, elements: !319)
!319 = !{!320}
!320 = !DISubrange(count: 3)
!321 = !{!322}
!322 = !DISubrange(count: 1)
!323 = !DIDerivedType(tag: DW_TAG_member, name: "fts_name", scope: !262, file: !257, line: 233, baseType: !324, size: 8, offset: 2048)
!324 = !DICompositeType(tag: DW_TAG_array_type, baseType: !14, size: 8, elements: !321)
!325 = !DIDerivedType(tag: DW_TAG_member, name: "fts_child", scope: !258, file: !257, line: 70, baseType: !261, size: 64, offset: 64)
!326 = !DIDerivedType(tag: DW_TAG_member, name: "fts_array", scope: !258, file: !257, line: 71, baseType: !327, size: 64, offset: 128)
!327 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !261, size: 64)
!328 = !DIDerivedType(tag: DW_TAG_member, name: "fts_dev", scope: !258, file: !257, line: 72, baseType: !329, size: 64, offset: 192)
!329 = !DIDerivedType(tag: DW_TAG_typedef, name: "dev_t", file: !190, line: 60, baseType: !291)
!330 = !DIDerivedType(tag: DW_TAG_member, name: "fts_path", scope: !258, file: !257, line: 73, baseType: !15, size: 64, offset: 256)
!331 = !DIDerivedType(tag: DW_TAG_member, name: "fts_rfd", scope: !258, file: !257, line: 74, baseType: !23, size: 32, offset: 320)
!332 = !DIDerivedType(tag: DW_TAG_member, name: "fts_cwd_fd", scope: !258, file: !257, line: 75, baseType: !23, size: 32, offset: 352)
!333 = !DIDerivedType(tag: DW_TAG_member, name: "fts_pathlen", scope: !258, file: !257, line: 77, baseType: !91, size: 64, offset: 384)
!334 = !DIDerivedType(tag: DW_TAG_member, name: "fts_nitems", scope: !258, file: !257, line: 78, baseType: !91, size: 64, offset: 448)
!335 = !DIDerivedType(tag: DW_TAG_member, name: "fts_compar", scope: !258, file: !257, line: 79, baseType: !336, size: 64, offset: 512)
!336 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !337, size: 64)
!337 = !DISubroutineType(types: !338)
!338 = !{!23, !339, !339}
!339 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !340, size: 64)
!340 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !341, size: 64)
!341 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !262)
!342 = !DIDerivedType(tag: DW_TAG_member, name: "fts_options", scope: !258, file: !257, line: 144, baseType: !23, size: 32, offset: 576)
!343 = !DIDerivedType(tag: DW_TAG_member, name: "fts_leaf_optimization_works_ht", scope: !258, file: !257, line: 154, baseType: !344, size: 64, offset: 640)
!344 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !345, size: 64)
!345 = !DICompositeType(tag: DW_TAG_structure_type, name: "hash_table", file: !257, line: 154, flags: DIFlagFwdDecl)
!346 = !DIDerivedType(tag: DW_TAG_member, name: "fts_cycle", scope: !258, file: !257, line: 176, baseType: !347, size: 64, offset: 704)
!347 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !258, file: !257, line: 156, size: 64, elements: !348)
!348 = !{!349, !350}
!349 = !DIDerivedType(tag: DW_TAG_member, name: "ht", scope: !347, file: !257, line: 169, baseType: !344, size: 64)
!350 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !347, file: !257, line: 175, baseType: !351, size: 64)
!351 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !352, size: 64)
!352 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cycle_check_state", file: !353, line: 28, size: 256, elements: !354)
!353 = !DIFile(filename: "../../lib/cycle-check.h", directory: "/home/ma481/Downloads/Chisel/chisel-bench/benchmark/chown-8.2/original/obj-llvm/lib")
!354 = !{!355, !362, !366}
!355 = !DIDerivedType(tag: DW_TAG_member, name: "dev_ino", scope: !352, file: !353, line: 30, baseType: !356, size: 128)
!356 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_ino", file: !357, line: 7, size: 128, elements: !358)
!357 = !DIFile(filename: "../../lib/dev-ino.h", directory: "/home/ma481/Downloads/Chisel/chisel-bench/benchmark/chown-8.2/original/obj-llvm/lib")
!358 = !{!359, !361}
!359 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !356, file: !357, line: 9, baseType: !360, size: 64)
!360 = !DIDerivedType(tag: DW_TAG_typedef, name: "ino_t", file: !190, line: 48, baseType: !293)
!361 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !356, file: !357, line: 10, baseType: !329, size: 64, offset: 64)
!362 = !DIDerivedType(tag: DW_TAG_member, name: "chdir_counter", scope: !352, file: !353, line: 31, baseType: !363, size: 64, offset: 128)
!363 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !364, line: 112, baseType: !365)
!364 = !DIFile(filename: "/usr/include/stdint.h", directory: "/home/ma481/Downloads/Chisel/chisel-bench/benchmark/chown-8.2/original/obj-llvm/lib")
!365 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uintmax_t", file: !192, line: 62, baseType: !34)
!366 = !DIDerivedType(tag: DW_TAG_member, name: "magic", scope: !352, file: !353, line: 32, baseType: !23, size: 32, offset: 192)
!367 = !DIDerivedType(tag: DW_TAG_member, name: "fts_fd_ring", scope: !258, file: !257, line: 182, baseType: !368, size: 256, offset: 768)
!368 = !DIDerivedType(tag: DW_TAG_typedef, name: "I_ring", file: !369, line: 39, baseType: !370)
!369 = !DIFile(filename: "../../lib/i-ring.h", directory: "/home/ma481/Downloads/Chisel/chisel-bench/benchmark/chown-8.2/original/obj-llvm/lib")
!370 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "I_ring", file: !369, line: 31, size: 256, elements: !371)
!371 = !{!372, !376, !377, !378, !379}
!372 = !DIDerivedType(tag: DW_TAG_member, name: "ir_data", scope: !370, file: !369, line: 33, baseType: !373, size: 128)
!373 = !DICompositeType(tag: DW_TAG_array_type, baseType: !23, size: 128, elements: !374)
!374 = !{!375}
!375 = !DISubrange(count: 4)
!376 = !DIDerivedType(tag: DW_TAG_member, name: "ir_default_val", scope: !370, file: !369, line: 34, baseType: !23, size: 32, offset: 128)
!377 = !DIDerivedType(tag: DW_TAG_member, name: "ir_front", scope: !370, file: !369, line: 35, baseType: !159, size: 32, offset: 160)
!378 = !DIDerivedType(tag: DW_TAG_member, name: "ir_back", scope: !370, file: !369, line: 36, baseType: !159, size: 32, offset: 192)
!379 = !DIDerivedType(tag: DW_TAG_member, name: "ir_empty", scope: !370, file: !369, line: 37, baseType: !79, size: 8, offset: 224)
!380 = !{!381}
!381 = !DIEnumerator(name: "HT_INITIAL_SIZE", value: 31)
!382 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !244, line: 732, size: 32, elements: !383)
!383 = !{!384}
!384 = !DIEnumerator(name: "LCO_HT_INITIAL_SIZE", value: 13)
!385 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !386, line: 97, size: 32, elements: !387)
!386 = !DIFile(filename: "/usr/include/dirent.h", directory: "/home/ma481/Downloads/Chisel/chisel-bench/benchmark/chown-8.2/original/obj-llvm/lib")
!387 = !{!388, !389, !390, !391, !392, !393, !394, !395, !396}
!388 = !DIEnumerator(name: "DT_UNKNOWN", value: 0)
!389 = !DIEnumerator(name: "DT_FIFO", value: 1)
!390 = !DIEnumerator(name: "DT_CHR", value: 2)
!391 = !DIEnumerator(name: "DT_DIR", value: 4)
!392 = !DIEnumerator(name: "DT_BLK", value: 6)
!393 = !DIEnumerator(name: "DT_REG", value: 8)
!394 = !DIEnumerator(name: "DT_LNK", value: 10)
!395 = !DIEnumerator(name: "DT_SOCK", value: 12)
!396 = !DIEnumerator(name: "DT_WHT", value: 14)
!397 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !244, line: 143, size: 32, elements: !398)
!398 = !{!399}
!399 = !DIEnumerator(name: "_FTS_INODE_SORT_DIR_ENTRIES_THRESHOLD", value: 10000)
!400 = !{!16, !363, !15, !268, !401, !406}
!401 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !402, size: 64)
!402 = !DISubroutineType(types: !403)
!403 = !{!23, !404, !404}
!404 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !405, size: 64)
!405 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!406 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !407, size: 64)
!407 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !408, size: 64)
!408 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !409)
!409 = !DIDerivedType(tag: DW_TAG_typedef, name: "FTSENT", file: !257, line: 234, baseType: !262)
!410 = distinct !DICompileUnit(language: DW_LANG_C99, file: !411, producer: "clang version 6.0.0 (tags/RELEASE_600/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !412)
!411 = !DIFile(filename: "../../lib/i-ring.c", directory: "/home/ma481/Downloads/Chisel/chisel-bench/benchmark/chown-8.2/original/obj-llvm/lib")
!412 = !{!413}
!413 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !369, line: 20, size: 32, elements: !414)
!414 = !{!415}
!415 = !DIEnumerator(name: "I_RING_SIZE", value: 4)
!416 = distinct !DICompileUnit(language: DW_LANG_C99, file: !417, producer: "clang version 6.0.0 (tags/RELEASE_600/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !25)
!417 = !DIFile(filename: "../../lib/open-safer.c", directory: "/home/ma481/Downloads/Chisel/chisel-bench/benchmark/chown-8.2/original/obj-llvm/lib")
!418 = distinct !DICompileUnit(language: DW_LANG_C99, file: !419, producer: "clang version 6.0.0 (tags/RELEASE_600/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !25)
!419 = !DIFile(filename: "../../lib/openat-safer.c", directory: "/home/ma481/Downloads/Chisel/chisel-bench/benchmark/chown-8.2/original/obj-llvm/lib")
!420 = distinct !DICompileUnit(language: DW_LANG_C99, file: !421, producer: "clang version 6.0.0 (tags/RELEASE_600/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !25)
!421 = !DIFile(filename: "../../lib/opendir-safer.c", directory: "/home/ma481/Downloads/Chisel/chisel-bench/benchmark/chown-8.2/original/obj-llvm/lib")
!422 = distinct !DICompileUnit(language: DW_LANG_C99, file: !423, producer: "clang version 6.0.0 (tags/RELEASE_600/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !424)
!423 = !DIFile(filename: "../../lib/quote.c", directory: "/home/ma481/Downloads/Chisel/chisel-bench/benchmark/chown-8.2/original/obj-llvm/lib")
!424 = !{!110}
!425 = distinct !DICompileUnit(language: DW_LANG_C99, file: !426, producer: "clang version 6.0.0 (tags/RELEASE_600/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !25)
!426 = !DIFile(filename: "../../lib/root-dev-ino.c", directory: "/home/ma481/Downloads/Chisel/chisel-bench/benchmark/chown-8.2/original/obj-llvm/lib")
!427 = distinct !DICompileUnit(language: DW_LANG_C99, file: !428, producer: "clang version 6.0.0 (tags/RELEASE_600/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !25, retainedTypes: !429)
!428 = !DIFile(filename: "../../lib/umaxtostr.c", directory: "/home/ma481/Downloads/Chisel/chisel-bench/benchmark/chown-8.2/original/obj-llvm/lib")
!429 = !{!363}
!430 = distinct !DICompileUnit(language: DW_LANG_C99, file: !431, producer: "clang version 6.0.0 (tags/RELEASE_600/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !432, retainedTypes: !441)
!431 = !DIFile(filename: "../../lib/xmalloc.c", directory: "/home/ma481/Downloads/Chisel/chisel-bench/benchmark/chown-8.2/original/obj-llvm/lib")
!432 = !{!433}
!433 = !DICompositeType(tag: DW_TAG_enumeration_type, scope: !435, file: !434, line: 207, size: 32, elements: !439)
!434 = !DIFile(filename: "../../lib/xalloc.h", directory: "/home/ma481/Downloads/Chisel/chisel-bench/benchmark/chown-8.2/original/obj-llvm/lib")
!435 = distinct !DISubprogram(name: "x2nrealloc", scope: !434, file: !434, line: 195, type: !436, isLocal: false, isDefinition: true, scopeLine: 196, flags: DIFlagPrototyped, isOptimized: false, unit: !430, variables: !25)
!436 = !DISubroutineType(types: !437)
!437 = !{!16, !16, !438, !91}
!438 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !91, size: 64)
!439 = !{!440}
!440 = !DIEnumerator(name: "DEFAULT_MXFAST", value: 64)
!441 = !{!91, !15}
!442 = distinct !DICompileUnit(language: DW_LANG_C99, file: !443, producer: "clang version 6.0.0 (tags/RELEASE_600/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !444, retainedTypes: !445)
!443 = !DIFile(filename: "../../lib/xstrtoul.c", directory: "/home/ma481/Downloads/Chisel/chisel-bench/benchmark/chown-8.2/original/obj-llvm/lib")
!444 = !{!198, !127}
!445 = !{!23, !143}
!446 = distinct !DICompileUnit(language: DW_LANG_C99, file: !447, producer: "clang version 6.0.0 (tags/RELEASE_600/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !25, retainedTypes: !448)
!447 = !DIFile(filename: "../../lib/xfts.c", directory: "/home/ma481/Downloads/Chisel/chisel-bench/benchmark/chown-8.2/original/obj-llvm/lib")
!448 = !{!16}
!449 = distinct !DICompileUnit(language: DW_LANG_C99, file: !450, producer: "clang version 6.0.0 (tags/RELEASE_600/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !25, retainedTypes: !75)
!450 = !DIFile(filename: "../../lib/xalloc-die.c", directory: "/home/ma481/Downloads/Chisel/chisel-bench/benchmark/chown-8.2/original/obj-llvm/lib")
!451 = distinct !DICompileUnit(language: DW_LANG_C99, file: !452, producer: "clang version 6.0.0 (tags/RELEASE_600/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !25)
!452 = !DIFile(filename: "../../lib/cloexec.c", directory: "/home/ma481/Downloads/Chisel/chisel-bench/benchmark/chown-8.2/original/obj-llvm/lib")
!453 = distinct !DICompileUnit(language: DW_LANG_C99, file: !454, producer: "clang version 6.0.0 (tags/RELEASE_600/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !25)
!454 = !DIFile(filename: "../../lib/close-stream.c", directory: "/home/ma481/Downloads/Chisel/chisel-bench/benchmark/chown-8.2/original/obj-llvm/lib")
!455 = distinct !DICompileUnit(language: DW_LANG_C99, file: !456, producer: "clang version 6.0.0 (tags/RELEASE_600/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !25)
!456 = !DIFile(filename: "../../lib/cycle-check.c", directory: "/home/ma481/Downloads/Chisel/chisel-bench/benchmark/chown-8.2/original/obj-llvm/lib")
!457 = distinct !DICompileUnit(language: DW_LANG_C99, file: !458, producer: "clang version 6.0.0 (tags/RELEASE_600/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !25)
!458 = !DIFile(filename: "../../lib/dup-safer.c", directory: "/home/ma481/Downloads/Chisel/chisel-bench/benchmark/chown-8.2/original/obj-llvm/lib")
!459 = distinct !DICompileUnit(language: DW_LANG_C99, file: !460, producer: "clang version 6.0.0 (tags/RELEASE_600/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !25)
!460 = !DIFile(filename: "../../lib/fd-safer.c", directory: "/home/ma481/Downloads/Chisel/chisel-bench/benchmark/chown-8.2/original/obj-llvm/lib")
!461 = distinct !DICompileUnit(language: DW_LANG_C99, file: !462, producer: "clang version 6.0.0 (tags/RELEASE_600/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !25)
!462 = !DIFile(filename: "../../lib/fdopendir.c", directory: "/home/ma481/Downloads/Chisel/chisel-bench/benchmark/chown-8.2/original/obj-llvm/lib")
!463 = !{!"clang version 6.0.0 (tags/RELEASE_600/final)"}
!464 = !{i32 2, !"Dwarf Version", i32 4}
!465 = !{i32 2, !"Debug Info Version", i32 3}
!466 = !{i32 1, !"wchar_size", i32 4}
!467 = distinct !DISubprogram(name: "usage", scope: !3, file: !3, line: 73, type: !468, isLocal: false, isDefinition: true, scopeLine: 74, flags: DIFlagPrototyped | DIFlagNoReturn, isOptimized: false, unit: !2, variables: !25)
!468 = !DISubroutineType(types: !469)
!469 = !{null, !23}
!470 = !DILocalVariable(name: "status", arg: 1, scope: !467, file: !3, line: 73, type: !23)
!471 = !DILocation(line: 73, column: 12, scope: !467)
!472 = !DILocation(line: 75, column: 7, scope: !473)
!473 = distinct !DILexicalBlock(scope: !467, file: !3, line: 75, column: 7)
!474 = !DILocation(line: 75, column: 14, scope: !473)
!475 = !DILocation(line: 75, column: 7, scope: !467)
!476 = !DILocation(line: 76, column: 14, scope: !473)
!477 = !DILocation(line: 77, column: 14, scope: !473)
!478 = !DILocation(line: 76, column: 5, scope: !473)
!479 = !DILocation(line: 84, column: 15, scope: !480)
!480 = distinct !DILexicalBlock(scope: !473, file: !3, line: 79, column: 5)
!481 = !DILocation(line: 84, column: 29, scope: !480)
!482 = !DILocation(line: 80, column: 7, scope: !480)
!483 = !DILocation(line: 85, column: 7, scope: !480)
!484 = !DILocation(line: 93, column: 7, scope: !480)
!485 = !DILocation(line: 98, column: 7, scope: !480)
!486 = !DILocation(line: 105, column: 7, scope: !480)
!487 = !DILocation(line: 109, column: 7, scope: !480)
!488 = !DILocation(line: 117, column: 7, scope: !480)
!489 = !DILocation(line: 129, column: 7, scope: !480)
!490 = !DILocation(line: 130, column: 7, scope: !480)
!491 = !DILocation(line: 131, column: 7, scope: !480)
!492 = !DILocation(line: 144, column: 15, scope: !480)
!493 = !DILocation(line: 144, column: 29, scope: !480)
!494 = !DILocation(line: 144, column: 43, scope: !480)
!495 = !DILocation(line: 137, column: 7, scope: !480)
!496 = !DILocation(line: 145, column: 7, scope: !480)
!497 = !DILocation(line: 147, column: 9, scope: !467)
!498 = !DILocation(line: 147, column: 3, scope: !467)
!499 = !DILocation(line: 148, column: 1, scope: !467)
!500 = distinct !DISubprogram(name: "emit_ancillary_info", scope: !501, file: !501, line: 586, type: !502, isLocal: true, isDefinition: true, scopeLine: 587, flags: DIFlagPrototyped, isOptimized: false, unit: !2, variables: !25)
!501 = !DIFile(filename: "../../src/system.h", directory: "/home/ma481/Downloads/Chisel/chisel-bench/benchmark/chown-8.2/original/obj-llvm/src")
!502 = !DISubroutineType(types: !503)
!503 = !{null}
!504 = !DILocation(line: 588, column: 58, scope: !500)
!505 = !DILocation(line: 588, column: 42, scope: !500)
!506 = !DILocation(line: 588, column: 3, scope: !500)
!507 = !DILocation(line: 591, column: 3, scope: !500)
!508 = !DILocation(line: 593, column: 3, scope: !500)
!509 = !DILocalVariable(name: "lc_messages", scope: !500, file: !501, line: 597, type: !12)
!510 = !DILocation(line: 597, column: 15, scope: !500)
!511 = !DILocation(line: 597, column: 29, scope: !500)
!512 = !DILocation(line: 598, column: 7, scope: !513)
!513 = distinct !DILexicalBlock(scope: !500, file: !501, line: 598, column: 7)
!514 = !DILocation(line: 598, column: 19, scope: !513)
!515 = !DILocation(line: 598, column: 31, scope: !513)
!516 = !DILocation(line: 598, column: 22, scope: !513)
!517 = !DILocation(line: 598, column: 7, scope: !500)
!518 = !DILocation(line: 606, column: 33, scope: !519)
!519 = distinct !DILexicalBlock(scope: !513, file: !501, line: 599, column: 5)
!520 = !DILocation(line: 606, column: 17, scope: !519)
!521 = !DILocation(line: 604, column: 7, scope: !519)
!522 = !DILocation(line: 607, column: 5, scope: !519)
!523 = !DILocation(line: 609, column: 66, scope: !500)
!524 = !DILocation(line: 609, column: 50, scope: !500)
!525 = !DILocation(line: 608, column: 3, scope: !500)
!526 = !DILocation(line: 610, column: 1, scope: !500)
!527 = distinct !DISubprogram(name: "klee_dump_memory", scope: !3, file: !3, line: 152, type: !502, isLocal: false, isDefinition: true, scopeLine: 152, isOptimized: false, unit: !2, variables: !25)
!528 = !DILocation(line: 152, column: 26, scope: !527)
!529 = !DILocalVariable(name: "argc", arg: 1, scope: !20, file: !3, line: 155, type: !23)
!530 = !DILocation(line: 155, column: 11, scope: !20)
!531 = !DILocalVariable(name: "argv", arg: 2, scope: !20, file: !3, line: 155, type: !24)
!532 = !DILocation(line: 155, column: 24, scope: !20)
!533 = !DILocalVariable(name: "preserve_root", scope: !20, file: !3, line: 157, type: !79)
!534 = !DILocation(line: 157, column: 8, scope: !20)
!535 = !DILocalVariable(name: "uid", scope: !20, file: !3, line: 159, type: !229)
!536 = !DILocation(line: 159, column: 9, scope: !20)
!537 = !DILocalVariable(name: "gid", scope: !20, file: !3, line: 160, type: !231)
!538 = !DILocation(line: 160, column: 9, scope: !20)
!539 = !DILocalVariable(name: "required_uid", scope: !20, file: !3, line: 164, type: !229)
!540 = !DILocation(line: 164, column: 9, scope: !20)
!541 = !DILocalVariable(name: "required_gid", scope: !20, file: !3, line: 165, type: !231)
!542 = !DILocation(line: 165, column: 9, scope: !20)
!543 = !DILocalVariable(name: "bit_flags", scope: !20, file: !3, line: 168, type: !23)
!544 = !DILocation(line: 168, column: 7, scope: !20)
!545 = !DILocalVariable(name: "dereference", scope: !20, file: !3, line: 172, type: !23)
!546 = !DILocation(line: 172, column: 7, scope: !20)
!547 = !DILocalVariable(name: "chopt", scope: !20, file: !3, line: 174, type: !548)
!548 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Chown_option", file: !6, line: 43, size: 320, elements: !549)
!549 = !{!550, !551, !552, !554, !555, !556, !557}
!550 = !DIDerivedType(tag: DW_TAG_member, name: "verbosity", scope: !548, file: !6, line: 46, baseType: !5, size: 32)
!551 = !DIDerivedType(tag: DW_TAG_member, name: "recurse", scope: !548, file: !6, line: 49, baseType: !79, size: 8, offset: 32)
!552 = !DIDerivedType(tag: DW_TAG_member, name: "root_dev_ino", scope: !548, file: !6, line: 53, baseType: !553, size: 64, offset: 64)
!553 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !26, size: 64)
!554 = !DIDerivedType(tag: DW_TAG_member, name: "affect_symlink_referent", scope: !548, file: !6, line: 56, baseType: !79, size: 8, offset: 128)
!555 = !DIDerivedType(tag: DW_TAG_member, name: "force_silent", scope: !548, file: !6, line: 59, baseType: !79, size: 8, offset: 136)
!556 = !DIDerivedType(tag: DW_TAG_member, name: "user_name", scope: !548, file: !6, line: 62, baseType: !15, size: 64, offset: 192)
!557 = !DIDerivedType(tag: DW_TAG_member, name: "group_name", scope: !548, file: !6, line: 65, baseType: !15, size: 64, offset: 256)
!558 = !DILocation(line: 174, column: 23, scope: !20)
!559 = !DILocalVariable(name: "ok", scope: !20, file: !3, line: 175, type: !79)
!560 = !DILocation(line: 175, column: 8, scope: !20)
!561 = !DILocalVariable(name: "optc", scope: !20, file: !3, line: 176, type: !23)
!562 = !DILocation(line: 176, column: 7, scope: !20)
!563 = !DILocation(line: 179, column: 21, scope: !20)
!564 = !DILocation(line: 179, column: 3, scope: !20)
!565 = !DILocation(line: 180, column: 3, scope: !20)
!566 = !DILocation(line: 184, column: 3, scope: !20)
!567 = !DILocation(line: 186, column: 3, scope: !20)
!568 = !DILocation(line: 188, column: 3, scope: !20)
!569 = !DILocation(line: 188, column: 31, scope: !20)
!570 = !DILocation(line: 188, column: 37, scope: !20)
!571 = !DILocation(line: 188, column: 18, scope: !20)
!572 = !DILocation(line: 188, column: 16, scope: !20)
!573 = !DILocation(line: 189, column: 10, scope: !20)
!574 = !DILocation(line: 191, column: 15, scope: !575)
!575 = distinct !DILexicalBlock(scope: !20, file: !3, line: 190, column: 5)
!576 = !DILocation(line: 191, column: 7, scope: !575)
!577 = !DILocation(line: 194, column: 21, scope: !578)
!578 = distinct !DILexicalBlock(scope: !575, file: !3, line: 192, column: 9)
!579 = !DILocation(line: 195, column: 11, scope: !578)
!580 = !DILocation(line: 198, column: 21, scope: !578)
!581 = !DILocation(line: 199, column: 11, scope: !578)
!582 = !DILocation(line: 202, column: 21, scope: !578)
!583 = !DILocation(line: 203, column: 11, scope: !578)
!584 = !DILocation(line: 206, column: 23, scope: !578)
!585 = !DILocation(line: 207, column: 11, scope: !578)
!586 = !DILocation(line: 211, column: 23, scope: !578)
!587 = !DILocation(line: 212, column: 11, scope: !578)
!588 = !DILocation(line: 215, column: 25, scope: !578)
!589 = !DILocation(line: 216, column: 11, scope: !578)
!590 = !DILocation(line: 219, column: 25, scope: !578)
!591 = !DILocation(line: 220, column: 11, scope: !578)
!592 = !DILocation(line: 223, column: 28, scope: !578)
!593 = !DILocation(line: 223, column: 26, scope: !578)
!594 = !DILocation(line: 224, column: 11, scope: !578)
!595 = !DILocalVariable(name: "u_dummy", scope: !596, file: !3, line: 228, type: !15)
!596 = distinct !DILexicalBlock(scope: !578, file: !3, line: 227, column: 11)
!597 = !DILocation(line: 228, column: 19, scope: !596)
!598 = !DILocalVariable(name: "g_dummy", scope: !596, file: !3, line: 228, type: !15)
!599 = !DILocation(line: 228, column: 29, scope: !596)
!600 = !DILocalVariable(name: "e", scope: !596, file: !3, line: 229, type: !12)
!601 = !DILocation(line: 229, column: 25, scope: !596)
!602 = !DILocation(line: 229, column: 46, scope: !596)
!603 = !DILocation(line: 229, column: 29, scope: !596)
!604 = !DILocation(line: 232, column: 17, scope: !605)
!605 = distinct !DILexicalBlock(scope: !596, file: !3, line: 232, column: 17)
!606 = !DILocation(line: 232, column: 17, scope: !596)
!607 = !DILocation(line: 233, column: 49, scope: !605)
!608 = !DILocation(line: 233, column: 59, scope: !605)
!609 = !DILocation(line: 233, column: 52, scope: !605)
!610 = !DILocation(line: 233, column: 15, scope: !605)
!611 = !DILocation(line: 234, column: 13, scope: !596)
!612 = !DILocation(line: 238, column: 17, scope: !578)
!613 = !DILocation(line: 238, column: 25, scope: !578)
!614 = !DILocation(line: 239, column: 11, scope: !578)
!615 = !DILocation(line: 242, column: 17, scope: !578)
!616 = !DILocation(line: 242, column: 27, scope: !578)
!617 = !DILocation(line: 243, column: 11, scope: !578)
!618 = !DILocation(line: 246, column: 17, scope: !578)
!619 = !DILocation(line: 246, column: 30, scope: !578)
!620 = !DILocation(line: 247, column: 11, scope: !578)
!621 = !DILocation(line: 250, column: 17, scope: !578)
!622 = !DILocation(line: 250, column: 27, scope: !578)
!623 = !DILocation(line: 251, column: 11, scope: !578)
!624 = !DILocation(line: 253, column: 9, scope: !578)
!625 = !DILocation(line: 254, column: 9, scope: !578)
!626 = !DILocation(line: 256, column: 11, scope: !578)
!627 = distinct !{!627, !568, !628}
!628 = !DILocation(line: 258, column: 5, scope: !20)
!629 = !DILocation(line: 259, column: 1, scope: !20)
!630 = !DILocation(line: 260, column: 13, scope: !631)
!631 = distinct !DILexicalBlock(scope: !20, file: !3, line: 260, column: 7)
!632 = !DILocation(line: 260, column: 7, scope: !20)
!633 = !DILocation(line: 262, column: 11, scope: !634)
!634 = distinct !DILexicalBlock(scope: !635, file: !3, line: 262, column: 11)
!635 = distinct !DILexicalBlock(scope: !631, file: !3, line: 261, column: 5)
!636 = !DILocation(line: 262, column: 21, scope: !634)
!637 = !DILocation(line: 262, column: 11, scope: !635)
!638 = !DILocation(line: 264, column: 15, scope: !639)
!639 = distinct !DILexicalBlock(scope: !640, file: !3, line: 264, column: 15)
!640 = distinct !DILexicalBlock(scope: !634, file: !3, line: 263, column: 9)
!641 = !DILocation(line: 264, column: 27, scope: !639)
!642 = !DILocation(line: 264, column: 15, scope: !640)
!643 = !DILocation(line: 265, column: 13, scope: !639)
!644 = !DILocation(line: 267, column: 23, scope: !640)
!645 = !DILocation(line: 268, column: 9, scope: !640)
!646 = !DILocation(line: 269, column: 5, scope: !635)
!647 = !DILocation(line: 272, column: 17, scope: !648)
!648 = distinct !DILexicalBlock(scope: !631, file: !3, line: 271, column: 5)
!649 = !DILocation(line: 274, column: 36, scope: !20)
!650 = !DILocation(line: 274, column: 48, scope: !20)
!651 = !DILocation(line: 274, column: 9, scope: !20)
!652 = !DILocation(line: 274, column: 33, scope: !20)
!653 = !DILocation(line: 276, column: 7, scope: !654)
!654 = distinct !DILexicalBlock(scope: !20, file: !3, line: 276, column: 7)
!655 = !DILocation(line: 276, column: 14, scope: !654)
!656 = !DILocation(line: 276, column: 12, scope: !654)
!657 = !DILocation(line: 276, column: 24, scope: !654)
!658 = !DILocation(line: 276, column: 21, scope: !654)
!659 = !DILocation(line: 276, column: 7, scope: !20)
!660 = !DILocation(line: 278, column: 11, scope: !661)
!661 = distinct !DILexicalBlock(scope: !662, file: !3, line: 278, column: 11)
!662 = distinct !DILexicalBlock(scope: !654, file: !3, line: 277, column: 5)
!663 = !DILocation(line: 278, column: 19, scope: !661)
!664 = !DILocation(line: 278, column: 16, scope: !661)
!665 = !DILocation(line: 278, column: 11, scope: !662)
!666 = !DILocation(line: 279, column: 9, scope: !661)
!667 = !DILocation(line: 281, column: 60, scope: !661)
!668 = !DILocation(line: 281, column: 65, scope: !661)
!669 = !DILocation(line: 281, column: 70, scope: !661)
!670 = !DILocation(line: 281, column: 53, scope: !661)
!671 = !DILocation(line: 281, column: 9, scope: !661)
!672 = !DILocation(line: 282, column: 7, scope: !662)
!673 = !DILocation(line: 285, column: 7, scope: !674)
!674 = distinct !DILexicalBlock(scope: !20, file: !3, line: 285, column: 7)
!675 = !DILocation(line: 285, column: 7, scope: !20)
!676 = !DILocalVariable(name: "ref_stats", scope: !677, file: !3, line: 287, type: !678)
!677 = distinct !DILexicalBlock(scope: !674, file: !3, line: 286, column: 5)
!678 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !679, line: 46, size: 1152, elements: !680)
!679 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stat.h", directory: "/home/ma481/Downloads/Chisel/chisel-bench/benchmark/chown-8.2/original/obj-llvm/src")
!680 = !{!681, !682, !683, !685, !687, !688, !689, !690, !691, !693, !695, !697, !705, !706, !707}
!681 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !678, file: !679, line: 48, baseType: !37, size: 64)
!682 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !678, file: !679, line: 53, baseType: !32, size: 64, offset: 64)
!683 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !678, file: !679, line: 61, baseType: !684, size: 64, offset: 128)
!684 = !DIDerivedType(tag: DW_TAG_typedef, name: "__nlink_t", file: !33, line: 139, baseType: !34)
!685 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !678, file: !679, line: 62, baseType: !686, size: 32, offset: 192)
!686 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mode_t", file: !33, line: 138, baseType: !159)
!687 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !678, file: !679, line: 64, baseType: !230, size: 32, offset: 224)
!688 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !678, file: !679, line: 65, baseType: !232, size: 32, offset: 256)
!689 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !678, file: !679, line: 67, baseType: !23, size: 32, offset: 288)
!690 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !678, file: !679, line: 69, baseType: !37, size: 64, offset: 320)
!691 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !678, file: !679, line: 74, baseType: !692, size: 64, offset: 384)
!692 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off_t", file: !33, line: 140, baseType: !268)
!693 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !678, file: !679, line: 78, baseType: !694, size: 64, offset: 448)
!694 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blksize_t", file: !33, line: 162, baseType: !268)
!695 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !678, file: !679, line: 80, baseType: !696, size: 64, offset: 512)
!696 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blkcnt_t", file: !33, line: 167, baseType: !268)
!697 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !678, file: !679, line: 91, baseType: !698, size: 128, offset: 576)
!698 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !699, line: 8, size: 128, elements: !700)
!699 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/struct_timespec.h", directory: "/home/ma481/Downloads/Chisel/chisel-bench/benchmark/chown-8.2/original/obj-llvm/src")
!700 = !{!701, !703}
!701 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !698, file: !699, line: 10, baseType: !702, size: 64)
!702 = !DIDerivedType(tag: DW_TAG_typedef, name: "__time_t", file: !33, line: 148, baseType: !268)
!703 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !698, file: !699, line: 11, baseType: !704, size: 64, offset: 64)
!704 = !DIDerivedType(tag: DW_TAG_typedef, name: "__syscall_slong_t", file: !33, line: 184, baseType: !268)
!705 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !678, file: !679, line: 92, baseType: !698, size: 128, offset: 704)
!706 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !678, file: !679, line: 93, baseType: !698, size: 128, offset: 832)
!707 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !678, file: !679, line: 106, baseType: !708, size: 192, offset: 960)
!708 = !DICompositeType(tag: DW_TAG_array_type, baseType: !704, size: 192, elements: !319)
!709 = !DILocation(line: 287, column: 19, scope: !677)
!710 = !DILocation(line: 288, column: 17, scope: !711)
!711 = distinct !DILexicalBlock(scope: !677, file: !3, line: 288, column: 11)
!712 = !DILocation(line: 288, column: 11, scope: !711)
!713 = !DILocation(line: 288, column: 11, scope: !677)
!714 = !DILocation(line: 289, column: 30, scope: !711)
!715 = !DILocation(line: 290, column: 23, scope: !711)
!716 = !DILocation(line: 290, column: 16, scope: !711)
!717 = !DILocation(line: 289, column: 9, scope: !711)
!718 = !DILocation(line: 292, column: 23, scope: !677)
!719 = !DILocation(line: 292, column: 11, scope: !677)
!720 = !DILocation(line: 293, column: 23, scope: !677)
!721 = !DILocation(line: 293, column: 11, scope: !677)
!722 = !DILocation(line: 294, column: 48, scope: !677)
!723 = !DILocation(line: 294, column: 25, scope: !677)
!724 = !DILocation(line: 294, column: 13, scope: !677)
!725 = !DILocation(line: 294, column: 23, scope: !677)
!726 = !DILocation(line: 295, column: 49, scope: !677)
!727 = !DILocation(line: 295, column: 26, scope: !677)
!728 = !DILocation(line: 295, column: 13, scope: !677)
!729 = !DILocation(line: 295, column: 24, scope: !677)
!730 = !DILocation(line: 296, column: 5, scope: !677)
!731 = !DILocalVariable(name: "e", scope: !732, file: !3, line: 299, type: !12)
!732 = distinct !DILexicalBlock(scope: !674, file: !3, line: 298, column: 5)
!733 = !DILocation(line: 299, column: 19, scope: !732)
!734 = !DILocation(line: 299, column: 40, scope: !732)
!735 = !DILocation(line: 299, column: 45, scope: !732)
!736 = !DILocation(line: 300, column: 47, scope: !732)
!737 = !DILocation(line: 300, column: 65, scope: !732)
!738 = !DILocation(line: 299, column: 23, scope: !732)
!739 = !DILocation(line: 301, column: 11, scope: !740)
!740 = distinct !DILexicalBlock(scope: !732, file: !3, line: 301, column: 11)
!741 = !DILocation(line: 301, column: 11, scope: !732)
!742 = !DILocation(line: 302, column: 43, scope: !740)
!743 = !DILocation(line: 302, column: 53, scope: !740)
!744 = !DILocation(line: 302, column: 58, scope: !740)
!745 = !DILocation(line: 302, column: 46, scope: !740)
!746 = !DILocation(line: 302, column: 9, scope: !740)
!747 = !DILocation(line: 307, column: 18, scope: !748)
!748 = distinct !DILexicalBlock(scope: !732, file: !3, line: 307, column: 11)
!749 = !DILocation(line: 307, column: 12, scope: !748)
!750 = !DILocation(line: 307, column: 28, scope: !748)
!751 = !DILocation(line: 307, column: 37, scope: !748)
!752 = !DILocation(line: 307, column: 31, scope: !748)
!753 = !DILocation(line: 307, column: 11, scope: !732)
!754 = !DILocation(line: 308, column: 27, scope: !748)
!755 = !DILocation(line: 308, column: 15, scope: !748)
!756 = !DILocation(line: 308, column: 25, scope: !748)
!757 = !DILocation(line: 308, column: 9, scope: !748)
!758 = !DILocation(line: 310, column: 13, scope: !732)
!759 = !DILocation(line: 313, column: 13, scope: !760)
!760 = distinct !DILexicalBlock(scope: !20, file: !3, line: 313, column: 7)
!761 = !DILocation(line: 313, column: 21, scope: !760)
!762 = !DILocation(line: 313, column: 24, scope: !760)
!763 = !DILocation(line: 313, column: 7, scope: !20)
!764 = !DILocation(line: 316, column: 28, scope: !765)
!765 = distinct !DILexicalBlock(scope: !760, file: !3, line: 314, column: 5)
!766 = !DILocation(line: 316, column: 13, scope: !765)
!767 = !DILocation(line: 316, column: 26, scope: !765)
!768 = !DILocation(line: 317, column: 17, scope: !769)
!769 = distinct !DILexicalBlock(scope: !765, file: !3, line: 317, column: 11)
!770 = !DILocation(line: 317, column: 30, scope: !769)
!771 = !DILocation(line: 317, column: 11, scope: !765)
!772 = !DILocation(line: 318, column: 30, scope: !769)
!773 = !DILocation(line: 319, column: 16, scope: !769)
!774 = !DILocation(line: 318, column: 9, scope: !769)
!775 = !DILocation(line: 320, column: 5, scope: !765)
!776 = !DILocation(line: 322, column: 13, scope: !20)
!777 = !DILocation(line: 323, column: 21, scope: !20)
!778 = !DILocation(line: 323, column: 28, scope: !20)
!779 = !DILocation(line: 323, column: 26, scope: !20)
!780 = !DILocation(line: 323, column: 36, scope: !20)
!781 = !DILocation(line: 324, column: 21, scope: !20)
!782 = !DILocation(line: 324, column: 26, scope: !20)
!783 = !DILocation(line: 325, column: 21, scope: !20)
!784 = !DILocation(line: 325, column: 35, scope: !20)
!785 = !DILocation(line: 323, column: 8, scope: !20)
!786 = !DILocation(line: 323, column: 6, scope: !20)
!787 = !DILocation(line: 327, column: 3, scope: !20)
!788 = !DILocation(line: 329, column: 9, scope: !20)
!789 = !DILocation(line: 329, column: 3, scope: !20)
!790 = !DILocation(line: 330, column: 1, scope: !20)
!791 = distinct !DISubprogram(name: "bad_cast", scope: !501, file: !501, line: 623, type: !792, isLocal: true, isDefinition: true, scopeLine: 624, flags: DIFlagPrototyped, isOptimized: false, unit: !2, variables: !25)
!792 = !DISubroutineType(types: !793)
!793 = !{!15, !12}
!794 = !DILocalVariable(name: "s", arg: 1, scope: !791, file: !501, line: 623, type: !12)
!795 = !DILocation(line: 623, column: 23, scope: !791)
!796 = !DILocation(line: 625, column: 19, scope: !791)
!797 = !DILocation(line: 625, column: 3, scope: !791)
!798 = distinct !DISubprogram(name: "chopt_init", scope: !213, file: !213, line: 59, type: !799, isLocal: false, isDefinition: true, scopeLine: 60, flags: DIFlagPrototyped, isOptimized: false, unit: !212, variables: !25)
!799 = !DISubroutineType(types: !800)
!800 = !{null, !801}
!801 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !802, size: 64)
!802 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Chown_option", file: !6, line: 43, size: 320, elements: !803)
!803 = !{!804, !805, !806, !812, !813, !814, !815}
!804 = !DIDerivedType(tag: DW_TAG_member, name: "verbosity", scope: !802, file: !6, line: 46, baseType: !5, size: 32)
!805 = !DIDerivedType(tag: DW_TAG_member, name: "recurse", scope: !802, file: !6, line: 49, baseType: !79, size: 8, offset: 32)
!806 = !DIDerivedType(tag: DW_TAG_member, name: "root_dev_ino", scope: !802, file: !6, line: 53, baseType: !807, size: 64, offset: 64)
!807 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !808, size: 64)
!808 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_ino", file: !27, line: 7, size: 128, elements: !809)
!809 = !{!810, !811}
!810 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !808, file: !27, line: 9, baseType: !30, size: 64)
!811 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !808, file: !27, line: 10, baseType: !36, size: 64, offset: 64)
!812 = !DIDerivedType(tag: DW_TAG_member, name: "affect_symlink_referent", scope: !802, file: !6, line: 56, baseType: !79, size: 8, offset: 128)
!813 = !DIDerivedType(tag: DW_TAG_member, name: "force_silent", scope: !802, file: !6, line: 59, baseType: !79, size: 8, offset: 136)
!814 = !DIDerivedType(tag: DW_TAG_member, name: "user_name", scope: !802, file: !6, line: 62, baseType: !15, size: 64, offset: 192)
!815 = !DIDerivedType(tag: DW_TAG_member, name: "group_name", scope: !802, file: !6, line: 65, baseType: !15, size: 64, offset: 256)
!816 = !DILocalVariable(name: "chopt", arg: 1, scope: !798, file: !213, line: 59, type: !801)
!817 = !DILocation(line: 59, column: 34, scope: !798)
!818 = !DILocation(line: 61, column: 3, scope: !798)
!819 = !DILocation(line: 61, column: 10, scope: !798)
!820 = !DILocation(line: 61, column: 20, scope: !798)
!821 = !DILocation(line: 62, column: 3, scope: !798)
!822 = !DILocation(line: 62, column: 10, scope: !798)
!823 = !DILocation(line: 62, column: 23, scope: !798)
!824 = !DILocation(line: 63, column: 3, scope: !798)
!825 = !DILocation(line: 63, column: 10, scope: !798)
!826 = !DILocation(line: 63, column: 34, scope: !798)
!827 = !DILocation(line: 64, column: 3, scope: !798)
!828 = !DILocation(line: 64, column: 10, scope: !798)
!829 = !DILocation(line: 64, column: 18, scope: !798)
!830 = !DILocation(line: 65, column: 3, scope: !798)
!831 = !DILocation(line: 65, column: 10, scope: !798)
!832 = !DILocation(line: 65, column: 23, scope: !798)
!833 = !DILocation(line: 66, column: 3, scope: !798)
!834 = !DILocation(line: 66, column: 10, scope: !798)
!835 = !DILocation(line: 66, column: 20, scope: !798)
!836 = !DILocation(line: 67, column: 3, scope: !798)
!837 = !DILocation(line: 67, column: 10, scope: !798)
!838 = !DILocation(line: 67, column: 21, scope: !798)
!839 = !DILocation(line: 68, column: 1, scope: !798)
!840 = distinct !DISubprogram(name: "chopt_free", scope: !213, file: !213, line: 71, type: !799, isLocal: false, isDefinition: true, scopeLine: 72, flags: DIFlagPrototyped, isOptimized: false, unit: !212, variables: !25)
!841 = !DILocalVariable(name: "chopt", arg: 1, scope: !840, file: !213, line: 71, type: !801)
!842 = !DILocation(line: 71, column: 34, scope: !840)
!843 = !DILocation(line: 75, column: 1, scope: !840)
!844 = distinct !DISubprogram(name: "gid_to_name", scope: !213, file: !213, line: 82, type: !845, isLocal: false, isDefinition: true, scopeLine: 83, flags: DIFlagPrototyped, isOptimized: false, unit: !212, variables: !25)
!845 = !DISubroutineType(types: !846)
!846 = !{!15, !231}
!847 = !DILocalVariable(name: "gid", arg: 1, scope: !844, file: !213, line: 82, type: !231)
!848 = !DILocation(line: 82, column: 20, scope: !844)
!849 = !DILocalVariable(name: "buf", scope: !844, file: !213, line: 84, type: !850)
!850 = !DICompositeType(tag: DW_TAG_array_type, baseType: !14, size: 168, elements: !851)
!851 = !{!852}
!852 = !DISubrange(count: 21)
!853 = !DILocation(line: 84, column: 8, scope: !844)
!854 = !DILocalVariable(name: "grp", scope: !844, file: !213, line: 85, type: !855)
!855 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !856, size: 64)
!856 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "group", file: !857, line: 42, size: 256, elements: !858)
!857 = !DIFile(filename: "/usr/include/grp.h", directory: "/home/ma481/Downloads/Chisel/chisel-bench/benchmark/chown-8.2/original/obj-llvm/src")
!858 = !{!859, !860, !861, !862}
!859 = !DIDerivedType(tag: DW_TAG_member, name: "gr_name", scope: !856, file: !857, line: 44, baseType: !15, size: 64)
!860 = !DIDerivedType(tag: DW_TAG_member, name: "gr_passwd", scope: !856, file: !857, line: 45, baseType: !15, size: 64, offset: 64)
!861 = !DIDerivedType(tag: DW_TAG_member, name: "gr_gid", scope: !856, file: !857, line: 46, baseType: !232, size: 32, offset: 128)
!862 = !DIDerivedType(tag: DW_TAG_member, name: "gr_mem", scope: !856, file: !857, line: 47, baseType: !24, size: 64, offset: 192)
!863 = !DILocation(line: 85, column: 17, scope: !844)
!864 = !DILocation(line: 85, column: 33, scope: !844)
!865 = !DILocation(line: 85, column: 23, scope: !844)
!866 = !DILocation(line: 86, column: 19, scope: !844)
!867 = !DILocation(line: 86, column: 25, scope: !844)
!868 = !DILocation(line: 86, column: 30, scope: !844)
!869 = !DILocation(line: 88, column: 32, scope: !844)
!870 = !DILocation(line: 88, column: 37, scope: !844)
!871 = !DILocation(line: 88, column: 21, scope: !844)
!872 = !DILocation(line: 86, column: 10, scope: !844)
!873 = !DILocation(line: 86, column: 3, scope: !844)
!874 = distinct !DISubprogram(name: "uid_to_name", scope: !213, file: !213, line: 96, type: !875, isLocal: false, isDefinition: true, scopeLine: 97, flags: DIFlagPrototyped, isOptimized: false, unit: !212, variables: !25)
!875 = !DISubroutineType(types: !876)
!876 = !{!15, !229}
!877 = !DILocalVariable(name: "uid", arg: 1, scope: !874, file: !213, line: 96, type: !229)
!878 = !DILocation(line: 96, column: 20, scope: !874)
!879 = !DILocalVariable(name: "buf", scope: !874, file: !213, line: 98, type: !850)
!880 = !DILocation(line: 98, column: 8, scope: !874)
!881 = !DILocalVariable(name: "pwd", scope: !874, file: !213, line: 99, type: !882)
!882 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !883, size: 64)
!883 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "passwd", file: !884, line: 49, size: 384, elements: !885)
!884 = !DIFile(filename: "/usr/include/pwd.h", directory: "/home/ma481/Downloads/Chisel/chisel-bench/benchmark/chown-8.2/original/obj-llvm/src")
!885 = !{!886, !887, !888, !889, !890, !891, !892}
!886 = !DIDerivedType(tag: DW_TAG_member, name: "pw_name", scope: !883, file: !884, line: 51, baseType: !15, size: 64)
!887 = !DIDerivedType(tag: DW_TAG_member, name: "pw_passwd", scope: !883, file: !884, line: 52, baseType: !15, size: 64, offset: 64)
!888 = !DIDerivedType(tag: DW_TAG_member, name: "pw_uid", scope: !883, file: !884, line: 53, baseType: !230, size: 32, offset: 128)
!889 = !DIDerivedType(tag: DW_TAG_member, name: "pw_gid", scope: !883, file: !884, line: 54, baseType: !232, size: 32, offset: 160)
!890 = !DIDerivedType(tag: DW_TAG_member, name: "pw_gecos", scope: !883, file: !884, line: 55, baseType: !15, size: 64, offset: 192)
!891 = !DIDerivedType(tag: DW_TAG_member, name: "pw_dir", scope: !883, file: !884, line: 56, baseType: !15, size: 64, offset: 256)
!892 = !DIDerivedType(tag: DW_TAG_member, name: "pw_shell", scope: !883, file: !884, line: 57, baseType: !15, size: 64, offset: 320)
!893 = !DILocation(line: 99, column: 18, scope: !874)
!894 = !DILocation(line: 99, column: 34, scope: !874)
!895 = !DILocation(line: 99, column: 24, scope: !874)
!896 = !DILocation(line: 100, column: 19, scope: !874)
!897 = !DILocation(line: 100, column: 25, scope: !874)
!898 = !DILocation(line: 100, column: 30, scope: !874)
!899 = !DILocation(line: 102, column: 32, scope: !874)
!900 = !DILocation(line: 102, column: 37, scope: !874)
!901 = !DILocation(line: 102, column: 21, scope: !874)
!902 = !DILocation(line: 100, column: 10, scope: !874)
!903 = !DILocation(line: 100, column: 3, scope: !874)
!904 = distinct !DISubprogram(name: "chown_files", scope: !213, file: !213, line: 483, type: !905, isLocal: false, isDefinition: true, scopeLine: 487, flags: DIFlagPrototyped, isOptimized: false, unit: !212, variables: !25)
!905 = !DISubroutineType(types: !906)
!906 = !{!79, !24, !23, !229, !231, !229, !231, !907}
!907 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !908, size: 64)
!908 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !802)
!909 = !DILocalVariable(name: "files", arg: 1, scope: !904, file: !213, line: 483, type: !24)
!910 = !DILocation(line: 483, column: 21, scope: !904)
!911 = !DILocalVariable(name: "bit_flags", arg: 2, scope: !904, file: !213, line: 483, type: !23)
!912 = !DILocation(line: 483, column: 32, scope: !904)
!913 = !DILocalVariable(name: "uid", arg: 3, scope: !904, file: !213, line: 484, type: !229)
!914 = !DILocation(line: 484, column: 20, scope: !904)
!915 = !DILocalVariable(name: "gid", arg: 4, scope: !904, file: !213, line: 484, type: !231)
!916 = !DILocation(line: 484, column: 31, scope: !904)
!917 = !DILocalVariable(name: "required_uid", arg: 5, scope: !904, file: !213, line: 485, type: !229)
!918 = !DILocation(line: 485, column: 20, scope: !904)
!919 = !DILocalVariable(name: "required_gid", arg: 6, scope: !904, file: !213, line: 485, type: !231)
!920 = !DILocation(line: 485, column: 40, scope: !904)
!921 = !DILocalVariable(name: "chopt", arg: 7, scope: !904, file: !213, line: 486, type: !907)
!922 = !DILocation(line: 486, column: 41, scope: !904)
!923 = !DILocalVariable(name: "ok", scope: !904, file: !213, line: 488, type: !79)
!924 = !DILocation(line: 488, column: 8, scope: !904)
!925 = !DILocalVariable(name: "stat_flags", scope: !904, file: !213, line: 491, type: !23)
!926 = !DILocation(line: 491, column: 7, scope: !904)
!927 = !DILocation(line: 491, column: 22, scope: !904)
!928 = !DILocation(line: 491, column: 35, scope: !904)
!929 = !DILocation(line: 491, column: 49, scope: !904)
!930 = !DILocation(line: 491, column: 52, scope: !904)
!931 = !DILocation(line: 491, column: 65, scope: !904)
!932 = !DILocation(line: 492, column: 22, scope: !904)
!933 = !DILocation(line: 492, column: 25, scope: !904)
!934 = !DILocation(line: 492, column: 32, scope: !904)
!935 = !DILocation(line: 493, column: 22, scope: !904)
!936 = !DILocation(line: 493, column: 25, scope: !904)
!937 = !DILocation(line: 493, column: 32, scope: !904)
!938 = !DILocation(line: 493, column: 42, scope: !904)
!939 = !DILocation(line: 491, column: 21, scope: !904)
!940 = !DILocalVariable(name: "fts", scope: !904, file: !213, line: 497, type: !941)
!941 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !942, size: 64)
!942 = !DIDerivedType(tag: DW_TAG_typedef, name: "FTS", file: !943, line: 183, baseType: !944)
!943 = !DIFile(filename: "../../lib/fts_.h", directory: "/home/ma481/Downloads/Chisel/chisel-bench/benchmark/chown-8.2/original/obj-llvm/src")
!944 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !943, line: 68, size: 1024, elements: !945)
!945 = !{!946, !995, !996, !998, !999, !1000, !1001, !1002, !1003, !1004, !1011, !1012, !1015, !1022}
!946 = !DIDerivedType(tag: DW_TAG_member, name: "fts_cur", scope: !944, file: !943, line: 69, baseType: !947, size: 64)
!947 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !948, size: 64)
!948 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ftsent", file: !943, line: 185, size: 2112, elements: !949)
!949 = !{!950, !951, !952, !953, !954, !955, !956, !957, !958, !959, !962, !963, !965, !966, !968, !969, !970, !971, !994}
!950 = !DIDerivedType(tag: DW_TAG_member, name: "fts_cycle", scope: !948, file: !943, line: 186, baseType: !947, size: 64)
!951 = !DIDerivedType(tag: DW_TAG_member, name: "fts_parent", scope: !948, file: !943, line: 187, baseType: !947, size: 64, offset: 64)
!952 = !DIDerivedType(tag: DW_TAG_member, name: "fts_link", scope: !948, file: !943, line: 188, baseType: !947, size: 64, offset: 128)
!953 = !DIDerivedType(tag: DW_TAG_member, name: "fts_number", scope: !948, file: !943, line: 189, baseType: !268, size: 64, offset: 192)
!954 = !DIDerivedType(tag: DW_TAG_member, name: "fts_pointer", scope: !948, file: !943, line: 190, baseType: !16, size: 64, offset: 256)
!955 = !DIDerivedType(tag: DW_TAG_member, name: "fts_accpath", scope: !948, file: !943, line: 191, baseType: !15, size: 64, offset: 320)
!956 = !DIDerivedType(tag: DW_TAG_member, name: "fts_path", scope: !948, file: !943, line: 192, baseType: !15, size: 64, offset: 384)
!957 = !DIDerivedType(tag: DW_TAG_member, name: "fts_errno", scope: !948, file: !943, line: 193, baseType: !23, size: 32, offset: 448)
!958 = !DIDerivedType(tag: DW_TAG_member, name: "fts_symfd", scope: !948, file: !943, line: 194, baseType: !23, size: 32, offset: 480)
!959 = !DIDerivedType(tag: DW_TAG_member, name: "fts_pathlen", scope: !948, file: !943, line: 195, baseType: !960, size: 64, offset: 512)
!960 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !961, line: 62, baseType: !34)
!961 = !DIFile(filename: "/home/ma481/Downloads/LLVM_6.0/lib/clang/6.0.0/include/stddef.h", directory: "/home/ma481/Downloads/Chisel/chisel-bench/benchmark/chown-8.2/original/obj-llvm/src")
!962 = !DIDerivedType(tag: DW_TAG_member, name: "fts_fts", scope: !948, file: !943, line: 197, baseType: !941, size: 64, offset: 576)
!963 = !DIDerivedType(tag: DW_TAG_member, name: "fts_level", scope: !948, file: !943, line: 201, baseType: !964, size: 64, offset: 640)
!964 = !DIDerivedType(tag: DW_TAG_typedef, name: "ptrdiff_t", file: !961, line: 51, baseType: !268)
!965 = !DIDerivedType(tag: DW_TAG_member, name: "fts_namelen", scope: !948, file: !943, line: 203, baseType: !960, size: 64, offset: 704)
!966 = !DIDerivedType(tag: DW_TAG_member, name: "fts_n_dirs_remaining", scope: !948, file: !943, line: 204, baseType: !967, size: 64, offset: 768)
!967 = !DIDerivedType(tag: DW_TAG_typedef, name: "nlink_t", file: !31, line: 75, baseType: !684)
!968 = !DIDerivedType(tag: DW_TAG_member, name: "fts_info", scope: !948, file: !943, line: 220, baseType: !143, size: 16, offset: 832)
!969 = !DIDerivedType(tag: DW_TAG_member, name: "fts_flags", scope: !948, file: !943, line: 224, baseType: !143, size: 16, offset: 848)
!970 = !DIDerivedType(tag: DW_TAG_member, name: "fts_instr", scope: !948, file: !943, line: 230, baseType: !143, size: 16, offset: 864)
!971 = !DIDerivedType(tag: DW_TAG_member, name: "fts_statp", scope: !948, file: !943, line: 232, baseType: !972, size: 1152, offset: 896)
!972 = !DICompositeType(tag: DW_TAG_array_type, baseType: !973, size: 1152, elements: !321)
!973 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !679, line: 46, size: 1152, elements: !974)
!974 = !{!975, !976, !977, !978, !979, !980, !981, !982, !983, !984, !985, !986, !991, !992, !993}
!975 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !973, file: !679, line: 48, baseType: !37, size: 64)
!976 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !973, file: !679, line: 53, baseType: !32, size: 64, offset: 64)
!977 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !973, file: !679, line: 61, baseType: !684, size: 64, offset: 128)
!978 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !973, file: !679, line: 62, baseType: !686, size: 32, offset: 192)
!979 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !973, file: !679, line: 64, baseType: !230, size: 32, offset: 224)
!980 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !973, file: !679, line: 65, baseType: !232, size: 32, offset: 256)
!981 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !973, file: !679, line: 67, baseType: !23, size: 32, offset: 288)
!982 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !973, file: !679, line: 69, baseType: !37, size: 64, offset: 320)
!983 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !973, file: !679, line: 74, baseType: !692, size: 64, offset: 384)
!984 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !973, file: !679, line: 78, baseType: !694, size: 64, offset: 448)
!985 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !973, file: !679, line: 80, baseType: !696, size: 64, offset: 512)
!986 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !973, file: !679, line: 91, baseType: !987, size: 128, offset: 576)
!987 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !699, line: 8, size: 128, elements: !988)
!988 = !{!989, !990}
!989 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !987, file: !699, line: 10, baseType: !702, size: 64)
!990 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !987, file: !699, line: 11, baseType: !704, size: 64, offset: 64)
!991 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !973, file: !679, line: 92, baseType: !987, size: 128, offset: 704)
!992 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !973, file: !679, line: 93, baseType: !987, size: 128, offset: 832)
!993 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !973, file: !679, line: 106, baseType: !708, size: 192, offset: 960)
!994 = !DIDerivedType(tag: DW_TAG_member, name: "fts_name", scope: !948, file: !943, line: 233, baseType: !324, size: 8, offset: 2048)
!995 = !DIDerivedType(tag: DW_TAG_member, name: "fts_child", scope: !944, file: !943, line: 70, baseType: !947, size: 64, offset: 64)
!996 = !DIDerivedType(tag: DW_TAG_member, name: "fts_array", scope: !944, file: !943, line: 71, baseType: !997, size: 64, offset: 128)
!997 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !947, size: 64)
!998 = !DIDerivedType(tag: DW_TAG_member, name: "fts_dev", scope: !944, file: !943, line: 72, baseType: !36, size: 64, offset: 192)
!999 = !DIDerivedType(tag: DW_TAG_member, name: "fts_path", scope: !944, file: !943, line: 73, baseType: !15, size: 64, offset: 256)
!1000 = !DIDerivedType(tag: DW_TAG_member, name: "fts_rfd", scope: !944, file: !943, line: 74, baseType: !23, size: 32, offset: 320)
!1001 = !DIDerivedType(tag: DW_TAG_member, name: "fts_cwd_fd", scope: !944, file: !943, line: 75, baseType: !23, size: 32, offset: 352)
!1002 = !DIDerivedType(tag: DW_TAG_member, name: "fts_pathlen", scope: !944, file: !943, line: 77, baseType: !960, size: 64, offset: 384)
!1003 = !DIDerivedType(tag: DW_TAG_member, name: "fts_nitems", scope: !944, file: !943, line: 78, baseType: !960, size: 64, offset: 448)
!1004 = !DIDerivedType(tag: DW_TAG_member, name: "fts_compar", scope: !944, file: !943, line: 79, baseType: !1005, size: 64, offset: 512)
!1005 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1006, size: 64)
!1006 = !DISubroutineType(types: !1007)
!1007 = !{!23, !1008, !1008}
!1008 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1009, size: 64)
!1009 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1010, size: 64)
!1010 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !948)
!1011 = !DIDerivedType(tag: DW_TAG_member, name: "fts_options", scope: !944, file: !943, line: 144, baseType: !23, size: 32, offset: 576)
!1012 = !DIDerivedType(tag: DW_TAG_member, name: "fts_leaf_optimization_works_ht", scope: !944, file: !943, line: 154, baseType: !1013, size: 64, offset: 640)
!1013 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1014, size: 64)
!1014 = !DICompositeType(tag: DW_TAG_structure_type, name: "hash_table", file: !943, line: 154, flags: DIFlagFwdDecl)
!1015 = !DIDerivedType(tag: DW_TAG_member, name: "fts_cycle", scope: !944, file: !943, line: 176, baseType: !1016, size: 64, offset: 704)
!1016 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !944, file: !943, line: 156, size: 64, elements: !1017)
!1017 = !{!1018, !1019}
!1018 = !DIDerivedType(tag: DW_TAG_member, name: "ht", scope: !1016, file: !943, line: 169, baseType: !1013, size: 64)
!1019 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1016, file: !943, line: 175, baseType: !1020, size: 64)
!1020 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1021, size: 64)
!1021 = !DICompositeType(tag: DW_TAG_structure_type, name: "cycle_check_state", file: !943, line: 175, flags: DIFlagFwdDecl)
!1022 = !DIDerivedType(tag: DW_TAG_member, name: "fts_fd_ring", scope: !944, file: !943, line: 182, baseType: !1023, size: 256, offset: 768)
!1023 = !DIDerivedType(tag: DW_TAG_typedef, name: "I_ring", file: !1024, line: 39, baseType: !1025)
!1024 = !DIFile(filename: "../../lib/i-ring.h", directory: "/home/ma481/Downloads/Chisel/chisel-bench/benchmark/chown-8.2/original/obj-llvm/src")
!1025 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "I_ring", file: !1024, line: 31, size: 256, elements: !1026)
!1026 = !{!1027, !1028, !1029, !1030, !1031}
!1027 = !DIDerivedType(tag: DW_TAG_member, name: "ir_data", scope: !1025, file: !1024, line: 33, baseType: !373, size: 128)
!1028 = !DIDerivedType(tag: DW_TAG_member, name: "ir_default_val", scope: !1025, file: !1024, line: 34, baseType: !23, size: 32, offset: 128)
!1029 = !DIDerivedType(tag: DW_TAG_member, name: "ir_front", scope: !1025, file: !1024, line: 35, baseType: !159, size: 32, offset: 160)
!1030 = !DIDerivedType(tag: DW_TAG_member, name: "ir_back", scope: !1025, file: !1024, line: 36, baseType: !159, size: 32, offset: 192)
!1031 = !DIDerivedType(tag: DW_TAG_member, name: "ir_empty", scope: !1025, file: !1024, line: 37, baseType: !79, size: 8, offset: 224)
!1032 = !DILocation(line: 497, column: 8, scope: !904)
!1033 = !DILocation(line: 497, column: 25, scope: !904)
!1034 = !DILocation(line: 497, column: 32, scope: !904)
!1035 = !DILocation(line: 497, column: 44, scope: !904)
!1036 = !DILocation(line: 497, column: 42, scope: !904)
!1037 = !DILocation(line: 497, column: 14, scope: !904)
!1038 = !DILocation(line: 499, column: 3, scope: !904)
!1039 = !DILocalVariable(name: "ent", scope: !1040, file: !213, line: 501, type: !1041)
!1040 = distinct !DILexicalBlock(scope: !904, file: !213, line: 500, column: 5)
!1041 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1042, size: 64)
!1042 = !DIDerivedType(tag: DW_TAG_typedef, name: "FTSENT", file: !943, line: 234, baseType: !948)
!1043 = !DILocation(line: 501, column: 15, scope: !1040)
!1044 = !DILocation(line: 503, column: 23, scope: !1040)
!1045 = !DILocation(line: 503, column: 13, scope: !1040)
!1046 = !DILocation(line: 503, column: 11, scope: !1040)
!1047 = !DILocation(line: 504, column: 11, scope: !1048)
!1048 = distinct !DILexicalBlock(scope: !1040, file: !213, line: 504, column: 11)
!1049 = !DILocation(line: 504, column: 15, scope: !1048)
!1050 = !DILocation(line: 504, column: 11, scope: !1040)
!1051 = !DILocation(line: 506, column: 15, scope: !1052)
!1052 = distinct !DILexicalBlock(scope: !1053, file: !213, line: 506, column: 15)
!1053 = distinct !DILexicalBlock(scope: !1048, file: !213, line: 505, column: 9)
!1054 = !DILocation(line: 506, column: 21, scope: !1052)
!1055 = !DILocation(line: 506, column: 15, scope: !1053)
!1056 = !DILocation(line: 509, column: 21, scope: !1057)
!1057 = distinct !DILexicalBlock(scope: !1058, file: !213, line: 509, column: 19)
!1058 = distinct !DILexicalBlock(scope: !1052, file: !213, line: 507, column: 13)
!1059 = !DILocation(line: 509, column: 28, scope: !1057)
!1060 = !DILocation(line: 509, column: 19, scope: !1058)
!1061 = !DILocation(line: 510, column: 27, scope: !1057)
!1062 = !DILocation(line: 510, column: 17, scope: !1057)
!1063 = !DILocation(line: 511, column: 18, scope: !1058)
!1064 = !DILocation(line: 512, column: 13, scope: !1058)
!1065 = !DILocation(line: 513, column: 11, scope: !1053)
!1066 = !DILocation(line: 516, column: 32, scope: !1040)
!1067 = !DILocation(line: 516, column: 37, scope: !1040)
!1068 = !DILocation(line: 516, column: 42, scope: !1040)
!1069 = !DILocation(line: 516, column: 47, scope: !1040)
!1070 = !DILocation(line: 517, column: 32, scope: !1040)
!1071 = !DILocation(line: 517, column: 46, scope: !1040)
!1072 = !DILocation(line: 517, column: 60, scope: !1040)
!1073 = !DILocation(line: 516, column: 13, scope: !1040)
!1074 = !DILocation(line: 516, column: 10, scope: !1040)
!1075 = distinct !{!1075, !1038, !1076}
!1076 = !DILocation(line: 518, column: 5, scope: !904)
!1077 = !DILocation(line: 520, column: 18, scope: !1078)
!1078 = distinct !DILexicalBlock(scope: !904, file: !213, line: 520, column: 7)
!1079 = !DILocation(line: 520, column: 7, scope: !1078)
!1080 = !DILocation(line: 520, column: 23, scope: !1078)
!1081 = !DILocation(line: 520, column: 7, scope: !904)
!1082 = !DILocation(line: 522, column: 17, scope: !1083)
!1083 = distinct !DILexicalBlock(scope: !1078, file: !213, line: 521, column: 5)
!1084 = !DILocation(line: 522, column: 7, scope: !1083)
!1085 = !DILocation(line: 523, column: 10, scope: !1083)
!1086 = !DILocation(line: 524, column: 5, scope: !1083)
!1087 = !DILocation(line: 526, column: 10, scope: !904)
!1088 = !DILocation(line: 526, column: 3, scope: !904)
!1089 = distinct !DISubprogram(name: "change_file_owner", scope: !213, file: !213, line: 248, type: !1090, isLocal: true, isDefinition: true, scopeLine: 252, flags: DIFlagPrototyped, isOptimized: false, unit: !212, variables: !25)
!1090 = !DISubroutineType(types: !1091)
!1091 = !{!79, !941, !1041, !229, !231, !229, !231, !907}
!1092 = !DILocalVariable(name: "fts", arg: 1, scope: !1089, file: !213, line: 248, type: !941)
!1093 = !DILocation(line: 248, column: 25, scope: !1089)
!1094 = !DILocalVariable(name: "ent", arg: 2, scope: !1089, file: !213, line: 248, type: !1041)
!1095 = !DILocation(line: 248, column: 38, scope: !1089)
!1096 = !DILocalVariable(name: "uid", arg: 3, scope: !1089, file: !213, line: 249, type: !229)
!1097 = !DILocation(line: 249, column: 26, scope: !1089)
!1098 = !DILocalVariable(name: "gid", arg: 4, scope: !1089, file: !213, line: 249, type: !231)
!1099 = !DILocation(line: 249, column: 37, scope: !1089)
!1100 = !DILocalVariable(name: "required_uid", arg: 5, scope: !1089, file: !213, line: 250, type: !229)
!1101 = !DILocation(line: 250, column: 26, scope: !1089)
!1102 = !DILocalVariable(name: "required_gid", arg: 6, scope: !1089, file: !213, line: 250, type: !231)
!1103 = !DILocation(line: 250, column: 46, scope: !1089)
!1104 = !DILocalVariable(name: "chopt", arg: 7, scope: !1089, file: !213, line: 251, type: !907)
!1105 = !DILocation(line: 251, column: 47, scope: !1089)
!1106 = !DILocalVariable(name: "file_full_name", scope: !1089, file: !213, line: 253, type: !12)
!1107 = !DILocation(line: 253, column: 15, scope: !1089)
!1108 = !DILocation(line: 253, column: 32, scope: !1089)
!1109 = !DILocation(line: 253, column: 37, scope: !1089)
!1110 = !DILocalVariable(name: "file", scope: !1089, file: !213, line: 254, type: !12)
!1111 = !DILocation(line: 254, column: 15, scope: !1089)
!1112 = !DILocation(line: 254, column: 22, scope: !1089)
!1113 = !DILocation(line: 254, column: 27, scope: !1089)
!1114 = !DILocalVariable(name: "file_stats", scope: !1089, file: !213, line: 255, type: !1115)
!1115 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1116, size: 64)
!1116 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !973)
!1117 = !DILocation(line: 255, column: 22, scope: !1089)
!1118 = !DILocalVariable(name: "stat_buf", scope: !1089, file: !213, line: 256, type: !973)
!1119 = !DILocation(line: 256, column: 15, scope: !1089)
!1120 = !DILocalVariable(name: "ok", scope: !1089, file: !213, line: 257, type: !79)
!1121 = !DILocation(line: 257, column: 8, scope: !1089)
!1122 = !DILocalVariable(name: "do_chown", scope: !1089, file: !213, line: 258, type: !79)
!1123 = !DILocation(line: 258, column: 8, scope: !1089)
!1124 = !DILocalVariable(name: "symlink_changed", scope: !1089, file: !213, line: 259, type: !79)
!1125 = !DILocation(line: 259, column: 8, scope: !1089)
!1126 = !DILocation(line: 261, column: 11, scope: !1089)
!1127 = !DILocation(line: 261, column: 16, scope: !1089)
!1128 = !DILocation(line: 261, column: 3, scope: !1089)
!1129 = !DILocation(line: 264, column: 11, scope: !1130)
!1130 = distinct !DILexicalBlock(scope: !1131, file: !213, line: 264, column: 11)
!1131 = distinct !DILexicalBlock(scope: !1089, file: !213, line: 262, column: 5)
!1132 = !DILocation(line: 264, column: 18, scope: !1130)
!1133 = !DILocation(line: 264, column: 11, scope: !1131)
!1134 = !DILocation(line: 266, column: 15, scope: !1135)
!1135 = distinct !DILexicalBlock(scope: !1136, file: !213, line: 266, column: 15)
!1136 = distinct !DILexicalBlock(scope: !1130, file: !213, line: 265, column: 9)
!1137 = !DILocation(line: 266, column: 15, scope: !1136)
!1138 = !DILocation(line: 270, column: 15, scope: !1139)
!1139 = distinct !DILexicalBlock(scope: !1135, file: !213, line: 267, column: 13)
!1140 = distinct !{!1140, !1138, !1138}
!1141 = !DILocation(line: 270, column: 15, scope: !1142)
!1142 = distinct !DILexicalBlock(scope: !1143, file: !213, line: 270, column: 15)
!1143 = distinct !DILexicalBlock(scope: !1139, file: !213, line: 270, column: 15)
!1144 = !DILocation(line: 270, column: 15, scope: !1143)
!1145 = !DILocation(line: 272, column: 24, scope: !1139)
!1146 = !DILocation(line: 272, column: 29, scope: !1139)
!1147 = !DILocation(line: 272, column: 15, scope: !1139)
!1148 = !DILocation(line: 274, column: 37, scope: !1139)
!1149 = !DILocation(line: 274, column: 27, scope: !1139)
!1150 = !DILocation(line: 274, column: 15, scope: !1139)
!1151 = !DILocation(line: 275, column: 15, scope: !1139)
!1152 = !DILocation(line: 277, column: 11, scope: !1136)
!1153 = !DILocation(line: 279, column: 7, scope: !1131)
!1154 = !DILocation(line: 282, column: 13, scope: !1155)
!1155 = distinct !DILexicalBlock(scope: !1131, file: !213, line: 282, column: 11)
!1156 = !DILocation(line: 282, column: 20, scope: !1155)
!1157 = !DILocation(line: 282, column: 11, scope: !1131)
!1158 = !DILocation(line: 283, column: 9, scope: !1155)
!1159 = !DILocation(line: 284, column: 7, scope: !1131)
!1160 = !DILocation(line: 294, column: 11, scope: !1161)
!1161 = distinct !DILexicalBlock(scope: !1131, file: !213, line: 294, column: 11)
!1162 = !DILocation(line: 294, column: 16, scope: !1161)
!1163 = !DILocation(line: 294, column: 26, scope: !1161)
!1164 = !DILocation(line: 294, column: 31, scope: !1161)
!1165 = !DILocation(line: 294, column: 34, scope: !1161)
!1166 = !DILocation(line: 294, column: 39, scope: !1161)
!1167 = !DILocation(line: 294, column: 50, scope: !1161)
!1168 = !DILocation(line: 294, column: 11, scope: !1131)
!1169 = !DILocation(line: 296, column: 11, scope: !1170)
!1170 = distinct !DILexicalBlock(scope: !1161, file: !213, line: 295, column: 9)
!1171 = !DILocation(line: 296, column: 16, scope: !1170)
!1172 = !DILocation(line: 296, column: 27, scope: !1170)
!1173 = !DILocation(line: 297, column: 20, scope: !1170)
!1174 = !DILocation(line: 297, column: 25, scope: !1170)
!1175 = !DILocation(line: 297, column: 11, scope: !1170)
!1176 = !DILocation(line: 298, column: 11, scope: !1170)
!1177 = !DILocation(line: 300, column: 13, scope: !1178)
!1178 = distinct !DILexicalBlock(scope: !1131, file: !213, line: 300, column: 11)
!1179 = !DILocation(line: 300, column: 20, scope: !1178)
!1180 = !DILocation(line: 300, column: 11, scope: !1131)
!1181 = !DILocation(line: 301, column: 19, scope: !1178)
!1182 = !DILocation(line: 301, column: 24, scope: !1178)
!1183 = !DILocation(line: 302, column: 23, scope: !1178)
!1184 = !DILocation(line: 302, column: 16, scope: !1178)
!1185 = !DILocation(line: 301, column: 9, scope: !1178)
!1186 = !DILocation(line: 303, column: 10, scope: !1131)
!1187 = !DILocation(line: 304, column: 7, scope: !1131)
!1188 = !DILocation(line: 307, column: 13, scope: !1189)
!1189 = distinct !DILexicalBlock(scope: !1131, file: !213, line: 307, column: 11)
!1190 = !DILocation(line: 307, column: 20, scope: !1189)
!1191 = !DILocation(line: 307, column: 11, scope: !1131)
!1192 = !DILocation(line: 308, column: 19, scope: !1189)
!1193 = !DILocation(line: 308, column: 24, scope: !1189)
!1194 = !DILocation(line: 308, column: 51, scope: !1189)
!1195 = !DILocation(line: 308, column: 44, scope: !1189)
!1196 = !DILocation(line: 308, column: 9, scope: !1189)
!1197 = !DILocation(line: 309, column: 10, scope: !1131)
!1198 = !DILocation(line: 310, column: 7, scope: !1131)
!1199 = !DILocation(line: 313, column: 13, scope: !1200)
!1200 = distinct !DILexicalBlock(scope: !1131, file: !213, line: 313, column: 11)
!1201 = !DILocation(line: 313, column: 20, scope: !1200)
!1202 = !DILocation(line: 313, column: 11, scope: !1131)
!1203 = !DILocation(line: 314, column: 19, scope: !1200)
!1204 = !DILocation(line: 314, column: 24, scope: !1200)
!1205 = !DILocation(line: 315, column: 23, scope: !1200)
!1206 = !DILocation(line: 315, column: 16, scope: !1200)
!1207 = !DILocation(line: 314, column: 9, scope: !1200)
!1208 = !DILocation(line: 316, column: 10, scope: !1131)
!1209 = !DILocation(line: 317, column: 7, scope: !1131)
!1210 = !DILocation(line: 320, column: 35, scope: !1211)
!1211 = distinct !DILexicalBlock(scope: !1131, file: !213, line: 320, column: 11)
!1212 = !DILocation(line: 320, column: 40, scope: !1211)
!1213 = !DILocation(line: 320, column: 11, scope: !1211)
!1214 = !DILocation(line: 320, column: 11, scope: !1131)
!1215 = !DILocation(line: 322, column: 11, scope: !1216)
!1216 = distinct !DILexicalBlock(scope: !1211, file: !213, line: 321, column: 9)
!1217 = distinct !{!1217, !1215, !1215}
!1218 = !DILocation(line: 322, column: 11, scope: !1219)
!1219 = distinct !DILexicalBlock(scope: !1216, file: !213, line: 322, column: 11)
!1220 = !DILocation(line: 323, column: 11, scope: !1216)
!1221 = !DILocation(line: 325, column: 7, scope: !1131)
!1222 = !DILocation(line: 328, column: 7, scope: !1131)
!1223 = !DILocation(line: 331, column: 8, scope: !1224)
!1224 = distinct !DILexicalBlock(scope: !1089, file: !213, line: 331, column: 7)
!1225 = !DILocation(line: 331, column: 7, scope: !1089)
!1226 = !DILocation(line: 333, column: 16, scope: !1227)
!1227 = distinct !DILexicalBlock(scope: !1224, file: !213, line: 332, column: 5)
!1228 = !DILocation(line: 334, column: 18, scope: !1227)
!1229 = !DILocation(line: 335, column: 5, scope: !1227)
!1230 = !DILocation(line: 336, column: 12, scope: !1231)
!1231 = distinct !DILexicalBlock(scope: !1224, file: !213, line: 336, column: 12)
!1232 = !DILocation(line: 336, column: 25, scope: !1231)
!1233 = !DILocation(line: 336, column: 39, scope: !1231)
!1234 = !DILocation(line: 336, column: 42, scope: !1231)
!1235 = !DILocation(line: 336, column: 55, scope: !1231)
!1236 = !DILocation(line: 337, column: 12, scope: !1231)
!1237 = !DILocation(line: 337, column: 15, scope: !1231)
!1238 = !DILocation(line: 337, column: 22, scope: !1231)
!1239 = !DILocation(line: 337, column: 32, scope: !1231)
!1240 = !DILocation(line: 338, column: 12, scope: !1231)
!1241 = !DILocation(line: 338, column: 17, scope: !1231)
!1242 = !DILocation(line: 338, column: 24, scope: !1231)
!1243 = !DILocation(line: 339, column: 12, scope: !1231)
!1244 = !DILocation(line: 339, column: 17, scope: !1231)
!1245 = !DILocation(line: 339, column: 24, scope: !1231)
!1246 = !DILocation(line: 336, column: 12, scope: !1224)
!1247 = !DILocation(line: 341, column: 16, scope: !1248)
!1248 = distinct !DILexicalBlock(scope: !1231, file: !213, line: 340, column: 5)
!1249 = !DILocation(line: 342, column: 20, scope: !1248)
!1250 = !DILocation(line: 342, column: 25, scope: !1248)
!1251 = !DILocation(line: 342, column: 18, scope: !1248)
!1252 = !DILocation(line: 343, column: 5, scope: !1248)
!1253 = !DILocation(line: 346, column: 20, scope: !1254)
!1254 = distinct !DILexicalBlock(scope: !1231, file: !213, line: 345, column: 5)
!1255 = !DILocation(line: 346, column: 25, scope: !1254)
!1256 = !DILocation(line: 346, column: 18, scope: !1254)
!1257 = !DILocation(line: 350, column: 11, scope: !1258)
!1258 = distinct !DILexicalBlock(scope: !1254, file: !213, line: 350, column: 11)
!1259 = !DILocation(line: 350, column: 18, scope: !1258)
!1260 = !DILocation(line: 350, column: 42, scope: !1258)
!1261 = !DILocation(line: 350, column: 45, scope: !1258)
!1262 = !DILocation(line: 350, column: 11, scope: !1254)
!1263 = !DILocation(line: 352, column: 24, scope: !1264)
!1264 = distinct !DILexicalBlock(scope: !1265, file: !213, line: 352, column: 15)
!1265 = distinct !DILexicalBlock(scope: !1258, file: !213, line: 351, column: 9)
!1266 = !DILocation(line: 352, column: 29, scope: !1264)
!1267 = !DILocation(line: 352, column: 41, scope: !1264)
!1268 = !DILocation(line: 352, column: 15, scope: !1264)
!1269 = !DILocation(line: 352, column: 61, scope: !1264)
!1270 = !DILocation(line: 352, column: 15, scope: !1265)
!1271 = !DILocation(line: 354, column: 21, scope: !1272)
!1272 = distinct !DILexicalBlock(scope: !1273, file: !213, line: 354, column: 19)
!1273 = distinct !DILexicalBlock(scope: !1264, file: !213, line: 353, column: 13)
!1274 = !DILocation(line: 354, column: 28, scope: !1272)
!1275 = !DILocation(line: 354, column: 19, scope: !1273)
!1276 = !DILocation(line: 355, column: 27, scope: !1272)
!1277 = !DILocation(line: 356, column: 31, scope: !1272)
!1278 = !DILocation(line: 356, column: 24, scope: !1272)
!1279 = !DILocation(line: 355, column: 17, scope: !1272)
!1280 = !DILocation(line: 357, column: 18, scope: !1273)
!1281 = !DILocation(line: 358, column: 13, scope: !1273)
!1282 = !DILocation(line: 360, column: 22, scope: !1265)
!1283 = !DILocation(line: 361, column: 9, scope: !1265)
!1284 = !DILocation(line: 363, column: 19, scope: !1254)
!1285 = !DILocation(line: 364, column: 19, scope: !1254)
!1286 = !DILocation(line: 364, column: 23, scope: !1254)
!1287 = !DILocation(line: 364, column: 36, scope: !1254)
!1288 = !DILocation(line: 365, column: 23, scope: !1254)
!1289 = !DILocation(line: 365, column: 26, scope: !1254)
!1290 = !DILocation(line: 365, column: 42, scope: !1254)
!1291 = !DILocation(line: 365, column: 54, scope: !1254)
!1292 = !DILocation(line: 365, column: 39, scope: !1254)
!1293 = !DILocation(line: 366, column: 19, scope: !1254)
!1294 = !DILocation(line: 366, column: 23, scope: !1254)
!1295 = !DILocation(line: 366, column: 36, scope: !1254)
!1296 = !DILocation(line: 367, column: 23, scope: !1254)
!1297 = !DILocation(line: 367, column: 26, scope: !1254)
!1298 = !DILocation(line: 367, column: 42, scope: !1254)
!1299 = !DILocation(line: 367, column: 54, scope: !1254)
!1300 = !DILocation(line: 367, column: 39, scope: !1254)
!1301 = !DILocation(line: 363, column: 16, scope: !1254)
!1302 = !DILocation(line: 371, column: 7, scope: !1303)
!1303 = distinct !DILexicalBlock(scope: !1089, file: !213, line: 371, column: 7)
!1304 = !DILocation(line: 372, column: 7, scope: !1303)
!1305 = !DILocation(line: 372, column: 10, scope: !1303)
!1306 = !DILocation(line: 373, column: 7, scope: !1303)
!1307 = !DILocation(line: 373, column: 10, scope: !1303)
!1308 = !DILocation(line: 371, column: 7, scope: !1089)
!1309 = !DILocation(line: 375, column: 7, scope: !1310)
!1310 = distinct !DILexicalBlock(scope: !1303, file: !213, line: 374, column: 5)
!1311 = distinct !{!1311, !1309, !1309}
!1312 = !DILocation(line: 375, column: 7, scope: !1313)
!1313 = distinct !DILexicalBlock(scope: !1314, file: !213, line: 375, column: 7)
!1314 = distinct !DILexicalBlock(scope: !1310, file: !213, line: 375, column: 7)
!1315 = !DILocation(line: 375, column: 7, scope: !1314)
!1316 = !DILocation(line: 376, column: 7, scope: !1310)
!1317 = !DILocation(line: 379, column: 7, scope: !1318)
!1318 = distinct !DILexicalBlock(scope: !1089, file: !213, line: 379, column: 7)
!1319 = !DILocation(line: 379, column: 7, scope: !1089)
!1320 = !DILocation(line: 381, column: 14, scope: !1321)
!1321 = distinct !DILexicalBlock(scope: !1322, file: !213, line: 381, column: 12)
!1322 = distinct !DILexicalBlock(scope: !1318, file: !213, line: 380, column: 5)
!1323 = !DILocation(line: 381, column: 21, scope: !1321)
!1324 = !DILocation(line: 381, column: 12, scope: !1322)
!1325 = !DILocation(line: 383, column: 27, scope: !1326)
!1326 = distinct !DILexicalBlock(scope: !1321, file: !213, line: 382, column: 9)
!1327 = !DILocation(line: 383, column: 32, scope: !1326)
!1328 = !DILocation(line: 383, column: 44, scope: !1326)
!1329 = !DILocation(line: 383, column: 50, scope: !1326)
!1330 = !DILocation(line: 383, column: 55, scope: !1326)
!1331 = !DILocation(line: 383, column: 17, scope: !1326)
!1332 = !DILocation(line: 383, column: 60, scope: !1326)
!1333 = !DILocation(line: 383, column: 14, scope: !1326)
!1334 = !DILocation(line: 388, column: 16, scope: !1335)
!1335 = distinct !DILexicalBlock(scope: !1326, file: !213, line: 388, column: 15)
!1336 = !DILocation(line: 388, column: 19, scope: !1335)
!1337 = !DILocation(line: 388, column: 22, scope: !1335)
!1338 = !DILocation(line: 388, column: 28, scope: !1335)
!1339 = !DILocation(line: 388, column: 15, scope: !1326)
!1340 = !DILocation(line: 390, column: 18, scope: !1341)
!1341 = distinct !DILexicalBlock(scope: !1335, file: !213, line: 389, column: 13)
!1342 = !DILocation(line: 391, column: 31, scope: !1341)
!1343 = !DILocation(line: 392, column: 13, scope: !1341)
!1344 = !DILocation(line: 393, column: 9, scope: !1326)
!1345 = !DILocalVariable(name: "err", scope: !1346, file: !213, line: 406, type: !215)
!1346 = distinct !DILexicalBlock(scope: !1321, file: !213, line: 395, column: 9)
!1347 = !DILocation(line: 406, column: 27, scope: !1346)
!1348 = !DILocation(line: 407, column: 33, scope: !1346)
!1349 = !DILocation(line: 407, column: 38, scope: !1346)
!1350 = !DILocation(line: 407, column: 50, scope: !1346)
!1351 = !DILocation(line: 407, column: 56, scope: !1346)
!1352 = !DILocation(line: 407, column: 68, scope: !1346)
!1353 = !DILocation(line: 407, column: 73, scope: !1346)
!1354 = !DILocation(line: 408, column: 33, scope: !1346)
!1355 = !DILocation(line: 408, column: 47, scope: !1346)
!1356 = !DILocation(line: 407, column: 15, scope: !1346)
!1357 = !DILocation(line: 409, column: 19, scope: !1346)
!1358 = !DILocation(line: 409, column: 11, scope: !1346)
!1359 = !DILocation(line: 412, column: 15, scope: !1360)
!1360 = distinct !DILexicalBlock(scope: !1346, file: !213, line: 410, column: 13)
!1361 = !DILocation(line: 415, column: 30, scope: !1360)
!1362 = !DILocation(line: 415, column: 35, scope: !1360)
!1363 = !DILocation(line: 415, column: 47, scope: !1360)
!1364 = !DILocation(line: 415, column: 53, scope: !1360)
!1365 = !DILocation(line: 415, column: 58, scope: !1360)
!1366 = !DILocation(line: 415, column: 21, scope: !1360)
!1367 = !DILocation(line: 415, column: 63, scope: !1360)
!1368 = !DILocation(line: 415, column: 18, scope: !1360)
!1369 = !DILocation(line: 416, column: 15, scope: !1360)
!1370 = !DILocation(line: 419, column: 18, scope: !1360)
!1371 = !DILocation(line: 420, column: 15, scope: !1360)
!1372 = !DILocation(line: 425, column: 24, scope: !1360)
!1373 = !DILocation(line: 426, column: 18, scope: !1360)
!1374 = !DILocation(line: 427, column: 15, scope: !1360)
!1375 = !DILocation(line: 430, column: 15, scope: !1360)
!1376 = !DILocation(line: 441, column: 11, scope: !1377)
!1377 = distinct !DILexicalBlock(scope: !1322, file: !213, line: 441, column: 11)
!1378 = !DILocation(line: 441, column: 20, scope: !1377)
!1379 = !DILocation(line: 441, column: 24, scope: !1377)
!1380 = !DILocation(line: 441, column: 27, scope: !1377)
!1381 = !DILocation(line: 441, column: 32, scope: !1377)
!1382 = !DILocation(line: 441, column: 39, scope: !1377)
!1383 = !DILocation(line: 441, column: 11, scope: !1322)
!1384 = !DILocation(line: 442, column: 19, scope: !1377)
!1385 = !DILocation(line: 442, column: 27, scope: !1377)
!1386 = !DILocation(line: 442, column: 31, scope: !1377)
!1387 = !DILocation(line: 445, column: 23, scope: !1377)
!1388 = !DILocation(line: 445, column: 16, scope: !1377)
!1389 = !DILocation(line: 442, column: 9, scope: !1377)
!1390 = !DILocation(line: 446, column: 5, scope: !1322)
!1391 = !DILocation(line: 448, column: 7, scope: !1392)
!1392 = distinct !DILexicalBlock(scope: !1089, file: !213, line: 448, column: 7)
!1393 = !DILocation(line: 448, column: 14, scope: !1392)
!1394 = !DILocation(line: 448, column: 24, scope: !1392)
!1395 = !DILocation(line: 448, column: 7, scope: !1089)
!1396 = !DILocalVariable(name: "changed", scope: !1397, file: !213, line: 450, type: !79)
!1397 = distinct !DILexicalBlock(scope: !1392, file: !213, line: 449, column: 5)
!1398 = !DILocation(line: 450, column: 12, scope: !1397)
!1399 = !DILocation(line: 451, column: 11, scope: !1397)
!1400 = !DILocation(line: 451, column: 20, scope: !1397)
!1401 = !DILocation(line: 451, column: 23, scope: !1397)
!1402 = !DILocation(line: 451, column: 26, scope: !1397)
!1403 = !DILocation(line: 451, column: 29, scope: !1397)
!1404 = !DILocation(line: 452, column: 10, scope: !1397)
!1405 = !DILocation(line: 452, column: 17, scope: !1397)
!1406 = !DILocation(line: 452, column: 21, scope: !1397)
!1407 = !DILocation(line: 452, column: 35, scope: !1397)
!1408 = !DILocation(line: 452, column: 38, scope: !1397)
!1409 = !DILocation(line: 452, column: 45, scope: !1397)
!1410 = !DILocation(line: 452, column: 57, scope: !1397)
!1411 = !DILocation(line: 452, column: 42, scope: !1397)
!1412 = !DILocation(line: 453, column: 16, scope: !1397)
!1413 = !DILocation(line: 453, column: 20, scope: !1397)
!1414 = !DILocation(line: 453, column: 24, scope: !1397)
!1415 = !DILocation(line: 453, column: 38, scope: !1397)
!1416 = !DILocation(line: 453, column: 41, scope: !1397)
!1417 = !DILocation(line: 453, column: 48, scope: !1397)
!1418 = !DILocation(line: 453, column: 60, scope: !1397)
!1419 = !DILocation(line: 453, column: 45, scope: !1397)
!1420 = !DILocation(line: 452, column: 13, scope: !1397)
!1421 = !DILocation(line: 455, column: 11, scope: !1422)
!1422 = distinct !DILexicalBlock(scope: !1397, file: !213, line: 455, column: 11)
!1423 = !DILocation(line: 455, column: 19, scope: !1422)
!1424 = !DILocation(line: 455, column: 22, scope: !1422)
!1425 = !DILocation(line: 455, column: 29, scope: !1422)
!1426 = !DILocation(line: 455, column: 39, scope: !1422)
!1427 = !DILocation(line: 455, column: 11, scope: !1397)
!1428 = !DILocalVariable(name: "ch_status", scope: !1429, file: !213, line: 457, type: !222)
!1429 = distinct !DILexicalBlock(scope: !1422, file: !213, line: 456, column: 9)
!1430 = !DILocation(line: 457, column: 30, scope: !1429)
!1431 = !DILocation(line: 458, column: 15, scope: !1429)
!1432 = !DILocation(line: 458, column: 14, scope: !1429)
!1433 = !DILocation(line: 459, column: 17, scope: !1429)
!1434 = !DILocation(line: 459, column: 16, scope: !1429)
!1435 = !DILocation(line: 460, column: 17, scope: !1429)
!1436 = !DILocation(line: 460, column: 16, scope: !1429)
!1437 = !DILocation(line: 462, column: 28, scope: !1429)
!1438 = !DILocation(line: 462, column: 44, scope: !1429)
!1439 = !DILocation(line: 463, column: 28, scope: !1429)
!1440 = !DILocation(line: 463, column: 35, scope: !1429)
!1441 = !DILocation(line: 463, column: 46, scope: !1429)
!1442 = !DILocation(line: 463, column: 53, scope: !1429)
!1443 = !DILocation(line: 462, column: 11, scope: !1429)
!1444 = !DILocation(line: 464, column: 9, scope: !1429)
!1445 = !DILocation(line: 465, column: 5, scope: !1397)
!1446 = !DILocation(line: 467, column: 10, scope: !1447)
!1447 = distinct !DILexicalBlock(scope: !1089, file: !213, line: 467, column: 8)
!1448 = !DILocation(line: 467, column: 17, scope: !1447)
!1449 = !DILocation(line: 467, column: 8, scope: !1089)
!1450 = !DILocation(line: 468, column: 14, scope: !1447)
!1451 = !DILocation(line: 468, column: 19, scope: !1447)
!1452 = !DILocation(line: 468, column: 5, scope: !1447)
!1453 = !DILocation(line: 470, column: 10, scope: !1089)
!1454 = !DILocation(line: 470, column: 3, scope: !1089)
!1455 = !DILocation(line: 471, column: 1, scope: !1089)
!1456 = distinct !DISubprogram(name: "ignore_ptr", scope: !1457, file: !1457, line: 36, type: !1458, isLocal: true, isDefinition: true, scopeLine: 36, flags: DIFlagPrototyped, isOptimized: false, unit: !212, variables: !25)
!1457 = !DIFile(filename: "../../lib/ignore-value.h", directory: "/home/ma481/Downloads/Chisel/chisel-bench/benchmark/chown-8.2/original/obj-llvm/src")
!1458 = !DISubroutineType(types: !1459)
!1459 = !{null, !16}
!1460 = !DILocalVariable(name: "p", arg: 1, scope: !1456, file: !1457, line: 36, type: !16)
!1461 = !DILocation(line: 36, column: 38, scope: !1456)
!1462 = !DILocation(line: 36, column: 50, scope: !1456)
!1463 = !DILocation(line: 36, column: 53, scope: !1456)
!1464 = distinct !DISubprogram(name: "lchownat", scope: !1465, file: !1465, line: 67, type: !1466, isLocal: true, isDefinition: true, scopeLine: 68, flags: DIFlagPrototyped, isOptimized: false, unit: !212, variables: !25)
!1465 = !DIFile(filename: "../../lib/openat.h", directory: "/home/ma481/Downloads/Chisel/chisel-bench/benchmark/chown-8.2/original/obj-llvm/src")
!1466 = !DISubroutineType(types: !1467)
!1467 = !{!23, !23, !12, !229, !231}
!1468 = !DILocalVariable(name: "fd", arg: 1, scope: !1464, file: !1465, line: 67, type: !23)
!1469 = !DILocation(line: 67, column: 15, scope: !1464)
!1470 = !DILocalVariable(name: "file", arg: 2, scope: !1464, file: !1465, line: 67, type: !12)
!1471 = !DILocation(line: 67, column: 31, scope: !1464)
!1472 = !DILocalVariable(name: "owner", arg: 3, scope: !1464, file: !1465, line: 67, type: !229)
!1473 = !DILocation(line: 67, column: 43, scope: !1464)
!1474 = !DILocalVariable(name: "group", arg: 4, scope: !1464, file: !1465, line: 67, type: !231)
!1475 = !DILocation(line: 67, column: 56, scope: !1464)
!1476 = !DILocation(line: 69, column: 20, scope: !1464)
!1477 = !DILocation(line: 69, column: 24, scope: !1464)
!1478 = !DILocation(line: 69, column: 30, scope: !1464)
!1479 = !DILocation(line: 69, column: 37, scope: !1464)
!1480 = !DILocation(line: 69, column: 10, scope: !1464)
!1481 = !DILocation(line: 69, column: 3, scope: !1464)
!1482 = distinct !DISubprogram(name: "restricted_chown", scope: !213, file: !213, line: 187, type: !1483, isLocal: true, isDefinition: true, scopeLine: 191, flags: DIFlagPrototyped, isOptimized: false, unit: !212, variables: !25)
!1483 = !DISubroutineType(types: !1484)
!1484 = !{!215, !23, !12, !1115, !229, !231, !229, !231}
!1485 = !DILocalVariable(name: "cwd_fd", arg: 1, scope: !1482, file: !213, line: 187, type: !23)
!1486 = !DILocation(line: 187, column: 23, scope: !1482)
!1487 = !DILocalVariable(name: "file", arg: 2, scope: !1482, file: !213, line: 187, type: !12)
!1488 = !DILocation(line: 187, column: 43, scope: !1482)
!1489 = !DILocalVariable(name: "orig_st", arg: 3, scope: !1482, file: !213, line: 188, type: !1115)
!1490 = !DILocation(line: 188, column: 38, scope: !1482)
!1491 = !DILocalVariable(name: "uid", arg: 4, scope: !1482, file: !213, line: 189, type: !229)
!1492 = !DILocation(line: 189, column: 25, scope: !1482)
!1493 = !DILocalVariable(name: "gid", arg: 5, scope: !1482, file: !213, line: 189, type: !231)
!1494 = !DILocation(line: 189, column: 36, scope: !1482)
!1495 = !DILocalVariable(name: "required_uid", arg: 6, scope: !1482, file: !213, line: 190, type: !229)
!1496 = !DILocation(line: 190, column: 25, scope: !1482)
!1497 = !DILocalVariable(name: "required_gid", arg: 7, scope: !1482, file: !213, line: 190, type: !231)
!1498 = !DILocation(line: 190, column: 45, scope: !1482)
!1499 = !DILocalVariable(name: "status", scope: !1482, file: !213, line: 192, type: !215)
!1500 = !DILocation(line: 192, column: 19, scope: !1482)
!1501 = !DILocalVariable(name: "st", scope: !1482, file: !213, line: 193, type: !973)
!1502 = !DILocation(line: 193, column: 15, scope: !1482)
!1503 = !DILocalVariable(name: "open_flags", scope: !1482, file: !213, line: 194, type: !23)
!1504 = !DILocation(line: 194, column: 7, scope: !1482)
!1505 = !DILocalVariable(name: "fd", scope: !1482, file: !213, line: 195, type: !23)
!1506 = !DILocation(line: 195, column: 7, scope: !1482)
!1507 = !DILocation(line: 197, column: 7, scope: !1508)
!1508 = distinct !DILexicalBlock(scope: !1482, file: !213, line: 197, column: 7)
!1509 = !DILocation(line: 197, column: 20, scope: !1508)
!1510 = !DILocation(line: 197, column: 34, scope: !1508)
!1511 = !DILocation(line: 197, column: 37, scope: !1508)
!1512 = !DILocation(line: 197, column: 50, scope: !1508)
!1513 = !DILocation(line: 197, column: 7, scope: !1482)
!1514 = !DILocation(line: 198, column: 5, scope: !1508)
!1515 = !DILocation(line: 200, column: 9, scope: !1516)
!1516 = distinct !DILexicalBlock(scope: !1482, file: !213, line: 200, column: 7)
!1517 = !DILocation(line: 200, column: 7, scope: !1482)
!1518 = !DILocation(line: 202, column: 11, scope: !1519)
!1519 = distinct !DILexicalBlock(scope: !1520, file: !213, line: 202, column: 11)
!1520 = distinct !DILexicalBlock(scope: !1516, file: !213, line: 201, column: 5)
!1521 = !DILocation(line: 202, column: 11, scope: !1520)
!1522 = !DILocation(line: 203, column: 20, scope: !1519)
!1523 = !DILocation(line: 203, column: 9, scope: !1519)
!1524 = !DILocation(line: 205, column: 9, scope: !1519)
!1525 = !DILocation(line: 206, column: 5, scope: !1520)
!1526 = !DILocation(line: 208, column: 16, scope: !1482)
!1527 = !DILocation(line: 208, column: 24, scope: !1482)
!1528 = !DILocation(line: 208, column: 41, scope: !1482)
!1529 = !DILocation(line: 208, column: 39, scope: !1482)
!1530 = !DILocation(line: 208, column: 8, scope: !1482)
!1531 = !DILocation(line: 208, column: 6, scope: !1482)
!1532 = !DILocation(line: 209, column: 15, scope: !1533)
!1533 = distinct !DILexicalBlock(scope: !1482, file: !213, line: 209, column: 7)
!1534 = !DILocation(line: 209, column: 12, scope: !1533)
!1535 = !DILocation(line: 210, column: 10, scope: !1533)
!1536 = !DILocation(line: 210, column: 14, scope: !1533)
!1537 = !DILocation(line: 210, column: 20, scope: !1533)
!1538 = !DILocation(line: 210, column: 30, scope: !1533)
!1539 = !DILocation(line: 210, column: 33, scope: !1533)
!1540 = !DILocation(line: 211, column: 14, scope: !1533)
!1541 = !DILocation(line: 211, column: 36, scope: !1533)
!1542 = !DILocation(line: 211, column: 44, scope: !1533)
!1543 = !DILocation(line: 211, column: 61, scope: !1533)
!1544 = !DILocation(line: 211, column: 59, scope: !1533)
!1545 = !DILocation(line: 211, column: 28, scope: !1533)
!1546 = !DILocation(line: 211, column: 26, scope: !1533)
!1547 = !DILocation(line: 211, column: 19, scope: !1533)
!1548 = !DILocation(line: 209, column: 7, scope: !1482)
!1549 = !DILocation(line: 212, column: 13, scope: !1533)
!1550 = !DILocation(line: 212, column: 19, scope: !1533)
!1551 = !DILocation(line: 212, column: 5, scope: !1533)
!1552 = !DILocation(line: 214, column: 14, scope: !1553)
!1553 = distinct !DILexicalBlock(scope: !1482, file: !213, line: 214, column: 7)
!1554 = !DILocation(line: 214, column: 7, scope: !1553)
!1555 = !DILocation(line: 214, column: 23, scope: !1553)
!1556 = !DILocation(line: 214, column: 7, scope: !1482)
!1557 = !DILocation(line: 215, column: 12, scope: !1553)
!1558 = !DILocation(line: 215, column: 5, scope: !1553)
!1559 = !DILocation(line: 216, column: 14, scope: !1560)
!1560 = distinct !DILexicalBlock(scope: !1553, file: !213, line: 216, column: 12)
!1561 = !DILocation(line: 216, column: 12, scope: !1553)
!1562 = !DILocation(line: 217, column: 12, scope: !1560)
!1563 = !DILocation(line: 217, column: 5, scope: !1560)
!1564 = !DILocation(line: 218, column: 13, scope: !1565)
!1565 = distinct !DILexicalBlock(scope: !1560, file: !213, line: 218, column: 12)
!1566 = !DILocation(line: 218, column: 26, scope: !1565)
!1567 = !DILocation(line: 218, column: 40, scope: !1565)
!1568 = !DILocation(line: 218, column: 43, scope: !1565)
!1569 = !DILocation(line: 218, column: 62, scope: !1565)
!1570 = !DILocation(line: 218, column: 56, scope: !1565)
!1571 = !DILocation(line: 219, column: 12, scope: !1565)
!1572 = !DILocation(line: 219, column: 16, scope: !1565)
!1573 = !DILocation(line: 219, column: 29, scope: !1565)
!1574 = !DILocation(line: 219, column: 43, scope: !1565)
!1575 = !DILocation(line: 219, column: 46, scope: !1565)
!1576 = !DILocation(line: 219, column: 65, scope: !1565)
!1577 = !DILocation(line: 219, column: 59, scope: !1565)
!1578 = !DILocation(line: 218, column: 12, scope: !1560)
!1579 = !DILocation(line: 221, column: 19, scope: !1580)
!1580 = distinct !DILexicalBlock(scope: !1581, file: !213, line: 221, column: 11)
!1581 = distinct !DILexicalBlock(scope: !1565, file: !213, line: 220, column: 5)
!1582 = !DILocation(line: 221, column: 23, scope: !1580)
!1583 = !DILocation(line: 221, column: 28, scope: !1580)
!1584 = !DILocation(line: 221, column: 11, scope: !1580)
!1585 = !DILocation(line: 221, column: 33, scope: !1580)
!1586 = !DILocation(line: 221, column: 11, scope: !1581)
!1587 = !DILocation(line: 223, column: 28, scope: !1588)
!1588 = distinct !DILexicalBlock(scope: !1580, file: !213, line: 222, column: 9)
!1589 = !DILocation(line: 223, column: 21, scope: !1588)
!1590 = !DILocation(line: 223, column: 32, scope: !1588)
!1591 = !DILocation(line: 223, column: 18, scope: !1588)
!1592 = !DILocation(line: 225, column: 18, scope: !1588)
!1593 = !DILocation(line: 225, column: 11, scope: !1588)
!1594 = !DILocation(line: 229, column: 18, scope: !1595)
!1595 = distinct !DILexicalBlock(scope: !1580, file: !213, line: 228, column: 9)
!1596 = !DILocation(line: 231, column: 5, scope: !1581)
!1597 = !DILocalVariable(name: "saved_errno", scope: !1598, file: !213, line: 234, type: !23)
!1598 = distinct !DILexicalBlock(scope: !1482, file: !213, line: 233, column: 3)
!1599 = !DILocation(line: 234, column: 9, scope: !1598)
!1600 = !DILocation(line: 234, column: 23, scope: !1598)
!1601 = !DILocation(line: 235, column: 12, scope: !1598)
!1602 = !DILocation(line: 235, column: 5, scope: !1598)
!1603 = !DILocation(line: 236, column: 13, scope: !1598)
!1604 = !DILocation(line: 236, column: 5, scope: !1598)
!1605 = !DILocation(line: 236, column: 11, scope: !1598)
!1606 = !DILocation(line: 237, column: 12, scope: !1598)
!1607 = !DILocation(line: 237, column: 5, scope: !1598)
!1608 = !DILocation(line: 239, column: 1, scope: !1482)
!1609 = distinct !DISubprogram(name: "chownat", scope: !1465, file: !1465, line: 61, type: !1466, isLocal: true, isDefinition: true, scopeLine: 62, flags: DIFlagPrototyped, isOptimized: false, unit: !212, variables: !25)
!1610 = !DILocalVariable(name: "fd", arg: 1, scope: !1609, file: !1465, line: 61, type: !23)
!1611 = !DILocation(line: 61, column: 14, scope: !1609)
!1612 = !DILocalVariable(name: "file", arg: 2, scope: !1609, file: !1465, line: 61, type: !12)
!1613 = !DILocation(line: 61, column: 30, scope: !1609)
!1614 = !DILocalVariable(name: "owner", arg: 3, scope: !1609, file: !1465, line: 61, type: !229)
!1615 = !DILocation(line: 61, column: 42, scope: !1609)
!1616 = !DILocalVariable(name: "group", arg: 4, scope: !1609, file: !1465, line: 61, type: !231)
!1617 = !DILocation(line: 61, column: 55, scope: !1609)
!1618 = !DILocation(line: 63, column: 20, scope: !1609)
!1619 = !DILocation(line: 63, column: 24, scope: !1609)
!1620 = !DILocation(line: 63, column: 30, scope: !1609)
!1621 = !DILocation(line: 63, column: 37, scope: !1609)
!1622 = !DILocation(line: 63, column: 10, scope: !1609)
!1623 = !DILocation(line: 63, column: 3, scope: !1609)
!1624 = distinct !DISubprogram(name: "describe_change", scope: !213, file: !213, line: 110, type: !1625, isLocal: true, isDefinition: true, scopeLine: 112, flags: DIFlagPrototyped, isOptimized: false, unit: !212, variables: !25)
!1625 = !DISubroutineType(types: !1626)
!1626 = !{null, !12, !222, !12, !12}
!1627 = !DILocalVariable(name: "file", arg: 1, scope: !1624, file: !213, line: 110, type: !12)
!1628 = !DILocation(line: 110, column: 30, scope: !1624)
!1629 = !DILocalVariable(name: "changed", arg: 2, scope: !1624, file: !213, line: 110, type: !222)
!1630 = !DILocation(line: 110, column: 55, scope: !1624)
!1631 = !DILocalVariable(name: "user", arg: 3, scope: !1624, file: !213, line: 111, type: !12)
!1632 = !DILocation(line: 111, column: 30, scope: !1624)
!1633 = !DILocalVariable(name: "group", arg: 4, scope: !1624, file: !213, line: 111, type: !12)
!1634 = !DILocation(line: 111, column: 48, scope: !1624)
!1635 = !DILocalVariable(name: "fmt", scope: !1624, file: !213, line: 113, type: !12)
!1636 = !DILocation(line: 113, column: 15, scope: !1624)
!1637 = !DILocalVariable(name: "spec", scope: !1624, file: !213, line: 114, type: !12)
!1638 = !DILocation(line: 114, column: 15, scope: !1624)
!1639 = !DILocalVariable(name: "spec_allocated", scope: !1624, file: !213, line: 115, type: !15)
!1640 = !DILocation(line: 115, column: 9, scope: !1624)
!1641 = !DILocation(line: 117, column: 7, scope: !1642)
!1642 = distinct !DILexicalBlock(scope: !1624, file: !213, line: 117, column: 7)
!1643 = !DILocation(line: 117, column: 15, scope: !1642)
!1644 = !DILocation(line: 117, column: 7, scope: !1624)
!1645 = !DILocation(line: 120, column: 22, scope: !1646)
!1646 = distinct !DILexicalBlock(scope: !1642, file: !213, line: 118, column: 5)
!1647 = !DILocation(line: 120, column: 15, scope: !1646)
!1648 = !DILocation(line: 119, column: 7, scope: !1646)
!1649 = !DILocation(line: 121, column: 7, scope: !1646)
!1650 = !DILocation(line: 124, column: 7, scope: !1651)
!1651 = distinct !DILexicalBlock(scope: !1624, file: !213, line: 124, column: 7)
!1652 = !DILocation(line: 124, column: 7, scope: !1624)
!1653 = !DILocation(line: 126, column: 11, scope: !1654)
!1654 = distinct !DILexicalBlock(scope: !1655, file: !213, line: 126, column: 11)
!1655 = distinct !DILexicalBlock(scope: !1651, file: !213, line: 125, column: 5)
!1656 = !DILocation(line: 126, column: 11, scope: !1655)
!1657 = !DILocation(line: 128, column: 45, scope: !1658)
!1658 = distinct !DILexicalBlock(scope: !1654, file: !213, line: 127, column: 9)
!1659 = !DILocation(line: 128, column: 37, scope: !1658)
!1660 = !DILocation(line: 128, column: 51, scope: !1658)
!1661 = !DILocation(line: 128, column: 65, scope: !1658)
!1662 = !DILocation(line: 128, column: 57, scope: !1658)
!1663 = !DILocation(line: 128, column: 55, scope: !1658)
!1664 = !DILocation(line: 128, column: 72, scope: !1658)
!1665 = !DILocation(line: 128, column: 28, scope: !1658)
!1666 = !DILocation(line: 128, column: 26, scope: !1658)
!1667 = !DILocation(line: 129, column: 35, scope: !1658)
!1668 = !DILocation(line: 129, column: 51, scope: !1658)
!1669 = !DILocation(line: 129, column: 27, scope: !1658)
!1670 = !DILocation(line: 129, column: 19, scope: !1658)
!1671 = !DILocation(line: 129, column: 64, scope: !1658)
!1672 = !DILocation(line: 129, column: 11, scope: !1658)
!1673 = !DILocation(line: 130, column: 18, scope: !1658)
!1674 = !DILocation(line: 130, column: 16, scope: !1658)
!1675 = !DILocation(line: 131, column: 9, scope: !1658)
!1676 = !DILocation(line: 134, column: 18, scope: !1677)
!1677 = distinct !DILexicalBlock(scope: !1654, file: !213, line: 133, column: 9)
!1678 = !DILocation(line: 134, column: 16, scope: !1677)
!1679 = !DILocation(line: 136, column: 5, scope: !1655)
!1680 = !DILocation(line: 139, column: 14, scope: !1681)
!1681 = distinct !DILexicalBlock(scope: !1651, file: !213, line: 138, column: 5)
!1682 = !DILocation(line: 139, column: 12, scope: !1681)
!1683 = !DILocation(line: 142, column: 11, scope: !1624)
!1684 = !DILocation(line: 142, column: 3, scope: !1624)
!1685 = !DILocation(line: 145, column: 14, scope: !1686)
!1686 = distinct !DILexicalBlock(scope: !1624, file: !213, line: 143, column: 5)
!1687 = !DILocation(line: 146, column: 16, scope: !1686)
!1688 = !DILocation(line: 145, column: 11, scope: !1686)
!1689 = !DILocation(line: 148, column: 7, scope: !1686)
!1690 = !DILocation(line: 150, column: 14, scope: !1686)
!1691 = !DILocation(line: 151, column: 16, scope: !1686)
!1692 = !DILocation(line: 150, column: 11, scope: !1686)
!1693 = !DILocation(line: 153, column: 7, scope: !1686)
!1694 = !DILocation(line: 155, column: 14, scope: !1686)
!1695 = !DILocation(line: 156, column: 16, scope: !1686)
!1696 = !DILocation(line: 155, column: 11, scope: !1686)
!1697 = !DILocation(line: 158, column: 7, scope: !1686)
!1698 = !DILocation(line: 160, column: 7, scope: !1686)
!1699 = !DILocation(line: 163, column: 11, scope: !1624)
!1700 = !DILocation(line: 163, column: 23, scope: !1624)
!1701 = !DILocation(line: 163, column: 16, scope: !1624)
!1702 = !DILocation(line: 163, column: 30, scope: !1624)
!1703 = !DILocation(line: 163, column: 3, scope: !1624)
!1704 = !DILocation(line: 165, column: 9, scope: !1624)
!1705 = !DILocation(line: 165, column: 3, scope: !1624)
!1706 = !DILocation(line: 166, column: 1, scope: !1624)
!1707 = distinct !DISubprogram(name: "set_program_name", scope: !60, file: !60, line: 39, type: !1708, isLocal: false, isDefinition: true, scopeLine: 40, flags: DIFlagPrototyped, isOptimized: false, unit: !59, variables: !25)
!1708 = !DISubroutineType(types: !1709)
!1709 = !{null, !12}
!1710 = !DILocalVariable(name: "argv0", arg: 1, scope: !1707, file: !60, line: 39, type: !12)
!1711 = !DILocation(line: 39, column: 31, scope: !1707)
!1712 = !DILocalVariable(name: "slash", scope: !1707, file: !60, line: 46, type: !12)
!1713 = !DILocation(line: 46, column: 15, scope: !1707)
!1714 = !DILocalVariable(name: "base", scope: !1707, file: !60, line: 47, type: !12)
!1715 = !DILocation(line: 47, column: 15, scope: !1707)
!1716 = !DILocation(line: 51, column: 7, scope: !1717)
!1717 = distinct !DILexicalBlock(scope: !1707, file: !60, line: 51, column: 7)
!1718 = !DILocation(line: 51, column: 13, scope: !1717)
!1719 = !DILocation(line: 51, column: 7, scope: !1707)
!1720 = !DILocation(line: 55, column: 7, scope: !1721)
!1721 = distinct !DILexicalBlock(scope: !1717, file: !60, line: 52, column: 5)
!1722 = !DILocation(line: 54, column: 7, scope: !1721)
!1723 = !DILocation(line: 56, column: 7, scope: !1721)
!1724 = !DILocation(line: 59, column: 20, scope: !1707)
!1725 = !DILocation(line: 59, column: 11, scope: !1707)
!1726 = !DILocation(line: 59, column: 9, scope: !1707)
!1727 = !DILocation(line: 60, column: 11, scope: !1707)
!1728 = !DILocation(line: 60, column: 17, scope: !1707)
!1729 = !DILocation(line: 60, column: 27, scope: !1707)
!1730 = !DILocation(line: 60, column: 33, scope: !1707)
!1731 = !DILocation(line: 60, column: 39, scope: !1707)
!1732 = !DILocation(line: 60, column: 8, scope: !1707)
!1733 = !DILocation(line: 61, column: 7, scope: !1734)
!1734 = distinct !DILexicalBlock(scope: !1707, file: !60, line: 61, column: 7)
!1735 = !DILocation(line: 61, column: 14, scope: !1734)
!1736 = !DILocation(line: 61, column: 12, scope: !1734)
!1737 = !DILocation(line: 61, column: 20, scope: !1734)
!1738 = !DILocation(line: 61, column: 25, scope: !1734)
!1739 = !DILocation(line: 61, column: 37, scope: !1734)
!1740 = !DILocation(line: 61, column: 42, scope: !1734)
!1741 = !DILocation(line: 61, column: 28, scope: !1734)
!1742 = !DILocation(line: 61, column: 61, scope: !1734)
!1743 = !DILocation(line: 61, column: 7, scope: !1707)
!1744 = !DILocation(line: 63, column: 15, scope: !1745)
!1745 = distinct !DILexicalBlock(scope: !1734, file: !60, line: 62, column: 5)
!1746 = !DILocation(line: 63, column: 13, scope: !1745)
!1747 = !DILocation(line: 64, column: 20, scope: !1748)
!1748 = distinct !DILexicalBlock(scope: !1745, file: !60, line: 64, column: 11)
!1749 = !DILocation(line: 64, column: 11, scope: !1748)
!1750 = !DILocation(line: 64, column: 36, scope: !1748)
!1751 = !DILocation(line: 64, column: 11, scope: !1745)
!1752 = !DILocation(line: 66, column: 12, scope: !1753)
!1753 = distinct !DILexicalBlock(scope: !1748, file: !60, line: 65, column: 2)
!1754 = !DILocation(line: 66, column: 17, scope: !1753)
!1755 = !DILocation(line: 66, column: 10, scope: !1753)
!1756 = !DILocation(line: 70, column: 45, scope: !1753)
!1757 = !DILocation(line: 70, column: 34, scope: !1753)
!1758 = !DILocation(line: 72, column: 2, scope: !1753)
!1759 = !DILocation(line: 73, column: 5, scope: !1745)
!1760 = !DILocation(line: 84, column: 18, scope: !1707)
!1761 = !DILocation(line: 84, column: 16, scope: !1707)
!1762 = !DILocation(line: 90, column: 38, scope: !1707)
!1763 = !DILocation(line: 90, column: 27, scope: !1707)
!1764 = !DILocation(line: 92, column: 1, scope: !1707)
!1765 = distinct !DISubprogram(name: "version_etc_arn", scope: !234, file: !234, line: 62, type: !1766, isLocal: false, isDefinition: true, scopeLine: 66, flags: DIFlagPrototyped, isOptimized: false, unit: !233, variables: !25)
!1766 = !DISubroutineType(types: !1767)
!1767 = !{null, !1768, !12, !12, !12, !1817, !91}
!1768 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1769, size: 64)
!1769 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !1770, line: 7, baseType: !1771)
!1770 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/FILE.h", directory: "/home/ma481/Downloads/Chisel/chisel-bench/benchmark/chown-8.2/original/obj-llvm/lib")
!1771 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !1772, line: 245, size: 1728, elements: !1773)
!1772 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/libio.h", directory: "/home/ma481/Downloads/Chisel/chisel-bench/benchmark/chown-8.2/original/obj-llvm/lib")
!1773 = !{!1774, !1775, !1776, !1777, !1778, !1779, !1780, !1781, !1782, !1783, !1784, !1785, !1786, !1794, !1795, !1796, !1797, !1798, !1799, !1801, !1802, !1805, !1807, !1808, !1809, !1810, !1811, !1812, !1813}
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !1771, file: !1772, line: 246, baseType: !23, size: 32)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !1771, file: !1772, line: 251, baseType: !15, size: 64, offset: 64)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !1771, file: !1772, line: 252, baseType: !15, size: 64, offset: 128)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !1771, file: !1772, line: 253, baseType: !15, size: 64, offset: 192)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !1771, file: !1772, line: 254, baseType: !15, size: 64, offset: 256)
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !1771, file: !1772, line: 255, baseType: !15, size: 64, offset: 320)
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !1771, file: !1772, line: 256, baseType: !15, size: 64, offset: 384)
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !1771, file: !1772, line: 257, baseType: !15, size: 64, offset: 448)
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !1771, file: !1772, line: 258, baseType: !15, size: 64, offset: 512)
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !1771, file: !1772, line: 260, baseType: !15, size: 64, offset: 576)
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !1771, file: !1772, line: 261, baseType: !15, size: 64, offset: 640)
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !1771, file: !1772, line: 262, baseType: !15, size: 64, offset: 704)
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !1771, file: !1772, line: 264, baseType: !1787, size: 64, offset: 768)
!1787 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1788, size: 64)
!1788 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !1772, line: 160, size: 192, elements: !1789)
!1789 = !{!1790, !1791, !1793}
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !1788, file: !1772, line: 161, baseType: !1787, size: 64)
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "_sbuf", scope: !1788, file: !1772, line: 162, baseType: !1792, size: 64, offset: 64)
!1792 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1771, size: 64)
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "_pos", scope: !1788, file: !1772, line: 166, baseType: !23, size: 32, offset: 128)
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !1771, file: !1772, line: 266, baseType: !1792, size: 64, offset: 832)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !1771, file: !1772, line: 268, baseType: !23, size: 32, offset: 896)
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !1771, file: !1772, line: 272, baseType: !23, size: 32, offset: 928)
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !1771, file: !1772, line: 274, baseType: !302, size: 64, offset: 960)
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !1771, file: !1772, line: 278, baseType: !143, size: 16, offset: 1024)
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !1771, file: !1772, line: 279, baseType: !1800, size: 8, offset: 1040)
!1800 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !1771, file: !1772, line: 280, baseType: !324, size: 8, offset: 1048)
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !1771, file: !1772, line: 284, baseType: !1803, size: 64, offset: 1088)
!1803 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1804, size: 64)
!1804 = !DIDerivedType(tag: DW_TAG_typedef, name: "_IO_lock_t", file: !1772, line: 154, baseType: null)
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !1771, file: !1772, line: 293, baseType: !1806, size: 64, offset: 1152)
!1806 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off64_t", file: !192, line: 141, baseType: !268)
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "__pad1", scope: !1771, file: !1772, line: 301, baseType: !16, size: 64, offset: 1216)
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "__pad2", scope: !1771, file: !1772, line: 302, baseType: !16, size: 64, offset: 1280)
!1809 = !DIDerivedType(tag: DW_TAG_member, name: "__pad3", scope: !1771, file: !1772, line: 303, baseType: !16, size: 64, offset: 1344)
!1810 = !DIDerivedType(tag: DW_TAG_member, name: "__pad4", scope: !1771, file: !1772, line: 304, baseType: !16, size: 64, offset: 1408)
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !1771, file: !1772, line: 306, baseType: !91, size: 64, offset: 1472)
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !1771, file: !1772, line: 307, baseType: !23, size: 32, offset: 1536)
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !1771, file: !1772, line: 309, baseType: !1814, size: 160, offset: 1568)
!1814 = !DICompositeType(tag: DW_TAG_array_type, baseType: !14, size: 160, elements: !1815)
!1815 = !{!1816}
!1816 = !DISubrange(count: 20)
!1817 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !179, size: 64)
!1818 = !DILocalVariable(name: "stream", arg: 1, scope: !1765, file: !234, line: 62, type: !1768)
!1819 = !DILocation(line: 62, column: 24, scope: !1765)
!1820 = !DILocalVariable(name: "command_name", arg: 2, scope: !1765, file: !234, line: 63, type: !12)
!1821 = !DILocation(line: 63, column: 16, scope: !1765)
!1822 = !DILocalVariable(name: "package", arg: 3, scope: !1765, file: !234, line: 63, type: !12)
!1823 = !DILocation(line: 63, column: 42, scope: !1765)
!1824 = !DILocalVariable(name: "version", arg: 4, scope: !1765, file: !234, line: 64, type: !12)
!1825 = !DILocation(line: 64, column: 16, scope: !1765)
!1826 = !DILocalVariable(name: "authors", arg: 5, scope: !1765, file: !234, line: 65, type: !1817)
!1827 = !DILocation(line: 65, column: 25, scope: !1765)
!1828 = !DILocalVariable(name: "n_authors", arg: 6, scope: !1765, file: !234, line: 65, type: !91)
!1829 = !DILocation(line: 65, column: 41, scope: !1765)
!1830 = !DILocation(line: 67, column: 7, scope: !1831)
!1831 = distinct !DILexicalBlock(scope: !1765, file: !234, line: 67, column: 7)
!1832 = !DILocation(line: 67, column: 7, scope: !1765)
!1833 = !DILocation(line: 68, column: 14, scope: !1831)
!1834 = !DILocation(line: 68, column: 38, scope: !1831)
!1835 = !DILocation(line: 68, column: 52, scope: !1831)
!1836 = !DILocation(line: 68, column: 61, scope: !1831)
!1837 = !DILocation(line: 68, column: 5, scope: !1831)
!1838 = !DILocation(line: 70, column: 14, scope: !1831)
!1839 = !DILocation(line: 70, column: 33, scope: !1831)
!1840 = !DILocation(line: 70, column: 42, scope: !1831)
!1841 = !DILocation(line: 70, column: 5, scope: !1831)
!1842 = !DILocation(line: 84, column: 12, scope: !1765)
!1843 = !DILocation(line: 84, column: 3, scope: !1765)
!1844 = !DILocation(line: 86, column: 3, scope: !1765)
!1845 = !DILocation(line: 95, column: 11, scope: !1765)
!1846 = !DILocation(line: 95, column: 3, scope: !1765)
!1847 = !DILocation(line: 99, column: 7, scope: !1848)
!1848 = distinct !DILexicalBlock(scope: !1765, file: !234, line: 96, column: 5)
!1849 = !DILocation(line: 102, column: 16, scope: !1848)
!1850 = !DILocation(line: 102, column: 47, scope: !1848)
!1851 = !DILocation(line: 102, column: 7, scope: !1848)
!1852 = !DILocation(line: 103, column: 7, scope: !1848)
!1853 = !DILocation(line: 106, column: 16, scope: !1848)
!1854 = !DILocation(line: 106, column: 54, scope: !1848)
!1855 = !DILocation(line: 106, column: 66, scope: !1848)
!1856 = !DILocation(line: 106, column: 7, scope: !1848)
!1857 = !DILocation(line: 107, column: 7, scope: !1848)
!1858 = !DILocation(line: 110, column: 16, scope: !1848)
!1859 = !DILocation(line: 111, column: 9, scope: !1848)
!1860 = !DILocation(line: 111, column: 21, scope: !1848)
!1861 = !DILocation(line: 111, column: 33, scope: !1848)
!1862 = !DILocation(line: 110, column: 7, scope: !1848)
!1863 = !DILocation(line: 112, column: 7, scope: !1848)
!1864 = !DILocation(line: 117, column: 16, scope: !1848)
!1865 = !DILocation(line: 118, column: 9, scope: !1848)
!1866 = !DILocation(line: 118, column: 21, scope: !1848)
!1867 = !DILocation(line: 118, column: 33, scope: !1848)
!1868 = !DILocation(line: 118, column: 45, scope: !1848)
!1869 = !DILocation(line: 117, column: 7, scope: !1848)
!1870 = !DILocation(line: 119, column: 7, scope: !1848)
!1871 = !DILocation(line: 124, column: 16, scope: !1848)
!1872 = !DILocation(line: 125, column: 9, scope: !1848)
!1873 = !DILocation(line: 125, column: 21, scope: !1848)
!1874 = !DILocation(line: 125, column: 33, scope: !1848)
!1875 = !DILocation(line: 125, column: 45, scope: !1848)
!1876 = !DILocation(line: 125, column: 57, scope: !1848)
!1877 = !DILocation(line: 124, column: 7, scope: !1848)
!1878 = !DILocation(line: 126, column: 7, scope: !1848)
!1879 = !DILocation(line: 131, column: 16, scope: !1848)
!1880 = !DILocation(line: 132, column: 9, scope: !1848)
!1881 = !DILocation(line: 132, column: 21, scope: !1848)
!1882 = !DILocation(line: 132, column: 33, scope: !1848)
!1883 = !DILocation(line: 132, column: 45, scope: !1848)
!1884 = !DILocation(line: 132, column: 57, scope: !1848)
!1885 = !DILocation(line: 133, column: 9, scope: !1848)
!1886 = !DILocation(line: 131, column: 7, scope: !1848)
!1887 = !DILocation(line: 134, column: 7, scope: !1848)
!1888 = !DILocation(line: 139, column: 16, scope: !1848)
!1889 = !DILocation(line: 140, column: 9, scope: !1848)
!1890 = !DILocation(line: 140, column: 21, scope: !1848)
!1891 = !DILocation(line: 140, column: 33, scope: !1848)
!1892 = !DILocation(line: 140, column: 45, scope: !1848)
!1893 = !DILocation(line: 140, column: 57, scope: !1848)
!1894 = !DILocation(line: 141, column: 9, scope: !1848)
!1895 = !DILocation(line: 141, column: 21, scope: !1848)
!1896 = !DILocation(line: 139, column: 7, scope: !1848)
!1897 = !DILocation(line: 142, column: 7, scope: !1848)
!1898 = !DILocation(line: 147, column: 16, scope: !1848)
!1899 = !DILocation(line: 149, column: 3, scope: !1848)
!1900 = !DILocation(line: 149, column: 15, scope: !1848)
!1901 = !DILocation(line: 149, column: 27, scope: !1848)
!1902 = !DILocation(line: 149, column: 39, scope: !1848)
!1903 = !DILocation(line: 149, column: 51, scope: !1848)
!1904 = !DILocation(line: 150, column: 3, scope: !1848)
!1905 = !DILocation(line: 150, column: 15, scope: !1848)
!1906 = !DILocation(line: 150, column: 27, scope: !1848)
!1907 = !DILocation(line: 147, column: 7, scope: !1848)
!1908 = !DILocation(line: 151, column: 7, scope: !1848)
!1909 = !DILocation(line: 156, column: 16, scope: !1848)
!1910 = !DILocation(line: 158, column: 9, scope: !1848)
!1911 = !DILocation(line: 158, column: 21, scope: !1848)
!1912 = !DILocation(line: 158, column: 33, scope: !1848)
!1913 = !DILocation(line: 158, column: 45, scope: !1848)
!1914 = !DILocation(line: 158, column: 57, scope: !1848)
!1915 = !DILocation(line: 159, column: 9, scope: !1848)
!1916 = !DILocation(line: 159, column: 21, scope: !1848)
!1917 = !DILocation(line: 159, column: 33, scope: !1848)
!1918 = !DILocation(line: 159, column: 45, scope: !1848)
!1919 = !DILocation(line: 156, column: 7, scope: !1848)
!1920 = !DILocation(line: 160, column: 7, scope: !1848)
!1921 = !DILocation(line: 167, column: 16, scope: !1848)
!1922 = !DILocation(line: 169, column: 3, scope: !1848)
!1923 = !DILocation(line: 169, column: 15, scope: !1848)
!1924 = !DILocation(line: 169, column: 27, scope: !1848)
!1925 = !DILocation(line: 169, column: 39, scope: !1848)
!1926 = !DILocation(line: 169, column: 51, scope: !1848)
!1927 = !DILocation(line: 170, column: 3, scope: !1848)
!1928 = !DILocation(line: 170, column: 15, scope: !1848)
!1929 = !DILocation(line: 170, column: 27, scope: !1848)
!1930 = !DILocation(line: 170, column: 39, scope: !1848)
!1931 = !DILocation(line: 167, column: 7, scope: !1848)
!1932 = !DILocation(line: 171, column: 7, scope: !1848)
!1933 = !DILocation(line: 173, column: 1, scope: !1765)
!1934 = distinct !DISubprogram(name: "version_etc_ar", scope: !234, file: !234, line: 180, type: !1935, isLocal: false, isDefinition: true, scopeLine: 183, flags: DIFlagPrototyped, isOptimized: false, unit: !233, variables: !25)
!1935 = !DISubroutineType(types: !1936)
!1936 = !{null, !1768, !12, !12, !12, !1817}
!1937 = !DILocalVariable(name: "stream", arg: 1, scope: !1934, file: !234, line: 180, type: !1768)
!1938 = !DILocation(line: 180, column: 23, scope: !1934)
!1939 = !DILocalVariable(name: "command_name", arg: 2, scope: !1934, file: !234, line: 181, type: !12)
!1940 = !DILocation(line: 181, column: 15, scope: !1934)
!1941 = !DILocalVariable(name: "package", arg: 3, scope: !1934, file: !234, line: 181, type: !12)
!1942 = !DILocation(line: 181, column: 41, scope: !1934)
!1943 = !DILocalVariable(name: "version", arg: 4, scope: !1934, file: !234, line: 182, type: !12)
!1944 = !DILocation(line: 182, column: 15, scope: !1934)
!1945 = !DILocalVariable(name: "authors", arg: 5, scope: !1934, file: !234, line: 182, type: !1817)
!1946 = !DILocation(line: 182, column: 45, scope: !1934)
!1947 = !DILocalVariable(name: "n_authors", scope: !1934, file: !234, line: 184, type: !91)
!1948 = !DILocation(line: 184, column: 10, scope: !1934)
!1949 = !DILocation(line: 186, column: 18, scope: !1950)
!1950 = distinct !DILexicalBlock(scope: !1934, file: !234, line: 186, column: 3)
!1951 = !DILocation(line: 186, column: 8, scope: !1950)
!1952 = !DILocation(line: 186, column: 23, scope: !1953)
!1953 = distinct !DILexicalBlock(scope: !1950, file: !234, line: 186, column: 3)
!1954 = !DILocation(line: 186, column: 31, scope: !1953)
!1955 = !DILocation(line: 186, column: 3, scope: !1950)
!1956 = !DILocation(line: 186, column: 52, scope: !1953)
!1957 = !DILocation(line: 186, column: 3, scope: !1953)
!1958 = distinct !{!1958, !1955, !1959}
!1959 = !DILocation(line: 187, column: 5, scope: !1950)
!1960 = !DILocation(line: 188, column: 20, scope: !1934)
!1961 = !DILocation(line: 188, column: 28, scope: !1934)
!1962 = !DILocation(line: 188, column: 42, scope: !1934)
!1963 = !DILocation(line: 188, column: 51, scope: !1934)
!1964 = !DILocation(line: 188, column: 60, scope: !1934)
!1965 = !DILocation(line: 188, column: 69, scope: !1934)
!1966 = !DILocation(line: 188, column: 3, scope: !1934)
!1967 = !DILocation(line: 189, column: 1, scope: !1934)
!1968 = distinct !DISubprogram(name: "version_etc_va", scope: !234, file: !234, line: 196, type: !1969, isLocal: false, isDefinition: true, scopeLine: 199, flags: DIFlagPrototyped, isOptimized: false, unit: !233, variables: !25)
!1969 = !DISubroutineType(types: !1970)
!1970 = !{null, !1768, !12, !12, !12, !1971}
!1971 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1972, size: 64)
!1972 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", file: !234, line: 189, size: 192, elements: !1973)
!1973 = !{!1974, !1975, !1976, !1977}
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !1972, file: !234, line: 189, baseType: !159, size: 32)
!1975 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !1972, file: !234, line: 189, baseType: !159, size: 32, offset: 32)
!1976 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !1972, file: !234, line: 189, baseType: !16, size: 64, offset: 64)
!1977 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !1972, file: !234, line: 189, baseType: !16, size: 64, offset: 128)
!1978 = !DILocalVariable(name: "stream", arg: 1, scope: !1968, file: !234, line: 196, type: !1768)
!1979 = !DILocation(line: 196, column: 23, scope: !1968)
!1980 = !DILocalVariable(name: "command_name", arg: 2, scope: !1968, file: !234, line: 197, type: !12)
!1981 = !DILocation(line: 197, column: 15, scope: !1968)
!1982 = !DILocalVariable(name: "package", arg: 3, scope: !1968, file: !234, line: 197, type: !12)
!1983 = !DILocation(line: 197, column: 41, scope: !1968)
!1984 = !DILocalVariable(name: "version", arg: 4, scope: !1968, file: !234, line: 198, type: !12)
!1985 = !DILocation(line: 198, column: 15, scope: !1968)
!1986 = !DILocalVariable(name: "authors", arg: 5, scope: !1968, file: !234, line: 198, type: !1971)
!1987 = !DILocation(line: 198, column: 32, scope: !1968)
!1988 = !DILocalVariable(name: "n_authors", scope: !1968, file: !234, line: 200, type: !91)
!1989 = !DILocation(line: 200, column: 10, scope: !1968)
!1990 = !DILocalVariable(name: "authtab", scope: !1968, file: !234, line: 201, type: !1991)
!1991 = !DICompositeType(tag: DW_TAG_array_type, baseType: !12, size: 640, elements: !1992)
!1992 = !{!1993}
!1993 = !DISubrange(count: 10)
!1994 = !DILocation(line: 201, column: 15, scope: !1968)
!1995 = !DILocation(line: 203, column: 18, scope: !1996)
!1996 = distinct !DILexicalBlock(scope: !1968, file: !234, line: 203, column: 3)
!1997 = !DILocation(line: 203, column: 8, scope: !1996)
!1998 = !DILocation(line: 204, column: 8, scope: !1999)
!1999 = distinct !DILexicalBlock(scope: !1996, file: !234, line: 203, column: 3)
!2000 = !DILocation(line: 204, column: 18, scope: !1999)
!2001 = !DILocation(line: 205, column: 3, scope: !1999)
!2002 = !DILocation(line: 205, column: 28, scope: !1999)
!2003 = !DILocation(line: 205, column: 15, scope: !1999)
!2004 = !DILocation(line: 205, column: 7, scope: !1999)
!2005 = !DILocation(line: 205, column: 26, scope: !1999)
!2006 = !DILocation(line: 205, column: 60, scope: !1999)
!2007 = !DILocation(line: 203, column: 3, scope: !1996)
!2008 = !DILocation(line: 206, column: 17, scope: !1999)
!2009 = !DILocation(line: 203, column: 3, scope: !1999)
!2010 = distinct !{!2010, !2007, !2011}
!2011 = !DILocation(line: 207, column: 5, scope: !1996)
!2012 = !DILocation(line: 208, column: 20, scope: !1968)
!2013 = !DILocation(line: 208, column: 28, scope: !1968)
!2014 = !DILocation(line: 208, column: 42, scope: !1968)
!2015 = !DILocation(line: 208, column: 51, scope: !1968)
!2016 = !DILocation(line: 209, column: 6, scope: !1968)
!2017 = !DILocation(line: 209, column: 15, scope: !1968)
!2018 = !DILocation(line: 208, column: 3, scope: !1968)
!2019 = !DILocation(line: 210, column: 1, scope: !1968)
!2020 = distinct !DISubprogram(name: "version_etc", scope: !234, file: !234, line: 227, type: !2021, isLocal: false, isDefinition: true, scopeLine: 230, flags: DIFlagPrototyped, isOptimized: false, unit: !233, variables: !25)
!2021 = !DISubroutineType(types: !2022)
!2022 = !{null, !1768, !12, !12, !12, null}
!2023 = !DILocalVariable(name: "stream", arg: 1, scope: !2020, file: !234, line: 227, type: !1768)
!2024 = !DILocation(line: 227, column: 20, scope: !2020)
!2025 = !DILocalVariable(name: "command_name", arg: 2, scope: !2020, file: !234, line: 228, type: !12)
!2026 = !DILocation(line: 228, column: 19, scope: !2020)
!2027 = !DILocalVariable(name: "package", arg: 3, scope: !2020, file: !234, line: 228, type: !12)
!2028 = !DILocation(line: 228, column: 45, scope: !2020)
!2029 = !DILocalVariable(name: "version", arg: 4, scope: !2020, file: !234, line: 229, type: !12)
!2030 = !DILocation(line: 229, column: 19, scope: !2020)
!2031 = !DILocalVariable(name: "authors", scope: !2020, file: !234, line: 231, type: !2032)
!2032 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !2033, line: 46, baseType: !2034)
!2033 = !DIFile(filename: "/usr/include/stdio.h", directory: "/home/ma481/Downloads/Chisel/chisel-bench/benchmark/chown-8.2/original/obj-llvm/lib")
!2034 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !2035, line: 48, baseType: !2036)
!2035 = !DIFile(filename: "/home/ma481/Downloads/LLVM_6.0/lib/clang/6.0.0/include/stdarg.h", directory: "/home/ma481/Downloads/Chisel/chisel-bench/benchmark/chown-8.2/original/obj-llvm/lib")
!2036 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !234, line: 231, baseType: !2037)
!2037 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1972, size: 192, elements: !321)
!2038 = !DILocation(line: 231, column: 11, scope: !2020)
!2039 = !DILocation(line: 233, column: 3, scope: !2020)
!2040 = !DILocation(line: 234, column: 19, scope: !2020)
!2041 = !DILocation(line: 234, column: 27, scope: !2020)
!2042 = !DILocation(line: 234, column: 41, scope: !2020)
!2043 = !DILocation(line: 234, column: 50, scope: !2020)
!2044 = !DILocation(line: 234, column: 59, scope: !2020)
!2045 = !DILocation(line: 234, column: 3, scope: !2020)
!2046 = !DILocation(line: 235, column: 3, scope: !2020)
!2047 = !DILocation(line: 236, column: 1, scope: !2020)
!2048 = distinct !DISubprogram(name: "emit_bug_reporting_address", scope: !234, file: !234, line: 239, type: !502, isLocal: false, isDefinition: true, scopeLine: 240, flags: DIFlagPrototyped, isOptimized: false, unit: !233, variables: !25)
!2049 = !DILocation(line: 245, column: 3, scope: !2048)
!2050 = !DILocation(line: 251, column: 3, scope: !2048)
!2051 = !DILocation(line: 256, column: 3, scope: !2048)
!2052 = !DILocation(line: 258, column: 1, scope: !2048)
!2053 = distinct !DISubprogram(name: "last_component", scope: !241, file: !241, line: 30, type: !792, isLocal: false, isDefinition: true, scopeLine: 31, flags: DIFlagPrototyped, isOptimized: false, unit: !240, variables: !25)
!2054 = !DILocalVariable(name: "name", arg: 1, scope: !2053, file: !241, line: 30, type: !12)
!2055 = !DILocation(line: 30, column: 29, scope: !2053)
!2056 = !DILocalVariable(name: "base", scope: !2053, file: !241, line: 32, type: !12)
!2057 = !DILocation(line: 32, column: 15, scope: !2053)
!2058 = !DILocation(line: 32, column: 22, scope: !2053)
!2059 = !DILocation(line: 32, column: 27, scope: !2053)
!2060 = !DILocalVariable(name: "p", scope: !2053, file: !241, line: 33, type: !12)
!2061 = !DILocation(line: 33, column: 15, scope: !2053)
!2062 = !DILocalVariable(name: "saw_slash", scope: !2053, file: !241, line: 34, type: !79)
!2063 = !DILocation(line: 34, column: 8, scope: !2053)
!2064 = !DILocation(line: 36, column: 3, scope: !2053)
!2065 = !DILocation(line: 36, column: 10, scope: !2053)
!2066 = !DILocation(line: 37, column: 9, scope: !2053)
!2067 = distinct !{!2067, !2064, !2066}
!2068 = !DILocation(line: 39, column: 12, scope: !2069)
!2069 = distinct !DILexicalBlock(scope: !2053, file: !241, line: 39, column: 3)
!2070 = !DILocation(line: 39, column: 10, scope: !2069)
!2071 = !DILocation(line: 39, column: 8, scope: !2069)
!2072 = !DILocation(line: 39, column: 19, scope: !2073)
!2073 = distinct !DILexicalBlock(scope: !2069, file: !241, line: 39, column: 3)
!2074 = !DILocation(line: 39, column: 18, scope: !2073)
!2075 = !DILocation(line: 39, column: 3, scope: !2069)
!2076 = !DILocation(line: 41, column: 11, scope: !2077)
!2077 = distinct !DILexicalBlock(scope: !2078, file: !241, line: 41, column: 11)
!2078 = distinct !DILexicalBlock(scope: !2073, file: !241, line: 40, column: 5)
!2079 = !DILocation(line: 41, column: 11, scope: !2078)
!2080 = !DILocation(line: 42, column: 19, scope: !2077)
!2081 = !DILocation(line: 42, column: 9, scope: !2077)
!2082 = !DILocation(line: 43, column: 16, scope: !2083)
!2083 = distinct !DILexicalBlock(scope: !2077, file: !241, line: 43, column: 16)
!2084 = !DILocation(line: 43, column: 16, scope: !2077)
!2085 = !DILocation(line: 45, column: 18, scope: !2086)
!2086 = distinct !DILexicalBlock(scope: !2083, file: !241, line: 44, column: 9)
!2087 = !DILocation(line: 45, column: 16, scope: !2086)
!2088 = !DILocation(line: 46, column: 21, scope: !2086)
!2089 = !DILocation(line: 47, column: 9, scope: !2086)
!2090 = !DILocation(line: 48, column: 5, scope: !2078)
!2091 = !DILocation(line: 39, column: 23, scope: !2073)
!2092 = !DILocation(line: 39, column: 3, scope: !2073)
!2093 = distinct !{!2093, !2075, !2094}
!2094 = !DILocation(line: 48, column: 5, scope: !2069)
!2095 = !DILocation(line: 50, column: 19, scope: !2053)
!2096 = !DILocation(line: 50, column: 3, scope: !2053)
!2097 = distinct !DISubprogram(name: "base_len", scope: !241, file: !241, line: 58, type: !2098, isLocal: false, isDefinition: true, scopeLine: 59, flags: DIFlagPrototyped, isOptimized: false, unit: !240, variables: !25)
!2098 = !DISubroutineType(types: !2099)
!2099 = !{!91, !12}
!2100 = !DILocalVariable(name: "name", arg: 1, scope: !2097, file: !241, line: 58, type: !12)
!2101 = !DILocation(line: 58, column: 23, scope: !2097)
!2102 = !DILocalVariable(name: "len", scope: !2097, file: !241, line: 60, type: !91)
!2103 = !DILocation(line: 60, column: 10, scope: !2097)
!2104 = !DILocalVariable(name: "prefix_len", scope: !2097, file: !241, line: 61, type: !91)
!2105 = !DILocation(line: 61, column: 10, scope: !2097)
!2106 = !DILocation(line: 63, column: 22, scope: !2107)
!2107 = distinct !DILexicalBlock(scope: !2097, file: !241, line: 63, column: 3)
!2108 = !DILocation(line: 63, column: 14, scope: !2107)
!2109 = !DILocation(line: 63, column: 12, scope: !2107)
!2110 = !DILocation(line: 63, column: 8, scope: !2107)
!2111 = !DILocation(line: 63, column: 34, scope: !2112)
!2112 = distinct !DILexicalBlock(scope: !2107, file: !241, line: 63, column: 3)
!2113 = !DILocation(line: 63, column: 32, scope: !2112)
!2114 = !DILocation(line: 63, column: 38, scope: !2112)
!2115 = !DILocation(line: 63, column: 41, scope: !2112)
!2116 = !DILocation(line: 63, column: 3, scope: !2107)
!2117 = !DILocation(line: 64, column: 5, scope: !2112)
!2118 = !DILocation(line: 63, column: 70, scope: !2112)
!2119 = !DILocation(line: 63, column: 3, scope: !2112)
!2120 = distinct !{!2120, !2116, !2121}
!2121 = !DILocation(line: 64, column: 5, scope: !2107)
!2122 = !DILocation(line: 74, column: 10, scope: !2097)
!2123 = !DILocation(line: 74, column: 3, scope: !2097)
!2124 = distinct !DISubprogram(name: "close_stdout_set_file_name", scope: !74, file: !74, line: 41, type: !1708, isLocal: false, isDefinition: true, scopeLine: 42, flags: DIFlagPrototyped, isOptimized: false, unit: !73, variables: !25)
!2125 = !DILocalVariable(name: "file", arg: 1, scope: !2124, file: !74, line: 41, type: !12)
!2126 = !DILocation(line: 41, column: 41, scope: !2124)
!2127 = !DILocation(line: 43, column: 15, scope: !2124)
!2128 = !DILocation(line: 43, column: 13, scope: !2124)
!2129 = !DILocation(line: 44, column: 1, scope: !2124)
!2130 = distinct !DISubprogram(name: "close_stdout_set_ignore_EPIPE", scope: !74, file: !74, line: 78, type: !2131, isLocal: false, isDefinition: true, scopeLine: 79, flags: DIFlagPrototyped, isOptimized: false, unit: !73, variables: !25)
!2131 = !DISubroutineType(types: !2132)
!2132 = !{null, !79}
!2133 = !DILocalVariable(name: "ignore", arg: 1, scope: !2130, file: !74, line: 78, type: !79)
!2134 = !DILocation(line: 78, column: 37, scope: !2130)
!2135 = !DILocation(line: 80, column: 18, scope: !2130)
!2136 = !DILocation(line: 80, column: 16, scope: !2130)
!2137 = !DILocation(line: 81, column: 1, scope: !2130)
!2138 = distinct !DISubprogram(name: "close_stdout", scope: !74, file: !74, line: 107, type: !502, isLocal: false, isDefinition: true, scopeLine: 108, flags: DIFlagPrototyped, isOptimized: false, unit: !73, variables: !25)
!2139 = !DILocation(line: 109, column: 21, scope: !2140)
!2140 = distinct !DILexicalBlock(scope: !2138, file: !74, line: 109, column: 7)
!2141 = !DILocation(line: 109, column: 7, scope: !2140)
!2142 = !DILocation(line: 109, column: 29, scope: !2140)
!2143 = !DILocation(line: 110, column: 7, scope: !2140)
!2144 = !DILocation(line: 110, column: 12, scope: !2140)
!2145 = !DILocation(line: 110, column: 25, scope: !2140)
!2146 = !DILocation(line: 110, column: 28, scope: !2140)
!2147 = !DILocation(line: 110, column: 34, scope: !2140)
!2148 = !DILocation(line: 109, column: 7, scope: !2138)
!2149 = !DILocalVariable(name: "write_error", scope: !2150, file: !74, line: 112, type: !12)
!2150 = distinct !DILexicalBlock(scope: !2140, file: !74, line: 111, column: 5)
!2151 = !DILocation(line: 112, column: 19, scope: !2150)
!2152 = !DILocation(line: 113, column: 11, scope: !2153)
!2153 = distinct !DILexicalBlock(scope: !2150, file: !74, line: 113, column: 11)
!2154 = !DILocation(line: 113, column: 11, scope: !2150)
!2155 = !DILocation(line: 114, column: 12, scope: !2153)
!2156 = !DILocation(line: 114, column: 45, scope: !2153)
!2157 = !DILocation(line: 114, column: 29, scope: !2153)
!2158 = !DILocation(line: 115, column: 9, scope: !2153)
!2159 = !DILocation(line: 114, column: 2, scope: !2153)
!2160 = !DILocation(line: 117, column: 12, scope: !2153)
!2161 = !DILocation(line: 117, column: 25, scope: !2153)
!2162 = !DILocation(line: 117, column: 2, scope: !2153)
!2163 = !DILocation(line: 119, column: 14, scope: !2150)
!2164 = !DILocation(line: 119, column: 7, scope: !2150)
!2165 = !DILocation(line: 122, column: 22, scope: !2166)
!2166 = distinct !DILexicalBlock(scope: !2138, file: !74, line: 122, column: 8)
!2167 = !DILocation(line: 122, column: 8, scope: !2166)
!2168 = !DILocation(line: 122, column: 30, scope: !2166)
!2169 = !DILocation(line: 122, column: 8, scope: !2138)
!2170 = !DILocation(line: 123, column: 13, scope: !2166)
!2171 = !DILocation(line: 123, column: 6, scope: !2166)
!2172 = !DILocation(line: 124, column: 1, scope: !2138)
!2173 = distinct !DISubprogram(name: "fts_open", scope: !244, file: !244, line: 369, type: !2174, isLocal: false, isDefinition: true, scopeLine: 372, flags: DIFlagPrototyped, isOptimized: false, unit: !243, variables: !25)
!2174 = !DISubroutineType(types: !2175)
!2175 = !{!255, !2176, !23, !2178}
!2176 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2177, size: 64)
!2177 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !15)
!2178 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2179, size: 64)
!2179 = !DISubroutineType(types: !2180)
!2180 = !{!23, !406, !406}
!2181 = !DILocalVariable(name: "argv", arg: 1, scope: !2173, file: !244, line: 369, type: !2176)
!2182 = !DILocation(line: 369, column: 25, scope: !2173)
!2183 = !DILocalVariable(name: "options", arg: 2, scope: !2173, file: !244, line: 370, type: !23)
!2184 = !DILocation(line: 370, column: 17, scope: !2173)
!2185 = !DILocalVariable(name: "compar", arg: 3, scope: !2173, file: !244, line: 371, type: !2178)
!2186 = !DILocation(line: 371, column: 10, scope: !2173)
!2187 = !DILocalVariable(name: "sp", scope: !2173, file: !244, line: 373, type: !255)
!2188 = !DILocation(line: 373, column: 16, scope: !2173)
!2189 = !DILocalVariable(name: "p", scope: !2173, file: !244, line: 374, type: !2190)
!2190 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !409, size: 64)
!2191 = !DILocation(line: 374, column: 19, scope: !2173)
!2192 = !DILocalVariable(name: "root", scope: !2173, file: !244, line: 374, type: !2190)
!2193 = !DILocation(line: 374, column: 23, scope: !2173)
!2194 = !DILocalVariable(name: "nitems", scope: !2173, file: !244, line: 375, type: !91)
!2195 = !DILocation(line: 375, column: 18, scope: !2173)
!2196 = !DILocalVariable(name: "parent", scope: !2173, file: !244, line: 376, type: !2190)
!2197 = !DILocation(line: 376, column: 10, scope: !2173)
!2198 = !DILocalVariable(name: "tmp", scope: !2173, file: !244, line: 377, type: !2190)
!2199 = !DILocation(line: 377, column: 10, scope: !2173)
!2200 = !DILocalVariable(name: "defer_stat", scope: !2173, file: !244, line: 378, type: !79)
!2201 = !DILocation(line: 378, column: 7, scope: !2173)
!2202 = !DILocation(line: 381, column: 6, scope: !2203)
!2203 = distinct !DILexicalBlock(scope: !2173, file: !244, line: 381, column: 6)
!2204 = !DILocation(line: 381, column: 14, scope: !2203)
!2205 = !DILocation(line: 381, column: 6, scope: !2173)
!2206 = !DILocation(line: 382, column: 3, scope: !2207)
!2207 = distinct !DILexicalBlock(scope: !2203, file: !244, line: 381, column: 33)
!2208 = !DILocation(line: 383, column: 3, scope: !2207)
!2209 = !DILocation(line: 385, column: 7, scope: !2210)
!2210 = distinct !DILexicalBlock(scope: !2173, file: !244, line: 385, column: 6)
!2211 = !DILocation(line: 385, column: 15, scope: !2210)
!2212 = !DILocation(line: 385, column: 30, scope: !2210)
!2213 = !DILocation(line: 385, column: 34, scope: !2210)
!2214 = !DILocation(line: 385, column: 42, scope: !2210)
!2215 = !DILocation(line: 385, column: 6, scope: !2173)
!2216 = !DILocation(line: 386, column: 3, scope: !2217)
!2217 = distinct !DILexicalBlock(scope: !2210, file: !244, line: 385, column: 56)
!2218 = !DILocation(line: 387, column: 3, scope: !2217)
!2219 = !DILocation(line: 389, column: 10, scope: !2220)
!2220 = distinct !DILexicalBlock(scope: !2173, file: !244, line: 389, column: 7)
!2221 = !DILocation(line: 389, column: 18, scope: !2220)
!2222 = !DILocation(line: 389, column: 7, scope: !2173)
!2223 = !DILocation(line: 390, column: 3, scope: !2224)
!2224 = distinct !DILexicalBlock(scope: !2220, file: !244, line: 389, column: 51)
!2225 = !DILocation(line: 391, column: 3, scope: !2224)
!2226 = !DILocation(line: 395, column: 12, scope: !2227)
!2227 = distinct !DILexicalBlock(scope: !2173, file: !244, line: 395, column: 6)
!2228 = !DILocation(line: 395, column: 10, scope: !2227)
!2229 = !DILocation(line: 395, column: 33, scope: !2227)
!2230 = !DILocation(line: 395, column: 6, scope: !2173)
!2231 = !DILocation(line: 396, column: 3, scope: !2227)
!2232 = !DILocation(line: 397, column: 9, scope: !2173)
!2233 = !DILocation(line: 397, column: 2, scope: !2173)
!2234 = !DILocation(line: 398, column: 19, scope: !2173)
!2235 = !DILocation(line: 398, column: 2, scope: !2173)
!2236 = !DILocation(line: 398, column: 6, scope: !2173)
!2237 = !DILocation(line: 398, column: 17, scope: !2173)
!2238 = !DILocation(line: 399, column: 20, scope: !2173)
!2239 = !DILocation(line: 399, column: 2, scope: !2173)
!2240 = !DILocation(line: 399, column: 6, scope: !2173)
!2241 = !DILocation(line: 399, column: 18, scope: !2173)
!2242 = !DILocation(line: 402, column: 6, scope: !2243)
!2243 = distinct !DILexicalBlock(scope: !2173, file: !244, line: 402, column: 6)
!2244 = !DILocation(line: 402, column: 6, scope: !2173)
!2245 = !DILocation(line: 403, column: 3, scope: !2246)
!2246 = distinct !DILexicalBlock(scope: !2243, file: !244, line: 402, column: 26)
!2247 = !DILocation(line: 404, column: 3, scope: !2246)
!2248 = !DILocation(line: 405, column: 2, scope: !2246)
!2249 = !DILocation(line: 408, column: 2, scope: !2173)
!2250 = !DILocation(line: 408, column: 6, scope: !2173)
!2251 = !DILocation(line: 408, column: 17, scope: !2173)
!2252 = !DILocation(line: 409, column: 7, scope: !2253)
!2253 = distinct !DILexicalBlock(scope: !2173, file: !244, line: 409, column: 7)
!2254 = !DILocation(line: 409, column: 24, scope: !2253)
!2255 = !DILocation(line: 409, column: 7, scope: !2173)
!2256 = !DILocalVariable(name: "fd", scope: !2257, file: !244, line: 415, type: !23)
!2257 = distinct !DILexicalBlock(scope: !2253, file: !244, line: 410, column: 4)
!2258 = !DILocation(line: 415, column: 10, scope: !2257)
!2259 = !DILocation(line: 415, column: 15, scope: !2257)
!2260 = !DILocation(line: 416, column: 10, scope: !2261)
!2261 = distinct !DILexicalBlock(scope: !2257, file: !244, line: 416, column: 10)
!2262 = !DILocation(line: 416, column: 13, scope: !2261)
!2263 = !DILocation(line: 416, column: 10, scope: !2257)
!2264 = !DILocation(line: 434, column: 8, scope: !2265)
!2265 = distinct !DILexicalBlock(scope: !2261, file: !244, line: 417, column: 8)
!2266 = !DILocation(line: 437, column: 10, scope: !2267)
!2267 = distinct !DILexicalBlock(scope: !2261, file: !244, line: 436, column: 8)
!2268 = !DILocation(line: 437, column: 3, scope: !2267)
!2269 = !DILocation(line: 439, column: 4, scope: !2257)
!2270 = !DILocalVariable(name: "maxarglen", scope: !2271, file: !244, line: 449, type: !91)
!2271 = distinct !DILexicalBlock(scope: !2173, file: !244, line: 448, column: 2)
!2272 = !DILocation(line: 449, column: 11, scope: !2271)
!2273 = !DILocation(line: 449, column: 37, scope: !2271)
!2274 = !DILocation(line: 449, column: 23, scope: !2271)
!2275 = !DILocation(line: 450, column: 21, scope: !2276)
!2276 = distinct !DILexicalBlock(scope: !2271, file: !244, line: 450, column: 8)
!2277 = !DILocation(line: 450, column: 25, scope: !2276)
!2278 = !DILocation(line: 450, column: 10, scope: !2276)
!2279 = !DILocation(line: 450, column: 8, scope: !2271)
!2280 = !DILocation(line: 451, column: 5, scope: !2276)
!2281 = !DILocation(line: 455, column: 7, scope: !2282)
!2282 = distinct !DILexicalBlock(scope: !2173, file: !244, line: 455, column: 6)
!2283 = !DILocation(line: 455, column: 6, scope: !2282)
!2284 = !DILocation(line: 455, column: 12, scope: !2282)
!2285 = !DILocation(line: 455, column: 6, scope: !2173)
!2286 = !DILocation(line: 456, column: 27, scope: !2287)
!2287 = distinct !DILexicalBlock(scope: !2288, file: !244, line: 456, column: 7)
!2288 = distinct !DILexicalBlock(scope: !2282, file: !244, line: 455, column: 21)
!2289 = !DILocation(line: 456, column: 17, scope: !2287)
!2290 = !DILocation(line: 456, column: 15, scope: !2287)
!2291 = !DILocation(line: 456, column: 39, scope: !2287)
!2292 = !DILocation(line: 456, column: 7, scope: !2288)
!2293 = !DILocation(line: 457, column: 4, scope: !2287)
!2294 = !DILocation(line: 458, column: 3, scope: !2288)
!2295 = !DILocation(line: 458, column: 11, scope: !2288)
!2296 = !DILocation(line: 458, column: 21, scope: !2288)
!2297 = !DILocation(line: 459, column: 4, scope: !2288)
!2298 = !DILocation(line: 472, column: 16, scope: !2173)
!2299 = !DILocation(line: 472, column: 23, scope: !2173)
!2300 = !DILocation(line: 472, column: 31, scope: !2173)
!2301 = !DILocation(line: 472, column: 34, scope: !2173)
!2302 = !DILocation(line: 472, column: 13, scope: !2173)
!2303 = !DILocation(line: 475, column: 12, scope: !2304)
!2304 = distinct !DILexicalBlock(scope: !2173, file: !244, line: 475, column: 2)
!2305 = !DILocation(line: 475, column: 27, scope: !2304)
!2306 = !DILocation(line: 475, column: 7, scope: !2304)
!2307 = !DILocation(line: 475, column: 33, scope: !2308)
!2308 = distinct !DILexicalBlock(scope: !2304, file: !244, line: 475, column: 2)
!2309 = !DILocation(line: 475, column: 32, scope: !2308)
!2310 = !DILocation(line: 475, column: 38, scope: !2308)
!2311 = !DILocation(line: 475, column: 2, scope: !2304)
!2312 = !DILocalVariable(name: "len", scope: !2313, file: !244, line: 477, type: !91)
!2313 = distinct !DILexicalBlock(scope: !2308, file: !244, line: 475, column: 65)
!2314 = !DILocation(line: 477, column: 10, scope: !2313)
!2315 = !DILocation(line: 477, column: 24, scope: !2313)
!2316 = !DILocation(line: 477, column: 23, scope: !2313)
!2317 = !DILocation(line: 477, column: 16, scope: !2313)
!2318 = !DILocation(line: 478, column: 22, scope: !2319)
!2319 = distinct !DILexicalBlock(scope: !2313, file: !244, line: 478, column: 7)
!2320 = !DILocation(line: 478, column: 27, scope: !2319)
!2321 = !DILocation(line: 478, column: 26, scope: !2319)
!2322 = !DILocation(line: 478, column: 33, scope: !2319)
!2323 = !DILocation(line: 478, column: 12, scope: !2319)
!2324 = !DILocation(line: 478, column: 10, scope: !2319)
!2325 = !DILocation(line: 478, column: 39, scope: !2319)
!2326 = !DILocation(line: 478, column: 7, scope: !2313)
!2327 = !DILocation(line: 479, column: 4, scope: !2319)
!2328 = !DILocation(line: 480, column: 3, scope: !2313)
!2329 = !DILocation(line: 480, column: 6, scope: !2313)
!2330 = !DILocation(line: 480, column: 16, scope: !2313)
!2331 = !DILocation(line: 481, column: 19, scope: !2313)
!2332 = !DILocation(line: 481, column: 3, scope: !2313)
!2333 = !DILocation(line: 481, column: 6, scope: !2313)
!2334 = !DILocation(line: 481, column: 17, scope: !2313)
!2335 = !DILocation(line: 482, column: 20, scope: !2313)
!2336 = !DILocation(line: 482, column: 23, scope: !2313)
!2337 = !DILocation(line: 482, column: 3, scope: !2313)
!2338 = !DILocation(line: 482, column: 6, scope: !2313)
!2339 = !DILocation(line: 482, column: 18, scope: !2313)
!2340 = !DILocation(line: 486, column: 7, scope: !2341)
!2341 = distinct !DILexicalBlock(scope: !2313, file: !244, line: 486, column: 7)
!2342 = !DILocation(line: 486, column: 18, scope: !2341)
!2343 = !DILocation(line: 486, column: 21, scope: !2341)
!2344 = !DILocation(line: 486, column: 26, scope: !2341)
!2345 = !DILocation(line: 486, column: 7, scope: !2313)
!2346 = !DILocation(line: 487, column: 4, scope: !2347)
!2347 = distinct !DILexicalBlock(scope: !2341, file: !244, line: 486, column: 35)
!2348 = !DILocation(line: 487, column: 7, scope: !2347)
!2349 = !DILocation(line: 487, column: 16, scope: !2347)
!2350 = !DILocation(line: 488, column: 26, scope: !2347)
!2351 = !DILocation(line: 488, column: 4, scope: !2347)
!2352 = !DILocation(line: 489, column: 3, scope: !2347)
!2353 = !DILocation(line: 490, column: 27, scope: !2354)
!2354 = distinct !DILexicalBlock(scope: !2341, file: !244, line: 489, column: 10)
!2355 = !DILocation(line: 490, column: 31, scope: !2354)
!2356 = !DILocation(line: 490, column: 18, scope: !2354)
!2357 = !DILocation(line: 490, column: 4, scope: !2354)
!2358 = !DILocation(line: 490, column: 7, scope: !2354)
!2359 = !DILocation(line: 490, column: 16, scope: !2354)
!2360 = !DILocation(line: 497, column: 7, scope: !2361)
!2361 = distinct !DILexicalBlock(scope: !2313, file: !244, line: 497, column: 7)
!2362 = !DILocation(line: 497, column: 7, scope: !2313)
!2363 = !DILocation(line: 498, column: 18, scope: !2364)
!2364 = distinct !DILexicalBlock(scope: !2361, file: !244, line: 497, column: 15)
!2365 = !DILocation(line: 498, column: 4, scope: !2364)
!2366 = !DILocation(line: 498, column: 7, scope: !2364)
!2367 = !DILocation(line: 498, column: 16, scope: !2364)
!2368 = !DILocation(line: 499, column: 11, scope: !2364)
!2369 = !DILocation(line: 499, column: 9, scope: !2364)
!2370 = !DILocation(line: 500, column: 3, scope: !2364)
!2371 = !DILocation(line: 501, column: 4, scope: !2372)
!2372 = distinct !DILexicalBlock(scope: !2361, file: !244, line: 500, column: 10)
!2373 = !DILocation(line: 501, column: 7, scope: !2372)
!2374 = !DILocation(line: 501, column: 16, scope: !2372)
!2375 = !DILocation(line: 502, column: 8, scope: !2376)
!2376 = distinct !DILexicalBlock(scope: !2372, file: !244, line: 502, column: 8)
!2377 = !DILocation(line: 502, column: 13, scope: !2376)
!2378 = !DILocation(line: 502, column: 8, scope: !2372)
!2379 = !DILocation(line: 503, column: 18, scope: !2376)
!2380 = !DILocation(line: 503, column: 16, scope: !2376)
!2381 = !DILocation(line: 503, column: 9, scope: !2376)
!2382 = !DILocation(line: 503, column: 5, scope: !2376)
!2383 = !DILocation(line: 505, column: 21, scope: !2384)
!2384 = distinct !DILexicalBlock(scope: !2376, file: !244, line: 504, column: 9)
!2385 = !DILocation(line: 505, column: 5, scope: !2384)
!2386 = !DILocation(line: 505, column: 10, scope: !2384)
!2387 = !DILocation(line: 505, column: 19, scope: !2384)
!2388 = !DILocation(line: 506, column: 11, scope: !2384)
!2389 = !DILocation(line: 506, column: 9, scope: !2384)
!2390 = !DILocation(line: 509, column: 2, scope: !2313)
!2391 = !DILocation(line: 475, column: 47, scope: !2308)
!2392 = !DILocation(line: 475, column: 55, scope: !2308)
!2393 = !DILocation(line: 475, column: 2, scope: !2308)
!2394 = distinct !{!2394, !2311, !2395}
!2395 = !DILocation(line: 509, column: 2, scope: !2304)
!2396 = !DILocation(line: 510, column: 6, scope: !2397)
!2397 = distinct !DILexicalBlock(scope: !2173, file: !244, line: 510, column: 6)
!2398 = !DILocation(line: 510, column: 13, scope: !2397)
!2399 = !DILocation(line: 510, column: 16, scope: !2397)
!2400 = !DILocation(line: 510, column: 23, scope: !2397)
!2401 = !DILocation(line: 510, column: 6, scope: !2173)
!2402 = !DILocation(line: 511, column: 19, scope: !2397)
!2403 = !DILocation(line: 511, column: 23, scope: !2397)
!2404 = !DILocation(line: 511, column: 29, scope: !2397)
!2405 = !DILocation(line: 511, column: 10, scope: !2397)
!2406 = !DILocation(line: 511, column: 8, scope: !2397)
!2407 = !DILocation(line: 511, column: 3, scope: !2397)
!2408 = !DILocation(line: 518, column: 31, scope: !2409)
!2409 = distinct !DILexicalBlock(scope: !2173, file: !244, line: 518, column: 6)
!2410 = !DILocation(line: 518, column: 21, scope: !2409)
!2411 = !DILocation(line: 518, column: 7, scope: !2409)
!2412 = !DILocation(line: 518, column: 11, scope: !2409)
!2413 = !DILocation(line: 518, column: 19, scope: !2409)
!2414 = !DILocation(line: 518, column: 43, scope: !2409)
!2415 = !DILocation(line: 518, column: 6, scope: !2173)
!2416 = !DILocation(line: 519, column: 3, scope: !2409)
!2417 = !DILocation(line: 520, column: 26, scope: !2173)
!2418 = !DILocation(line: 520, column: 2, scope: !2173)
!2419 = !DILocation(line: 520, column: 6, scope: !2173)
!2420 = !DILocation(line: 520, column: 15, scope: !2173)
!2421 = !DILocation(line: 520, column: 24, scope: !2173)
!2422 = !DILocation(line: 521, column: 2, scope: !2173)
!2423 = !DILocation(line: 521, column: 6, scope: !2173)
!2424 = !DILocation(line: 521, column: 15, scope: !2173)
!2425 = !DILocation(line: 521, column: 24, scope: !2173)
!2426 = !DILocation(line: 522, column: 19, scope: !2427)
!2427 = distinct !DILexicalBlock(scope: !2173, file: !244, line: 522, column: 6)
!2428 = !DILocation(line: 522, column: 8, scope: !2427)
!2429 = !DILocation(line: 522, column: 6, scope: !2173)
!2430 = !DILocation(line: 523, column: 3, scope: !2427)
!2431 = !DILocation(line: 532, column: 7, scope: !2432)
!2432 = distinct !DILexicalBlock(scope: !2173, file: !244, line: 532, column: 6)
!2433 = !DILocation(line: 532, column: 26, scope: !2432)
!2434 = !DILocation(line: 532, column: 30, scope: !2432)
!2435 = !DILocation(line: 533, column: 6, scope: !2432)
!2436 = !DILocation(line: 533, column: 33, scope: !2432)
!2437 = !DILocation(line: 533, column: 24, scope: !2432)
!2438 = !DILocation(line: 533, column: 10, scope: !2432)
!2439 = !DILocation(line: 533, column: 14, scope: !2432)
!2440 = !DILocation(line: 533, column: 22, scope: !2432)
!2441 = !DILocation(line: 533, column: 43, scope: !2432)
!2442 = !DILocation(line: 532, column: 6, scope: !2173)
!2443 = !DILocation(line: 534, column: 3, scope: !2432)
!2444 = !DILocation(line: 536, column: 16, scope: !2173)
!2445 = !DILocation(line: 536, column: 20, scope: !2173)
!2446 = !DILocation(line: 536, column: 2, scope: !2173)
!2447 = !DILocation(line: 537, column: 10, scope: !2173)
!2448 = !DILocation(line: 537, column: 2, scope: !2173)
!2449 = !DILocation(line: 539, column: 17, scope: !2173)
!2450 = !DILocation(line: 539, column: 7, scope: !2173)
!2451 = !DILocation(line: 540, column: 7, scope: !2173)
!2452 = !DILocation(line: 540, column: 2, scope: !2173)
!2453 = !DILocation(line: 541, column: 12, scope: !2173)
!2454 = !DILocation(line: 541, column: 16, scope: !2173)
!2455 = !DILocation(line: 541, column: 7, scope: !2173)
!2456 = !DILocation(line: 542, column: 12, scope: !2173)
!2457 = !DILocation(line: 542, column: 7, scope: !2173)
!2458 = !DILocation(line: 543, column: 2, scope: !2173)
!2459 = !DILocation(line: 544, column: 1, scope: !2173)
!2460 = distinct !DISubprogram(name: "fts_maxarglen", scope: !244, file: !244, line: 1935, type: !2461, isLocal: true, isDefinition: true, scopeLine: 1936, flags: DIFlagPrototyped, isOptimized: false, unit: !243, variables: !25)
!2461 = !DISubroutineType(types: !2462)
!2462 = !{!91, !2176}
!2463 = !DILocalVariable(name: "argv", arg: 1, scope: !2460, file: !244, line: 1935, type: !2176)
!2464 = !DILocation(line: 1935, column: 30, scope: !2460)
!2465 = !DILocalVariable(name: "len", scope: !2460, file: !244, line: 1937, type: !91)
!2466 = !DILocation(line: 1937, column: 9, scope: !2460)
!2467 = !DILocalVariable(name: "max", scope: !2460, file: !244, line: 1937, type: !91)
!2468 = !DILocation(line: 1937, column: 14, scope: !2460)
!2469 = !DILocation(line: 1939, column: 11, scope: !2470)
!2470 = distinct !DILexicalBlock(scope: !2460, file: !244, line: 1939, column: 2)
!2471 = !DILocation(line: 1939, column: 7, scope: !2470)
!2472 = !DILocation(line: 1939, column: 17, scope: !2473)
!2473 = distinct !DILexicalBlock(scope: !2470, file: !244, line: 1939, column: 2)
!2474 = !DILocation(line: 1939, column: 16, scope: !2473)
!2475 = !DILocation(line: 1939, column: 2, scope: !2470)
!2476 = !DILocation(line: 1940, column: 22, scope: !2477)
!2477 = distinct !DILexicalBlock(scope: !2473, file: !244, line: 1940, column: 7)
!2478 = !DILocation(line: 1940, column: 21, scope: !2477)
!2479 = !DILocation(line: 1940, column: 14, scope: !2477)
!2480 = !DILocation(line: 1940, column: 12, scope: !2477)
!2481 = !DILocation(line: 1940, column: 31, scope: !2477)
!2482 = !DILocation(line: 1940, column: 29, scope: !2477)
!2483 = !DILocation(line: 1940, column: 7, scope: !2473)
!2484 = !DILocation(line: 1941, column: 10, scope: !2477)
!2485 = !DILocation(line: 1941, column: 8, scope: !2477)
!2486 = !DILocation(line: 1941, column: 4, scope: !2477)
!2487 = !DILocation(line: 1939, column: 23, scope: !2473)
!2488 = !DILocation(line: 1939, column: 2, scope: !2473)
!2489 = distinct !{!2489, !2475, !2490}
!2490 = !DILocation(line: 1941, column: 10, scope: !2470)
!2491 = !DILocation(line: 1942, column: 10, scope: !2460)
!2492 = !DILocation(line: 1942, column: 14, scope: !2460)
!2493 = !DILocation(line: 1942, column: 2, scope: !2460)
!2494 = distinct !DISubprogram(name: "fts_palloc", scope: !244, file: !244, line: 1879, type: !2495, isLocal: true, isDefinition: true, scopeLine: 1880, flags: DIFlagPrototyped, isOptimized: false, unit: !243, variables: !25)
!2495 = !DISubroutineType(types: !2496)
!2496 = !{!79, !255, !91}
!2497 = !DILocalVariable(name: "sp", arg: 1, scope: !2494, file: !244, line: 1879, type: !255)
!2498 = !DILocation(line: 1879, column: 18, scope: !2494)
!2499 = !DILocalVariable(name: "more", arg: 2, scope: !2494, file: !244, line: 1879, type: !91)
!2500 = !DILocation(line: 1879, column: 29, scope: !2494)
!2501 = !DILocalVariable(name: "p", scope: !2494, file: !244, line: 1881, type: !15)
!2502 = !DILocation(line: 1881, column: 8, scope: !2494)
!2503 = !DILocalVariable(name: "new_len", scope: !2494, file: !244, line: 1882, type: !91)
!2504 = !DILocation(line: 1882, column: 9, scope: !2494)
!2505 = !DILocation(line: 1882, column: 19, scope: !2494)
!2506 = !DILocation(line: 1882, column: 23, scope: !2494)
!2507 = !DILocation(line: 1882, column: 37, scope: !2494)
!2508 = !DILocation(line: 1882, column: 35, scope: !2494)
!2509 = !DILocation(line: 1882, column: 42, scope: !2494)
!2510 = !DILocation(line: 1887, column: 6, scope: !2511)
!2511 = distinct !DILexicalBlock(scope: !2494, file: !244, line: 1887, column: 6)
!2512 = !DILocation(line: 1887, column: 16, scope: !2511)
!2513 = !DILocation(line: 1887, column: 20, scope: !2511)
!2514 = !DILocation(line: 1887, column: 14, scope: !2511)
!2515 = !DILocation(line: 1887, column: 6, scope: !2494)
!2516 = !DILocation(line: 1888, column: 8, scope: !2517)
!2517 = distinct !DILexicalBlock(scope: !2511, file: !244, line: 1887, column: 33)
!2518 = !DILocation(line: 1888, column: 12, scope: !2517)
!2519 = !DILocation(line: 1888, column: 3, scope: !2517)
!2520 = !DILocation(line: 1889, column: 3, scope: !2517)
!2521 = !DILocation(line: 1889, column: 7, scope: !2517)
!2522 = !DILocation(line: 1889, column: 16, scope: !2517)
!2523 = !DILocation(line: 1890, column: 3, scope: !2517)
!2524 = !DILocation(line: 1891, column: 3, scope: !2517)
!2525 = !DILocation(line: 1893, column: 20, scope: !2494)
!2526 = !DILocation(line: 1893, column: 2, scope: !2494)
!2527 = !DILocation(line: 1893, column: 6, scope: !2494)
!2528 = !DILocation(line: 1893, column: 18, scope: !2494)
!2529 = !DILocation(line: 1894, column: 14, scope: !2494)
!2530 = !DILocation(line: 1894, column: 18, scope: !2494)
!2531 = !DILocation(line: 1894, column: 28, scope: !2494)
!2532 = !DILocation(line: 1894, column: 32, scope: !2494)
!2533 = !DILocation(line: 1894, column: 6, scope: !2494)
!2534 = !DILocation(line: 1894, column: 4, scope: !2494)
!2535 = !DILocation(line: 1895, column: 6, scope: !2536)
!2536 = distinct !DILexicalBlock(scope: !2494, file: !244, line: 1895, column: 6)
!2537 = !DILocation(line: 1895, column: 8, scope: !2536)
!2538 = !DILocation(line: 1895, column: 6, scope: !2494)
!2539 = !DILocation(line: 1896, column: 8, scope: !2540)
!2540 = distinct !DILexicalBlock(scope: !2536, file: !244, line: 1895, column: 17)
!2541 = !DILocation(line: 1896, column: 12, scope: !2540)
!2542 = !DILocation(line: 1896, column: 3, scope: !2540)
!2543 = !DILocation(line: 1897, column: 3, scope: !2540)
!2544 = !DILocation(line: 1897, column: 7, scope: !2540)
!2545 = !DILocation(line: 1897, column: 16, scope: !2540)
!2546 = !DILocation(line: 1898, column: 3, scope: !2540)
!2547 = !DILocation(line: 1900, column: 17, scope: !2494)
!2548 = !DILocation(line: 1900, column: 2, scope: !2494)
!2549 = !DILocation(line: 1900, column: 6, scope: !2494)
!2550 = !DILocation(line: 1900, column: 15, scope: !2494)
!2551 = !DILocation(line: 1901, column: 2, scope: !2494)
!2552 = !DILocation(line: 1902, column: 1, scope: !2494)
!2553 = distinct !DISubprogram(name: "fts_alloc", scope: !244, file: !244, line: 1829, type: !2554, isLocal: true, isDefinition: true, scopeLine: 1830, flags: DIFlagPrototyped, isOptimized: false, unit: !243, variables: !25)
!2554 = !DISubroutineType(types: !2555)
!2555 = !{!2190, !255, !12, !91}
!2556 = !DILocalVariable(name: "sp", arg: 1, scope: !2553, file: !244, line: 1829, type: !255)
!2557 = !DILocation(line: 1829, column: 17, scope: !2553)
!2558 = !DILocalVariable(name: "name", arg: 2, scope: !2553, file: !244, line: 1829, type: !12)
!2559 = !DILocation(line: 1829, column: 33, scope: !2553)
!2560 = !DILocalVariable(name: "namelen", arg: 3, scope: !2553, file: !244, line: 1829, type: !91)
!2561 = !DILocation(line: 1829, column: 55, scope: !2553)
!2562 = !DILocalVariable(name: "p", scope: !2553, file: !244, line: 1831, type: !2190)
!2563 = !DILocation(line: 1831, column: 19, scope: !2553)
!2564 = !DILocalVariable(name: "len", scope: !2553, file: !244, line: 1832, type: !91)
!2565 = !DILocation(line: 1832, column: 9, scope: !2553)
!2566 = !DILocation(line: 1838, column: 25, scope: !2553)
!2567 = !DILocation(line: 1838, column: 23, scope: !2553)
!2568 = !DILocation(line: 1838, column: 6, scope: !2553)
!2569 = !DILocation(line: 1839, column: 18, scope: !2570)
!2570 = distinct !DILexicalBlock(scope: !2553, file: !244, line: 1839, column: 6)
!2571 = !DILocation(line: 1839, column: 11, scope: !2570)
!2572 = !DILocation(line: 1839, column: 9, scope: !2570)
!2573 = !DILocation(line: 1839, column: 24, scope: !2570)
!2574 = !DILocation(line: 1839, column: 6, scope: !2553)
!2575 = !DILocation(line: 1840, column: 3, scope: !2570)
!2576 = !DILocation(line: 1843, column: 10, scope: !2553)
!2577 = !DILocation(line: 1843, column: 13, scope: !2553)
!2578 = !DILocation(line: 1843, column: 2, scope: !2553)
!2579 = !DILocation(line: 1843, column: 23, scope: !2553)
!2580 = !DILocation(line: 1843, column: 29, scope: !2553)
!2581 = !DILocation(line: 1844, column: 2, scope: !2553)
!2582 = !DILocation(line: 1844, column: 5, scope: !2553)
!2583 = !DILocation(line: 1844, column: 14, scope: !2553)
!2584 = !DILocation(line: 1844, column: 23, scope: !2553)
!2585 = !DILocation(line: 1846, column: 19, scope: !2553)
!2586 = !DILocation(line: 1846, column: 2, scope: !2553)
!2587 = !DILocation(line: 1846, column: 5, scope: !2553)
!2588 = !DILocation(line: 1846, column: 17, scope: !2553)
!2589 = !DILocation(line: 1847, column: 15, scope: !2553)
!2590 = !DILocation(line: 1847, column: 2, scope: !2553)
!2591 = !DILocation(line: 1847, column: 5, scope: !2553)
!2592 = !DILocation(line: 1847, column: 13, scope: !2553)
!2593 = !DILocation(line: 1848, column: 16, scope: !2553)
!2594 = !DILocation(line: 1848, column: 20, scope: !2553)
!2595 = !DILocation(line: 1848, column: 2, scope: !2553)
!2596 = !DILocation(line: 1848, column: 5, scope: !2553)
!2597 = !DILocation(line: 1848, column: 14, scope: !2553)
!2598 = !DILocation(line: 1849, column: 2, scope: !2553)
!2599 = !DILocation(line: 1849, column: 5, scope: !2553)
!2600 = !DILocation(line: 1849, column: 15, scope: !2553)
!2601 = !DILocation(line: 1850, column: 2, scope: !2553)
!2602 = !DILocation(line: 1850, column: 5, scope: !2553)
!2603 = !DILocation(line: 1850, column: 15, scope: !2553)
!2604 = !DILocation(line: 1851, column: 2, scope: !2553)
!2605 = !DILocation(line: 1851, column: 5, scope: !2553)
!2606 = !DILocation(line: 1851, column: 15, scope: !2553)
!2607 = !DILocation(line: 1852, column: 2, scope: !2553)
!2608 = !DILocation(line: 1852, column: 5, scope: !2553)
!2609 = !DILocation(line: 1852, column: 16, scope: !2553)
!2610 = !DILocation(line: 1853, column: 2, scope: !2553)
!2611 = !DILocation(line: 1853, column: 5, scope: !2553)
!2612 = !DILocation(line: 1853, column: 17, scope: !2553)
!2613 = !DILocation(line: 1854, column: 10, scope: !2553)
!2614 = !DILocation(line: 1854, column: 2, scope: !2553)
!2615 = !DILocation(line: 1855, column: 1, scope: !2553)
!2616 = distinct !DISubprogram(name: "fts_set_stat_required", scope: !244, file: !244, line: 288, type: !2617, isLocal: true, isDefinition: true, scopeLine: 289, flags: DIFlagPrototyped, isOptimized: false, unit: !243, variables: !25)
!2617 = !DISubroutineType(types: !2618)
!2618 = !{null, !2190, !79}
!2619 = !DILocalVariable(name: "p", arg: 1, scope: !2616, file: !244, line: 288, type: !2190)
!2620 = !DILocation(line: 288, column: 32, scope: !2616)
!2621 = !DILocalVariable(name: "required", arg: 2, scope: !2616, file: !244, line: 288, type: !79)
!2622 = !DILocation(line: 288, column: 40, scope: !2616)
!2623 = !DILocation(line: 290, column: 3, scope: !2616)
!2624 = distinct !{!2624, !2623, !2623}
!2625 = !DILocation(line: 290, column: 3, scope: !2626)
!2626 = distinct !DILexicalBlock(scope: !2627, file: !244, line: 290, column: 3)
!2627 = distinct !DILexicalBlock(scope: !2616, file: !244, line: 290, column: 3)
!2628 = !DILocation(line: 290, column: 3, scope: !2627)
!2629 = !DILocation(line: 291, column: 28, scope: !2616)
!2630 = !DILocation(line: 291, column: 27, scope: !2616)
!2631 = !DILocation(line: 291, column: 3, scope: !2616)
!2632 = !DILocation(line: 291, column: 6, scope: !2616)
!2633 = !DILocation(line: 291, column: 17, scope: !2616)
!2634 = !DILocation(line: 291, column: 25, scope: !2616)
!2635 = !DILocation(line: 294, column: 1, scope: !2616)
!2636 = distinct !DISubprogram(name: "fts_stat", scope: !244, file: !244, line: 1686, type: !2637, isLocal: true, isDefinition: true, scopeLine: 1687, flags: DIFlagPrototyped, isOptimized: false, unit: !243, variables: !25)
!2637 = !DISubroutineType(types: !2638)
!2638 = !{!143, !255, !2190, !79}
!2639 = !DILocalVariable(name: "sp", arg: 1, scope: !2636, file: !244, line: 1686, type: !255)
!2640 = !DILocation(line: 1686, column: 15, scope: !2636)
!2641 = !DILocalVariable(name: "p", arg: 2, scope: !2636, file: !244, line: 1686, type: !2190)
!2642 = !DILocation(line: 1686, column: 36, scope: !2636)
!2643 = !DILocalVariable(name: "follow", arg: 3, scope: !2636, file: !244, line: 1686, type: !79)
!2644 = !DILocation(line: 1686, column: 44, scope: !2636)
!2645 = !DILocalVariable(name: "sbp", scope: !2636, file: !244, line: 1688, type: !2646)
!2646 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !287, size: 64)
!2647 = !DILocation(line: 1688, column: 15, scope: !2636)
!2648 = !DILocation(line: 1688, column: 21, scope: !2636)
!2649 = !DILocation(line: 1688, column: 24, scope: !2636)
!2650 = !DILocalVariable(name: "saved_errno", scope: !2636, file: !244, line: 1689, type: !23)
!2651 = !DILocation(line: 1689, column: 6, scope: !2636)
!2652 = !DILocation(line: 1691, column: 6, scope: !2653)
!2653 = distinct !DILexicalBlock(scope: !2636, file: !244, line: 1691, column: 6)
!2654 = !DILocation(line: 1691, column: 9, scope: !2653)
!2655 = !DILocation(line: 1691, column: 19, scope: !2653)
!2656 = !DILocation(line: 1691, column: 36, scope: !2653)
!2657 = !DILocation(line: 1691, column: 39, scope: !2653)
!2658 = !DILocation(line: 1691, column: 6, scope: !2636)
!2659 = !DILocation(line: 1692, column: 10, scope: !2653)
!2660 = !DILocation(line: 1692, column: 3, scope: !2653)
!2661 = !DILocation(line: 1708, column: 6, scope: !2662)
!2662 = distinct !DILexicalBlock(scope: !2636, file: !244, line: 1708, column: 6)
!2663 = !DILocation(line: 1708, column: 25, scope: !2662)
!2664 = !DILocation(line: 1708, column: 28, scope: !2662)
!2665 = !DILocation(line: 1708, column: 6, scope: !2636)
!2666 = !DILocation(line: 1709, column: 12, scope: !2667)
!2667 = distinct !DILexicalBlock(scope: !2668, file: !244, line: 1709, column: 7)
!2668 = distinct !DILexicalBlock(scope: !2662, file: !244, line: 1708, column: 36)
!2669 = !DILocation(line: 1709, column: 15, scope: !2667)
!2670 = !DILocation(line: 1709, column: 28, scope: !2667)
!2671 = !DILocation(line: 1709, column: 7, scope: !2667)
!2672 = !DILocation(line: 1709, column: 7, scope: !2668)
!2673 = !DILocation(line: 1710, column: 18, scope: !2674)
!2674 = distinct !DILexicalBlock(scope: !2667, file: !244, line: 1709, column: 34)
!2675 = !DILocation(line: 1710, column: 16, scope: !2674)
!2676 = !DILocation(line: 1711, column: 8, scope: !2677)
!2677 = distinct !DILexicalBlock(scope: !2674, file: !244, line: 1711, column: 8)
!2678 = !DILocation(line: 1711, column: 14, scope: !2677)
!2679 = !DILocation(line: 1712, column: 8, scope: !2677)
!2680 = !DILocation(line: 1712, column: 17, scope: !2677)
!2681 = !DILocation(line: 1712, column: 20, scope: !2677)
!2682 = !DILocation(line: 1712, column: 33, scope: !2677)
!2683 = !DILocation(line: 1712, column: 11, scope: !2677)
!2684 = !DILocation(line: 1712, column: 38, scope: !2677)
!2685 = !DILocation(line: 1711, column: 8, scope: !2674)
!2686 = !DILocation(line: 1713, column: 5, scope: !2687)
!2687 = distinct !DILexicalBlock(scope: !2677, file: !244, line: 1712, column: 44)
!2688 = !DILocation(line: 1714, column: 5, scope: !2687)
!2689 = !DILocation(line: 1716, column: 19, scope: !2674)
!2690 = !DILocation(line: 1716, column: 4, scope: !2674)
!2691 = !DILocation(line: 1716, column: 7, scope: !2674)
!2692 = !DILocation(line: 1716, column: 17, scope: !2674)
!2693 = !DILocation(line: 1717, column: 4, scope: !2674)
!2694 = !DILocation(line: 1719, column: 2, scope: !2668)
!2695 = !DILocation(line: 1719, column: 21, scope: !2696)
!2696 = distinct !DILexicalBlock(scope: !2662, file: !244, line: 1719, column: 13)
!2697 = !DILocation(line: 1719, column: 25, scope: !2696)
!2698 = !DILocation(line: 1719, column: 37, scope: !2696)
!2699 = !DILocation(line: 1719, column: 40, scope: !2696)
!2700 = !DILocation(line: 1719, column: 53, scope: !2696)
!2701 = !DILocation(line: 1719, column: 13, scope: !2696)
!2702 = !DILocation(line: 1719, column: 13, scope: !2662)
!2703 = !DILocation(line: 1721, column: 18, scope: !2704)
!2704 = distinct !DILexicalBlock(scope: !2696, file: !244, line: 1720, column: 29)
!2705 = !DILocation(line: 1721, column: 3, scope: !2704)
!2706 = !DILocation(line: 1721, column: 6, scope: !2704)
!2707 = !DILocation(line: 1721, column: 16, scope: !2704)
!2708 = !DILocation(line: 1722, column: 14, scope: !2704)
!2709 = !DILocation(line: 1722, column: 7, scope: !2704)
!2710 = !DILocation(line: 1723, column: 3, scope: !2704)
!2711 = !DILocation(line: 1726, column: 6, scope: !2712)
!2712 = distinct !DILexicalBlock(scope: !2636, file: !244, line: 1726, column: 6)
!2713 = !DILocation(line: 1726, column: 6, scope: !2636)
!2714 = !DILocation(line: 1727, column: 30, scope: !2715)
!2715 = distinct !DILexicalBlock(scope: !2712, file: !244, line: 1726, column: 29)
!2716 = !DILocation(line: 1727, column: 35, scope: !2715)
!2717 = !DILocation(line: 1728, column: 12, scope: !2715)
!2718 = !DILocation(line: 1728, column: 11, scope: !2715)
!2719 = !DILocation(line: 1728, column: 9, scope: !2715)
!2720 = !DILocation(line: 1727, column: 3, scope: !2715)
!2721 = !DILocation(line: 1727, column: 6, scope: !2715)
!2722 = !DILocation(line: 1727, column: 27, scope: !2715)
!2723 = !DILocation(line: 1729, column: 7, scope: !2724)
!2724 = distinct !DILexicalBlock(scope: !2715, file: !244, line: 1729, column: 7)
!2725 = !DILocation(line: 1729, column: 7, scope: !2715)
!2726 = !DILocation(line: 1731, column: 12, scope: !2727)
!2727 = distinct !DILexicalBlock(scope: !2724, file: !244, line: 1729, column: 27)
!2728 = !DILocation(line: 1731, column: 15, scope: !2727)
!2729 = !DILocation(line: 1731, column: 25, scope: !2727)
!2730 = !DILocation(line: 1731, column: 11, scope: !2727)
!2731 = !DILocation(line: 1731, column: 4, scope: !2727)
!2732 = !DILocation(line: 1755, column: 3, scope: !2715)
!2733 = !DILocation(line: 1757, column: 6, scope: !2734)
!2734 = distinct !DILexicalBlock(scope: !2636, file: !244, line: 1757, column: 6)
!2735 = !DILocation(line: 1757, column: 6, scope: !2636)
!2736 = !DILocation(line: 1758, column: 3, scope: !2734)
!2737 = !DILocation(line: 1759, column: 6, scope: !2738)
!2738 = distinct !DILexicalBlock(scope: !2636, file: !244, line: 1759, column: 6)
!2739 = !DILocation(line: 1759, column: 6, scope: !2636)
!2740 = !DILocation(line: 1760, column: 3, scope: !2738)
!2741 = !DILocation(line: 1761, column: 2, scope: !2636)
!2742 = !DILocation(line: 1762, column: 1, scope: !2636)
!2743 = distinct !DISubprogram(name: "fts_sort", scope: !244, file: !244, line: 1779, type: !2744, isLocal: true, isDefinition: true, scopeLine: 1780, flags: DIFlagPrototyped, isOptimized: false, unit: !243, variables: !25)
!2744 = !DISubroutineType(types: !2745)
!2745 = !{!2190, !255, !2190, !91}
!2746 = !DILocalVariable(name: "sp", arg: 1, scope: !2743, file: !244, line: 1779, type: !255)
!2747 = !DILocation(line: 1779, column: 16, scope: !2743)
!2748 = !DILocalVariable(name: "head", arg: 2, scope: !2743, file: !244, line: 1779, type: !2190)
!2749 = !DILocation(line: 1779, column: 28, scope: !2743)
!2750 = !DILocalVariable(name: "nitems", arg: 3, scope: !2743, file: !244, line: 1779, type: !91)
!2751 = !DILocation(line: 1779, column: 50, scope: !2743)
!2752 = !DILocalVariable(name: "ap", scope: !2743, file: !244, line: 1781, type: !2753)
!2753 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2190, size: 64)
!2754 = !DILocation(line: 1781, column: 20, scope: !2743)
!2755 = !DILocalVariable(name: "p", scope: !2743, file: !244, line: 1781, type: !2190)
!2756 = !DILocation(line: 1781, column: 25, scope: !2743)
!2757 = !DILocalVariable(name: "dummy", scope: !2743, file: !244, line: 1790, type: !2190)
!2758 = !DILocation(line: 1790, column: 10, scope: !2743)
!2759 = !DILocalVariable(name: "compare", scope: !2743, file: !244, line: 1791, type: !401)
!2760 = !DILocation(line: 1791, column: 8, scope: !2743)
!2761 = !DILocation(line: 1793, column: 9, scope: !2743)
!2762 = !DILocation(line: 1793, column: 41, scope: !2743)
!2763 = !DILocation(line: 1793, column: 30, scope: !2743)
!2764 = !DILocation(line: 1793, column: 27, scope: !2743)
!2765 = !DILocation(line: 1792, column: 5, scope: !2743)
!2766 = !DILocation(line: 1794, column: 46, scope: !2743)
!2767 = !DILocation(line: 1794, column: 50, scope: !2743)
!2768 = !DILocation(line: 1794, column: 7, scope: !2743)
!2769 = !DILocation(line: 1804, column: 6, scope: !2770)
!2770 = distinct !DILexicalBlock(scope: !2743, file: !244, line: 1804, column: 6)
!2771 = !DILocation(line: 1804, column: 15, scope: !2770)
!2772 = !DILocation(line: 1804, column: 19, scope: !2770)
!2773 = !DILocation(line: 1804, column: 13, scope: !2770)
!2774 = !DILocation(line: 1804, column: 6, scope: !2743)
!2775 = !DILocalVariable(name: "a", scope: !2776, file: !244, line: 1805, type: !2753)
!2776 = distinct !DILexicalBlock(scope: !2770, file: !244, line: 1804, column: 31)
!2777 = !DILocation(line: 1805, column: 12, scope: !2776)
!2778 = !DILocation(line: 1807, column: 20, scope: !2776)
!2779 = !DILocation(line: 1807, column: 27, scope: !2776)
!2780 = !DILocation(line: 1807, column: 3, scope: !2776)
!2781 = !DILocation(line: 1807, column: 7, scope: !2776)
!2782 = !DILocation(line: 1807, column: 18, scope: !2776)
!2783 = !DILocation(line: 1808, column: 30, scope: !2784)
!2784 = distinct !DILexicalBlock(scope: !2776, file: !244, line: 1808, column: 7)
!2785 = !DILocation(line: 1808, column: 34, scope: !2784)
!2786 = !DILocation(line: 1808, column: 28, scope: !2784)
!2787 = !DILocation(line: 1809, column: 7, scope: !2784)
!2788 = !DILocation(line: 1809, column: 26, scope: !2784)
!2789 = !DILocation(line: 1809, column: 30, scope: !2784)
!2790 = !DILocation(line: 1810, column: 12, scope: !2784)
!2791 = !DILocation(line: 1810, column: 16, scope: !2784)
!2792 = !DILocation(line: 1810, column: 27, scope: !2784)
!2793 = !DILocation(line: 1809, column: 17, scope: !2784)
!2794 = !DILocation(line: 1809, column: 15, scope: !2784)
!2795 = !DILocation(line: 1808, column: 7, scope: !2776)
!2796 = !DILocation(line: 1811, column: 9, scope: !2797)
!2797 = distinct !DILexicalBlock(scope: !2784, file: !244, line: 1810, column: 42)
!2798 = !DILocation(line: 1811, column: 13, scope: !2797)
!2799 = !DILocation(line: 1811, column: 4, scope: !2797)
!2800 = !DILocation(line: 1812, column: 4, scope: !2797)
!2801 = !DILocation(line: 1812, column: 8, scope: !2797)
!2802 = !DILocation(line: 1812, column: 18, scope: !2797)
!2803 = !DILocation(line: 1813, column: 4, scope: !2797)
!2804 = !DILocation(line: 1813, column: 8, scope: !2797)
!2805 = !DILocation(line: 1813, column: 19, scope: !2797)
!2806 = !DILocation(line: 1814, column: 12, scope: !2797)
!2807 = !DILocation(line: 1814, column: 4, scope: !2797)
!2808 = !DILocation(line: 1816, column: 19, scope: !2776)
!2809 = !DILocation(line: 1816, column: 3, scope: !2776)
!2810 = !DILocation(line: 1816, column: 7, scope: !2776)
!2811 = !DILocation(line: 1816, column: 17, scope: !2776)
!2812 = !DILocation(line: 1817, column: 2, scope: !2776)
!2813 = !DILocation(line: 1818, column: 12, scope: !2814)
!2814 = distinct !DILexicalBlock(scope: !2743, file: !244, line: 1818, column: 2)
!2815 = !DILocation(line: 1818, column: 16, scope: !2814)
!2816 = !DILocation(line: 1818, column: 10, scope: !2814)
!2817 = !DILocation(line: 1818, column: 31, scope: !2814)
!2818 = !DILocation(line: 1818, column: 29, scope: !2814)
!2819 = !DILocation(line: 1818, column: 7, scope: !2814)
!2820 = !DILocation(line: 1818, column: 37, scope: !2821)
!2821 = distinct !DILexicalBlock(scope: !2814, file: !244, line: 1818, column: 2)
!2822 = !DILocation(line: 1818, column: 2, scope: !2814)
!2823 = !DILocation(line: 1819, column: 11, scope: !2821)
!2824 = !DILocation(line: 1819, column: 6, scope: !2821)
!2825 = !DILocation(line: 1819, column: 9, scope: !2821)
!2826 = !DILocation(line: 1819, column: 3, scope: !2821)
!2827 = !DILocation(line: 1818, column: 44, scope: !2821)
!2828 = !DILocation(line: 1818, column: 47, scope: !2821)
!2829 = !DILocation(line: 1818, column: 42, scope: !2821)
!2830 = !DILocation(line: 1818, column: 2, scope: !2821)
!2831 = distinct !{!2831, !2822, !2832}
!2832 = !DILocation(line: 1819, column: 11, scope: !2814)
!2833 = !DILocation(line: 1820, column: 16, scope: !2743)
!2834 = !DILocation(line: 1820, column: 20, scope: !2743)
!2835 = !DILocation(line: 1820, column: 8, scope: !2743)
!2836 = !DILocation(line: 1820, column: 31, scope: !2743)
!2837 = !DILocation(line: 1820, column: 57, scope: !2743)
!2838 = !DILocation(line: 1820, column: 2, scope: !2743)
!2839 = !DILocation(line: 1821, column: 21, scope: !2840)
!2840 = distinct !DILexicalBlock(scope: !2743, file: !244, line: 1821, column: 2)
!2841 = !DILocation(line: 1821, column: 25, scope: !2840)
!2842 = !DILocation(line: 1821, column: 19, scope: !2840)
!2843 = !DILocation(line: 1821, column: 14, scope: !2840)
!2844 = !DILocation(line: 1821, column: 12, scope: !2840)
!2845 = !DILocation(line: 1821, column: 7, scope: !2840)
!2846 = !DILocation(line: 1821, column: 37, scope: !2847)
!2847 = distinct !DILexicalBlock(scope: !2840, file: !244, line: 1821, column: 2)
!2848 = !DILocation(line: 1821, column: 2, scope: !2840)
!2849 = !DILocation(line: 1822, column: 21, scope: !2847)
!2850 = !DILocation(line: 1822, column: 3, scope: !2847)
!2851 = !DILocation(line: 1822, column: 10, scope: !2847)
!2852 = !DILocation(line: 1822, column: 19, scope: !2847)
!2853 = !DILocation(line: 1821, column: 47, scope: !2847)
!2854 = !DILocation(line: 1821, column: 2, scope: !2847)
!2855 = distinct !{!2855, !2848, !2856}
!2856 = !DILocation(line: 1822, column: 25, scope: !2840)
!2857 = !DILocation(line: 1823, column: 2, scope: !2743)
!2858 = !DILocation(line: 1823, column: 9, scope: !2743)
!2859 = !DILocation(line: 1823, column: 18, scope: !2743)
!2860 = !DILocation(line: 1824, column: 10, scope: !2743)
!2861 = !DILocation(line: 1824, column: 2, scope: !2743)
!2862 = !DILocation(line: 1825, column: 1, scope: !2743)
!2863 = !DILocalVariable(name: "fts", arg: 1, scope: !252, file: !251, line: 50, type: !255)
!2864 = !DILocation(line: 50, column: 17, scope: !252)
!2865 = !DILocation(line: 52, column: 7, scope: !2866)
!2866 = distinct !DILexicalBlock(scope: !252, file: !251, line: 52, column: 7)
!2867 = !DILocation(line: 52, column: 12, scope: !2866)
!2868 = !DILocation(line: 52, column: 24, scope: !2866)
!2869 = !DILocation(line: 52, column: 7, scope: !252)
!2870 = !DILocation(line: 55, column: 27, scope: !2871)
!2871 = distinct !DILexicalBlock(scope: !2866, file: !251, line: 53, column: 5)
!2872 = !DILocation(line: 55, column: 7, scope: !2871)
!2873 = !DILocation(line: 55, column: 12, scope: !2871)
!2874 = !DILocation(line: 55, column: 22, scope: !2871)
!2875 = !DILocation(line: 55, column: 25, scope: !2871)
!2876 = !DILocation(line: 57, column: 13, scope: !2877)
!2877 = distinct !DILexicalBlock(scope: !2871, file: !251, line: 57, column: 11)
!2878 = !DILocation(line: 57, column: 18, scope: !2877)
!2879 = !DILocation(line: 57, column: 28, scope: !2877)
!2880 = !DILocation(line: 57, column: 11, scope: !2871)
!2881 = !DILocation(line: 58, column: 2, scope: !2877)
!2882 = !DILocation(line: 59, column: 5, scope: !2871)
!2883 = !DILocation(line: 62, column: 30, scope: !2884)
!2884 = distinct !DILexicalBlock(scope: !2866, file: !251, line: 61, column: 5)
!2885 = !DILocation(line: 62, column: 7, scope: !2884)
!2886 = !DILocation(line: 62, column: 12, scope: !2884)
!2887 = !DILocation(line: 62, column: 22, scope: !2884)
!2888 = !DILocation(line: 62, column: 28, scope: !2884)
!2889 = !DILocation(line: 63, column: 13, scope: !2890)
!2890 = distinct !DILexicalBlock(scope: !2884, file: !251, line: 63, column: 11)
!2891 = !DILocation(line: 63, column: 18, scope: !2890)
!2892 = !DILocation(line: 63, column: 28, scope: !2890)
!2893 = !DILocation(line: 63, column: 11, scope: !2884)
!2894 = !DILocation(line: 64, column: 2, scope: !2890)
!2895 = !DILocation(line: 65, column: 25, scope: !2884)
!2896 = !DILocation(line: 65, column: 30, scope: !2884)
!2897 = !DILocation(line: 65, column: 40, scope: !2884)
!2898 = !DILocation(line: 65, column: 7, scope: !2884)
!2899 = !DILocation(line: 68, column: 3, scope: !252)
!2900 = !DILocation(line: 69, column: 1, scope: !252)
!2901 = distinct !DISubprogram(name: "diropen", scope: !244, file: !244, line: 355, type: !2902, isLocal: true, isDefinition: true, scopeLine: 356, flags: DIFlagPrototyped, isOptimized: false, unit: !243, variables: !25)
!2902 = !DISubroutineType(types: !2903)
!2903 = !{!23, !2904, !12}
!2904 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2905, size: 64)
!2905 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !256)
!2906 = !DILocalVariable(name: "sp", arg: 1, scope: !2901, file: !244, line: 355, type: !2904)
!2907 = !DILocation(line: 355, column: 21, scope: !2901)
!2908 = !DILocalVariable(name: "dir", arg: 2, scope: !2901, file: !244, line: 355, type: !12)
!2909 = !DILocation(line: 355, column: 37, scope: !2901)
!2910 = !DILocalVariable(name: "open_flags", scope: !2901, file: !244, line: 357, type: !23)
!2911 = !DILocation(line: 357, column: 7, scope: !2901)
!2912 = !DILocation(line: 358, column: 10, scope: !2901)
!2913 = !DILocation(line: 358, column: 7, scope: !2901)
!2914 = !DILocalVariable(name: "fd", scope: !2901, file: !244, line: 360, type: !23)
!2915 = !DILocation(line: 360, column: 7, scope: !2901)
!2916 = !DILocation(line: 360, column: 13, scope: !2901)
!2917 = !DILocation(line: 361, column: 23, scope: !2901)
!2918 = !DILocation(line: 361, column: 27, scope: !2901)
!2919 = !DILocation(line: 361, column: 39, scope: !2901)
!2920 = !DILocation(line: 361, column: 44, scope: !2901)
!2921 = !DILocation(line: 361, column: 15, scope: !2901)
!2922 = !DILocation(line: 362, column: 21, scope: !2901)
!2923 = !DILocation(line: 362, column: 26, scope: !2901)
!2924 = !DILocation(line: 362, column: 15, scope: !2901)
!2925 = !DILocation(line: 363, column: 12, scope: !2926)
!2926 = distinct !DILexicalBlock(scope: !2901, file: !244, line: 363, column: 7)
!2927 = !DILocation(line: 363, column: 9, scope: !2926)
!2928 = !DILocation(line: 363, column: 7, scope: !2901)
!2929 = !DILocation(line: 364, column: 23, scope: !2926)
!2930 = !DILocation(line: 364, column: 5, scope: !2926)
!2931 = !DILocation(line: 365, column: 10, scope: !2901)
!2932 = !DILocation(line: 365, column: 3, scope: !2901)
!2933 = distinct !DISubprogram(name: "fts_lfree", scope: !244, file: !244, line: 1859, type: !2934, isLocal: true, isDefinition: true, scopeLine: 1860, flags: DIFlagPrototyped, isOptimized: false, unit: !243, variables: !25)
!2934 = !DISubroutineType(types: !2935)
!2935 = !{null, !2190}
!2936 = !DILocalVariable(name: "head", arg: 1, scope: !2933, file: !244, line: 1859, type: !2190)
!2937 = !DILocation(line: 1859, column: 29, scope: !2933)
!2938 = !DILocalVariable(name: "p", scope: !2933, file: !244, line: 1861, type: !2190)
!2939 = !DILocation(line: 1861, column: 19, scope: !2933)
!2940 = !DILocation(line: 1864, column: 2, scope: !2933)
!2941 = !DILocation(line: 1864, column: 14, scope: !2933)
!2942 = !DILocation(line: 1864, column: 12, scope: !2933)
!2943 = !DILocation(line: 1865, column: 10, scope: !2944)
!2944 = distinct !DILexicalBlock(scope: !2933, file: !244, line: 1864, column: 21)
!2945 = !DILocation(line: 1865, column: 16, scope: !2944)
!2946 = !DILocation(line: 1865, column: 8, scope: !2944)
!2947 = !DILocation(line: 1866, column: 8, scope: !2944)
!2948 = !DILocation(line: 1866, column: 3, scope: !2944)
!2949 = distinct !{!2949, !2940, !2950}
!2950 = !DILocation(line: 1867, column: 2, scope: !2933)
!2951 = !DILocation(line: 1868, column: 1, scope: !2933)
!2952 = distinct !DISubprogram(name: "AD_hash", scope: !251, file: !251, line: 41, type: !2953, isLocal: true, isDefinition: true, scopeLine: 42, flags: DIFlagPrototyped, isOptimized: false, unit: !243, variables: !25)
!2953 = !DISubroutineType(types: !2954)
!2954 = !{!91, !404, !91}
!2955 = !DILocalVariable(name: "x", arg: 1, scope: !2952, file: !251, line: 41, type: !404)
!2956 = !DILocation(line: 41, column: 22, scope: !2952)
!2957 = !DILocalVariable(name: "table_size", arg: 2, scope: !2952, file: !251, line: 41, type: !91)
!2958 = !DILocation(line: 41, column: 32, scope: !2952)
!2959 = !DILocalVariable(name: "ax", scope: !2952, file: !251, line: 43, type: !2960)
!2960 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2961, size: 64)
!2961 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2962)
!2962 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Active_dir", file: !251, line: 24, size: 192, elements: !2963)
!2963 = !{!2964, !2965, !2966}
!2964 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2962, file: !251, line: 26, baseType: !329, size: 64)
!2965 = !DIDerivedType(tag: DW_TAG_member, name: "ino", scope: !2962, file: !251, line: 27, baseType: !360, size: 64, offset: 64)
!2966 = !DIDerivedType(tag: DW_TAG_member, name: "fts_ent", scope: !2962, file: !251, line: 28, baseType: !2190, size: 64, offset: 128)
!2967 = !DILocation(line: 43, column: 28, scope: !2952)
!2968 = !DILocation(line: 43, column: 33, scope: !2952)
!2969 = !DILocation(line: 44, column: 22, scope: !2952)
!2970 = !DILocation(line: 44, column: 26, scope: !2952)
!2971 = !DILocation(line: 44, column: 32, scope: !2952)
!2972 = !DILocation(line: 44, column: 30, scope: !2952)
!2973 = !DILocation(line: 44, column: 3, scope: !2952)
!2974 = distinct !DISubprogram(name: "AD_compare", scope: !251, file: !251, line: 32, type: !2975, isLocal: true, isDefinition: true, scopeLine: 33, flags: DIFlagPrototyped, isOptimized: false, unit: !243, variables: !25)
!2975 = !DISubroutineType(types: !2976)
!2976 = !{!79, !404, !404}
!2977 = !DILocalVariable(name: "x", arg: 1, scope: !2974, file: !251, line: 32, type: !404)
!2978 = !DILocation(line: 32, column: 25, scope: !2974)
!2979 = !DILocalVariable(name: "y", arg: 2, scope: !2974, file: !251, line: 32, type: !404)
!2980 = !DILocation(line: 32, column: 40, scope: !2974)
!2981 = !DILocalVariable(name: "ax", scope: !2974, file: !251, line: 34, type: !2960)
!2982 = !DILocation(line: 34, column: 28, scope: !2974)
!2983 = !DILocation(line: 34, column: 33, scope: !2974)
!2984 = !DILocalVariable(name: "ay", scope: !2974, file: !251, line: 35, type: !2960)
!2985 = !DILocation(line: 35, column: 28, scope: !2974)
!2986 = !DILocation(line: 35, column: 33, scope: !2974)
!2987 = !DILocation(line: 36, column: 10, scope: !2974)
!2988 = !DILocation(line: 36, column: 14, scope: !2974)
!2989 = !DILocation(line: 36, column: 21, scope: !2974)
!2990 = !DILocation(line: 36, column: 25, scope: !2974)
!2991 = !DILocation(line: 36, column: 18, scope: !2974)
!2992 = !DILocation(line: 37, column: 7, scope: !2974)
!2993 = !DILocation(line: 37, column: 10, scope: !2974)
!2994 = !DILocation(line: 37, column: 14, scope: !2974)
!2995 = !DILocation(line: 37, column: 21, scope: !2974)
!2996 = !DILocation(line: 37, column: 25, scope: !2974)
!2997 = !DILocation(line: 37, column: 18, scope: !2974)
!2998 = !DILocation(line: 36, column: 3, scope: !2974)
!2999 = distinct !DISubprogram(name: "fts_compar", scope: !244, file: !244, line: 1765, type: !402, isLocal: true, isDefinition: true, scopeLine: 1766, flags: DIFlagPrototyped, isOptimized: false, unit: !243, variables: !25)
!3000 = !DILocalVariable(name: "a", arg: 1, scope: !2999, file: !244, line: 1765, type: !404)
!3001 = !DILocation(line: 1765, column: 25, scope: !2999)
!3002 = !DILocalVariable(name: "b", arg: 2, scope: !2999, file: !244, line: 1765, type: !404)
!3003 = !DILocation(line: 1765, column: 40, scope: !2999)
!3004 = !DILocalVariable(name: "pa", scope: !2999, file: !244, line: 1772, type: !406)
!3005 = !DILocation(line: 1772, column: 18, scope: !2999)
!3006 = !DILocation(line: 1772, column: 41, scope: !2999)
!3007 = !DILocation(line: 1772, column: 23, scope: !2999)
!3008 = !DILocalVariable(name: "pb", scope: !2999, file: !244, line: 1773, type: !406)
!3009 = !DILocation(line: 1773, column: 18, scope: !2999)
!3010 = !DILocation(line: 1773, column: 41, scope: !2999)
!3011 = !DILocation(line: 1773, column: 23, scope: !2999)
!3012 = !DILocation(line: 1774, column: 10, scope: !2999)
!3013 = !DILocation(line: 1774, column: 17, scope: !2999)
!3014 = !DILocation(line: 1774, column: 26, scope: !2999)
!3015 = !DILocation(line: 1774, column: 38, scope: !2999)
!3016 = !DILocation(line: 1774, column: 42, scope: !2999)
!3017 = !DILocation(line: 1774, column: 3, scope: !2999)
!3018 = distinct !DISubprogram(name: "fts_close", scope: !244, file: !244, line: 571, type: !3019, isLocal: false, isDefinition: true, scopeLine: 572, flags: DIFlagPrototyped, isOptimized: false, unit: !243, variables: !25)
!3019 = !DISubroutineType(types: !3020)
!3020 = !{!23, !255}
!3021 = !DILocalVariable(name: "sp", arg: 1, scope: !3018, file: !244, line: 571, type: !255)
!3022 = !DILocation(line: 571, column: 17, scope: !3018)
!3023 = !DILocalVariable(name: "freep", scope: !3018, file: !244, line: 573, type: !2190)
!3024 = !DILocation(line: 573, column: 19, scope: !3018)
!3025 = !DILocalVariable(name: "p", scope: !3018, file: !244, line: 573, type: !2190)
!3026 = !DILocation(line: 573, column: 27, scope: !3018)
!3027 = !DILocalVariable(name: "saved_errno", scope: !3018, file: !244, line: 574, type: !23)
!3028 = !DILocation(line: 574, column: 6, scope: !3018)
!3029 = !DILocation(line: 581, column: 6, scope: !3030)
!3030 = distinct !DILexicalBlock(scope: !3018, file: !244, line: 581, column: 6)
!3031 = !DILocation(line: 581, column: 10, scope: !3030)
!3032 = !DILocation(line: 581, column: 6, scope: !3018)
!3033 = !DILocation(line: 582, column: 12, scope: !3034)
!3034 = distinct !DILexicalBlock(scope: !3035, file: !244, line: 582, column: 3)
!3035 = distinct !DILexicalBlock(scope: !3030, file: !244, line: 581, column: 19)
!3036 = !DILocation(line: 582, column: 16, scope: !3034)
!3037 = !DILocation(line: 582, column: 10, scope: !3034)
!3038 = !DILocation(line: 582, column: 8, scope: !3034)
!3039 = !DILocation(line: 582, column: 25, scope: !3040)
!3040 = distinct !DILexicalBlock(scope: !3034, file: !244, line: 582, column: 3)
!3041 = !DILocation(line: 582, column: 28, scope: !3040)
!3042 = !DILocation(line: 582, column: 38, scope: !3040)
!3043 = !DILocation(line: 582, column: 3, scope: !3034)
!3044 = !DILocation(line: 583, column: 12, scope: !3045)
!3045 = distinct !DILexicalBlock(scope: !3040, file: !244, line: 582, column: 57)
!3046 = !DILocation(line: 583, column: 10, scope: !3045)
!3047 = !DILocation(line: 584, column: 8, scope: !3045)
!3048 = !DILocation(line: 584, column: 11, scope: !3045)
!3049 = !DILocation(line: 584, column: 20, scope: !3045)
!3050 = !DILocation(line: 584, column: 30, scope: !3045)
!3051 = !DILocation(line: 584, column: 33, scope: !3045)
!3052 = !DILocation(line: 584, column: 44, scope: !3045)
!3053 = !DILocation(line: 584, column: 47, scope: !3045)
!3054 = !DILocation(line: 584, column: 6, scope: !3045)
!3055 = !DILocation(line: 585, column: 9, scope: !3045)
!3056 = !DILocation(line: 585, column: 4, scope: !3045)
!3057 = !DILocation(line: 582, column: 3, scope: !3040)
!3058 = distinct !{!3058, !3043, !3059}
!3059 = !DILocation(line: 586, column: 3, scope: !3034)
!3060 = !DILocation(line: 587, column: 8, scope: !3035)
!3061 = !DILocation(line: 587, column: 3, scope: !3035)
!3062 = !DILocation(line: 588, column: 2, scope: !3035)
!3063 = !DILocation(line: 591, column: 6, scope: !3064)
!3064 = distinct !DILexicalBlock(scope: !3018, file: !244, line: 591, column: 6)
!3065 = !DILocation(line: 591, column: 10, scope: !3064)
!3066 = !DILocation(line: 591, column: 6, scope: !3018)
!3067 = !DILocation(line: 592, column: 13, scope: !3064)
!3068 = !DILocation(line: 592, column: 17, scope: !3064)
!3069 = !DILocation(line: 592, column: 3, scope: !3064)
!3070 = !DILocation(line: 593, column: 7, scope: !3018)
!3071 = !DILocation(line: 593, column: 11, scope: !3018)
!3072 = !DILocation(line: 593, column: 2, scope: !3018)
!3073 = !DILocation(line: 594, column: 7, scope: !3018)
!3074 = !DILocation(line: 594, column: 11, scope: !3018)
!3075 = !DILocation(line: 594, column: 2, scope: !3018)
!3076 = !DILocation(line: 596, column: 6, scope: !3077)
!3077 = distinct !DILexicalBlock(scope: !3018, file: !244, line: 596, column: 6)
!3078 = !DILocation(line: 596, column: 6, scope: !3018)
!3079 = !DILocation(line: 598, column: 15, scope: !3080)
!3080 = distinct !DILexicalBlock(scope: !3081, file: !244, line: 598, column: 10)
!3081 = distinct !DILexicalBlock(scope: !3077, file: !244, line: 597, column: 4)
!3082 = !DILocation(line: 598, column: 19, scope: !3080)
!3083 = !DILocation(line: 598, column: 12, scope: !3080)
!3084 = !DILocation(line: 598, column: 10, scope: !3081)
!3085 = !DILocation(line: 599, column: 19, scope: !3086)
!3086 = distinct !DILexicalBlock(scope: !3080, file: !244, line: 599, column: 12)
!3087 = !DILocation(line: 599, column: 23, scope: !3086)
!3088 = !DILocation(line: 599, column: 12, scope: !3086)
!3089 = !DILocation(line: 599, column: 12, scope: !3080)
!3090 = !DILocation(line: 600, column: 17, scope: !3086)
!3091 = !DILocation(line: 600, column: 15, scope: !3086)
!3092 = !DILocation(line: 600, column: 3, scope: !3086)
!3093 = !DILocation(line: 599, column: 33, scope: !3086)
!3094 = !DILocation(line: 601, column: 4, scope: !3081)
!3095 = !DILocation(line: 602, column: 12, scope: !3096)
!3096 = distinct !DILexicalBlock(scope: !3077, file: !244, line: 602, column: 11)
!3097 = !DILocation(line: 602, column: 11, scope: !3077)
!3098 = !DILocation(line: 605, column: 17, scope: !3099)
!3099 = distinct !DILexicalBlock(scope: !3100, file: !244, line: 605, column: 10)
!3100 = distinct !DILexicalBlock(scope: !3096, file: !244, line: 603, column: 4)
!3101 = !DILocation(line: 605, column: 21, scope: !3099)
!3102 = !DILocation(line: 605, column: 10, scope: !3099)
!3103 = !DILocation(line: 605, column: 10, scope: !3100)
!3104 = !DILocation(line: 606, column: 22, scope: !3099)
!3105 = !DILocation(line: 606, column: 20, scope: !3099)
!3106 = !DILocation(line: 606, column: 8, scope: !3099)
!3107 = !DILocation(line: 610, column: 17, scope: !3108)
!3108 = distinct !DILexicalBlock(scope: !3100, file: !244, line: 610, column: 10)
!3109 = !DILocation(line: 610, column: 21, scope: !3108)
!3110 = !DILocation(line: 610, column: 10, scope: !3108)
!3111 = !DILocation(line: 610, column: 10, scope: !3100)
!3112 = !DILocation(line: 611, column: 12, scope: !3113)
!3113 = distinct !DILexicalBlock(scope: !3108, file: !244, line: 611, column: 12)
!3114 = !DILocation(line: 611, column: 24, scope: !3113)
!3115 = !DILocation(line: 611, column: 12, scope: !3108)
!3116 = !DILocation(line: 612, column: 17, scope: !3113)
!3117 = !DILocation(line: 612, column: 15, scope: !3113)
!3118 = !DILocation(line: 612, column: 3, scope: !3113)
!3119 = !DILocation(line: 611, column: 27, scope: !3113)
!3120 = !DILocation(line: 613, column: 4, scope: !3100)
!3121 = !DILocation(line: 615, column: 18, scope: !3018)
!3122 = !DILocation(line: 615, column: 22, scope: !3018)
!3123 = !DILocation(line: 615, column: 2, scope: !3018)
!3124 = !DILocation(line: 618, column: 6, scope: !3125)
!3125 = distinct !DILexicalBlock(scope: !3018, file: !244, line: 618, column: 6)
!3126 = !DILocation(line: 618, column: 10, scope: !3125)
!3127 = !DILocation(line: 618, column: 6, scope: !3018)
!3128 = !DILocation(line: 619, column: 15, scope: !3125)
!3129 = !DILocation(line: 619, column: 19, scope: !3125)
!3130 = !DILocation(line: 619, column: 4, scope: !3125)
!3131 = !DILocation(line: 622, column: 12, scope: !3018)
!3132 = !DILocation(line: 622, column: 2, scope: !3018)
!3133 = !DILocation(line: 625, column: 7, scope: !3018)
!3134 = !DILocation(line: 625, column: 2, scope: !3018)
!3135 = !DILocation(line: 628, column: 6, scope: !3136)
!3136 = distinct !DILexicalBlock(scope: !3018, file: !244, line: 628, column: 6)
!3137 = !DILocation(line: 628, column: 6, scope: !3018)
!3138 = !DILocation(line: 629, column: 3, scope: !3139)
!3139 = distinct !DILexicalBlock(scope: !3136, file: !244, line: 628, column: 19)
!3140 = !DILocation(line: 630, column: 3, scope: !3139)
!3141 = !DILocation(line: 633, column: 2, scope: !3018)
!3142 = !DILocation(line: 634, column: 1, scope: !3018)
!3143 = distinct !DISubprogram(name: "fd_ring_clear", scope: !244, file: !244, line: 274, type: !3144, isLocal: true, isDefinition: true, scopeLine: 275, flags: DIFlagPrototyped, isOptimized: false, unit: !243, variables: !25)
!3144 = !DISubroutineType(types: !3145)
!3145 = !{null, !3146}
!3146 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !368, size: 64)
!3147 = !DILocalVariable(name: "fd_ring", arg: 1, scope: !3143, file: !244, line: 274, type: !3146)
!3148 = !DILocation(line: 274, column: 24, scope: !3143)
!3149 = !DILocation(line: 276, column: 3, scope: !3143)
!3150 = !DILocation(line: 276, column: 27, scope: !3143)
!3151 = !DILocation(line: 276, column: 13, scope: !3143)
!3152 = !DILocation(line: 276, column: 11, scope: !3143)
!3153 = !DILocalVariable(name: "fd", scope: !3154, file: !244, line: 278, type: !23)
!3154 = distinct !DILexicalBlock(scope: !3143, file: !244, line: 277, column: 5)
!3155 = !DILocation(line: 278, column: 11, scope: !3154)
!3156 = !DILocation(line: 278, column: 28, scope: !3154)
!3157 = !DILocation(line: 278, column: 16, scope: !3154)
!3158 = !DILocation(line: 279, column: 16, scope: !3159)
!3159 = distinct !DILexicalBlock(scope: !3154, file: !244, line: 279, column: 11)
!3160 = !DILocation(line: 279, column: 13, scope: !3159)
!3161 = !DILocation(line: 279, column: 11, scope: !3154)
!3162 = !DILocation(line: 280, column: 9, scope: !3159)
!3163 = !DILocation(line: 280, column: 2, scope: !3159)
!3164 = distinct !{!3164, !3149, !3165}
!3165 = !DILocation(line: 281, column: 5, scope: !3143)
!3166 = !DILocation(line: 282, column: 1, scope: !3143)
!3167 = distinct !DISubprogram(name: "free_dir", scope: !251, file: !251, line: 151, type: !3168, isLocal: true, isDefinition: true, scopeLine: 152, flags: DIFlagPrototyped, isOptimized: false, unit: !243, variables: !25)
!3168 = !DISubroutineType(types: !3169)
!3169 = !{null, !255}
!3170 = !DILocalVariable(name: "sp", arg: 1, scope: !3167, file: !251, line: 151, type: !255)
!3171 = !DILocation(line: 151, column: 16, scope: !3167)
!3172 = !DILocation(line: 153, column: 7, scope: !3173)
!3173 = distinct !DILexicalBlock(scope: !3167, file: !251, line: 153, column: 7)
!3174 = !DILocation(line: 153, column: 11, scope: !3173)
!3175 = !DILocation(line: 153, column: 23, scope: !3173)
!3176 = !DILocation(line: 153, column: 7, scope: !3167)
!3177 = !DILocation(line: 155, column: 11, scope: !3178)
!3178 = distinct !DILexicalBlock(scope: !3179, file: !251, line: 155, column: 11)
!3179 = distinct !DILexicalBlock(scope: !3173, file: !251, line: 154, column: 5)
!3180 = !DILocation(line: 155, column: 15, scope: !3178)
!3181 = !DILocation(line: 155, column: 25, scope: !3178)
!3182 = !DILocation(line: 155, column: 11, scope: !3179)
!3183 = !DILocation(line: 156, column: 13, scope: !3178)
!3184 = !DILocation(line: 156, column: 17, scope: !3178)
!3185 = !DILocation(line: 156, column: 27, scope: !3178)
!3186 = !DILocation(line: 156, column: 2, scope: !3178)
!3187 = !DILocation(line: 157, column: 5, scope: !3179)
!3188 = !DILocation(line: 159, column: 11, scope: !3173)
!3189 = !DILocation(line: 159, column: 15, scope: !3173)
!3190 = !DILocation(line: 159, column: 25, scope: !3173)
!3191 = !DILocation(line: 159, column: 5, scope: !3173)
!3192 = !DILocation(line: 160, column: 1, scope: !3167)
!3193 = distinct !DISubprogram(name: "fts_read", scope: !244, file: !244, line: 813, type: !3194, isLocal: false, isDefinition: true, scopeLine: 814, flags: DIFlagPrototyped, isOptimized: false, unit: !243, variables: !25)
!3194 = !DISubroutineType(types: !3195)
!3195 = !{!2190, !255}
!3196 = !DILocalVariable(name: "sp", arg: 1, scope: !3193, file: !244, line: 813, type: !255)
!3197 = !DILocation(line: 813, column: 25, scope: !3193)
!3198 = !DILocalVariable(name: "p", scope: !3193, file: !244, line: 815, type: !2190)
!3199 = !DILocation(line: 815, column: 19, scope: !3193)
!3200 = !DILocalVariable(name: "tmp", scope: !3193, file: !244, line: 815, type: !2190)
!3201 = !DILocation(line: 815, column: 23, scope: !3193)
!3202 = !DILocalVariable(name: "instr", scope: !3193, file: !244, line: 816, type: !143)
!3203 = !DILocation(line: 816, column: 30, scope: !3193)
!3204 = !DILocalVariable(name: "t", scope: !3193, file: !244, line: 817, type: !15)
!3205 = !DILocation(line: 817, column: 17, scope: !3193)
!3206 = !DILocation(line: 820, column: 6, scope: !3207)
!3207 = distinct !DILexicalBlock(scope: !3193, file: !244, line: 820, column: 6)
!3208 = !DILocation(line: 820, column: 10, scope: !3207)
!3209 = !DILocation(line: 820, column: 18, scope: !3207)
!3210 = !DILocation(line: 820, column: 26, scope: !3207)
!3211 = !DILocation(line: 820, column: 29, scope: !3207)
!3212 = !DILocation(line: 820, column: 6, scope: !3193)
!3213 = !DILocation(line: 821, column: 3, scope: !3207)
!3214 = !DILocation(line: 824, column: 6, scope: !3193)
!3215 = !DILocation(line: 824, column: 10, scope: !3193)
!3216 = !DILocation(line: 824, column: 4, scope: !3193)
!3217 = !DILocation(line: 827, column: 10, scope: !3193)
!3218 = !DILocation(line: 827, column: 13, scope: !3193)
!3219 = !DILocation(line: 827, column: 8, scope: !3193)
!3220 = !DILocation(line: 828, column: 2, scope: !3193)
!3221 = !DILocation(line: 828, column: 5, scope: !3193)
!3222 = !DILocation(line: 828, column: 15, scope: !3193)
!3223 = !DILocation(line: 831, column: 6, scope: !3224)
!3224 = distinct !DILexicalBlock(scope: !3193, file: !244, line: 831, column: 6)
!3225 = !DILocation(line: 831, column: 12, scope: !3224)
!3226 = !DILocation(line: 831, column: 6, scope: !3193)
!3227 = !DILocation(line: 832, column: 26, scope: !3228)
!3228 = distinct !DILexicalBlock(scope: !3224, file: !244, line: 831, column: 26)
!3229 = !DILocation(line: 832, column: 30, scope: !3228)
!3230 = !DILocation(line: 832, column: 17, scope: !3228)
!3231 = !DILocation(line: 832, column: 3, scope: !3228)
!3232 = !DILocation(line: 832, column: 6, scope: !3228)
!3233 = !DILocation(line: 832, column: 15, scope: !3228)
!3234 = !DILocation(line: 833, column: 11, scope: !3228)
!3235 = !DILocation(line: 833, column: 3, scope: !3228)
!3236 = !DILocation(line: 844, column: 6, scope: !3237)
!3237 = distinct !DILexicalBlock(scope: !3193, file: !244, line: 844, column: 6)
!3238 = !DILocation(line: 844, column: 12, scope: !3237)
!3239 = !DILocation(line: 844, column: 26, scope: !3237)
!3240 = !DILocation(line: 845, column: 7, scope: !3237)
!3241 = !DILocation(line: 845, column: 10, scope: !3237)
!3242 = !DILocation(line: 845, column: 19, scope: !3237)
!3243 = !DILocation(line: 845, column: 29, scope: !3237)
!3244 = !DILocation(line: 845, column: 32, scope: !3237)
!3245 = !DILocation(line: 845, column: 35, scope: !3237)
!3246 = !DILocation(line: 845, column: 44, scope: !3237)
!3247 = !DILocation(line: 844, column: 6, scope: !3193)
!3248 = !DILocation(line: 846, column: 26, scope: !3249)
!3249 = distinct !DILexicalBlock(scope: !3237, file: !244, line: 845, column: 60)
!3250 = !DILocation(line: 846, column: 30, scope: !3249)
!3251 = !DILocation(line: 846, column: 17, scope: !3249)
!3252 = !DILocation(line: 846, column: 3, scope: !3249)
!3253 = !DILocation(line: 846, column: 6, scope: !3249)
!3254 = !DILocation(line: 846, column: 15, scope: !3249)
!3255 = !DILocation(line: 847, column: 7, scope: !3256)
!3256 = distinct !DILexicalBlock(scope: !3249, file: !244, line: 847, column: 7)
!3257 = !DILocation(line: 847, column: 10, scope: !3256)
!3258 = !DILocation(line: 847, column: 19, scope: !3256)
!3259 = !DILocation(line: 847, column: 28, scope: !3256)
!3260 = !DILocation(line: 847, column: 32, scope: !3256)
!3261 = !DILocation(line: 847, column: 7, scope: !3249)
!3262 = !DILocation(line: 848, column: 33, scope: !3263)
!3263 = distinct !DILexicalBlock(scope: !3264, file: !244, line: 848, column: 8)
!3264 = distinct !DILexicalBlock(scope: !3256, file: !244, line: 847, column: 52)
!3265 = !DILocation(line: 848, column: 24, scope: !3263)
!3266 = !DILocation(line: 848, column: 9, scope: !3263)
!3267 = !DILocation(line: 848, column: 12, scope: !3263)
!3268 = !DILocation(line: 848, column: 22, scope: !3263)
!3269 = !DILocation(line: 848, column: 43, scope: !3263)
!3270 = !DILocation(line: 848, column: 8, scope: !3264)
!3271 = !DILocation(line: 849, column: 20, scope: !3272)
!3272 = distinct !DILexicalBlock(scope: !3263, file: !244, line: 848, column: 48)
!3273 = !DILocation(line: 849, column: 5, scope: !3272)
!3274 = !DILocation(line: 849, column: 8, scope: !3272)
!3275 = !DILocation(line: 849, column: 18, scope: !3272)
!3276 = !DILocation(line: 850, column: 5, scope: !3272)
!3277 = !DILocation(line: 850, column: 8, scope: !3272)
!3278 = !DILocation(line: 850, column: 17, scope: !3272)
!3279 = !DILocation(line: 851, column: 4, scope: !3272)
!3280 = !DILocation(line: 852, column: 5, scope: !3263)
!3281 = !DILocation(line: 852, column: 8, scope: !3263)
!3282 = !DILocation(line: 852, column: 18, scope: !3263)
!3283 = !DILocation(line: 853, column: 3, scope: !3264)
!3284 = !DILocation(line: 854, column: 3, scope: !3249)
!3285 = !DILocation(line: 858, column: 6, scope: !3286)
!3286 = distinct !DILexicalBlock(scope: !3193, file: !244, line: 858, column: 6)
!3287 = !DILocation(line: 858, column: 9, scope: !3286)
!3288 = !DILocation(line: 858, column: 18, scope: !3286)
!3289 = !DILocation(line: 858, column: 6, scope: !3193)
!3290 = !DILocation(line: 860, column: 7, scope: !3291)
!3291 = distinct !DILexicalBlock(scope: !3292, file: !244, line: 860, column: 7)
!3292 = distinct !DILexicalBlock(scope: !3286, file: !244, line: 858, column: 28)
!3293 = !DILocation(line: 860, column: 13, scope: !3291)
!3294 = !DILocation(line: 860, column: 25, scope: !3291)
!3295 = !DILocation(line: 861, column: 8, scope: !3291)
!3296 = !DILocation(line: 861, column: 24, scope: !3291)
!3297 = !DILocation(line: 861, column: 27, scope: !3291)
!3298 = !DILocation(line: 861, column: 30, scope: !3291)
!3299 = !DILocation(line: 861, column: 41, scope: !3291)
!3300 = !DILocation(line: 861, column: 51, scope: !3291)
!3301 = !DILocation(line: 861, column: 55, scope: !3291)
!3302 = !DILocation(line: 861, column: 48, scope: !3291)
!3303 = !DILocation(line: 860, column: 7, scope: !3292)
!3304 = !DILocation(line: 862, column: 8, scope: !3305)
!3305 = distinct !DILexicalBlock(scope: !3306, file: !244, line: 862, column: 8)
!3306 = distinct !DILexicalBlock(scope: !3291, file: !244, line: 861, column: 65)
!3307 = !DILocation(line: 862, column: 11, scope: !3305)
!3308 = !DILocation(line: 862, column: 21, scope: !3305)
!3309 = !DILocation(line: 862, column: 8, scope: !3306)
!3310 = !DILocation(line: 863, column: 17, scope: !3305)
!3311 = !DILocation(line: 863, column: 20, scope: !3305)
!3312 = !DILocation(line: 863, column: 11, scope: !3305)
!3313 = !DILocation(line: 863, column: 5, scope: !3305)
!3314 = !DILocation(line: 864, column: 8, scope: !3315)
!3315 = distinct !DILexicalBlock(scope: !3306, file: !244, line: 864, column: 8)
!3316 = !DILocation(line: 864, column: 12, scope: !3315)
!3317 = !DILocation(line: 864, column: 8, scope: !3306)
!3318 = !DILocation(line: 865, column: 15, scope: !3319)
!3319 = distinct !DILexicalBlock(scope: !3315, file: !244, line: 864, column: 23)
!3320 = !DILocation(line: 865, column: 19, scope: !3319)
!3321 = !DILocation(line: 865, column: 5, scope: !3319)
!3322 = !DILocation(line: 866, column: 5, scope: !3319)
!3323 = !DILocation(line: 866, column: 9, scope: !3319)
!3324 = !DILocation(line: 866, column: 19, scope: !3319)
!3325 = !DILocation(line: 867, column: 4, scope: !3319)
!3326 = !DILocation(line: 868, column: 4, scope: !3306)
!3327 = !DILocation(line: 868, column: 7, scope: !3306)
!3328 = !DILocation(line: 868, column: 16, scope: !3306)
!3329 = !DILocation(line: 869, column: 4, scope: !3306)
!3330 = distinct !{!3330, !3329, !3329}
!3331 = !DILocation(line: 869, column: 4, scope: !3332)
!3332 = distinct !DILexicalBlock(scope: !3306, file: !244, line: 869, column: 4)
!3333 = !DILocation(line: 870, column: 12, scope: !3306)
!3334 = !DILocation(line: 870, column: 4, scope: !3306)
!3335 = !DILocation(line: 874, column: 7, scope: !3336)
!3336 = distinct !DILexicalBlock(scope: !3292, file: !244, line: 874, column: 7)
!3337 = !DILocation(line: 874, column: 11, scope: !3336)
!3338 = !DILocation(line: 874, column: 21, scope: !3336)
!3339 = !DILocation(line: 874, column: 29, scope: !3336)
!3340 = !DILocation(line: 874, column: 32, scope: !3336)
!3341 = !DILocation(line: 874, column: 7, scope: !3292)
!3342 = !DILocation(line: 875, column: 4, scope: !3343)
!3343 = distinct !DILexicalBlock(scope: !3336, file: !244, line: 874, column: 53)
!3344 = !DILocation(line: 876, column: 14, scope: !3343)
!3345 = !DILocation(line: 876, column: 18, scope: !3343)
!3346 = !DILocation(line: 876, column: 4, scope: !3343)
!3347 = !DILocation(line: 877, column: 4, scope: !3343)
!3348 = !DILocation(line: 877, column: 8, scope: !3343)
!3349 = !DILocation(line: 877, column: 18, scope: !3343)
!3350 = !DILocation(line: 878, column: 3, scope: !3343)
!3351 = !DILocation(line: 892, column: 7, scope: !3352)
!3352 = distinct !DILexicalBlock(scope: !3292, file: !244, line: 892, column: 7)
!3353 = !DILocation(line: 892, column: 11, scope: !3352)
!3354 = !DILocation(line: 892, column: 21, scope: !3352)
!3355 = !DILocation(line: 892, column: 7, scope: !3292)
!3356 = !DILocation(line: 893, column: 27, scope: !3357)
!3357 = distinct !DILexicalBlock(scope: !3358, file: !244, line: 893, column: 8)
!3358 = distinct !DILexicalBlock(scope: !3352, file: !244, line: 892, column: 30)
!3359 = !DILocation(line: 893, column: 31, scope: !3357)
!3360 = !DILocation(line: 893, column: 38, scope: !3357)
!3361 = !DILocation(line: 893, column: 41, scope: !3357)
!3362 = !DILocation(line: 893, column: 8, scope: !3357)
!3363 = !DILocation(line: 893, column: 8, scope: !3358)
!3364 = !DILocation(line: 894, column: 20, scope: !3365)
!3365 = distinct !DILexicalBlock(scope: !3357, file: !244, line: 893, column: 55)
!3366 = !DILocation(line: 894, column: 5, scope: !3365)
!3367 = !DILocation(line: 894, column: 8, scope: !3365)
!3368 = !DILocation(line: 894, column: 18, scope: !3365)
!3369 = !DILocation(line: 895, column: 5, scope: !3365)
!3370 = !DILocation(line: 895, column: 8, scope: !3365)
!3371 = !DILocation(line: 895, column: 18, scope: !3365)
!3372 = !DILocation(line: 896, column: 14, scope: !3373)
!3373 = distinct !DILexicalBlock(scope: !3365, file: !244, line: 896, column: 5)
!3374 = !DILocation(line: 896, column: 18, scope: !3373)
!3375 = !DILocation(line: 896, column: 12, scope: !3373)
!3376 = !DILocation(line: 896, column: 10, scope: !3373)
!3377 = !DILocation(line: 896, column: 29, scope: !3378)
!3378 = distinct !DILexicalBlock(scope: !3373, file: !244, line: 896, column: 5)
!3379 = !DILocation(line: 896, column: 31, scope: !3378)
!3380 = !DILocation(line: 896, column: 5, scope: !3373)
!3381 = !DILocation(line: 899, column: 10, scope: !3378)
!3382 = !DILocation(line: 899, column: 13, scope: !3378)
!3383 = !DILocation(line: 899, column: 25, scope: !3378)
!3384 = !DILocation(line: 898, column: 6, scope: !3378)
!3385 = !DILocation(line: 898, column: 9, scope: !3378)
!3386 = !DILocation(line: 898, column: 21, scope: !3378)
!3387 = !DILocation(line: 897, column: 14, scope: !3378)
!3388 = !DILocation(line: 897, column: 17, scope: !3378)
!3389 = !DILocation(line: 897, column: 12, scope: !3378)
!3390 = !DILocation(line: 896, column: 5, scope: !3378)
!3391 = distinct !{!3391, !3380, !3392}
!3392 = !DILocation(line: 899, column: 25, scope: !3373)
!3393 = !DILocation(line: 900, column: 4, scope: !3365)
!3394 = !DILocation(line: 901, column: 3, scope: !3358)
!3395 = !DILocation(line: 901, column: 41, scope: !3396)
!3396 = distinct !DILexicalBlock(scope: !3352, file: !244, line: 901, column: 14)
!3397 = !DILocation(line: 901, column: 31, scope: !3396)
!3398 = !DILocation(line: 901, column: 15, scope: !3396)
!3399 = !DILocation(line: 901, column: 19, scope: !3396)
!3400 = !DILocation(line: 901, column: 29, scope: !3396)
!3401 = !DILocation(line: 901, column: 53, scope: !3396)
!3402 = !DILocation(line: 901, column: 14, scope: !3352)
!3403 = !DILocation(line: 902, column: 8, scope: !3404)
!3404 = distinct !DILexicalBlock(scope: !3405, file: !244, line: 902, column: 8)
!3405 = distinct !DILexicalBlock(scope: !3396, file: !244, line: 901, column: 62)
!3406 = !DILocation(line: 902, column: 8, scope: !3405)
!3407 = !DILocation(line: 903, column: 5, scope: !3404)
!3408 = !DILocation(line: 907, column: 8, scope: !3409)
!3409 = distinct !DILexicalBlock(scope: !3405, file: !244, line: 907, column: 8)
!3410 = !DILocation(line: 907, column: 11, scope: !3409)
!3411 = !DILocation(line: 907, column: 21, scope: !3409)
!3412 = !DILocation(line: 907, column: 24, scope: !3409)
!3413 = !DILocation(line: 907, column: 27, scope: !3409)
!3414 = !DILocation(line: 907, column: 36, scope: !3409)
!3415 = !DILocation(line: 907, column: 8, scope: !3405)
!3416 = !DILocation(line: 908, column: 5, scope: !3409)
!3417 = !DILocation(line: 908, column: 8, scope: !3409)
!3418 = !DILocation(line: 908, column: 17, scope: !3409)
!3419 = !DILocation(line: 909, column: 4, scope: !3405)
!3420 = distinct !{!3420, !3419, !3419}
!3421 = !DILocation(line: 909, column: 4, scope: !3422)
!3422 = distinct !DILexicalBlock(scope: !3405, file: !244, line: 909, column: 4)
!3423 = !DILocation(line: 910, column: 12, scope: !3405)
!3424 = !DILocation(line: 910, column: 4, scope: !3405)
!3425 = !DILocation(line: 912, column: 7, scope: !3292)
!3426 = !DILocation(line: 912, column: 11, scope: !3292)
!3427 = !DILocation(line: 912, column: 5, scope: !3292)
!3428 = !DILocation(line: 913, column: 3, scope: !3292)
!3429 = !DILocation(line: 913, column: 7, scope: !3292)
!3430 = !DILocation(line: 913, column: 17, scope: !3292)
!3431 = !DILocation(line: 914, column: 3, scope: !3292)
!3432 = !DILocation(line: 858, column: 21, scope: !3286)
!3433 = !DILocation(line: 918, column: 13, scope: !3193)
!3434 = !DILocation(line: 918, column: 11, scope: !3193)
!3435 = !DILocation(line: 919, column: 11, scope: !3436)
!3436 = distinct !DILexicalBlock(scope: !3193, file: !244, line: 919, column: 6)
!3437 = !DILocation(line: 919, column: 14, scope: !3436)
!3438 = !DILocation(line: 919, column: 9, scope: !3436)
!3439 = !DILocation(line: 919, column: 24, scope: !3436)
!3440 = !DILocation(line: 919, column: 6, scope: !3193)
!3441 = !DILocation(line: 920, column: 17, scope: !3442)
!3442 = distinct !DILexicalBlock(scope: !3436, file: !244, line: 919, column: 33)
!3443 = !DILocation(line: 920, column: 3, scope: !3442)
!3444 = !DILocation(line: 920, column: 7, scope: !3442)
!3445 = !DILocation(line: 920, column: 15, scope: !3442)
!3446 = !DILocation(line: 921, column: 8, scope: !3442)
!3447 = !DILocation(line: 921, column: 3, scope: !3442)
!3448 = !DILocation(line: 928, column: 7, scope: !3449)
!3449 = distinct !DILexicalBlock(scope: !3442, file: !244, line: 928, column: 7)
!3450 = !DILocation(line: 928, column: 10, scope: !3449)
!3451 = !DILocation(line: 928, column: 20, scope: !3449)
!3452 = !DILocation(line: 928, column: 7, scope: !3442)
!3453 = !DILocation(line: 929, column: 8, scope: !3454)
!3454 = distinct !DILexicalBlock(scope: !3455, file: !244, line: 929, column: 8)
!3455 = distinct !DILexicalBlock(scope: !3449, file: !244, line: 928, column: 38)
!3456 = !DILocation(line: 929, column: 8, scope: !3455)
!3457 = !DILocation(line: 930, column: 5, scope: !3458)
!3458 = distinct !DILexicalBlock(scope: !3454, file: !244, line: 929, column: 33)
!3459 = !DILocation(line: 931, column: 5, scope: !3458)
!3460 = !DILocation(line: 933, column: 13, scope: !3455)
!3461 = !DILocation(line: 933, column: 4, scope: !3455)
!3462 = !DILocation(line: 934, column: 13, scope: !3455)
!3463 = !DILocation(line: 934, column: 17, scope: !3455)
!3464 = !DILocation(line: 934, column: 4, scope: !3455)
!3465 = !DILocation(line: 935, column: 14, scope: !3455)
!3466 = !DILocation(line: 935, column: 4, scope: !3455)
!3467 = !DILocation(line: 936, column: 4, scope: !3455)
!3468 = !DILocation(line: 944, column: 7, scope: !3469)
!3469 = distinct !DILexicalBlock(scope: !3442, file: !244, line: 944, column: 7)
!3470 = !DILocation(line: 944, column: 10, scope: !3469)
!3471 = !DILocation(line: 944, column: 20, scope: !3469)
!3472 = !DILocation(line: 944, column: 7, scope: !3442)
!3473 = !DILocation(line: 945, column: 4, scope: !3469)
!3474 = !DILocation(line: 946, column: 7, scope: !3475)
!3475 = distinct !DILexicalBlock(scope: !3442, file: !244, line: 946, column: 7)
!3476 = !DILocation(line: 946, column: 10, scope: !3475)
!3477 = !DILocation(line: 946, column: 20, scope: !3475)
!3478 = !DILocation(line: 946, column: 7, scope: !3442)
!3479 = !DILocation(line: 947, column: 27, scope: !3480)
!3480 = distinct !DILexicalBlock(scope: !3475, file: !244, line: 946, column: 35)
!3481 = !DILocation(line: 947, column: 31, scope: !3480)
!3482 = !DILocation(line: 947, column: 18, scope: !3480)
!3483 = !DILocation(line: 947, column: 4, scope: !3480)
!3484 = !DILocation(line: 947, column: 7, scope: !3480)
!3485 = !DILocation(line: 947, column: 16, scope: !3480)
!3486 = !DILocation(line: 948, column: 8, scope: !3487)
!3487 = distinct !DILexicalBlock(scope: !3480, file: !244, line: 948, column: 8)
!3488 = !DILocation(line: 948, column: 11, scope: !3487)
!3489 = !DILocation(line: 948, column: 20, scope: !3487)
!3490 = !DILocation(line: 948, column: 29, scope: !3487)
!3491 = !DILocation(line: 948, column: 33, scope: !3487)
!3492 = !DILocation(line: 948, column: 8, scope: !3480)
!3493 = !DILocation(line: 949, column: 34, scope: !3494)
!3494 = distinct !DILexicalBlock(scope: !3495, file: !244, line: 949, column: 9)
!3495 = distinct !DILexicalBlock(scope: !3487, file: !244, line: 948, column: 53)
!3496 = !DILocation(line: 949, column: 25, scope: !3494)
!3497 = !DILocation(line: 949, column: 10, scope: !3494)
!3498 = !DILocation(line: 949, column: 13, scope: !3494)
!3499 = !DILocation(line: 949, column: 23, scope: !3494)
!3500 = !DILocation(line: 949, column: 44, scope: !3494)
!3501 = !DILocation(line: 949, column: 9, scope: !3495)
!3502 = !DILocation(line: 950, column: 21, scope: !3503)
!3503 = distinct !DILexicalBlock(scope: !3494, file: !244, line: 949, column: 49)
!3504 = !DILocation(line: 950, column: 6, scope: !3503)
!3505 = !DILocation(line: 950, column: 9, scope: !3503)
!3506 = !DILocation(line: 950, column: 19, scope: !3503)
!3507 = !DILocation(line: 951, column: 6, scope: !3503)
!3508 = !DILocation(line: 951, column: 9, scope: !3503)
!3509 = !DILocation(line: 951, column: 18, scope: !3503)
!3510 = !DILocation(line: 952, column: 5, scope: !3503)
!3511 = !DILocation(line: 953, column: 6, scope: !3494)
!3512 = !DILocation(line: 953, column: 9, scope: !3494)
!3513 = !DILocation(line: 953, column: 19, scope: !3494)
!3514 = !DILocation(line: 954, column: 4, scope: !3495)
!3515 = !DILocation(line: 955, column: 4, scope: !3480)
!3516 = !DILocation(line: 955, column: 7, scope: !3480)
!3517 = !DILocation(line: 955, column: 17, scope: !3480)
!3518 = !DILocation(line: 956, column: 3, scope: !3480)
!3519 = !DILocation(line: 946, column: 23, scope: !3475)
!3520 = !DILocation(line: 958, column: 12, scope: !3442)
!3521 = !DILocation(line: 958, column: 16, scope: !3442)
!3522 = !DILocation(line: 958, column: 27, scope: !3442)
!3523 = !DILocation(line: 958, column: 25, scope: !3442)
!3524 = !DILocation(line: 958, column: 10, scope: !3442)
!3525 = !DILocation(line: 959, column: 5, scope: !3442)
!3526 = !DILocation(line: 959, column: 8, scope: !3442)
!3527 = !DILocation(line: 960, column: 11, scope: !3442)
!3528 = !DILocation(line: 960, column: 14, scope: !3442)
!3529 = !DILocation(line: 960, column: 17, scope: !3442)
!3530 = !DILocation(line: 960, column: 3, scope: !3442)
!3531 = !DILocation(line: 960, column: 27, scope: !3442)
!3532 = !DILocation(line: 960, column: 30, scope: !3442)
!3533 = !DILocation(line: 960, column: 42, scope: !3442)
!3534 = !DILocation(line: 962, column: 17, scope: !3442)
!3535 = !DILocation(line: 962, column: 3, scope: !3442)
!3536 = !DILocation(line: 962, column: 7, scope: !3442)
!3537 = !DILocation(line: 962, column: 15, scope: !3442)
!3538 = !DILocation(line: 963, column: 7, scope: !3539)
!3539 = distinct !DILexicalBlock(scope: !3442, file: !244, line: 963, column: 7)
!3540 = !DILocation(line: 963, column: 10, scope: !3539)
!3541 = !DILocation(line: 963, column: 19, scope: !3539)
!3542 = !DILocation(line: 963, column: 7, scope: !3442)
!3543 = !DILocation(line: 965, column: 11, scope: !3544)
!3544 = distinct !DILexicalBlock(scope: !3545, file: !244, line: 965, column: 11)
!3545 = distinct !DILexicalBlock(scope: !3539, file: !244, line: 964, column: 5)
!3546 = !DILocation(line: 965, column: 14, scope: !3544)
!3547 = !DILocation(line: 965, column: 25, scope: !3544)
!3548 = !DILocation(line: 965, column: 33, scope: !3544)
!3549 = !DILocation(line: 965, column: 11, scope: !3545)
!3550 = !DILocalVariable(name: "parent", scope: !3551, file: !244, line: 967, type: !2190)
!3551 = distinct !DILexicalBlock(scope: !3544, file: !244, line: 966, column: 9)
!3552 = !DILocation(line: 967, column: 12, scope: !3551)
!3553 = !DILocation(line: 967, column: 21, scope: !3551)
!3554 = !DILocation(line: 967, column: 24, scope: !3551)
!3555 = !DILocation(line: 968, column: 24, scope: !3556)
!3556 = distinct !DILexicalBlock(scope: !3551, file: !244, line: 968, column: 8)
!3557 = !DILocation(line: 968, column: 27, scope: !3556)
!3558 = !DILocation(line: 968, column: 22, scope: !3556)
!3559 = !DILocation(line: 971, column: 8, scope: !3556)
!3560 = !DILocation(line: 971, column: 11, scope: !3556)
!3561 = !DILocation(line: 971, column: 19, scope: !3556)
!3562 = !DILocation(line: 971, column: 40, scope: !3556)
!3563 = !DILocation(line: 972, column: 8, scope: !3556)
!3564 = !DILocation(line: 972, column: 11, scope: !3556)
!3565 = !DILocation(line: 973, column: 8, scope: !3556)
!3566 = !DILocation(line: 973, column: 11, scope: !3556)
!3567 = !DILocation(line: 974, column: 8, scope: !3556)
!3568 = !DILocation(line: 974, column: 35, scope: !3556)
!3569 = !DILocation(line: 974, column: 11, scope: !3556)
!3570 = !DILocation(line: 968, column: 8, scope: !3551)
!3571 = !DILocation(line: 977, column: 6, scope: !3572)
!3572 = distinct !DILexicalBlock(scope: !3556, file: !244, line: 975, column: 6)
!3573 = !DILocation(line: 980, column: 31, scope: !3574)
!3574 = distinct !DILexicalBlock(scope: !3556, file: !244, line: 979, column: 6)
!3575 = !DILocation(line: 980, column: 35, scope: !3574)
!3576 = !DILocation(line: 980, column: 22, scope: !3574)
!3577 = !DILocation(line: 980, column: 8, scope: !3574)
!3578 = !DILocation(line: 980, column: 11, scope: !3574)
!3579 = !DILocation(line: 980, column: 20, scope: !3574)
!3580 = !DILocation(line: 981, column: 12, scope: !3581)
!3581 = distinct !DILexicalBlock(scope: !3574, file: !244, line: 981, column: 12)
!3582 = !DILocation(line: 982, column: 5, scope: !3581)
!3583 = !DILocation(line: 982, column: 8, scope: !3581)
!3584 = !DILocation(line: 982, column: 11, scope: !3581)
!3585 = !DILocation(line: 982, column: 21, scope: !3581)
!3586 = !DILocation(line: 983, column: 5, scope: !3581)
!3587 = !DILocation(line: 983, column: 8, scope: !3581)
!3588 = !DILocation(line: 983, column: 16, scope: !3581)
!3589 = !DILocation(line: 981, column: 12, scope: !3574)
!3590 = !DILocation(line: 984, column: 7, scope: !3581)
!3591 = !DILocation(line: 984, column: 15, scope: !3581)
!3592 = !DILocation(line: 984, column: 35, scope: !3581)
!3593 = !DILocation(line: 986, column: 9, scope: !3551)
!3594 = !DILocation(line: 988, column: 9, scope: !3544)
!3595 = distinct !{!3595, !3594, !3594}
!3596 = !DILocation(line: 988, column: 9, scope: !3597)
!3597 = distinct !DILexicalBlock(scope: !3598, file: !244, line: 988, column: 9)
!3598 = distinct !DILexicalBlock(scope: !3544, file: !244, line: 988, column: 9)
!3599 = !DILocation(line: 988, column: 9, scope: !3598)
!3600 = !DILocation(line: 989, column: 5, scope: !3545)
!3601 = !DILocation(line: 991, column: 7, scope: !3602)
!3602 = distinct !DILexicalBlock(scope: !3442, file: !244, line: 991, column: 7)
!3603 = !DILocation(line: 991, column: 10, scope: !3602)
!3604 = !DILocation(line: 991, column: 19, scope: !3602)
!3605 = !DILocation(line: 991, column: 7, scope: !3442)
!3606 = !DILocation(line: 996, column: 11, scope: !3607)
!3607 = distinct !DILexicalBlock(scope: !3608, file: !244, line: 996, column: 11)
!3608 = distinct !DILexicalBlock(scope: !3602, file: !244, line: 992, column: 5)
!3609 = !DILocation(line: 996, column: 14, scope: !3607)
!3610 = !DILocation(line: 996, column: 24, scope: !3607)
!3611 = !DILocation(line: 996, column: 11, scope: !3608)
!3612 = !DILocation(line: 997, column: 23, scope: !3607)
!3613 = !DILocation(line: 997, column: 26, scope: !3607)
!3614 = !DILocation(line: 997, column: 37, scope: !3607)
!3615 = !DILocation(line: 997, column: 9, scope: !3607)
!3616 = !DILocation(line: 997, column: 13, scope: !3607)
!3617 = !DILocation(line: 997, column: 21, scope: !3607)
!3618 = !DILocation(line: 999, column: 24, scope: !3619)
!3619 = distinct !DILexicalBlock(scope: !3608, file: !244, line: 999, column: 11)
!3620 = !DILocation(line: 999, column: 28, scope: !3619)
!3621 = !DILocation(line: 999, column: 13, scope: !3619)
!3622 = !DILocation(line: 999, column: 11, scope: !3608)
!3623 = !DILocation(line: 1001, column: 4, scope: !3624)
!3624 = distinct !DILexicalBlock(scope: !3619, file: !244, line: 1000, column: 9)
!3625 = !DILocation(line: 1002, column: 4, scope: !3624)
!3626 = !DILocation(line: 1004, column: 5, scope: !3608)
!3627 = !DILocation(line: 1005, column: 10, scope: !3442)
!3628 = !DILocation(line: 1005, column: 3, scope: !3442)
!3629 = !DILocation(line: 1009, column: 6, scope: !3193)
!3630 = !DILocation(line: 1009, column: 11, scope: !3193)
!3631 = !DILocation(line: 1009, column: 4, scope: !3193)
!3632 = !DILocation(line: 1010, column: 16, scope: !3193)
!3633 = !DILocation(line: 1010, column: 2, scope: !3193)
!3634 = !DILocation(line: 1010, column: 6, scope: !3193)
!3635 = !DILocation(line: 1010, column: 14, scope: !3193)
!3636 = !DILocation(line: 1011, column: 7, scope: !3193)
!3637 = !DILocation(line: 1011, column: 2, scope: !3193)
!3638 = !DILocation(line: 1013, column: 6, scope: !3639)
!3639 = distinct !DILexicalBlock(scope: !3193, file: !244, line: 1013, column: 6)
!3640 = !DILocation(line: 1013, column: 9, scope: !3639)
!3641 = !DILocation(line: 1013, column: 19, scope: !3639)
!3642 = !DILocation(line: 1013, column: 6, scope: !3193)
!3643 = !DILocation(line: 1018, column: 8, scope: !3644)
!3644 = distinct !DILexicalBlock(scope: !3639, file: !244, line: 1013, column: 43)
!3645 = !DILocation(line: 1018, column: 3, scope: !3644)
!3646 = !DILocation(line: 1019, column: 3, scope: !3644)
!3647 = !DILocation(line: 1020, column: 11, scope: !3644)
!3648 = !DILocation(line: 1020, column: 15, scope: !3644)
!3649 = !DILocation(line: 1020, column: 23, scope: !3644)
!3650 = !DILocation(line: 1020, column: 3, scope: !3644)
!3651 = !DILocation(line: 1023, column: 2, scope: !3193)
!3652 = distinct !{!3652, !3651, !3651}
!3653 = !DILocation(line: 1023, column: 2, scope: !3654)
!3654 = distinct !DILexicalBlock(scope: !3655, file: !244, line: 1023, column: 2)
!3655 = distinct !DILexicalBlock(scope: !3193, file: !244, line: 1023, column: 2)
!3656 = !DILocation(line: 1023, column: 2, scope: !3655)
!3657 = !DILocation(line: 1026, column: 2, scope: !3193)
!3658 = !DILocation(line: 1026, column: 6, scope: !3193)
!3659 = !DILocation(line: 1026, column: 15, scope: !3193)
!3660 = !DILocation(line: 1026, column: 18, scope: !3193)
!3661 = !DILocation(line: 1026, column: 31, scope: !3193)
!3662 = !DILocation(line: 1034, column: 6, scope: !3663)
!3663 = distinct !DILexicalBlock(scope: !3193, file: !244, line: 1034, column: 6)
!3664 = !DILocation(line: 1034, column: 9, scope: !3663)
!3665 = !DILocation(line: 1034, column: 19, scope: !3663)
!3666 = !DILocation(line: 1034, column: 6, scope: !3193)
!3667 = !DILocation(line: 1035, column: 7, scope: !3668)
!3668 = distinct !DILexicalBlock(scope: !3669, file: !244, line: 1035, column: 7)
!3669 = distinct !DILexicalBlock(scope: !3663, file: !244, line: 1034, column: 37)
!3670 = !DILocation(line: 1035, column: 7, scope: !3669)
!3671 = !DILocation(line: 1036, column: 19, scope: !3672)
!3672 = distinct !DILexicalBlock(scope: !3668, file: !244, line: 1035, column: 32)
!3673 = !DILocation(line: 1036, column: 4, scope: !3672)
!3674 = !DILocation(line: 1036, column: 7, scope: !3672)
!3675 = !DILocation(line: 1036, column: 17, scope: !3672)
!3676 = !DILocation(line: 1037, column: 4, scope: !3672)
!3677 = !DILocation(line: 1038, column: 3, scope: !3672)
!3678 = !DILocation(line: 1039, column: 2, scope: !3669)
!3679 = !DILocation(line: 1039, column: 13, scope: !3680)
!3680 = distinct !DILexicalBlock(scope: !3663, file: !244, line: 1039, column: 13)
!3681 = !DILocation(line: 1039, column: 16, scope: !3680)
!3682 = !DILocation(line: 1039, column: 26, scope: !3680)
!3683 = !DILocation(line: 1039, column: 13, scope: !3663)
!3684 = !DILocation(line: 1040, column: 7, scope: !3685)
!3685 = distinct !DILexicalBlock(scope: !3686, file: !244, line: 1040, column: 7)
!3686 = distinct !DILexicalBlock(scope: !3680, file: !244, line: 1039, column: 43)
!3687 = !DILocation(line: 1040, column: 7, scope: !3686)
!3688 = !DILocalVariable(name: "saved_errno", scope: !3689, file: !244, line: 1041, type: !23)
!3689 = distinct !DILexicalBlock(scope: !3685, file: !244, line: 1040, column: 33)
!3690 = !DILocation(line: 1041, column: 8, scope: !3689)
!3691 = !DILocation(line: 1041, column: 22, scope: !3689)
!3692 = !DILocation(line: 1042, column: 16, scope: !3689)
!3693 = !DILocation(line: 1042, column: 19, scope: !3689)
!3694 = !DILocation(line: 1042, column: 10, scope: !3689)
!3695 = !DILocation(line: 1043, column: 4, scope: !3689)
!3696 = !DILocation(line: 1044, column: 19, scope: !3689)
!3697 = !DILocation(line: 1044, column: 4, scope: !3689)
!3698 = !DILocation(line: 1044, column: 7, scope: !3689)
!3699 = !DILocation(line: 1044, column: 17, scope: !3689)
!3700 = !DILocation(line: 1045, column: 4, scope: !3689)
!3701 = !DILocation(line: 1046, column: 3, scope: !3689)
!3702 = !DILocation(line: 1047, column: 15, scope: !3686)
!3703 = !DILocation(line: 1047, column: 18, scope: !3686)
!3704 = !DILocation(line: 1047, column: 9, scope: !3686)
!3705 = !DILocation(line: 1048, column: 2, scope: !3686)
!3706 = !DILocation(line: 1048, column: 15, scope: !3707)
!3707 = distinct !DILexicalBlock(scope: !3680, file: !244, line: 1048, column: 13)
!3708 = !DILocation(line: 1048, column: 18, scope: !3707)
!3709 = !DILocation(line: 1048, column: 28, scope: !3707)
!3710 = !DILocation(line: 1048, column: 45, scope: !3707)
!3711 = !DILocation(line: 1049, column: 25, scope: !3707)
!3712 = !DILocation(line: 1049, column: 29, scope: !3707)
!3713 = !DILocation(line: 1049, column: 32, scope: !3707)
!3714 = !DILocation(line: 1049, column: 6, scope: !3707)
!3715 = !DILocation(line: 1048, column: 13, scope: !3680)
!3716 = !DILocation(line: 1050, column: 18, scope: !3717)
!3717 = distinct !DILexicalBlock(scope: !3707, file: !244, line: 1049, column: 55)
!3718 = !DILocation(line: 1050, column: 3, scope: !3717)
!3719 = !DILocation(line: 1050, column: 6, scope: !3717)
!3720 = !DILocation(line: 1050, column: 16, scope: !3717)
!3721 = !DILocation(line: 1051, column: 3, scope: !3717)
!3722 = !DILocation(line: 1052, column: 2, scope: !3717)
!3723 = !DILocation(line: 1053, column: 16, scope: !3193)
!3724 = !DILocation(line: 1053, column: 19, scope: !3193)
!3725 = !DILocation(line: 1053, column: 2, scope: !3193)
!3726 = !DILocation(line: 1053, column: 5, scope: !3193)
!3727 = !DILocation(line: 1053, column: 14, scope: !3193)
!3728 = !DILocation(line: 1054, column: 6, scope: !3729)
!3729 = distinct !DILexicalBlock(scope: !3193, file: !244, line: 1054, column: 6)
!3730 = !DILocation(line: 1054, column: 9, scope: !3729)
!3731 = !DILocation(line: 1054, column: 19, scope: !3729)
!3732 = !DILocation(line: 1054, column: 6, scope: !3193)
!3733 = !DILocation(line: 1055, column: 3, scope: !3729)
!3734 = distinct !{!3734, !3733, !3733}
!3735 = !DILocation(line: 1055, column: 3, scope: !3736)
!3736 = distinct !DILexicalBlock(scope: !3729, file: !244, line: 1055, column: 3)
!3737 = !DILocation(line: 1056, column: 9, scope: !3193)
!3738 = !DILocation(line: 1056, column: 34, scope: !3193)
!3739 = !DILocation(line: 1056, column: 2, scope: !3193)
!3740 = !DILocation(line: 1057, column: 1, scope: !3193)
!3741 = distinct !DISubprogram(name: "leave_dir", scope: !251, file: !251, line: 125, type: !3742, isLocal: true, isDefinition: true, scopeLine: 126, flags: DIFlagPrototyped, isOptimized: false, unit: !243, variables: !25)
!3742 = !DISubroutineType(types: !3743)
!3743 = !{null, !255, !2190}
!3744 = !DILocalVariable(name: "fts", arg: 1, scope: !3741, file: !251, line: 125, type: !255)
!3745 = !DILocation(line: 125, column: 17, scope: !3741)
!3746 = !DILocalVariable(name: "ent", arg: 2, scope: !3741, file: !251, line: 125, type: !2190)
!3747 = !DILocation(line: 125, column: 30, scope: !3741)
!3748 = !DILocalVariable(name: "st", scope: !3741, file: !251, line: 127, type: !3749)
!3749 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3750, size: 64)
!3750 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !287)
!3751 = !DILocation(line: 127, column: 22, scope: !3741)
!3752 = !DILocation(line: 127, column: 27, scope: !3741)
!3753 = !DILocation(line: 127, column: 32, scope: !3741)
!3754 = !DILocation(line: 128, column: 7, scope: !3755)
!3755 = distinct !DILexicalBlock(scope: !3741, file: !251, line: 128, column: 7)
!3756 = !DILocation(line: 128, column: 12, scope: !3755)
!3757 = !DILocation(line: 128, column: 24, scope: !3755)
!3758 = !DILocation(line: 128, column: 7, scope: !3741)
!3759 = !DILocalVariable(name: "obj", scope: !3760, file: !251, line: 130, type: !2962)
!3760 = distinct !DILexicalBlock(scope: !3755, file: !251, line: 129, column: 5)
!3761 = !DILocation(line: 130, column: 25, scope: !3760)
!3762 = !DILocalVariable(name: "found", scope: !3760, file: !251, line: 131, type: !16)
!3763 = !DILocation(line: 131, column: 13, scope: !3760)
!3764 = !DILocation(line: 132, column: 17, scope: !3760)
!3765 = !DILocation(line: 132, column: 21, scope: !3760)
!3766 = !DILocation(line: 132, column: 11, scope: !3760)
!3767 = !DILocation(line: 132, column: 15, scope: !3760)
!3768 = !DILocation(line: 133, column: 17, scope: !3760)
!3769 = !DILocation(line: 133, column: 21, scope: !3760)
!3770 = !DILocation(line: 133, column: 11, scope: !3760)
!3771 = !DILocation(line: 133, column: 15, scope: !3760)
!3772 = !DILocation(line: 134, column: 28, scope: !3760)
!3773 = !DILocation(line: 134, column: 33, scope: !3760)
!3774 = !DILocation(line: 134, column: 43, scope: !3760)
!3775 = !DILocation(line: 134, column: 47, scope: !3760)
!3776 = !DILocation(line: 134, column: 15, scope: !3760)
!3777 = !DILocation(line: 134, column: 13, scope: !3760)
!3778 = !DILocation(line: 135, column: 12, scope: !3779)
!3779 = distinct !DILexicalBlock(scope: !3760, file: !251, line: 135, column: 11)
!3780 = !DILocation(line: 135, column: 11, scope: !3760)
!3781 = !DILocation(line: 136, column: 2, scope: !3779)
!3782 = !DILocation(line: 137, column: 13, scope: !3760)
!3783 = !DILocation(line: 137, column: 7, scope: !3760)
!3784 = !DILocation(line: 138, column: 5, scope: !3760)
!3785 = !DILocalVariable(name: "parent", scope: !3786, file: !251, line: 141, type: !2190)
!3786 = distinct !DILexicalBlock(scope: !3755, file: !251, line: 140, column: 5)
!3787 = !DILocation(line: 141, column: 15, scope: !3786)
!3788 = !DILocation(line: 141, column: 24, scope: !3786)
!3789 = !DILocation(line: 141, column: 29, scope: !3786)
!3790 = !DILocation(line: 142, column: 11, scope: !3791)
!3791 = distinct !DILexicalBlock(scope: !3786, file: !251, line: 142, column: 11)
!3792 = !DILocation(line: 142, column: 18, scope: !3791)
!3793 = !DILocation(line: 142, column: 26, scope: !3791)
!3794 = !DILocation(line: 142, column: 34, scope: !3791)
!3795 = !DILocation(line: 142, column: 42, scope: !3791)
!3796 = !DILocation(line: 142, column: 31, scope: !3791)
!3797 = !DILocation(line: 142, column: 11, scope: !3786)
!3798 = !DILocation(line: 143, column: 2, scope: !3791)
!3799 = distinct !{!3799, !3798, !3798}
!3800 = !DILocation(line: 143, column: 2, scope: !3801)
!3801 = distinct !DILexicalBlock(scope: !3802, file: !251, line: 143, column: 2)
!3802 = distinct !DILexicalBlock(scope: !3791, file: !251, line: 143, column: 2)
!3803 = !DILocation(line: 143, column: 2, scope: !3802)
!3804 = !DILocation(line: 143, column: 2, scope: !3805)
!3805 = distinct !DILexicalBlock(scope: !3802, file: !251, line: 143, column: 2)
!3806 = !DILocation(line: 143, column: 2, scope: !3807)
!3807 = distinct !DILexicalBlock(scope: !3805, file: !251, line: 143, column: 2)
!3808 = !DILocation(line: 146, column: 1, scope: !3741)
!3809 = distinct !DISubprogram(name: "fts_safe_changedir", scope: !244, file: !244, line: 1956, type: !3810, isLocal: true, isDefinition: true, scopeLine: 1957, flags: DIFlagPrototyped, isOptimized: false, unit: !243, variables: !25)
!3810 = !DISubroutineType(types: !3811)
!3811 = !{!23, !255, !2190, !23, !12}
!3812 = !DILocalVariable(name: "sp", arg: 1, scope: !3809, file: !244, line: 1956, type: !255)
!3813 = !DILocation(line: 1956, column: 26, scope: !3809)
!3814 = !DILocalVariable(name: "p", arg: 2, scope: !3809, file: !244, line: 1956, type: !2190)
!3815 = !DILocation(line: 1956, column: 38, scope: !3809)
!3816 = !DILocalVariable(name: "fd", arg: 3, scope: !3809, file: !244, line: 1956, type: !23)
!3817 = !DILocation(line: 1956, column: 45, scope: !3809)
!3818 = !DILocalVariable(name: "dir", arg: 4, scope: !3809, file: !244, line: 1956, type: !12)
!3819 = !DILocation(line: 1956, column: 61, scope: !3809)
!3820 = !DILocalVariable(name: "ret", scope: !3809, file: !244, line: 1958, type: !23)
!3821 = !DILocation(line: 1958, column: 6, scope: !3809)
!3822 = !DILocalVariable(name: "is_dotdot", scope: !3809, file: !244, line: 1959, type: !79)
!3823 = !DILocation(line: 1959, column: 7, scope: !3809)
!3824 = !DILocation(line: 1959, column: 19, scope: !3809)
!3825 = !DILocation(line: 1959, column: 23, scope: !3809)
!3826 = !DILocation(line: 1959, column: 26, scope: !3809)
!3827 = !DILocalVariable(name: "newfd", scope: !3809, file: !244, line: 1960, type: !23)
!3828 = !DILocation(line: 1960, column: 6, scope: !3809)
!3829 = !DILocation(line: 1966, column: 6, scope: !3830)
!3830 = distinct !DILexicalBlock(scope: !3809, file: !244, line: 1966, column: 6)
!3831 = !DILocation(line: 1966, column: 6, scope: !3809)
!3832 = !DILocation(line: 1968, column: 10, scope: !3833)
!3833 = distinct !DILexicalBlock(scope: !3834, file: !244, line: 1968, column: 10)
!3834 = distinct !DILexicalBlock(scope: !3830, file: !244, line: 1967, column: 4)
!3835 = !DILocation(line: 1968, column: 28, scope: !3833)
!3836 = !DILocation(line: 1968, column: 36, scope: !3833)
!3837 = !DILocation(line: 1968, column: 33, scope: !3833)
!3838 = !DILocation(line: 1968, column: 10, scope: !3834)
!3839 = !DILocation(line: 1969, column: 15, scope: !3833)
!3840 = !DILocation(line: 1969, column: 8, scope: !3833)
!3841 = !DILocation(line: 1970, column: 6, scope: !3834)
!3842 = !DILocation(line: 1973, column: 6, scope: !3843)
!3843 = distinct !DILexicalBlock(scope: !3809, file: !244, line: 1973, column: 6)
!3844 = !DILocation(line: 1973, column: 9, scope: !3843)
!3845 = !DILocation(line: 1973, column: 13, scope: !3843)
!3846 = !DILocation(line: 1973, column: 16, scope: !3843)
!3847 = !DILocation(line: 1973, column: 26, scope: !3843)
!3848 = !DILocation(line: 1973, column: 29, scope: !3843)
!3849 = !DILocation(line: 1973, column: 6, scope: !3809)
!3850 = !DILocation(line: 1980, column: 28, scope: !3851)
!3851 = distinct !DILexicalBlock(scope: !3852, file: !244, line: 1980, column: 11)
!3852 = distinct !DILexicalBlock(scope: !3843, file: !244, line: 1974, column: 4)
!3853 = !DILocation(line: 1980, column: 32, scope: !3851)
!3854 = !DILocation(line: 1980, column: 13, scope: !3851)
!3855 = !DILocation(line: 1980, column: 11, scope: !3852)
!3856 = !DILocalVariable(name: "parent_fd", scope: !3857, file: !244, line: 1982, type: !23)
!3857 = distinct !DILexicalBlock(scope: !3851, file: !244, line: 1981, column: 8)
!3858 = !DILocation(line: 1982, column: 7, scope: !3857)
!3859 = !DILocation(line: 1984, column: 28, scope: !3857)
!3860 = !DILocation(line: 1984, column: 32, scope: !3857)
!3861 = !DILocation(line: 1984, column: 15, scope: !3857)
!3862 = !DILocation(line: 1984, column: 13, scope: !3857)
!3863 = !DILocation(line: 1985, column: 13, scope: !3857)
!3864 = !DILocation(line: 1986, column: 12, scope: !3865)
!3865 = distinct !DILexicalBlock(scope: !3857, file: !244, line: 1986, column: 7)
!3866 = !DILocation(line: 1986, column: 9, scope: !3865)
!3867 = !DILocation(line: 1986, column: 7, scope: !3857)
!3868 = !DILocation(line: 1988, column: 12, scope: !3869)
!3869 = distinct !DILexicalBlock(scope: !3865, file: !244, line: 1987, column: 5)
!3870 = !DILocation(line: 1988, column: 10, scope: !3869)
!3871 = !DILocation(line: 1989, column: 11, scope: !3869)
!3872 = !DILocation(line: 1990, column: 5, scope: !3869)
!3873 = !DILocation(line: 1991, column: 8, scope: !3857)
!3874 = !DILocation(line: 1992, column: 4, scope: !3852)
!3875 = !DILocation(line: 1994, column: 10, scope: !3809)
!3876 = !DILocation(line: 1994, column: 8, scope: !3809)
!3877 = !DILocation(line: 1995, column: 6, scope: !3878)
!3878 = distinct !DILexicalBlock(scope: !3809, file: !244, line: 1995, column: 6)
!3879 = !DILocation(line: 1995, column: 9, scope: !3878)
!3880 = !DILocation(line: 1995, column: 13, scope: !3878)
!3881 = !DILocation(line: 1995, column: 34, scope: !3878)
!3882 = !DILocation(line: 1995, column: 38, scope: !3878)
!3883 = !DILocation(line: 1995, column: 25, scope: !3878)
!3884 = !DILocation(line: 1995, column: 23, scope: !3878)
!3885 = !DILocation(line: 1995, column: 44, scope: !3878)
!3886 = !DILocation(line: 1995, column: 6, scope: !3809)
!3887 = !DILocation(line: 1996, column: 4, scope: !3878)
!3888 = !DILocation(line: 2005, column: 6, scope: !3889)
!3889 = distinct !DILexicalBlock(scope: !3809, file: !244, line: 2005, column: 6)
!3890 = !DILocation(line: 2006, column: 6, scope: !3889)
!3891 = !DILocation(line: 2006, column: 10, scope: !3889)
!3892 = !DILocation(line: 2006, column: 14, scope: !3889)
!3893 = !DILocation(line: 2006, column: 17, scope: !3889)
!3894 = !DILocation(line: 2005, column: 6, scope: !3809)
!3895 = !DILocalVariable(name: "sb", scope: !3896, file: !244, line: 2008, type: !287)
!3896 = distinct !DILexicalBlock(scope: !3889, file: !244, line: 2007, column: 4)
!3897 = !DILocation(line: 2008, column: 18, scope: !3896)
!3898 = !DILocation(line: 2009, column: 16, scope: !3899)
!3899 = distinct !DILexicalBlock(scope: !3896, file: !244, line: 2009, column: 10)
!3900 = !DILocation(line: 2009, column: 10, scope: !3899)
!3901 = !DILocation(line: 2009, column: 10, scope: !3896)
!3902 = !DILocation(line: 2011, column: 7, scope: !3903)
!3903 = distinct !DILexicalBlock(scope: !3899, file: !244, line: 2010, column: 8)
!3904 = !DILocation(line: 2012, column: 3, scope: !3903)
!3905 = !DILocation(line: 2014, column: 10, scope: !3906)
!3906 = distinct !DILexicalBlock(scope: !3896, file: !244, line: 2014, column: 10)
!3907 = !DILocation(line: 2014, column: 13, scope: !3906)
!3908 = !DILocation(line: 2014, column: 24, scope: !3906)
!3909 = !DILocation(line: 2014, column: 37, scope: !3906)
!3910 = !DILocation(line: 2014, column: 31, scope: !3906)
!3911 = !DILocation(line: 2015, column: 3, scope: !3906)
!3912 = !DILocation(line: 2015, column: 6, scope: !3906)
!3913 = !DILocation(line: 2015, column: 9, scope: !3906)
!3914 = !DILocation(line: 2015, column: 20, scope: !3906)
!3915 = !DILocation(line: 2015, column: 33, scope: !3906)
!3916 = !DILocation(line: 2015, column: 27, scope: !3906)
!3917 = !DILocation(line: 2014, column: 10, scope: !3896)
!3918 = !DILocation(line: 2017, column: 3, scope: !3919)
!3919 = distinct !DILexicalBlock(scope: !3906, file: !244, line: 2016, column: 8)
!3920 = !DILocation(line: 2018, column: 7, scope: !3919)
!3921 = !DILocation(line: 2019, column: 3, scope: !3919)
!3922 = !DILocation(line: 2021, column: 4, scope: !3896)
!3923 = !DILocation(line: 2023, column: 6, scope: !3924)
!3924 = distinct !DILexicalBlock(scope: !3809, file: !244, line: 2023, column: 6)
!3925 = !DILocation(line: 2023, column: 6, scope: !3809)
!3926 = !DILocation(line: 2025, column: 22, scope: !3927)
!3927 = distinct !DILexicalBlock(scope: !3924, file: !244, line: 2024, column: 4)
!3928 = !DILocation(line: 2025, column: 26, scope: !3927)
!3929 = !DILocation(line: 2025, column: 35, scope: !3927)
!3930 = !DILocation(line: 2025, column: 33, scope: !3927)
!3931 = !DILocation(line: 2025, column: 6, scope: !3927)
!3932 = !DILocation(line: 2026, column: 6, scope: !3927)
!3933 = !DILocation(line: 2029, column: 15, scope: !3809)
!3934 = !DILocation(line: 2029, column: 8, scope: !3809)
!3935 = !DILocation(line: 2029, column: 6, scope: !3809)
!3936 = !DILocation(line: 2029, column: 2, scope: !3809)
!3937 = !DILocation(line: 2031, column: 6, scope: !3938)
!3938 = distinct !DILexicalBlock(scope: !3809, file: !244, line: 2031, column: 6)
!3939 = !DILocation(line: 2031, column: 9, scope: !3938)
!3940 = !DILocation(line: 2031, column: 6, scope: !3809)
!3941 = !DILocalVariable(name: "oerrno", scope: !3942, file: !244, line: 2033, type: !23)
!3942 = distinct !DILexicalBlock(scope: !3938, file: !244, line: 2032, column: 4)
!3943 = !DILocation(line: 2033, column: 10, scope: !3942)
!3944 = !DILocation(line: 2033, column: 19, scope: !3942)
!3945 = !DILocation(line: 2034, column: 18, scope: !3942)
!3946 = !DILocation(line: 2034, column: 12, scope: !3942)
!3947 = !DILocation(line: 2035, column: 6, scope: !3942)
!3948 = !DILocation(line: 2036, column: 4, scope: !3942)
!3949 = !DILocation(line: 2037, column: 9, scope: !3809)
!3950 = !DILocation(line: 2037, column: 2, scope: !3809)
!3951 = !DILocation(line: 2038, column: 1, scope: !3809)
!3952 = distinct !DISubprogram(name: "fts_build", scope: !244, file: !244, line: 1219, type: !3953, isLocal: true, isDefinition: true, scopeLine: 1220, flags: DIFlagPrototyped, isOptimized: false, unit: !243, variables: !25)
!3953 = !DISubroutineType(types: !3954)
!3954 = !{!2190, !255, !23}
!3955 = !DILocalVariable(name: "sp", arg: 1, scope: !3952, file: !244, line: 1219, type: !255)
!3956 = !DILocation(line: 1219, column: 26, scope: !3952)
!3957 = !DILocalVariable(name: "type", arg: 2, scope: !3952, file: !244, line: 1219, type: !23)
!3958 = !DILocation(line: 1219, column: 34, scope: !3952)
!3959 = !DILocalVariable(name: "dp", scope: !3952, file: !244, line: 1221, type: !3960)
!3960 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3961, size: 64)
!3961 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dirent", file: !3962, line: 22, size: 2240, elements: !3963)
!3962 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/dirent.h", directory: "/home/ma481/Downloads/Chisel/chisel-bench/benchmark/chown-8.2/original/obj-llvm/lib")
!3963 = !{!3964, !3965, !3966, !3967, !3969}
!3964 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino", scope: !3961, file: !3962, line: 25, baseType: !293, size: 64)
!3965 = !DIDerivedType(tag: DW_TAG_member, name: "d_off", scope: !3961, file: !3962, line: 26, baseType: !302, size: 64, offset: 64)
!3966 = !DIDerivedType(tag: DW_TAG_member, name: "d_reclen", scope: !3961, file: !3962, line: 31, baseType: !143, size: 16, offset: 128)
!3967 = !DIDerivedType(tag: DW_TAG_member, name: "d_type", scope: !3961, file: !3962, line: 32, baseType: !3968, size: 8, offset: 144)
!3968 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!3969 = !DIDerivedType(tag: DW_TAG_member, name: "d_name", scope: !3961, file: !3962, line: 33, baseType: !164, size: 2048, offset: 152)
!3970 = !DILocation(line: 1221, column: 26, scope: !3952)
!3971 = !DILocalVariable(name: "p", scope: !3952, file: !244, line: 1222, type: !2190)
!3972 = !DILocation(line: 1222, column: 19, scope: !3952)
!3973 = !DILocalVariable(name: "head", scope: !3952, file: !244, line: 1222, type: !2190)
!3974 = !DILocation(line: 1222, column: 23, scope: !3952)
!3975 = !DILocalVariable(name: "nitems", scope: !3952, file: !244, line: 1223, type: !91)
!3976 = !DILocation(line: 1223, column: 18, scope: !3952)
!3977 = !DILocalVariable(name: "cur", scope: !3952, file: !244, line: 1224, type: !2190)
!3978 = !DILocation(line: 1224, column: 10, scope: !3952)
!3979 = !DILocalVariable(name: "tail", scope: !3952, file: !244, line: 1224, type: !2190)
!3980 = !DILocation(line: 1224, column: 16, scope: !3952)
!3981 = !DILocalVariable(name: "dirp", scope: !3952, file: !244, line: 1225, type: !3982)
!3982 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3983, size: 64)
!3983 = !DIDerivedType(tag: DW_TAG_typedef, name: "DIR", file: !386, line: 127, baseType: !3984)
!3984 = !DICompositeType(tag: DW_TAG_structure_type, name: "__dirstream", file: !386, line: 127, flags: DIFlagFwdDecl)
!3985 = !DILocation(line: 1225, column: 7, scope: !3952)
!3986 = !DILocalVariable(name: "oldaddr", scope: !3952, file: !244, line: 1226, type: !16)
!3987 = !DILocation(line: 1226, column: 8, scope: !3952)
!3988 = !DILocalVariable(name: "saved_errno", scope: !3952, file: !244, line: 1227, type: !23)
!3989 = !DILocation(line: 1227, column: 6, scope: !3952)
!3990 = !DILocalVariable(name: "descend", scope: !3952, file: !244, line: 1228, type: !79)
!3991 = !DILocation(line: 1228, column: 7, scope: !3952)
!3992 = !DILocalVariable(name: "doadjust", scope: !3952, file: !244, line: 1229, type: !79)
!3993 = !DILocation(line: 1229, column: 7, scope: !3952)
!3994 = !DILocalVariable(name: "level", scope: !3952, file: !244, line: 1230, type: !277)
!3995 = !DILocation(line: 1230, column: 12, scope: !3952)
!3996 = !DILocalVariable(name: "nlinks", scope: !3952, file: !244, line: 1231, type: !280)
!3997 = !DILocation(line: 1231, column: 10, scope: !3952)
!3998 = !DILocalVariable(name: "nostat", scope: !3952, file: !244, line: 1232, type: !79)
!3999 = !DILocation(line: 1232, column: 7, scope: !3952)
!4000 = !DILocalVariable(name: "len", scope: !3952, file: !244, line: 1233, type: !91)
!4001 = !DILocation(line: 1233, column: 9, scope: !3952)
!4002 = !DILocalVariable(name: "maxlen", scope: !3952, file: !244, line: 1233, type: !91)
!4003 = !DILocation(line: 1233, column: 14, scope: !3952)
!4004 = !DILocalVariable(name: "new_len", scope: !3952, file: !244, line: 1233, type: !91)
!4005 = !DILocation(line: 1233, column: 22, scope: !3952)
!4006 = !DILocalVariable(name: "cp", scope: !3952, file: !244, line: 1234, type: !15)
!4007 = !DILocation(line: 1234, column: 8, scope: !3952)
!4008 = !DILocation(line: 1237, column: 8, scope: !3952)
!4009 = !DILocation(line: 1237, column: 12, scope: !3952)
!4010 = !DILocation(line: 1237, column: 6, scope: !3952)
!4011 = !DILocation(line: 1254, column: 20, scope: !4012)
!4012 = distinct !DILexicalBlock(scope: !3952, file: !244, line: 1254, column: 12)
!4013 = !DILocation(line: 1254, column: 18, scope: !4012)
!4014 = !DILocation(line: 1254, column: 57, scope: !4012)
!4015 = !DILocation(line: 1254, column: 12, scope: !3952)
!4016 = !DILocation(line: 1255, column: 7, scope: !4017)
!4017 = distinct !DILexicalBlock(scope: !4018, file: !244, line: 1255, column: 7)
!4018 = distinct !DILexicalBlock(scope: !4012, file: !244, line: 1254, column: 66)
!4019 = !DILocation(line: 1255, column: 12, scope: !4017)
!4020 = !DILocation(line: 1255, column: 7, scope: !4018)
!4021 = !DILocation(line: 1256, column: 4, scope: !4022)
!4022 = distinct !DILexicalBlock(scope: !4017, file: !244, line: 1255, column: 22)
!4023 = !DILocation(line: 1256, column: 9, scope: !4022)
!4024 = !DILocation(line: 1256, column: 18, scope: !4022)
!4025 = !DILocation(line: 1257, column: 21, scope: !4022)
!4026 = !DILocation(line: 1257, column: 4, scope: !4022)
!4027 = !DILocation(line: 1257, column: 9, scope: !4022)
!4028 = !DILocation(line: 1257, column: 19, scope: !4022)
!4029 = !DILocation(line: 1258, column: 3, scope: !4022)
!4030 = !DILocation(line: 1259, column: 3, scope: !4018)
!4031 = !DILocation(line: 1264, column: 12, scope: !4032)
!4032 = distinct !DILexicalBlock(scope: !3952, file: !244, line: 1264, column: 12)
!4033 = !DILocation(line: 1264, column: 17, scope: !4032)
!4034 = !DILocation(line: 1264, column: 26, scope: !4032)
!4035 = !DILocation(line: 1264, column: 12, scope: !3952)
!4036 = !DILocation(line: 1265, column: 28, scope: !4032)
!4037 = !DILocation(line: 1265, column: 32, scope: !4032)
!4038 = !DILocation(line: 1265, column: 19, scope: !4032)
!4039 = !DILocation(line: 1265, column: 3, scope: !4032)
!4040 = !DILocation(line: 1265, column: 8, scope: !4032)
!4041 = !DILocation(line: 1265, column: 17, scope: !4032)
!4042 = !DILocation(line: 1266, column: 17, scope: !4043)
!4043 = distinct !DILexicalBlock(scope: !4032, file: !244, line: 1266, column: 17)
!4044 = !DILocation(line: 1266, column: 21, scope: !4043)
!4045 = !DILocation(line: 1266, column: 33, scope: !4043)
!4046 = !DILocation(line: 1266, column: 17, scope: !4032)
!4047 = !DILocation(line: 1273, column: 3, scope: !4048)
!4048 = distinct !DILexicalBlock(scope: !4043, file: !244, line: 1266, column: 58)
!4049 = distinct !{!4049, !4047, !4047}
!4050 = !DILocation(line: 1273, column: 3, scope: !4051)
!4051 = distinct !DILexicalBlock(scope: !4048, file: !244, line: 1273, column: 3)
!4052 = !DILocation(line: 1274, column: 13, scope: !4048)
!4053 = !DILocation(line: 1274, column: 17, scope: !4048)
!4054 = !DILocation(line: 1274, column: 3, scope: !4048)
!4055 = !DILocation(line: 1275, column: 20, scope: !4056)
!4056 = distinct !DILexicalBlock(scope: !4048, file: !244, line: 1275, column: 7)
!4057 = !DILocation(line: 1275, column: 24, scope: !4056)
!4058 = !DILocation(line: 1275, column: 9, scope: !4056)
!4059 = !DILocation(line: 1275, column: 7, scope: !4048)
!4060 = !DILocation(line: 1276, column: 5, scope: !4061)
!4061 = distinct !DILexicalBlock(scope: !4056, file: !244, line: 1275, column: 30)
!4062 = !DILocation(line: 1277, column: 5, scope: !4061)
!4063 = !DILocation(line: 1279, column: 2, scope: !4048)
!4064 = !DILocation(line: 1286, column: 6, scope: !4065)
!4065 = distinct !DILexicalBlock(scope: !3952, file: !244, line: 1286, column: 6)
!4066 = !DILocation(line: 1286, column: 11, scope: !4065)
!4067 = !DILocation(line: 1286, column: 6, scope: !3952)
!4068 = !DILocation(line: 1287, column: 10, scope: !4069)
!4069 = distinct !DILexicalBlock(scope: !4065, file: !244, line: 1286, column: 22)
!4070 = !DILocation(line: 1289, column: 10, scope: !4069)
!4071 = !DILocation(line: 1290, column: 2, scope: !4069)
!4072 = !DILocation(line: 1290, column: 13, scope: !4073)
!4073 = distinct !DILexicalBlock(scope: !4065, file: !244, line: 1290, column: 13)
!4074 = !DILocation(line: 1290, column: 31, scope: !4073)
!4075 = !DILocation(line: 1290, column: 34, scope: !4073)
!4076 = !DILocation(line: 1290, column: 13, scope: !4065)
!4077 = !DILocation(line: 1291, column: 13, scope: !4078)
!4078 = distinct !DILexicalBlock(scope: !4073, file: !244, line: 1290, column: 55)
!4079 = !DILocation(line: 1291, column: 18, scope: !4078)
!4080 = !DILocation(line: 1291, column: 29, scope: !4078)
!4081 = !DILocation(line: 1292, column: 9, scope: !4078)
!4082 = !DILocation(line: 1292, column: 8, scope: !4078)
!4083 = !DILocation(line: 1292, column: 6, scope: !4078)
!4084 = !DILocation(line: 1291, column: 10, scope: !4078)
!4085 = !DILocation(line: 1293, column: 10, scope: !4078)
!4086 = !DILocation(line: 1294, column: 2, scope: !4078)
!4087 = !DILocation(line: 1295, column: 10, scope: !4088)
!4088 = distinct !DILexicalBlock(scope: !4073, file: !244, line: 1294, column: 9)
!4089 = !DILocation(line: 1296, column: 10, scope: !4088)
!4090 = !DILocation(line: 1314, column: 6, scope: !4091)
!4091 = distinct !DILexicalBlock(scope: !3952, file: !244, line: 1314, column: 6)
!4092 = !DILocation(line: 1314, column: 13, scope: !4091)
!4093 = !DILocation(line: 1314, column: 16, scope: !4091)
!4094 = !DILocation(line: 1314, column: 21, scope: !4091)
!4095 = !DILocation(line: 1314, column: 6, scope: !3952)
!4096 = !DILocalVariable(name: "dir_fd", scope: !4097, file: !244, line: 1315, type: !23)
!4097 = distinct !DILexicalBlock(scope: !4091, file: !244, line: 1314, column: 31)
!4098 = !DILocation(line: 1315, column: 7, scope: !4097)
!4099 = !DILocation(line: 1315, column: 22, scope: !4097)
!4100 = !DILocation(line: 1315, column: 16, scope: !4097)
!4101 = !DILocation(line: 1316, column: 7, scope: !4102)
!4102 = distinct !DILexicalBlock(scope: !4097, file: !244, line: 1316, column: 7)
!4103 = !DILocation(line: 1316, column: 24, scope: !4102)
!4104 = !DILocation(line: 1316, column: 32, scope: !4102)
!4105 = !DILocation(line: 1316, column: 29, scope: !4102)
!4106 = !DILocation(line: 1316, column: 7, scope: !4097)
!4107 = !DILocation(line: 1318, column: 21, scope: !4108)
!4108 = distinct !DILexicalBlock(scope: !4102, file: !244, line: 1317, column: 5)
!4109 = !DILocation(line: 1318, column: 16, scope: !4108)
!4110 = !DILocation(line: 1318, column: 14, scope: !4108)
!4111 = !DILocation(line: 1319, column: 25, scope: !4108)
!4112 = !DILocation(line: 1319, column: 7, scope: !4108)
!4113 = !DILocation(line: 1320, column: 5, scope: !4108)
!4114 = !DILocation(line: 1321, column: 7, scope: !4115)
!4115 = distinct !DILexicalBlock(scope: !4097, file: !244, line: 1321, column: 7)
!4116 = !DILocation(line: 1321, column: 14, scope: !4115)
!4117 = !DILocation(line: 1321, column: 18, scope: !4115)
!4118 = !DILocation(line: 1321, column: 40, scope: !4115)
!4119 = !DILocation(line: 1321, column: 44, scope: !4115)
!4120 = !DILocation(line: 1321, column: 49, scope: !4115)
!4121 = !DILocation(line: 1321, column: 21, scope: !4115)
!4122 = !DILocation(line: 1321, column: 7, scope: !4097)
!4123 = !DILocation(line: 1322, column: 8, scope: !4124)
!4124 = distinct !DILexicalBlock(scope: !4125, file: !244, line: 1322, column: 8)
!4125 = distinct !DILexicalBlock(scope: !4115, file: !244, line: 1321, column: 64)
!4126 = !DILocation(line: 1322, column: 15, scope: !4124)
!4127 = !DILocation(line: 1322, column: 18, scope: !4124)
!4128 = !DILocation(line: 1322, column: 23, scope: !4124)
!4129 = !DILocation(line: 1322, column: 8, scope: !4125)
!4130 = !DILocation(line: 1323, column: 22, scope: !4124)
!4131 = !DILocation(line: 1323, column: 5, scope: !4124)
!4132 = !DILocation(line: 1323, column: 10, scope: !4124)
!4133 = !DILocation(line: 1323, column: 20, scope: !4124)
!4134 = !DILocation(line: 1324, column: 4, scope: !4125)
!4135 = !DILocation(line: 1324, column: 9, scope: !4125)
!4136 = !DILocation(line: 1324, column: 19, scope: !4125)
!4137 = !DILocation(line: 1325, column: 12, scope: !4125)
!4138 = !DILocation(line: 1326, column: 13, scope: !4125)
!4139 = !DILocation(line: 1326, column: 4, scope: !4125)
!4140 = !DILocation(line: 1327, column: 8, scope: !4141)
!4141 = distinct !DILexicalBlock(scope: !4125, file: !244, line: 1327, column: 8)
!4142 = !DILocation(line: 1327, column: 25, scope: !4141)
!4143 = !DILocation(line: 1327, column: 33, scope: !4141)
!4144 = !DILocation(line: 1327, column: 30, scope: !4141)
!4145 = !DILocation(line: 1327, column: 8, scope: !4125)
!4146 = !DILocation(line: 1328, column: 12, scope: !4141)
!4147 = !DILocation(line: 1328, column: 5, scope: !4141)
!4148 = !DILocation(line: 1329, column: 9, scope: !4125)
!4149 = !DILocation(line: 1330, column: 3, scope: !4125)
!4150 = !DILocation(line: 1331, column: 12, scope: !4115)
!4151 = !DILocation(line: 1332, column: 2, scope: !4097)
!4152 = !DILocation(line: 1333, column: 11, scope: !4091)
!4153 = !DILocation(line: 1345, column: 8, scope: !3952)
!4154 = !DILocation(line: 1345, column: 6, scope: !3952)
!4155 = !DILocation(line: 1346, column: 6, scope: !4156)
!4156 = distinct !DILexicalBlock(scope: !3952, file: !244, line: 1346, column: 6)
!4157 = !DILocation(line: 1346, column: 6, scope: !3952)
!4158 = !DILocation(line: 1347, column: 8, scope: !4159)
!4159 = distinct !DILexicalBlock(scope: !4156, file: !244, line: 1346, column: 26)
!4160 = !DILocation(line: 1347, column: 12, scope: !4159)
!4161 = !DILocation(line: 1347, column: 23, scope: !4159)
!4162 = !DILocation(line: 1347, column: 21, scope: !4159)
!4163 = !DILocation(line: 1347, column: 6, scope: !4159)
!4164 = !DILocation(line: 1348, column: 6, scope: !4159)
!4165 = !DILocation(line: 1348, column: 9, scope: !4159)
!4166 = !DILocation(line: 1349, column: 2, scope: !4159)
!4167 = !DILocation(line: 1351, column: 6, scope: !4168)
!4168 = distinct !DILexicalBlock(scope: !4156, file: !244, line: 1349, column: 9)
!4169 = !DILocation(line: 1353, column: 5, scope: !3952)
!4170 = !DILocation(line: 1354, column: 11, scope: !3952)
!4171 = !DILocation(line: 1354, column: 15, scope: !3952)
!4172 = !DILocation(line: 1354, column: 29, scope: !3952)
!4173 = !DILocation(line: 1354, column: 27, scope: !3952)
!4174 = !DILocation(line: 1354, column: 9, scope: !3952)
!4175 = !DILocation(line: 1356, column: 10, scope: !3952)
!4176 = !DILocation(line: 1356, column: 15, scope: !3952)
!4177 = !DILocation(line: 1356, column: 25, scope: !3952)
!4178 = !DILocation(line: 1356, column: 8, scope: !3952)
!4179 = !DILocation(line: 1359, column: 11, scope: !3952)
!4180 = !DILocation(line: 1360, column: 19, scope: !4181)
!4181 = distinct !DILexicalBlock(scope: !3952, file: !244, line: 1360, column: 2)
!4182 = !DILocation(line: 1360, column: 12, scope: !4181)
!4183 = !DILocation(line: 1360, column: 34, scope: !4181)
!4184 = !DILocation(line: 1360, column: 7, scope: !4181)
!4185 = !DILocation(line: 1360, column: 39, scope: !4186)
!4186 = distinct !DILexicalBlock(scope: !4181, file: !244, line: 1360, column: 2)
!4187 = !DILocation(line: 1360, column: 44, scope: !4186)
!4188 = !DILocation(line: 1360, column: 61, scope: !4186)
!4189 = !DILocation(line: 1360, column: 53, scope: !4186)
!4190 = !DILocation(line: 1360, column: 51, scope: !4186)
!4191 = !DILocation(line: 1360, column: 2, scope: !4181)
!4192 = !DILocalVariable(name: "is_dir", scope: !4193, file: !244, line: 1361, type: !79)
!4193 = distinct !DILexicalBlock(scope: !4186, file: !244, line: 1360, column: 70)
!4194 = !DILocation(line: 1361, column: 8, scope: !4193)
!4195 = !DILocation(line: 1363, column: 8, scope: !4196)
!4196 = distinct !DILexicalBlock(scope: !4193, file: !244, line: 1363, column: 7)
!4197 = !DILocation(line: 1363, column: 26, scope: !4196)
!4198 = !DILocation(line: 1363, column: 29, scope: !4196)
!4199 = !DILocation(line: 1363, column: 7, scope: !4193)
!4200 = !DILocation(line: 1364, column: 4, scope: !4196)
!4201 = distinct !{!4201, !4191, !4202}
!4202 = !DILocation(line: 1475, column: 2, scope: !4181)
!4203 = !DILocation(line: 1366, column: 23, scope: !4204)
!4204 = distinct !DILexicalBlock(scope: !4193, file: !244, line: 1366, column: 7)
!4205 = !DILocation(line: 1366, column: 27, scope: !4204)
!4206 = !DILocation(line: 1366, column: 31, scope: !4204)
!4207 = !DILocation(line: 1367, column: 9, scope: !4204)
!4208 = !DILocation(line: 1366, column: 12, scope: !4204)
!4209 = !DILocation(line: 1366, column: 10, scope: !4204)
!4210 = !DILocation(line: 1367, column: 32, scope: !4204)
!4211 = !DILocation(line: 1366, column: 7, scope: !4193)
!4212 = !DILocation(line: 1368, column: 4, scope: !4204)
!4213 = !DILocation(line: 1369, column: 7, scope: !4214)
!4214 = distinct !DILexicalBlock(scope: !4193, file: !244, line: 1369, column: 7)
!4215 = !DILocation(line: 1369, column: 31, scope: !4214)
!4216 = !DILocation(line: 1369, column: 28, scope: !4214)
!4217 = !DILocation(line: 1369, column: 7, scope: !4193)
!4218 = !DILocation(line: 1371, column: 14, scope: !4219)
!4219 = distinct !DILexicalBlock(scope: !4214, file: !244, line: 1369, column: 39)
!4220 = !DILocation(line: 1371, column: 18, scope: !4219)
!4221 = !DILocation(line: 1371, column: 12, scope: !4219)
!4222 = !DILocation(line: 1372, column: 21, scope: !4223)
!4223 = distinct !DILexicalBlock(scope: !4219, file: !244, line: 1372, column: 8)
!4224 = !DILocation(line: 1372, column: 25, scope: !4223)
!4225 = !DILocation(line: 1372, column: 48, scope: !4223)
!4226 = !DILocation(line: 1372, column: 46, scope: !4223)
!4227 = !DILocation(line: 1372, column: 52, scope: !4223)
!4228 = !DILocation(line: 1372, column: 10, scope: !4223)
!4229 = !DILocation(line: 1372, column: 8, scope: !4219)
!4230 = !DILocation(line: 1372, column: 58, scope: !4223)
!4231 = !DILocation(line: 1378, column: 24, scope: !4232)
!4232 = distinct !DILexicalBlock(scope: !4223, file: !244, line: 1372, column: 58)
!4233 = !DILocation(line: 1378, column: 22, scope: !4232)
!4234 = !DILocation(line: 1379, column: 10, scope: !4232)
!4235 = !DILocation(line: 1379, column: 5, scope: !4232)
!4236 = !DILocation(line: 1380, column: 15, scope: !4232)
!4237 = !DILocation(line: 1380, column: 5, scope: !4232)
!4238 = !DILocation(line: 1381, column: 14, scope: !4232)
!4239 = !DILocation(line: 1381, column: 5, scope: !4232)
!4240 = !DILocation(line: 1382, column: 5, scope: !4232)
!4241 = !DILocation(line: 1382, column: 10, scope: !4232)
!4242 = !DILocation(line: 1382, column: 19, scope: !4232)
!4243 = !DILocation(line: 1383, column: 5, scope: !4232)
!4244 = !DILocation(line: 1384, column: 5, scope: !4232)
!4245 = !DILocation(line: 1385, column: 5, scope: !4232)
!4246 = !DILocation(line: 1388, column: 8, scope: !4247)
!4247 = distinct !DILexicalBlock(scope: !4219, file: !244, line: 1388, column: 8)
!4248 = !DILocation(line: 1388, column: 19, scope: !4247)
!4249 = !DILocation(line: 1388, column: 23, scope: !4247)
!4250 = !DILocation(line: 1388, column: 16, scope: !4247)
!4251 = !DILocation(line: 1388, column: 8, scope: !4219)
!4252 = !DILocation(line: 1389, column: 14, scope: !4253)
!4253 = distinct !DILexicalBlock(scope: !4247, file: !244, line: 1388, column: 33)
!4254 = !DILocation(line: 1390, column: 9, scope: !4255)
!4255 = distinct !DILexicalBlock(scope: !4253, file: !244, line: 1390, column: 9)
!4256 = !DILocation(line: 1390, column: 9, scope: !4253)
!4257 = !DILocation(line: 1391, column: 11, scope: !4255)
!4258 = !DILocation(line: 1391, column: 15, scope: !4255)
!4259 = !DILocation(line: 1391, column: 26, scope: !4255)
!4260 = !DILocation(line: 1391, column: 24, scope: !4255)
!4261 = !DILocation(line: 1391, column: 9, scope: !4255)
!4262 = !DILocation(line: 1391, column: 6, scope: !4255)
!4263 = !DILocation(line: 1392, column: 4, scope: !4253)
!4264 = !DILocation(line: 1393, column: 13, scope: !4219)
!4265 = !DILocation(line: 1393, column: 17, scope: !4219)
!4266 = !DILocation(line: 1393, column: 31, scope: !4219)
!4267 = !DILocation(line: 1393, column: 29, scope: !4219)
!4268 = !DILocation(line: 1393, column: 11, scope: !4219)
!4269 = !DILocation(line: 1394, column: 3, scope: !4219)
!4270 = !DILocation(line: 1396, column: 13, scope: !4193)
!4271 = !DILocation(line: 1396, column: 19, scope: !4193)
!4272 = !DILocation(line: 1396, column: 17, scope: !4193)
!4273 = !DILocation(line: 1396, column: 11, scope: !4193)
!4274 = !DILocation(line: 1397, column: 7, scope: !4275)
!4275 = distinct !DILexicalBlock(scope: !4193, file: !244, line: 1397, column: 7)
!4276 = !DILocation(line: 1397, column: 17, scope: !4275)
!4277 = !DILocation(line: 1397, column: 15, scope: !4275)
!4278 = !DILocation(line: 1397, column: 7, scope: !4193)
!4279 = !DILocation(line: 1404, column: 9, scope: !4280)
!4280 = distinct !DILexicalBlock(scope: !4275, file: !244, line: 1397, column: 22)
!4281 = !DILocation(line: 1404, column: 4, scope: !4280)
!4282 = !DILocation(line: 1405, column: 14, scope: !4280)
!4283 = !DILocation(line: 1405, column: 4, scope: !4280)
!4284 = !DILocation(line: 1406, column: 13, scope: !4280)
!4285 = !DILocation(line: 1406, column: 4, scope: !4280)
!4286 = !DILocation(line: 1407, column: 4, scope: !4280)
!4287 = !DILocation(line: 1407, column: 9, scope: !4280)
!4288 = !DILocation(line: 1407, column: 18, scope: !4280)
!4289 = !DILocation(line: 1408, column: 4, scope: !4280)
!4290 = !DILocation(line: 1409, column: 4, scope: !4280)
!4291 = !DILocation(line: 1410, column: 4, scope: !4280)
!4292 = !DILocation(line: 1412, column: 18, scope: !4193)
!4293 = !DILocation(line: 1412, column: 3, scope: !4193)
!4294 = !DILocation(line: 1412, column: 6, scope: !4193)
!4295 = !DILocation(line: 1412, column: 16, scope: !4193)
!4296 = !DILocation(line: 1413, column: 19, scope: !4193)
!4297 = !DILocation(line: 1413, column: 23, scope: !4193)
!4298 = !DILocation(line: 1413, column: 3, scope: !4193)
!4299 = !DILocation(line: 1413, column: 6, scope: !4193)
!4300 = !DILocation(line: 1413, column: 17, scope: !4193)
!4301 = !DILocation(line: 1414, column: 20, scope: !4193)
!4302 = !DILocation(line: 1414, column: 3, scope: !4193)
!4303 = !DILocation(line: 1414, column: 6, scope: !4193)
!4304 = !DILocation(line: 1414, column: 18, scope: !4193)
!4305 = !DILocation(line: 1422, column: 26, scope: !4193)
!4306 = !DILocation(line: 1422, column: 3, scope: !4193)
!4307 = !DILocation(line: 1422, column: 6, scope: !4193)
!4308 = !DILocation(line: 1422, column: 17, scope: !4193)
!4309 = !DILocation(line: 1422, column: 24, scope: !4193)
!4310 = !DILocation(line: 1425, column: 7, scope: !4311)
!4311 = distinct !DILexicalBlock(scope: !4193, file: !244, line: 1425, column: 7)
!4312 = !DILocation(line: 1425, column: 7, scope: !4193)
!4313 = !DILocation(line: 1426, column: 21, scope: !4314)
!4314 = distinct !DILexicalBlock(scope: !4311, file: !244, line: 1425, column: 27)
!4315 = !DILocation(line: 1426, column: 24, scope: !4314)
!4316 = !DILocation(line: 1426, column: 4, scope: !4314)
!4317 = !DILocation(line: 1426, column: 7, scope: !4314)
!4318 = !DILocation(line: 1426, column: 19, scope: !4314)
!4319 = !DILocation(line: 1427, column: 12, scope: !4314)
!4320 = !DILocation(line: 1427, column: 16, scope: !4314)
!4321 = !DILocation(line: 1427, column: 19, scope: !4314)
!4322 = !DILocation(line: 1427, column: 4, scope: !4314)
!4323 = !DILocation(line: 1427, column: 29, scope: !4314)
!4324 = !DILocation(line: 1427, column: 32, scope: !4314)
!4325 = !DILocation(line: 1427, column: 44, scope: !4314)
!4326 = !DILocation(line: 1428, column: 3, scope: !4314)
!4327 = !DILocation(line: 1429, column: 21, scope: !4311)
!4328 = !DILocation(line: 1429, column: 24, scope: !4311)
!4329 = !DILocation(line: 1429, column: 4, scope: !4311)
!4330 = !DILocation(line: 1429, column: 7, scope: !4311)
!4331 = !DILocation(line: 1429, column: 19, scope: !4311)
!4332 = !DILocation(line: 1431, column: 7, scope: !4333)
!4333 = distinct !DILexicalBlock(scope: !4193, file: !244, line: 1431, column: 7)
!4334 = !DILocation(line: 1431, column: 11, scope: !4333)
!4335 = !DILocation(line: 1431, column: 22, scope: !4333)
!4336 = !DILocation(line: 1431, column: 30, scope: !4333)
!4337 = !DILocation(line: 1431, column: 33, scope: !4333)
!4338 = !DILocation(line: 1431, column: 7, scope: !4193)
!4339 = !DILocalVariable(name: "skip_stat", scope: !4340, file: !244, line: 1444, type: !79)
!4340 = distinct !DILexicalBlock(scope: !4333, file: !244, line: 1431, column: 56)
!4341 = !DILocation(line: 1444, column: 9, scope: !4340)
!4342 = !DILocation(line: 1444, column: 22, scope: !4340)
!4343 = !DILocation(line: 1445, column: 8, scope: !4340)
!4344 = !DILocation(line: 1445, column: 11, scope: !4340)
!4345 = !DILocation(line: 1446, column: 8, scope: !4340)
!4346 = !DILocation(line: 1446, column: 11, scope: !4340)
!4347 = !DILocation(line: 1447, column: 8, scope: !4340)
!4348 = !DILocation(line: 1447, column: 13, scope: !4340)
!4349 = !DILocation(line: 1447, column: 11, scope: !4340)
!4350 = !DILocation(line: 1448, column: 4, scope: !4340)
!4351 = !DILocation(line: 1448, column: 7, scope: !4340)
!4352 = !DILocation(line: 1448, column: 16, scope: !4340)
!4353 = !DILocation(line: 1451, column: 19, scope: !4340)
!4354 = !DILocation(line: 1451, column: 22, scope: !4340)
!4355 = !DILocation(line: 1451, column: 33, scope: !4340)
!4356 = !DILocation(line: 1451, column: 4, scope: !4340)
!4357 = !DILocation(line: 1452, column: 26, scope: !4340)
!4358 = !DILocation(line: 1452, column: 30, scope: !4340)
!4359 = !DILocation(line: 1452, column: 29, scope: !4340)
!4360 = !DILocation(line: 1452, column: 4, scope: !4340)
!4361 = !DILocation(line: 1453, column: 14, scope: !4340)
!4362 = !DILocation(line: 1454, column: 7, scope: !4340)
!4363 = !DILocation(line: 1454, column: 10, scope: !4340)
!4364 = !DILocation(line: 1453, column: 11, scope: !4340)
!4365 = !DILocation(line: 1455, column: 3, scope: !4340)
!4366 = !DILocation(line: 1456, column: 27, scope: !4367)
!4367 = distinct !DILexicalBlock(scope: !4333, file: !244, line: 1455, column: 10)
!4368 = !DILocation(line: 1456, column: 31, scope: !4367)
!4369 = !DILocation(line: 1456, column: 18, scope: !4367)
!4370 = !DILocation(line: 1456, column: 4, scope: !4367)
!4371 = !DILocation(line: 1456, column: 7, scope: !4367)
!4372 = !DILocation(line: 1456, column: 16, scope: !4367)
!4373 = !DILocation(line: 1457, column: 14, scope: !4367)
!4374 = !DILocation(line: 1457, column: 17, scope: !4367)
!4375 = !DILocation(line: 1457, column: 26, scope: !4367)
!4376 = !DILocation(line: 1458, column: 7, scope: !4367)
!4377 = !DILocation(line: 1458, column: 10, scope: !4367)
!4378 = !DILocation(line: 1458, column: 13, scope: !4367)
!4379 = !DILocation(line: 1458, column: 22, scope: !4367)
!4380 = !DILocation(line: 1459, column: 7, scope: !4367)
!4381 = !DILocation(line: 1459, column: 10, scope: !4367)
!4382 = !DILocation(line: 1459, column: 13, scope: !4367)
!4383 = !DILocation(line: 1459, column: 22, scope: !4367)
!4384 = !DILocation(line: 1457, column: 11, scope: !4367)
!4385 = !DILocation(line: 1463, column: 7, scope: !4386)
!4386 = distinct !DILexicalBlock(scope: !4193, file: !244, line: 1463, column: 7)
!4387 = !DILocation(line: 1463, column: 14, scope: !4386)
!4388 = !DILocation(line: 1463, column: 18, scope: !4386)
!4389 = !DILocation(line: 1463, column: 21, scope: !4386)
!4390 = !DILocation(line: 1463, column: 7, scope: !4193)
!4391 = !DILocation(line: 1464, column: 14, scope: !4386)
!4392 = !DILocation(line: 1464, column: 11, scope: !4386)
!4393 = !DILocation(line: 1464, column: 4, scope: !4386)
!4394 = !DILocation(line: 1467, column: 3, scope: !4193)
!4395 = !DILocation(line: 1467, column: 6, scope: !4193)
!4396 = !DILocation(line: 1467, column: 15, scope: !4193)
!4397 = !DILocation(line: 1468, column: 7, scope: !4398)
!4398 = distinct !DILexicalBlock(scope: !4193, file: !244, line: 1468, column: 7)
!4399 = !DILocation(line: 1468, column: 12, scope: !4398)
!4400 = !DILocation(line: 1468, column: 7, scope: !4193)
!4401 = !DILocation(line: 1469, column: 18, scope: !4398)
!4402 = !DILocation(line: 1469, column: 16, scope: !4398)
!4403 = !DILocation(line: 1469, column: 9, scope: !4398)
!4404 = !DILocation(line: 1469, column: 4, scope: !4398)
!4405 = !DILocation(line: 1471, column: 21, scope: !4406)
!4406 = distinct !DILexicalBlock(scope: !4398, file: !244, line: 1470, column: 8)
!4407 = !DILocation(line: 1471, column: 4, scope: !4406)
!4408 = !DILocation(line: 1471, column: 10, scope: !4406)
!4409 = !DILocation(line: 1471, column: 19, scope: !4406)
!4410 = !DILocation(line: 1472, column: 11, scope: !4406)
!4411 = !DILocation(line: 1472, column: 9, scope: !4406)
!4412 = !DILocation(line: 1474, column: 3, scope: !4193)
!4413 = !DILocation(line: 1360, column: 2, scope: !4186)
!4414 = !DILocation(line: 1476, column: 6, scope: !4415)
!4415 = distinct !DILexicalBlock(scope: !3952, file: !244, line: 1476, column: 6)
!4416 = !DILocation(line: 1476, column: 6, scope: !3952)
!4417 = !DILocation(line: 1477, column: 12, scope: !4415)
!4418 = !DILocation(line: 1477, column: 3, scope: !4415)
!4419 = !DILocation(line: 1483, column: 6, scope: !4420)
!4420 = distinct !DILexicalBlock(scope: !3952, file: !244, line: 1483, column: 6)
!4421 = !DILocation(line: 1483, column: 6, scope: !3952)
!4422 = !DILocation(line: 1484, column: 15, scope: !4420)
!4423 = !DILocation(line: 1484, column: 19, scope: !4420)
!4424 = !DILocation(line: 1484, column: 3, scope: !4420)
!4425 = !DILocation(line: 1490, column: 6, scope: !4426)
!4426 = distinct !DILexicalBlock(scope: !3952, file: !244, line: 1490, column: 6)
!4427 = !DILocation(line: 1490, column: 6, scope: !3952)
!4428 = !DILocation(line: 1491, column: 7, scope: !4429)
!4429 = distinct !DILexicalBlock(scope: !4430, file: !244, line: 1491, column: 7)
!4430 = distinct !DILexicalBlock(scope: !4426, file: !244, line: 1490, column: 26)
!4431 = !DILocation(line: 1491, column: 14, scope: !4429)
!4432 = !DILocation(line: 1491, column: 18, scope: !4429)
!4433 = !DILocation(line: 1491, column: 11, scope: !4429)
!4434 = !DILocation(line: 1491, column: 30, scope: !4429)
!4435 = !DILocation(line: 1491, column: 33, scope: !4429)
!4436 = !DILocation(line: 1491, column: 40, scope: !4429)
!4437 = !DILocation(line: 1491, column: 7, scope: !4430)
!4438 = !DILocation(line: 1492, column: 4, scope: !4429)
!4439 = !DILocation(line: 1493, column: 4, scope: !4430)
!4440 = !DILocation(line: 1493, column: 7, scope: !4430)
!4441 = !DILocation(line: 1494, column: 2, scope: !4430)
!4442 = !DILocation(line: 1503, column: 6, scope: !4443)
!4443 = distinct !DILexicalBlock(scope: !3952, file: !244, line: 1503, column: 6)
!4444 = !DILocation(line: 1503, column: 14, scope: !4443)
!4445 = !DILocation(line: 1503, column: 18, scope: !4443)
!4446 = !DILocation(line: 1503, column: 23, scope: !4443)
!4447 = !DILocation(line: 1503, column: 33, scope: !4443)
!4448 = !DILocation(line: 1503, column: 37, scope: !4443)
!4449 = !DILocation(line: 1503, column: 45, scope: !4443)
!4450 = !DILocation(line: 1504, column: 7, scope: !4443)
!4451 = !DILocation(line: 1504, column: 12, scope: !4443)
!4452 = !DILocation(line: 1504, column: 22, scope: !4443)
!4453 = !DILocation(line: 1503, column: 6, scope: !3952)
!4454 = !DILocation(line: 1505, column: 9, scope: !4443)
!4455 = !DILocation(line: 1506, column: 28, scope: !4443)
!4456 = !DILocation(line: 1506, column: 32, scope: !4443)
!4457 = !DILocation(line: 1506, column: 37, scope: !4443)
!4458 = !DILocation(line: 1506, column: 9, scope: !4443)
!4459 = !DILocation(line: 1507, column: 3, scope: !4460)
!4460 = distinct !DILexicalBlock(scope: !4443, file: !244, line: 1506, column: 61)
!4461 = !DILocation(line: 1507, column: 8, scope: !4460)
!4462 = !DILocation(line: 1507, column: 17, scope: !4460)
!4463 = !DILocation(line: 1508, column: 3, scope: !4460)
!4464 = !DILocation(line: 1509, column: 13, scope: !4460)
!4465 = !DILocation(line: 1509, column: 3, scope: !4460)
!4466 = !DILocation(line: 1510, column: 3, scope: !4460)
!4467 = !DILocation(line: 1514, column: 7, scope: !4468)
!4468 = distinct !DILexicalBlock(scope: !3952, file: !244, line: 1514, column: 6)
!4469 = !DILocation(line: 1514, column: 6, scope: !3952)
!4470 = !DILocation(line: 1515, column: 7, scope: !4471)
!4471 = distinct !DILexicalBlock(scope: !4472, file: !244, line: 1515, column: 7)
!4472 = distinct !DILexicalBlock(scope: !4468, file: !244, line: 1514, column: 15)
!4473 = !DILocation(line: 1515, column: 12, scope: !4471)
!4474 = !DILocation(line: 1515, column: 7, scope: !4472)
!4475 = !DILocation(line: 1516, column: 4, scope: !4471)
!4476 = !DILocation(line: 1516, column: 9, scope: !4471)
!4477 = !DILocation(line: 1516, column: 18, scope: !4471)
!4478 = !DILocation(line: 1517, column: 13, scope: !4472)
!4479 = !DILocation(line: 1517, column: 3, scope: !4472)
!4480 = !DILocation(line: 1518, column: 3, scope: !4472)
!4481 = !DILocation(line: 1525, column: 6, scope: !4482)
!4482 = distinct !DILexicalBlock(scope: !3952, file: !244, line: 1525, column: 6)
!4483 = !DILocation(line: 1525, column: 13, scope: !4482)
!4484 = !DILocation(line: 1526, column: 6, scope: !4482)
!4485 = !DILocation(line: 1526, column: 10, scope: !4482)
!4486 = !DILocation(line: 1526, column: 14, scope: !4482)
!4487 = !DILocation(line: 1527, column: 6, scope: !4482)
!4488 = !DILocation(line: 1527, column: 9, scope: !4482)
!4489 = !DILocation(line: 1528, column: 6, scope: !4482)
!4490 = !DILocation(line: 1528, column: 42, scope: !4482)
!4491 = !DILocation(line: 1528, column: 46, scope: !4482)
!4492 = !DILocation(line: 1528, column: 9, scope: !4482)
!4493 = !DILocation(line: 1525, column: 6, scope: !3952)
!4494 = !DILocation(line: 1529, column: 3, scope: !4495)
!4495 = distinct !DILexicalBlock(scope: !4482, file: !244, line: 1528, column: 59)
!4496 = !DILocation(line: 1529, column: 7, scope: !4495)
!4497 = !DILocation(line: 1529, column: 18, scope: !4495)
!4498 = !DILocation(line: 1530, column: 20, scope: !4495)
!4499 = !DILocation(line: 1530, column: 24, scope: !4495)
!4500 = !DILocation(line: 1530, column: 30, scope: !4495)
!4501 = !DILocation(line: 1530, column: 10, scope: !4495)
!4502 = !DILocation(line: 1530, column: 8, scope: !4495)
!4503 = !DILocation(line: 1531, column: 3, scope: !4495)
!4504 = !DILocation(line: 1531, column: 7, scope: !4495)
!4505 = !DILocation(line: 1531, column: 18, scope: !4495)
!4506 = !DILocation(line: 1532, column: 2, scope: !4495)
!4507 = !DILocation(line: 1535, column: 6, scope: !4508)
!4508 = distinct !DILexicalBlock(scope: !3952, file: !244, line: 1535, column: 6)
!4509 = !DILocation(line: 1535, column: 10, scope: !4508)
!4510 = !DILocation(line: 1535, column: 21, scope: !4508)
!4511 = !DILocation(line: 1535, column: 24, scope: !4508)
!4512 = !DILocation(line: 1535, column: 31, scope: !4508)
!4513 = !DILocation(line: 1535, column: 6, scope: !3952)
!4514 = !DILocation(line: 1536, column: 19, scope: !4508)
!4515 = !DILocation(line: 1536, column: 23, scope: !4508)
!4516 = !DILocation(line: 1536, column: 29, scope: !4508)
!4517 = !DILocation(line: 1536, column: 10, scope: !4508)
!4518 = !DILocation(line: 1536, column: 8, scope: !4508)
!4519 = !DILocation(line: 1536, column: 3, scope: !4508)
!4520 = !DILocation(line: 1537, column: 10, scope: !3952)
!4521 = !DILocation(line: 1537, column: 2, scope: !3952)
!4522 = !DILocation(line: 1538, column: 1, scope: !3952)
!4523 = distinct !DISubprogram(name: "cwd_advance_fd", scope: !244, file: !244, line: 326, type: !4524, isLocal: true, isDefinition: true, scopeLine: 327, flags: DIFlagPrototyped, isOptimized: false, unit: !243, variables: !25)
!4524 = !DISubroutineType(types: !4525)
!4525 = !{null, !255, !23, !79}
!4526 = !DILocalVariable(name: "sp", arg: 1, scope: !4523, file: !244, line: 326, type: !255)
!4527 = !DILocation(line: 326, column: 22, scope: !4523)
!4528 = !DILocalVariable(name: "fd", arg: 2, scope: !4523, file: !244, line: 326, type: !23)
!4529 = !DILocation(line: 326, column: 30, scope: !4523)
!4530 = !DILocalVariable(name: "chdir_down_one", arg: 3, scope: !4523, file: !244, line: 326, type: !79)
!4531 = !DILocation(line: 326, column: 39, scope: !4523)
!4532 = !DILocalVariable(name: "old", scope: !4523, file: !244, line: 328, type: !23)
!4533 = !DILocation(line: 328, column: 7, scope: !4523)
!4534 = !DILocation(line: 328, column: 13, scope: !4523)
!4535 = !DILocation(line: 328, column: 17, scope: !4523)
!4536 = !DILocation(line: 329, column: 3, scope: !4523)
!4537 = distinct !{!4537, !4536, !4536}
!4538 = !DILocation(line: 329, column: 3, scope: !4539)
!4539 = distinct !DILexicalBlock(scope: !4540, file: !244, line: 329, column: 3)
!4540 = distinct !DILexicalBlock(scope: !4523, file: !244, line: 329, column: 3)
!4541 = !DILocation(line: 329, column: 3, scope: !4540)
!4542 = !DILocation(line: 331, column: 7, scope: !4543)
!4543 = distinct !DILexicalBlock(scope: !4523, file: !244, line: 331, column: 7)
!4544 = !DILocation(line: 331, column: 7, scope: !4523)
!4545 = !DILocalVariable(name: "prev_fd_in_slot", scope: !4546, file: !244, line: 335, type: !23)
!4546 = distinct !DILexicalBlock(scope: !4543, file: !244, line: 332, column: 5)
!4547 = !DILocation(line: 335, column: 11, scope: !4546)
!4548 = !DILocation(line: 335, column: 43, scope: !4546)
!4549 = !DILocation(line: 335, column: 47, scope: !4546)
!4550 = !DILocation(line: 335, column: 60, scope: !4546)
!4551 = !DILocation(line: 335, column: 29, scope: !4546)
!4552 = !DILocation(line: 337, column: 16, scope: !4553)
!4553 = distinct !DILexicalBlock(scope: !4546, file: !244, line: 337, column: 11)
!4554 = !DILocation(line: 337, column: 13, scope: !4553)
!4555 = !DILocation(line: 337, column: 11, scope: !4546)
!4556 = !DILocation(line: 338, column: 9, scope: !4553)
!4557 = !DILocation(line: 338, column: 2, scope: !4553)
!4558 = !DILocation(line: 339, column: 5, scope: !4546)
!4559 = !DILocation(line: 340, column: 15, scope: !4560)
!4560 = distinct !DILexicalBlock(scope: !4543, file: !244, line: 340, column: 13)
!4561 = !DILocation(line: 340, column: 13, scope: !4543)
!4562 = !DILocation(line: 342, column: 16, scope: !4563)
!4563 = distinct !DILexicalBlock(scope: !4564, file: !244, line: 342, column: 11)
!4564 = distinct !DILexicalBlock(scope: !4560, file: !244, line: 341, column: 5)
!4565 = !DILocation(line: 342, column: 13, scope: !4563)
!4566 = !DILocation(line: 342, column: 11, scope: !4564)
!4567 = !DILocation(line: 343, column: 9, scope: !4563)
!4568 = !DILocation(line: 343, column: 2, scope: !4563)
!4569 = !DILocation(line: 344, column: 5, scope: !4564)
!4570 = !DILocation(line: 346, column: 20, scope: !4523)
!4571 = !DILocation(line: 346, column: 3, scope: !4523)
!4572 = !DILocation(line: 346, column: 7, scope: !4523)
!4573 = !DILocation(line: 346, column: 18, scope: !4523)
!4574 = !DILocation(line: 347, column: 1, scope: !4523)
!4575 = distinct !DISubprogram(name: "fts_load", scope: !244, file: !244, line: 548, type: !3742, isLocal: true, isDefinition: true, scopeLine: 549, flags: DIFlagPrototyped, isOptimized: false, unit: !243, variables: !25)
!4576 = !DILocalVariable(name: "sp", arg: 1, scope: !4575, file: !244, line: 548, type: !255)
!4577 = !DILocation(line: 548, column: 16, scope: !4575)
!4578 = !DILocalVariable(name: "p", arg: 2, scope: !4575, file: !244, line: 548, type: !2190)
!4579 = !DILocation(line: 548, column: 37, scope: !4575)
!4580 = !DILocalVariable(name: "len", scope: !4575, file: !244, line: 550, type: !91)
!4581 = !DILocation(line: 550, column: 18, scope: !4575)
!4582 = !DILocalVariable(name: "cp", scope: !4575, file: !244, line: 551, type: !15)
!4583 = !DILocation(line: 551, column: 17, scope: !4575)
!4584 = !DILocation(line: 560, column: 25, scope: !4575)
!4585 = !DILocation(line: 560, column: 28, scope: !4575)
!4586 = !DILocation(line: 560, column: 8, scope: !4575)
!4587 = !DILocation(line: 560, column: 11, scope: !4575)
!4588 = !DILocation(line: 560, column: 23, scope: !4575)
!4589 = !DILocation(line: 560, column: 6, scope: !4575)
!4590 = !DILocation(line: 561, column: 10, scope: !4575)
!4591 = !DILocation(line: 561, column: 14, scope: !4575)
!4592 = !DILocation(line: 561, column: 24, scope: !4575)
!4593 = !DILocation(line: 561, column: 27, scope: !4575)
!4594 = !DILocation(line: 561, column: 2, scope: !4575)
!4595 = !DILocation(line: 561, column: 37, scope: !4575)
!4596 = !DILocation(line: 561, column: 41, scope: !4575)
!4597 = !DILocation(line: 562, column: 20, scope: !4598)
!4598 = distinct !DILexicalBlock(scope: !4575, file: !244, line: 562, column: 6)
!4599 = !DILocation(line: 562, column: 23, scope: !4598)
!4600 = !DILocation(line: 562, column: 12, scope: !4598)
!4601 = !DILocation(line: 562, column: 10, scope: !4598)
!4602 = !DILocation(line: 562, column: 39, scope: !4598)
!4603 = !DILocation(line: 562, column: 43, scope: !4598)
!4604 = !DILocation(line: 562, column: 49, scope: !4598)
!4605 = !DILocation(line: 562, column: 52, scope: !4598)
!4606 = !DILocation(line: 562, column: 46, scope: !4598)
!4607 = !DILocation(line: 562, column: 61, scope: !4598)
!4608 = !DILocation(line: 562, column: 64, scope: !4598)
!4609 = !DILocation(line: 562, column: 6, scope: !4575)
!4610 = !DILocation(line: 563, column: 16, scope: !4611)
!4611 = distinct !DILexicalBlock(scope: !4598, file: !244, line: 562, column: 72)
!4612 = !DILocation(line: 563, column: 9, scope: !4611)
!4613 = !DILocation(line: 563, column: 7, scope: !4611)
!4614 = !DILocation(line: 564, column: 11, scope: !4611)
!4615 = !DILocation(line: 564, column: 14, scope: !4611)
!4616 = !DILocation(line: 564, column: 3, scope: !4611)
!4617 = !DILocation(line: 564, column: 24, scope: !4611)
!4618 = !DILocation(line: 564, column: 28, scope: !4611)
!4619 = !DILocation(line: 564, column: 32, scope: !4611)
!4620 = !DILocation(line: 565, column: 20, scope: !4611)
!4621 = !DILocation(line: 565, column: 3, scope: !4611)
!4622 = !DILocation(line: 565, column: 6, scope: !4611)
!4623 = !DILocation(line: 565, column: 18, scope: !4611)
!4624 = !DILocation(line: 566, column: 2, scope: !4611)
!4625 = !DILocation(line: 567, column: 33, scope: !4575)
!4626 = !DILocation(line: 567, column: 37, scope: !4575)
!4627 = !DILocation(line: 567, column: 19, scope: !4575)
!4628 = !DILocation(line: 567, column: 22, scope: !4575)
!4629 = !DILocation(line: 567, column: 31, scope: !4575)
!4630 = !DILocation(line: 567, column: 2, scope: !4575)
!4631 = !DILocation(line: 567, column: 5, scope: !4575)
!4632 = !DILocation(line: 567, column: 17, scope: !4575)
!4633 = !DILocation(line: 568, column: 1, scope: !4575)
!4634 = distinct !DISubprogram(name: "link_count_optimize_ok", scope: !244, file: !244, line: 753, type: !4635, isLocal: true, isDefinition: true, scopeLine: 754, flags: DIFlagPrototyped, isOptimized: false, unit: !243, variables: !25)
!4635 = !DISubroutineType(types: !4636)
!4636 = !{!79, !407}
!4637 = !DILocalVariable(name: "p", arg: 1, scope: !4634, file: !244, line: 753, type: !407)
!4638 = !DILocation(line: 753, column: 39, scope: !4634)
!4639 = !DILocalVariable(name: "sp", scope: !4634, file: !244, line: 755, type: !255)
!4640 = !DILocation(line: 755, column: 8, scope: !4634)
!4641 = !DILocation(line: 755, column: 13, scope: !4634)
!4642 = !DILocation(line: 755, column: 16, scope: !4634)
!4643 = !DILocalVariable(name: "h", scope: !4634, file: !244, line: 756, type: !4644)
!4644 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4645, size: 64)
!4645 = !DIDerivedType(tag: DW_TAG_typedef, name: "Hash_table", file: !96, line: 61, baseType: !345)
!4646 = !DILocation(line: 756, column: 15, scope: !4634)
!4647 = !DILocation(line: 756, column: 19, scope: !4634)
!4648 = !DILocation(line: 756, column: 23, scope: !4634)
!4649 = !DILocalVariable(name: "tmp", scope: !4634, file: !244, line: 757, type: !4650)
!4650 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "LCO_ent", file: !244, line: 723, size: 128, elements: !4651)
!4651 = !{!4652, !4653}
!4652 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !4650, file: !244, line: 725, baseType: !329, size: 64)
!4653 = !DIDerivedType(tag: DW_TAG_member, name: "opt_ok", scope: !4650, file: !244, line: 726, baseType: !79, size: 8, offset: 64)
!4654 = !DILocation(line: 757, column: 18, scope: !4634)
!4655 = !DILocalVariable(name: "ent", scope: !4634, file: !244, line: 758, type: !4656)
!4656 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4650, size: 64)
!4657 = !DILocation(line: 758, column: 19, scope: !4634)
!4658 = !DILocalVariable(name: "opt_ok", scope: !4634, file: !244, line: 759, type: !79)
!4659 = !DILocation(line: 759, column: 8, scope: !4634)
!4660 = !DILocalVariable(name: "t2", scope: !4634, file: !244, line: 760, type: !4656)
!4661 = !DILocation(line: 760, column: 19, scope: !4634)
!4662 = !DILocation(line: 764, column: 8, scope: !4663)
!4663 = distinct !DILexicalBlock(scope: !4634, file: !244, line: 764, column: 7)
!4664 = !DILocation(line: 764, column: 7, scope: !4634)
!4665 = !DILocation(line: 765, column: 5, scope: !4663)
!4666 = !DILocation(line: 768, column: 7, scope: !4667)
!4667 = distinct !DILexicalBlock(scope: !4634, file: !244, line: 768, column: 7)
!4668 = !DILocation(line: 768, column: 9, scope: !4667)
!4669 = !DILocation(line: 768, column: 7, scope: !4634)
!4670 = !DILocation(line: 771, column: 4, scope: !4671)
!4671 = distinct !DILexicalBlock(scope: !4667, file: !244, line: 769, column: 5)
!4672 = !DILocation(line: 770, column: 11, scope: !4671)
!4673 = !DILocation(line: 770, column: 15, scope: !4671)
!4674 = !DILocation(line: 771, column: 2, scope: !4671)
!4675 = !DILocation(line: 770, column: 9, scope: !4671)
!4676 = !DILocation(line: 773, column: 11, scope: !4677)
!4677 = distinct !DILexicalBlock(scope: !4671, file: !244, line: 773, column: 11)
!4678 = !DILocation(line: 773, column: 13, scope: !4677)
!4679 = !DILocation(line: 773, column: 11, scope: !4671)
!4680 = !DILocation(line: 774, column: 2, scope: !4677)
!4681 = !DILocation(line: 775, column: 5, scope: !4671)
!4682 = !DILocation(line: 776, column: 16, scope: !4634)
!4683 = !DILocation(line: 776, column: 19, scope: !4634)
!4684 = !DILocation(line: 776, column: 30, scope: !4634)
!4685 = !DILocation(line: 776, column: 7, scope: !4634)
!4686 = !DILocation(line: 776, column: 14, scope: !4634)
!4687 = !DILocation(line: 777, column: 22, scope: !4634)
!4688 = !DILocation(line: 777, column: 25, scope: !4634)
!4689 = !DILocation(line: 777, column: 9, scope: !4634)
!4690 = !DILocation(line: 777, column: 7, scope: !4634)
!4691 = !DILocation(line: 778, column: 7, scope: !4692)
!4692 = distinct !DILexicalBlock(scope: !4634, file: !244, line: 778, column: 7)
!4693 = !DILocation(line: 778, column: 7, scope: !4634)
!4694 = !DILocation(line: 779, column: 12, scope: !4692)
!4695 = !DILocation(line: 779, column: 17, scope: !4692)
!4696 = !DILocation(line: 779, column: 5, scope: !4692)
!4697 = !DILocation(line: 782, column: 8, scope: !4634)
!4698 = !DILocation(line: 782, column: 6, scope: !4634)
!4699 = !DILocation(line: 783, column: 7, scope: !4700)
!4700 = distinct !DILexicalBlock(scope: !4634, file: !244, line: 783, column: 7)
!4701 = !DILocation(line: 783, column: 10, scope: !4700)
!4702 = !DILocation(line: 783, column: 7, scope: !4634)
!4703 = !DILocation(line: 784, column: 5, scope: !4700)
!4704 = !DILocation(line: 787, column: 39, scope: !4634)
!4705 = !DILocation(line: 787, column: 43, scope: !4634)
!4706 = !DILocation(line: 787, column: 12, scope: !4634)
!4707 = !DILocation(line: 787, column: 10, scope: !4634)
!4708 = !DILocation(line: 788, column: 16, scope: !4634)
!4709 = !DILocation(line: 788, column: 3, scope: !4634)
!4710 = !DILocation(line: 788, column: 7, scope: !4634)
!4711 = !DILocation(line: 788, column: 14, scope: !4634)
!4712 = !DILocation(line: 789, column: 16, scope: !4634)
!4713 = !DILocation(line: 789, column: 19, scope: !4634)
!4714 = !DILocation(line: 789, column: 30, scope: !4634)
!4715 = !DILocation(line: 789, column: 3, scope: !4634)
!4716 = !DILocation(line: 789, column: 7, scope: !4634)
!4717 = !DILocation(line: 789, column: 14, scope: !4634)
!4718 = !DILocation(line: 791, column: 22, scope: !4634)
!4719 = !DILocation(line: 791, column: 25, scope: !4634)
!4720 = !DILocation(line: 791, column: 9, scope: !4634)
!4721 = !DILocation(line: 791, column: 7, scope: !4634)
!4722 = !DILocation(line: 792, column: 7, scope: !4723)
!4723 = distinct !DILexicalBlock(scope: !4634, file: !244, line: 792, column: 7)
!4724 = !DILocation(line: 792, column: 11, scope: !4723)
!4725 = !DILocation(line: 792, column: 7, scope: !4634)
!4726 = !DILocation(line: 795, column: 13, scope: !4727)
!4727 = distinct !DILexicalBlock(scope: !4723, file: !244, line: 793, column: 5)
!4728 = !DILocation(line: 795, column: 7, scope: !4727)
!4729 = !DILocation(line: 796, column: 7, scope: !4727)
!4730 = !DILocation(line: 798, column: 3, scope: !4634)
!4731 = distinct !{!4731, !4730, !4730}
!4732 = !DILocation(line: 798, column: 3, scope: !4733)
!4733 = distinct !DILexicalBlock(scope: !4734, file: !244, line: 798, column: 3)
!4734 = distinct !DILexicalBlock(scope: !4634, file: !244, line: 798, column: 3)
!4735 = !DILocation(line: 798, column: 3, scope: !4734)
!4736 = !DILocation(line: 800, column: 10, scope: !4634)
!4737 = !DILocation(line: 800, column: 3, scope: !4634)
!4738 = !DILocation(line: 801, column: 1, scope: !4634)
!4739 = distinct !DISubprogram(name: "enter_dir", scope: !251, file: !251, line: 74, type: !4740, isLocal: true, isDefinition: true, scopeLine: 75, flags: DIFlagPrototyped, isOptimized: false, unit: !243, variables: !25)
!4740 = !DISubroutineType(types: !4741)
!4741 = !{!79, !255, !2190}
!4742 = !DILocalVariable(name: "fts", arg: 1, scope: !4739, file: !251, line: 74, type: !255)
!4743 = !DILocation(line: 74, column: 17, scope: !4739)
!4744 = !DILocalVariable(name: "ent", arg: 2, scope: !4739, file: !251, line: 74, type: !2190)
!4745 = !DILocation(line: 74, column: 30, scope: !4739)
!4746 = !DILocation(line: 76, column: 7, scope: !4747)
!4747 = distinct !DILexicalBlock(scope: !4739, file: !251, line: 76, column: 7)
!4748 = !DILocation(line: 76, column: 12, scope: !4747)
!4749 = !DILocation(line: 76, column: 24, scope: !4747)
!4750 = !DILocation(line: 76, column: 7, scope: !4739)
!4751 = !DILocalVariable(name: "st", scope: !4752, file: !251, line: 78, type: !3749)
!4752 = distinct !DILexicalBlock(scope: !4747, file: !251, line: 77, column: 5)
!4753 = !DILocation(line: 78, column: 26, scope: !4752)
!4754 = !DILocation(line: 78, column: 31, scope: !4752)
!4755 = !DILocation(line: 78, column: 36, scope: !4752)
!4756 = !DILocalVariable(name: "ad", scope: !4752, file: !251, line: 79, type: !4757)
!4757 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2962, size: 64)
!4758 = !DILocation(line: 79, column: 26, scope: !4752)
!4759 = !DILocation(line: 79, column: 31, scope: !4752)
!4760 = !DILocalVariable(name: "ad_from_table", scope: !4752, file: !251, line: 80, type: !4757)
!4761 = !DILocation(line: 80, column: 26, scope: !4752)
!4762 = !DILocation(line: 82, column: 12, scope: !4763)
!4763 = distinct !DILexicalBlock(scope: !4752, file: !251, line: 82, column: 11)
!4764 = !DILocation(line: 82, column: 11, scope: !4752)
!4765 = !DILocation(line: 83, column: 2, scope: !4763)
!4766 = !DILocation(line: 85, column: 17, scope: !4752)
!4767 = !DILocation(line: 85, column: 21, scope: !4752)
!4768 = !DILocation(line: 85, column: 7, scope: !4752)
!4769 = !DILocation(line: 85, column: 11, scope: !4752)
!4770 = !DILocation(line: 85, column: 15, scope: !4752)
!4771 = !DILocation(line: 86, column: 17, scope: !4752)
!4772 = !DILocation(line: 86, column: 21, scope: !4752)
!4773 = !DILocation(line: 86, column: 7, scope: !4752)
!4774 = !DILocation(line: 86, column: 11, scope: !4752)
!4775 = !DILocation(line: 86, column: 15, scope: !4752)
!4776 = !DILocation(line: 87, column: 21, scope: !4752)
!4777 = !DILocation(line: 87, column: 7, scope: !4752)
!4778 = !DILocation(line: 87, column: 11, scope: !4752)
!4779 = !DILocation(line: 87, column: 19, scope: !4752)
!4780 = !DILocation(line: 92, column: 36, scope: !4752)
!4781 = !DILocation(line: 92, column: 41, scope: !4752)
!4782 = !DILocation(line: 92, column: 51, scope: !4752)
!4783 = !DILocation(line: 92, column: 55, scope: !4752)
!4784 = !DILocation(line: 92, column: 23, scope: !4752)
!4785 = !DILocation(line: 92, column: 21, scope: !4752)
!4786 = !DILocation(line: 94, column: 11, scope: !4787)
!4787 = distinct !DILexicalBlock(scope: !4752, file: !251, line: 94, column: 11)
!4788 = !DILocation(line: 94, column: 28, scope: !4787)
!4789 = !DILocation(line: 94, column: 25, scope: !4787)
!4790 = !DILocation(line: 94, column: 11, scope: !4752)
!4791 = !DILocation(line: 96, column: 10, scope: !4792)
!4792 = distinct !DILexicalBlock(scope: !4787, file: !251, line: 95, column: 2)
!4793 = !DILocation(line: 96, column: 4, scope: !4792)
!4794 = !DILocation(line: 97, column: 9, scope: !4795)
!4795 = distinct !DILexicalBlock(scope: !4792, file: !251, line: 97, column: 8)
!4796 = !DILocation(line: 97, column: 8, scope: !4792)
!4797 = !DILocation(line: 98, column: 6, scope: !4795)
!4798 = !DILocation(line: 102, column: 21, scope: !4792)
!4799 = !DILocation(line: 102, column: 36, scope: !4792)
!4800 = !DILocation(line: 102, column: 4, scope: !4792)
!4801 = !DILocation(line: 102, column: 9, scope: !4792)
!4802 = !DILocation(line: 102, column: 19, scope: !4792)
!4803 = !DILocation(line: 103, column: 4, scope: !4792)
!4804 = !DILocation(line: 103, column: 9, scope: !4792)
!4805 = !DILocation(line: 103, column: 18, scope: !4792)
!4806 = !DILocation(line: 104, column: 2, scope: !4792)
!4807 = !DILocation(line: 105, column: 5, scope: !4752)
!4808 = !DILocation(line: 108, column: 24, scope: !4809)
!4809 = distinct !DILexicalBlock(scope: !4810, file: !251, line: 108, column: 11)
!4810 = distinct !DILexicalBlock(scope: !4747, file: !251, line: 107, column: 5)
!4811 = !DILocation(line: 108, column: 29, scope: !4809)
!4812 = !DILocation(line: 108, column: 39, scope: !4809)
!4813 = !DILocation(line: 108, column: 46, scope: !4809)
!4814 = !DILocation(line: 108, column: 51, scope: !4809)
!4815 = !DILocation(line: 108, column: 11, scope: !4809)
!4816 = !DILocation(line: 108, column: 11, scope: !4810)
!4817 = !DILocation(line: 114, column: 21, scope: !4818)
!4818 = distinct !DILexicalBlock(scope: !4809, file: !251, line: 109, column: 2)
!4819 = !DILocation(line: 114, column: 4, scope: !4818)
!4820 = !DILocation(line: 114, column: 9, scope: !4818)
!4821 = !DILocation(line: 114, column: 19, scope: !4818)
!4822 = !DILocation(line: 115, column: 4, scope: !4818)
!4823 = !DILocation(line: 115, column: 9, scope: !4818)
!4824 = !DILocation(line: 115, column: 18, scope: !4818)
!4825 = !DILocation(line: 116, column: 2, scope: !4818)
!4826 = !DILocation(line: 119, column: 3, scope: !4739)
!4827 = !DILocation(line: 120, column: 1, scope: !4739)
!4828 = distinct !DISubprogram(name: "LCO_hash", scope: !244, file: !244, line: 735, type: !2953, isLocal: true, isDefinition: true, scopeLine: 736, flags: DIFlagPrototyped, isOptimized: false, unit: !243, variables: !25)
!4829 = !DILocalVariable(name: "x", arg: 1, scope: !4828, file: !244, line: 735, type: !404)
!4830 = !DILocation(line: 735, column: 23, scope: !4828)
!4831 = !DILocalVariable(name: "table_size", arg: 2, scope: !4828, file: !244, line: 735, type: !91)
!4832 = !DILocation(line: 735, column: 33, scope: !4828)
!4833 = !DILocalVariable(name: "ax", scope: !4828, file: !244, line: 737, type: !4834)
!4834 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4835, size: 64)
!4835 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4650)
!4836 = !DILocation(line: 737, column: 25, scope: !4828)
!4837 = !DILocation(line: 737, column: 30, scope: !4828)
!4838 = !DILocation(line: 738, column: 22, scope: !4828)
!4839 = !DILocation(line: 738, column: 26, scope: !4828)
!4840 = !DILocation(line: 738, column: 35, scope: !4828)
!4841 = !DILocation(line: 738, column: 33, scope: !4828)
!4842 = !DILocation(line: 738, column: 3, scope: !4828)
!4843 = distinct !DISubprogram(name: "LCO_compare", scope: !244, file: !244, line: 742, type: !2975, isLocal: true, isDefinition: true, scopeLine: 743, flags: DIFlagPrototyped, isOptimized: false, unit: !243, variables: !25)
!4844 = !DILocalVariable(name: "x", arg: 1, scope: !4843, file: !244, line: 742, type: !404)
!4845 = !DILocation(line: 742, column: 26, scope: !4843)
!4846 = !DILocalVariable(name: "y", arg: 2, scope: !4843, file: !244, line: 742, type: !404)
!4847 = !DILocation(line: 742, column: 41, scope: !4843)
!4848 = !DILocalVariable(name: "ax", scope: !4843, file: !244, line: 744, type: !4834)
!4849 = !DILocation(line: 744, column: 25, scope: !4843)
!4850 = !DILocation(line: 744, column: 30, scope: !4843)
!4851 = !DILocalVariable(name: "ay", scope: !4843, file: !244, line: 745, type: !4834)
!4852 = !DILocation(line: 745, column: 25, scope: !4843)
!4853 = !DILocation(line: 745, column: 30, scope: !4843)
!4854 = !DILocation(line: 746, column: 10, scope: !4843)
!4855 = !DILocation(line: 746, column: 14, scope: !4843)
!4856 = !DILocation(line: 746, column: 24, scope: !4843)
!4857 = !DILocation(line: 746, column: 28, scope: !4843)
!4858 = !DILocation(line: 746, column: 21, scope: !4843)
!4859 = !DILocation(line: 746, column: 3, scope: !4843)
!4860 = distinct !DISubprogram(name: "leaf_optimization_applies", scope: !244, file: !244, line: 684, type: !4861, isLocal: true, isDefinition: true, scopeLine: 685, flags: DIFlagPrototyped, isOptimized: false, unit: !243, variables: !25)
!4861 = !DISubroutineType(types: !4862)
!4862 = !{!79, !23}
!4863 = !DILocalVariable(name: "dir_fd", arg: 1, scope: !4860, file: !244, line: 684, type: !23)
!4864 = !DILocation(line: 684, column: 32, scope: !4860)
!4865 = !DILocalVariable(name: "fs_buf", scope: !4860, file: !244, line: 686, type: !4866)
!4866 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "statfs", file: !4867, line: 24, size: 960, elements: !4868)
!4867 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/statfs.h", directory: "/home/ma481/Downloads/Chisel/chisel-bench/benchmark/chown-8.2/original/obj-llvm/lib")
!4868 = !{!4869, !4871, !4872, !4874, !4875, !4876, !4878, !4879, !4887, !4888, !4889, !4890}
!4869 = !DIDerivedType(tag: DW_TAG_member, name: "f_type", scope: !4866, file: !4867, line: 26, baseType: !4870, size: 64)
!4870 = !DIDerivedType(tag: DW_TAG_typedef, name: "__fsword_t", file: !192, line: 179, baseType: !268)
!4871 = !DIDerivedType(tag: DW_TAG_member, name: "f_bsize", scope: !4866, file: !4867, line: 27, baseType: !4870, size: 64, offset: 64)
!4872 = !DIDerivedType(tag: DW_TAG_member, name: "f_blocks", scope: !4866, file: !4867, line: 29, baseType: !4873, size: 64, offset: 128)
!4873 = !DIDerivedType(tag: DW_TAG_typedef, name: "__fsblkcnt_t", file: !192, line: 171, baseType: !34)
!4874 = !DIDerivedType(tag: DW_TAG_member, name: "f_bfree", scope: !4866, file: !4867, line: 30, baseType: !4873, size: 64, offset: 192)
!4875 = !DIDerivedType(tag: DW_TAG_member, name: "f_bavail", scope: !4866, file: !4867, line: 31, baseType: !4873, size: 64, offset: 256)
!4876 = !DIDerivedType(tag: DW_TAG_member, name: "f_files", scope: !4866, file: !4867, line: 32, baseType: !4877, size: 64, offset: 320)
!4877 = !DIDerivedType(tag: DW_TAG_typedef, name: "__fsfilcnt_t", file: !192, line: 175, baseType: !34)
!4878 = !DIDerivedType(tag: DW_TAG_member, name: "f_ffree", scope: !4866, file: !4867, line: 33, baseType: !4877, size: 64, offset: 384)
!4879 = !DIDerivedType(tag: DW_TAG_member, name: "f_fsid", scope: !4866, file: !4867, line: 41, baseType: !4880, size: 64, offset: 448)
!4880 = !DIDerivedType(tag: DW_TAG_typedef, name: "__fsid_t", file: !192, line: 143, baseType: !4881)
!4881 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !192, line: 143, size: 64, elements: !4882)
!4882 = !{!4883}
!4883 = !DIDerivedType(tag: DW_TAG_member, name: "__val", scope: !4881, file: !192, line: 143, baseType: !4884, size: 64)
!4884 = !DICompositeType(tag: DW_TAG_array_type, baseType: !23, size: 64, elements: !4885)
!4885 = !{!4886}
!4886 = !DISubrange(count: 2)
!4887 = !DIDerivedType(tag: DW_TAG_member, name: "f_namelen", scope: !4866, file: !4867, line: 42, baseType: !4870, size: 64, offset: 512)
!4888 = !DIDerivedType(tag: DW_TAG_member, name: "f_frsize", scope: !4866, file: !4867, line: 43, baseType: !4870, size: 64, offset: 576)
!4889 = !DIDerivedType(tag: DW_TAG_member, name: "f_flags", scope: !4866, file: !4867, line: 44, baseType: !4870, size: 64, offset: 640)
!4890 = !DIDerivedType(tag: DW_TAG_member, name: "f_spare", scope: !4866, file: !4867, line: 45, baseType: !4891, size: 256, offset: 704)
!4891 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4870, size: 256, elements: !374)
!4892 = !DILocation(line: 686, column: 17, scope: !4860)
!4893 = !DILocation(line: 689, column: 16, scope: !4894)
!4894 = distinct !DILexicalBlock(scope: !4860, file: !244, line: 689, column: 7)
!4895 = !DILocation(line: 689, column: 7, scope: !4894)
!4896 = !DILocation(line: 689, column: 33, scope: !4894)
!4897 = !DILocation(line: 689, column: 7, scope: !4860)
!4898 = !DILocation(line: 690, column: 5, scope: !4894)
!4899 = !DILocation(line: 695, column: 18, scope: !4860)
!4900 = !DILocation(line: 695, column: 3, scope: !4860)
!4901 = !DILocation(line: 700, column: 7, scope: !4902)
!4902 = distinct !DILexicalBlock(scope: !4860, file: !244, line: 696, column: 5)
!4903 = !DILocation(line: 709, column: 7, scope: !4902)
!4904 = !DILocation(line: 711, column: 1, scope: !4860)
!4905 = distinct !DISubprogram(name: "opendirat", scope: !244, file: !244, line: 300, type: !4906, isLocal: true, isDefinition: true, scopeLine: 301, flags: DIFlagPrototyped, isOptimized: false, unit: !243, variables: !25)
!4906 = !DISubroutineType(types: !4907)
!4907 = !{!3982, !23, !12}
!4908 = !DILocalVariable(name: "fd", arg: 1, scope: !4905, file: !244, line: 300, type: !23)
!4909 = !DILocation(line: 300, column: 16, scope: !4905)
!4910 = !DILocalVariable(name: "dir", arg: 2, scope: !4905, file: !244, line: 300, type: !12)
!4911 = !DILocation(line: 300, column: 32, scope: !4905)
!4912 = !DILocalVariable(name: "new_fd", scope: !4905, file: !244, line: 302, type: !23)
!4913 = !DILocation(line: 302, column: 7, scope: !4905)
!4914 = !DILocation(line: 302, column: 24, scope: !4905)
!4915 = !DILocation(line: 302, column: 28, scope: !4905)
!4916 = !DILocation(line: 302, column: 16, scope: !4905)
!4917 = !DILocalVariable(name: "dirp", scope: !4905, file: !244, line: 304, type: !3982)
!4918 = !DILocation(line: 304, column: 8, scope: !4905)
!4919 = !DILocation(line: 306, column: 7, scope: !4920)
!4920 = distinct !DILexicalBlock(scope: !4905, file: !244, line: 306, column: 7)
!4921 = !DILocation(line: 306, column: 14, scope: !4920)
!4922 = !DILocation(line: 306, column: 7, scope: !4905)
!4923 = !DILocation(line: 307, column: 5, scope: !4920)
!4924 = !DILocation(line: 308, column: 21, scope: !4905)
!4925 = !DILocation(line: 308, column: 3, scope: !4905)
!4926 = !DILocation(line: 309, column: 21, scope: !4905)
!4927 = !DILocation(line: 309, column: 10, scope: !4905)
!4928 = !DILocation(line: 309, column: 8, scope: !4905)
!4929 = !DILocation(line: 310, column: 7, scope: !4930)
!4930 = distinct !DILexicalBlock(scope: !4905, file: !244, line: 310, column: 7)
!4931 = !DILocation(line: 310, column: 12, scope: !4930)
!4932 = !DILocation(line: 310, column: 7, scope: !4905)
!4933 = !DILocalVariable(name: "saved_errno", scope: !4934, file: !244, line: 312, type: !23)
!4934 = distinct !DILexicalBlock(scope: !4930, file: !244, line: 311, column: 5)
!4935 = !DILocation(line: 312, column: 11, scope: !4934)
!4936 = !DILocation(line: 312, column: 25, scope: !4934)
!4937 = !DILocation(line: 313, column: 14, scope: !4934)
!4938 = !DILocation(line: 313, column: 7, scope: !4934)
!4939 = !DILocation(line: 314, column: 15, scope: !4934)
!4940 = !DILocation(line: 314, column: 7, scope: !4934)
!4941 = !DILocation(line: 314, column: 13, scope: !4934)
!4942 = !DILocation(line: 315, column: 5, scope: !4934)
!4943 = !DILocation(line: 316, column: 10, scope: !4905)
!4944 = !DILocation(line: 316, column: 3, scope: !4905)
!4945 = !DILocation(line: 317, column: 1, scope: !4905)
!4946 = distinct !DISubprogram(name: "set_stat_type", scope: !244, file: !244, line: 1171, type: !4947, isLocal: true, isDefinition: true, scopeLine: 1172, flags: DIFlagPrototyped, isOptimized: false, unit: !243, variables: !25)
!4947 = !DISubroutineType(types: !4948)
!4948 = !{null, !2646, !159}
!4949 = !DILocalVariable(name: "st", arg: 1, scope: !4946, file: !244, line: 1171, type: !2646)
!4950 = !DILocation(line: 1171, column: 29, scope: !4946)
!4951 = !DILocalVariable(name: "dtype", arg: 2, scope: !4946, file: !244, line: 1171, type: !159)
!4952 = !DILocation(line: 1171, column: 46, scope: !4946)
!4953 = !DILocalVariable(name: "type", scope: !4946, file: !244, line: 1173, type: !4954)
!4954 = !DIDerivedType(tag: DW_TAG_typedef, name: "mode_t", file: !190, line: 70, baseType: !296)
!4955 = !DILocation(line: 1173, column: 10, scope: !4946)
!4956 = !DILocation(line: 1174, column: 11, scope: !4946)
!4957 = !DILocation(line: 1174, column: 3, scope: !4946)
!4958 = !DILocation(line: 1177, column: 12, scope: !4959)
!4959 = distinct !DILexicalBlock(scope: !4946, file: !244, line: 1175, column: 5)
!4960 = !DILocation(line: 1178, column: 7, scope: !4959)
!4961 = !DILocation(line: 1180, column: 12, scope: !4959)
!4962 = !DILocation(line: 1181, column: 7, scope: !4959)
!4963 = !DILocation(line: 1183, column: 12, scope: !4959)
!4964 = !DILocation(line: 1184, column: 7, scope: !4959)
!4965 = !DILocation(line: 1186, column: 12, scope: !4959)
!4966 = !DILocation(line: 1187, column: 7, scope: !4959)
!4967 = !DILocation(line: 1189, column: 12, scope: !4959)
!4968 = !DILocation(line: 1190, column: 7, scope: !4959)
!4969 = !DILocation(line: 1192, column: 12, scope: !4959)
!4970 = !DILocation(line: 1193, column: 7, scope: !4959)
!4971 = !DILocation(line: 1195, column: 12, scope: !4959)
!4972 = !DILocation(line: 1196, column: 7, scope: !4959)
!4973 = !DILocation(line: 1198, column: 12, scope: !4959)
!4974 = !DILocation(line: 1199, column: 5, scope: !4959)
!4975 = !DILocation(line: 1200, column: 17, scope: !4946)
!4976 = !DILocation(line: 1200, column: 3, scope: !4946)
!4977 = !DILocation(line: 1200, column: 7, scope: !4946)
!4978 = !DILocation(line: 1200, column: 15, scope: !4946)
!4979 = !DILocation(line: 1201, column: 1, scope: !4946)
!4980 = distinct !DISubprogram(name: "fts_padjust", scope: !244, file: !244, line: 1910, type: !3742, isLocal: true, isDefinition: true, scopeLine: 1911, flags: DIFlagPrototyped, isOptimized: false, unit: !243, variables: !25)
!4981 = !DILocalVariable(name: "sp", arg: 1, scope: !4980, file: !244, line: 1910, type: !255)
!4982 = !DILocation(line: 1910, column: 19, scope: !4980)
!4983 = !DILocalVariable(name: "head", arg: 2, scope: !4980, file: !244, line: 1910, type: !2190)
!4984 = !DILocation(line: 1910, column: 31, scope: !4980)
!4985 = !DILocalVariable(name: "p", scope: !4980, file: !244, line: 1912, type: !2190)
!4986 = !DILocation(line: 1912, column: 10, scope: !4980)
!4987 = !DILocalVariable(name: "addr", scope: !4980, file: !244, line: 1913, type: !15)
!4988 = !DILocation(line: 1913, column: 8, scope: !4980)
!4989 = !DILocation(line: 1913, column: 15, scope: !4980)
!4990 = !DILocation(line: 1913, column: 19, scope: !4980)
!4991 = !DILocation(line: 1923, column: 11, scope: !4992)
!4992 = distinct !DILexicalBlock(scope: !4980, file: !244, line: 1923, column: 2)
!4993 = !DILocation(line: 1923, column: 15, scope: !4992)
!4994 = !DILocation(line: 1923, column: 9, scope: !4992)
!4995 = !DILocation(line: 1923, column: 7, scope: !4992)
!4996 = !DILocation(line: 1923, column: 26, scope: !4997)
!4997 = distinct !DILexicalBlock(scope: !4992, file: !244, line: 1923, column: 2)
!4998 = !DILocation(line: 1923, column: 2, scope: !4992)
!4999 = !DILocation(line: 1924, column: 3, scope: !4997)
!5000 = distinct !{!5000, !4999, !4999}
!5001 = !DILocation(line: 1924, column: 3, scope: !5002)
!5002 = distinct !DILexicalBlock(scope: !5003, file: !244, line: 1924, column: 3)
!5003 = distinct !DILexicalBlock(scope: !4997, file: !244, line: 1924, column: 3)
!5004 = !DILocation(line: 1924, column: 3, scope: !5003)
!5005 = !DILocation(line: 1924, column: 3, scope: !5006)
!5006 = distinct !DILexicalBlock(scope: !5002, file: !244, line: 1924, column: 3)
!5007 = !DILocation(line: 1923, column: 33, scope: !4997)
!5008 = !DILocation(line: 1923, column: 36, scope: !4997)
!5009 = !DILocation(line: 1923, column: 31, scope: !4997)
!5010 = !DILocation(line: 1923, column: 2, scope: !4997)
!5011 = distinct !{!5011, !4998, !5012}
!5012 = !DILocation(line: 1924, column: 3, scope: !4992)
!5013 = !DILocation(line: 1927, column: 11, scope: !5014)
!5014 = distinct !DILexicalBlock(scope: !4980, file: !244, line: 1927, column: 2)
!5015 = !DILocation(line: 1927, column: 9, scope: !5014)
!5016 = !DILocation(line: 1927, column: 7, scope: !5014)
!5017 = !DILocation(line: 1927, column: 17, scope: !5018)
!5018 = distinct !DILexicalBlock(scope: !5014, file: !244, line: 1927, column: 2)
!5019 = !DILocation(line: 1927, column: 20, scope: !5018)
!5020 = !DILocation(line: 1927, column: 30, scope: !5018)
!5021 = !DILocation(line: 1927, column: 2, scope: !5014)
!5022 = !DILocation(line: 1928, column: 3, scope: !5023)
!5023 = distinct !DILexicalBlock(scope: !5018, file: !244, line: 1927, column: 49)
!5024 = distinct !{!5024, !5022, !5022}
!5025 = !DILocation(line: 1928, column: 3, scope: !5026)
!5026 = distinct !DILexicalBlock(scope: !5027, file: !244, line: 1928, column: 3)
!5027 = distinct !DILexicalBlock(scope: !5023, file: !244, line: 1928, column: 3)
!5028 = !DILocation(line: 1928, column: 3, scope: !5027)
!5029 = !DILocation(line: 1928, column: 3, scope: !5030)
!5030 = distinct !DILexicalBlock(scope: !5026, file: !244, line: 1928, column: 3)
!5031 = !DILocation(line: 1929, column: 7, scope: !5023)
!5032 = !DILocation(line: 1929, column: 10, scope: !5023)
!5033 = !DILocation(line: 1929, column: 21, scope: !5023)
!5034 = !DILocation(line: 1929, column: 24, scope: !5023)
!5035 = !DILocation(line: 1929, column: 35, scope: !5023)
!5036 = !DILocation(line: 1929, column: 38, scope: !5023)
!5037 = !DILocation(line: 1929, column: 5, scope: !5023)
!5038 = !DILocation(line: 1927, column: 2, scope: !5018)
!5039 = distinct !{!5039, !5021, !5040}
!5040 = !DILocation(line: 1930, column: 2, scope: !5014)
!5041 = !DILocation(line: 1931, column: 1, scope: !4980)
!5042 = distinct !DISubprogram(name: "dirent_inode_sort_may_be_useful", scope: !244, file: !244, line: 652, type: !4861, isLocal: true, isDefinition: true, scopeLine: 653, flags: DIFlagPrototyped, isOptimized: false, unit: !243, variables: !25)
!5043 = !DILocalVariable(name: "dir_fd", arg: 1, scope: !5042, file: !244, line: 652, type: !23)
!5044 = !DILocation(line: 652, column: 38, scope: !5042)
!5045 = !DILocalVariable(name: "fs_buf", scope: !5042, file: !244, line: 659, type: !4866)
!5046 = !DILocation(line: 659, column: 17, scope: !5042)
!5047 = !DILocation(line: 662, column: 16, scope: !5048)
!5048 = distinct !DILexicalBlock(scope: !5042, file: !244, line: 662, column: 7)
!5049 = !DILocation(line: 662, column: 7, scope: !5048)
!5050 = !DILocation(line: 662, column: 33, scope: !5048)
!5051 = !DILocation(line: 662, column: 7, scope: !5042)
!5052 = !DILocation(line: 663, column: 5, scope: !5048)
!5053 = !DILocation(line: 667, column: 18, scope: !5042)
!5054 = !DILocation(line: 667, column: 3, scope: !5042)
!5055 = !DILocation(line: 673, column: 7, scope: !5056)
!5056 = distinct !DILexicalBlock(scope: !5042, file: !244, line: 668, column: 5)
!5057 = !DILocation(line: 676, column: 7, scope: !5056)
!5058 = !DILocation(line: 678, column: 1, scope: !5042)
!5059 = distinct !DISubprogram(name: "fts_compare_ino", scope: !244, file: !244, line: 1162, type: !337, isLocal: true, isDefinition: true, scopeLine: 1163, flags: DIFlagPrototyped, isOptimized: false, unit: !243, variables: !25)
!5060 = !DILocalVariable(name: "a", arg: 1, scope: !5059, file: !244, line: 1162, type: !339)
!5061 = !DILocation(line: 1162, column: 41, scope: !5059)
!5062 = !DILocalVariable(name: "b", arg: 2, scope: !5059, file: !244, line: 1162, type: !339)
!5063 = !DILocation(line: 1162, column: 67, scope: !5059)
!5064 = !DILocation(line: 1164, column: 11, scope: !5059)
!5065 = !DILocation(line: 1164, column: 17, scope: !5059)
!5066 = !DILocation(line: 1164, column: 28, scope: !5059)
!5067 = !DILocation(line: 1164, column: 37, scope: !5059)
!5068 = !DILocation(line: 1164, column: 43, scope: !5059)
!5069 = !DILocation(line: 1164, column: 54, scope: !5059)
!5070 = !DILocation(line: 1164, column: 35, scope: !5059)
!5071 = !DILocation(line: 1165, column: 6, scope: !5059)
!5072 = !DILocation(line: 1165, column: 12, scope: !5059)
!5073 = !DILocation(line: 1165, column: 23, scope: !5059)
!5074 = !DILocation(line: 1165, column: 32, scope: !5059)
!5075 = !DILocation(line: 1165, column: 38, scope: !5059)
!5076 = !DILocation(line: 1165, column: 49, scope: !5059)
!5077 = !DILocation(line: 1165, column: 30, scope: !5059)
!5078 = !DILocation(line: 1164, column: 3, scope: !5059)
!5079 = distinct !DISubprogram(name: "fts_set", scope: !244, file: !244, line: 1067, type: !5080, isLocal: false, isDefinition: true, scopeLine: 1068, flags: DIFlagPrototyped, isOptimized: false, unit: !243, variables: !25)
!5080 = !DISubroutineType(types: !5081)
!5081 = !{!23, !255, !2190, !23}
!5082 = !DILocalVariable(name: "sp", arg: 1, scope: !5079, file: !244, line: 1067, type: !255)
!5083 = !DILocation(line: 1067, column: 14, scope: !5079)
!5084 = !DILocalVariable(name: "p", arg: 2, scope: !5079, file: !244, line: 1067, type: !2190)
!5085 = !DILocation(line: 1067, column: 45, scope: !5079)
!5086 = !DILocalVariable(name: "instr", arg: 3, scope: !5079, file: !244, line: 1067, type: !23)
!5087 = !DILocation(line: 1067, column: 52, scope: !5079)
!5088 = !DILocation(line: 1069, column: 6, scope: !5089)
!5089 = distinct !DILexicalBlock(scope: !5079, file: !244, line: 1069, column: 6)
!5090 = !DILocation(line: 1069, column: 12, scope: !5089)
!5091 = !DILocation(line: 1069, column: 17, scope: !5089)
!5092 = !DILocation(line: 1069, column: 20, scope: !5089)
!5093 = !DILocation(line: 1069, column: 26, scope: !5089)
!5094 = !DILocation(line: 1069, column: 39, scope: !5089)
!5095 = !DILocation(line: 1069, column: 42, scope: !5089)
!5096 = !DILocation(line: 1069, column: 48, scope: !5089)
!5097 = !DILocation(line: 1069, column: 62, scope: !5089)
!5098 = !DILocation(line: 1070, column: 6, scope: !5089)
!5099 = !DILocation(line: 1070, column: 12, scope: !5089)
!5100 = !DILocation(line: 1070, column: 27, scope: !5089)
!5101 = !DILocation(line: 1070, column: 30, scope: !5089)
!5102 = !DILocation(line: 1070, column: 36, scope: !5089)
!5103 = !DILocation(line: 1069, column: 6, scope: !5079)
!5104 = !DILocation(line: 1071, column: 3, scope: !5105)
!5105 = distinct !DILexicalBlock(scope: !5089, file: !244, line: 1070, column: 49)
!5106 = !DILocation(line: 1072, column: 3, scope: !5105)
!5107 = !DILocation(line: 1074, column: 17, scope: !5079)
!5108 = !DILocation(line: 1074, column: 2, scope: !5079)
!5109 = !DILocation(line: 1074, column: 5, scope: !5079)
!5110 = !DILocation(line: 1074, column: 15, scope: !5079)
!5111 = !DILocation(line: 1075, column: 2, scope: !5079)
!5112 = !DILocation(line: 1076, column: 1, scope: !5079)
!5113 = distinct !DISubprogram(name: "fts_children", scope: !244, file: !244, line: 1079, type: !3953, isLocal: false, isDefinition: true, scopeLine: 1080, flags: DIFlagPrototyped, isOptimized: false, unit: !243, variables: !25)
!5114 = !DILocalVariable(name: "sp", arg: 1, scope: !5113, file: !244, line: 1079, type: !255)
!5115 = !DILocation(line: 1079, column: 29, scope: !5113)
!5116 = !DILocalVariable(name: "instr", arg: 2, scope: !5113, file: !244, line: 1079, type: !23)
!5117 = !DILocation(line: 1079, column: 37, scope: !5113)
!5118 = !DILocalVariable(name: "p", scope: !5113, file: !244, line: 1081, type: !2190)
!5119 = !DILocation(line: 1081, column: 19, scope: !5113)
!5120 = !DILocalVariable(name: "fd", scope: !5113, file: !244, line: 1082, type: !23)
!5121 = !DILocation(line: 1082, column: 6, scope: !5113)
!5122 = !DILocation(line: 1084, column: 6, scope: !5123)
!5123 = distinct !DILexicalBlock(scope: !5113, file: !244, line: 1084, column: 6)
!5124 = !DILocation(line: 1084, column: 12, scope: !5123)
!5125 = !DILocation(line: 1084, column: 17, scope: !5123)
!5126 = !DILocation(line: 1084, column: 20, scope: !5123)
!5127 = !DILocation(line: 1084, column: 26, scope: !5123)
!5128 = !DILocation(line: 1084, column: 6, scope: !5113)
!5129 = !DILocation(line: 1085, column: 3, scope: !5130)
!5130 = distinct !DILexicalBlock(scope: !5123, file: !244, line: 1084, column: 43)
!5131 = !DILocation(line: 1086, column: 3, scope: !5130)
!5132 = !DILocation(line: 1090, column: 6, scope: !5113)
!5133 = !DILocation(line: 1090, column: 10, scope: !5113)
!5134 = !DILocation(line: 1090, column: 4, scope: !5113)
!5135 = !DILocation(line: 1096, column: 2, scope: !5113)
!5136 = !DILocation(line: 1099, column: 6, scope: !5137)
!5137 = distinct !DILexicalBlock(scope: !5113, file: !244, line: 1099, column: 6)
!5138 = !DILocation(line: 1099, column: 6, scope: !5113)
!5139 = !DILocation(line: 1100, column: 3, scope: !5137)
!5140 = !DILocation(line: 1103, column: 6, scope: !5141)
!5141 = distinct !DILexicalBlock(scope: !5113, file: !244, line: 1103, column: 6)
!5142 = !DILocation(line: 1103, column: 9, scope: !5141)
!5143 = !DILocation(line: 1103, column: 18, scope: !5141)
!5144 = !DILocation(line: 1103, column: 6, scope: !5113)
!5145 = !DILocation(line: 1104, column: 11, scope: !5141)
!5146 = !DILocation(line: 1104, column: 14, scope: !5141)
!5147 = !DILocation(line: 1104, column: 3, scope: !5141)
!5148 = !DILocation(line: 1111, column: 6, scope: !5149)
!5149 = distinct !DILexicalBlock(scope: !5113, file: !244, line: 1111, column: 6)
!5150 = !DILocation(line: 1111, column: 9, scope: !5149)
!5151 = !DILocation(line: 1111, column: 18, scope: !5149)
!5152 = !DILocation(line: 1111, column: 6, scope: !5113)
!5153 = !DILocation(line: 1112, column: 3, scope: !5149)
!5154 = !DILocation(line: 1115, column: 6, scope: !5155)
!5155 = distinct !DILexicalBlock(scope: !5113, file: !244, line: 1115, column: 6)
!5156 = !DILocation(line: 1115, column: 10, scope: !5155)
!5157 = !DILocation(line: 1115, column: 20, scope: !5155)
!5158 = !DILocation(line: 1115, column: 6, scope: !5113)
!5159 = !DILocation(line: 1116, column: 13, scope: !5155)
!5160 = !DILocation(line: 1116, column: 17, scope: !5155)
!5161 = !DILocation(line: 1116, column: 3, scope: !5155)
!5162 = !DILocation(line: 1118, column: 6, scope: !5163)
!5163 = distinct !DILexicalBlock(scope: !5113, file: !244, line: 1118, column: 6)
!5164 = !DILocation(line: 1118, column: 12, scope: !5163)
!5165 = !DILocation(line: 1118, column: 6, scope: !5113)
!5166 = !DILocation(line: 1119, column: 3, scope: !5167)
!5167 = distinct !DILexicalBlock(scope: !5163, file: !244, line: 1118, column: 29)
!5168 = !DILocation(line: 1120, column: 9, scope: !5167)
!5169 = !DILocation(line: 1121, column: 2, scope: !5167)
!5170 = !DILocation(line: 1122, column: 9, scope: !5163)
!5171 = !DILocation(line: 1131, column: 6, scope: !5172)
!5172 = distinct !DILexicalBlock(scope: !5113, file: !244, line: 1131, column: 6)
!5173 = !DILocation(line: 1131, column: 9, scope: !5172)
!5174 = !DILocation(line: 1131, column: 19, scope: !5172)
!5175 = !DILocation(line: 1131, column: 36, scope: !5172)
!5176 = !DILocation(line: 1131, column: 39, scope: !5172)
!5177 = !DILocation(line: 1131, column: 42, scope: !5172)
!5178 = !DILocation(line: 1131, column: 57, scope: !5172)
!5179 = !DILocation(line: 1131, column: 64, scope: !5172)
!5180 = !DILocation(line: 1132, column: 6, scope: !5172)
!5181 = !DILocation(line: 1131, column: 6, scope: !5113)
!5182 = !DILocation(line: 1133, column: 37, scope: !5172)
!5183 = !DILocation(line: 1133, column: 41, scope: !5172)
!5184 = !DILocation(line: 1133, column: 27, scope: !5172)
!5185 = !DILocation(line: 1133, column: 11, scope: !5172)
!5186 = !DILocation(line: 1133, column: 15, scope: !5172)
!5187 = !DILocation(line: 1133, column: 25, scope: !5172)
!5188 = !DILocation(line: 1133, column: 3, scope: !5172)
!5189 = !DILocation(line: 1135, column: 21, scope: !5190)
!5190 = distinct !DILexicalBlock(scope: !5113, file: !244, line: 1135, column: 6)
!5191 = !DILocation(line: 1135, column: 12, scope: !5190)
!5192 = !DILocation(line: 1135, column: 10, scope: !5190)
!5193 = !DILocation(line: 1135, column: 31, scope: !5190)
!5194 = !DILocation(line: 1135, column: 6, scope: !5113)
!5195 = !DILocation(line: 1136, column: 11, scope: !5190)
!5196 = !DILocation(line: 1136, column: 15, scope: !5190)
!5197 = !DILocation(line: 1136, column: 25, scope: !5190)
!5198 = !DILocation(line: 1136, column: 3, scope: !5190)
!5199 = !DILocation(line: 1137, column: 28, scope: !5113)
!5200 = !DILocation(line: 1137, column: 32, scope: !5113)
!5201 = !DILocation(line: 1137, column: 18, scope: !5113)
!5202 = !DILocation(line: 1137, column: 2, scope: !5113)
!5203 = !DILocation(line: 1137, column: 6, scope: !5113)
!5204 = !DILocation(line: 1137, column: 16, scope: !5113)
!5205 = !DILocation(line: 1138, column: 6, scope: !5206)
!5206 = distinct !DILexicalBlock(scope: !5113, file: !244, line: 1138, column: 6)
!5207 = !DILocation(line: 1138, column: 6, scope: !5113)
!5208 = !DILocation(line: 1140, column: 22, scope: !5209)
!5209 = distinct !DILexicalBlock(scope: !5206, file: !244, line: 1139, column: 4)
!5210 = !DILocation(line: 1140, column: 26, scope: !5209)
!5211 = !DILocation(line: 1140, column: 6, scope: !5209)
!5212 = !DILocation(line: 1141, column: 4, scope: !5209)
!5213 = !DILocation(line: 1144, column: 17, scope: !5214)
!5214 = distinct !DILexicalBlock(scope: !5215, file: !244, line: 1144, column: 10)
!5215 = distinct !DILexicalBlock(scope: !5206, file: !244, line: 1143, column: 4)
!5216 = !DILocation(line: 1144, column: 10, scope: !5214)
!5217 = !DILocation(line: 1144, column: 10, scope: !5215)
!5218 = !DILocalVariable(name: "saved_errno", scope: !5219, file: !244, line: 1146, type: !23)
!5219 = distinct !DILexicalBlock(scope: !5214, file: !244, line: 1145, column: 8)
!5220 = !DILocation(line: 1146, column: 7, scope: !5219)
!5221 = !DILocation(line: 1146, column: 21, scope: !5219)
!5222 = !DILocation(line: 1147, column: 10, scope: !5219)
!5223 = !DILocation(line: 1147, column: 3, scope: !5219)
!5224 = !DILocation(line: 1148, column: 3, scope: !5219)
!5225 = !DILocation(line: 1149, column: 3, scope: !5219)
!5226 = !DILocation(line: 1151, column: 13, scope: !5215)
!5227 = !DILocation(line: 1151, column: 6, scope: !5215)
!5228 = !DILocation(line: 1153, column: 10, scope: !5113)
!5229 = !DILocation(line: 1153, column: 14, scope: !5113)
!5230 = !DILocation(line: 1153, column: 2, scope: !5113)
!5231 = !DILocation(line: 1154, column: 1, scope: !5113)
!5232 = distinct !DISubprogram(name: "hash_get_n_buckets", scope: !89, file: !89, line: 151, type: !5233, isLocal: false, isDefinition: true, scopeLine: 152, flags: DIFlagPrototyped, isOptimized: false, unit: !88, variables: !25)
!5233 = !DISubroutineType(types: !5234)
!5234 = !{!91, !5235}
!5235 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5236, size: 64)
!5236 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5237)
!5237 = !DIDerivedType(tag: DW_TAG_typedef, name: "Hash_table", file: !96, line: 61, baseType: !5238)
!5238 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hash_table", file: !89, line: 53, size: 640, elements: !5239)
!5239 = !{!5240, !5246, !5249, !5250, !5251, !5252, !5254, !5257, !5260, !5263}
!5240 = !DIDerivedType(tag: DW_TAG_member, name: "bucket", scope: !5238, file: !89, line: 58, baseType: !5241, size: 64)
!5241 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5242, size: 64)
!5242 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hash_entry", file: !89, line: 47, size: 128, elements: !5243)
!5243 = !{!5244, !5245}
!5244 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !5242, file: !89, line: 49, baseType: !16, size: 64)
!5245 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !5242, file: !89, line: 50, baseType: !5241, size: 64, offset: 64)
!5246 = !DIDerivedType(tag: DW_TAG_member, name: "bucket_limit", scope: !5238, file: !89, line: 59, baseType: !5247, size: 64, offset: 64)
!5247 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5248, size: 64)
!5248 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5242)
!5249 = !DIDerivedType(tag: DW_TAG_member, name: "n_buckets", scope: !5238, file: !89, line: 60, baseType: !91, size: 64, offset: 128)
!5250 = !DIDerivedType(tag: DW_TAG_member, name: "n_buckets_used", scope: !5238, file: !89, line: 61, baseType: !91, size: 64, offset: 192)
!5251 = !DIDerivedType(tag: DW_TAG_member, name: "n_entries", scope: !5238, file: !89, line: 62, baseType: !91, size: 64, offset: 256)
!5252 = !DIDerivedType(tag: DW_TAG_member, name: "tuning", scope: !5238, file: !89, line: 65, baseType: !5253, size: 64, offset: 320)
!5253 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !94, size: 64)
!5254 = !DIDerivedType(tag: DW_TAG_member, name: "hasher", scope: !5238, file: !89, line: 72, baseType: !5255, size: 64, offset: 384)
!5255 = !DIDerivedType(tag: DW_TAG_typedef, name: "Hash_hasher", file: !96, line: 40, baseType: !5256)
!5256 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2953, size: 64)
!5257 = !DIDerivedType(tag: DW_TAG_member, name: "comparator", scope: !5238, file: !89, line: 73, baseType: !5258, size: 64, offset: 448)
!5258 = !DIDerivedType(tag: DW_TAG_typedef, name: "Hash_comparator", file: !96, line: 41, baseType: !5259)
!5259 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2975, size: 64)
!5260 = !DIDerivedType(tag: DW_TAG_member, name: "data_freer", scope: !5238, file: !89, line: 74, baseType: !5261, size: 64, offset: 512)
!5261 = !DIDerivedType(tag: DW_TAG_typedef, name: "Hash_data_freer", file: !96, line: 42, baseType: !5262)
!5262 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1458, size: 64)
!5263 = !DIDerivedType(tag: DW_TAG_member, name: "free_entry_list", scope: !5238, file: !89, line: 77, baseType: !5241, size: 64, offset: 576)
!5264 = !DILocalVariable(name: "table", arg: 1, scope: !5232, file: !89, line: 151, type: !5235)
!5265 = !DILocation(line: 151, column: 39, scope: !5232)
!5266 = !DILocation(line: 153, column: 10, scope: !5232)
!5267 = !DILocation(line: 153, column: 17, scope: !5232)
!5268 = !DILocation(line: 153, column: 3, scope: !5232)
!5269 = distinct !DISubprogram(name: "hash_get_n_buckets_used", scope: !89, file: !89, line: 159, type: !5233, isLocal: false, isDefinition: true, scopeLine: 160, flags: DIFlagPrototyped, isOptimized: false, unit: !88, variables: !25)
!5270 = !DILocalVariable(name: "table", arg: 1, scope: !5269, file: !89, line: 159, type: !5235)
!5271 = !DILocation(line: 159, column: 44, scope: !5269)
!5272 = !DILocation(line: 161, column: 10, scope: !5269)
!5273 = !DILocation(line: 161, column: 17, scope: !5269)
!5274 = !DILocation(line: 161, column: 3, scope: !5269)
!5275 = distinct !DISubprogram(name: "hash_get_n_entries", scope: !89, file: !89, line: 167, type: !5233, isLocal: false, isDefinition: true, scopeLine: 168, flags: DIFlagPrototyped, isOptimized: false, unit: !88, variables: !25)
!5276 = !DILocalVariable(name: "table", arg: 1, scope: !5275, file: !89, line: 167, type: !5235)
!5277 = !DILocation(line: 167, column: 39, scope: !5275)
!5278 = !DILocation(line: 169, column: 10, scope: !5275)
!5279 = !DILocation(line: 169, column: 17, scope: !5275)
!5280 = !DILocation(line: 169, column: 3, scope: !5275)
!5281 = distinct !DISubprogram(name: "hash_get_max_bucket_length", scope: !89, file: !89, line: 175, type: !5233, isLocal: false, isDefinition: true, scopeLine: 176, flags: DIFlagPrototyped, isOptimized: false, unit: !88, variables: !25)
!5282 = !DILocalVariable(name: "table", arg: 1, scope: !5281, file: !89, line: 175, type: !5235)
!5283 = !DILocation(line: 175, column: 47, scope: !5281)
!5284 = !DILocalVariable(name: "bucket", scope: !5281, file: !89, line: 177, type: !5247)
!5285 = !DILocation(line: 177, column: 28, scope: !5281)
!5286 = !DILocalVariable(name: "max_bucket_length", scope: !5281, file: !89, line: 178, type: !91)
!5287 = !DILocation(line: 178, column: 10, scope: !5281)
!5288 = !DILocation(line: 180, column: 17, scope: !5289)
!5289 = distinct !DILexicalBlock(scope: !5281, file: !89, line: 180, column: 3)
!5290 = !DILocation(line: 180, column: 24, scope: !5289)
!5291 = !DILocation(line: 180, column: 15, scope: !5289)
!5292 = !DILocation(line: 180, column: 8, scope: !5289)
!5293 = !DILocation(line: 180, column: 32, scope: !5294)
!5294 = distinct !DILexicalBlock(scope: !5289, file: !89, line: 180, column: 3)
!5295 = !DILocation(line: 180, column: 41, scope: !5294)
!5296 = !DILocation(line: 180, column: 48, scope: !5294)
!5297 = !DILocation(line: 180, column: 39, scope: !5294)
!5298 = !DILocation(line: 180, column: 3, scope: !5289)
!5299 = !DILocation(line: 182, column: 11, scope: !5300)
!5300 = distinct !DILexicalBlock(scope: !5301, file: !89, line: 182, column: 11)
!5301 = distinct !DILexicalBlock(scope: !5294, file: !89, line: 181, column: 5)
!5302 = !DILocation(line: 182, column: 19, scope: !5300)
!5303 = !DILocation(line: 182, column: 11, scope: !5301)
!5304 = !DILocalVariable(name: "cursor", scope: !5305, file: !89, line: 184, type: !5247)
!5305 = distinct !DILexicalBlock(scope: !5300, file: !89, line: 183, column: 2)
!5306 = !DILocation(line: 184, column: 29, scope: !5305)
!5307 = !DILocation(line: 184, column: 38, scope: !5305)
!5308 = !DILocalVariable(name: "bucket_length", scope: !5305, file: !89, line: 185, type: !91)
!5309 = !DILocation(line: 185, column: 11, scope: !5305)
!5310 = !DILocation(line: 187, column: 4, scope: !5305)
!5311 = !DILocation(line: 187, column: 20, scope: !5305)
!5312 = !DILocation(line: 187, column: 28, scope: !5305)
!5313 = !DILocation(line: 187, column: 18, scope: !5305)
!5314 = !DILocation(line: 187, column: 34, scope: !5305)
!5315 = !DILocation(line: 188, column: 19, scope: !5305)
!5316 = distinct !{!5316, !5310, !5315}
!5317 = !DILocation(line: 190, column: 8, scope: !5318)
!5318 = distinct !DILexicalBlock(scope: !5305, file: !89, line: 190, column: 8)
!5319 = !DILocation(line: 190, column: 24, scope: !5318)
!5320 = !DILocation(line: 190, column: 22, scope: !5318)
!5321 = !DILocation(line: 190, column: 8, scope: !5305)
!5322 = !DILocation(line: 191, column: 26, scope: !5318)
!5323 = !DILocation(line: 191, column: 24, scope: !5318)
!5324 = !DILocation(line: 191, column: 6, scope: !5318)
!5325 = !DILocation(line: 192, column: 2, scope: !5305)
!5326 = !DILocation(line: 193, column: 5, scope: !5301)
!5327 = !DILocation(line: 180, column: 68, scope: !5294)
!5328 = !DILocation(line: 180, column: 3, scope: !5294)
!5329 = distinct !{!5329, !5298, !5330}
!5330 = !DILocation(line: 193, column: 5, scope: !5289)
!5331 = !DILocation(line: 195, column: 10, scope: !5281)
!5332 = !DILocation(line: 195, column: 3, scope: !5281)
!5333 = distinct !DISubprogram(name: "hash_table_ok", scope: !89, file: !89, line: 202, type: !5334, isLocal: false, isDefinition: true, scopeLine: 203, flags: DIFlagPrototyped, isOptimized: false, unit: !88, variables: !25)
!5334 = !DISubroutineType(types: !5335)
!5335 = !{!79, !5235}
!5336 = !DILocalVariable(name: "table", arg: 1, scope: !5333, file: !89, line: 202, type: !5235)
!5337 = !DILocation(line: 202, column: 34, scope: !5333)
!5338 = !DILocalVariable(name: "bucket", scope: !5333, file: !89, line: 204, type: !5247)
!5339 = !DILocation(line: 204, column: 28, scope: !5333)
!5340 = !DILocalVariable(name: "n_buckets_used", scope: !5333, file: !89, line: 205, type: !91)
!5341 = !DILocation(line: 205, column: 10, scope: !5333)
!5342 = !DILocalVariable(name: "n_entries", scope: !5333, file: !89, line: 206, type: !91)
!5343 = !DILocation(line: 206, column: 10, scope: !5333)
!5344 = !DILocation(line: 208, column: 17, scope: !5345)
!5345 = distinct !DILexicalBlock(scope: !5333, file: !89, line: 208, column: 3)
!5346 = !DILocation(line: 208, column: 24, scope: !5345)
!5347 = !DILocation(line: 208, column: 15, scope: !5345)
!5348 = !DILocation(line: 208, column: 8, scope: !5345)
!5349 = !DILocation(line: 208, column: 32, scope: !5350)
!5350 = distinct !DILexicalBlock(scope: !5345, file: !89, line: 208, column: 3)
!5351 = !DILocation(line: 208, column: 41, scope: !5350)
!5352 = !DILocation(line: 208, column: 48, scope: !5350)
!5353 = !DILocation(line: 208, column: 39, scope: !5350)
!5354 = !DILocation(line: 208, column: 3, scope: !5345)
!5355 = !DILocation(line: 210, column: 11, scope: !5356)
!5356 = distinct !DILexicalBlock(scope: !5357, file: !89, line: 210, column: 11)
!5357 = distinct !DILexicalBlock(scope: !5350, file: !89, line: 209, column: 5)
!5358 = !DILocation(line: 210, column: 19, scope: !5356)
!5359 = !DILocation(line: 210, column: 11, scope: !5357)
!5360 = !DILocalVariable(name: "cursor", scope: !5361, file: !89, line: 212, type: !5247)
!5361 = distinct !DILexicalBlock(scope: !5356, file: !89, line: 211, column: 2)
!5362 = !DILocation(line: 212, column: 29, scope: !5361)
!5363 = !DILocation(line: 212, column: 38, scope: !5361)
!5364 = !DILocation(line: 215, column: 18, scope: !5361)
!5365 = !DILocation(line: 216, column: 13, scope: !5361)
!5366 = !DILocation(line: 219, column: 4, scope: !5361)
!5367 = !DILocation(line: 219, column: 20, scope: !5361)
!5368 = !DILocation(line: 219, column: 28, scope: !5361)
!5369 = !DILocation(line: 219, column: 18, scope: !5361)
!5370 = !DILocation(line: 219, column: 34, scope: !5361)
!5371 = !DILocation(line: 220, column: 15, scope: !5361)
!5372 = distinct !{!5372, !5366, !5371}
!5373 = !DILocation(line: 221, column: 2, scope: !5361)
!5374 = !DILocation(line: 222, column: 5, scope: !5357)
!5375 = !DILocation(line: 208, column: 68, scope: !5350)
!5376 = !DILocation(line: 208, column: 3, scope: !5350)
!5377 = distinct !{!5377, !5354, !5378}
!5378 = !DILocation(line: 222, column: 5, scope: !5345)
!5379 = !DILocation(line: 224, column: 7, scope: !5380)
!5380 = distinct !DILexicalBlock(scope: !5333, file: !89, line: 224, column: 7)
!5381 = !DILocation(line: 224, column: 25, scope: !5380)
!5382 = !DILocation(line: 224, column: 32, scope: !5380)
!5383 = !DILocation(line: 224, column: 22, scope: !5380)
!5384 = !DILocation(line: 224, column: 47, scope: !5380)
!5385 = !DILocation(line: 224, column: 50, scope: !5380)
!5386 = !DILocation(line: 224, column: 63, scope: !5380)
!5387 = !DILocation(line: 224, column: 70, scope: !5380)
!5388 = !DILocation(line: 224, column: 60, scope: !5380)
!5389 = !DILocation(line: 224, column: 7, scope: !5333)
!5390 = !DILocation(line: 225, column: 5, scope: !5380)
!5391 = !DILocation(line: 227, column: 3, scope: !5333)
!5392 = !DILocation(line: 228, column: 1, scope: !5333)
!5393 = distinct !DISubprogram(name: "hash_print_statistics", scope: !89, file: !89, line: 231, type: !5394, isLocal: false, isDefinition: true, scopeLine: 232, flags: DIFlagPrototyped, isOptimized: false, unit: !88, variables: !25)
!5394 = !DISubroutineType(types: !5395)
!5395 = !{null, !5235, !5396}
!5396 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5397, size: 64)
!5397 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !1770, line: 7, baseType: !5398)
!5398 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !1772, line: 245, size: 1728, elements: !5399)
!5399 = !{!5400, !5401, !5402, !5403, !5404, !5405, !5406, !5407, !5408, !5409, !5410, !5411, !5412, !5420, !5421, !5422, !5423, !5424, !5425, !5426, !5427, !5428, !5429, !5430, !5431, !5432, !5433, !5434, !5435}
!5400 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !5398, file: !1772, line: 246, baseType: !23, size: 32)
!5401 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !5398, file: !1772, line: 251, baseType: !15, size: 64, offset: 64)
!5402 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !5398, file: !1772, line: 252, baseType: !15, size: 64, offset: 128)
!5403 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !5398, file: !1772, line: 253, baseType: !15, size: 64, offset: 192)
!5404 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !5398, file: !1772, line: 254, baseType: !15, size: 64, offset: 256)
!5405 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !5398, file: !1772, line: 255, baseType: !15, size: 64, offset: 320)
!5406 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !5398, file: !1772, line: 256, baseType: !15, size: 64, offset: 384)
!5407 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !5398, file: !1772, line: 257, baseType: !15, size: 64, offset: 448)
!5408 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !5398, file: !1772, line: 258, baseType: !15, size: 64, offset: 512)
!5409 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !5398, file: !1772, line: 260, baseType: !15, size: 64, offset: 576)
!5410 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !5398, file: !1772, line: 261, baseType: !15, size: 64, offset: 640)
!5411 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !5398, file: !1772, line: 262, baseType: !15, size: 64, offset: 704)
!5412 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !5398, file: !1772, line: 264, baseType: !5413, size: 64, offset: 768)
!5413 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5414, size: 64)
!5414 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !1772, line: 160, size: 192, elements: !5415)
!5415 = !{!5416, !5417, !5419}
!5416 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !5414, file: !1772, line: 161, baseType: !5413, size: 64)
!5417 = !DIDerivedType(tag: DW_TAG_member, name: "_sbuf", scope: !5414, file: !1772, line: 162, baseType: !5418, size: 64, offset: 64)
!5418 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5398, size: 64)
!5419 = !DIDerivedType(tag: DW_TAG_member, name: "_pos", scope: !5414, file: !1772, line: 166, baseType: !23, size: 32, offset: 128)
!5420 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !5398, file: !1772, line: 266, baseType: !5418, size: 64, offset: 832)
!5421 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !5398, file: !1772, line: 268, baseType: !23, size: 32, offset: 896)
!5422 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !5398, file: !1772, line: 272, baseType: !23, size: 32, offset: 928)
!5423 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !5398, file: !1772, line: 274, baseType: !302, size: 64, offset: 960)
!5424 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !5398, file: !1772, line: 278, baseType: !143, size: 16, offset: 1024)
!5425 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !5398, file: !1772, line: 279, baseType: !1800, size: 8, offset: 1040)
!5426 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !5398, file: !1772, line: 280, baseType: !324, size: 8, offset: 1048)
!5427 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !5398, file: !1772, line: 284, baseType: !1803, size: 64, offset: 1088)
!5428 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !5398, file: !1772, line: 293, baseType: !1806, size: 64, offset: 1152)
!5429 = !DIDerivedType(tag: DW_TAG_member, name: "__pad1", scope: !5398, file: !1772, line: 301, baseType: !16, size: 64, offset: 1216)
!5430 = !DIDerivedType(tag: DW_TAG_member, name: "__pad2", scope: !5398, file: !1772, line: 302, baseType: !16, size: 64, offset: 1280)
!5431 = !DIDerivedType(tag: DW_TAG_member, name: "__pad3", scope: !5398, file: !1772, line: 303, baseType: !16, size: 64, offset: 1344)
!5432 = !DIDerivedType(tag: DW_TAG_member, name: "__pad4", scope: !5398, file: !1772, line: 304, baseType: !16, size: 64, offset: 1408)
!5433 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !5398, file: !1772, line: 306, baseType: !91, size: 64, offset: 1472)
!5434 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !5398, file: !1772, line: 307, baseType: !23, size: 32, offset: 1536)
!5435 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !5398, file: !1772, line: 309, baseType: !1814, size: 160, offset: 1568)
!5436 = !DILocalVariable(name: "table", arg: 1, scope: !5393, file: !89, line: 231, type: !5235)
!5437 = !DILocation(line: 231, column: 42, scope: !5393)
!5438 = !DILocalVariable(name: "stream", arg: 2, scope: !5393, file: !89, line: 231, type: !5396)
!5439 = !DILocation(line: 231, column: 55, scope: !5393)
!5440 = !DILocalVariable(name: "n_entries", scope: !5393, file: !89, line: 233, type: !91)
!5441 = !DILocation(line: 233, column: 10, scope: !5393)
!5442 = !DILocation(line: 233, column: 42, scope: !5393)
!5443 = !DILocation(line: 233, column: 22, scope: !5393)
!5444 = !DILocalVariable(name: "n_buckets", scope: !5393, file: !89, line: 234, type: !91)
!5445 = !DILocation(line: 234, column: 10, scope: !5393)
!5446 = !DILocation(line: 234, column: 42, scope: !5393)
!5447 = !DILocation(line: 234, column: 22, scope: !5393)
!5448 = !DILocalVariable(name: "n_buckets_used", scope: !5393, file: !89, line: 235, type: !91)
!5449 = !DILocation(line: 235, column: 10, scope: !5393)
!5450 = !DILocation(line: 235, column: 52, scope: !5393)
!5451 = !DILocation(line: 235, column: 27, scope: !5393)
!5452 = !DILocalVariable(name: "max_bucket_length", scope: !5393, file: !89, line: 236, type: !91)
!5453 = !DILocation(line: 236, column: 10, scope: !5393)
!5454 = !DILocation(line: 236, column: 58, scope: !5393)
!5455 = !DILocation(line: 236, column: 30, scope: !5393)
!5456 = !DILocation(line: 238, column: 12, scope: !5393)
!5457 = !DILocation(line: 238, column: 68, scope: !5393)
!5458 = !DILocation(line: 238, column: 3, scope: !5393)
!5459 = !DILocation(line: 239, column: 12, scope: !5393)
!5460 = !DILocation(line: 239, column: 68, scope: !5393)
!5461 = !DILocation(line: 239, column: 3, scope: !5393)
!5462 = !DILocation(line: 240, column: 12, scope: !5393)
!5463 = !DILocation(line: 241, column: 25, scope: !5393)
!5464 = !DILocation(line: 242, column: 14, scope: !5393)
!5465 = !DILocation(line: 242, column: 12, scope: !5393)
!5466 = !DILocation(line: 242, column: 32, scope: !5393)
!5467 = !DILocation(line: 242, column: 30, scope: !5393)
!5468 = !DILocation(line: 240, column: 3, scope: !5393)
!5469 = !DILocation(line: 243, column: 12, scope: !5393)
!5470 = !DILocation(line: 244, column: 25, scope: !5393)
!5471 = !DILocation(line: 243, column: 3, scope: !5393)
!5472 = !DILocation(line: 245, column: 1, scope: !5393)
!5473 = distinct !DISubprogram(name: "hash_lookup", scope: !89, file: !89, line: 251, type: !5474, isLocal: false, isDefinition: true, scopeLine: 252, flags: DIFlagPrototyped, isOptimized: false, unit: !88, variables: !25)
!5474 = !DISubroutineType(types: !5475)
!5475 = !{!16, !5235, !404}
!5476 = !DILocalVariable(name: "table", arg: 1, scope: !5473, file: !89, line: 251, type: !5235)
!5477 = !DILocation(line: 251, column: 32, scope: !5473)
!5478 = !DILocalVariable(name: "entry", arg: 2, scope: !5473, file: !89, line: 251, type: !404)
!5479 = !DILocation(line: 251, column: 51, scope: !5473)
!5480 = !DILocalVariable(name: "bucket", scope: !5473, file: !89, line: 253, type: !5247)
!5481 = !DILocation(line: 253, column: 28, scope: !5473)
!5482 = !DILocation(line: 254, column: 7, scope: !5473)
!5483 = !DILocation(line: 254, column: 14, scope: !5473)
!5484 = !DILocation(line: 254, column: 23, scope: !5473)
!5485 = !DILocation(line: 254, column: 30, scope: !5473)
!5486 = !DILocation(line: 254, column: 38, scope: !5473)
!5487 = !DILocation(line: 254, column: 45, scope: !5473)
!5488 = !DILocation(line: 254, column: 52, scope: !5473)
!5489 = !DILocation(line: 254, column: 21, scope: !5473)
!5490 = !DILocalVariable(name: "cursor", scope: !5473, file: !89, line: 255, type: !5247)
!5491 = !DILocation(line: 255, column: 28, scope: !5473)
!5492 = !DILocation(line: 257, column: 10, scope: !5493)
!5493 = distinct !DILexicalBlock(scope: !5473, file: !89, line: 257, column: 7)
!5494 = !DILocation(line: 257, column: 19, scope: !5493)
!5495 = !DILocation(line: 257, column: 26, scope: !5493)
!5496 = !DILocation(line: 257, column: 17, scope: !5493)
!5497 = !DILocation(line: 257, column: 7, scope: !5473)
!5498 = !DILocation(line: 258, column: 5, scope: !5493)
!5499 = !DILocation(line: 260, column: 7, scope: !5500)
!5500 = distinct !DILexicalBlock(scope: !5473, file: !89, line: 260, column: 7)
!5501 = !DILocation(line: 260, column: 15, scope: !5500)
!5502 = !DILocation(line: 260, column: 20, scope: !5500)
!5503 = !DILocation(line: 260, column: 7, scope: !5473)
!5504 = !DILocation(line: 261, column: 5, scope: !5500)
!5505 = !DILocation(line: 263, column: 17, scope: !5506)
!5506 = distinct !DILexicalBlock(scope: !5473, file: !89, line: 263, column: 3)
!5507 = !DILocation(line: 263, column: 15, scope: !5506)
!5508 = !DILocation(line: 263, column: 8, scope: !5506)
!5509 = !DILocation(line: 263, column: 25, scope: !5510)
!5510 = distinct !DILexicalBlock(scope: !5506, file: !89, line: 263, column: 3)
!5511 = !DILocation(line: 263, column: 3, scope: !5506)
!5512 = !DILocation(line: 264, column: 9, scope: !5513)
!5513 = distinct !DILexicalBlock(scope: !5510, file: !89, line: 264, column: 9)
!5514 = !DILocation(line: 264, column: 18, scope: !5513)
!5515 = !DILocation(line: 264, column: 26, scope: !5513)
!5516 = !DILocation(line: 264, column: 15, scope: !5513)
!5517 = !DILocation(line: 264, column: 31, scope: !5513)
!5518 = !DILocation(line: 264, column: 34, scope: !5513)
!5519 = !DILocation(line: 264, column: 41, scope: !5513)
!5520 = !DILocation(line: 264, column: 53, scope: !5513)
!5521 = !DILocation(line: 264, column: 60, scope: !5513)
!5522 = !DILocation(line: 264, column: 68, scope: !5513)
!5523 = !DILocation(line: 264, column: 9, scope: !5510)
!5524 = !DILocation(line: 265, column: 14, scope: !5513)
!5525 = !DILocation(line: 265, column: 22, scope: !5513)
!5526 = !DILocation(line: 265, column: 7, scope: !5513)
!5527 = !DILocation(line: 264, column: 72, scope: !5513)
!5528 = !DILocation(line: 263, column: 42, scope: !5510)
!5529 = !DILocation(line: 263, column: 50, scope: !5510)
!5530 = !DILocation(line: 263, column: 40, scope: !5510)
!5531 = !DILocation(line: 263, column: 3, scope: !5510)
!5532 = distinct !{!5532, !5511, !5533}
!5533 = !DILocation(line: 265, column: 22, scope: !5506)
!5534 = !DILocation(line: 267, column: 3, scope: !5473)
!5535 = !DILocation(line: 268, column: 1, scope: !5473)
!5536 = distinct !DISubprogram(name: "hash_get_first", scope: !89, file: !89, line: 282, type: !5537, isLocal: false, isDefinition: true, scopeLine: 283, flags: DIFlagPrototyped, isOptimized: false, unit: !88, variables: !25)
!5537 = !DISubroutineType(types: !5538)
!5538 = !{!16, !5235}
!5539 = !DILocalVariable(name: "table", arg: 1, scope: !5536, file: !89, line: 282, type: !5235)
!5540 = !DILocation(line: 282, column: 35, scope: !5536)
!5541 = !DILocalVariable(name: "bucket", scope: !5536, file: !89, line: 284, type: !5247)
!5542 = !DILocation(line: 284, column: 28, scope: !5536)
!5543 = !DILocation(line: 286, column: 7, scope: !5544)
!5544 = distinct !DILexicalBlock(scope: !5536, file: !89, line: 286, column: 7)
!5545 = !DILocation(line: 286, column: 14, scope: !5544)
!5546 = !DILocation(line: 286, column: 24, scope: !5544)
!5547 = !DILocation(line: 286, column: 7, scope: !5536)
!5548 = !DILocation(line: 287, column: 5, scope: !5544)
!5549 = !DILocation(line: 289, column: 17, scope: !5550)
!5550 = distinct !DILexicalBlock(scope: !5536, file: !89, line: 289, column: 3)
!5551 = !DILocation(line: 289, column: 24, scope: !5550)
!5552 = !DILocation(line: 289, column: 15, scope: !5550)
!5553 = !DILocation(line: 289, column: 8, scope: !5550)
!5554 = !DILocation(line: 290, column: 12, scope: !5555)
!5555 = distinct !DILexicalBlock(scope: !5556, file: !89, line: 290, column: 9)
!5556 = distinct !DILexicalBlock(scope: !5550, file: !89, line: 289, column: 3)
!5557 = !DILocation(line: 290, column: 21, scope: !5555)
!5558 = !DILocation(line: 290, column: 28, scope: !5555)
!5559 = !DILocation(line: 290, column: 19, scope: !5555)
!5560 = !DILocation(line: 290, column: 9, scope: !5556)
!5561 = !DILocation(line: 291, column: 7, scope: !5555)
!5562 = !DILocation(line: 292, column: 14, scope: !5563)
!5563 = distinct !DILexicalBlock(scope: !5555, file: !89, line: 292, column: 14)
!5564 = !DILocation(line: 292, column: 22, scope: !5563)
!5565 = !DILocation(line: 292, column: 14, scope: !5555)
!5566 = !DILocation(line: 293, column: 14, scope: !5563)
!5567 = !DILocation(line: 293, column: 22, scope: !5563)
!5568 = !DILocation(line: 293, column: 7, scope: !5563)
!5569 = !DILocation(line: 290, column: 40, scope: !5555)
!5570 = !DILocation(line: 289, column: 40, scope: !5556)
!5571 = !DILocation(line: 289, column: 3, scope: !5556)
!5572 = distinct !{!5572, !5573, !5574}
!5573 = !DILocation(line: 289, column: 3, scope: !5550)
!5574 = !DILocation(line: 293, column: 22, scope: !5550)
!5575 = !DILocation(line: 294, column: 1, scope: !5536)
!5576 = distinct !DISubprogram(name: "hash_get_next", scope: !89, file: !89, line: 301, type: !5474, isLocal: false, isDefinition: true, scopeLine: 302, flags: DIFlagPrototyped, isOptimized: false, unit: !88, variables: !25)
!5577 = !DILocalVariable(name: "table", arg: 1, scope: !5576, file: !89, line: 301, type: !5235)
!5578 = !DILocation(line: 301, column: 34, scope: !5576)
!5579 = !DILocalVariable(name: "entry", arg: 2, scope: !5576, file: !89, line: 301, type: !404)
!5580 = !DILocation(line: 301, column: 53, scope: !5576)
!5581 = !DILocalVariable(name: "bucket", scope: !5576, file: !89, line: 303, type: !5247)
!5582 = !DILocation(line: 303, column: 28, scope: !5576)
!5583 = !DILocation(line: 304, column: 7, scope: !5576)
!5584 = !DILocation(line: 304, column: 14, scope: !5576)
!5585 = !DILocation(line: 304, column: 23, scope: !5576)
!5586 = !DILocation(line: 304, column: 30, scope: !5576)
!5587 = !DILocation(line: 304, column: 38, scope: !5576)
!5588 = !DILocation(line: 304, column: 45, scope: !5576)
!5589 = !DILocation(line: 304, column: 52, scope: !5576)
!5590 = !DILocation(line: 304, column: 21, scope: !5576)
!5591 = !DILocalVariable(name: "cursor", scope: !5576, file: !89, line: 305, type: !5247)
!5592 = !DILocation(line: 305, column: 28, scope: !5576)
!5593 = !DILocation(line: 307, column: 10, scope: !5594)
!5594 = distinct !DILexicalBlock(scope: !5576, file: !89, line: 307, column: 7)
!5595 = !DILocation(line: 307, column: 19, scope: !5594)
!5596 = !DILocation(line: 307, column: 26, scope: !5594)
!5597 = !DILocation(line: 307, column: 17, scope: !5594)
!5598 = !DILocation(line: 307, column: 7, scope: !5576)
!5599 = !DILocation(line: 308, column: 5, scope: !5594)
!5600 = !DILocation(line: 311, column: 17, scope: !5601)
!5601 = distinct !DILexicalBlock(scope: !5576, file: !89, line: 311, column: 3)
!5602 = !DILocation(line: 311, column: 15, scope: !5601)
!5603 = !DILocation(line: 311, column: 8, scope: !5601)
!5604 = !DILocation(line: 311, column: 25, scope: !5605)
!5605 = distinct !DILexicalBlock(scope: !5601, file: !89, line: 311, column: 3)
!5606 = !DILocation(line: 311, column: 3, scope: !5601)
!5607 = !DILocation(line: 312, column: 9, scope: !5608)
!5608 = distinct !DILexicalBlock(scope: !5605, file: !89, line: 312, column: 9)
!5609 = !DILocation(line: 312, column: 17, scope: !5608)
!5610 = !DILocation(line: 312, column: 25, scope: !5608)
!5611 = !DILocation(line: 312, column: 22, scope: !5608)
!5612 = !DILocation(line: 312, column: 31, scope: !5608)
!5613 = !DILocation(line: 312, column: 34, scope: !5608)
!5614 = !DILocation(line: 312, column: 42, scope: !5608)
!5615 = !DILocation(line: 312, column: 9, scope: !5605)
!5616 = !DILocation(line: 313, column: 14, scope: !5608)
!5617 = !DILocation(line: 313, column: 22, scope: !5608)
!5618 = !DILocation(line: 313, column: 28, scope: !5608)
!5619 = !DILocation(line: 313, column: 7, scope: !5608)
!5620 = !DILocation(line: 311, column: 42, scope: !5605)
!5621 = !DILocation(line: 311, column: 50, scope: !5605)
!5622 = !DILocation(line: 311, column: 40, scope: !5605)
!5623 = !DILocation(line: 311, column: 3, scope: !5605)
!5624 = distinct !{!5624, !5606, !5625}
!5625 = !DILocation(line: 313, column: 28, scope: !5601)
!5626 = !DILocation(line: 316, column: 3, scope: !5576)
!5627 = !DILocation(line: 316, column: 10, scope: !5576)
!5628 = !DILocation(line: 316, column: 21, scope: !5576)
!5629 = !DILocation(line: 316, column: 28, scope: !5576)
!5630 = !DILocation(line: 316, column: 19, scope: !5576)
!5631 = !DILocation(line: 317, column: 9, scope: !5632)
!5632 = distinct !DILexicalBlock(scope: !5576, file: !89, line: 317, column: 9)
!5633 = !DILocation(line: 317, column: 17, scope: !5632)
!5634 = !DILocation(line: 317, column: 9, scope: !5576)
!5635 = !DILocation(line: 318, column: 14, scope: !5632)
!5636 = !DILocation(line: 318, column: 22, scope: !5632)
!5637 = !DILocation(line: 318, column: 7, scope: !5632)
!5638 = distinct !{!5638, !5626, !5639}
!5639 = !DILocation(line: 318, column: 22, scope: !5576)
!5640 = !DILocation(line: 321, column: 3, scope: !5576)
!5641 = !DILocation(line: 322, column: 1, scope: !5576)
!5642 = distinct !DISubprogram(name: "hash_get_entries", scope: !89, file: !89, line: 329, type: !5643, isLocal: false, isDefinition: true, scopeLine: 331, flags: DIFlagPrototyped, isOptimized: false, unit: !88, variables: !25)
!5643 = !DISubroutineType(types: !5644)
!5644 = !{!91, !5235, !5645, !91}
!5645 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16, size: 64)
!5646 = !DILocalVariable(name: "table", arg: 1, scope: !5642, file: !89, line: 329, type: !5235)
!5647 = !DILocation(line: 329, column: 37, scope: !5642)
!5648 = !DILocalVariable(name: "buffer", arg: 2, scope: !5642, file: !89, line: 329, type: !5645)
!5649 = !DILocation(line: 329, column: 51, scope: !5642)
!5650 = !DILocalVariable(name: "buffer_size", arg: 3, scope: !5642, file: !89, line: 330, type: !91)
!5651 = !DILocation(line: 330, column: 12, scope: !5642)
!5652 = !DILocalVariable(name: "counter", scope: !5642, file: !89, line: 332, type: !91)
!5653 = !DILocation(line: 332, column: 10, scope: !5642)
!5654 = !DILocalVariable(name: "bucket", scope: !5642, file: !89, line: 333, type: !5247)
!5655 = !DILocation(line: 333, column: 28, scope: !5642)
!5656 = !DILocalVariable(name: "cursor", scope: !5642, file: !89, line: 334, type: !5247)
!5657 = !DILocation(line: 334, column: 28, scope: !5642)
!5658 = !DILocation(line: 336, column: 17, scope: !5659)
!5659 = distinct !DILexicalBlock(scope: !5642, file: !89, line: 336, column: 3)
!5660 = !DILocation(line: 336, column: 24, scope: !5659)
!5661 = !DILocation(line: 336, column: 15, scope: !5659)
!5662 = !DILocation(line: 336, column: 8, scope: !5659)
!5663 = !DILocation(line: 336, column: 32, scope: !5664)
!5664 = distinct !DILexicalBlock(scope: !5659, file: !89, line: 336, column: 3)
!5665 = !DILocation(line: 336, column: 41, scope: !5664)
!5666 = !DILocation(line: 336, column: 48, scope: !5664)
!5667 = !DILocation(line: 336, column: 39, scope: !5664)
!5668 = !DILocation(line: 336, column: 3, scope: !5659)
!5669 = !DILocation(line: 338, column: 11, scope: !5670)
!5670 = distinct !DILexicalBlock(scope: !5671, file: !89, line: 338, column: 11)
!5671 = distinct !DILexicalBlock(scope: !5664, file: !89, line: 337, column: 5)
!5672 = !DILocation(line: 338, column: 19, scope: !5670)
!5673 = !DILocation(line: 338, column: 11, scope: !5671)
!5674 = !DILocation(line: 340, column: 18, scope: !5675)
!5675 = distinct !DILexicalBlock(scope: !5676, file: !89, line: 340, column: 4)
!5676 = distinct !DILexicalBlock(scope: !5670, file: !89, line: 339, column: 2)
!5677 = !DILocation(line: 340, column: 16, scope: !5675)
!5678 = !DILocation(line: 340, column: 9, scope: !5675)
!5679 = !DILocation(line: 340, column: 26, scope: !5680)
!5680 = distinct !DILexicalBlock(scope: !5675, file: !89, line: 340, column: 4)
!5681 = !DILocation(line: 340, column: 4, scope: !5675)
!5682 = !DILocation(line: 342, column: 12, scope: !5683)
!5683 = distinct !DILexicalBlock(scope: !5684, file: !89, line: 342, column: 12)
!5684 = distinct !DILexicalBlock(scope: !5680, file: !89, line: 341, column: 6)
!5685 = !DILocation(line: 342, column: 23, scope: !5683)
!5686 = !DILocation(line: 342, column: 20, scope: !5683)
!5687 = !DILocation(line: 342, column: 12, scope: !5684)
!5688 = !DILocation(line: 343, column: 10, scope: !5683)
!5689 = !DILocation(line: 343, column: 3, scope: !5683)
!5690 = !DILocation(line: 344, column: 28, scope: !5684)
!5691 = !DILocation(line: 344, column: 36, scope: !5684)
!5692 = !DILocation(line: 344, column: 8, scope: !5684)
!5693 = !DILocation(line: 344, column: 22, scope: !5684)
!5694 = !DILocation(line: 344, column: 26, scope: !5684)
!5695 = !DILocation(line: 345, column: 6, scope: !5684)
!5696 = !DILocation(line: 340, column: 43, scope: !5680)
!5697 = !DILocation(line: 340, column: 51, scope: !5680)
!5698 = !DILocation(line: 340, column: 41, scope: !5680)
!5699 = !DILocation(line: 340, column: 4, scope: !5680)
!5700 = distinct !{!5700, !5681, !5701}
!5701 = !DILocation(line: 345, column: 6, scope: !5675)
!5702 = !DILocation(line: 346, column: 2, scope: !5676)
!5703 = !DILocation(line: 347, column: 5, scope: !5671)
!5704 = !DILocation(line: 336, column: 68, scope: !5664)
!5705 = !DILocation(line: 336, column: 3, scope: !5664)
!5706 = distinct !{!5706, !5668, !5707}
!5707 = !DILocation(line: 347, column: 5, scope: !5659)
!5708 = !DILocation(line: 349, column: 10, scope: !5642)
!5709 = !DILocation(line: 349, column: 3, scope: !5642)
!5710 = !DILocation(line: 350, column: 1, scope: !5642)
!5711 = distinct !DISubprogram(name: "hash_do_for_each", scope: !89, file: !89, line: 361, type: !5712, isLocal: false, isDefinition: true, scopeLine: 363, flags: DIFlagPrototyped, isOptimized: false, unit: !88, variables: !25)
!5712 = !DISubroutineType(types: !5713)
!5713 = !{!91, !5235, !5714, !16}
!5714 = !DIDerivedType(tag: DW_TAG_typedef, name: "Hash_processor", file: !96, line: 43, baseType: !5715)
!5715 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5716, size: 64)
!5716 = !DISubroutineType(types: !5717)
!5717 = !{!79, !16, !16}
!5718 = !DILocalVariable(name: "table", arg: 1, scope: !5711, file: !89, line: 361, type: !5235)
!5719 = !DILocation(line: 361, column: 37, scope: !5711)
!5720 = !DILocalVariable(name: "processor", arg: 2, scope: !5711, file: !89, line: 361, type: !5714)
!5721 = !DILocation(line: 361, column: 59, scope: !5711)
!5722 = !DILocalVariable(name: "processor_data", arg: 3, scope: !5711, file: !89, line: 362, type: !16)
!5723 = !DILocation(line: 362, column: 11, scope: !5711)
!5724 = !DILocalVariable(name: "counter", scope: !5711, file: !89, line: 364, type: !91)
!5725 = !DILocation(line: 364, column: 10, scope: !5711)
!5726 = !DILocalVariable(name: "bucket", scope: !5711, file: !89, line: 365, type: !5247)
!5727 = !DILocation(line: 365, column: 28, scope: !5711)
!5728 = !DILocalVariable(name: "cursor", scope: !5711, file: !89, line: 366, type: !5247)
!5729 = !DILocation(line: 366, column: 28, scope: !5711)
!5730 = !DILocation(line: 368, column: 17, scope: !5731)
!5731 = distinct !DILexicalBlock(scope: !5711, file: !89, line: 368, column: 3)
!5732 = !DILocation(line: 368, column: 24, scope: !5731)
!5733 = !DILocation(line: 368, column: 15, scope: !5731)
!5734 = !DILocation(line: 368, column: 8, scope: !5731)
!5735 = !DILocation(line: 368, column: 32, scope: !5736)
!5736 = distinct !DILexicalBlock(scope: !5731, file: !89, line: 368, column: 3)
!5737 = !DILocation(line: 368, column: 41, scope: !5736)
!5738 = !DILocation(line: 368, column: 48, scope: !5736)
!5739 = !DILocation(line: 368, column: 39, scope: !5736)
!5740 = !DILocation(line: 368, column: 3, scope: !5731)
!5741 = !DILocation(line: 370, column: 11, scope: !5742)
!5742 = distinct !DILexicalBlock(scope: !5743, file: !89, line: 370, column: 11)
!5743 = distinct !DILexicalBlock(scope: !5736, file: !89, line: 369, column: 5)
!5744 = !DILocation(line: 370, column: 19, scope: !5742)
!5745 = !DILocation(line: 370, column: 11, scope: !5743)
!5746 = !DILocation(line: 372, column: 18, scope: !5747)
!5747 = distinct !DILexicalBlock(scope: !5748, file: !89, line: 372, column: 4)
!5748 = distinct !DILexicalBlock(scope: !5742, file: !89, line: 371, column: 2)
!5749 = !DILocation(line: 372, column: 16, scope: !5747)
!5750 = !DILocation(line: 372, column: 9, scope: !5747)
!5751 = !DILocation(line: 372, column: 26, scope: !5752)
!5752 = distinct !DILexicalBlock(scope: !5747, file: !89, line: 372, column: 4)
!5753 = !DILocation(line: 372, column: 4, scope: !5747)
!5754 = !DILocation(line: 374, column: 14, scope: !5755)
!5755 = distinct !DILexicalBlock(scope: !5756, file: !89, line: 374, column: 12)
!5756 = distinct !DILexicalBlock(scope: !5752, file: !89, line: 373, column: 6)
!5757 = !DILocation(line: 374, column: 25, scope: !5755)
!5758 = !DILocation(line: 374, column: 33, scope: !5755)
!5759 = !DILocation(line: 374, column: 39, scope: !5755)
!5760 = !DILocation(line: 374, column: 12, scope: !5756)
!5761 = !DILocation(line: 375, column: 10, scope: !5755)
!5762 = !DILocation(line: 375, column: 3, scope: !5755)
!5763 = !DILocation(line: 376, column: 15, scope: !5756)
!5764 = !DILocation(line: 377, column: 6, scope: !5756)
!5765 = !DILocation(line: 372, column: 43, scope: !5752)
!5766 = !DILocation(line: 372, column: 51, scope: !5752)
!5767 = !DILocation(line: 372, column: 41, scope: !5752)
!5768 = !DILocation(line: 372, column: 4, scope: !5752)
!5769 = distinct !{!5769, !5753, !5770}
!5770 = !DILocation(line: 377, column: 6, scope: !5747)
!5771 = !DILocation(line: 378, column: 2, scope: !5748)
!5772 = !DILocation(line: 379, column: 5, scope: !5743)
!5773 = !DILocation(line: 368, column: 68, scope: !5736)
!5774 = !DILocation(line: 368, column: 3, scope: !5736)
!5775 = distinct !{!5775, !5740, !5776}
!5776 = !DILocation(line: 379, column: 5, scope: !5731)
!5777 = !DILocation(line: 381, column: 10, scope: !5711)
!5778 = !DILocation(line: 381, column: 3, scope: !5711)
!5779 = !DILocation(line: 382, column: 1, scope: !5711)
!5780 = distinct !DISubprogram(name: "hash_string", scope: !89, file: !89, line: 421, type: !5781, isLocal: false, isDefinition: true, scopeLine: 422, flags: DIFlagPrototyped, isOptimized: false, unit: !88, variables: !25)
!5781 = !DISubroutineType(types: !5782)
!5782 = !{!91, !12, !91}
!5783 = !DILocalVariable(name: "string", arg: 1, scope: !5780, file: !89, line: 421, type: !12)
!5784 = !DILocation(line: 421, column: 26, scope: !5780)
!5785 = !DILocalVariable(name: "n_buckets", arg: 2, scope: !5780, file: !89, line: 421, type: !91)
!5786 = !DILocation(line: 421, column: 41, scope: !5780)
!5787 = !DILocalVariable(name: "value", scope: !5780, file: !89, line: 423, type: !91)
!5788 = !DILocation(line: 423, column: 10, scope: !5780)
!5789 = !DILocalVariable(name: "ch", scope: !5780, file: !89, line: 424, type: !3968)
!5790 = !DILocation(line: 424, column: 17, scope: !5780)
!5791 = !DILocation(line: 426, column: 3, scope: !5780)
!5792 = !DILocation(line: 426, column: 17, scope: !5793)
!5793 = distinct !DILexicalBlock(scope: !5794, file: !89, line: 426, column: 3)
!5794 = distinct !DILexicalBlock(scope: !5780, file: !89, line: 426, column: 3)
!5795 = !DILocation(line: 426, column: 16, scope: !5793)
!5796 = !DILocation(line: 426, column: 14, scope: !5793)
!5797 = !DILocation(line: 426, column: 3, scope: !5794)
!5798 = !DILocation(line: 427, column: 14, scope: !5793)
!5799 = !DILocation(line: 427, column: 20, scope: !5793)
!5800 = !DILocation(line: 427, column: 27, scope: !5793)
!5801 = !DILocation(line: 427, column: 25, scope: !5793)
!5802 = !DILocation(line: 427, column: 33, scope: !5793)
!5803 = !DILocation(line: 427, column: 31, scope: !5793)
!5804 = !DILocation(line: 427, column: 11, scope: !5793)
!5805 = !DILocation(line: 427, column: 5, scope: !5793)
!5806 = !DILocation(line: 426, column: 32, scope: !5793)
!5807 = !DILocation(line: 426, column: 3, scope: !5793)
!5808 = distinct !{!5808, !5797, !5809}
!5809 = !DILocation(line: 427, column: 33, scope: !5794)
!5810 = !DILocation(line: 428, column: 10, scope: !5780)
!5811 = !DILocation(line: 428, column: 3, scope: !5780)
!5812 = distinct !DISubprogram(name: "hash_reset_tuning", scope: !89, file: !89, line: 472, type: !5813, isLocal: false, isDefinition: true, scopeLine: 473, flags: DIFlagPrototyped, isOptimized: false, unit: !88, variables: !25)
!5813 = !DISubroutineType(types: !5814)
!5814 = !{null, !5815}
!5815 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !95, size: 64)
!5816 = !DILocalVariable(name: "tuning", arg: 1, scope: !5812, file: !89, line: 472, type: !5815)
!5817 = !DILocation(line: 472, column: 33, scope: !5812)
!5818 = !DILocation(line: 474, column: 4, scope: !5812)
!5819 = !DILocation(line: 474, column: 13, scope: !5812)
!5820 = !DILocation(line: 475, column: 1, scope: !5812)
!5821 = distinct !DISubprogram(name: "hash_initialize", scope: !89, file: !89, line: 587, type: !5822, isLocal: false, isDefinition: true, scopeLine: 590, flags: DIFlagPrototyped, isOptimized: false, unit: !88, variables: !25)
!5822 = !DISubroutineType(types: !5823)
!5823 = !{!5824, !91, !5253, !5255, !5258, !5261}
!5824 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5237, size: 64)
!5825 = !DILocalVariable(name: "candidate", arg: 1, scope: !5821, file: !89, line: 587, type: !91)
!5826 = !DILocation(line: 587, column: 25, scope: !5821)
!5827 = !DILocalVariable(name: "tuning", arg: 2, scope: !5821, file: !89, line: 587, type: !5253)
!5828 = !DILocation(line: 587, column: 55, scope: !5821)
!5829 = !DILocalVariable(name: "hasher", arg: 3, scope: !5821, file: !89, line: 588, type: !5255)
!5830 = !DILocation(line: 588, column: 16, scope: !5821)
!5831 = !DILocalVariable(name: "comparator", arg: 4, scope: !5821, file: !89, line: 588, type: !5258)
!5832 = !DILocation(line: 588, column: 40, scope: !5821)
!5833 = !DILocalVariable(name: "data_freer", arg: 5, scope: !5821, file: !89, line: 589, type: !5261)
!5834 = !DILocation(line: 589, column: 20, scope: !5821)
!5835 = !DILocalVariable(name: "table", scope: !5821, file: !89, line: 591, type: !5824)
!5836 = !DILocation(line: 591, column: 15, scope: !5821)
!5837 = !DILocation(line: 593, column: 7, scope: !5838)
!5838 = distinct !DILexicalBlock(scope: !5821, file: !89, line: 593, column: 7)
!5839 = !DILocation(line: 593, column: 14, scope: !5838)
!5840 = !DILocation(line: 593, column: 7, scope: !5821)
!5841 = !DILocation(line: 594, column: 12, scope: !5838)
!5842 = !DILocation(line: 594, column: 5, scope: !5838)
!5843 = !DILocation(line: 595, column: 7, scope: !5844)
!5844 = distinct !DILexicalBlock(scope: !5821, file: !89, line: 595, column: 7)
!5845 = !DILocation(line: 595, column: 18, scope: !5844)
!5846 = !DILocation(line: 595, column: 7, scope: !5821)
!5847 = !DILocation(line: 596, column: 16, scope: !5844)
!5848 = !DILocation(line: 596, column: 5, scope: !5844)
!5849 = !DILocation(line: 598, column: 11, scope: !5821)
!5850 = !DILocation(line: 598, column: 9, scope: !5821)
!5851 = !DILocation(line: 599, column: 7, scope: !5852)
!5852 = distinct !DILexicalBlock(scope: !5821, file: !89, line: 599, column: 7)
!5853 = !DILocation(line: 599, column: 13, scope: !5852)
!5854 = !DILocation(line: 599, column: 7, scope: !5821)
!5855 = !DILocation(line: 600, column: 5, scope: !5852)
!5856 = !DILocation(line: 602, column: 8, scope: !5857)
!5857 = distinct !DILexicalBlock(scope: !5821, file: !89, line: 602, column: 7)
!5858 = !DILocation(line: 602, column: 7, scope: !5821)
!5859 = !DILocation(line: 603, column: 12, scope: !5857)
!5860 = !DILocation(line: 603, column: 5, scope: !5857)
!5861 = !DILocation(line: 604, column: 19, scope: !5821)
!5862 = !DILocation(line: 604, column: 3, scope: !5821)
!5863 = !DILocation(line: 604, column: 10, scope: !5821)
!5864 = !DILocation(line: 604, column: 17, scope: !5821)
!5865 = !DILocation(line: 605, column: 22, scope: !5866)
!5866 = distinct !DILexicalBlock(scope: !5821, file: !89, line: 605, column: 7)
!5867 = !DILocation(line: 605, column: 8, scope: !5866)
!5868 = !DILocation(line: 605, column: 7, scope: !5821)
!5869 = !DILocation(line: 612, column: 7, scope: !5870)
!5870 = distinct !DILexicalBlock(scope: !5866, file: !89, line: 606, column: 5)
!5871 = !DILocation(line: 615, column: 43, scope: !5821)
!5872 = !DILocation(line: 615, column: 54, scope: !5821)
!5873 = !DILocation(line: 615, column: 22, scope: !5821)
!5874 = !DILocation(line: 615, column: 3, scope: !5821)
!5875 = !DILocation(line: 615, column: 10, scope: !5821)
!5876 = !DILocation(line: 615, column: 20, scope: !5821)
!5877 = !DILocation(line: 616, column: 8, scope: !5878)
!5878 = distinct !DILexicalBlock(scope: !5821, file: !89, line: 616, column: 7)
!5879 = !DILocation(line: 616, column: 15, scope: !5878)
!5880 = !DILocation(line: 616, column: 7, scope: !5821)
!5881 = !DILocation(line: 617, column: 5, scope: !5878)
!5882 = !DILocation(line: 619, column: 27, scope: !5821)
!5883 = !DILocation(line: 619, column: 34, scope: !5821)
!5884 = !DILocation(line: 619, column: 19, scope: !5821)
!5885 = !DILocation(line: 619, column: 3, scope: !5821)
!5886 = !DILocation(line: 619, column: 10, scope: !5821)
!5887 = !DILocation(line: 619, column: 17, scope: !5821)
!5888 = !DILocation(line: 620, column: 7, scope: !5889)
!5889 = distinct !DILexicalBlock(scope: !5821, file: !89, line: 620, column: 7)
!5890 = !DILocation(line: 620, column: 14, scope: !5889)
!5891 = !DILocation(line: 620, column: 21, scope: !5889)
!5892 = !DILocation(line: 620, column: 7, scope: !5821)
!5893 = !DILocation(line: 621, column: 5, scope: !5889)
!5894 = !DILocation(line: 622, column: 25, scope: !5821)
!5895 = !DILocation(line: 622, column: 32, scope: !5821)
!5896 = !DILocation(line: 622, column: 41, scope: !5821)
!5897 = !DILocation(line: 622, column: 48, scope: !5821)
!5898 = !DILocation(line: 622, column: 39, scope: !5821)
!5899 = !DILocation(line: 622, column: 3, scope: !5821)
!5900 = !DILocation(line: 622, column: 10, scope: !5821)
!5901 = !DILocation(line: 622, column: 23, scope: !5821)
!5902 = !DILocation(line: 623, column: 3, scope: !5821)
!5903 = !DILocation(line: 623, column: 10, scope: !5821)
!5904 = !DILocation(line: 623, column: 25, scope: !5821)
!5905 = !DILocation(line: 624, column: 3, scope: !5821)
!5906 = !DILocation(line: 624, column: 10, scope: !5821)
!5907 = !DILocation(line: 624, column: 20, scope: !5821)
!5908 = !DILocation(line: 626, column: 19, scope: !5821)
!5909 = !DILocation(line: 626, column: 3, scope: !5821)
!5910 = !DILocation(line: 626, column: 10, scope: !5821)
!5911 = !DILocation(line: 626, column: 17, scope: !5821)
!5912 = !DILocation(line: 627, column: 23, scope: !5821)
!5913 = !DILocation(line: 627, column: 3, scope: !5821)
!5914 = !DILocation(line: 627, column: 10, scope: !5821)
!5915 = !DILocation(line: 627, column: 21, scope: !5821)
!5916 = !DILocation(line: 628, column: 23, scope: !5821)
!5917 = !DILocation(line: 628, column: 3, scope: !5821)
!5918 = !DILocation(line: 628, column: 10, scope: !5821)
!5919 = !DILocation(line: 628, column: 21, scope: !5821)
!5920 = !DILocation(line: 630, column: 3, scope: !5821)
!5921 = !DILocation(line: 630, column: 10, scope: !5821)
!5922 = !DILocation(line: 630, column: 26, scope: !5821)
!5923 = !DILocation(line: 634, column: 10, scope: !5821)
!5924 = !DILocation(line: 634, column: 3, scope: !5821)
!5925 = !DILocation(line: 637, column: 9, scope: !5821)
!5926 = !DILocation(line: 637, column: 3, scope: !5821)
!5927 = !DILocation(line: 638, column: 3, scope: !5821)
!5928 = !DILocation(line: 639, column: 1, scope: !5821)
!5929 = distinct !DISubprogram(name: "raw_hasher", scope: !89, file: !89, line: 479, type: !2953, isLocal: true, isDefinition: true, scopeLine: 480, flags: DIFlagPrototyped, isOptimized: false, unit: !88, variables: !25)
!5930 = !DILocalVariable(name: "data", arg: 1, scope: !5929, file: !89, line: 479, type: !404)
!5931 = !DILocation(line: 479, column: 25, scope: !5929)
!5932 = !DILocalVariable(name: "n", arg: 2, scope: !5929, file: !89, line: 479, type: !91)
!5933 = !DILocation(line: 479, column: 38, scope: !5929)
!5934 = !DILocalVariable(name: "val", scope: !5929, file: !89, line: 486, type: !91)
!5935 = !DILocation(line: 486, column: 10, scope: !5929)
!5936 = !DILocation(line: 486, column: 34, scope: !5929)
!5937 = !DILocation(line: 486, column: 25, scope: !5929)
!5938 = !DILocation(line: 486, column: 16, scope: !5929)
!5939 = !DILocation(line: 487, column: 10, scope: !5929)
!5940 = !DILocation(line: 487, column: 16, scope: !5929)
!5941 = !DILocation(line: 487, column: 14, scope: !5929)
!5942 = !DILocation(line: 487, column: 3, scope: !5929)
!5943 = distinct !DISubprogram(name: "raw_comparator", scope: !89, file: !89, line: 492, type: !2975, isLocal: true, isDefinition: true, scopeLine: 493, flags: DIFlagPrototyped, isOptimized: false, unit: !88, variables: !25)
!5944 = !DILocalVariable(name: "a", arg: 1, scope: !5943, file: !89, line: 492, type: !404)
!5945 = !DILocation(line: 492, column: 29, scope: !5943)
!5946 = !DILocalVariable(name: "b", arg: 2, scope: !5943, file: !89, line: 492, type: !404)
!5947 = !DILocation(line: 492, column: 44, scope: !5943)
!5948 = !DILocation(line: 494, column: 10, scope: !5943)
!5949 = !DILocation(line: 494, column: 15, scope: !5943)
!5950 = !DILocation(line: 494, column: 12, scope: !5943)
!5951 = !DILocation(line: 494, column: 3, scope: !5943)
!5952 = distinct !DISubprogram(name: "check_tuning", scope: !89, file: !89, line: 505, type: !5953, isLocal: true, isDefinition: true, scopeLine: 506, flags: DIFlagPrototyped, isOptimized: false, unit: !88, variables: !25)
!5953 = !DISubroutineType(types: !5954)
!5954 = !{!79, !5824}
!5955 = !DILocalVariable(name: "table", arg: 1, scope: !5952, file: !89, line: 505, type: !5824)
!5956 = !DILocation(line: 505, column: 27, scope: !5952)
!5957 = !DILocalVariable(name: "tuning", scope: !5952, file: !89, line: 507, type: !5253)
!5958 = !DILocation(line: 507, column: 22, scope: !5952)
!5959 = !DILocation(line: 507, column: 31, scope: !5952)
!5960 = !DILocation(line: 507, column: 38, scope: !5952)
!5961 = !DILocalVariable(name: "epsilon", scope: !5952, file: !89, line: 508, type: !100)
!5962 = !DILocation(line: 508, column: 9, scope: !5952)
!5963 = !DILocation(line: 509, column: 7, scope: !5964)
!5964 = distinct !DILexicalBlock(scope: !5952, file: !89, line: 509, column: 7)
!5965 = !DILocation(line: 509, column: 14, scope: !5964)
!5966 = !DILocation(line: 509, column: 7, scope: !5952)
!5967 = !DILocation(line: 510, column: 5, scope: !5964)
!5968 = !DILocation(line: 517, column: 11, scope: !5952)
!5969 = !DILocation(line: 519, column: 7, scope: !5970)
!5970 = distinct !DILexicalBlock(scope: !5952, file: !89, line: 519, column: 7)
!5971 = !DILocation(line: 519, column: 17, scope: !5970)
!5972 = !DILocation(line: 519, column: 25, scope: !5970)
!5973 = !DILocation(line: 519, column: 15, scope: !5970)
!5974 = !DILocation(line: 520, column: 7, scope: !5970)
!5975 = !DILocation(line: 520, column: 10, scope: !5970)
!5976 = !DILocation(line: 520, column: 18, scope: !5970)
!5977 = !DILocation(line: 520, column: 41, scope: !5970)
!5978 = !DILocation(line: 520, column: 39, scope: !5970)
!5979 = !DILocation(line: 520, column: 35, scope: !5970)
!5980 = !DILocation(line: 521, column: 7, scope: !5970)
!5981 = !DILocation(line: 521, column: 14, scope: !5970)
!5982 = !DILocation(line: 521, column: 12, scope: !5970)
!5983 = !DILocation(line: 521, column: 24, scope: !5970)
!5984 = !DILocation(line: 521, column: 32, scope: !5970)
!5985 = !DILocation(line: 521, column: 22, scope: !5970)
!5986 = !DILocation(line: 522, column: 7, scope: !5970)
!5987 = !DILocation(line: 522, column: 15, scope: !5970)
!5988 = !DILocation(line: 522, column: 23, scope: !5970)
!5989 = !DILocation(line: 522, column: 12, scope: !5970)
!5990 = !DILocation(line: 523, column: 7, scope: !5970)
!5991 = !DILocation(line: 523, column: 10, scope: !5970)
!5992 = !DILocation(line: 523, column: 18, scope: !5970)
!5993 = !DILocation(line: 523, column: 37, scope: !5970)
!5994 = !DILocation(line: 523, column: 35, scope: !5970)
!5995 = !DILocation(line: 523, column: 47, scope: !5970)
!5996 = !DILocation(line: 523, column: 55, scope: !5970)
!5997 = !DILocation(line: 523, column: 45, scope: !5970)
!5998 = !DILocation(line: 524, column: 7, scope: !5970)
!5999 = !DILocation(line: 524, column: 10, scope: !5970)
!6000 = !DILocation(line: 524, column: 18, scope: !5970)
!6001 = !DILocation(line: 524, column: 32, scope: !5970)
!6002 = !DILocation(line: 525, column: 7, scope: !5970)
!6003 = !DILocation(line: 525, column: 10, scope: !5970)
!6004 = !DILocation(line: 525, column: 18, scope: !5970)
!6005 = !DILocation(line: 525, column: 37, scope: !5970)
!6006 = !DILocation(line: 525, column: 35, scope: !5970)
!6007 = !DILocation(line: 525, column: 47, scope: !5970)
!6008 = !DILocation(line: 525, column: 55, scope: !5970)
!6009 = !DILocation(line: 525, column: 45, scope: !5970)
!6010 = !DILocation(line: 519, column: 7, scope: !5952)
!6011 = !DILocation(line: 526, column: 5, scope: !5970)
!6012 = !DILocation(line: 528, column: 3, scope: !5952)
!6013 = !DILocation(line: 528, column: 10, scope: !5952)
!6014 = !DILocation(line: 528, column: 17, scope: !5952)
!6015 = !DILocation(line: 529, column: 3, scope: !5952)
!6016 = !DILocation(line: 530, column: 1, scope: !5952)
!6017 = distinct !DISubprogram(name: "compute_bucket_size", scope: !89, file: !89, line: 537, type: !6018, isLocal: true, isDefinition: true, scopeLine: 538, flags: DIFlagPrototyped, isOptimized: false, unit: !88, variables: !25)
!6018 = !DISubroutineType(types: !6019)
!6019 = !{!91, !91, !5253}
!6020 = !DILocalVariable(name: "candidate", arg: 1, scope: !6017, file: !89, line: 537, type: !91)
!6021 = !DILocation(line: 537, column: 29, scope: !6017)
!6022 = !DILocalVariable(name: "tuning", arg: 2, scope: !6017, file: !89, line: 537, type: !5253)
!6023 = !DILocation(line: 537, column: 59, scope: !6017)
!6024 = !DILocation(line: 539, column: 8, scope: !6025)
!6025 = distinct !DILexicalBlock(scope: !6017, file: !89, line: 539, column: 7)
!6026 = !DILocation(line: 539, column: 16, scope: !6025)
!6027 = !DILocation(line: 539, column: 7, scope: !6017)
!6028 = !DILocalVariable(name: "new_candidate", scope: !6029, file: !89, line: 541, type: !100)
!6029 = distinct !DILexicalBlock(scope: !6025, file: !89, line: 540, column: 5)
!6030 = !DILocation(line: 541, column: 13, scope: !6029)
!6031 = !DILocation(line: 541, column: 29, scope: !6029)
!6032 = !DILocation(line: 541, column: 41, scope: !6029)
!6033 = !DILocation(line: 541, column: 49, scope: !6029)
!6034 = !DILocation(line: 541, column: 39, scope: !6029)
!6035 = !DILocation(line: 542, column: 23, scope: !6036)
!6036 = distinct !DILexicalBlock(scope: !6029, file: !89, line: 542, column: 11)
!6037 = !DILocation(line: 542, column: 20, scope: !6036)
!6038 = !DILocation(line: 542, column: 11, scope: !6029)
!6039 = !DILocation(line: 543, column: 2, scope: !6036)
!6040 = !DILocation(line: 544, column: 19, scope: !6029)
!6041 = !DILocation(line: 544, column: 17, scope: !6029)
!6042 = !DILocation(line: 545, column: 5, scope: !6029)
!6043 = !DILocation(line: 546, column: 27, scope: !6017)
!6044 = !DILocation(line: 546, column: 15, scope: !6017)
!6045 = !DILocation(line: 546, column: 13, scope: !6017)
!6046 = !DILocation(line: 547, column: 7, scope: !6047)
!6047 = distinct !DILexicalBlock(scope: !6017, file: !89, line: 547, column: 7)
!6048 = !DILocation(line: 547, column: 7, scope: !6017)
!6049 = !DILocation(line: 548, column: 5, scope: !6047)
!6050 = !DILocation(line: 549, column: 10, scope: !6017)
!6051 = !DILocation(line: 549, column: 3, scope: !6017)
!6052 = !DILocation(line: 550, column: 1, scope: !6017)
!6053 = distinct !DISubprogram(name: "next_prime", scope: !89, file: !89, line: 456, type: !6054, isLocal: true, isDefinition: true, scopeLine: 457, flags: DIFlagPrototyped, isOptimized: false, unit: !88, variables: !25)
!6054 = !DISubroutineType(types: !6055)
!6055 = !{!91, !91}
!6056 = !DILocalVariable(name: "candidate", arg: 1, scope: !6053, file: !89, line: 456, type: !91)
!6057 = !DILocation(line: 456, column: 20, scope: !6053)
!6058 = !DILocation(line: 459, column: 7, scope: !6059)
!6059 = distinct !DILexicalBlock(scope: !6053, file: !89, line: 459, column: 7)
!6060 = !DILocation(line: 459, column: 17, scope: !6059)
!6061 = !DILocation(line: 459, column: 7, scope: !6053)
!6062 = !DILocation(line: 460, column: 15, scope: !6059)
!6063 = !DILocation(line: 460, column: 5, scope: !6059)
!6064 = !DILocation(line: 463, column: 13, scope: !6053)
!6065 = !DILocation(line: 465, column: 3, scope: !6053)
!6066 = !DILocation(line: 465, column: 22, scope: !6053)
!6067 = !DILocation(line: 465, column: 19, scope: !6053)
!6068 = !DILocation(line: 465, column: 32, scope: !6053)
!6069 = !DILocation(line: 465, column: 46, scope: !6053)
!6070 = !DILocation(line: 465, column: 36, scope: !6053)
!6071 = !DILocation(line: 465, column: 35, scope: !6053)
!6072 = !DILocation(line: 466, column: 15, scope: !6053)
!6073 = distinct !{!6073, !6065, !6074}
!6074 = !DILocation(line: 466, column: 18, scope: !6053)
!6075 = !DILocation(line: 468, column: 10, scope: !6053)
!6076 = !DILocation(line: 468, column: 3, scope: !6053)
!6077 = distinct !DISubprogram(name: "is_prime", scope: !89, file: !89, line: 437, type: !6078, isLocal: true, isDefinition: true, scopeLine: 438, flags: DIFlagPrototyped, isOptimized: false, unit: !88, variables: !25)
!6078 = !DISubroutineType(types: !6079)
!6079 = !{!79, !91}
!6080 = !DILocalVariable(name: "candidate", arg: 1, scope: !6077, file: !89, line: 437, type: !91)
!6081 = !DILocation(line: 437, column: 18, scope: !6077)
!6082 = !DILocalVariable(name: "divisor", scope: !6077, file: !89, line: 439, type: !91)
!6083 = !DILocation(line: 439, column: 10, scope: !6077)
!6084 = !DILocalVariable(name: "square", scope: !6077, file: !89, line: 440, type: !91)
!6085 = !DILocation(line: 440, column: 10, scope: !6077)
!6086 = !DILocation(line: 440, column: 19, scope: !6077)
!6087 = !DILocation(line: 440, column: 29, scope: !6077)
!6088 = !DILocation(line: 440, column: 27, scope: !6077)
!6089 = !DILocation(line: 442, column: 3, scope: !6077)
!6090 = !DILocation(line: 442, column: 10, scope: !6077)
!6091 = !DILocation(line: 442, column: 19, scope: !6077)
!6092 = !DILocation(line: 442, column: 17, scope: !6077)
!6093 = !DILocation(line: 442, column: 29, scope: !6077)
!6094 = !DILocation(line: 442, column: 33, scope: !6077)
!6095 = !DILocation(line: 442, column: 45, scope: !6077)
!6096 = !DILocation(line: 442, column: 43, scope: !6077)
!6097 = !DILocation(line: 444, column: 14, scope: !6098)
!6098 = distinct !DILexicalBlock(scope: !6077, file: !89, line: 443, column: 5)
!6099 = !DILocation(line: 445, column: 21, scope: !6098)
!6100 = !DILocation(line: 445, column: 19, scope: !6098)
!6101 = !DILocation(line: 445, column: 14, scope: !6098)
!6102 = !DILocation(line: 446, column: 14, scope: !6098)
!6103 = distinct !{!6103, !6089, !6104}
!6104 = !DILocation(line: 447, column: 5, scope: !6077)
!6105 = !DILocation(line: 449, column: 11, scope: !6077)
!6106 = !DILocation(line: 449, column: 23, scope: !6077)
!6107 = !DILocation(line: 449, column: 21, scope: !6077)
!6108 = !DILocation(line: 449, column: 10, scope: !6077)
!6109 = !DILocation(line: 449, column: 3, scope: !6077)
!6110 = distinct !DISubprogram(name: "rotr_sz", scope: !6111, file: !6111, line: 77, type: !6112, isLocal: true, isDefinition: true, scopeLine: 78, flags: DIFlagPrototyped, isOptimized: false, unit: !88, variables: !25)
!6111 = !DIFile(filename: "../../lib/bitrotate.h", directory: "/home/ma481/Downloads/Chisel/chisel-bench/benchmark/chown-8.2/original/obj-llvm/lib")
!6112 = !DISubroutineType(types: !6113)
!6113 = !{!91, !91, !23}
!6114 = !DILocalVariable(name: "x", arg: 1, scope: !6110, file: !6111, line: 77, type: !91)
!6115 = !DILocation(line: 77, column: 17, scope: !6110)
!6116 = !DILocalVariable(name: "n", arg: 2, scope: !6110, file: !6111, line: 77, type: !23)
!6117 = !DILocation(line: 77, column: 24, scope: !6110)
!6118 = !DILocation(line: 79, column: 12, scope: !6110)
!6119 = !DILocation(line: 79, column: 17, scope: !6110)
!6120 = !DILocation(line: 79, column: 14, scope: !6110)
!6121 = !DILocation(line: 79, column: 23, scope: !6110)
!6122 = !DILocation(line: 79, column: 53, scope: !6110)
!6123 = !DILocation(line: 79, column: 51, scope: !6110)
!6124 = !DILocation(line: 79, column: 25, scope: !6110)
!6125 = !DILocation(line: 79, column: 20, scope: !6110)
!6126 = !DILocation(line: 79, column: 3, scope: !6110)
!6127 = distinct !DISubprogram(name: "hash_clear", scope: !89, file: !89, line: 646, type: !6128, isLocal: false, isDefinition: true, scopeLine: 647, flags: DIFlagPrototyped, isOptimized: false, unit: !88, variables: !25)
!6128 = !DISubroutineType(types: !6129)
!6129 = !{null, !5824}
!6130 = !DILocalVariable(name: "table", arg: 1, scope: !6127, file: !89, line: 646, type: !5824)
!6131 = !DILocation(line: 646, column: 25, scope: !6127)
!6132 = !DILocalVariable(name: "bucket", scope: !6127, file: !89, line: 648, type: !5241)
!6133 = !DILocation(line: 648, column: 22, scope: !6127)
!6134 = !DILocation(line: 650, column: 17, scope: !6135)
!6135 = distinct !DILexicalBlock(scope: !6127, file: !89, line: 650, column: 3)
!6136 = !DILocation(line: 650, column: 24, scope: !6135)
!6137 = !DILocation(line: 650, column: 15, scope: !6135)
!6138 = !DILocation(line: 650, column: 8, scope: !6135)
!6139 = !DILocation(line: 650, column: 32, scope: !6140)
!6140 = distinct !DILexicalBlock(scope: !6135, file: !89, line: 650, column: 3)
!6141 = !DILocation(line: 650, column: 41, scope: !6140)
!6142 = !DILocation(line: 650, column: 48, scope: !6140)
!6143 = !DILocation(line: 650, column: 39, scope: !6140)
!6144 = !DILocation(line: 650, column: 3, scope: !6135)
!6145 = !DILocation(line: 652, column: 11, scope: !6146)
!6146 = distinct !DILexicalBlock(scope: !6147, file: !89, line: 652, column: 11)
!6147 = distinct !DILexicalBlock(scope: !6140, file: !89, line: 651, column: 5)
!6148 = !DILocation(line: 652, column: 19, scope: !6146)
!6149 = !DILocation(line: 652, column: 11, scope: !6147)
!6150 = !DILocalVariable(name: "cursor", scope: !6151, file: !89, line: 654, type: !5241)
!6151 = distinct !DILexicalBlock(scope: !6146, file: !89, line: 653, column: 2)
!6152 = !DILocation(line: 654, column: 23, scope: !6151)
!6153 = !DILocalVariable(name: "next", scope: !6151, file: !89, line: 655, type: !5241)
!6154 = !DILocation(line: 655, column: 23, scope: !6151)
!6155 = !DILocation(line: 658, column: 18, scope: !6156)
!6156 = distinct !DILexicalBlock(scope: !6151, file: !89, line: 658, column: 4)
!6157 = !DILocation(line: 658, column: 26, scope: !6156)
!6158 = !DILocation(line: 658, column: 16, scope: !6156)
!6159 = !DILocation(line: 658, column: 9, scope: !6156)
!6160 = !DILocation(line: 658, column: 32, scope: !6161)
!6161 = distinct !DILexicalBlock(scope: !6156, file: !89, line: 658, column: 4)
!6162 = !DILocation(line: 658, column: 4, scope: !6156)
!6163 = !DILocation(line: 660, column: 12, scope: !6164)
!6164 = distinct !DILexicalBlock(scope: !6165, file: !89, line: 660, column: 12)
!6165 = distinct !DILexicalBlock(scope: !6161, file: !89, line: 659, column: 6)
!6166 = !DILocation(line: 660, column: 19, scope: !6164)
!6167 = !DILocation(line: 660, column: 12, scope: !6165)
!6168 = !DILocation(line: 661, column: 3, scope: !6164)
!6169 = !DILocation(line: 661, column: 10, scope: !6164)
!6170 = !DILocation(line: 661, column: 22, scope: !6164)
!6171 = !DILocation(line: 661, column: 30, scope: !6164)
!6172 = !DILocation(line: 662, column: 8, scope: !6165)
!6173 = !DILocation(line: 662, column: 16, scope: !6165)
!6174 = !DILocation(line: 662, column: 21, scope: !6165)
!6175 = !DILocation(line: 664, column: 15, scope: !6165)
!6176 = !DILocation(line: 664, column: 23, scope: !6165)
!6177 = !DILocation(line: 664, column: 13, scope: !6165)
!6178 = !DILocation(line: 667, column: 23, scope: !6165)
!6179 = !DILocation(line: 667, column: 30, scope: !6165)
!6180 = !DILocation(line: 667, column: 8, scope: !6165)
!6181 = !DILocation(line: 667, column: 16, scope: !6165)
!6182 = !DILocation(line: 667, column: 21, scope: !6165)
!6183 = !DILocation(line: 668, column: 33, scope: !6165)
!6184 = !DILocation(line: 668, column: 8, scope: !6165)
!6185 = !DILocation(line: 668, column: 15, scope: !6165)
!6186 = !DILocation(line: 668, column: 31, scope: !6165)
!6187 = !DILocation(line: 669, column: 6, scope: !6165)
!6188 = !DILocation(line: 658, column: 49, scope: !6161)
!6189 = !DILocation(line: 658, column: 47, scope: !6161)
!6190 = !DILocation(line: 658, column: 4, scope: !6161)
!6191 = distinct !{!6191, !6162, !6192}
!6192 = !DILocation(line: 669, column: 6, scope: !6156)
!6193 = !DILocation(line: 672, column: 8, scope: !6194)
!6194 = distinct !DILexicalBlock(scope: !6151, file: !89, line: 672, column: 8)
!6195 = !DILocation(line: 672, column: 15, scope: !6194)
!6196 = !DILocation(line: 672, column: 8, scope: !6151)
!6197 = !DILocation(line: 673, column: 6, scope: !6194)
!6198 = !DILocation(line: 673, column: 13, scope: !6194)
!6199 = !DILocation(line: 673, column: 25, scope: !6194)
!6200 = !DILocation(line: 673, column: 33, scope: !6194)
!6201 = !DILocation(line: 674, column: 4, scope: !6151)
!6202 = !DILocation(line: 674, column: 12, scope: !6151)
!6203 = !DILocation(line: 674, column: 17, scope: !6151)
!6204 = !DILocation(line: 675, column: 4, scope: !6151)
!6205 = !DILocation(line: 675, column: 12, scope: !6151)
!6206 = !DILocation(line: 675, column: 17, scope: !6151)
!6207 = !DILocation(line: 676, column: 2, scope: !6151)
!6208 = !DILocation(line: 677, column: 5, scope: !6147)
!6209 = !DILocation(line: 650, column: 68, scope: !6140)
!6210 = !DILocation(line: 650, column: 3, scope: !6140)
!6211 = distinct !{!6211, !6144, !6212}
!6212 = !DILocation(line: 677, column: 5, scope: !6135)
!6213 = !DILocation(line: 679, column: 3, scope: !6127)
!6214 = !DILocation(line: 679, column: 10, scope: !6127)
!6215 = !DILocation(line: 679, column: 25, scope: !6127)
!6216 = !DILocation(line: 680, column: 3, scope: !6127)
!6217 = !DILocation(line: 680, column: 10, scope: !6127)
!6218 = !DILocation(line: 680, column: 20, scope: !6127)
!6219 = !DILocation(line: 681, column: 1, scope: !6127)
!6220 = distinct !DISubprogram(name: "hash_free", scope: !89, file: !89, line: 689, type: !6128, isLocal: false, isDefinition: true, scopeLine: 690, flags: DIFlagPrototyped, isOptimized: false, unit: !88, variables: !25)
!6221 = !DILocalVariable(name: "table", arg: 1, scope: !6220, file: !89, line: 689, type: !5824)
!6222 = !DILocation(line: 689, column: 24, scope: !6220)
!6223 = !DILocalVariable(name: "bucket", scope: !6220, file: !89, line: 691, type: !5241)
!6224 = !DILocation(line: 691, column: 22, scope: !6220)
!6225 = !DILocalVariable(name: "cursor", scope: !6220, file: !89, line: 692, type: !5241)
!6226 = !DILocation(line: 692, column: 22, scope: !6220)
!6227 = !DILocalVariable(name: "next", scope: !6220, file: !89, line: 693, type: !5241)
!6228 = !DILocation(line: 693, column: 22, scope: !6220)
!6229 = !DILocation(line: 696, column: 7, scope: !6230)
!6230 = distinct !DILexicalBlock(scope: !6220, file: !89, line: 696, column: 7)
!6231 = !DILocation(line: 696, column: 14, scope: !6230)
!6232 = !DILocation(line: 696, column: 25, scope: !6230)
!6233 = !DILocation(line: 696, column: 28, scope: !6230)
!6234 = !DILocation(line: 696, column: 35, scope: !6230)
!6235 = !DILocation(line: 696, column: 7, scope: !6220)
!6236 = !DILocation(line: 698, column: 21, scope: !6237)
!6237 = distinct !DILexicalBlock(scope: !6238, file: !89, line: 698, column: 7)
!6238 = distinct !DILexicalBlock(scope: !6230, file: !89, line: 697, column: 5)
!6239 = !DILocation(line: 698, column: 28, scope: !6237)
!6240 = !DILocation(line: 698, column: 19, scope: !6237)
!6241 = !DILocation(line: 698, column: 12, scope: !6237)
!6242 = !DILocation(line: 698, column: 36, scope: !6243)
!6243 = distinct !DILexicalBlock(scope: !6237, file: !89, line: 698, column: 7)
!6244 = !DILocation(line: 698, column: 45, scope: !6243)
!6245 = !DILocation(line: 698, column: 52, scope: !6243)
!6246 = !DILocation(line: 698, column: 43, scope: !6243)
!6247 = !DILocation(line: 698, column: 7, scope: !6237)
!6248 = !DILocation(line: 700, column: 8, scope: !6249)
!6249 = distinct !DILexicalBlock(scope: !6250, file: !89, line: 700, column: 8)
!6250 = distinct !DILexicalBlock(scope: !6243, file: !89, line: 699, column: 2)
!6251 = !DILocation(line: 700, column: 16, scope: !6249)
!6252 = !DILocation(line: 700, column: 8, scope: !6250)
!6253 = !DILocation(line: 702, column: 22, scope: !6254)
!6254 = distinct !DILexicalBlock(scope: !6255, file: !89, line: 702, column: 8)
!6255 = distinct !DILexicalBlock(scope: !6249, file: !89, line: 701, column: 6)
!6256 = !DILocation(line: 702, column: 20, scope: !6254)
!6257 = !DILocation(line: 702, column: 13, scope: !6254)
!6258 = !DILocation(line: 702, column: 30, scope: !6259)
!6259 = distinct !DILexicalBlock(scope: !6254, file: !89, line: 702, column: 8)
!6260 = !DILocation(line: 702, column: 8, scope: !6254)
!6261 = !DILocation(line: 703, column: 3, scope: !6259)
!6262 = !DILocation(line: 703, column: 10, scope: !6259)
!6263 = !DILocation(line: 703, column: 22, scope: !6259)
!6264 = !DILocation(line: 703, column: 30, scope: !6259)
!6265 = !DILocation(line: 702, column: 47, scope: !6259)
!6266 = !DILocation(line: 702, column: 55, scope: !6259)
!6267 = !DILocation(line: 702, column: 45, scope: !6259)
!6268 = !DILocation(line: 702, column: 8, scope: !6259)
!6269 = distinct !{!6269, !6260, !6270}
!6270 = !DILocation(line: 703, column: 34, scope: !6254)
!6271 = !DILocation(line: 704, column: 6, scope: !6255)
!6272 = !DILocation(line: 705, column: 2, scope: !6250)
!6273 = !DILocation(line: 698, column: 72, scope: !6243)
!6274 = !DILocation(line: 698, column: 7, scope: !6243)
!6275 = distinct !{!6275, !6247, !6276}
!6276 = !DILocation(line: 705, column: 2, scope: !6237)
!6277 = !DILocation(line: 706, column: 5, scope: !6238)
!6278 = !DILocation(line: 715, column: 17, scope: !6279)
!6279 = distinct !DILexicalBlock(scope: !6220, file: !89, line: 715, column: 3)
!6280 = !DILocation(line: 715, column: 24, scope: !6279)
!6281 = !DILocation(line: 715, column: 15, scope: !6279)
!6282 = !DILocation(line: 715, column: 8, scope: !6279)
!6283 = !DILocation(line: 715, column: 32, scope: !6284)
!6284 = distinct !DILexicalBlock(scope: !6279, file: !89, line: 715, column: 3)
!6285 = !DILocation(line: 715, column: 41, scope: !6284)
!6286 = !DILocation(line: 715, column: 48, scope: !6284)
!6287 = !DILocation(line: 715, column: 39, scope: !6284)
!6288 = !DILocation(line: 715, column: 3, scope: !6279)
!6289 = !DILocation(line: 717, column: 21, scope: !6290)
!6290 = distinct !DILexicalBlock(scope: !6291, file: !89, line: 717, column: 7)
!6291 = distinct !DILexicalBlock(scope: !6284, file: !89, line: 716, column: 5)
!6292 = !DILocation(line: 717, column: 29, scope: !6290)
!6293 = !DILocation(line: 717, column: 19, scope: !6290)
!6294 = !DILocation(line: 717, column: 12, scope: !6290)
!6295 = !DILocation(line: 717, column: 35, scope: !6296)
!6296 = distinct !DILexicalBlock(scope: !6290, file: !89, line: 717, column: 7)
!6297 = !DILocation(line: 717, column: 7, scope: !6290)
!6298 = !DILocation(line: 719, column: 11, scope: !6299)
!6299 = distinct !DILexicalBlock(scope: !6296, file: !89, line: 718, column: 2)
!6300 = !DILocation(line: 719, column: 19, scope: !6299)
!6301 = !DILocation(line: 719, column: 9, scope: !6299)
!6302 = !DILocation(line: 720, column: 10, scope: !6299)
!6303 = !DILocation(line: 720, column: 4, scope: !6299)
!6304 = !DILocation(line: 721, column: 2, scope: !6299)
!6305 = !DILocation(line: 717, column: 52, scope: !6296)
!6306 = !DILocation(line: 717, column: 50, scope: !6296)
!6307 = !DILocation(line: 717, column: 7, scope: !6296)
!6308 = distinct !{!6308, !6297, !6309}
!6309 = !DILocation(line: 721, column: 2, scope: !6290)
!6310 = !DILocation(line: 722, column: 5, scope: !6291)
!6311 = !DILocation(line: 715, column: 68, scope: !6284)
!6312 = !DILocation(line: 715, column: 3, scope: !6284)
!6313 = distinct !{!6313, !6288, !6314}
!6314 = !DILocation(line: 722, column: 5, scope: !6279)
!6315 = !DILocation(line: 725, column: 17, scope: !6316)
!6316 = distinct !DILexicalBlock(scope: !6220, file: !89, line: 725, column: 3)
!6317 = !DILocation(line: 725, column: 24, scope: !6316)
!6318 = !DILocation(line: 725, column: 15, scope: !6316)
!6319 = !DILocation(line: 725, column: 8, scope: !6316)
!6320 = !DILocation(line: 725, column: 41, scope: !6321)
!6321 = distinct !DILexicalBlock(scope: !6316, file: !89, line: 725, column: 3)
!6322 = !DILocation(line: 725, column: 3, scope: !6316)
!6323 = !DILocation(line: 727, column: 14, scope: !6324)
!6324 = distinct !DILexicalBlock(scope: !6321, file: !89, line: 726, column: 5)
!6325 = !DILocation(line: 727, column: 22, scope: !6324)
!6326 = !DILocation(line: 727, column: 12, scope: !6324)
!6327 = !DILocation(line: 728, column: 13, scope: !6324)
!6328 = !DILocation(line: 728, column: 7, scope: !6324)
!6329 = !DILocation(line: 729, column: 5, scope: !6324)
!6330 = !DILocation(line: 725, column: 58, scope: !6321)
!6331 = !DILocation(line: 725, column: 56, scope: !6321)
!6332 = !DILocation(line: 725, column: 3, scope: !6321)
!6333 = distinct !{!6333, !6322, !6334}
!6334 = !DILocation(line: 729, column: 5, scope: !6316)
!6335 = !DILocation(line: 734, column: 9, scope: !6220)
!6336 = !DILocation(line: 734, column: 16, scope: !6220)
!6337 = !DILocation(line: 734, column: 3, scope: !6220)
!6338 = !DILocation(line: 735, column: 9, scope: !6220)
!6339 = !DILocation(line: 735, column: 3, scope: !6220)
!6340 = !DILocation(line: 736, column: 1, scope: !6220)
!6341 = distinct !DISubprogram(name: "hash_rehash", scope: !89, file: !89, line: 946, type: !6342, isLocal: false, isDefinition: true, scopeLine: 947, flags: DIFlagPrototyped, isOptimized: false, unit: !88, variables: !25)
!6342 = !DISubroutineType(types: !6343)
!6343 = !{!79, !5824, !91}
!6344 = !DILocalVariable(name: "table", arg: 1, scope: !6341, file: !89, line: 946, type: !5824)
!6345 = !DILocation(line: 946, column: 26, scope: !6341)
!6346 = !DILocalVariable(name: "candidate", arg: 2, scope: !6341, file: !89, line: 946, type: !91)
!6347 = !DILocation(line: 946, column: 40, scope: !6341)
!6348 = !DILocalVariable(name: "storage", scope: !6341, file: !89, line: 948, type: !5237)
!6349 = !DILocation(line: 948, column: 14, scope: !6341)
!6350 = !DILocalVariable(name: "new_table", scope: !6341, file: !89, line: 949, type: !5824)
!6351 = !DILocation(line: 949, column: 15, scope: !6341)
!6352 = !DILocalVariable(name: "new_size", scope: !6341, file: !89, line: 950, type: !91)
!6353 = !DILocation(line: 950, column: 10, scope: !6341)
!6354 = !DILocation(line: 950, column: 42, scope: !6341)
!6355 = !DILocation(line: 950, column: 53, scope: !6341)
!6356 = !DILocation(line: 950, column: 60, scope: !6341)
!6357 = !DILocation(line: 950, column: 21, scope: !6341)
!6358 = !DILocation(line: 952, column: 8, scope: !6359)
!6359 = distinct !DILexicalBlock(scope: !6341, file: !89, line: 952, column: 7)
!6360 = !DILocation(line: 952, column: 7, scope: !6341)
!6361 = !DILocation(line: 953, column: 5, scope: !6359)
!6362 = !DILocation(line: 954, column: 7, scope: !6363)
!6363 = distinct !DILexicalBlock(scope: !6341, file: !89, line: 954, column: 7)
!6364 = !DILocation(line: 954, column: 19, scope: !6363)
!6365 = !DILocation(line: 954, column: 26, scope: !6363)
!6366 = !DILocation(line: 954, column: 16, scope: !6363)
!6367 = !DILocation(line: 954, column: 7, scope: !6341)
!6368 = !DILocation(line: 955, column: 5, scope: !6363)
!6369 = !DILocation(line: 956, column: 13, scope: !6341)
!6370 = !DILocation(line: 957, column: 31, scope: !6341)
!6371 = !DILocation(line: 957, column: 23, scope: !6341)
!6372 = !DILocation(line: 957, column: 3, scope: !6341)
!6373 = !DILocation(line: 957, column: 14, scope: !6341)
!6374 = !DILocation(line: 957, column: 21, scope: !6341)
!6375 = !DILocation(line: 958, column: 7, scope: !6376)
!6376 = distinct !DILexicalBlock(scope: !6341, file: !89, line: 958, column: 7)
!6377 = !DILocation(line: 958, column: 18, scope: !6376)
!6378 = !DILocation(line: 958, column: 25, scope: !6376)
!6379 = !DILocation(line: 958, column: 7, scope: !6341)
!6380 = !DILocation(line: 959, column: 5, scope: !6376)
!6381 = !DILocation(line: 960, column: 26, scope: !6341)
!6382 = !DILocation(line: 960, column: 3, scope: !6341)
!6383 = !DILocation(line: 960, column: 14, scope: !6341)
!6384 = !DILocation(line: 960, column: 24, scope: !6341)
!6385 = !DILocation(line: 961, column: 29, scope: !6341)
!6386 = !DILocation(line: 961, column: 40, scope: !6341)
!6387 = !DILocation(line: 961, column: 49, scope: !6341)
!6388 = !DILocation(line: 961, column: 47, scope: !6341)
!6389 = !DILocation(line: 961, column: 3, scope: !6341)
!6390 = !DILocation(line: 961, column: 14, scope: !6341)
!6391 = !DILocation(line: 961, column: 27, scope: !6341)
!6392 = !DILocation(line: 962, column: 3, scope: !6341)
!6393 = !DILocation(line: 962, column: 14, scope: !6341)
!6394 = !DILocation(line: 962, column: 29, scope: !6341)
!6395 = !DILocation(line: 963, column: 3, scope: !6341)
!6396 = !DILocation(line: 963, column: 14, scope: !6341)
!6397 = !DILocation(line: 963, column: 24, scope: !6341)
!6398 = !DILocation(line: 964, column: 23, scope: !6341)
!6399 = !DILocation(line: 964, column: 30, scope: !6341)
!6400 = !DILocation(line: 964, column: 3, scope: !6341)
!6401 = !DILocation(line: 964, column: 14, scope: !6341)
!6402 = !DILocation(line: 964, column: 21, scope: !6341)
!6403 = !DILocation(line: 965, column: 23, scope: !6341)
!6404 = !DILocation(line: 965, column: 30, scope: !6341)
!6405 = !DILocation(line: 965, column: 3, scope: !6341)
!6406 = !DILocation(line: 965, column: 14, scope: !6341)
!6407 = !DILocation(line: 965, column: 21, scope: !6341)
!6408 = !DILocation(line: 966, column: 27, scope: !6341)
!6409 = !DILocation(line: 966, column: 34, scope: !6341)
!6410 = !DILocation(line: 966, column: 3, scope: !6341)
!6411 = !DILocation(line: 966, column: 14, scope: !6341)
!6412 = !DILocation(line: 966, column: 25, scope: !6341)
!6413 = !DILocation(line: 967, column: 27, scope: !6341)
!6414 = !DILocation(line: 967, column: 34, scope: !6341)
!6415 = !DILocation(line: 967, column: 3, scope: !6341)
!6416 = !DILocation(line: 967, column: 14, scope: !6341)
!6417 = !DILocation(line: 967, column: 25, scope: !6341)
!6418 = !DILocation(line: 987, column: 32, scope: !6341)
!6419 = !DILocation(line: 987, column: 39, scope: !6341)
!6420 = !DILocation(line: 987, column: 3, scope: !6341)
!6421 = !DILocation(line: 987, column: 14, scope: !6341)
!6422 = !DILocation(line: 987, column: 30, scope: !6341)
!6423 = !DILocation(line: 989, column: 25, scope: !6424)
!6424 = distinct !DILexicalBlock(scope: !6341, file: !89, line: 989, column: 7)
!6425 = !DILocation(line: 989, column: 36, scope: !6424)
!6426 = !DILocation(line: 989, column: 7, scope: !6424)
!6427 = !DILocation(line: 989, column: 7, scope: !6341)
!6428 = !DILocation(line: 992, column: 13, scope: !6429)
!6429 = distinct !DILexicalBlock(scope: !6424, file: !89, line: 990, column: 5)
!6430 = !DILocation(line: 992, column: 20, scope: !6429)
!6431 = !DILocation(line: 992, column: 7, scope: !6429)
!6432 = !DILocation(line: 993, column: 23, scope: !6429)
!6433 = !DILocation(line: 993, column: 34, scope: !6429)
!6434 = !DILocation(line: 993, column: 7, scope: !6429)
!6435 = !DILocation(line: 993, column: 14, scope: !6429)
!6436 = !DILocation(line: 993, column: 21, scope: !6429)
!6437 = !DILocation(line: 994, column: 29, scope: !6429)
!6438 = !DILocation(line: 994, column: 40, scope: !6429)
!6439 = !DILocation(line: 994, column: 7, scope: !6429)
!6440 = !DILocation(line: 994, column: 14, scope: !6429)
!6441 = !DILocation(line: 994, column: 27, scope: !6429)
!6442 = !DILocation(line: 995, column: 26, scope: !6429)
!6443 = !DILocation(line: 995, column: 37, scope: !6429)
!6444 = !DILocation(line: 995, column: 7, scope: !6429)
!6445 = !DILocation(line: 995, column: 14, scope: !6429)
!6446 = !DILocation(line: 995, column: 24, scope: !6429)
!6447 = !DILocation(line: 996, column: 31, scope: !6429)
!6448 = !DILocation(line: 996, column: 42, scope: !6429)
!6449 = !DILocation(line: 996, column: 7, scope: !6429)
!6450 = !DILocation(line: 996, column: 14, scope: !6429)
!6451 = !DILocation(line: 996, column: 29, scope: !6429)
!6452 = !DILocation(line: 997, column: 32, scope: !6429)
!6453 = !DILocation(line: 997, column: 43, scope: !6429)
!6454 = !DILocation(line: 997, column: 7, scope: !6429)
!6455 = !DILocation(line: 997, column: 14, scope: !6429)
!6456 = !DILocation(line: 997, column: 30, scope: !6429)
!6457 = !DILocation(line: 999, column: 7, scope: !6429)
!6458 = !DILocation(line: 1015, column: 28, scope: !6341)
!6459 = !DILocation(line: 1015, column: 39, scope: !6341)
!6460 = !DILocation(line: 1015, column: 3, scope: !6341)
!6461 = !DILocation(line: 1015, column: 10, scope: !6341)
!6462 = !DILocation(line: 1015, column: 26, scope: !6341)
!6463 = !DILocation(line: 1016, column: 28, scope: !6464)
!6464 = distinct !DILexicalBlock(scope: !6341, file: !89, line: 1016, column: 7)
!6465 = !DILocation(line: 1016, column: 35, scope: !6464)
!6466 = !DILocation(line: 1016, column: 10, scope: !6464)
!6467 = !DILocation(line: 1017, column: 3, scope: !6464)
!6468 = !DILocation(line: 1017, column: 24, scope: !6464)
!6469 = !DILocation(line: 1017, column: 31, scope: !6464)
!6470 = !DILocation(line: 1017, column: 6, scope: !6464)
!6471 = !DILocation(line: 1016, column: 7, scope: !6341)
!6472 = !DILocation(line: 1018, column: 5, scope: !6464)
!6473 = !DILocation(line: 1020, column: 9, scope: !6341)
!6474 = !DILocation(line: 1020, column: 20, scope: !6341)
!6475 = !DILocation(line: 1020, column: 3, scope: !6341)
!6476 = !DILocation(line: 1021, column: 3, scope: !6341)
!6477 = !DILocation(line: 1022, column: 1, scope: !6341)
!6478 = distinct !DISubprogram(name: "transfer_entries", scope: !89, file: !89, line: 857, type: !6479, isLocal: true, isDefinition: true, scopeLine: 858, flags: DIFlagPrototyped, isOptimized: false, unit: !88, variables: !25)
!6479 = !DISubroutineType(types: !6480)
!6480 = !{!79, !5824, !5824, !79}
!6481 = !DILocalVariable(name: "dst", arg: 1, scope: !6478, file: !89, line: 857, type: !5824)
!6482 = !DILocation(line: 857, column: 31, scope: !6478)
!6483 = !DILocalVariable(name: "src", arg: 2, scope: !6478, file: !89, line: 857, type: !5824)
!6484 = !DILocation(line: 857, column: 48, scope: !6478)
!6485 = !DILocalVariable(name: "safe", arg: 3, scope: !6478, file: !89, line: 857, type: !79)
!6486 = !DILocation(line: 857, column: 58, scope: !6478)
!6487 = !DILocalVariable(name: "bucket", scope: !6478, file: !89, line: 859, type: !5241)
!6488 = !DILocation(line: 859, column: 22, scope: !6478)
!6489 = !DILocalVariable(name: "cursor", scope: !6478, file: !89, line: 860, type: !5241)
!6490 = !DILocation(line: 860, column: 22, scope: !6478)
!6491 = !DILocalVariable(name: "next", scope: !6478, file: !89, line: 861, type: !5241)
!6492 = !DILocation(line: 861, column: 22, scope: !6478)
!6493 = !DILocation(line: 862, column: 17, scope: !6494)
!6494 = distinct !DILexicalBlock(scope: !6478, file: !89, line: 862, column: 3)
!6495 = !DILocation(line: 862, column: 22, scope: !6494)
!6496 = !DILocation(line: 862, column: 15, scope: !6494)
!6497 = !DILocation(line: 862, column: 8, scope: !6494)
!6498 = !DILocation(line: 862, column: 30, scope: !6499)
!6499 = distinct !DILexicalBlock(scope: !6494, file: !89, line: 862, column: 3)
!6500 = !DILocation(line: 862, column: 39, scope: !6499)
!6501 = !DILocation(line: 862, column: 44, scope: !6499)
!6502 = !DILocation(line: 862, column: 37, scope: !6499)
!6503 = !DILocation(line: 862, column: 3, scope: !6494)
!6504 = !DILocation(line: 863, column: 9, scope: !6505)
!6505 = distinct !DILexicalBlock(scope: !6499, file: !89, line: 863, column: 9)
!6506 = !DILocation(line: 863, column: 17, scope: !6505)
!6507 = !DILocation(line: 863, column: 9, scope: !6499)
!6508 = !DILocalVariable(name: "data", scope: !6509, file: !89, line: 865, type: !16)
!6509 = distinct !DILexicalBlock(scope: !6505, file: !89, line: 864, column: 7)
!6510 = !DILocation(line: 865, column: 8, scope: !6509)
!6511 = !DILocalVariable(name: "new_bucket", scope: !6509, file: !89, line: 866, type: !5241)
!6512 = !DILocation(line: 866, column: 21, scope: !6509)
!6513 = !DILocation(line: 874, column: 16, scope: !6514)
!6514 = distinct !DILexicalBlock(scope: !6509, file: !89, line: 874, column: 2)
!6515 = !DILocation(line: 874, column: 24, scope: !6514)
!6516 = !DILocation(line: 874, column: 14, scope: !6514)
!6517 = !DILocation(line: 874, column: 7, scope: !6514)
!6518 = !DILocation(line: 874, column: 30, scope: !6519)
!6519 = distinct !DILexicalBlock(scope: !6514, file: !89, line: 874, column: 2)
!6520 = !DILocation(line: 874, column: 2, scope: !6514)
!6521 = !DILocation(line: 876, column: 13, scope: !6522)
!6522 = distinct !DILexicalBlock(scope: !6519, file: !89, line: 875, column: 4)
!6523 = !DILocation(line: 876, column: 21, scope: !6522)
!6524 = !DILocation(line: 876, column: 11, scope: !6522)
!6525 = !DILocation(line: 877, column: 20, scope: !6522)
!6526 = !DILocation(line: 877, column: 25, scope: !6522)
!6527 = !DILocation(line: 877, column: 34, scope: !6522)
!6528 = !DILocation(line: 877, column: 39, scope: !6522)
!6529 = !DILocation(line: 877, column: 47, scope: !6522)
!6530 = !DILocation(line: 877, column: 53, scope: !6522)
!6531 = !DILocation(line: 877, column: 58, scope: !6522)
!6532 = !DILocation(line: 877, column: 32, scope: !6522)
!6533 = !DILocation(line: 877, column: 17, scope: !6522)
!6534 = !DILocation(line: 879, column: 13, scope: !6535)
!6535 = distinct !DILexicalBlock(scope: !6522, file: !89, line: 879, column: 10)
!6536 = !DILocation(line: 879, column: 26, scope: !6535)
!6537 = !DILocation(line: 879, column: 31, scope: !6535)
!6538 = !DILocation(line: 879, column: 24, scope: !6535)
!6539 = !DILocation(line: 879, column: 10, scope: !6522)
!6540 = !DILocation(line: 880, column: 8, scope: !6535)
!6541 = !DILocation(line: 882, column: 13, scope: !6522)
!6542 = !DILocation(line: 882, column: 21, scope: !6522)
!6543 = !DILocation(line: 882, column: 11, scope: !6522)
!6544 = !DILocation(line: 884, column: 10, scope: !6545)
!6545 = distinct !DILexicalBlock(scope: !6522, file: !89, line: 884, column: 10)
!6546 = !DILocation(line: 884, column: 22, scope: !6545)
!6547 = !DILocation(line: 884, column: 10, scope: !6522)
!6548 = !DILocation(line: 888, column: 18, scope: !6549)
!6549 = distinct !DILexicalBlock(scope: !6545, file: !89, line: 885, column: 8)
!6550 = !DILocation(line: 888, column: 30, scope: !6549)
!6551 = !DILocation(line: 888, column: 3, scope: !6549)
!6552 = !DILocation(line: 888, column: 11, scope: !6549)
!6553 = !DILocation(line: 888, column: 16, scope: !6549)
!6554 = !DILocation(line: 889, column: 22, scope: !6549)
!6555 = !DILocation(line: 889, column: 3, scope: !6549)
!6556 = !DILocation(line: 889, column: 15, scope: !6549)
!6557 = !DILocation(line: 889, column: 20, scope: !6549)
!6558 = !DILocation(line: 890, column: 8, scope: !6549)
!6559 = !DILocation(line: 895, column: 22, scope: !6560)
!6560 = distinct !DILexicalBlock(scope: !6545, file: !89, line: 892, column: 8)
!6561 = !DILocation(line: 895, column: 3, scope: !6560)
!6562 = !DILocation(line: 895, column: 15, scope: !6560)
!6563 = !DILocation(line: 895, column: 20, scope: !6560)
!6564 = !DILocation(line: 896, column: 3, scope: !6560)
!6565 = !DILocation(line: 896, column: 8, scope: !6560)
!6566 = !DILocation(line: 896, column: 22, scope: !6560)
!6567 = !DILocation(line: 897, column: 15, scope: !6560)
!6568 = !DILocation(line: 897, column: 20, scope: !6560)
!6569 = !DILocation(line: 897, column: 3, scope: !6560)
!6570 = !DILocation(line: 899, column: 4, scope: !6522)
!6571 = !DILocation(line: 874, column: 47, scope: !6519)
!6572 = !DILocation(line: 874, column: 45, scope: !6519)
!6573 = !DILocation(line: 874, column: 2, scope: !6519)
!6574 = distinct !{!6574, !6520, !6575}
!6575 = !DILocation(line: 899, column: 4, scope: !6514)
!6576 = !DILocation(line: 903, column: 9, scope: !6509)
!6577 = !DILocation(line: 903, column: 17, scope: !6509)
!6578 = !DILocation(line: 903, column: 7, scope: !6509)
!6579 = !DILocation(line: 904, column: 2, scope: !6509)
!6580 = !DILocation(line: 904, column: 10, scope: !6509)
!6581 = !DILocation(line: 904, column: 15, scope: !6509)
!6582 = !DILocation(line: 905, column: 6, scope: !6583)
!6583 = distinct !DILexicalBlock(scope: !6509, file: !89, line: 905, column: 6)
!6584 = !DILocation(line: 905, column: 6, scope: !6509)
!6585 = !DILocation(line: 906, column: 4, scope: !6583)
!6586 = !DILocation(line: 907, column: 16, scope: !6509)
!6587 = !DILocation(line: 907, column: 21, scope: !6509)
!6588 = !DILocation(line: 907, column: 30, scope: !6509)
!6589 = !DILocation(line: 907, column: 35, scope: !6509)
!6590 = !DILocation(line: 907, column: 43, scope: !6509)
!6591 = !DILocation(line: 907, column: 49, scope: !6509)
!6592 = !DILocation(line: 907, column: 54, scope: !6509)
!6593 = !DILocation(line: 907, column: 28, scope: !6509)
!6594 = !DILocation(line: 907, column: 13, scope: !6509)
!6595 = !DILocation(line: 909, column: 9, scope: !6596)
!6596 = distinct !DILexicalBlock(scope: !6509, file: !89, line: 909, column: 6)
!6597 = !DILocation(line: 909, column: 22, scope: !6596)
!6598 = !DILocation(line: 909, column: 27, scope: !6596)
!6599 = !DILocation(line: 909, column: 20, scope: !6596)
!6600 = !DILocation(line: 909, column: 6, scope: !6509)
!6601 = !DILocation(line: 910, column: 4, scope: !6596)
!6602 = !DILocation(line: 912, column: 6, scope: !6603)
!6603 = distinct !DILexicalBlock(scope: !6509, file: !89, line: 912, column: 6)
!6604 = !DILocation(line: 912, column: 18, scope: !6603)
!6605 = !DILocation(line: 912, column: 6, scope: !6509)
!6606 = !DILocalVariable(name: "new_entry", scope: !6607, file: !89, line: 916, type: !5241)
!6607 = distinct !DILexicalBlock(scope: !6603, file: !89, line: 913, column: 4)
!6608 = !DILocation(line: 916, column: 25, scope: !6607)
!6609 = !DILocation(line: 916, column: 53, scope: !6607)
!6610 = !DILocation(line: 916, column: 37, scope: !6607)
!6611 = !DILocation(line: 918, column: 10, scope: !6612)
!6612 = distinct !DILexicalBlock(scope: !6607, file: !89, line: 918, column: 10)
!6613 = !DILocation(line: 918, column: 20, scope: !6612)
!6614 = !DILocation(line: 918, column: 10, scope: !6607)
!6615 = !DILocation(line: 919, column: 8, scope: !6612)
!6616 = !DILocation(line: 921, column: 24, scope: !6607)
!6617 = !DILocation(line: 921, column: 6, scope: !6607)
!6618 = !DILocation(line: 921, column: 17, scope: !6607)
!6619 = !DILocation(line: 921, column: 22, scope: !6607)
!6620 = !DILocation(line: 922, column: 24, scope: !6607)
!6621 = !DILocation(line: 922, column: 36, scope: !6607)
!6622 = !DILocation(line: 922, column: 6, scope: !6607)
!6623 = !DILocation(line: 922, column: 17, scope: !6607)
!6624 = !DILocation(line: 922, column: 22, scope: !6607)
!6625 = !DILocation(line: 923, column: 25, scope: !6607)
!6626 = !DILocation(line: 923, column: 6, scope: !6607)
!6627 = !DILocation(line: 923, column: 18, scope: !6607)
!6628 = !DILocation(line: 923, column: 23, scope: !6607)
!6629 = !DILocation(line: 924, column: 4, scope: !6607)
!6630 = !DILocation(line: 928, column: 25, scope: !6631)
!6631 = distinct !DILexicalBlock(scope: !6603, file: !89, line: 926, column: 4)
!6632 = !DILocation(line: 928, column: 6, scope: !6631)
!6633 = !DILocation(line: 928, column: 18, scope: !6631)
!6634 = !DILocation(line: 928, column: 23, scope: !6631)
!6635 = !DILocation(line: 929, column: 6, scope: !6631)
!6636 = !DILocation(line: 929, column: 11, scope: !6631)
!6637 = !DILocation(line: 929, column: 25, scope: !6631)
!6638 = !DILocation(line: 931, column: 2, scope: !6509)
!6639 = !DILocation(line: 931, column: 10, scope: !6509)
!6640 = !DILocation(line: 931, column: 15, scope: !6509)
!6641 = !DILocation(line: 932, column: 2, scope: !6509)
!6642 = !DILocation(line: 932, column: 7, scope: !6509)
!6643 = !DILocation(line: 932, column: 21, scope: !6509)
!6644 = !DILocation(line: 933, column: 7, scope: !6509)
!6645 = !DILocation(line: 862, column: 64, scope: !6499)
!6646 = !DILocation(line: 862, column: 3, scope: !6499)
!6647 = distinct !{!6647, !6503, !6648}
!6648 = !DILocation(line: 933, column: 7, scope: !6494)
!6649 = !DILocation(line: 934, column: 3, scope: !6478)
!6650 = !DILocation(line: 935, column: 1, scope: !6478)
!6651 = distinct !DISubprogram(name: "free_entry", scope: !89, file: !89, line: 769, type: !6652, isLocal: true, isDefinition: true, scopeLine: 770, flags: DIFlagPrototyped, isOptimized: false, unit: !88, variables: !25)
!6652 = !DISubroutineType(types: !6653)
!6653 = !{null, !5824, !5241}
!6654 = !DILocalVariable(name: "table", arg: 1, scope: !6651, file: !89, line: 769, type: !5824)
!6655 = !DILocation(line: 769, column: 25, scope: !6651)
!6656 = !DILocalVariable(name: "entry", arg: 2, scope: !6651, file: !89, line: 769, type: !5241)
!6657 = !DILocation(line: 769, column: 51, scope: !6651)
!6658 = !DILocation(line: 771, column: 3, scope: !6651)
!6659 = !DILocation(line: 771, column: 10, scope: !6651)
!6660 = !DILocation(line: 771, column: 15, scope: !6651)
!6661 = !DILocation(line: 772, column: 17, scope: !6651)
!6662 = !DILocation(line: 772, column: 24, scope: !6651)
!6663 = !DILocation(line: 772, column: 3, scope: !6651)
!6664 = !DILocation(line: 772, column: 10, scope: !6651)
!6665 = !DILocation(line: 772, column: 15, scope: !6651)
!6666 = !DILocation(line: 773, column: 28, scope: !6651)
!6667 = !DILocation(line: 773, column: 3, scope: !6651)
!6668 = !DILocation(line: 773, column: 10, scope: !6651)
!6669 = !DILocation(line: 773, column: 26, scope: !6651)
!6670 = !DILocation(line: 774, column: 1, scope: !6651)
!6671 = distinct !DISubprogram(name: "allocate_entry", scope: !89, file: !89, line: 744, type: !6672, isLocal: true, isDefinition: true, scopeLine: 745, flags: DIFlagPrototyped, isOptimized: false, unit: !88, variables: !25)
!6672 = !DISubroutineType(types: !6673)
!6673 = !{!5241, !5824}
!6674 = !DILocalVariable(name: "table", arg: 1, scope: !6671, file: !89, line: 744, type: !5824)
!6675 = !DILocation(line: 744, column: 29, scope: !6671)
!6676 = !DILocalVariable(name: "new", scope: !6671, file: !89, line: 746, type: !5241)
!6677 = !DILocation(line: 746, column: 22, scope: !6671)
!6678 = !DILocation(line: 748, column: 7, scope: !6679)
!6679 = distinct !DILexicalBlock(scope: !6671, file: !89, line: 748, column: 7)
!6680 = !DILocation(line: 748, column: 14, scope: !6679)
!6681 = !DILocation(line: 748, column: 7, scope: !6671)
!6682 = !DILocation(line: 750, column: 13, scope: !6683)
!6683 = distinct !DILexicalBlock(scope: !6679, file: !89, line: 749, column: 5)
!6684 = !DILocation(line: 750, column: 20, scope: !6683)
!6685 = !DILocation(line: 750, column: 11, scope: !6683)
!6686 = !DILocation(line: 751, column: 32, scope: !6683)
!6687 = !DILocation(line: 751, column: 37, scope: !6683)
!6688 = !DILocation(line: 751, column: 7, scope: !6683)
!6689 = !DILocation(line: 751, column: 14, scope: !6683)
!6690 = !DILocation(line: 751, column: 30, scope: !6683)
!6691 = !DILocation(line: 752, column: 5, scope: !6683)
!6692 = !DILocation(line: 758, column: 13, scope: !6693)
!6693 = distinct !DILexicalBlock(scope: !6679, file: !89, line: 754, column: 5)
!6694 = !DILocation(line: 758, column: 11, scope: !6693)
!6695 = !DILocation(line: 762, column: 10, scope: !6671)
!6696 = !DILocation(line: 762, column: 3, scope: !6671)
!6697 = distinct !DISubprogram(name: "hash_insert", scope: !89, file: !89, line: 1031, type: !6698, isLocal: false, isDefinition: true, scopeLine: 1032, flags: DIFlagPrototyped, isOptimized: false, unit: !88, variables: !25)
!6698 = !DISubroutineType(types: !6699)
!6699 = !{!16, !5824, !404}
!6700 = !DILocalVariable(name: "table", arg: 1, scope: !6697, file: !89, line: 1031, type: !5824)
!6701 = !DILocation(line: 1031, column: 26, scope: !6697)
!6702 = !DILocalVariable(name: "entry", arg: 2, scope: !6697, file: !89, line: 1031, type: !404)
!6703 = !DILocation(line: 1031, column: 45, scope: !6697)
!6704 = !DILocalVariable(name: "data", scope: !6697, file: !89, line: 1033, type: !16)
!6705 = !DILocation(line: 1033, column: 9, scope: !6697)
!6706 = !DILocalVariable(name: "bucket", scope: !6697, file: !89, line: 1034, type: !5241)
!6707 = !DILocation(line: 1034, column: 22, scope: !6697)
!6708 = !DILocation(line: 1037, column: 9, scope: !6709)
!6709 = distinct !DILexicalBlock(scope: !6697, file: !89, line: 1037, column: 7)
!6710 = !DILocation(line: 1037, column: 7, scope: !6697)
!6711 = !DILocation(line: 1038, column: 5, scope: !6709)
!6712 = !DILocation(line: 1041, column: 32, scope: !6713)
!6713 = distinct !DILexicalBlock(scope: !6697, file: !89, line: 1041, column: 7)
!6714 = !DILocation(line: 1041, column: 39, scope: !6713)
!6715 = !DILocation(line: 1041, column: 15, scope: !6713)
!6716 = !DILocation(line: 1041, column: 13, scope: !6713)
!6717 = !DILocation(line: 1041, column: 63, scope: !6713)
!6718 = !DILocation(line: 1041, column: 7, scope: !6697)
!6719 = !DILocation(line: 1042, column: 12, scope: !6713)
!6720 = !DILocation(line: 1042, column: 5, scope: !6713)
!6721 = !DILocation(line: 1049, column: 7, scope: !6722)
!6722 = distinct !DILexicalBlock(scope: !6697, file: !89, line: 1049, column: 7)
!6723 = !DILocation(line: 1049, column: 14, scope: !6722)
!6724 = !DILocation(line: 1050, column: 9, scope: !6722)
!6725 = !DILocation(line: 1050, column: 16, scope: !6722)
!6726 = !DILocation(line: 1050, column: 24, scope: !6722)
!6727 = !DILocation(line: 1050, column: 43, scope: !6722)
!6728 = !DILocation(line: 1050, column: 50, scope: !6722)
!6729 = !DILocation(line: 1050, column: 41, scope: !6722)
!6730 = !DILocation(line: 1050, column: 7, scope: !6722)
!6731 = !DILocation(line: 1049, column: 7, scope: !6697)
!6732 = !DILocation(line: 1054, column: 21, scope: !6733)
!6733 = distinct !DILexicalBlock(scope: !6722, file: !89, line: 1051, column: 5)
!6734 = !DILocation(line: 1054, column: 7, scope: !6733)
!6735 = !DILocation(line: 1055, column: 11, scope: !6736)
!6736 = distinct !DILexicalBlock(scope: !6733, file: !89, line: 1055, column: 11)
!6737 = !DILocation(line: 1055, column: 18, scope: !6736)
!6738 = !DILocation(line: 1056, column: 6, scope: !6736)
!6739 = !DILocation(line: 1056, column: 13, scope: !6736)
!6740 = !DILocation(line: 1056, column: 21, scope: !6736)
!6741 = !DILocation(line: 1056, column: 40, scope: !6736)
!6742 = !DILocation(line: 1056, column: 47, scope: !6736)
!6743 = !DILocation(line: 1056, column: 38, scope: !6736)
!6744 = !DILocation(line: 1056, column: 4, scope: !6736)
!6745 = !DILocation(line: 1055, column: 11, scope: !6733)
!6746 = !DILocalVariable(name: "tuning", scope: !6747, file: !89, line: 1058, type: !5253)
!6747 = distinct !DILexicalBlock(scope: !6736, file: !89, line: 1057, column: 2)
!6748 = !DILocation(line: 1058, column: 23, scope: !6747)
!6749 = !DILocation(line: 1058, column: 32, scope: !6747)
!6750 = !DILocation(line: 1058, column: 39, scope: !6747)
!6751 = !DILocalVariable(name: "candidate", scope: !6747, file: !89, line: 1059, type: !100)
!6752 = !DILocation(line: 1059, column: 10, scope: !6747)
!6753 = !DILocation(line: 1060, column: 7, scope: !6747)
!6754 = !DILocation(line: 1060, column: 15, scope: !6747)
!6755 = !DILocation(line: 1061, column: 10, scope: !6747)
!6756 = !DILocation(line: 1061, column: 17, scope: !6747)
!6757 = !DILocation(line: 1061, column: 29, scope: !6747)
!6758 = !DILocation(line: 1061, column: 37, scope: !6747)
!6759 = !DILocation(line: 1061, column: 27, scope: !6747)
!6760 = !DILocation(line: 1062, column: 10, scope: !6747)
!6761 = !DILocation(line: 1062, column: 17, scope: !6747)
!6762 = !DILocation(line: 1062, column: 29, scope: !6747)
!6763 = !DILocation(line: 1062, column: 37, scope: !6747)
!6764 = !DILocation(line: 1062, column: 27, scope: !6747)
!6765 = !DILocation(line: 1063, column: 5, scope: !6747)
!6766 = !DILocation(line: 1063, column: 13, scope: !6747)
!6767 = !DILocation(line: 1063, column: 3, scope: !6747)
!6768 = !DILocation(line: 1065, column: 20, scope: !6769)
!6769 = distinct !DILexicalBlock(scope: !6747, file: !89, line: 1065, column: 8)
!6770 = !DILocation(line: 1065, column: 17, scope: !6769)
!6771 = !DILocation(line: 1065, column: 8, scope: !6747)
!6772 = !DILocation(line: 1066, column: 6, scope: !6769)
!6773 = !DILocation(line: 1069, column: 22, scope: !6774)
!6774 = distinct !DILexicalBlock(scope: !6747, file: !89, line: 1069, column: 8)
!6775 = !DILocation(line: 1069, column: 29, scope: !6774)
!6776 = !DILocation(line: 1069, column: 9, scope: !6774)
!6777 = !DILocation(line: 1069, column: 8, scope: !6747)
!6778 = !DILocation(line: 1070, column: 6, scope: !6774)
!6779 = !DILocation(line: 1073, column: 25, scope: !6780)
!6780 = distinct !DILexicalBlock(scope: !6747, file: !89, line: 1073, column: 8)
!6781 = !DILocation(line: 1073, column: 32, scope: !6780)
!6782 = !DILocation(line: 1073, column: 8, scope: !6780)
!6783 = !DILocation(line: 1073, column: 55, scope: !6780)
!6784 = !DILocation(line: 1073, column: 8, scope: !6747)
!6785 = !DILocation(line: 1074, column: 6, scope: !6780)
!6786 = !DILocation(line: 1075, column: 2, scope: !6747)
!6787 = !DILocation(line: 1076, column: 5, scope: !6733)
!6788 = !DILocation(line: 1080, column: 7, scope: !6789)
!6789 = distinct !DILexicalBlock(scope: !6697, file: !89, line: 1080, column: 7)
!6790 = !DILocation(line: 1080, column: 15, scope: !6789)
!6791 = !DILocation(line: 1080, column: 7, scope: !6697)
!6792 = !DILocalVariable(name: "new_entry", scope: !6793, file: !89, line: 1082, type: !5241)
!6793 = distinct !DILexicalBlock(scope: !6789, file: !89, line: 1081, column: 5)
!6794 = !DILocation(line: 1082, column: 26, scope: !6793)
!6795 = !DILocation(line: 1082, column: 54, scope: !6793)
!6796 = !DILocation(line: 1082, column: 38, scope: !6793)
!6797 = !DILocation(line: 1084, column: 11, scope: !6798)
!6798 = distinct !DILexicalBlock(scope: !6793, file: !89, line: 1084, column: 11)
!6799 = !DILocation(line: 1084, column: 21, scope: !6798)
!6800 = !DILocation(line: 1084, column: 11, scope: !6793)
!6801 = !DILocation(line: 1085, column: 2, scope: !6798)
!6802 = !DILocation(line: 1089, column: 34, scope: !6793)
!6803 = !DILocation(line: 1089, column: 7, scope: !6793)
!6804 = !DILocation(line: 1089, column: 18, scope: !6793)
!6805 = !DILocation(line: 1089, column: 23, scope: !6793)
!6806 = !DILocation(line: 1090, column: 25, scope: !6793)
!6807 = !DILocation(line: 1090, column: 33, scope: !6793)
!6808 = !DILocation(line: 1090, column: 7, scope: !6793)
!6809 = !DILocation(line: 1090, column: 18, scope: !6793)
!6810 = !DILocation(line: 1090, column: 23, scope: !6793)
!6811 = !DILocation(line: 1091, column: 22, scope: !6793)
!6812 = !DILocation(line: 1091, column: 7, scope: !6793)
!6813 = !DILocation(line: 1091, column: 15, scope: !6793)
!6814 = !DILocation(line: 1091, column: 20, scope: !6793)
!6815 = !DILocation(line: 1092, column: 7, scope: !6793)
!6816 = !DILocation(line: 1092, column: 14, scope: !6793)
!6817 = !DILocation(line: 1092, column: 23, scope: !6793)
!6818 = !DILocation(line: 1093, column: 23, scope: !6793)
!6819 = !DILocation(line: 1093, column: 7, scope: !6793)
!6820 = !DILocation(line: 1098, column: 27, scope: !6697)
!6821 = !DILocation(line: 1098, column: 3, scope: !6697)
!6822 = !DILocation(line: 1098, column: 11, scope: !6697)
!6823 = !DILocation(line: 1098, column: 16, scope: !6697)
!6824 = !DILocation(line: 1099, column: 3, scope: !6697)
!6825 = !DILocation(line: 1099, column: 10, scope: !6697)
!6826 = !DILocation(line: 1099, column: 19, scope: !6697)
!6827 = !DILocation(line: 1100, column: 3, scope: !6697)
!6828 = !DILocation(line: 1100, column: 10, scope: !6697)
!6829 = !DILocation(line: 1100, column: 24, scope: !6697)
!6830 = !DILocation(line: 1102, column: 19, scope: !6697)
!6831 = !DILocation(line: 1102, column: 3, scope: !6697)
!6832 = !DILocation(line: 1103, column: 1, scope: !6697)
!6833 = distinct !DISubprogram(name: "hash_find_entry", scope: !89, file: !89, line: 783, type: !6834, isLocal: true, isDefinition: true, scopeLine: 785, flags: DIFlagPrototyped, isOptimized: false, unit: !88, variables: !25)
!6834 = !DISubroutineType(types: !6835)
!6835 = !{!16, !5824, !404, !6836, !79}
!6836 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5241, size: 64)
!6837 = !DILocalVariable(name: "table", arg: 1, scope: !6833, file: !89, line: 783, type: !5824)
!6838 = !DILocation(line: 783, column: 30, scope: !6833)
!6839 = !DILocalVariable(name: "entry", arg: 2, scope: !6833, file: !89, line: 783, type: !404)
!6840 = !DILocation(line: 783, column: 49, scope: !6833)
!6841 = !DILocalVariable(name: "bucket_head", arg: 3, scope: !6833, file: !89, line: 784, type: !6836)
!6842 = !DILocation(line: 784, column: 24, scope: !6833)
!6843 = !DILocalVariable(name: "delete", arg: 4, scope: !6833, file: !89, line: 784, type: !79)
!6844 = !DILocation(line: 784, column: 42, scope: !6833)
!6845 = !DILocalVariable(name: "bucket", scope: !6833, file: !89, line: 786, type: !5241)
!6846 = !DILocation(line: 786, column: 22, scope: !6833)
!6847 = !DILocation(line: 787, column: 7, scope: !6833)
!6848 = !DILocation(line: 787, column: 14, scope: !6833)
!6849 = !DILocation(line: 787, column: 23, scope: !6833)
!6850 = !DILocation(line: 787, column: 30, scope: !6833)
!6851 = !DILocation(line: 787, column: 38, scope: !6833)
!6852 = !DILocation(line: 787, column: 45, scope: !6833)
!6853 = !DILocation(line: 787, column: 52, scope: !6833)
!6854 = !DILocation(line: 787, column: 21, scope: !6833)
!6855 = !DILocalVariable(name: "cursor", scope: !6833, file: !89, line: 788, type: !5241)
!6856 = !DILocation(line: 788, column: 22, scope: !6833)
!6857 = !DILocation(line: 790, column: 10, scope: !6858)
!6858 = distinct !DILexicalBlock(scope: !6833, file: !89, line: 790, column: 7)
!6859 = !DILocation(line: 790, column: 19, scope: !6858)
!6860 = !DILocation(line: 790, column: 26, scope: !6858)
!6861 = !DILocation(line: 790, column: 17, scope: !6858)
!6862 = !DILocation(line: 790, column: 7, scope: !6833)
!6863 = !DILocation(line: 791, column: 5, scope: !6858)
!6864 = !DILocation(line: 793, column: 18, scope: !6833)
!6865 = !DILocation(line: 793, column: 4, scope: !6833)
!6866 = !DILocation(line: 793, column: 16, scope: !6833)
!6867 = !DILocation(line: 796, column: 7, scope: !6868)
!6868 = distinct !DILexicalBlock(scope: !6833, file: !89, line: 796, column: 7)
!6869 = !DILocation(line: 796, column: 15, scope: !6868)
!6870 = !DILocation(line: 796, column: 20, scope: !6868)
!6871 = !DILocation(line: 796, column: 7, scope: !6833)
!6872 = !DILocation(line: 797, column: 5, scope: !6868)
!6873 = !DILocation(line: 800, column: 7, scope: !6874)
!6874 = distinct !DILexicalBlock(scope: !6833, file: !89, line: 800, column: 7)
!6875 = !DILocation(line: 800, column: 16, scope: !6874)
!6876 = !DILocation(line: 800, column: 24, scope: !6874)
!6877 = !DILocation(line: 800, column: 13, scope: !6874)
!6878 = !DILocation(line: 800, column: 29, scope: !6874)
!6879 = !DILocation(line: 800, column: 32, scope: !6874)
!6880 = !DILocation(line: 800, column: 39, scope: !6874)
!6881 = !DILocation(line: 800, column: 51, scope: !6874)
!6882 = !DILocation(line: 800, column: 58, scope: !6874)
!6883 = !DILocation(line: 800, column: 66, scope: !6874)
!6884 = !DILocation(line: 800, column: 7, scope: !6833)
!6885 = !DILocalVariable(name: "data", scope: !6886, file: !89, line: 802, type: !16)
!6886 = distinct !DILexicalBlock(scope: !6874, file: !89, line: 801, column: 5)
!6887 = !DILocation(line: 802, column: 13, scope: !6886)
!6888 = !DILocation(line: 802, column: 20, scope: !6886)
!6889 = !DILocation(line: 802, column: 28, scope: !6886)
!6890 = !DILocation(line: 804, column: 11, scope: !6891)
!6891 = distinct !DILexicalBlock(scope: !6886, file: !89, line: 804, column: 11)
!6892 = !DILocation(line: 804, column: 11, scope: !6886)
!6893 = !DILocation(line: 806, column: 8, scope: !6894)
!6894 = distinct !DILexicalBlock(scope: !6895, file: !89, line: 806, column: 8)
!6895 = distinct !DILexicalBlock(scope: !6891, file: !89, line: 805, column: 2)
!6896 = !DILocation(line: 806, column: 16, scope: !6894)
!6897 = !DILocation(line: 806, column: 8, scope: !6895)
!6898 = !DILocalVariable(name: "next", scope: !6899, file: !89, line: 808, type: !5241)
!6899 = distinct !DILexicalBlock(scope: !6894, file: !89, line: 807, column: 6)
!6900 = !DILocation(line: 808, column: 27, scope: !6899)
!6901 = !DILocation(line: 808, column: 34, scope: !6899)
!6902 = !DILocation(line: 808, column: 42, scope: !6899)
!6903 = !DILocation(line: 812, column: 9, scope: !6899)
!6904 = !DILocation(line: 812, column: 19, scope: !6899)
!6905 = !DILocation(line: 812, column: 18, scope: !6899)
!6906 = !DILocation(line: 813, column: 20, scope: !6899)
!6907 = !DILocation(line: 813, column: 27, scope: !6899)
!6908 = !DILocation(line: 813, column: 8, scope: !6899)
!6909 = !DILocation(line: 814, column: 6, scope: !6899)
!6910 = !DILocation(line: 817, column: 8, scope: !6911)
!6911 = distinct !DILexicalBlock(scope: !6894, file: !89, line: 816, column: 6)
!6912 = !DILocation(line: 817, column: 16, scope: !6911)
!6913 = !DILocation(line: 817, column: 21, scope: !6911)
!6914 = !DILocation(line: 819, column: 2, scope: !6895)
!6915 = !DILocation(line: 821, column: 14, scope: !6886)
!6916 = !DILocation(line: 821, column: 7, scope: !6886)
!6917 = !DILocation(line: 825, column: 17, scope: !6918)
!6918 = distinct !DILexicalBlock(scope: !6833, file: !89, line: 825, column: 3)
!6919 = !DILocation(line: 825, column: 15, scope: !6918)
!6920 = !DILocation(line: 825, column: 8, scope: !6918)
!6921 = !DILocation(line: 825, column: 25, scope: !6922)
!6922 = distinct !DILexicalBlock(scope: !6918, file: !89, line: 825, column: 3)
!6923 = !DILocation(line: 825, column: 33, scope: !6922)
!6924 = !DILocation(line: 825, column: 3, scope: !6918)
!6925 = !DILocation(line: 827, column: 11, scope: !6926)
!6926 = distinct !DILexicalBlock(scope: !6927, file: !89, line: 827, column: 11)
!6927 = distinct !DILexicalBlock(scope: !6922, file: !89, line: 826, column: 5)
!6928 = !DILocation(line: 827, column: 20, scope: !6926)
!6929 = !DILocation(line: 827, column: 28, scope: !6926)
!6930 = !DILocation(line: 827, column: 34, scope: !6926)
!6931 = !DILocation(line: 827, column: 17, scope: !6926)
!6932 = !DILocation(line: 828, column: 4, scope: !6926)
!6933 = !DILocation(line: 828, column: 7, scope: !6926)
!6934 = !DILocation(line: 828, column: 14, scope: !6926)
!6935 = !DILocation(line: 828, column: 26, scope: !6926)
!6936 = !DILocation(line: 828, column: 33, scope: !6926)
!6937 = !DILocation(line: 828, column: 41, scope: !6926)
!6938 = !DILocation(line: 828, column: 47, scope: !6926)
!6939 = !DILocation(line: 827, column: 11, scope: !6927)
!6940 = !DILocalVariable(name: "data", scope: !6941, file: !89, line: 830, type: !16)
!6941 = distinct !DILexicalBlock(scope: !6926, file: !89, line: 829, column: 2)
!6942 = !DILocation(line: 830, column: 10, scope: !6941)
!6943 = !DILocation(line: 830, column: 17, scope: !6941)
!6944 = !DILocation(line: 830, column: 25, scope: !6941)
!6945 = !DILocation(line: 830, column: 31, scope: !6941)
!6946 = !DILocation(line: 832, column: 8, scope: !6947)
!6947 = distinct !DILexicalBlock(scope: !6941, file: !89, line: 832, column: 8)
!6948 = !DILocation(line: 832, column: 8, scope: !6941)
!6949 = !DILocalVariable(name: "next", scope: !6950, file: !89, line: 834, type: !5241)
!6950 = distinct !DILexicalBlock(scope: !6947, file: !89, line: 833, column: 6)
!6951 = !DILocation(line: 834, column: 27, scope: !6950)
!6952 = !DILocation(line: 834, column: 34, scope: !6950)
!6953 = !DILocation(line: 834, column: 42, scope: !6950)
!6954 = !DILocation(line: 838, column: 23, scope: !6950)
!6955 = !DILocation(line: 838, column: 29, scope: !6950)
!6956 = !DILocation(line: 838, column: 8, scope: !6950)
!6957 = !DILocation(line: 838, column: 16, scope: !6950)
!6958 = !DILocation(line: 838, column: 21, scope: !6950)
!6959 = !DILocation(line: 839, column: 20, scope: !6950)
!6960 = !DILocation(line: 839, column: 27, scope: !6950)
!6961 = !DILocation(line: 839, column: 8, scope: !6950)
!6962 = !DILocation(line: 840, column: 6, scope: !6950)
!6963 = !DILocation(line: 842, column: 11, scope: !6941)
!6964 = !DILocation(line: 842, column: 4, scope: !6941)
!6965 = !DILocation(line: 844, column: 5, scope: !6927)
!6966 = !DILocation(line: 825, column: 48, scope: !6922)
!6967 = !DILocation(line: 825, column: 56, scope: !6922)
!6968 = !DILocation(line: 825, column: 46, scope: !6922)
!6969 = !DILocation(line: 825, column: 3, scope: !6922)
!6970 = distinct !{!6970, !6924, !6971}
!6971 = !DILocation(line: 844, column: 5, scope: !6918)
!6972 = !DILocation(line: 847, column: 3, scope: !6833)
!6973 = !DILocation(line: 848, column: 1, scope: !6833)
!6974 = distinct !DISubprogram(name: "hash_delete", scope: !89, file: !89, line: 1110, type: !6698, isLocal: false, isDefinition: true, scopeLine: 1111, flags: DIFlagPrototyped, isOptimized: false, unit: !88, variables: !25)
!6975 = !DILocalVariable(name: "table", arg: 1, scope: !6974, file: !89, line: 1110, type: !5824)
!6976 = !DILocation(line: 1110, column: 26, scope: !6974)
!6977 = !DILocalVariable(name: "entry", arg: 2, scope: !6974, file: !89, line: 1110, type: !404)
!6978 = !DILocation(line: 1110, column: 45, scope: !6974)
!6979 = !DILocalVariable(name: "data", scope: !6974, file: !89, line: 1112, type: !16)
!6980 = !DILocation(line: 1112, column: 9, scope: !6974)
!6981 = !DILocalVariable(name: "bucket", scope: !6974, file: !89, line: 1113, type: !5241)
!6982 = !DILocation(line: 1113, column: 22, scope: !6974)
!6983 = !DILocation(line: 1115, column: 27, scope: !6974)
!6984 = !DILocation(line: 1115, column: 34, scope: !6974)
!6985 = !DILocation(line: 1115, column: 10, scope: !6974)
!6986 = !DILocation(line: 1115, column: 8, scope: !6974)
!6987 = !DILocation(line: 1116, column: 8, scope: !6988)
!6988 = distinct !DILexicalBlock(scope: !6974, file: !89, line: 1116, column: 7)
!6989 = !DILocation(line: 1116, column: 7, scope: !6974)
!6990 = !DILocation(line: 1117, column: 5, scope: !6988)
!6991 = !DILocation(line: 1119, column: 3, scope: !6974)
!6992 = !DILocation(line: 1119, column: 10, scope: !6974)
!6993 = !DILocation(line: 1119, column: 19, scope: !6974)
!6994 = !DILocation(line: 1120, column: 8, scope: !6995)
!6995 = distinct !DILexicalBlock(scope: !6974, file: !89, line: 1120, column: 7)
!6996 = !DILocation(line: 1120, column: 16, scope: !6995)
!6997 = !DILocation(line: 1120, column: 7, scope: !6974)
!6998 = !DILocation(line: 1122, column: 7, scope: !6999)
!6999 = distinct !DILexicalBlock(scope: !6995, file: !89, line: 1121, column: 5)
!7000 = !DILocation(line: 1122, column: 14, scope: !6999)
!7001 = !DILocation(line: 1122, column: 28, scope: !6999)
!7002 = !DILocation(line: 1127, column: 11, scope: !7003)
!7003 = distinct !DILexicalBlock(scope: !6999, file: !89, line: 1127, column: 11)
!7004 = !DILocation(line: 1127, column: 18, scope: !7003)
!7005 = !DILocation(line: 1128, column: 6, scope: !7003)
!7006 = !DILocation(line: 1128, column: 13, scope: !7003)
!7007 = !DILocation(line: 1128, column: 21, scope: !7003)
!7008 = !DILocation(line: 1128, column: 40, scope: !7003)
!7009 = !DILocation(line: 1128, column: 47, scope: !7003)
!7010 = !DILocation(line: 1128, column: 38, scope: !7003)
!7011 = !DILocation(line: 1128, column: 4, scope: !7003)
!7012 = !DILocation(line: 1127, column: 11, scope: !6999)
!7013 = !DILocation(line: 1132, column: 18, scope: !7014)
!7014 = distinct !DILexicalBlock(scope: !7003, file: !89, line: 1129, column: 2)
!7015 = !DILocation(line: 1132, column: 4, scope: !7014)
!7016 = !DILocation(line: 1133, column: 8, scope: !7017)
!7017 = distinct !DILexicalBlock(scope: !7014, file: !89, line: 1133, column: 8)
!7018 = !DILocation(line: 1133, column: 15, scope: !7017)
!7019 = !DILocation(line: 1134, column: 10, scope: !7017)
!7020 = !DILocation(line: 1134, column: 17, scope: !7017)
!7021 = !DILocation(line: 1134, column: 25, scope: !7017)
!7022 = !DILocation(line: 1134, column: 44, scope: !7017)
!7023 = !DILocation(line: 1134, column: 51, scope: !7017)
!7024 = !DILocation(line: 1134, column: 42, scope: !7017)
!7025 = !DILocation(line: 1134, column: 8, scope: !7017)
!7026 = !DILocation(line: 1133, column: 8, scope: !7014)
!7027 = !DILocalVariable(name: "tuning", scope: !7028, file: !89, line: 1136, type: !5253)
!7028 = distinct !DILexicalBlock(scope: !7017, file: !89, line: 1135, column: 6)
!7029 = !DILocation(line: 1136, column: 27, scope: !7028)
!7030 = !DILocation(line: 1136, column: 36, scope: !7028)
!7031 = !DILocation(line: 1136, column: 43, scope: !7028)
!7032 = !DILocalVariable(name: "candidate", scope: !7028, file: !89, line: 1137, type: !91)
!7033 = !DILocation(line: 1137, column: 15, scope: !7028)
!7034 = !DILocation(line: 1138, column: 4, scope: !7028)
!7035 = !DILocation(line: 1138, column: 12, scope: !7028)
!7036 = !DILocation(line: 1139, column: 6, scope: !7028)
!7037 = !DILocation(line: 1139, column: 13, scope: !7028)
!7038 = !DILocation(line: 1139, column: 25, scope: !7028)
!7039 = !DILocation(line: 1139, column: 33, scope: !7028)
!7040 = !DILocation(line: 1139, column: 23, scope: !7028)
!7041 = !DILocation(line: 1140, column: 7, scope: !7028)
!7042 = !DILocation(line: 1140, column: 14, scope: !7028)
!7043 = !DILocation(line: 1140, column: 26, scope: !7028)
!7044 = !DILocation(line: 1140, column: 34, scope: !7028)
!7045 = !DILocation(line: 1140, column: 24, scope: !7028)
!7046 = !DILocation(line: 1141, column: 9, scope: !7028)
!7047 = !DILocation(line: 1141, column: 17, scope: !7028)
!7048 = !DILocation(line: 1141, column: 7, scope: !7028)
!7049 = !DILocation(line: 1138, column: 3, scope: !7028)
!7050 = !DILocation(line: 1143, column: 26, scope: !7051)
!7051 = distinct !DILexicalBlock(scope: !7028, file: !89, line: 1143, column: 12)
!7052 = !DILocation(line: 1143, column: 33, scope: !7051)
!7053 = !DILocation(line: 1143, column: 13, scope: !7051)
!7054 = !DILocation(line: 1143, column: 12, scope: !7028)
!7055 = !DILocalVariable(name: "cursor", scope: !7056, file: !89, line: 1151, type: !5241)
!7056 = distinct !DILexicalBlock(scope: !7051, file: !89, line: 1144, column: 3)
!7057 = !DILocation(line: 1151, column: 24, scope: !7056)
!7058 = !DILocation(line: 1151, column: 33, scope: !7056)
!7059 = !DILocation(line: 1151, column: 40, scope: !7056)
!7060 = !DILocalVariable(name: "next", scope: !7056, file: !89, line: 1152, type: !5241)
!7061 = !DILocation(line: 1152, column: 24, scope: !7056)
!7062 = !DILocation(line: 1153, column: 5, scope: !7056)
!7063 = !DILocation(line: 1153, column: 12, scope: !7056)
!7064 = !DILocation(line: 1155, column: 16, scope: !7065)
!7065 = distinct !DILexicalBlock(scope: !7056, file: !89, line: 1154, column: 7)
!7066 = !DILocation(line: 1155, column: 24, scope: !7065)
!7067 = !DILocation(line: 1155, column: 14, scope: !7065)
!7068 = !DILocation(line: 1156, column: 15, scope: !7065)
!7069 = !DILocation(line: 1156, column: 9, scope: !7065)
!7070 = !DILocation(line: 1157, column: 18, scope: !7065)
!7071 = !DILocation(line: 1157, column: 16, scope: !7065)
!7072 = distinct !{!7072, !7062, !7073}
!7073 = !DILocation(line: 1158, column: 7, scope: !7056)
!7074 = !DILocation(line: 1159, column: 5, scope: !7056)
!7075 = !DILocation(line: 1159, column: 12, scope: !7056)
!7076 = !DILocation(line: 1159, column: 28, scope: !7056)
!7077 = !DILocation(line: 1161, column: 3, scope: !7056)
!7078 = !DILocation(line: 1162, column: 6, scope: !7028)
!7079 = !DILocation(line: 1163, column: 2, scope: !7014)
!7080 = !DILocation(line: 1164, column: 5, scope: !6999)
!7081 = !DILocation(line: 1166, column: 10, scope: !6974)
!7082 = !DILocation(line: 1166, column: 3, scope: !6974)
!7083 = !DILocation(line: 1167, column: 1, scope: !6974)
!7084 = distinct !DISubprogram(name: "i_ring_init", scope: !411, file: !411, line: 25, type: !7085, isLocal: false, isDefinition: true, scopeLine: 26, flags: DIFlagPrototyped, isOptimized: false, unit: !410, variables: !25)
!7085 = !DISubroutineType(types: !7086)
!7086 = !{null, !7087, !23}
!7087 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7088, size: 64)
!7088 = !DIDerivedType(tag: DW_TAG_typedef, name: "I_ring", file: !369, line: 39, baseType: !7089)
!7089 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "I_ring", file: !369, line: 31, size: 256, elements: !7090)
!7090 = !{!7091, !7092, !7093, !7094, !7095}
!7091 = !DIDerivedType(tag: DW_TAG_member, name: "ir_data", scope: !7089, file: !369, line: 33, baseType: !373, size: 128)
!7092 = !DIDerivedType(tag: DW_TAG_member, name: "ir_default_val", scope: !7089, file: !369, line: 34, baseType: !23, size: 32, offset: 128)
!7093 = !DIDerivedType(tag: DW_TAG_member, name: "ir_front", scope: !7089, file: !369, line: 35, baseType: !159, size: 32, offset: 160)
!7094 = !DIDerivedType(tag: DW_TAG_member, name: "ir_back", scope: !7089, file: !369, line: 36, baseType: !159, size: 32, offset: 192)
!7095 = !DIDerivedType(tag: DW_TAG_member, name: "ir_empty", scope: !7089, file: !369, line: 37, baseType: !79, size: 8, offset: 224)
!7096 = !DILocalVariable(name: "ir", arg: 1, scope: !7084, file: !411, line: 25, type: !7087)
!7097 = !DILocation(line: 25, column: 22, scope: !7084)
!7098 = !DILocalVariable(name: "default_val", arg: 2, scope: !7084, file: !411, line: 25, type: !23)
!7099 = !DILocation(line: 25, column: 30, scope: !7084)
!7100 = !DILocalVariable(name: "i", scope: !7084, file: !411, line: 27, type: !23)
!7101 = !DILocation(line: 27, column: 7, scope: !7084)
!7102 = !DILocation(line: 28, column: 3, scope: !7084)
!7103 = !DILocation(line: 28, column: 7, scope: !7084)
!7104 = !DILocation(line: 28, column: 16, scope: !7084)
!7105 = !DILocation(line: 29, column: 3, scope: !7084)
!7106 = !DILocation(line: 29, column: 7, scope: !7084)
!7107 = !DILocation(line: 29, column: 16, scope: !7084)
!7108 = !DILocation(line: 30, column: 3, scope: !7084)
!7109 = !DILocation(line: 30, column: 7, scope: !7084)
!7110 = !DILocation(line: 30, column: 15, scope: !7084)
!7111 = !DILocation(line: 31, column: 10, scope: !7112)
!7112 = distinct !DILexicalBlock(scope: !7084, file: !411, line: 31, column: 3)
!7113 = !DILocation(line: 31, column: 8, scope: !7112)
!7114 = !DILocation(line: 31, column: 15, scope: !7115)
!7115 = distinct !DILexicalBlock(scope: !7112, file: !411, line: 31, column: 3)
!7116 = !DILocation(line: 31, column: 17, scope: !7115)
!7117 = !DILocation(line: 31, column: 3, scope: !7112)
!7118 = !DILocation(line: 32, column: 22, scope: !7115)
!7119 = !DILocation(line: 32, column: 5, scope: !7115)
!7120 = !DILocation(line: 32, column: 9, scope: !7115)
!7121 = !DILocation(line: 32, column: 17, scope: !7115)
!7122 = !DILocation(line: 32, column: 20, scope: !7115)
!7123 = !DILocation(line: 31, column: 33, scope: !7115)
!7124 = !DILocation(line: 31, column: 3, scope: !7115)
!7125 = distinct !{!7125, !7117, !7126}
!7126 = !DILocation(line: 32, column: 22, scope: !7112)
!7127 = !DILocation(line: 33, column: 24, scope: !7084)
!7128 = !DILocation(line: 33, column: 3, scope: !7084)
!7129 = !DILocation(line: 33, column: 7, scope: !7084)
!7130 = !DILocation(line: 33, column: 22, scope: !7084)
!7131 = !DILocation(line: 34, column: 1, scope: !7084)
!7132 = distinct !DISubprogram(name: "i_ring_empty", scope: !411, file: !411, line: 37, type: !7133, isLocal: false, isDefinition: true, scopeLine: 38, flags: DIFlagPrototyped, isOptimized: false, unit: !410, variables: !25)
!7133 = !DISubroutineType(types: !7134)
!7134 = !{!79, !7135}
!7135 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7136, size: 64)
!7136 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7088)
!7137 = !DILocalVariable(name: "ir", arg: 1, scope: !7132, file: !411, line: 37, type: !7135)
!7138 = !DILocation(line: 37, column: 29, scope: !7132)
!7139 = !DILocation(line: 39, column: 10, scope: !7132)
!7140 = !DILocation(line: 39, column: 14, scope: !7132)
!7141 = !DILocation(line: 39, column: 3, scope: !7132)
!7142 = distinct !DISubprogram(name: "i_ring_push", scope: !411, file: !411, line: 43, type: !7143, isLocal: false, isDefinition: true, scopeLine: 44, flags: DIFlagPrototyped, isOptimized: false, unit: !410, variables: !25)
!7143 = !DISubroutineType(types: !7144)
!7144 = !{!23, !7087, !23}
!7145 = !DILocalVariable(name: "ir", arg: 1, scope: !7142, file: !411, line: 43, type: !7087)
!7146 = !DILocation(line: 43, column: 22, scope: !7142)
!7147 = !DILocalVariable(name: "val", arg: 2, scope: !7142, file: !411, line: 43, type: !23)
!7148 = !DILocation(line: 43, column: 30, scope: !7142)
!7149 = !DILocalVariable(name: "dest_idx", scope: !7142, file: !411, line: 45, type: !159)
!7150 = !DILocation(line: 45, column: 16, scope: !7142)
!7151 = !DILocation(line: 45, column: 28, scope: !7142)
!7152 = !DILocation(line: 45, column: 32, scope: !7142)
!7153 = !DILocation(line: 45, column: 44, scope: !7142)
!7154 = !DILocation(line: 45, column: 48, scope: !7142)
!7155 = !DILocation(line: 45, column: 43, scope: !7142)
!7156 = !DILocation(line: 45, column: 41, scope: !7142)
!7157 = !DILocation(line: 45, column: 58, scope: !7142)
!7158 = !DILocalVariable(name: "old_val", scope: !7142, file: !411, line: 46, type: !23)
!7159 = !DILocation(line: 46, column: 7, scope: !7142)
!7160 = !DILocation(line: 46, column: 17, scope: !7142)
!7161 = !DILocation(line: 46, column: 21, scope: !7142)
!7162 = !DILocation(line: 46, column: 29, scope: !7142)
!7163 = !DILocation(line: 47, column: 27, scope: !7142)
!7164 = !DILocation(line: 47, column: 3, scope: !7142)
!7165 = !DILocation(line: 47, column: 7, scope: !7142)
!7166 = !DILocation(line: 47, column: 15, scope: !7142)
!7167 = !DILocation(line: 47, column: 25, scope: !7142)
!7168 = !DILocation(line: 48, column: 18, scope: !7142)
!7169 = !DILocation(line: 48, column: 3, scope: !7142)
!7170 = !DILocation(line: 48, column: 7, scope: !7142)
!7171 = !DILocation(line: 48, column: 16, scope: !7142)
!7172 = !DILocation(line: 49, column: 7, scope: !7173)
!7173 = distinct !DILexicalBlock(scope: !7142, file: !411, line: 49, column: 7)
!7174 = !DILocation(line: 49, column: 19, scope: !7173)
!7175 = !DILocation(line: 49, column: 23, scope: !7173)
!7176 = !DILocation(line: 49, column: 16, scope: !7173)
!7177 = !DILocation(line: 49, column: 7, scope: !7142)
!7178 = !DILocation(line: 50, column: 20, scope: !7173)
!7179 = !DILocation(line: 50, column: 24, scope: !7173)
!7180 = !DILocation(line: 50, column: 35, scope: !7173)
!7181 = !DILocation(line: 50, column: 39, scope: !7173)
!7182 = !DILocation(line: 50, column: 34, scope: !7173)
!7183 = !DILocation(line: 50, column: 32, scope: !7173)
!7184 = !DILocation(line: 50, column: 49, scope: !7173)
!7185 = !DILocation(line: 50, column: 5, scope: !7173)
!7186 = !DILocation(line: 50, column: 9, scope: !7173)
!7187 = !DILocation(line: 50, column: 17, scope: !7173)
!7188 = !DILocation(line: 51, column: 3, scope: !7142)
!7189 = !DILocation(line: 51, column: 7, scope: !7142)
!7190 = !DILocation(line: 51, column: 16, scope: !7142)
!7191 = !DILocation(line: 52, column: 10, scope: !7142)
!7192 = !DILocation(line: 52, column: 3, scope: !7142)
!7193 = distinct !DISubprogram(name: "i_ring_pop", scope: !411, file: !411, line: 56, type: !7194, isLocal: false, isDefinition: true, scopeLine: 57, flags: DIFlagPrototyped, isOptimized: false, unit: !410, variables: !25)
!7194 = !DISubroutineType(types: !7195)
!7195 = !{!23, !7087}
!7196 = !DILocalVariable(name: "ir", arg: 1, scope: !7193, file: !411, line: 56, type: !7087)
!7197 = !DILocation(line: 56, column: 21, scope: !7193)
!7198 = !DILocalVariable(name: "top_val", scope: !7193, file: !411, line: 58, type: !23)
!7199 = !DILocation(line: 58, column: 7, scope: !7193)
!7200 = !DILocation(line: 59, column: 21, scope: !7201)
!7201 = distinct !DILexicalBlock(scope: !7193, file: !411, line: 59, column: 7)
!7202 = !DILocation(line: 59, column: 7, scope: !7201)
!7203 = !DILocation(line: 59, column: 7, scope: !7193)
!7204 = !DILocation(line: 60, column: 5, scope: !7201)
!7205 = !DILocation(line: 61, column: 13, scope: !7193)
!7206 = !DILocation(line: 61, column: 17, scope: !7193)
!7207 = !DILocation(line: 61, column: 25, scope: !7193)
!7208 = !DILocation(line: 61, column: 29, scope: !7193)
!7209 = !DILocation(line: 61, column: 11, scope: !7193)
!7210 = !DILocation(line: 62, column: 31, scope: !7193)
!7211 = !DILocation(line: 62, column: 35, scope: !7193)
!7212 = !DILocation(line: 62, column: 3, scope: !7193)
!7213 = !DILocation(line: 62, column: 7, scope: !7193)
!7214 = !DILocation(line: 62, column: 15, scope: !7193)
!7215 = !DILocation(line: 62, column: 19, scope: !7193)
!7216 = !DILocation(line: 62, column: 29, scope: !7193)
!7217 = !DILocation(line: 63, column: 7, scope: !7218)
!7218 = distinct !DILexicalBlock(scope: !7193, file: !411, line: 63, column: 7)
!7219 = !DILocation(line: 63, column: 11, scope: !7218)
!7220 = !DILocation(line: 63, column: 23, scope: !7218)
!7221 = !DILocation(line: 63, column: 27, scope: !7218)
!7222 = !DILocation(line: 63, column: 20, scope: !7218)
!7223 = !DILocation(line: 63, column: 7, scope: !7193)
!7224 = !DILocation(line: 64, column: 5, scope: !7218)
!7225 = !DILocation(line: 64, column: 9, scope: !7218)
!7226 = !DILocation(line: 64, column: 18, scope: !7218)
!7227 = !DILocation(line: 66, column: 22, scope: !7218)
!7228 = !DILocation(line: 66, column: 26, scope: !7218)
!7229 = !DILocation(line: 66, column: 35, scope: !7218)
!7230 = !DILocation(line: 66, column: 49, scope: !7218)
!7231 = !DILocation(line: 66, column: 54, scope: !7218)
!7232 = !DILocation(line: 66, column: 5, scope: !7218)
!7233 = !DILocation(line: 66, column: 9, scope: !7218)
!7234 = !DILocation(line: 66, column: 18, scope: !7218)
!7235 = !DILocation(line: 67, column: 10, scope: !7193)
!7236 = !DILocation(line: 67, column: 3, scope: !7193)
!7237 = distinct !DISubprogram(name: "open_safer", scope: !417, file: !417, line: 29, type: !7238, isLocal: false, isDefinition: true, scopeLine: 30, flags: DIFlagPrototyped, isOptimized: false, unit: !416, variables: !25)
!7238 = !DISubroutineType(types: !7239)
!7239 = !{!23, !12, !23, null}
!7240 = !DILocalVariable(name: "file", arg: 1, scope: !7237, file: !417, line: 29, type: !12)
!7241 = !DILocation(line: 29, column: 25, scope: !7237)
!7242 = !DILocalVariable(name: "flags", arg: 2, scope: !7237, file: !417, line: 29, type: !23)
!7243 = !DILocation(line: 29, column: 35, scope: !7237)
!7244 = !DILocalVariable(name: "mode", scope: !7237, file: !417, line: 31, type: !4954)
!7245 = !DILocation(line: 31, column: 10, scope: !7237)
!7246 = !DILocation(line: 33, column: 7, scope: !7247)
!7247 = distinct !DILexicalBlock(scope: !7237, file: !417, line: 33, column: 7)
!7248 = !DILocation(line: 33, column: 13, scope: !7247)
!7249 = !DILocation(line: 33, column: 7, scope: !7237)
!7250 = !DILocalVariable(name: "ap", scope: !7251, file: !417, line: 35, type: !7252)
!7251 = distinct !DILexicalBlock(scope: !7247, file: !417, line: 34, column: 5)
!7252 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !2035, line: 30, baseType: !7253)
!7253 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !417, line: 35, baseType: !7254)
!7254 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7255, size: 192, elements: !321)
!7255 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", file: !417, line: 35, size: 192, elements: !7256)
!7256 = !{!7257, !7258, !7259, !7260}
!7257 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !7255, file: !417, line: 35, baseType: !159, size: 32)
!7258 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !7255, file: !417, line: 35, baseType: !159, size: 32, offset: 32)
!7259 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !7255, file: !417, line: 35, baseType: !16, size: 64, offset: 64)
!7260 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !7255, file: !417, line: 35, baseType: !16, size: 64, offset: 128)
!7261 = !DILocation(line: 35, column: 15, scope: !7251)
!7262 = !DILocation(line: 36, column: 7, scope: !7251)
!7263 = !DILocation(line: 40, column: 14, scope: !7251)
!7264 = !DILocation(line: 40, column: 12, scope: !7251)
!7265 = !DILocation(line: 42, column: 7, scope: !7251)
!7266 = !DILocation(line: 43, column: 5, scope: !7251)
!7267 = !DILocation(line: 45, column: 26, scope: !7237)
!7268 = !DILocation(line: 45, column: 32, scope: !7237)
!7269 = !DILocation(line: 45, column: 39, scope: !7237)
!7270 = !DILocation(line: 45, column: 20, scope: !7237)
!7271 = !DILocation(line: 45, column: 10, scope: !7237)
!7272 = !DILocation(line: 45, column: 3, scope: !7237)
!7273 = distinct !DISubprogram(name: "openat_safer", scope: !419, file: !419, line: 29, type: !7274, isLocal: false, isDefinition: true, scopeLine: 30, flags: DIFlagPrototyped, isOptimized: false, unit: !418, variables: !25)
!7274 = !DISubroutineType(types: !7275)
!7275 = !{!23, !23, !12, !23, null}
!7276 = !DILocalVariable(name: "fd", arg: 1, scope: !7273, file: !419, line: 29, type: !23)
!7277 = !DILocation(line: 29, column: 19, scope: !7273)
!7278 = !DILocalVariable(name: "file", arg: 2, scope: !7273, file: !419, line: 29, type: !12)
!7279 = !DILocation(line: 29, column: 35, scope: !7273)
!7280 = !DILocalVariable(name: "flags", arg: 3, scope: !7273, file: !419, line: 29, type: !23)
!7281 = !DILocation(line: 29, column: 45, scope: !7273)
!7282 = !DILocalVariable(name: "mode", scope: !7273, file: !419, line: 31, type: !4954)
!7283 = !DILocation(line: 31, column: 10, scope: !7273)
!7284 = !DILocation(line: 33, column: 7, scope: !7285)
!7285 = distinct !DILexicalBlock(scope: !7273, file: !419, line: 33, column: 7)
!7286 = !DILocation(line: 33, column: 13, scope: !7285)
!7287 = !DILocation(line: 33, column: 7, scope: !7273)
!7288 = !DILocalVariable(name: "ap", scope: !7289, file: !419, line: 35, type: !7290)
!7289 = distinct !DILexicalBlock(scope: !7285, file: !419, line: 34, column: 5)
!7290 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !2035, line: 30, baseType: !7291)
!7291 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !419, line: 35, baseType: !7292)
!7292 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7293, size: 192, elements: !321)
!7293 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", file: !419, line: 35, size: 192, elements: !7294)
!7294 = !{!7295, !7296, !7297, !7298}
!7295 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !7293, file: !419, line: 35, baseType: !159, size: 32)
!7296 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !7293, file: !419, line: 35, baseType: !159, size: 32, offset: 32)
!7297 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !7293, file: !419, line: 35, baseType: !16, size: 64, offset: 64)
!7298 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !7293, file: !419, line: 35, baseType: !16, size: 64, offset: 128)
!7299 = !DILocation(line: 35, column: 15, scope: !7289)
!7300 = !DILocation(line: 36, column: 7, scope: !7289)
!7301 = !DILocation(line: 40, column: 14, scope: !7289)
!7302 = !DILocation(line: 40, column: 12, scope: !7289)
!7303 = !DILocation(line: 42, column: 7, scope: !7289)
!7304 = !DILocation(line: 43, column: 5, scope: !7289)
!7305 = !DILocation(line: 45, column: 28, scope: !7273)
!7306 = !DILocation(line: 45, column: 32, scope: !7273)
!7307 = !DILocation(line: 45, column: 38, scope: !7273)
!7308 = !DILocation(line: 45, column: 45, scope: !7273)
!7309 = !DILocation(line: 45, column: 20, scope: !7273)
!7310 = !DILocation(line: 45, column: 10, scope: !7273)
!7311 = !DILocation(line: 45, column: 3, scope: !7273)
!7312 = distinct !DISubprogram(name: "opendir_safer", scope: !421, file: !421, line: 31, type: !7313, isLocal: false, isDefinition: true, scopeLine: 32, flags: DIFlagPrototyped, isOptimized: false, unit: !420, variables: !25)
!7313 = !DISubroutineType(types: !7314)
!7314 = !{!3982, !12}
!7315 = !DILocalVariable(name: "name", arg: 1, scope: !7312, file: !421, line: 31, type: !12)
!7316 = !DILocation(line: 31, column: 28, scope: !7312)
!7317 = !DILocalVariable(name: "dp", scope: !7312, file: !421, line: 33, type: !3982)
!7318 = !DILocation(line: 33, column: 8, scope: !7312)
!7319 = !DILocation(line: 33, column: 22, scope: !7312)
!7320 = !DILocation(line: 33, column: 13, scope: !7312)
!7321 = !DILocation(line: 35, column: 7, scope: !7322)
!7322 = distinct !DILexicalBlock(scope: !7312, file: !421, line: 35, column: 7)
!7323 = !DILocation(line: 35, column: 7, scope: !7312)
!7324 = !DILocalVariable(name: "fd", scope: !7325, file: !421, line: 37, type: !23)
!7325 = distinct !DILexicalBlock(scope: !7322, file: !421, line: 36, column: 5)
!7326 = !DILocation(line: 37, column: 11, scope: !7325)
!7327 = !DILocation(line: 37, column: 23, scope: !7325)
!7328 = !DILocation(line: 37, column: 16, scope: !7325)
!7329 = !DILocation(line: 39, column: 16, scope: !7330)
!7330 = distinct !DILexicalBlock(scope: !7325, file: !421, line: 39, column: 11)
!7331 = !DILocation(line: 39, column: 13, scope: !7330)
!7332 = !DILocation(line: 39, column: 19, scope: !7330)
!7333 = !DILocation(line: 39, column: 22, scope: !7330)
!7334 = !DILocation(line: 39, column: 25, scope: !7330)
!7335 = !DILocation(line: 39, column: 11, scope: !7325)
!7336 = !DILocalVariable(name: "newdp", scope: !7337, file: !421, line: 49, type: !3982)
!7337 = distinct !DILexicalBlock(scope: !7330, file: !421, line: 40, column: 9)
!7338 = !DILocation(line: 49, column: 16, scope: !7337)
!7339 = !DILocalVariable(name: "e", scope: !7337, file: !421, line: 50, type: !23)
!7340 = !DILocation(line: 50, column: 15, scope: !7337)
!7341 = !DILocalVariable(name: "f", scope: !7337, file: !421, line: 52, type: !23)
!7342 = !DILocation(line: 52, column: 15, scope: !7337)
!7343 = !DILocation(line: 52, column: 30, scope: !7337)
!7344 = !DILocation(line: 52, column: 19, scope: !7337)
!7345 = !DILocation(line: 53, column: 30, scope: !7337)
!7346 = !DILocation(line: 53, column: 19, scope: !7337)
!7347 = !DILocation(line: 53, column: 17, scope: !7337)
!7348 = !DILocation(line: 54, column: 15, scope: !7337)
!7349 = !DILocation(line: 54, column: 13, scope: !7337)
!7350 = !DILocation(line: 55, column: 17, scope: !7351)
!7351 = distinct !DILexicalBlock(scope: !7337, file: !421, line: 55, column: 15)
!7352 = !DILocation(line: 55, column: 15, scope: !7337)
!7353 = !DILocation(line: 56, column: 20, scope: !7351)
!7354 = !DILocation(line: 56, column: 13, scope: !7351)
!7355 = !DILocation(line: 61, column: 21, scope: !7337)
!7356 = !DILocation(line: 61, column: 11, scope: !7337)
!7357 = !DILocation(line: 62, column: 19, scope: !7337)
!7358 = !DILocation(line: 62, column: 11, scope: !7337)
!7359 = !DILocation(line: 62, column: 17, scope: !7337)
!7360 = !DILocation(line: 63, column: 16, scope: !7337)
!7361 = !DILocation(line: 63, column: 14, scope: !7337)
!7362 = !DILocation(line: 64, column: 9, scope: !7337)
!7363 = !DILocation(line: 65, column: 5, scope: !7325)
!7364 = !DILocation(line: 67, column: 10, scope: !7312)
!7365 = !DILocation(line: 67, column: 3, scope: !7312)
!7366 = distinct !DISubprogram(name: "quote_n", scope: !423, file: !423, line: 29, type: !7367, isLocal: false, isDefinition: true, scopeLine: 30, flags: DIFlagPrototyped, isOptimized: false, unit: !422, variables: !25)
!7367 = !DISubroutineType(types: !7368)
!7368 = !{!12, !23, !12}
!7369 = !DILocalVariable(name: "n", arg: 1, scope: !7366, file: !423, line: 29, type: !23)
!7370 = !DILocation(line: 29, column: 14, scope: !7366)
!7371 = !DILocalVariable(name: "name", arg: 2, scope: !7366, file: !423, line: 29, type: !12)
!7372 = !DILocation(line: 29, column: 29, scope: !7366)
!7373 = !DILocation(line: 31, column: 28, scope: !7366)
!7374 = !DILocation(line: 31, column: 53, scope: !7366)
!7375 = !DILocation(line: 31, column: 10, scope: !7366)
!7376 = !DILocation(line: 31, column: 3, scope: !7366)
!7377 = distinct !DISubprogram(name: "quote", scope: !423, file: !423, line: 37, type: !7378, isLocal: false, isDefinition: true, scopeLine: 38, flags: DIFlagPrototyped, isOptimized: false, unit: !422, variables: !25)
!7378 = !DISubroutineType(types: !7379)
!7379 = !{!12, !12}
!7380 = !DILocalVariable(name: "name", arg: 1, scope: !7377, file: !423, line: 37, type: !12)
!7381 = !DILocation(line: 37, column: 20, scope: !7377)
!7382 = !DILocation(line: 39, column: 22, scope: !7377)
!7383 = !DILocation(line: 39, column: 10, scope: !7377)
!7384 = !DILocation(line: 39, column: 3, scope: !7377)
!7385 = distinct !DISubprogram(name: "clone_quoting_options", scope: !108, file: !108, line: 99, type: !7386, isLocal: false, isDefinition: true, scopeLine: 100, flags: DIFlagPrototyped, isOptimized: false, unit: !107, variables: !25)
!7386 = !DISubroutineType(types: !7387)
!7387 = !{!7388, !7388}
!7388 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !153, size: 64)
!7389 = !DILocalVariable(name: "o", arg: 1, scope: !7385, file: !108, line: 99, type: !7388)
!7390 = !DILocation(line: 99, column: 48, scope: !7385)
!7391 = !DILocalVariable(name: "e", scope: !7385, file: !108, line: 101, type: !23)
!7392 = !DILocation(line: 101, column: 7, scope: !7385)
!7393 = !DILocation(line: 101, column: 11, scope: !7385)
!7394 = !DILocalVariable(name: "p", scope: !7385, file: !108, line: 102, type: !7388)
!7395 = !DILocation(line: 102, column: 27, scope: !7385)
!7396 = !DILocation(line: 102, column: 40, scope: !7385)
!7397 = !DILocation(line: 102, column: 44, scope: !7385)
!7398 = !DILocation(line: 102, column: 31, scope: !7385)
!7399 = !DILocation(line: 104, column: 11, scope: !7385)
!7400 = !DILocation(line: 104, column: 3, scope: !7385)
!7401 = !DILocation(line: 104, column: 9, scope: !7385)
!7402 = !DILocation(line: 105, column: 10, scope: !7385)
!7403 = !DILocation(line: 105, column: 3, scope: !7385)
!7404 = distinct !DISubprogram(name: "get_quoting_style", scope: !108, file: !108, line: 110, type: !7405, isLocal: false, isDefinition: true, scopeLine: 111, flags: DIFlagPrototyped, isOptimized: false, unit: !107, variables: !25)
!7405 = !DISubroutineType(types: !7406)
!7406 = !{!110, !7388}
!7407 = !DILocalVariable(name: "o", arg: 1, scope: !7404, file: !108, line: 110, type: !7388)
!7408 = !DILocation(line: 110, column: 44, scope: !7404)
!7409 = !DILocation(line: 112, column: 11, scope: !7404)
!7410 = !DILocation(line: 112, column: 15, scope: !7404)
!7411 = !DILocation(line: 112, column: 46, scope: !7404)
!7412 = !DILocation(line: 112, column: 3, scope: !7404)
!7413 = distinct !DISubprogram(name: "set_quoting_style", scope: !108, file: !108, line: 118, type: !7414, isLocal: false, isDefinition: true, scopeLine: 119, flags: DIFlagPrototyped, isOptimized: false, unit: !107, variables: !25)
!7414 = !DISubroutineType(types: !7415)
!7415 = !{null, !7388, !110}
!7416 = !DILocalVariable(name: "o", arg: 1, scope: !7413, file: !108, line: 118, type: !7388)
!7417 = !DILocation(line: 118, column: 44, scope: !7413)
!7418 = !DILocalVariable(name: "s", arg: 2, scope: !7413, file: !108, line: 118, type: !110)
!7419 = !DILocation(line: 118, column: 66, scope: !7413)
!7420 = !DILocation(line: 120, column: 47, scope: !7413)
!7421 = !DILocation(line: 120, column: 4, scope: !7413)
!7422 = !DILocation(line: 120, column: 8, scope: !7413)
!7423 = !DILocation(line: 120, column: 39, scope: !7413)
!7424 = !DILocation(line: 120, column: 45, scope: !7413)
!7425 = !DILocation(line: 121, column: 1, scope: !7413)
!7426 = distinct !DISubprogram(name: "set_char_quoting", scope: !108, file: !108, line: 129, type: !7427, isLocal: false, isDefinition: true, scopeLine: 130, flags: DIFlagPrototyped, isOptimized: false, unit: !107, variables: !25)
!7427 = !DISubroutineType(types: !7428)
!7428 = !{!23, !7388, !14, !23}
!7429 = !DILocalVariable(name: "o", arg: 1, scope: !7426, file: !108, line: 129, type: !7388)
!7430 = !DILocation(line: 129, column: 43, scope: !7426)
!7431 = !DILocalVariable(name: "c", arg: 2, scope: !7426, file: !108, line: 129, type: !14)
!7432 = !DILocation(line: 129, column: 51, scope: !7426)
!7433 = !DILocalVariable(name: "i", arg: 3, scope: !7426, file: !108, line: 129, type: !23)
!7434 = !DILocation(line: 129, column: 58, scope: !7426)
!7435 = !DILocalVariable(name: "uc", scope: !7426, file: !108, line: 131, type: !3968)
!7436 = !DILocation(line: 131, column: 17, scope: !7426)
!7437 = !DILocation(line: 131, column: 22, scope: !7426)
!7438 = !DILocalVariable(name: "p", scope: !7426, file: !108, line: 132, type: !7439)
!7439 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !159, size: 64)
!7440 = !DILocation(line: 132, column: 17, scope: !7426)
!7441 = !DILocation(line: 133, column: 6, scope: !7426)
!7442 = !DILocation(line: 133, column: 10, scope: !7426)
!7443 = !DILocation(line: 133, column: 41, scope: !7426)
!7444 = !DILocation(line: 133, column: 5, scope: !7426)
!7445 = !DILocation(line: 133, column: 59, scope: !7426)
!7446 = !DILocation(line: 133, column: 62, scope: !7426)
!7447 = !DILocation(line: 133, column: 57, scope: !7426)
!7448 = !DILocalVariable(name: "shift", scope: !7426, file: !108, line: 134, type: !23)
!7449 = !DILocation(line: 134, column: 7, scope: !7426)
!7450 = !DILocation(line: 134, column: 15, scope: !7426)
!7451 = !DILocation(line: 134, column: 18, scope: !7426)
!7452 = !DILocalVariable(name: "r", scope: !7426, file: !108, line: 135, type: !23)
!7453 = !DILocation(line: 135, column: 7, scope: !7426)
!7454 = !DILocation(line: 135, column: 13, scope: !7426)
!7455 = !DILocation(line: 135, column: 12, scope: !7426)
!7456 = !DILocation(line: 135, column: 18, scope: !7426)
!7457 = !DILocation(line: 135, column: 15, scope: !7426)
!7458 = !DILocation(line: 135, column: 25, scope: !7426)
!7459 = !DILocation(line: 136, column: 11, scope: !7426)
!7460 = !DILocation(line: 136, column: 13, scope: !7426)
!7461 = !DILocation(line: 136, column: 20, scope: !7426)
!7462 = !DILocation(line: 136, column: 18, scope: !7426)
!7463 = !DILocation(line: 136, column: 26, scope: !7426)
!7464 = !DILocation(line: 136, column: 23, scope: !7426)
!7465 = !DILocation(line: 136, column: 4, scope: !7426)
!7466 = !DILocation(line: 136, column: 6, scope: !7426)
!7467 = !DILocation(line: 137, column: 10, scope: !7426)
!7468 = !DILocation(line: 137, column: 3, scope: !7426)
!7469 = distinct !DISubprogram(name: "set_quoting_flags", scope: !108, file: !108, line: 145, type: !7470, isLocal: false, isDefinition: true, scopeLine: 146, flags: DIFlagPrototyped, isOptimized: false, unit: !107, variables: !25)
!7470 = !DISubroutineType(types: !7471)
!7471 = !{!23, !7388, !23}
!7472 = !DILocalVariable(name: "o", arg: 1, scope: !7469, file: !108, line: 145, type: !7388)
!7473 = !DILocation(line: 145, column: 44, scope: !7469)
!7474 = !DILocalVariable(name: "i", arg: 2, scope: !7469, file: !108, line: 145, type: !23)
!7475 = !DILocation(line: 145, column: 51, scope: !7469)
!7476 = !DILocalVariable(name: "r", scope: !7469, file: !108, line: 147, type: !23)
!7477 = !DILocation(line: 147, column: 7, scope: !7469)
!7478 = !DILocation(line: 148, column: 8, scope: !7479)
!7479 = distinct !DILexicalBlock(scope: !7469, file: !108, line: 148, column: 7)
!7480 = !DILocation(line: 148, column: 7, scope: !7469)
!7481 = !DILocation(line: 149, column: 7, scope: !7479)
!7482 = !DILocation(line: 149, column: 5, scope: !7479)
!7483 = !DILocation(line: 150, column: 7, scope: !7469)
!7484 = !DILocation(line: 150, column: 10, scope: !7469)
!7485 = !DILocation(line: 150, column: 5, scope: !7469)
!7486 = !DILocation(line: 151, column: 14, scope: !7469)
!7487 = !DILocation(line: 151, column: 3, scope: !7469)
!7488 = !DILocation(line: 151, column: 6, scope: !7469)
!7489 = !DILocation(line: 151, column: 12, scope: !7469)
!7490 = !DILocation(line: 152, column: 10, scope: !7469)
!7491 = !DILocation(line: 152, column: 3, scope: !7469)
!7492 = distinct !DISubprogram(name: "set_custom_quoting", scope: !108, file: !108, line: 156, type: !7493, isLocal: false, isDefinition: true, scopeLine: 158, flags: DIFlagPrototyped, isOptimized: false, unit: !107, variables: !25)
!7493 = !DISubroutineType(types: !7494)
!7494 = !{null, !7388, !12, !12}
!7495 = !DILocalVariable(name: "o", arg: 1, scope: !7492, file: !108, line: 156, type: !7388)
!7496 = !DILocation(line: 156, column: 45, scope: !7492)
!7497 = !DILocalVariable(name: "left_quote", arg: 2, scope: !7492, file: !108, line: 157, type: !12)
!7498 = !DILocation(line: 157, column: 33, scope: !7492)
!7499 = !DILocalVariable(name: "right_quote", arg: 3, scope: !7492, file: !108, line: 157, type: !12)
!7500 = !DILocation(line: 157, column: 57, scope: !7492)
!7501 = !DILocation(line: 159, column: 8, scope: !7502)
!7502 = distinct !DILexicalBlock(scope: !7492, file: !108, line: 159, column: 7)
!7503 = !DILocation(line: 159, column: 7, scope: !7492)
!7504 = !DILocation(line: 160, column: 7, scope: !7502)
!7505 = !DILocation(line: 160, column: 5, scope: !7502)
!7506 = !DILocation(line: 161, column: 3, scope: !7492)
!7507 = !DILocation(line: 161, column: 6, scope: !7492)
!7508 = !DILocation(line: 161, column: 12, scope: !7492)
!7509 = !DILocation(line: 162, column: 8, scope: !7510)
!7510 = distinct !DILexicalBlock(scope: !7492, file: !108, line: 162, column: 7)
!7511 = !DILocation(line: 162, column: 19, scope: !7510)
!7512 = !DILocation(line: 162, column: 23, scope: !7510)
!7513 = !DILocation(line: 162, column: 7, scope: !7492)
!7514 = !DILocation(line: 163, column: 5, scope: !7510)
!7515 = !DILocation(line: 164, column: 19, scope: !7492)
!7516 = !DILocation(line: 164, column: 3, scope: !7492)
!7517 = !DILocation(line: 164, column: 6, scope: !7492)
!7518 = !DILocation(line: 164, column: 17, scope: !7492)
!7519 = !DILocation(line: 165, column: 20, scope: !7492)
!7520 = !DILocation(line: 165, column: 3, scope: !7492)
!7521 = !DILocation(line: 165, column: 6, scope: !7492)
!7522 = !DILocation(line: 165, column: 18, scope: !7492)
!7523 = !DILocation(line: 166, column: 1, scope: !7492)
!7524 = distinct !DISubprogram(name: "quotearg_buffer", scope: !108, file: !108, line: 628, type: !7525, isLocal: false, isDefinition: true, scopeLine: 631, flags: DIFlagPrototyped, isOptimized: false, unit: !107, variables: !25)
!7525 = !DISubroutineType(types: !7526)
!7526 = !{!91, !15, !91, !12, !91, !7527}
!7527 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7528, size: 64)
!7528 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !153)
!7529 = !DILocalVariable(name: "buffer", arg: 1, scope: !7524, file: !108, line: 628, type: !15)
!7530 = !DILocation(line: 628, column: 24, scope: !7524)
!7531 = !DILocalVariable(name: "buffersize", arg: 2, scope: !7524, file: !108, line: 628, type: !91)
!7532 = !DILocation(line: 628, column: 39, scope: !7524)
!7533 = !DILocalVariable(name: "arg", arg: 3, scope: !7524, file: !108, line: 629, type: !12)
!7534 = !DILocation(line: 629, column: 16, scope: !7524)
!7535 = !DILocalVariable(name: "argsize", arg: 4, scope: !7524, file: !108, line: 629, type: !91)
!7536 = !DILocation(line: 629, column: 28, scope: !7524)
!7537 = !DILocalVariable(name: "o", arg: 5, scope: !7524, file: !108, line: 630, type: !7527)
!7538 = !DILocation(line: 630, column: 34, scope: !7524)
!7539 = !DILocalVariable(name: "p", scope: !7524, file: !108, line: 632, type: !7527)
!7540 = !DILocation(line: 632, column: 33, scope: !7524)
!7541 = !DILocation(line: 632, column: 37, scope: !7524)
!7542 = !DILocation(line: 632, column: 41, scope: !7524)
!7543 = !DILocalVariable(name: "e", scope: !7524, file: !108, line: 633, type: !23)
!7544 = !DILocation(line: 633, column: 7, scope: !7524)
!7545 = !DILocation(line: 633, column: 11, scope: !7524)
!7546 = !DILocalVariable(name: "r", scope: !7524, file: !108, line: 634, type: !91)
!7547 = !DILocation(line: 634, column: 10, scope: !7524)
!7548 = !DILocation(line: 634, column: 40, scope: !7524)
!7549 = !DILocation(line: 634, column: 48, scope: !7524)
!7550 = !DILocation(line: 634, column: 60, scope: !7524)
!7551 = !DILocation(line: 634, column: 65, scope: !7524)
!7552 = !DILocation(line: 635, column: 12, scope: !7524)
!7553 = !DILocation(line: 635, column: 15, scope: !7524)
!7554 = !DILocation(line: 635, column: 22, scope: !7524)
!7555 = !DILocation(line: 635, column: 25, scope: !7524)
!7556 = !DILocation(line: 635, column: 32, scope: !7524)
!7557 = !DILocation(line: 635, column: 35, scope: !7524)
!7558 = !DILocation(line: 636, column: 12, scope: !7524)
!7559 = !DILocation(line: 636, column: 15, scope: !7524)
!7560 = !DILocation(line: 636, column: 27, scope: !7524)
!7561 = !DILocation(line: 636, column: 30, scope: !7524)
!7562 = !DILocation(line: 634, column: 14, scope: !7524)
!7563 = !DILocation(line: 637, column: 11, scope: !7524)
!7564 = !DILocation(line: 637, column: 3, scope: !7524)
!7565 = !DILocation(line: 637, column: 9, scope: !7524)
!7566 = !DILocation(line: 638, column: 10, scope: !7524)
!7567 = !DILocation(line: 638, column: 3, scope: !7524)
!7568 = distinct !DISubprogram(name: "quotearg_buffer_restyled", scope: !108, file: !108, line: 204, type: !7569, isLocal: true, isDefinition: true, scopeLine: 210, flags: DIFlagPrototyped, isOptimized: false, unit: !107, variables: !25)
!7569 = !DISubroutineType(types: !7570)
!7570 = !{!91, !15, !91, !12, !91, !110, !23, !7571, !12, !12}
!7571 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7572, size: 64)
!7572 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !159)
!7573 = !DILocalVariable(name: "buffer", arg: 1, scope: !7568, file: !108, line: 204, type: !15)
!7574 = !DILocation(line: 204, column: 33, scope: !7568)
!7575 = !DILocalVariable(name: "buffersize", arg: 2, scope: !7568, file: !108, line: 204, type: !91)
!7576 = !DILocation(line: 204, column: 48, scope: !7568)
!7577 = !DILocalVariable(name: "arg", arg: 3, scope: !7568, file: !108, line: 205, type: !12)
!7578 = !DILocation(line: 205, column: 18, scope: !7568)
!7579 = !DILocalVariable(name: "argsize", arg: 4, scope: !7568, file: !108, line: 205, type: !91)
!7580 = !DILocation(line: 205, column: 30, scope: !7568)
!7581 = !DILocalVariable(name: "quoting_style", arg: 5, scope: !7568, file: !108, line: 206, type: !110)
!7582 = !DILocation(line: 206, column: 25, scope: !7568)
!7583 = !DILocalVariable(name: "flags", arg: 6, scope: !7568, file: !108, line: 206, type: !23)
!7584 = !DILocation(line: 206, column: 44, scope: !7568)
!7585 = !DILocalVariable(name: "quote_these_too", arg: 7, scope: !7568, file: !108, line: 207, type: !7571)
!7586 = !DILocation(line: 207, column: 26, scope: !7568)
!7587 = !DILocalVariable(name: "left_quote", arg: 8, scope: !7568, file: !108, line: 208, type: !12)
!7588 = !DILocation(line: 208, column: 18, scope: !7568)
!7589 = !DILocalVariable(name: "right_quote", arg: 9, scope: !7568, file: !108, line: 209, type: !12)
!7590 = !DILocation(line: 209, column: 18, scope: !7568)
!7591 = !DILocalVariable(name: "i", scope: !7568, file: !108, line: 211, type: !91)
!7592 = !DILocation(line: 211, column: 10, scope: !7568)
!7593 = !DILocalVariable(name: "len", scope: !7568, file: !108, line: 212, type: !91)
!7594 = !DILocation(line: 212, column: 10, scope: !7568)
!7595 = !DILocalVariable(name: "quote_string", scope: !7568, file: !108, line: 213, type: !12)
!7596 = !DILocation(line: 213, column: 15, scope: !7568)
!7597 = !DILocalVariable(name: "quote_string_len", scope: !7568, file: !108, line: 214, type: !91)
!7598 = !DILocation(line: 214, column: 10, scope: !7568)
!7599 = !DILocalVariable(name: "backslash_escapes", scope: !7568, file: !108, line: 215, type: !79)
!7600 = !DILocation(line: 215, column: 8, scope: !7568)
!7601 = !DILocalVariable(name: "unibyte_locale", scope: !7568, file: !108, line: 216, type: !79)
!7602 = !DILocation(line: 216, column: 8, scope: !7568)
!7603 = !DILocation(line: 216, column: 25, scope: !7568)
!7604 = !DILocation(line: 216, column: 36, scope: !7568)
!7605 = !DILocalVariable(name: "elide_outer_quotes", scope: !7568, file: !108, line: 217, type: !79)
!7606 = !DILocation(line: 217, column: 8, scope: !7568)
!7607 = !DILocation(line: 217, column: 30, scope: !7568)
!7608 = !DILocation(line: 217, column: 36, scope: !7568)
!7609 = !DILocation(line: 217, column: 61, scope: !7568)
!7610 = !DILocation(line: 228, column: 11, scope: !7568)
!7611 = !DILocation(line: 228, column: 3, scope: !7568)
!7612 = !DILocation(line: 231, column: 21, scope: !7613)
!7613 = distinct !DILexicalBlock(scope: !7568, file: !108, line: 229, column: 5)
!7614 = !DILocation(line: 232, column: 26, scope: !7613)
!7615 = !DILocation(line: 232, column: 7, scope: !7613)
!7616 = !DILocation(line: 235, column: 12, scope: !7617)
!7617 = distinct !DILexicalBlock(scope: !7613, file: !108, line: 235, column: 11)
!7618 = !DILocation(line: 235, column: 11, scope: !7613)
!7619 = !DILocation(line: 236, column: 2, scope: !7617)
!7620 = distinct !{!7620, !7619, !7619}
!7621 = !DILocation(line: 236, column: 2, scope: !7622)
!7622 = distinct !DILexicalBlock(scope: !7623, file: !108, line: 236, column: 2)
!7623 = distinct !DILexicalBlock(scope: !7617, file: !108, line: 236, column: 2)
!7624 = !DILocation(line: 236, column: 2, scope: !7623)
!7625 = !DILocation(line: 237, column: 25, scope: !7613)
!7626 = !DILocation(line: 238, column: 20, scope: !7613)
!7627 = !DILocation(line: 239, column: 24, scope: !7613)
!7628 = !DILocation(line: 240, column: 7, scope: !7613)
!7629 = !DILocation(line: 243, column: 25, scope: !7613)
!7630 = !DILocation(line: 244, column: 26, scope: !7613)
!7631 = !DILocation(line: 245, column: 7, scope: !7613)
!7632 = !DILocation(line: 251, column: 6, scope: !7633)
!7633 = distinct !DILexicalBlock(scope: !7634, file: !108, line: 251, column: 6)
!7634 = distinct !DILexicalBlock(scope: !7613, file: !108, line: 250, column: 7)
!7635 = !DILocation(line: 251, column: 20, scope: !7633)
!7636 = !DILocation(line: 251, column: 6, scope: !7634)
!7637 = !DILocation(line: 272, column: 43, scope: !7638)
!7638 = distinct !DILexicalBlock(scope: !7633, file: !108, line: 252, column: 4)
!7639 = !DILocation(line: 272, column: 19, scope: !7638)
!7640 = !DILocation(line: 272, column: 17, scope: !7638)
!7641 = !DILocation(line: 273, column: 44, scope: !7638)
!7642 = !DILocation(line: 273, column: 20, scope: !7638)
!7643 = !DILocation(line: 273, column: 18, scope: !7638)
!7644 = !DILocation(line: 274, column: 4, scope: !7638)
!7645 = !DILocation(line: 275, column: 7, scope: !7646)
!7646 = distinct !DILexicalBlock(scope: !7634, file: !108, line: 275, column: 6)
!7647 = !DILocation(line: 275, column: 6, scope: !7634)
!7648 = !DILocation(line: 276, column: 24, scope: !7649)
!7649 = distinct !DILexicalBlock(scope: !7646, file: !108, line: 276, column: 4)
!7650 = !DILocation(line: 276, column: 22, scope: !7649)
!7651 = !DILocation(line: 276, column: 9, scope: !7649)
!7652 = !DILocation(line: 276, column: 37, scope: !7653)
!7653 = distinct !DILexicalBlock(scope: !7649, file: !108, line: 276, column: 4)
!7654 = !DILocation(line: 276, column: 36, scope: !7653)
!7655 = !DILocation(line: 276, column: 4, scope: !7649)
!7656 = !DILocation(line: 277, column: 6, scope: !7653)
!7657 = distinct !{!7657, !7656, !7656}
!7658 = !DILocation(line: 277, column: 6, scope: !7659)
!7659 = distinct !DILexicalBlock(scope: !7660, file: !108, line: 277, column: 6)
!7660 = distinct !DILexicalBlock(scope: !7653, file: !108, line: 277, column: 6)
!7661 = !DILocation(line: 277, column: 6, scope: !7660)
!7662 = !DILocation(line: 276, column: 63, scope: !7653)
!7663 = !DILocation(line: 276, column: 4, scope: !7653)
!7664 = distinct !{!7664, !7655, !7665}
!7665 = !DILocation(line: 277, column: 6, scope: !7649)
!7666 = !DILocation(line: 278, column: 20, scope: !7634)
!7667 = !DILocation(line: 279, column: 17, scope: !7634)
!7668 = !DILocation(line: 279, column: 15, scope: !7634)
!7669 = !DILocation(line: 280, column: 29, scope: !7634)
!7670 = !DILocation(line: 280, column: 21, scope: !7634)
!7671 = !DILocation(line: 280, column: 19, scope: !7634)
!7672 = !DILocation(line: 282, column: 7, scope: !7613)
!7673 = !DILocation(line: 285, column: 21, scope: !7613)
!7674 = !DILocation(line: 286, column: 26, scope: !7613)
!7675 = !DILocation(line: 286, column: 7, scope: !7613)
!7676 = !DILocation(line: 289, column: 12, scope: !7677)
!7677 = distinct !DILexicalBlock(scope: !7613, file: !108, line: 289, column: 11)
!7678 = !DILocation(line: 289, column: 11, scope: !7613)
!7679 = !DILocation(line: 290, column: 2, scope: !7677)
!7680 = distinct !{!7680, !7679, !7679}
!7681 = !DILocation(line: 290, column: 2, scope: !7682)
!7682 = distinct !DILexicalBlock(scope: !7683, file: !108, line: 290, column: 2)
!7683 = distinct !DILexicalBlock(scope: !7677, file: !108, line: 290, column: 2)
!7684 = !DILocation(line: 290, column: 2, scope: !7683)
!7685 = !DILocation(line: 291, column: 20, scope: !7613)
!7686 = !DILocation(line: 292, column: 24, scope: !7613)
!7687 = !DILocation(line: 293, column: 7, scope: !7613)
!7688 = !DILocation(line: 296, column: 26, scope: !7613)
!7689 = !DILocation(line: 297, column: 7, scope: !7613)
!7690 = !DILocation(line: 300, column: 7, scope: !7613)
!7691 = !DILocation(line: 303, column: 10, scope: !7692)
!7692 = distinct !DILexicalBlock(scope: !7568, file: !108, line: 303, column: 3)
!7693 = !DILocation(line: 303, column: 8, scope: !7692)
!7694 = !DILocation(line: 303, column: 19, scope: !7695)
!7695 = distinct !DILexicalBlock(scope: !7692, file: !108, line: 303, column: 3)
!7696 = !DILocation(line: 303, column: 27, scope: !7695)
!7697 = !DILocation(line: 303, column: 41, scope: !7695)
!7698 = !DILocation(line: 303, column: 45, scope: !7695)
!7699 = !DILocation(line: 303, column: 48, scope: !7695)
!7700 = !DILocation(line: 303, column: 58, scope: !7695)
!7701 = !DILocation(line: 303, column: 63, scope: !7695)
!7702 = !DILocation(line: 303, column: 60, scope: !7695)
!7703 = !DILocation(line: 303, column: 16, scope: !7695)
!7704 = !DILocation(line: 303, column: 3, scope: !7692)
!7705 = !DILocalVariable(name: "c", scope: !7706, file: !108, line: 305, type: !3968)
!7706 = distinct !DILexicalBlock(scope: !7695, file: !108, line: 304, column: 5)
!7707 = !DILocation(line: 305, column: 21, scope: !7706)
!7708 = !DILocalVariable(name: "esc", scope: !7706, file: !108, line: 306, type: !3968)
!7709 = !DILocation(line: 306, column: 21, scope: !7706)
!7710 = !DILocalVariable(name: "is_right_quote", scope: !7706, file: !108, line: 307, type: !79)
!7711 = !DILocation(line: 307, column: 12, scope: !7706)
!7712 = !DILocation(line: 309, column: 11, scope: !7713)
!7713 = distinct !DILexicalBlock(scope: !7706, file: !108, line: 309, column: 11)
!7714 = !DILocation(line: 310, column: 4, scope: !7713)
!7715 = !DILocation(line: 310, column: 7, scope: !7713)
!7716 = !DILocation(line: 311, column: 4, scope: !7713)
!7717 = !DILocation(line: 311, column: 7, scope: !7713)
!7718 = !DILocation(line: 311, column: 11, scope: !7713)
!7719 = !DILocation(line: 311, column: 9, scope: !7713)
!7720 = !DILocation(line: 311, column: 31, scope: !7713)
!7721 = !DILocation(line: 311, column: 28, scope: !7713)
!7722 = !DILocation(line: 312, column: 4, scope: !7713)
!7723 = !DILocation(line: 312, column: 15, scope: !7713)
!7724 = !DILocation(line: 312, column: 21, scope: !7713)
!7725 = !DILocation(line: 312, column: 19, scope: !7713)
!7726 = !DILocation(line: 312, column: 24, scope: !7713)
!7727 = !DILocation(line: 312, column: 38, scope: !7713)
!7728 = !DILocation(line: 312, column: 7, scope: !7713)
!7729 = !DILocation(line: 312, column: 56, scope: !7713)
!7730 = !DILocation(line: 309, column: 11, scope: !7706)
!7731 = !DILocation(line: 314, column: 8, scope: !7732)
!7732 = distinct !DILexicalBlock(scope: !7733, file: !108, line: 314, column: 8)
!7733 = distinct !DILexicalBlock(scope: !7713, file: !108, line: 313, column: 2)
!7734 = !DILocation(line: 314, column: 8, scope: !7733)
!7735 = !DILocation(line: 315, column: 6, scope: !7732)
!7736 = !DILocation(line: 316, column: 19, scope: !7733)
!7737 = !DILocation(line: 317, column: 2, scope: !7733)
!7738 = !DILocation(line: 319, column: 11, scope: !7706)
!7739 = !DILocation(line: 319, column: 15, scope: !7706)
!7740 = !DILocation(line: 319, column: 9, scope: !7706)
!7741 = !DILocation(line: 320, column: 15, scope: !7706)
!7742 = !DILocation(line: 320, column: 7, scope: !7706)
!7743 = !DILocation(line: 323, column: 8, scope: !7744)
!7744 = distinct !DILexicalBlock(scope: !7745, file: !108, line: 323, column: 8)
!7745 = distinct !DILexicalBlock(scope: !7706, file: !108, line: 321, column: 2)
!7746 = !DILocation(line: 323, column: 8, scope: !7745)
!7747 = !DILocation(line: 325, column: 12, scope: !7748)
!7748 = distinct !DILexicalBlock(scope: !7749, file: !108, line: 325, column: 12)
!7749 = distinct !DILexicalBlock(scope: !7744, file: !108, line: 324, column: 6)
!7750 = !DILocation(line: 325, column: 12, scope: !7749)
!7751 = !DILocation(line: 326, column: 3, scope: !7748)
!7752 = !DILocation(line: 327, column: 8, scope: !7749)
!7753 = distinct !{!7753, !7752, !7752}
!7754 = !DILocation(line: 327, column: 8, scope: !7755)
!7755 = distinct !DILexicalBlock(scope: !7756, file: !108, line: 327, column: 8)
!7756 = distinct !DILexicalBlock(scope: !7749, file: !108, line: 327, column: 8)
!7757 = !DILocation(line: 327, column: 8, scope: !7756)
!7758 = !DILocation(line: 333, column: 12, scope: !7759)
!7759 = distinct !DILexicalBlock(scope: !7749, file: !108, line: 333, column: 12)
!7760 = !DILocation(line: 333, column: 14, scope: !7759)
!7761 = !DILocation(line: 333, column: 20, scope: !7759)
!7762 = !DILocation(line: 333, column: 18, scope: !7759)
!7763 = !DILocation(line: 333, column: 28, scope: !7759)
!7764 = !DILocation(line: 333, column: 38, scope: !7759)
!7765 = !DILocation(line: 333, column: 42, scope: !7759)
!7766 = !DILocation(line: 333, column: 44, scope: !7759)
!7767 = !DILocation(line: 333, column: 35, scope: !7759)
!7768 = !DILocation(line: 333, column: 49, scope: !7759)
!7769 = !DILocation(line: 333, column: 52, scope: !7759)
!7770 = !DILocation(line: 333, column: 56, scope: !7759)
!7771 = !DILocation(line: 333, column: 58, scope: !7759)
!7772 = !DILocation(line: 333, column: 63, scope: !7759)
!7773 = !DILocation(line: 333, column: 12, scope: !7749)
!7774 = !DILocation(line: 335, column: 5, scope: !7775)
!7775 = distinct !DILexicalBlock(scope: !7759, file: !108, line: 334, column: 3)
!7776 = distinct !{!7776, !7774, !7774}
!7777 = !DILocation(line: 335, column: 5, scope: !7778)
!7778 = distinct !DILexicalBlock(scope: !7779, file: !108, line: 335, column: 5)
!7779 = distinct !DILexicalBlock(scope: !7775, file: !108, line: 335, column: 5)
!7780 = !DILocation(line: 335, column: 5, scope: !7779)
!7781 = !DILocation(line: 336, column: 5, scope: !7775)
!7782 = distinct !{!7782, !7781, !7781}
!7783 = !DILocation(line: 336, column: 5, scope: !7784)
!7784 = distinct !DILexicalBlock(scope: !7785, file: !108, line: 336, column: 5)
!7785 = distinct !DILexicalBlock(scope: !7775, file: !108, line: 336, column: 5)
!7786 = !DILocation(line: 336, column: 5, scope: !7785)
!7787 = !DILocation(line: 337, column: 3, scope: !7775)
!7788 = !DILocation(line: 338, column: 10, scope: !7749)
!7789 = !DILocation(line: 343, column: 6, scope: !7749)
!7790 = !DILocation(line: 344, column: 13, scope: !7791)
!7791 = distinct !DILexicalBlock(scope: !7744, file: !108, line: 344, column: 13)
!7792 = !DILocation(line: 344, column: 19, scope: !7791)
!7793 = !DILocation(line: 344, column: 13, scope: !7744)
!7794 = !DILocation(line: 345, column: 6, scope: !7791)
!7795 = !DILocation(line: 346, column: 4, scope: !7745)
!7796 = !DILocation(line: 349, column: 12, scope: !7745)
!7797 = !DILocation(line: 349, column: 4, scope: !7745)
!7798 = !DILocation(line: 352, column: 12, scope: !7799)
!7799 = distinct !DILexicalBlock(scope: !7800, file: !108, line: 352, column: 12)
!7800 = distinct !DILexicalBlock(scope: !7745, file: !108, line: 350, column: 6)
!7801 = !DILocation(line: 352, column: 12, scope: !7800)
!7802 = !DILocation(line: 353, column: 3, scope: !7799)
!7803 = !DILocation(line: 354, column: 8, scope: !7800)
!7804 = !DILocation(line: 357, column: 13, scope: !7805)
!7805 = distinct !DILexicalBlock(scope: !7800, file: !108, line: 357, column: 12)
!7806 = !DILocation(line: 357, column: 19, scope: !7805)
!7807 = !DILocation(line: 358, column: 5, scope: !7805)
!7808 = !DILocation(line: 358, column: 8, scope: !7805)
!7809 = !DILocation(line: 358, column: 10, scope: !7805)
!7810 = !DILocation(line: 358, column: 16, scope: !7805)
!7811 = !DILocation(line: 358, column: 14, scope: !7805)
!7812 = !DILocation(line: 358, column: 24, scope: !7805)
!7813 = !DILocation(line: 358, column: 27, scope: !7805)
!7814 = !DILocation(line: 358, column: 31, scope: !7805)
!7815 = !DILocation(line: 358, column: 33, scope: !7805)
!7816 = !DILocation(line: 358, column: 38, scope: !7805)
!7817 = !DILocation(line: 357, column: 12, scope: !7800)
!7818 = !DILocation(line: 359, column: 11, scope: !7805)
!7819 = !DILocation(line: 359, column: 15, scope: !7805)
!7820 = !DILocation(line: 359, column: 17, scope: !7805)
!7821 = !DILocation(line: 359, column: 3, scope: !7805)
!7822 = !DILocation(line: 366, column: 11, scope: !7823)
!7823 = distinct !DILexicalBlock(scope: !7824, file: !108, line: 366, column: 11)
!7824 = distinct !DILexicalBlock(scope: !7805, file: !108, line: 360, column: 5)
!7825 = !DILocation(line: 366, column: 11, scope: !7824)
!7826 = !DILocation(line: 367, column: 9, scope: !7823)
!7827 = !DILocation(line: 368, column: 11, scope: !7824)
!7828 = !DILocation(line: 368, column: 15, scope: !7824)
!7829 = !DILocation(line: 368, column: 17, scope: !7824)
!7830 = !DILocation(line: 368, column: 9, scope: !7824)
!7831 = !DILocation(line: 369, column: 9, scope: !7824)
!7832 = !DILocation(line: 370, column: 7, scope: !7824)
!7833 = distinct !{!7833, !7832, !7832}
!7834 = !DILocation(line: 370, column: 7, scope: !7835)
!7835 = distinct !DILexicalBlock(scope: !7836, file: !108, line: 370, column: 7)
!7836 = distinct !DILexicalBlock(scope: !7824, file: !108, line: 370, column: 7)
!7837 = !DILocation(line: 370, column: 7, scope: !7836)
!7838 = !DILocation(line: 371, column: 7, scope: !7824)
!7839 = distinct !{!7839, !7838, !7838}
!7840 = !DILocation(line: 371, column: 7, scope: !7841)
!7841 = distinct !DILexicalBlock(scope: !7842, file: !108, line: 371, column: 7)
!7842 = distinct !DILexicalBlock(scope: !7824, file: !108, line: 371, column: 7)
!7843 = !DILocation(line: 371, column: 7, scope: !7842)
!7844 = !DILocation(line: 372, column: 7, scope: !7824)
!7845 = distinct !{!7845, !7844, !7844}
!7846 = !DILocation(line: 372, column: 7, scope: !7847)
!7847 = distinct !DILexicalBlock(scope: !7848, file: !108, line: 372, column: 7)
!7848 = distinct !DILexicalBlock(scope: !7824, file: !108, line: 372, column: 7)
!7849 = !DILocation(line: 372, column: 7, scope: !7848)
!7850 = !DILocation(line: 373, column: 7, scope: !7824)
!7851 = distinct !{!7851, !7850, !7850}
!7852 = !DILocation(line: 373, column: 7, scope: !7853)
!7853 = distinct !DILexicalBlock(scope: !7854, file: !108, line: 373, column: 7)
!7854 = distinct !DILexicalBlock(scope: !7824, file: !108, line: 373, column: 7)
!7855 = !DILocation(line: 373, column: 7, scope: !7854)
!7856 = !DILocation(line: 374, column: 7, scope: !7824)
!7857 = !DILocation(line: 377, column: 7, scope: !7824)
!7858 = !DILocation(line: 378, column: 5, scope: !7824)
!7859 = !DILocation(line: 379, column: 8, scope: !7800)
!7860 = !DILocation(line: 382, column: 8, scope: !7800)
!7861 = !DILocation(line: 384, column: 4, scope: !7745)
!7862 = !DILocation(line: 386, column: 17, scope: !7745)
!7863 = !DILocation(line: 386, column: 24, scope: !7745)
!7864 = !DILocation(line: 387, column: 17, scope: !7745)
!7865 = !DILocation(line: 387, column: 24, scope: !7745)
!7866 = !DILocation(line: 388, column: 17, scope: !7745)
!7867 = !DILocation(line: 388, column: 24, scope: !7745)
!7868 = !DILocation(line: 389, column: 17, scope: !7745)
!7869 = !DILocation(line: 389, column: 24, scope: !7745)
!7870 = !DILocation(line: 390, column: 17, scope: !7745)
!7871 = !DILocation(line: 390, column: 24, scope: !7745)
!7872 = !DILocation(line: 391, column: 17, scope: !7745)
!7873 = !DILocation(line: 391, column: 24, scope: !7745)
!7874 = !DILocation(line: 392, column: 17, scope: !7745)
!7875 = !DILocation(line: 392, column: 24, scope: !7745)
!7876 = !DILocation(line: 393, column: 19, scope: !7745)
!7877 = !DILocation(line: 393, column: 17, scope: !7745)
!7878 = !DILocation(line: 396, column: 8, scope: !7879)
!7879 = distinct !DILexicalBlock(scope: !7745, file: !108, line: 396, column: 8)
!7880 = !DILocation(line: 396, column: 26, scope: !7879)
!7881 = !DILocation(line: 396, column: 29, scope: !7879)
!7882 = !DILocation(line: 396, column: 48, scope: !7879)
!7883 = !DILocation(line: 396, column: 51, scope: !7879)
!7884 = !DILocation(line: 396, column: 8, scope: !7745)
!7885 = !DILocation(line: 397, column: 6, scope: !7879)
!7886 = !DILocation(line: 400, column: 8, scope: !7887)
!7887 = distinct !DILexicalBlock(scope: !7745, file: !108, line: 400, column: 8)
!7888 = !DILocation(line: 400, column: 22, scope: !7887)
!7889 = !DILocation(line: 401, column: 8, scope: !7887)
!7890 = !DILocation(line: 401, column: 11, scope: !7887)
!7891 = !DILocation(line: 400, column: 8, scope: !7745)
!7892 = !DILocation(line: 402, column: 6, scope: !7887)
!7893 = !DILocation(line: 405, column: 8, scope: !7894)
!7894 = distinct !DILexicalBlock(scope: !7745, file: !108, line: 405, column: 8)
!7895 = !DILocation(line: 405, column: 8, scope: !7745)
!7896 = !DILocation(line: 407, column: 12, scope: !7897)
!7897 = distinct !DILexicalBlock(scope: !7894, file: !108, line: 406, column: 6)
!7898 = !DILocation(line: 407, column: 10, scope: !7897)
!7899 = !DILocation(line: 408, column: 8, scope: !7897)
!7900 = !DILocation(line: 410, column: 4, scope: !7745)
!7901 = !DILocation(line: 413, column: 11, scope: !7902)
!7902 = distinct !DILexicalBlock(scope: !7745, file: !108, line: 413, column: 8)
!7903 = !DILocation(line: 413, column: 19, scope: !7902)
!7904 = !DILocation(line: 413, column: 8, scope: !7745)
!7905 = !DILocation(line: 413, column: 33, scope: !7902)
!7906 = !DILocation(line: 413, column: 40, scope: !7902)
!7907 = !DILocation(line: 413, column: 50, scope: !7902)
!7908 = !DILocation(line: 413, column: 58, scope: !7902)
!7909 = !DILocation(line: 414, column: 6, scope: !7902)
!7910 = !DILocation(line: 413, column: 62, scope: !7902)
!7911 = !DILocation(line: 417, column: 8, scope: !7912)
!7912 = distinct !DILexicalBlock(scope: !7745, file: !108, line: 417, column: 8)
!7913 = !DILocation(line: 417, column: 10, scope: !7912)
!7914 = !DILocation(line: 417, column: 8, scope: !7745)
!7915 = !DILocation(line: 418, column: 6, scope: !7912)
!7916 = !DILocation(line: 417, column: 13, scope: !7912)
!7917 = !DILocation(line: 433, column: 8, scope: !7918)
!7918 = distinct !DILexicalBlock(scope: !7745, file: !108, line: 433, column: 8)
!7919 = !DILocation(line: 433, column: 22, scope: !7918)
!7920 = !DILocation(line: 434, column: 8, scope: !7918)
!7921 = !DILocation(line: 434, column: 11, scope: !7918)
!7922 = !DILocation(line: 433, column: 8, scope: !7745)
!7923 = !DILocation(line: 435, column: 6, scope: !7918)
!7924 = !DILocation(line: 436, column: 4, scope: !7745)
!7925 = !DILocation(line: 439, column: 8, scope: !7926)
!7926 = distinct !DILexicalBlock(scope: !7745, file: !108, line: 439, column: 8)
!7927 = !DILocation(line: 439, column: 22, scope: !7926)
!7928 = !DILocation(line: 439, column: 8, scope: !7745)
!7929 = !DILocation(line: 441, column: 12, scope: !7930)
!7930 = distinct !DILexicalBlock(scope: !7931, file: !108, line: 441, column: 12)
!7931 = distinct !DILexicalBlock(scope: !7926, file: !108, line: 440, column: 6)
!7932 = !DILocation(line: 441, column: 12, scope: !7931)
!7933 = !DILocation(line: 442, column: 3, scope: !7930)
!7934 = !DILocation(line: 443, column: 8, scope: !7931)
!7935 = distinct !{!7935, !7934, !7934}
!7936 = !DILocation(line: 443, column: 8, scope: !7937)
!7937 = distinct !DILexicalBlock(scope: !7938, file: !108, line: 443, column: 8)
!7938 = distinct !DILexicalBlock(scope: !7931, file: !108, line: 443, column: 8)
!7939 = !DILocation(line: 443, column: 8, scope: !7938)
!7940 = !DILocation(line: 444, column: 8, scope: !7931)
!7941 = distinct !{!7941, !7940, !7940}
!7942 = !DILocation(line: 444, column: 8, scope: !7943)
!7943 = distinct !DILexicalBlock(scope: !7944, file: !108, line: 444, column: 8)
!7944 = distinct !DILexicalBlock(scope: !7931, file: !108, line: 444, column: 8)
!7945 = !DILocation(line: 444, column: 8, scope: !7944)
!7946 = !DILocation(line: 445, column: 8, scope: !7931)
!7947 = distinct !{!7947, !7946, !7946}
!7948 = !DILocation(line: 445, column: 8, scope: !7949)
!7949 = distinct !DILexicalBlock(scope: !7950, file: !108, line: 445, column: 8)
!7950 = distinct !DILexicalBlock(scope: !7931, file: !108, line: 445, column: 8)
!7951 = !DILocation(line: 445, column: 8, scope: !7950)
!7952 = !DILocation(line: 446, column: 6, scope: !7931)
!7953 = !DILocation(line: 447, column: 4, scope: !7745)
!7954 = !DILocation(line: 471, column: 4, scope: !7745)
!7955 = !DILocalVariable(name: "m", scope: !7956, file: !108, line: 481, type: !91)
!7956 = distinct !DILexicalBlock(scope: !7745, file: !108, line: 479, column: 4)
!7957 = !DILocation(line: 481, column: 13, scope: !7956)
!7958 = !DILocalVariable(name: "printable", scope: !7956, file: !108, line: 483, type: !79)
!7959 = !DILocation(line: 483, column: 11, scope: !7956)
!7960 = !DILocation(line: 485, column: 10, scope: !7961)
!7961 = distinct !DILexicalBlock(scope: !7956, file: !108, line: 485, column: 10)
!7962 = !DILocation(line: 485, column: 10, scope: !7956)
!7963 = !DILocation(line: 487, column: 5, scope: !7964)
!7964 = distinct !DILexicalBlock(scope: !7961, file: !108, line: 486, column: 8)
!7965 = !DILocation(line: 488, column: 15, scope: !7964)
!7966 = !DILocation(line: 488, column: 27, scope: !7964)
!7967 = !DILocation(line: 488, column: 13, scope: !7964)
!7968 = !DILocation(line: 489, column: 8, scope: !7964)
!7969 = !DILocalVariable(name: "mbstate", scope: !7970, file: !108, line: 492, type: !7971)
!7970 = distinct !DILexicalBlock(scope: !7961, file: !108, line: 491, column: 8)
!7971 = !DIDerivedType(tag: DW_TAG_typedef, name: "mbstate_t", file: !7972, line: 6, baseType: !7973)
!7972 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/mbstate_t.h", directory: "/home/ma481/Downloads/Chisel/chisel-bench/benchmark/chown-8.2/original/obj-llvm/lib")
!7973 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mbstate_t", file: !7974, line: 21, baseType: !7975)
!7974 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/__mbstate_t.h", directory: "/home/ma481/Downloads/Chisel/chisel-bench/benchmark/chown-8.2/original/obj-llvm/lib")
!7975 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !7974, line: 13, size: 64, elements: !7976)
!7976 = !{!7977, !7978}
!7977 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !7975, file: !7974, line: 15, baseType: !23, size: 32)
!7978 = !DIDerivedType(tag: DW_TAG_member, name: "__value", scope: !7975, file: !7974, line: 20, baseType: !7979, size: 32, offset: 32)
!7979 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7975, file: !7974, line: 16, size: 32, elements: !7980)
!7980 = !{!7981, !7982}
!7981 = !DIDerivedType(tag: DW_TAG_member, name: "__wch", scope: !7979, file: !7974, line: 18, baseType: !159, size: 32)
!7982 = !DIDerivedType(tag: DW_TAG_member, name: "__wchb", scope: !7979, file: !7974, line: 19, baseType: !7983, size: 32)
!7983 = !DICompositeType(tag: DW_TAG_array_type, baseType: !14, size: 32, elements: !374)
!7984 = !DILocation(line: 492, column: 13, scope: !7970)
!7985 = !DILocation(line: 493, column: 3, scope: !7970)
!7986 = !DILocation(line: 495, column: 5, scope: !7970)
!7987 = !DILocation(line: 496, column: 13, scope: !7970)
!7988 = !DILocation(line: 497, column: 7, scope: !7989)
!7989 = distinct !DILexicalBlock(scope: !7970, file: !108, line: 497, column: 7)
!7990 = !DILocation(line: 497, column: 15, scope: !7989)
!7991 = !DILocation(line: 497, column: 7, scope: !7970)
!7992 = !DILocation(line: 498, column: 23, scope: !7989)
!7993 = !DILocation(line: 498, column: 15, scope: !7989)
!7994 = !DILocation(line: 498, column: 13, scope: !7989)
!7995 = !DILocation(line: 498, column: 5, scope: !7989)
!7996 = !DILocation(line: 500, column: 3, scope: !7970)
!7997 = distinct !{!7997, !7996, !7998}
!7998 = !DILocation(line: 546, column: 30, scope: !7970)
!7999 = !DILocalVariable(name: "w", scope: !8000, file: !108, line: 502, type: !8001)
!8000 = distinct !DILexicalBlock(scope: !7970, file: !108, line: 501, column: 5)
!8001 = !DIDerivedType(tag: DW_TAG_typedef, name: "wchar_t", file: !92, line: 90, baseType: !23)
!8002 = !DILocation(line: 502, column: 15, scope: !8000)
!8003 = !DILocalVariable(name: "bytes", scope: !8000, file: !108, line: 503, type: !91)
!8004 = !DILocation(line: 503, column: 14, scope: !8000)
!8005 = !DILocation(line: 503, column: 36, scope: !8000)
!8006 = !DILocation(line: 503, column: 40, scope: !8000)
!8007 = !DILocation(line: 503, column: 44, scope: !8000)
!8008 = !DILocation(line: 503, column: 42, scope: !8000)
!8009 = !DILocation(line: 504, column: 10, scope: !8000)
!8010 = !DILocation(line: 504, column: 21, scope: !8000)
!8011 = !DILocation(line: 504, column: 25, scope: !8000)
!8012 = !DILocation(line: 504, column: 23, scope: !8000)
!8013 = !DILocation(line: 504, column: 18, scope: !8000)
!8014 = !DILocation(line: 503, column: 22, scope: !8000)
!8015 = !DILocation(line: 505, column: 11, scope: !8016)
!8016 = distinct !DILexicalBlock(scope: !8000, file: !108, line: 505, column: 11)
!8017 = !DILocation(line: 505, column: 17, scope: !8016)
!8018 = !DILocation(line: 505, column: 11, scope: !8000)
!8019 = !DILocation(line: 506, column: 9, scope: !8016)
!8020 = !DILocation(line: 507, column: 16, scope: !8021)
!8021 = distinct !DILexicalBlock(scope: !8016, file: !108, line: 507, column: 16)
!8022 = !DILocation(line: 507, column: 22, scope: !8021)
!8023 = !DILocation(line: 507, column: 16, scope: !8016)
!8024 = !DILocation(line: 509, column: 14, scope: !8025)
!8025 = distinct !DILexicalBlock(scope: !8021, file: !108, line: 508, column: 9)
!8026 = !DILocation(line: 510, column: 4, scope: !8025)
!8027 = !DILocation(line: 512, column: 16, scope: !8028)
!8028 = distinct !DILexicalBlock(scope: !8021, file: !108, line: 512, column: 16)
!8029 = !DILocation(line: 512, column: 22, scope: !8028)
!8030 = !DILocation(line: 512, column: 16, scope: !8021)
!8031 = !DILocation(line: 514, column: 14, scope: !8032)
!8032 = distinct !DILexicalBlock(scope: !8028, file: !108, line: 513, column: 9)
!8033 = !DILocation(line: 515, column: 4, scope: !8032)
!8034 = !DILocation(line: 515, column: 11, scope: !8032)
!8035 = !DILocation(line: 515, column: 15, scope: !8032)
!8036 = !DILocation(line: 515, column: 13, scope: !8032)
!8037 = !DILocation(line: 515, column: 19, scope: !8032)
!8038 = !DILocation(line: 515, column: 17, scope: !8032)
!8039 = !DILocation(line: 515, column: 27, scope: !8032)
!8040 = !DILocation(line: 515, column: 30, scope: !8032)
!8041 = !DILocation(line: 515, column: 34, scope: !8032)
!8042 = !DILocation(line: 515, column: 38, scope: !8032)
!8043 = !DILocation(line: 515, column: 36, scope: !8032)
!8044 = !DILocation(line: 516, column: 7, scope: !8032)
!8045 = distinct !{!8045, !8033, !8044}
!8046 = !DILocation(line: 517, column: 4, scope: !8032)
!8047 = !DILocation(line: 525, column: 23, scope: !8048)
!8048 = distinct !DILexicalBlock(scope: !8049, file: !108, line: 525, column: 8)
!8049 = distinct !DILexicalBlock(scope: !8028, file: !108, line: 520, column: 9)
!8050 = !DILocation(line: 526, column: 8, scope: !8048)
!8051 = !DILocation(line: 526, column: 11, scope: !8048)
!8052 = !DILocation(line: 526, column: 25, scope: !8048)
!8053 = !DILocation(line: 525, column: 8, scope: !8049)
!8054 = !DILocalVariable(name: "j", scope: !8055, file: !108, line: 528, type: !91)
!8055 = distinct !DILexicalBlock(scope: !8048, file: !108, line: 527, column: 6)
!8056 = !DILocation(line: 528, column: 15, scope: !8055)
!8057 = !DILocation(line: 529, column: 15, scope: !8058)
!8058 = distinct !DILexicalBlock(scope: !8055, file: !108, line: 529, column: 8)
!8059 = !DILocation(line: 529, column: 13, scope: !8058)
!8060 = !DILocation(line: 529, column: 20, scope: !8061)
!8061 = distinct !DILexicalBlock(scope: !8058, file: !108, line: 529, column: 8)
!8062 = !DILocation(line: 529, column: 24, scope: !8061)
!8063 = !DILocation(line: 529, column: 22, scope: !8061)
!8064 = !DILocation(line: 529, column: 8, scope: !8058)
!8065 = !DILocation(line: 530, column: 18, scope: !8061)
!8066 = !DILocation(line: 530, column: 22, scope: !8061)
!8067 = !DILocation(line: 530, column: 26, scope: !8061)
!8068 = !DILocation(line: 530, column: 24, scope: !8061)
!8069 = !DILocation(line: 530, column: 30, scope: !8061)
!8070 = !DILocation(line: 530, column: 28, scope: !8061)
!8071 = !DILocation(line: 530, column: 10, scope: !8061)
!8072 = !DILocation(line: 534, column: 7, scope: !8073)
!8073 = distinct !DILexicalBlock(scope: !8061, file: !108, line: 531, column: 5)
!8074 = !DILocation(line: 537, column: 7, scope: !8073)
!8075 = !DILocation(line: 538, column: 5, scope: !8073)
!8076 = !DILocation(line: 529, column: 32, scope: !8061)
!8077 = !DILocation(line: 529, column: 8, scope: !8061)
!8078 = distinct !{!8078, !8064, !8079}
!8079 = !DILocation(line: 538, column: 5, scope: !8058)
!8080 = !DILocation(line: 539, column: 6, scope: !8055)
!8081 = !DILocation(line: 541, column: 20, scope: !8082)
!8082 = distinct !DILexicalBlock(scope: !8049, file: !108, line: 541, column: 8)
!8083 = !DILocation(line: 541, column: 10, scope: !8082)
!8084 = !DILocation(line: 541, column: 8, scope: !8049)
!8085 = !DILocation(line: 542, column: 16, scope: !8082)
!8086 = !DILocation(line: 542, column: 6, scope: !8082)
!8087 = !DILocation(line: 543, column: 9, scope: !8049)
!8088 = !DILocation(line: 543, column: 6, scope: !8049)
!8089 = !DILocation(line: 545, column: 5, scope: !8000)
!8090 = !DILocation(line: 546, column: 12, scope: !7970)
!8091 = !DILocation(line: 546, column: 10, scope: !7970)
!8092 = !DILocation(line: 549, column: 14, scope: !8093)
!8093 = distinct !DILexicalBlock(scope: !7956, file: !108, line: 549, column: 10)
!8094 = !DILocation(line: 549, column: 12, scope: !8093)
!8095 = !DILocation(line: 549, column: 16, scope: !8093)
!8096 = !DILocation(line: 549, column: 20, scope: !8093)
!8097 = !DILocation(line: 549, column: 38, scope: !8093)
!8098 = !DILocation(line: 549, column: 43, scope: !8093)
!8099 = !DILocation(line: 549, column: 10, scope: !7956)
!8100 = !DILocalVariable(name: "ilim", scope: !8101, file: !108, line: 553, type: !91)
!8101 = distinct !DILexicalBlock(scope: !8093, file: !108, line: 550, column: 8)
!8102 = !DILocation(line: 553, column: 10, scope: !8101)
!8103 = !DILocation(line: 553, column: 17, scope: !8101)
!8104 = !DILocation(line: 553, column: 21, scope: !8101)
!8105 = !DILocation(line: 553, column: 19, scope: !8101)
!8106 = !DILocation(line: 555, column: 3, scope: !8101)
!8107 = !DILocation(line: 557, column: 11, scope: !8108)
!8108 = distinct !DILexicalBlock(scope: !8109, file: !108, line: 557, column: 11)
!8109 = distinct !DILexicalBlock(scope: !8110, file: !108, line: 556, column: 5)
!8110 = distinct !DILexicalBlock(scope: !8111, file: !108, line: 555, column: 3)
!8111 = distinct !DILexicalBlock(scope: !8101, file: !108, line: 555, column: 3)
!8112 = !DILocation(line: 557, column: 29, scope: !8108)
!8113 = !DILocation(line: 557, column: 34, scope: !8108)
!8114 = !DILocation(line: 557, column: 11, scope: !8109)
!8115 = !DILocation(line: 559, column: 8, scope: !8116)
!8116 = distinct !DILexicalBlock(scope: !8117, file: !108, line: 559, column: 8)
!8117 = distinct !DILexicalBlock(scope: !8108, file: !108, line: 558, column: 9)
!8118 = !DILocation(line: 559, column: 8, scope: !8117)
!8119 = !DILocation(line: 560, column: 6, scope: !8116)
!8120 = !DILocation(line: 561, column: 4, scope: !8117)
!8121 = distinct !{!8121, !8120, !8120}
!8122 = !DILocation(line: 561, column: 4, scope: !8123)
!8123 = distinct !DILexicalBlock(scope: !8124, file: !108, line: 561, column: 4)
!8124 = distinct !DILexicalBlock(scope: !8117, file: !108, line: 561, column: 4)
!8125 = !DILocation(line: 561, column: 4, scope: !8124)
!8126 = !DILocation(line: 562, column: 4, scope: !8117)
!8127 = distinct !{!8127, !8126, !8126}
!8128 = !DILocation(line: 562, column: 4, scope: !8129)
!8129 = distinct !DILexicalBlock(scope: !8130, file: !108, line: 562, column: 4)
!8130 = distinct !DILexicalBlock(scope: !8117, file: !108, line: 562, column: 4)
!8131 = !DILocation(line: 562, column: 4, scope: !8130)
!8132 = !DILocation(line: 563, column: 4, scope: !8117)
!8133 = distinct !{!8133, !8132, !8132}
!8134 = !DILocation(line: 563, column: 4, scope: !8135)
!8135 = distinct !DILexicalBlock(scope: !8136, file: !108, line: 563, column: 4)
!8136 = distinct !DILexicalBlock(scope: !8117, file: !108, line: 563, column: 4)
!8137 = !DILocation(line: 563, column: 4, scope: !8136)
!8138 = !DILocation(line: 564, column: 15, scope: !8117)
!8139 = !DILocation(line: 564, column: 17, scope: !8117)
!8140 = !DILocation(line: 564, column: 12, scope: !8117)
!8141 = !DILocation(line: 564, column: 8, scope: !8117)
!8142 = !DILocation(line: 564, column: 6, scope: !8117)
!8143 = !DILocation(line: 565, column: 9, scope: !8117)
!8144 = !DILocation(line: 566, column: 16, scope: !8145)
!8145 = distinct !DILexicalBlock(scope: !8108, file: !108, line: 566, column: 16)
!8146 = !DILocation(line: 566, column: 16, scope: !8108)
!8147 = !DILocation(line: 568, column: 4, scope: !8148)
!8148 = distinct !DILexicalBlock(scope: !8145, file: !108, line: 567, column: 9)
!8149 = distinct !{!8149, !8147, !8147}
!8150 = !DILocation(line: 568, column: 4, scope: !8151)
!8151 = distinct !DILexicalBlock(scope: !8152, file: !108, line: 568, column: 4)
!8152 = distinct !DILexicalBlock(scope: !8148, file: !108, line: 568, column: 4)
!8153 = !DILocation(line: 568, column: 4, scope: !8152)
!8154 = !DILocation(line: 569, column: 19, scope: !8148)
!8155 = !DILocation(line: 570, column: 9, scope: !8148)
!8156 = !DILocation(line: 571, column: 11, scope: !8157)
!8157 = distinct !DILexicalBlock(scope: !8109, file: !108, line: 571, column: 11)
!8158 = !DILocation(line: 571, column: 19, scope: !8157)
!8159 = !DILocation(line: 571, column: 21, scope: !8157)
!8160 = !DILocation(line: 571, column: 16, scope: !8157)
!8161 = !DILocation(line: 571, column: 11, scope: !8109)
!8162 = !DILocation(line: 572, column: 9, scope: !8157)
!8163 = !DILocation(line: 573, column: 7, scope: !8109)
!8164 = distinct !{!8164, !8163, !8163}
!8165 = !DILocation(line: 573, column: 7, scope: !8166)
!8166 = distinct !DILexicalBlock(scope: !8167, file: !108, line: 573, column: 7)
!8167 = distinct !DILexicalBlock(scope: !8109, file: !108, line: 573, column: 7)
!8168 = !DILocation(line: 573, column: 7, scope: !8167)
!8169 = !DILocation(line: 574, column: 11, scope: !8109)
!8170 = !DILocation(line: 574, column: 15, scope: !8109)
!8171 = !DILocation(line: 574, column: 9, scope: !8109)
!8172 = !DILocation(line: 555, column: 3, scope: !8110)
!8173 = distinct !{!8173, !8174, !8175}
!8174 = !DILocation(line: 555, column: 3, scope: !8111)
!8175 = !DILocation(line: 575, column: 5, scope: !8111)
!8176 = !DILocation(line: 577, column: 3, scope: !8101)
!8177 = !DILocation(line: 580, column: 2, scope: !7745)
!8178 = !DILocation(line: 582, column: 15, scope: !8179)
!8179 = distinct !DILexicalBlock(scope: !7706, file: !108, line: 582, column: 11)
!8180 = !DILocation(line: 582, column: 33, scope: !8179)
!8181 = !DILocation(line: 582, column: 36, scope: !8179)
!8182 = !DILocation(line: 583, column: 7, scope: !8179)
!8183 = !DILocation(line: 583, column: 10, scope: !8179)
!8184 = !DILocation(line: 584, column: 7, scope: !8179)
!8185 = !DILocation(line: 584, column: 10, scope: !8179)
!8186 = !DILocation(line: 584, column: 26, scope: !8179)
!8187 = !DILocation(line: 584, column: 28, scope: !8179)
!8188 = !DILocation(line: 584, column: 49, scope: !8179)
!8189 = !DILocation(line: 584, column: 51, scope: !8179)
!8190 = !DILocation(line: 584, column: 45, scope: !8179)
!8191 = !DILocation(line: 584, column: 40, scope: !8179)
!8192 = !DILocation(line: 585, column: 4, scope: !8179)
!8193 = !DILocation(line: 585, column: 8, scope: !8179)
!8194 = !DILocation(line: 582, column: 11, scope: !7706)
!8195 = !DILocation(line: 586, column: 2, scope: !8179)
!8196 = !DILocation(line: 589, column: 11, scope: !8197)
!8197 = distinct !DILexicalBlock(scope: !7706, file: !108, line: 589, column: 11)
!8198 = !DILocation(line: 589, column: 11, scope: !7706)
!8199 = !DILocation(line: 590, column: 2, scope: !8197)
!8200 = !DILocation(line: 591, column: 7, scope: !7706)
!8201 = distinct !{!8201, !8200, !8200}
!8202 = !DILocation(line: 591, column: 7, scope: !8203)
!8203 = distinct !DILexicalBlock(scope: !8204, file: !108, line: 591, column: 7)
!8204 = distinct !DILexicalBlock(scope: !7706, file: !108, line: 591, column: 7)
!8205 = !DILocation(line: 591, column: 7, scope: !8204)
!8206 = !DILocation(line: 594, column: 7, scope: !7706)
!8207 = distinct !{!8207, !8206, !8206}
!8208 = !DILocation(line: 594, column: 7, scope: !8209)
!8209 = distinct !DILexicalBlock(scope: !8210, file: !108, line: 594, column: 7)
!8210 = distinct !DILexicalBlock(scope: !7706, file: !108, line: 594, column: 7)
!8211 = !DILocation(line: 594, column: 7, scope: !8210)
!8212 = !DILocation(line: 595, column: 5, scope: !7706)
!8213 = !DILocation(line: 303, column: 75, scope: !7695)
!8214 = !DILocation(line: 303, column: 3, scope: !7695)
!8215 = distinct !{!8215, !7704, !8216}
!8216 = !DILocation(line: 595, column: 5, scope: !7692)
!8217 = !DILocation(line: 597, column: 7, scope: !8218)
!8218 = distinct !DILexicalBlock(scope: !7568, file: !108, line: 597, column: 7)
!8219 = !DILocation(line: 597, column: 11, scope: !8218)
!8220 = !DILocation(line: 597, column: 16, scope: !8218)
!8221 = !DILocation(line: 597, column: 19, scope: !8218)
!8222 = !DILocation(line: 597, column: 33, scope: !8218)
!8223 = !DILocation(line: 598, column: 7, scope: !8218)
!8224 = !DILocation(line: 598, column: 10, scope: !8218)
!8225 = !DILocation(line: 597, column: 7, scope: !7568)
!8226 = !DILocation(line: 599, column: 5, scope: !8218)
!8227 = !DILocation(line: 601, column: 7, scope: !8228)
!8228 = distinct !DILexicalBlock(scope: !7568, file: !108, line: 601, column: 7)
!8229 = !DILocation(line: 601, column: 20, scope: !8228)
!8230 = !DILocation(line: 601, column: 24, scope: !8228)
!8231 = !DILocation(line: 601, column: 7, scope: !7568)
!8232 = !DILocation(line: 602, column: 5, scope: !8228)
!8233 = !DILocation(line: 602, column: 13, scope: !8234)
!8234 = distinct !DILexicalBlock(scope: !8235, file: !108, line: 602, column: 5)
!8235 = distinct !DILexicalBlock(scope: !8228, file: !108, line: 602, column: 5)
!8236 = !DILocation(line: 602, column: 12, scope: !8234)
!8237 = !DILocation(line: 602, column: 5, scope: !8235)
!8238 = !DILocation(line: 603, column: 7, scope: !8234)
!8239 = distinct !{!8239, !8238, !8238}
!8240 = !DILocation(line: 603, column: 7, scope: !8241)
!8241 = distinct !DILexicalBlock(scope: !8242, file: !108, line: 603, column: 7)
!8242 = distinct !DILexicalBlock(scope: !8234, file: !108, line: 603, column: 7)
!8243 = !DILocation(line: 603, column: 7, scope: !8242)
!8244 = !DILocation(line: 602, column: 39, scope: !8234)
!8245 = !DILocation(line: 602, column: 5, scope: !8234)
!8246 = distinct !{!8246, !8237, !8247}
!8247 = !DILocation(line: 603, column: 7, scope: !8235)
!8248 = !DILocation(line: 605, column: 7, scope: !8249)
!8249 = distinct !DILexicalBlock(scope: !7568, file: !108, line: 605, column: 7)
!8250 = !DILocation(line: 605, column: 13, scope: !8249)
!8251 = !DILocation(line: 605, column: 11, scope: !8249)
!8252 = !DILocation(line: 605, column: 7, scope: !7568)
!8253 = !DILocation(line: 606, column: 5, scope: !8249)
!8254 = !DILocation(line: 606, column: 12, scope: !8249)
!8255 = !DILocation(line: 606, column: 17, scope: !8249)
!8256 = !DILocation(line: 607, column: 10, scope: !7568)
!8257 = !DILocation(line: 607, column: 3, scope: !7568)
!8258 = !DILocation(line: 612, column: 36, scope: !7568)
!8259 = !DILocation(line: 612, column: 44, scope: !7568)
!8260 = !DILocation(line: 612, column: 56, scope: !7568)
!8261 = !DILocation(line: 612, column: 61, scope: !7568)
!8262 = !DILocation(line: 613, column: 8, scope: !7568)
!8263 = !DILocation(line: 614, column: 8, scope: !7568)
!8264 = !DILocation(line: 614, column: 14, scope: !7568)
!8265 = !DILocation(line: 615, column: 8, scope: !7568)
!8266 = !DILocation(line: 615, column: 20, scope: !7568)
!8267 = !DILocation(line: 612, column: 10, scope: !7568)
!8268 = !DILocation(line: 612, column: 3, scope: !7568)
!8269 = !DILocation(line: 616, column: 1, scope: !7568)
!8270 = distinct !DISubprogram(name: "gettext_quote", scope: !108, file: !108, line: 182, type: !8271, isLocal: true, isDefinition: true, scopeLine: 183, flags: DIFlagPrototyped, isOptimized: false, unit: !107, variables: !25)
!8271 = !DISubroutineType(types: !8272)
!8272 = !{!12, !12, !110}
!8273 = !DILocalVariable(name: "msgid", arg: 1, scope: !8270, file: !108, line: 182, type: !12)
!8274 = !DILocation(line: 182, column: 28, scope: !8270)
!8275 = !DILocalVariable(name: "s", arg: 2, scope: !8270, file: !108, line: 182, type: !110)
!8276 = !DILocation(line: 182, column: 54, scope: !8270)
!8277 = !DILocalVariable(name: "translation", scope: !8270, file: !108, line: 184, type: !12)
!8278 = !DILocation(line: 184, column: 15, scope: !8270)
!8279 = !DILocation(line: 184, column: 29, scope: !8270)
!8280 = !DILocation(line: 185, column: 7, scope: !8281)
!8281 = distinct !DILexicalBlock(scope: !8270, file: !108, line: 185, column: 7)
!8282 = !DILocation(line: 185, column: 22, scope: !8281)
!8283 = !DILocation(line: 185, column: 19, scope: !8281)
!8284 = !DILocation(line: 185, column: 28, scope: !8281)
!8285 = !DILocation(line: 185, column: 31, scope: !8281)
!8286 = !DILocation(line: 185, column: 33, scope: !8281)
!8287 = !DILocation(line: 185, column: 7, scope: !8270)
!8288 = !DILocation(line: 186, column: 17, scope: !8281)
!8289 = !DILocation(line: 186, column: 5, scope: !8281)
!8290 = !DILocation(line: 187, column: 10, scope: !8270)
!8291 = !DILocation(line: 187, column: 3, scope: !8270)
!8292 = distinct !DISubprogram(name: "quotearg_alloc", scope: !108, file: !108, line: 643, type: !8293, isLocal: false, isDefinition: true, scopeLine: 645, flags: DIFlagPrototyped, isOptimized: false, unit: !107, variables: !25)
!8293 = !DISubroutineType(types: !8294)
!8294 = !{!15, !12, !91, !7527}
!8295 = !DILocalVariable(name: "arg", arg: 1, scope: !8292, file: !108, line: 643, type: !12)
!8296 = !DILocation(line: 643, column: 29, scope: !8292)
!8297 = !DILocalVariable(name: "argsize", arg: 2, scope: !8292, file: !108, line: 643, type: !91)
!8298 = !DILocation(line: 643, column: 41, scope: !8292)
!8299 = !DILocalVariable(name: "o", arg: 3, scope: !8292, file: !108, line: 644, type: !7527)
!8300 = !DILocation(line: 644, column: 33, scope: !8292)
!8301 = !DILocation(line: 646, column: 30, scope: !8292)
!8302 = !DILocation(line: 646, column: 35, scope: !8292)
!8303 = !DILocation(line: 646, column: 50, scope: !8292)
!8304 = !DILocation(line: 646, column: 10, scope: !8292)
!8305 = !DILocation(line: 646, column: 3, scope: !8292)
!8306 = distinct !DISubprogram(name: "quotearg_alloc_mem", scope: !108, file: !108, line: 656, type: !8307, isLocal: false, isDefinition: true, scopeLine: 658, flags: DIFlagPrototyped, isOptimized: false, unit: !107, variables: !25)
!8307 = !DISubroutineType(types: !8308)
!8308 = !{!15, !12, !91, !438, !7527}
!8309 = !DILocalVariable(name: "arg", arg: 1, scope: !8306, file: !108, line: 656, type: !12)
!8310 = !DILocation(line: 656, column: 33, scope: !8306)
!8311 = !DILocalVariable(name: "argsize", arg: 2, scope: !8306, file: !108, line: 656, type: !91)
!8312 = !DILocation(line: 656, column: 45, scope: !8306)
!8313 = !DILocalVariable(name: "size", arg: 3, scope: !8306, file: !108, line: 656, type: !438)
!8314 = !DILocation(line: 656, column: 62, scope: !8306)
!8315 = !DILocalVariable(name: "o", arg: 4, scope: !8306, file: !108, line: 657, type: !7527)
!8316 = !DILocation(line: 657, column: 37, scope: !8306)
!8317 = !DILocalVariable(name: "p", scope: !8306, file: !108, line: 659, type: !7527)
!8318 = !DILocation(line: 659, column: 33, scope: !8306)
!8319 = !DILocation(line: 659, column: 37, scope: !8306)
!8320 = !DILocation(line: 659, column: 41, scope: !8306)
!8321 = !DILocalVariable(name: "e", scope: !8306, file: !108, line: 660, type: !23)
!8322 = !DILocation(line: 660, column: 7, scope: !8306)
!8323 = !DILocation(line: 660, column: 11, scope: !8306)
!8324 = !DILocalVariable(name: "flags", scope: !8306, file: !108, line: 662, type: !23)
!8325 = !DILocation(line: 662, column: 7, scope: !8306)
!8326 = !DILocation(line: 662, column: 15, scope: !8306)
!8327 = !DILocation(line: 662, column: 18, scope: !8306)
!8328 = !DILocation(line: 662, column: 27, scope: !8306)
!8329 = !DILocation(line: 662, column: 24, scope: !8306)
!8330 = !DILocalVariable(name: "bufsize", scope: !8306, file: !108, line: 663, type: !91)
!8331 = !DILocation(line: 663, column: 10, scope: !8306)
!8332 = !DILocation(line: 663, column: 52, scope: !8306)
!8333 = !DILocation(line: 663, column: 57, scope: !8306)
!8334 = !DILocation(line: 663, column: 66, scope: !8306)
!8335 = !DILocation(line: 663, column: 69, scope: !8306)
!8336 = !DILocation(line: 664, column: 11, scope: !8306)
!8337 = !DILocation(line: 664, column: 18, scope: !8306)
!8338 = !DILocation(line: 664, column: 21, scope: !8306)
!8339 = !DILocation(line: 665, column: 11, scope: !8306)
!8340 = !DILocation(line: 665, column: 14, scope: !8306)
!8341 = !DILocation(line: 666, column: 11, scope: !8306)
!8342 = !DILocation(line: 666, column: 14, scope: !8306)
!8343 = !DILocation(line: 663, column: 20, scope: !8306)
!8344 = !DILocation(line: 666, column: 27, scope: !8306)
!8345 = !DILocalVariable(name: "buf", scope: !8306, file: !108, line: 667, type: !15)
!8346 = !DILocation(line: 667, column: 9, scope: !8306)
!8347 = !DILocation(line: 667, column: 27, scope: !8306)
!8348 = !DILocation(line: 667, column: 15, scope: !8306)
!8349 = !DILocation(line: 668, column: 29, scope: !8306)
!8350 = !DILocation(line: 668, column: 34, scope: !8306)
!8351 = !DILocation(line: 668, column: 43, scope: !8306)
!8352 = !DILocation(line: 668, column: 48, scope: !8306)
!8353 = !DILocation(line: 668, column: 57, scope: !8306)
!8354 = !DILocation(line: 668, column: 60, scope: !8306)
!8355 = !DILocation(line: 668, column: 67, scope: !8306)
!8356 = !DILocation(line: 669, column: 8, scope: !8306)
!8357 = !DILocation(line: 669, column: 11, scope: !8306)
!8358 = !DILocation(line: 670, column: 8, scope: !8306)
!8359 = !DILocation(line: 670, column: 11, scope: !8306)
!8360 = !DILocation(line: 670, column: 23, scope: !8306)
!8361 = !DILocation(line: 670, column: 26, scope: !8306)
!8362 = !DILocation(line: 668, column: 3, scope: !8306)
!8363 = !DILocation(line: 671, column: 11, scope: !8306)
!8364 = !DILocation(line: 671, column: 3, scope: !8306)
!8365 = !DILocation(line: 671, column: 9, scope: !8306)
!8366 = !DILocation(line: 672, column: 7, scope: !8367)
!8367 = distinct !DILexicalBlock(scope: !8306, file: !108, line: 672, column: 7)
!8368 = !DILocation(line: 672, column: 7, scope: !8306)
!8369 = !DILocation(line: 673, column: 13, scope: !8367)
!8370 = !DILocation(line: 673, column: 21, scope: !8367)
!8371 = !DILocation(line: 673, column: 6, scope: !8367)
!8372 = !DILocation(line: 673, column: 11, scope: !8367)
!8373 = !DILocation(line: 673, column: 5, scope: !8367)
!8374 = !DILocation(line: 674, column: 10, scope: !8306)
!8375 = !DILocation(line: 674, column: 3, scope: !8306)
!8376 = distinct !DISubprogram(name: "quotearg_free", scope: !108, file: !108, line: 692, type: !502, isLocal: false, isDefinition: true, scopeLine: 693, flags: DIFlagPrototyped, isOptimized: false, unit: !107, variables: !25)
!8377 = !DILocalVariable(name: "sv", scope: !8376, file: !108, line: 694, type: !169)
!8378 = !DILocation(line: 694, column: 19, scope: !8376)
!8379 = !DILocation(line: 694, column: 24, scope: !8376)
!8380 = !DILocalVariable(name: "i", scope: !8376, file: !108, line: 695, type: !159)
!8381 = !DILocation(line: 695, column: 16, scope: !8376)
!8382 = !DILocation(line: 696, column: 10, scope: !8383)
!8383 = distinct !DILexicalBlock(scope: !8376, file: !108, line: 696, column: 3)
!8384 = !DILocation(line: 696, column: 8, scope: !8383)
!8385 = !DILocation(line: 696, column: 15, scope: !8386)
!8386 = distinct !DILexicalBlock(scope: !8383, file: !108, line: 696, column: 3)
!8387 = !DILocation(line: 696, column: 19, scope: !8386)
!8388 = !DILocation(line: 696, column: 17, scope: !8386)
!8389 = !DILocation(line: 696, column: 3, scope: !8383)
!8390 = !DILocation(line: 697, column: 11, scope: !8386)
!8391 = !DILocation(line: 697, column: 14, scope: !8386)
!8392 = !DILocation(line: 697, column: 17, scope: !8386)
!8393 = !DILocation(line: 697, column: 5, scope: !8386)
!8394 = !DILocation(line: 696, column: 28, scope: !8386)
!8395 = !DILocation(line: 696, column: 3, scope: !8386)
!8396 = distinct !{!8396, !8389, !8397}
!8397 = !DILocation(line: 697, column: 20, scope: !8383)
!8398 = !DILocation(line: 698, column: 7, scope: !8399)
!8399 = distinct !DILexicalBlock(scope: !8376, file: !108, line: 698, column: 7)
!8400 = !DILocation(line: 698, column: 13, scope: !8399)
!8401 = !DILocation(line: 698, column: 17, scope: !8399)
!8402 = !DILocation(line: 698, column: 7, scope: !8376)
!8403 = !DILocation(line: 700, column: 13, scope: !8404)
!8404 = distinct !DILexicalBlock(scope: !8399, file: !108, line: 699, column: 5)
!8405 = !DILocation(line: 700, column: 19, scope: !8404)
!8406 = !DILocation(line: 700, column: 7, scope: !8404)
!8407 = !DILocation(line: 701, column: 21, scope: !8404)
!8408 = !DILocation(line: 702, column: 20, scope: !8404)
!8409 = !DILocation(line: 703, column: 5, scope: !8404)
!8410 = !DILocation(line: 704, column: 7, scope: !8411)
!8411 = distinct !DILexicalBlock(scope: !8376, file: !108, line: 704, column: 7)
!8412 = !DILocation(line: 704, column: 10, scope: !8411)
!8413 = !DILocation(line: 704, column: 7, scope: !8376)
!8414 = !DILocation(line: 706, column: 13, scope: !8415)
!8415 = distinct !DILexicalBlock(scope: !8411, file: !108, line: 705, column: 5)
!8416 = !DILocation(line: 706, column: 7, scope: !8415)
!8417 = !DILocation(line: 707, column: 15, scope: !8415)
!8418 = !DILocation(line: 708, column: 5, scope: !8415)
!8419 = !DILocation(line: 709, column: 10, scope: !8376)
!8420 = !DILocation(line: 710, column: 1, scope: !8376)
!8421 = distinct !DISubprogram(name: "quotearg_n", scope: !108, file: !108, line: 781, type: !8422, isLocal: false, isDefinition: true, scopeLine: 782, flags: DIFlagPrototyped, isOptimized: false, unit: !107, variables: !25)
!8422 = !DISubroutineType(types: !8423)
!8423 = !{!15, !23, !12}
!8424 = !DILocalVariable(name: "n", arg: 1, scope: !8421, file: !108, line: 781, type: !23)
!8425 = !DILocation(line: 781, column: 17, scope: !8421)
!8426 = !DILocalVariable(name: "arg", arg: 2, scope: !8421, file: !108, line: 781, type: !12)
!8427 = !DILocation(line: 781, column: 32, scope: !8421)
!8428 = !DILocation(line: 783, column: 30, scope: !8421)
!8429 = !DILocation(line: 783, column: 33, scope: !8421)
!8430 = !DILocation(line: 783, column: 10, scope: !8421)
!8431 = !DILocation(line: 783, column: 3, scope: !8421)
!8432 = distinct !DISubprogram(name: "quotearg_n_options", scope: !108, file: !108, line: 721, type: !8433, isLocal: true, isDefinition: true, scopeLine: 723, flags: DIFlagPrototyped, isOptimized: false, unit: !107, variables: !25)
!8433 = !DISubroutineType(types: !8434)
!8434 = !{!15, !23, !12, !91, !7527}
!8435 = !DILocalVariable(name: "n", arg: 1, scope: !8432, file: !108, line: 721, type: !23)
!8436 = !DILocation(line: 721, column: 25, scope: !8432)
!8437 = !DILocalVariable(name: "arg", arg: 2, scope: !8432, file: !108, line: 721, type: !12)
!8438 = !DILocation(line: 721, column: 40, scope: !8432)
!8439 = !DILocalVariable(name: "argsize", arg: 3, scope: !8432, file: !108, line: 721, type: !91)
!8440 = !DILocation(line: 721, column: 52, scope: !8432)
!8441 = !DILocalVariable(name: "options", arg: 4, scope: !8432, file: !108, line: 722, type: !7527)
!8442 = !DILocation(line: 722, column: 37, scope: !8432)
!8443 = !DILocalVariable(name: "e", scope: !8432, file: !108, line: 724, type: !23)
!8444 = !DILocation(line: 724, column: 7, scope: !8432)
!8445 = !DILocation(line: 724, column: 11, scope: !8432)
!8446 = !DILocalVariable(name: "n0", scope: !8432, file: !108, line: 726, type: !159)
!8447 = !DILocation(line: 726, column: 16, scope: !8432)
!8448 = !DILocation(line: 726, column: 21, scope: !8432)
!8449 = !DILocalVariable(name: "sv", scope: !8432, file: !108, line: 727, type: !169)
!8450 = !DILocation(line: 727, column: 19, scope: !8432)
!8451 = !DILocation(line: 727, column: 24, scope: !8432)
!8452 = !DILocation(line: 729, column: 7, scope: !8453)
!8453 = distinct !DILexicalBlock(scope: !8432, file: !108, line: 729, column: 7)
!8454 = !DILocation(line: 729, column: 9, scope: !8453)
!8455 = !DILocation(line: 729, column: 7, scope: !8432)
!8456 = !DILocation(line: 730, column: 5, scope: !8453)
!8457 = !DILocation(line: 732, column: 7, scope: !8458)
!8458 = distinct !DILexicalBlock(scope: !8432, file: !108, line: 732, column: 7)
!8459 = !DILocation(line: 732, column: 17, scope: !8458)
!8460 = !DILocation(line: 732, column: 14, scope: !8458)
!8461 = !DILocation(line: 732, column: 7, scope: !8432)
!8462 = !DILocalVariable(name: "n1", scope: !8463, file: !108, line: 739, type: !91)
!8463 = distinct !DILexicalBlock(scope: !8458, file: !108, line: 733, column: 5)
!8464 = !DILocation(line: 739, column: 14, scope: !8463)
!8465 = !DILocation(line: 739, column: 19, scope: !8463)
!8466 = !DILocation(line: 739, column: 22, scope: !8463)
!8467 = !DILocalVariable(name: "preallocated", scope: !8463, file: !108, line: 740, type: !79)
!8468 = !DILocation(line: 740, column: 12, scope: !8463)
!8469 = !DILocation(line: 740, column: 28, scope: !8463)
!8470 = !DILocation(line: 740, column: 31, scope: !8463)
!8471 = !DILocation(line: 742, column: 11, scope: !8472)
!8472 = distinct !DILexicalBlock(scope: !8463, file: !108, line: 742, column: 11)
!8473 = !DILocation(line: 742, column: 11, scope: !8463)
!8474 = !DILocation(line: 743, column: 2, scope: !8472)
!8475 = !DILocation(line: 745, column: 32, scope: !8463)
!8476 = !DILocation(line: 745, column: 54, scope: !8463)
!8477 = !DILocation(line: 745, column: 58, scope: !8463)
!8478 = !DILocation(line: 745, column: 61, scope: !8463)
!8479 = !DILocation(line: 745, column: 22, scope: !8463)
!8480 = !DILocation(line: 745, column: 20, scope: !8463)
!8481 = !DILocation(line: 745, column: 15, scope: !8463)
!8482 = !DILocation(line: 746, column: 11, scope: !8483)
!8483 = distinct !DILexicalBlock(scope: !8463, file: !108, line: 746, column: 11)
!8484 = !DILocation(line: 746, column: 11, scope: !8463)
!8485 = !DILocation(line: 747, column: 3, scope: !8483)
!8486 = !DILocation(line: 747, column: 8, scope: !8483)
!8487 = !DILocation(line: 747, column: 2, scope: !8483)
!8488 = !DILocation(line: 748, column: 15, scope: !8463)
!8489 = !DILocation(line: 748, column: 20, scope: !8463)
!8490 = !DILocation(line: 748, column: 18, scope: !8463)
!8491 = !DILocation(line: 748, column: 7, scope: !8463)
!8492 = !DILocation(line: 748, column: 32, scope: !8463)
!8493 = !DILocation(line: 748, column: 37, scope: !8463)
!8494 = !DILocation(line: 748, column: 35, scope: !8463)
!8495 = !DILocation(line: 748, column: 45, scope: !8463)
!8496 = !DILocation(line: 749, column: 16, scope: !8463)
!8497 = !DILocation(line: 749, column: 14, scope: !8463)
!8498 = !DILocation(line: 750, column: 5, scope: !8463)
!8499 = !DILocalVariable(name: "size", scope: !8500, file: !108, line: 753, type: !91)
!8500 = distinct !DILexicalBlock(scope: !8432, file: !108, line: 752, column: 3)
!8501 = !DILocation(line: 753, column: 12, scope: !8500)
!8502 = !DILocation(line: 753, column: 19, scope: !8500)
!8503 = !DILocation(line: 753, column: 22, scope: !8500)
!8504 = !DILocation(line: 753, column: 25, scope: !8500)
!8505 = !DILocalVariable(name: "val", scope: !8500, file: !108, line: 754, type: !15)
!8506 = !DILocation(line: 754, column: 11, scope: !8500)
!8507 = !DILocation(line: 754, column: 17, scope: !8500)
!8508 = !DILocation(line: 754, column: 20, scope: !8500)
!8509 = !DILocation(line: 754, column: 23, scope: !8500)
!8510 = !DILocalVariable(name: "flags", scope: !8500, file: !108, line: 756, type: !23)
!8511 = !DILocation(line: 756, column: 9, scope: !8500)
!8512 = !DILocation(line: 756, column: 17, scope: !8500)
!8513 = !DILocation(line: 756, column: 26, scope: !8500)
!8514 = !DILocation(line: 756, column: 32, scope: !8500)
!8515 = !DILocalVariable(name: "qsize", scope: !8500, file: !108, line: 757, type: !91)
!8516 = !DILocation(line: 757, column: 12, scope: !8500)
!8517 = !DILocation(line: 757, column: 46, scope: !8500)
!8518 = !DILocation(line: 757, column: 51, scope: !8500)
!8519 = !DILocation(line: 757, column: 57, scope: !8500)
!8520 = !DILocation(line: 757, column: 62, scope: !8500)
!8521 = !DILocation(line: 758, column: 11, scope: !8500)
!8522 = !DILocation(line: 758, column: 20, scope: !8500)
!8523 = !DILocation(line: 758, column: 27, scope: !8500)
!8524 = !DILocation(line: 759, column: 11, scope: !8500)
!8525 = !DILocation(line: 759, column: 20, scope: !8500)
!8526 = !DILocation(line: 760, column: 11, scope: !8500)
!8527 = !DILocation(line: 760, column: 20, scope: !8500)
!8528 = !DILocation(line: 761, column: 11, scope: !8500)
!8529 = !DILocation(line: 761, column: 20, scope: !8500)
!8530 = !DILocation(line: 757, column: 20, scope: !8500)
!8531 = !DILocation(line: 763, column: 9, scope: !8532)
!8532 = distinct !DILexicalBlock(scope: !8500, file: !108, line: 763, column: 9)
!8533 = !DILocation(line: 763, column: 17, scope: !8532)
!8534 = !DILocation(line: 763, column: 14, scope: !8532)
!8535 = !DILocation(line: 763, column: 9, scope: !8500)
!8536 = !DILocation(line: 765, column: 22, scope: !8537)
!8537 = distinct !DILexicalBlock(scope: !8532, file: !108, line: 764, column: 7)
!8538 = !DILocation(line: 765, column: 28, scope: !8537)
!8539 = !DILocation(line: 765, column: 20, scope: !8537)
!8540 = !DILocation(line: 765, column: 2, scope: !8537)
!8541 = !DILocation(line: 765, column: 5, scope: !8537)
!8542 = !DILocation(line: 765, column: 8, scope: !8537)
!8543 = !DILocation(line: 765, column: 13, scope: !8537)
!8544 = !DILocation(line: 766, column: 6, scope: !8545)
!8545 = distinct !DILexicalBlock(scope: !8537, file: !108, line: 766, column: 6)
!8546 = !DILocation(line: 766, column: 10, scope: !8545)
!8547 = !DILocation(line: 766, column: 6, scope: !8537)
!8548 = !DILocation(line: 767, column: 10, scope: !8545)
!8549 = !DILocation(line: 767, column: 4, scope: !8545)
!8550 = !DILocation(line: 768, column: 32, scope: !8537)
!8551 = !DILocation(line: 768, column: 20, scope: !8537)
!8552 = !DILocation(line: 768, column: 18, scope: !8537)
!8553 = !DILocation(line: 768, column: 2, scope: !8537)
!8554 = !DILocation(line: 768, column: 5, scope: !8537)
!8555 = !DILocation(line: 768, column: 8, scope: !8537)
!8556 = !DILocation(line: 768, column: 12, scope: !8537)
!8557 = !DILocation(line: 769, column: 28, scope: !8537)
!8558 = !DILocation(line: 769, column: 33, scope: !8537)
!8559 = !DILocation(line: 769, column: 39, scope: !8537)
!8560 = !DILocation(line: 769, column: 44, scope: !8537)
!8561 = !DILocation(line: 769, column: 53, scope: !8537)
!8562 = !DILocation(line: 769, column: 62, scope: !8537)
!8563 = !DILocation(line: 770, column: 7, scope: !8537)
!8564 = !DILocation(line: 770, column: 14, scope: !8537)
!8565 = !DILocation(line: 770, column: 23, scope: !8537)
!8566 = !DILocation(line: 771, column: 7, scope: !8537)
!8567 = !DILocation(line: 771, column: 16, scope: !8537)
!8568 = !DILocation(line: 772, column: 7, scope: !8537)
!8569 = !DILocation(line: 772, column: 16, scope: !8537)
!8570 = !DILocation(line: 769, column: 2, scope: !8537)
!8571 = !DILocation(line: 773, column: 7, scope: !8537)
!8572 = !DILocation(line: 775, column: 13, scope: !8500)
!8573 = !DILocation(line: 775, column: 5, scope: !8500)
!8574 = !DILocation(line: 775, column: 11, scope: !8500)
!8575 = !DILocation(line: 776, column: 12, scope: !8500)
!8576 = !DILocation(line: 776, column: 5, scope: !8500)
!8577 = distinct !DISubprogram(name: "quotearg_n_mem", scope: !108, file: !108, line: 787, type: !8578, isLocal: false, isDefinition: true, scopeLine: 788, flags: DIFlagPrototyped, isOptimized: false, unit: !107, variables: !25)
!8578 = !DISubroutineType(types: !8579)
!8579 = !{!15, !23, !12, !91}
!8580 = !DILocalVariable(name: "n", arg: 1, scope: !8577, file: !108, line: 787, type: !23)
!8581 = !DILocation(line: 787, column: 21, scope: !8577)
!8582 = !DILocalVariable(name: "arg", arg: 2, scope: !8577, file: !108, line: 787, type: !12)
!8583 = !DILocation(line: 787, column: 36, scope: !8577)
!8584 = !DILocalVariable(name: "argsize", arg: 3, scope: !8577, file: !108, line: 787, type: !91)
!8585 = !DILocation(line: 787, column: 48, scope: !8577)
!8586 = !DILocation(line: 789, column: 30, scope: !8577)
!8587 = !DILocation(line: 789, column: 33, scope: !8577)
!8588 = !DILocation(line: 789, column: 38, scope: !8577)
!8589 = !DILocation(line: 789, column: 10, scope: !8577)
!8590 = !DILocation(line: 789, column: 3, scope: !8577)
!8591 = distinct !DISubprogram(name: "quotearg", scope: !108, file: !108, line: 793, type: !792, isLocal: false, isDefinition: true, scopeLine: 794, flags: DIFlagPrototyped, isOptimized: false, unit: !107, variables: !25)
!8592 = !DILocalVariable(name: "arg", arg: 1, scope: !8591, file: !108, line: 793, type: !12)
!8593 = !DILocation(line: 793, column: 23, scope: !8591)
!8594 = !DILocation(line: 795, column: 25, scope: !8591)
!8595 = !DILocation(line: 795, column: 10, scope: !8591)
!8596 = !DILocation(line: 795, column: 3, scope: !8591)
!8597 = distinct !DISubprogram(name: "quotearg_mem", scope: !108, file: !108, line: 799, type: !8598, isLocal: false, isDefinition: true, scopeLine: 800, flags: DIFlagPrototyped, isOptimized: false, unit: !107, variables: !25)
!8598 = !DISubroutineType(types: !8599)
!8599 = !{!15, !12, !91}
!8600 = !DILocalVariable(name: "arg", arg: 1, scope: !8597, file: !108, line: 799, type: !12)
!8601 = !DILocation(line: 799, column: 27, scope: !8597)
!8602 = !DILocalVariable(name: "argsize", arg: 2, scope: !8597, file: !108, line: 799, type: !91)
!8603 = !DILocation(line: 799, column: 39, scope: !8597)
!8604 = !DILocation(line: 801, column: 29, scope: !8597)
!8605 = !DILocation(line: 801, column: 34, scope: !8597)
!8606 = !DILocation(line: 801, column: 10, scope: !8597)
!8607 = !DILocation(line: 801, column: 3, scope: !8597)
!8608 = distinct !DISubprogram(name: "quotearg_n_style", scope: !108, file: !108, line: 805, type: !8609, isLocal: false, isDefinition: true, scopeLine: 806, flags: DIFlagPrototyped, isOptimized: false, unit: !107, variables: !25)
!8609 = !DISubroutineType(types: !8610)
!8610 = !{!15, !23, !110, !12}
!8611 = !DILocalVariable(name: "n", arg: 1, scope: !8608, file: !108, line: 805, type: !23)
!8612 = !DILocation(line: 805, column: 23, scope: !8608)
!8613 = !DILocalVariable(name: "s", arg: 2, scope: !8608, file: !108, line: 805, type: !110)
!8614 = !DILocation(line: 805, column: 45, scope: !8608)
!8615 = !DILocalVariable(name: "arg", arg: 3, scope: !8608, file: !108, line: 805, type: !12)
!8616 = !DILocation(line: 805, column: 60, scope: !8608)
!8617 = !DILocalVariable(name: "o", scope: !8608, file: !108, line: 807, type: !7528)
!8618 = !DILocation(line: 807, column: 32, scope: !8608)
!8619 = !DILocation(line: 807, column: 64, scope: !8608)
!8620 = !DILocation(line: 807, column: 36, scope: !8608)
!8621 = !DILocation(line: 808, column: 30, scope: !8608)
!8622 = !DILocation(line: 808, column: 33, scope: !8608)
!8623 = !DILocation(line: 808, column: 10, scope: !8608)
!8624 = !DILocation(line: 808, column: 3, scope: !8608)
!8625 = distinct !DISubprogram(name: "quoting_options_from_style", scope: !108, file: !108, line: 170, type: !8626, isLocal: true, isDefinition: true, scopeLine: 171, flags: DIFlagPrototyped, isOptimized: false, unit: !107, variables: !25)
!8626 = !DISubroutineType(types: !8627)
!8627 = !{!153, !110}
!8628 = !DILocalVariable(name: "style", arg: 1, scope: !8625, file: !108, line: 170, type: !110)
!8629 = !DILocation(line: 170, column: 48, scope: !8625)
!8630 = !DILocalVariable(name: "o", scope: !8625, file: !108, line: 172, type: !153)
!8631 = !DILocation(line: 172, column: 26, scope: !8625)
!8632 = !DILocation(line: 173, column: 13, scope: !8625)
!8633 = !DILocation(line: 173, column: 5, scope: !8625)
!8634 = !DILocation(line: 173, column: 11, scope: !8625)
!8635 = !DILocation(line: 174, column: 5, scope: !8625)
!8636 = !DILocation(line: 174, column: 11, scope: !8625)
!8637 = !DILocation(line: 175, column: 13, scope: !8625)
!8638 = !DILocation(line: 175, column: 3, scope: !8625)
!8639 = !DILocation(line: 176, column: 10, scope: !8625)
!8640 = !DILocation(line: 176, column: 3, scope: !8625)
!8641 = distinct !DISubprogram(name: "quotearg_n_style_mem", scope: !108, file: !108, line: 812, type: !8642, isLocal: false, isDefinition: true, scopeLine: 814, flags: DIFlagPrototyped, isOptimized: false, unit: !107, variables: !25)
!8642 = !DISubroutineType(types: !8643)
!8643 = !{!15, !23, !110, !12, !91}
!8644 = !DILocalVariable(name: "n", arg: 1, scope: !8641, file: !108, line: 812, type: !23)
!8645 = !DILocation(line: 812, column: 27, scope: !8641)
!8646 = !DILocalVariable(name: "s", arg: 2, scope: !8641, file: !108, line: 812, type: !110)
!8647 = !DILocation(line: 812, column: 49, scope: !8641)
!8648 = !DILocalVariable(name: "arg", arg: 3, scope: !8641, file: !108, line: 813, type: !12)
!8649 = !DILocation(line: 813, column: 21, scope: !8641)
!8650 = !DILocalVariable(name: "argsize", arg: 4, scope: !8641, file: !108, line: 813, type: !91)
!8651 = !DILocation(line: 813, column: 33, scope: !8641)
!8652 = !DILocalVariable(name: "o", scope: !8641, file: !108, line: 815, type: !7528)
!8653 = !DILocation(line: 815, column: 32, scope: !8641)
!8654 = !DILocation(line: 815, column: 64, scope: !8641)
!8655 = !DILocation(line: 815, column: 36, scope: !8641)
!8656 = !DILocation(line: 816, column: 30, scope: !8641)
!8657 = !DILocation(line: 816, column: 33, scope: !8641)
!8658 = !DILocation(line: 816, column: 38, scope: !8641)
!8659 = !DILocation(line: 816, column: 10, scope: !8641)
!8660 = !DILocation(line: 816, column: 3, scope: !8641)
!8661 = distinct !DISubprogram(name: "quotearg_style", scope: !108, file: !108, line: 820, type: !8662, isLocal: false, isDefinition: true, scopeLine: 821, flags: DIFlagPrototyped, isOptimized: false, unit: !107, variables: !25)
!8662 = !DISubroutineType(types: !8663)
!8663 = !{!15, !110, !12}
!8664 = !DILocalVariable(name: "s", arg: 1, scope: !8661, file: !108, line: 820, type: !110)
!8665 = !DILocation(line: 820, column: 36, scope: !8661)
!8666 = !DILocalVariable(name: "arg", arg: 2, scope: !8661, file: !108, line: 820, type: !12)
!8667 = !DILocation(line: 820, column: 51, scope: !8661)
!8668 = !DILocation(line: 822, column: 31, scope: !8661)
!8669 = !DILocation(line: 822, column: 34, scope: !8661)
!8670 = !DILocation(line: 822, column: 10, scope: !8661)
!8671 = !DILocation(line: 822, column: 3, scope: !8661)
!8672 = distinct !DISubprogram(name: "quotearg_style_mem", scope: !108, file: !108, line: 826, type: !8673, isLocal: false, isDefinition: true, scopeLine: 827, flags: DIFlagPrototyped, isOptimized: false, unit: !107, variables: !25)
!8673 = !DISubroutineType(types: !8674)
!8674 = !{!15, !110, !12, !91}
!8675 = !DILocalVariable(name: "s", arg: 1, scope: !8672, file: !108, line: 826, type: !110)
!8676 = !DILocation(line: 826, column: 40, scope: !8672)
!8677 = !DILocalVariable(name: "arg", arg: 2, scope: !8672, file: !108, line: 826, type: !12)
!8678 = !DILocation(line: 826, column: 55, scope: !8672)
!8679 = !DILocalVariable(name: "argsize", arg: 3, scope: !8672, file: !108, line: 826, type: !91)
!8680 = !DILocation(line: 826, column: 67, scope: !8672)
!8681 = !DILocation(line: 828, column: 35, scope: !8672)
!8682 = !DILocation(line: 828, column: 38, scope: !8672)
!8683 = !DILocation(line: 828, column: 43, scope: !8672)
!8684 = !DILocation(line: 828, column: 10, scope: !8672)
!8685 = !DILocation(line: 828, column: 3, scope: !8672)
!8686 = distinct !DISubprogram(name: "quotearg_char_mem", scope: !108, file: !108, line: 832, type: !8687, isLocal: false, isDefinition: true, scopeLine: 833, flags: DIFlagPrototyped, isOptimized: false, unit: !107, variables: !25)
!8687 = !DISubroutineType(types: !8688)
!8688 = !{!15, !12, !91, !14}
!8689 = !DILocalVariable(name: "arg", arg: 1, scope: !8686, file: !108, line: 832, type: !12)
!8690 = !DILocation(line: 832, column: 32, scope: !8686)
!8691 = !DILocalVariable(name: "argsize", arg: 2, scope: !8686, file: !108, line: 832, type: !91)
!8692 = !DILocation(line: 832, column: 44, scope: !8686)
!8693 = !DILocalVariable(name: "ch", arg: 3, scope: !8686, file: !108, line: 832, type: !14)
!8694 = !DILocation(line: 832, column: 58, scope: !8686)
!8695 = !DILocalVariable(name: "options", scope: !8686, file: !108, line: 834, type: !153)
!8696 = !DILocation(line: 834, column: 26, scope: !8686)
!8697 = !DILocation(line: 835, column: 13, scope: !8686)
!8698 = !DILocation(line: 836, column: 31, scope: !8686)
!8699 = !DILocation(line: 836, column: 3, scope: !8686)
!8700 = !DILocation(line: 837, column: 33, scope: !8686)
!8701 = !DILocation(line: 837, column: 38, scope: !8686)
!8702 = !DILocation(line: 837, column: 10, scope: !8686)
!8703 = !DILocation(line: 837, column: 3, scope: !8686)
!8704 = distinct !DISubprogram(name: "quotearg_char", scope: !108, file: !108, line: 841, type: !8705, isLocal: false, isDefinition: true, scopeLine: 842, flags: DIFlagPrototyped, isOptimized: false, unit: !107, variables: !25)
!8705 = !DISubroutineType(types: !8706)
!8706 = !{!15, !12, !14}
!8707 = !DILocalVariable(name: "arg", arg: 1, scope: !8704, file: !108, line: 841, type: !12)
!8708 = !DILocation(line: 841, column: 28, scope: !8704)
!8709 = !DILocalVariable(name: "ch", arg: 2, scope: !8704, file: !108, line: 841, type: !14)
!8710 = !DILocation(line: 841, column: 38, scope: !8704)
!8711 = !DILocation(line: 843, column: 29, scope: !8704)
!8712 = !DILocation(line: 843, column: 44, scope: !8704)
!8713 = !DILocation(line: 843, column: 10, scope: !8704)
!8714 = !DILocation(line: 843, column: 3, scope: !8704)
!8715 = distinct !DISubprogram(name: "quotearg_colon", scope: !108, file: !108, line: 847, type: !792, isLocal: false, isDefinition: true, scopeLine: 848, flags: DIFlagPrototyped, isOptimized: false, unit: !107, variables: !25)
!8716 = !DILocalVariable(name: "arg", arg: 1, scope: !8715, file: !108, line: 847, type: !12)
!8717 = !DILocation(line: 847, column: 29, scope: !8715)
!8718 = !DILocation(line: 849, column: 25, scope: !8715)
!8719 = !DILocation(line: 849, column: 10, scope: !8715)
!8720 = !DILocation(line: 849, column: 3, scope: !8715)
!8721 = distinct !DISubprogram(name: "quotearg_colon_mem", scope: !108, file: !108, line: 853, type: !8598, isLocal: false, isDefinition: true, scopeLine: 854, flags: DIFlagPrototyped, isOptimized: false, unit: !107, variables: !25)
!8722 = !DILocalVariable(name: "arg", arg: 1, scope: !8721, file: !108, line: 853, type: !12)
!8723 = !DILocation(line: 853, column: 33, scope: !8721)
!8724 = !DILocalVariable(name: "argsize", arg: 2, scope: !8721, file: !108, line: 853, type: !91)
!8725 = !DILocation(line: 853, column: 45, scope: !8721)
!8726 = !DILocation(line: 855, column: 29, scope: !8721)
!8727 = !DILocation(line: 855, column: 34, scope: !8721)
!8728 = !DILocation(line: 855, column: 10, scope: !8721)
!8729 = !DILocation(line: 855, column: 3, scope: !8721)
!8730 = distinct !DISubprogram(name: "quotearg_n_custom", scope: !108, file: !108, line: 859, type: !8731, isLocal: false, isDefinition: true, scopeLine: 861, flags: DIFlagPrototyped, isOptimized: false, unit: !107, variables: !25)
!8731 = !DISubroutineType(types: !8732)
!8732 = !{!15, !23, !12, !12, !12}
!8733 = !DILocalVariable(name: "n", arg: 1, scope: !8730, file: !108, line: 859, type: !23)
!8734 = !DILocation(line: 859, column: 24, scope: !8730)
!8735 = !DILocalVariable(name: "left_quote", arg: 2, scope: !8730, file: !108, line: 859, type: !12)
!8736 = !DILocation(line: 859, column: 39, scope: !8730)
!8737 = !DILocalVariable(name: "right_quote", arg: 3, scope: !8730, file: !108, line: 860, type: !12)
!8738 = !DILocation(line: 860, column: 18, scope: !8730)
!8739 = !DILocalVariable(name: "arg", arg: 4, scope: !8730, file: !108, line: 860, type: !12)
!8740 = !DILocation(line: 860, column: 43, scope: !8730)
!8741 = !DILocation(line: 862, column: 33, scope: !8730)
!8742 = !DILocation(line: 862, column: 36, scope: !8730)
!8743 = !DILocation(line: 862, column: 48, scope: !8730)
!8744 = !DILocation(line: 862, column: 61, scope: !8730)
!8745 = !DILocation(line: 862, column: 10, scope: !8730)
!8746 = !DILocation(line: 862, column: 3, scope: !8730)
!8747 = distinct !DISubprogram(name: "quotearg_n_custom_mem", scope: !108, file: !108, line: 867, type: !8748, isLocal: false, isDefinition: true, scopeLine: 870, flags: DIFlagPrototyped, isOptimized: false, unit: !107, variables: !25)
!8748 = !DISubroutineType(types: !8749)
!8749 = !{!15, !23, !12, !12, !12, !91}
!8750 = !DILocalVariable(name: "n", arg: 1, scope: !8747, file: !108, line: 867, type: !23)
!8751 = !DILocation(line: 867, column: 28, scope: !8747)
!8752 = !DILocalVariable(name: "left_quote", arg: 2, scope: !8747, file: !108, line: 867, type: !12)
!8753 = !DILocation(line: 867, column: 43, scope: !8747)
!8754 = !DILocalVariable(name: "right_quote", arg: 3, scope: !8747, file: !108, line: 868, type: !12)
!8755 = !DILocation(line: 868, column: 22, scope: !8747)
!8756 = !DILocalVariable(name: "arg", arg: 4, scope: !8747, file: !108, line: 869, type: !12)
!8757 = !DILocation(line: 869, column: 22, scope: !8747)
!8758 = !DILocalVariable(name: "argsize", arg: 5, scope: !8747, file: !108, line: 869, type: !91)
!8759 = !DILocation(line: 869, column: 34, scope: !8747)
!8760 = !DILocalVariable(name: "o", scope: !8747, file: !108, line: 871, type: !153)
!8761 = !DILocation(line: 871, column: 26, scope: !8747)
!8762 = !DILocation(line: 871, column: 30, scope: !8747)
!8763 = !DILocation(line: 872, column: 27, scope: !8747)
!8764 = !DILocation(line: 872, column: 39, scope: !8747)
!8765 = !DILocation(line: 872, column: 3, scope: !8747)
!8766 = !DILocation(line: 873, column: 30, scope: !8747)
!8767 = !DILocation(line: 873, column: 33, scope: !8747)
!8768 = !DILocation(line: 873, column: 38, scope: !8747)
!8769 = !DILocation(line: 873, column: 10, scope: !8747)
!8770 = !DILocation(line: 873, column: 3, scope: !8747)
!8771 = distinct !DISubprogram(name: "quotearg_custom", scope: !108, file: !108, line: 877, type: !8772, isLocal: false, isDefinition: true, scopeLine: 879, flags: DIFlagPrototyped, isOptimized: false, unit: !107, variables: !25)
!8772 = !DISubroutineType(types: !8773)
!8773 = !{!15, !12, !12, !12}
!8774 = !DILocalVariable(name: "left_quote", arg: 1, scope: !8771, file: !108, line: 877, type: !12)
!8775 = !DILocation(line: 877, column: 30, scope: !8771)
!8776 = !DILocalVariable(name: "right_quote", arg: 2, scope: !8771, file: !108, line: 877, type: !12)
!8777 = !DILocation(line: 877, column: 54, scope: !8771)
!8778 = !DILocalVariable(name: "arg", arg: 3, scope: !8771, file: !108, line: 878, type: !12)
!8779 = !DILocation(line: 878, column: 16, scope: !8771)
!8780 = !DILocation(line: 880, column: 32, scope: !8771)
!8781 = !DILocation(line: 880, column: 44, scope: !8771)
!8782 = !DILocation(line: 880, column: 57, scope: !8771)
!8783 = !DILocation(line: 880, column: 10, scope: !8771)
!8784 = !DILocation(line: 880, column: 3, scope: !8771)
!8785 = distinct !DISubprogram(name: "quotearg_custom_mem", scope: !108, file: !108, line: 884, type: !8786, isLocal: false, isDefinition: true, scopeLine: 886, flags: DIFlagPrototyped, isOptimized: false, unit: !107, variables: !25)
!8786 = !DISubroutineType(types: !8787)
!8787 = !{!15, !12, !12, !12, !91}
!8788 = !DILocalVariable(name: "left_quote", arg: 1, scope: !8785, file: !108, line: 884, type: !12)
!8789 = !DILocation(line: 884, column: 34, scope: !8785)
!8790 = !DILocalVariable(name: "right_quote", arg: 2, scope: !8785, file: !108, line: 884, type: !12)
!8791 = !DILocation(line: 884, column: 58, scope: !8785)
!8792 = !DILocalVariable(name: "arg", arg: 3, scope: !8785, file: !108, line: 885, type: !12)
!8793 = !DILocation(line: 885, column: 20, scope: !8785)
!8794 = !DILocalVariable(name: "argsize", arg: 4, scope: !8785, file: !108, line: 885, type: !91)
!8795 = !DILocation(line: 885, column: 32, scope: !8785)
!8796 = !DILocation(line: 887, column: 36, scope: !8785)
!8797 = !DILocation(line: 887, column: 48, scope: !8785)
!8798 = !DILocation(line: 887, column: 61, scope: !8785)
!8799 = !DILocation(line: 888, column: 5, scope: !8785)
!8800 = !DILocation(line: 887, column: 10, scope: !8785)
!8801 = !DILocation(line: 887, column: 3, scope: !8785)
!8802 = distinct !DISubprogram(name: "get_root_dev_ino", scope: !426, file: !426, line: 29, type: !8803, isLocal: false, isDefinition: true, scopeLine: 30, flags: DIFlagPrototyped, isOptimized: false, unit: !425, variables: !25)
!8803 = !DISubroutineType(types: !8804)
!8804 = !{!8805, !8805}
!8805 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8806, size: 64)
!8806 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_ino", file: !357, line: 7, size: 128, elements: !8807)
!8807 = !{!8808, !8809}
!8808 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !8806, file: !357, line: 9, baseType: !360, size: 64)
!8809 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !8806, file: !357, line: 10, baseType: !329, size: 64, offset: 64)
!8810 = !DILocalVariable(name: "root_d_i", arg: 1, scope: !8802, file: !426, line: 29, type: !8805)
!8811 = !DILocation(line: 29, column: 35, scope: !8802)
!8812 = !DILocalVariable(name: "statbuf", scope: !8802, file: !426, line: 31, type: !8813)
!8813 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !288, line: 46, size: 1152, elements: !8814)
!8814 = !{!8815, !8816, !8817, !8818, !8819, !8820, !8821, !8822, !8823, !8824, !8825, !8826, !8831, !8832, !8833}
!8815 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !8813, file: !288, line: 48, baseType: !291, size: 64)
!8816 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !8813, file: !288, line: 53, baseType: !293, size: 64, offset: 64)
!8817 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !8813, file: !288, line: 61, baseType: !281, size: 64, offset: 128)
!8818 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !8813, file: !288, line: 62, baseType: !296, size: 32, offset: 192)
!8819 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !8813, file: !288, line: 64, baseType: !191, size: 32, offset: 224)
!8820 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !8813, file: !288, line: 65, baseType: !195, size: 32, offset: 256)
!8821 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !8813, file: !288, line: 67, baseType: !23, size: 32, offset: 288)
!8822 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !8813, file: !288, line: 69, baseType: !291, size: 64, offset: 320)
!8823 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !8813, file: !288, line: 74, baseType: !302, size: 64, offset: 384)
!8824 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !8813, file: !288, line: 78, baseType: !304, size: 64, offset: 448)
!8825 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !8813, file: !288, line: 80, baseType: !306, size: 64, offset: 512)
!8826 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !8813, file: !288, line: 91, baseType: !8827, size: 128, offset: 576)
!8827 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !309, line: 8, size: 128, elements: !8828)
!8828 = !{!8829, !8830}
!8829 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !8827, file: !309, line: 10, baseType: !312, size: 64)
!8830 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !8827, file: !309, line: 11, baseType: !314, size: 64, offset: 64)
!8831 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !8813, file: !288, line: 92, baseType: !8827, size: 128, offset: 704)
!8832 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !8813, file: !288, line: 93, baseType: !8827, size: 128, offset: 832)
!8833 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !8813, file: !288, line: 106, baseType: !318, size: 192, offset: 960)
!8834 = !DILocation(line: 31, column: 15, scope: !8802)
!8835 = !DILocation(line: 32, column: 7, scope: !8836)
!8836 = distinct !DILexicalBlock(scope: !8802, file: !426, line: 32, column: 7)
!8837 = !DILocation(line: 32, column: 7, scope: !8802)
!8838 = !DILocation(line: 33, column: 5, scope: !8836)
!8839 = !DILocation(line: 34, column: 30, scope: !8802)
!8840 = !DILocation(line: 34, column: 3, scope: !8802)
!8841 = !DILocation(line: 34, column: 13, scope: !8802)
!8842 = !DILocation(line: 34, column: 20, scope: !8802)
!8843 = !DILocation(line: 35, column: 30, scope: !8802)
!8844 = !DILocation(line: 35, column: 3, scope: !8802)
!8845 = !DILocation(line: 35, column: 13, scope: !8802)
!8846 = !DILocation(line: 35, column: 20, scope: !8802)
!8847 = !DILocation(line: 36, column: 10, scope: !8802)
!8848 = !DILocation(line: 36, column: 3, scope: !8802)
!8849 = !DILocation(line: 37, column: 1, scope: !8802)
!8850 = distinct !DISubprogram(name: "umaxtostr", scope: !8851, file: !8851, line: 30, type: !8852, isLocal: false, isDefinition: true, scopeLine: 31, flags: DIFlagPrototyped, isOptimized: false, unit: !427, variables: !25)
!8851 = !DIFile(filename: "../../lib/inttostr.c", directory: "/home/ma481/Downloads/Chisel/chisel-bench/benchmark/chown-8.2/original/obj-llvm/lib")
!8852 = !DISubroutineType(types: !8853)
!8853 = !{!15, !363, !15}
!8854 = !DILocalVariable(name: "i", arg: 1, scope: !8850, file: !8851, line: 30, type: !363)
!8855 = !DILocation(line: 30, column: 19, scope: !8850)
!8856 = !DILocalVariable(name: "buf", arg: 2, scope: !8850, file: !8851, line: 30, type: !15)
!8857 = !DILocation(line: 30, column: 28, scope: !8850)
!8858 = !DILocalVariable(name: "p", scope: !8850, file: !8851, line: 32, type: !15)
!8859 = !DILocation(line: 32, column: 9, scope: !8850)
!8860 = !DILocation(line: 32, column: 13, scope: !8850)
!8861 = !DILocation(line: 32, column: 17, scope: !8850)
!8862 = !DILocation(line: 33, column: 4, scope: !8850)
!8863 = !DILocation(line: 33, column: 6, scope: !8850)
!8864 = !DILocation(line: 48, column: 7, scope: !8865)
!8865 = distinct !DILexicalBlock(scope: !8850, file: !8851, line: 47, column: 5)
!8866 = distinct !{!8866, !8864, !8867}
!8867 = !DILocation(line: 50, column: 28, scope: !8865)
!8868 = !DILocation(line: 49, column: 15, scope: !8865)
!8869 = !DILocation(line: 49, column: 17, scope: !8865)
!8870 = !DILocation(line: 49, column: 13, scope: !8865)
!8871 = !DILocation(line: 49, column: 9, scope: !8865)
!8872 = !DILocation(line: 49, column: 3, scope: !8865)
!8873 = !DILocation(line: 49, column: 7, scope: !8865)
!8874 = !DILocation(line: 49, column: 2, scope: !8865)
!8875 = !DILocation(line: 50, column: 17, scope: !8865)
!8876 = !DILocation(line: 50, column: 24, scope: !8865)
!8877 = !DILocation(line: 53, column: 10, scope: !8850)
!8878 = !DILocation(line: 53, column: 3, scope: !8850)
!8879 = distinct !DISubprogram(name: "parse_user_spec", scope: !185, file: !185, line: 247, type: !8880, isLocal: false, isDefinition: true, scopeLine: 249, flags: DIFlagPrototyped, isOptimized: false, unit: !196, variables: !25)
!8880 = !DISubroutineType(types: !8881)
!8881 = !{!12, !12, !188, !193, !24, !24}
!8882 = !DILocalVariable(name: "spec", arg: 1, scope: !8879, file: !185, line: 247, type: !12)
!8883 = !DILocation(line: 247, column: 30, scope: !8879)
!8884 = !DILocalVariable(name: "uid", arg: 2, scope: !8879, file: !185, line: 247, type: !188)
!8885 = !DILocation(line: 247, column: 43, scope: !8879)
!8886 = !DILocalVariable(name: "gid", arg: 3, scope: !8879, file: !185, line: 247, type: !193)
!8887 = !DILocation(line: 247, column: 55, scope: !8879)
!8888 = !DILocalVariable(name: "username", arg: 4, scope: !8879, file: !185, line: 248, type: !24)
!8889 = !DILocation(line: 248, column: 25, scope: !8879)
!8890 = !DILocalVariable(name: "groupname", arg: 5, scope: !8879, file: !185, line: 248, type: !24)
!8891 = !DILocation(line: 248, column: 42, scope: !8879)
!8892 = !DILocalVariable(name: "colon", scope: !8879, file: !185, line: 250, type: !12)
!8893 = !DILocation(line: 250, column: 15, scope: !8879)
!8894 = !DILocation(line: 250, column: 31, scope: !8879)
!8895 = !DILocation(line: 250, column: 23, scope: !8879)
!8896 = !DILocalVariable(name: "error_msg", scope: !8879, file: !185, line: 251, type: !12)
!8897 = !DILocation(line: 251, column: 15, scope: !8879)
!8898 = !DILocation(line: 252, column: 27, scope: !8879)
!8899 = !DILocation(line: 252, column: 33, scope: !8879)
!8900 = !DILocation(line: 252, column: 40, scope: !8879)
!8901 = !DILocation(line: 252, column: 45, scope: !8879)
!8902 = !DILocation(line: 252, column: 50, scope: !8879)
!8903 = !DILocation(line: 252, column: 60, scope: !8879)
!8904 = !DILocation(line: 252, column: 5, scope: !8879)
!8905 = !DILocation(line: 254, column: 8, scope: !8906)
!8906 = distinct !DILexicalBlock(scope: !8879, file: !185, line: 254, column: 7)
!8907 = !DILocation(line: 254, column: 14, scope: !8906)
!8908 = !DILocation(line: 254, column: 17, scope: !8906)
!8909 = !DILocation(line: 254, column: 7, scope: !8879)
!8910 = !DILocalVariable(name: "dot", scope: !8911, file: !185, line: 262, type: !12)
!8911 = distinct !DILexicalBlock(scope: !8906, file: !185, line: 255, column: 5)
!8912 = !DILocation(line: 262, column: 19, scope: !8911)
!8913 = !DILocation(line: 262, column: 33, scope: !8911)
!8914 = !DILocation(line: 262, column: 25, scope: !8911)
!8915 = !DILocation(line: 263, column: 11, scope: !8916)
!8916 = distinct !DILexicalBlock(scope: !8911, file: !185, line: 263, column: 11)
!8917 = !DILocation(line: 264, column: 11, scope: !8916)
!8918 = !DILocation(line: 264, column: 38, scope: !8916)
!8919 = !DILocation(line: 264, column: 44, scope: !8916)
!8920 = !DILocation(line: 264, column: 49, scope: !8916)
!8921 = !DILocation(line: 264, column: 54, scope: !8916)
!8922 = !DILocation(line: 264, column: 59, scope: !8916)
!8923 = !DILocation(line: 264, column: 69, scope: !8916)
!8924 = !DILocation(line: 264, column: 16, scope: !8916)
!8925 = !DILocation(line: 263, column: 11, scope: !8911)
!8926 = !DILocation(line: 265, column: 19, scope: !8916)
!8927 = !DILocation(line: 265, column: 9, scope: !8916)
!8928 = !DILocation(line: 266, column: 5, scope: !8911)
!8929 = !DILocation(line: 268, column: 10, scope: !8879)
!8930 = !DILocation(line: 268, column: 3, scope: !8879)
!8931 = !DILocalVariable(name: "spec", arg: 1, scope: !184, file: !185, line: 102, type: !12)
!8932 = !DILocation(line: 102, column: 35, scope: !184)
!8933 = !DILocalVariable(name: "separator", arg: 2, scope: !184, file: !185, line: 102, type: !12)
!8934 = !DILocation(line: 102, column: 53, scope: !184)
!8935 = !DILocalVariable(name: "uid", arg: 3, scope: !184, file: !185, line: 103, type: !188)
!8936 = !DILocation(line: 103, column: 30, scope: !184)
!8937 = !DILocalVariable(name: "gid", arg: 4, scope: !184, file: !185, line: 103, type: !193)
!8938 = !DILocation(line: 103, column: 42, scope: !184)
!8939 = !DILocalVariable(name: "username", arg: 5, scope: !184, file: !185, line: 104, type: !24)
!8940 = !DILocation(line: 104, column: 30, scope: !184)
!8941 = !DILocalVariable(name: "groupname", arg: 6, scope: !184, file: !185, line: 104, type: !24)
!8942 = !DILocation(line: 104, column: 47, scope: !184)
!8943 = !DILocalVariable(name: "error_msg", scope: !184, file: !185, line: 110, type: !12)
!8944 = !DILocation(line: 110, column: 15, scope: !184)
!8945 = !DILocalVariable(name: "pwd", scope: !184, file: !185, line: 111, type: !8946)
!8946 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8947, size: 64)
!8947 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "passwd", file: !8948, line: 49, size: 384, elements: !8949)
!8948 = !DIFile(filename: "/usr/include/pwd.h", directory: "/home/ma481/Downloads/Chisel/chisel-bench/benchmark/chown-8.2/original/obj-llvm/lib")
!8949 = !{!8950, !8951, !8952, !8953, !8954, !8955, !8956}
!8950 = !DIDerivedType(tag: DW_TAG_member, name: "pw_name", scope: !8947, file: !8948, line: 51, baseType: !15, size: 64)
!8951 = !DIDerivedType(tag: DW_TAG_member, name: "pw_passwd", scope: !8947, file: !8948, line: 52, baseType: !15, size: 64, offset: 64)
!8952 = !DIDerivedType(tag: DW_TAG_member, name: "pw_uid", scope: !8947, file: !8948, line: 53, baseType: !191, size: 32, offset: 128)
!8953 = !DIDerivedType(tag: DW_TAG_member, name: "pw_gid", scope: !8947, file: !8948, line: 54, baseType: !195, size: 32, offset: 160)
!8954 = !DIDerivedType(tag: DW_TAG_member, name: "pw_gecos", scope: !8947, file: !8948, line: 55, baseType: !15, size: 64, offset: 192)
!8955 = !DIDerivedType(tag: DW_TAG_member, name: "pw_dir", scope: !8947, file: !8948, line: 56, baseType: !15, size: 64, offset: 256)
!8956 = !DIDerivedType(tag: DW_TAG_member, name: "pw_shell", scope: !8947, file: !8948, line: 57, baseType: !15, size: 64, offset: 320)
!8957 = !DILocation(line: 111, column: 18, scope: !184)
!8958 = !DILocalVariable(name: "grp", scope: !184, file: !185, line: 112, type: !8959)
!8959 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8960, size: 64)
!8960 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "group", file: !8961, line: 42, size: 256, elements: !8962)
!8961 = !DIFile(filename: "/usr/include/grp.h", directory: "/home/ma481/Downloads/Chisel/chisel-bench/benchmark/chown-8.2/original/obj-llvm/lib")
!8962 = !{!8963, !8964, !8965, !8966}
!8963 = !DIDerivedType(tag: DW_TAG_member, name: "gr_name", scope: !8960, file: !8961, line: 44, baseType: !15, size: 64)
!8964 = !DIDerivedType(tag: DW_TAG_member, name: "gr_passwd", scope: !8960, file: !8961, line: 45, baseType: !15, size: 64, offset: 64)
!8965 = !DIDerivedType(tag: DW_TAG_member, name: "gr_gid", scope: !8960, file: !8961, line: 46, baseType: !195, size: 32, offset: 128)
!8966 = !DIDerivedType(tag: DW_TAG_member, name: "gr_mem", scope: !8960, file: !8961, line: 47, baseType: !24, size: 64, offset: 192)
!8967 = !DILocation(line: 112, column: 17, scope: !184)
!8968 = !DILocalVariable(name: "u", scope: !184, file: !185, line: 113, type: !15)
!8969 = !DILocation(line: 113, column: 9, scope: !184)
!8970 = !DILocalVariable(name: "g", scope: !184, file: !185, line: 114, type: !12)
!8971 = !DILocation(line: 114, column: 15, scope: !184)
!8972 = !DILocalVariable(name: "gname", scope: !184, file: !185, line: 115, type: !15)
!8973 = !DILocation(line: 115, column: 9, scope: !184)
!8974 = !DILocalVariable(name: "unum", scope: !184, file: !185, line: 116, type: !189)
!8975 = !DILocation(line: 116, column: 9, scope: !184)
!8976 = !DILocation(line: 116, column: 17, scope: !184)
!8977 = !DILocation(line: 116, column: 16, scope: !184)
!8978 = !DILocalVariable(name: "gnum", scope: !184, file: !185, line: 117, type: !194)
!8979 = !DILocation(line: 117, column: 9, scope: !184)
!8980 = !DILocation(line: 117, column: 17, scope: !184)
!8981 = !DILocation(line: 117, column: 16, scope: !184)
!8982 = !DILocation(line: 119, column: 13, scope: !184)
!8983 = !DILocation(line: 120, column: 16, scope: !184)
!8984 = !DILocation(line: 120, column: 26, scope: !184)
!8985 = !DILocation(line: 120, column: 4, scope: !184)
!8986 = !DILocation(line: 120, column: 13, scope: !184)
!8987 = !DILocation(line: 126, column: 5, scope: !184)
!8988 = !DILocation(line: 127, column: 7, scope: !8989)
!8989 = distinct !DILexicalBlock(scope: !184, file: !185, line: 127, column: 7)
!8990 = !DILocation(line: 127, column: 17, scope: !8989)
!8991 = !DILocation(line: 127, column: 7, scope: !184)
!8992 = !DILocation(line: 129, column: 12, scope: !8993)
!8993 = distinct !DILexicalBlock(scope: !8994, file: !185, line: 129, column: 11)
!8994 = distinct !DILexicalBlock(scope: !8989, file: !185, line: 128, column: 5)
!8995 = !DILocation(line: 129, column: 11, scope: !8993)
!8996 = !DILocation(line: 129, column: 11, scope: !8994)
!8997 = !DILocation(line: 130, column: 22, scope: !8993)
!8998 = !DILocation(line: 130, column: 13, scope: !8993)
!8999 = !DILocation(line: 130, column: 11, scope: !8993)
!9000 = !DILocation(line: 130, column: 9, scope: !8993)
!9001 = !DILocation(line: 131, column: 5, scope: !8994)
!9002 = !DILocalVariable(name: "ulen", scope: !9003, file: !185, line: 134, type: !91)
!9003 = distinct !DILexicalBlock(scope: !8989, file: !185, line: 133, column: 5)
!9004 = !DILocation(line: 134, column: 14, scope: !9003)
!9005 = !DILocation(line: 134, column: 21, scope: !9003)
!9006 = !DILocation(line: 134, column: 33, scope: !9003)
!9007 = !DILocation(line: 134, column: 31, scope: !9003)
!9008 = !DILocation(line: 135, column: 11, scope: !9009)
!9009 = distinct !DILexicalBlock(scope: !9003, file: !185, line: 135, column: 11)
!9010 = !DILocation(line: 135, column: 16, scope: !9009)
!9011 = !DILocation(line: 135, column: 11, scope: !9003)
!9012 = !DILocation(line: 137, column: 24, scope: !9013)
!9013 = distinct !DILexicalBlock(scope: !9009, file: !185, line: 136, column: 9)
!9014 = !DILocation(line: 137, column: 30, scope: !9013)
!9015 = !DILocation(line: 137, column: 35, scope: !9013)
!9016 = !DILocation(line: 137, column: 15, scope: !9013)
!9017 = !DILocation(line: 137, column: 13, scope: !9013)
!9018 = !DILocation(line: 138, column: 11, scope: !9013)
!9019 = !DILocation(line: 138, column: 13, scope: !9013)
!9020 = !DILocation(line: 138, column: 19, scope: !9013)
!9021 = !DILocation(line: 139, column: 9, scope: !9013)
!9022 = !DILocation(line: 142, column: 8, scope: !184)
!9023 = !DILocation(line: 142, column: 18, scope: !184)
!9024 = !DILocation(line: 142, column: 26, scope: !184)
!9025 = !DILocation(line: 142, column: 31, scope: !184)
!9026 = !DILocation(line: 142, column: 41, scope: !184)
!9027 = !DILocation(line: 142, column: 29, scope: !184)
!9028 = !DILocation(line: 142, column: 46, scope: !184)
!9029 = !DILocation(line: 144, column: 10, scope: !184)
!9030 = !DILocation(line: 144, column: 20, scope: !184)
!9031 = !DILocation(line: 142, column: 5, scope: !184)
!9032 = !DILocation(line: 155, column: 7, scope: !9033)
!9033 = distinct !DILexicalBlock(scope: !184, file: !185, line: 155, column: 7)
!9034 = !DILocation(line: 155, column: 9, scope: !9033)
!9035 = !DILocation(line: 155, column: 7, scope: !184)
!9036 = !DILocation(line: 158, column: 15, scope: !9037)
!9037 = distinct !DILexicalBlock(scope: !9033, file: !185, line: 156, column: 5)
!9038 = !DILocation(line: 158, column: 14, scope: !9037)
!9039 = !DILocation(line: 158, column: 17, scope: !9037)
!9040 = !DILocation(line: 158, column: 43, scope: !9037)
!9041 = !DILocation(line: 158, column: 33, scope: !9037)
!9042 = !DILocation(line: 158, column: 11, scope: !9037)
!9043 = !DILocation(line: 159, column: 11, scope: !9044)
!9044 = distinct !DILexicalBlock(scope: !9037, file: !185, line: 159, column: 11)
!9045 = !DILocation(line: 159, column: 15, scope: !9044)
!9046 = !DILocation(line: 159, column: 11, scope: !9037)
!9047 = !DILocalVariable(name: "use_login_group", scope: !9048, file: !185, line: 161, type: !79)
!9048 = distinct !DILexicalBlock(scope: !9044, file: !185, line: 160, column: 9)
!9049 = !DILocation(line: 161, column: 16, scope: !9048)
!9050 = !DILocation(line: 161, column: 35, scope: !9048)
!9051 = !DILocation(line: 161, column: 45, scope: !9048)
!9052 = !DILocation(line: 161, column: 53, scope: !9048)
!9053 = !DILocation(line: 161, column: 56, scope: !9048)
!9054 = !DILocation(line: 161, column: 58, scope: !9048)
!9055 = !DILocation(line: 162, column: 15, scope: !9056)
!9056 = distinct !DILexicalBlock(scope: !9048, file: !185, line: 162, column: 15)
!9057 = !DILocation(line: 162, column: 15, scope: !9048)
!9058 = !DILocation(line: 166, column: 27, scope: !9059)
!9059 = distinct !DILexicalBlock(scope: !9056, file: !185, line: 163, column: 13)
!9060 = !DILocation(line: 166, column: 25, scope: !9059)
!9061 = !DILocation(line: 167, column: 13, scope: !9059)
!9062 = !DILocalVariable(name: "tmp", scope: !9063, file: !185, line: 170, type: !34)
!9063 = distinct !DILexicalBlock(scope: !9056, file: !185, line: 169, column: 13)
!9064 = !DILocation(line: 170, column: 33, scope: !9063)
!9065 = !DILocation(line: 171, column: 29, scope: !9066)
!9066 = distinct !DILexicalBlock(scope: !9063, file: !185, line: 171, column: 19)
!9067 = !DILocation(line: 171, column: 19, scope: !9066)
!9068 = !DILocation(line: 171, column: 52, scope: !9066)
!9069 = !DILocation(line: 172, column: 19, scope: !9066)
!9070 = !DILocation(line: 172, column: 22, scope: !9066)
!9071 = !DILocation(line: 172, column: 26, scope: !9066)
!9072 = !DILocation(line: 172, column: 36, scope: !9066)
!9073 = !DILocation(line: 172, column: 47, scope: !9066)
!9074 = !DILocation(line: 172, column: 39, scope: !9066)
!9075 = !DILocation(line: 172, column: 51, scope: !9066)
!9076 = !DILocation(line: 171, column: 19, scope: !9063)
!9077 = !DILocation(line: 173, column: 24, scope: !9066)
!9078 = !DILocation(line: 173, column: 22, scope: !9066)
!9079 = !DILocation(line: 173, column: 17, scope: !9066)
!9080 = !DILocation(line: 175, column: 29, scope: !9066)
!9081 = !DILocation(line: 175, column: 27, scope: !9066)
!9082 = !DILocation(line: 177, column: 9, scope: !9048)
!9083 = !DILocation(line: 180, column: 18, scope: !9084)
!9084 = distinct !DILexicalBlock(scope: !9044, file: !185, line: 179, column: 9)
!9085 = !DILocation(line: 180, column: 23, scope: !9084)
!9086 = !DILocation(line: 180, column: 16, scope: !9084)
!9087 = !DILocation(line: 181, column: 15, scope: !9088)
!9088 = distinct !DILexicalBlock(scope: !9084, file: !185, line: 181, column: 15)
!9089 = !DILocation(line: 181, column: 17, scope: !9088)
!9090 = !DILocation(line: 181, column: 25, scope: !9088)
!9091 = !DILocation(line: 181, column: 28, scope: !9088)
!9092 = !DILocation(line: 181, column: 38, scope: !9088)
!9093 = !DILocation(line: 181, column: 15, scope: !9084)
!9094 = !DILocalVariable(name: "buf", scope: !9095, file: !185, line: 185, type: !850)
!9095 = distinct !DILexicalBlock(scope: !9088, file: !185, line: 182, column: 13)
!9096 = !DILocation(line: 185, column: 20, scope: !9095)
!9097 = !DILocation(line: 186, column: 22, scope: !9095)
!9098 = !DILocation(line: 186, column: 27, scope: !9095)
!9099 = !DILocation(line: 186, column: 20, scope: !9095)
!9100 = !DILocation(line: 187, column: 31, scope: !9095)
!9101 = !DILocation(line: 187, column: 21, scope: !9095)
!9102 = !DILocation(line: 187, column: 19, scope: !9095)
!9103 = !DILocation(line: 188, column: 32, scope: !9095)
!9104 = !DILocation(line: 188, column: 38, scope: !9095)
!9105 = !DILocation(line: 188, column: 43, scope: !9095)
!9106 = !DILocation(line: 188, column: 64, scope: !9095)
!9107 = !DILocation(line: 188, column: 70, scope: !9095)
!9108 = !DILocation(line: 188, column: 53, scope: !9095)
!9109 = !DILocation(line: 188, column: 23, scope: !9095)
!9110 = !DILocation(line: 188, column: 21, scope: !9095)
!9111 = !DILocation(line: 189, column: 15, scope: !9095)
!9112 = !DILocation(line: 190, column: 13, scope: !9095)
!9113 = !DILocation(line: 192, column: 7, scope: !9037)
!9114 = !DILocation(line: 193, column: 5, scope: !9037)
!9115 = !DILocation(line: 195, column: 7, scope: !9116)
!9116 = distinct !DILexicalBlock(scope: !184, file: !185, line: 195, column: 7)
!9117 = !DILocation(line: 195, column: 9, scope: !9116)
!9118 = !DILocation(line: 195, column: 17, scope: !9116)
!9119 = !DILocation(line: 195, column: 20, scope: !9116)
!9120 = !DILocation(line: 195, column: 30, scope: !9116)
!9121 = !DILocation(line: 195, column: 7, scope: !184)
!9122 = !DILocation(line: 199, column: 15, scope: !9123)
!9123 = distinct !DILexicalBlock(scope: !9116, file: !185, line: 196, column: 5)
!9124 = !DILocation(line: 199, column: 14, scope: !9123)
!9125 = !DILocation(line: 199, column: 17, scope: !9123)
!9126 = !DILocation(line: 199, column: 43, scope: !9123)
!9127 = !DILocation(line: 199, column: 33, scope: !9123)
!9128 = !DILocation(line: 199, column: 11, scope: !9123)
!9129 = !DILocation(line: 200, column: 11, scope: !9130)
!9130 = distinct !DILexicalBlock(scope: !9123, file: !185, line: 200, column: 11)
!9131 = !DILocation(line: 200, column: 15, scope: !9130)
!9132 = !DILocation(line: 200, column: 11, scope: !9123)
!9133 = !DILocalVariable(name: "tmp", scope: !9134, file: !185, line: 202, type: !34)
!9134 = distinct !DILexicalBlock(scope: !9130, file: !185, line: 201, column: 9)
!9135 = !DILocation(line: 202, column: 29, scope: !9134)
!9136 = !DILocation(line: 203, column: 25, scope: !9137)
!9137 = distinct !DILexicalBlock(scope: !9134, file: !185, line: 203, column: 15)
!9138 = !DILocation(line: 203, column: 15, scope: !9137)
!9139 = !DILocation(line: 203, column: 48, scope: !9137)
!9140 = !DILocation(line: 204, column: 15, scope: !9137)
!9141 = !DILocation(line: 204, column: 18, scope: !9137)
!9142 = !DILocation(line: 204, column: 22, scope: !9137)
!9143 = !DILocation(line: 204, column: 32, scope: !9137)
!9144 = !DILocation(line: 204, column: 43, scope: !9137)
!9145 = !DILocation(line: 204, column: 35, scope: !9137)
!9146 = !DILocation(line: 204, column: 47, scope: !9137)
!9147 = !DILocation(line: 203, column: 15, scope: !9134)
!9148 = !DILocation(line: 205, column: 20, scope: !9137)
!9149 = !DILocation(line: 205, column: 18, scope: !9137)
!9150 = !DILocation(line: 205, column: 13, scope: !9137)
!9151 = !DILocation(line: 207, column: 25, scope: !9137)
!9152 = !DILocation(line: 207, column: 23, scope: !9137)
!9153 = !DILocation(line: 208, column: 9, scope: !9134)
!9154 = !DILocation(line: 210, column: 16, scope: !9130)
!9155 = !DILocation(line: 210, column: 21, scope: !9130)
!9156 = !DILocation(line: 210, column: 14, scope: !9130)
!9157 = !DILocation(line: 211, column: 7, scope: !9123)
!9158 = !DILocation(line: 212, column: 24, scope: !9123)
!9159 = !DILocation(line: 212, column: 15, scope: !9123)
!9160 = !DILocation(line: 212, column: 13, scope: !9123)
!9161 = !DILocation(line: 213, column: 5, scope: !9123)
!9162 = !DILocation(line: 215, column: 7, scope: !9163)
!9163 = distinct !DILexicalBlock(scope: !184, file: !185, line: 215, column: 7)
!9164 = !DILocation(line: 215, column: 17, scope: !9163)
!9165 = !DILocation(line: 215, column: 7, scope: !184)
!9166 = !DILocation(line: 217, column: 14, scope: !9167)
!9167 = distinct !DILexicalBlock(scope: !9163, file: !185, line: 216, column: 5)
!9168 = !DILocation(line: 217, column: 8, scope: !9167)
!9169 = !DILocation(line: 217, column: 12, scope: !9167)
!9170 = !DILocation(line: 218, column: 14, scope: !9167)
!9171 = !DILocation(line: 218, column: 8, scope: !9167)
!9172 = !DILocation(line: 218, column: 12, scope: !9167)
!9173 = !DILocation(line: 219, column: 19, scope: !9167)
!9174 = !DILocation(line: 219, column: 8, scope: !9167)
!9175 = !DILocation(line: 219, column: 17, scope: !9167)
!9176 = !DILocation(line: 220, column: 20, scope: !9167)
!9177 = !DILocation(line: 220, column: 8, scope: !9167)
!9178 = !DILocation(line: 220, column: 18, scope: !9167)
!9179 = !DILocation(line: 221, column: 9, scope: !9167)
!9180 = !DILocation(line: 222, column: 5, scope: !9167)
!9181 = !DILocation(line: 224, column: 11, scope: !9163)
!9182 = !DILocation(line: 224, column: 5, scope: !9163)
!9183 = !DILocation(line: 226, column: 9, scope: !184)
!9184 = !DILocation(line: 226, column: 3, scope: !184)
!9185 = !DILocation(line: 227, column: 10, scope: !184)
!9186 = !DILocation(line: 227, column: 3, scope: !184)
!9187 = distinct !DISubprogram(name: "xnmalloc", scope: !434, file: !434, line: 121, type: !9188, isLocal: false, isDefinition: true, scopeLine: 122, flags: DIFlagPrototyped, isOptimized: false, unit: !430, variables: !25)
!9188 = !DISubroutineType(types: !9189)
!9189 = !{!16, !91, !91}
!9190 = !DILocalVariable(name: "n", arg: 1, scope: !9187, file: !434, line: 121, type: !91)
!9191 = !DILocation(line: 121, column: 18, scope: !9187)
!9192 = !DILocalVariable(name: "s", arg: 2, scope: !9187, file: !434, line: 121, type: !91)
!9193 = !DILocation(line: 121, column: 28, scope: !9187)
!9194 = !DILocation(line: 123, column: 7, scope: !9195)
!9195 = distinct !DILexicalBlock(scope: !9187, file: !434, line: 123, column: 7)
!9196 = !DILocation(line: 123, column: 7, scope: !9187)
!9197 = !DILocation(line: 124, column: 5, scope: !9195)
!9198 = !DILocation(line: 125, column: 19, scope: !9187)
!9199 = !DILocation(line: 125, column: 23, scope: !9187)
!9200 = !DILocation(line: 125, column: 21, scope: !9187)
!9201 = !DILocation(line: 125, column: 10, scope: !9187)
!9202 = !DILocation(line: 125, column: 3, scope: !9187)
!9203 = distinct !DISubprogram(name: "xmalloc", scope: !431, file: !431, line: 43, type: !9204, isLocal: false, isDefinition: true, scopeLine: 44, flags: DIFlagPrototyped, isOptimized: false, unit: !430, variables: !25)
!9204 = !DISubroutineType(types: !9205)
!9205 = !{!16, !91}
!9206 = !DILocalVariable(name: "n", arg: 1, scope: !9203, file: !431, line: 43, type: !91)
!9207 = !DILocation(line: 43, column: 17, scope: !9203)
!9208 = !DILocalVariable(name: "p", scope: !9203, file: !431, line: 45, type: !16)
!9209 = !DILocation(line: 45, column: 9, scope: !9203)
!9210 = !DILocation(line: 45, column: 21, scope: !9203)
!9211 = !DILocation(line: 45, column: 13, scope: !9203)
!9212 = !DILocation(line: 46, column: 8, scope: !9213)
!9213 = distinct !DILexicalBlock(scope: !9203, file: !431, line: 46, column: 7)
!9214 = !DILocation(line: 46, column: 10, scope: !9213)
!9215 = !DILocation(line: 46, column: 13, scope: !9213)
!9216 = !DILocation(line: 46, column: 15, scope: !9213)
!9217 = !DILocation(line: 46, column: 7, scope: !9203)
!9218 = !DILocation(line: 47, column: 5, scope: !9213)
!9219 = !DILocation(line: 48, column: 10, scope: !9203)
!9220 = !DILocation(line: 48, column: 3, scope: !9203)
!9221 = distinct !DISubprogram(name: "xnrealloc", scope: !434, file: !434, line: 132, type: !9222, isLocal: false, isDefinition: true, scopeLine: 133, flags: DIFlagPrototyped, isOptimized: false, unit: !430, variables: !25)
!9222 = !DISubroutineType(types: !9223)
!9223 = !{!16, !16, !91, !91}
!9224 = !DILocalVariable(name: "p", arg: 1, scope: !9221, file: !434, line: 132, type: !16)
!9225 = !DILocation(line: 132, column: 18, scope: !9221)
!9226 = !DILocalVariable(name: "n", arg: 2, scope: !9221, file: !434, line: 132, type: !91)
!9227 = !DILocation(line: 132, column: 28, scope: !9221)
!9228 = !DILocalVariable(name: "s", arg: 3, scope: !9221, file: !434, line: 132, type: !91)
!9229 = !DILocation(line: 132, column: 38, scope: !9221)
!9230 = !DILocation(line: 134, column: 7, scope: !9231)
!9231 = distinct !DILexicalBlock(scope: !9221, file: !434, line: 134, column: 7)
!9232 = !DILocation(line: 134, column: 7, scope: !9221)
!9233 = !DILocation(line: 135, column: 5, scope: !9231)
!9234 = !DILocation(line: 136, column: 20, scope: !9221)
!9235 = !DILocation(line: 136, column: 23, scope: !9221)
!9236 = !DILocation(line: 136, column: 27, scope: !9221)
!9237 = !DILocation(line: 136, column: 25, scope: !9221)
!9238 = !DILocation(line: 136, column: 10, scope: !9221)
!9239 = !DILocation(line: 136, column: 3, scope: !9221)
!9240 = distinct !DISubprogram(name: "xrealloc", scope: !431, file: !431, line: 55, type: !9241, isLocal: false, isDefinition: true, scopeLine: 56, flags: DIFlagPrototyped, isOptimized: false, unit: !430, variables: !25)
!9241 = !DISubroutineType(types: !9242)
!9242 = !{!16, !16, !91}
!9243 = !DILocalVariable(name: "p", arg: 1, scope: !9240, file: !431, line: 55, type: !16)
!9244 = !DILocation(line: 55, column: 17, scope: !9240)
!9245 = !DILocalVariable(name: "n", arg: 2, scope: !9240, file: !431, line: 55, type: !91)
!9246 = !DILocation(line: 55, column: 27, scope: !9240)
!9247 = !DILocation(line: 57, column: 16, scope: !9240)
!9248 = !DILocation(line: 57, column: 19, scope: !9240)
!9249 = !DILocation(line: 57, column: 7, scope: !9240)
!9250 = !DILocation(line: 57, column: 5, scope: !9240)
!9251 = !DILocation(line: 58, column: 8, scope: !9252)
!9252 = distinct !DILexicalBlock(scope: !9240, file: !431, line: 58, column: 7)
!9253 = !DILocation(line: 58, column: 10, scope: !9252)
!9254 = !DILocation(line: 58, column: 13, scope: !9252)
!9255 = !DILocation(line: 58, column: 15, scope: !9252)
!9256 = !DILocation(line: 58, column: 7, scope: !9240)
!9257 = !DILocation(line: 59, column: 5, scope: !9252)
!9258 = !DILocation(line: 60, column: 10, scope: !9240)
!9259 = !DILocation(line: 60, column: 3, scope: !9240)
!9260 = !DILocalVariable(name: "p", arg: 1, scope: !435, file: !434, line: 195, type: !16)
!9261 = !DILocation(line: 195, column: 19, scope: !435)
!9262 = !DILocalVariable(name: "pn", arg: 2, scope: !435, file: !434, line: 195, type: !438)
!9263 = !DILocation(line: 195, column: 30, scope: !435)
!9264 = !DILocalVariable(name: "s", arg: 3, scope: !435, file: !434, line: 195, type: !91)
!9265 = !DILocation(line: 195, column: 41, scope: !435)
!9266 = !DILocalVariable(name: "n", scope: !435, file: !434, line: 197, type: !91)
!9267 = !DILocation(line: 197, column: 10, scope: !435)
!9268 = !DILocation(line: 197, column: 15, scope: !435)
!9269 = !DILocation(line: 197, column: 14, scope: !435)
!9270 = !DILocation(line: 199, column: 9, scope: !9271)
!9271 = distinct !DILexicalBlock(scope: !435, file: !434, line: 199, column: 7)
!9272 = !DILocation(line: 199, column: 7, scope: !435)
!9273 = !DILocation(line: 201, column: 13, scope: !9274)
!9274 = distinct !DILexicalBlock(scope: !9275, file: !434, line: 201, column: 11)
!9275 = distinct !DILexicalBlock(scope: !9271, file: !434, line: 200, column: 5)
!9276 = !DILocation(line: 201, column: 11, scope: !9275)
!9277 = !DILocation(line: 209, column: 25, scope: !9278)
!9278 = distinct !DILexicalBlock(scope: !9274, file: !434, line: 202, column: 2)
!9279 = !DILocation(line: 209, column: 23, scope: !9278)
!9280 = !DILocation(line: 209, column: 6, scope: !9278)
!9281 = !DILocation(line: 210, column: 10, scope: !9278)
!9282 = !DILocation(line: 210, column: 9, scope: !9278)
!9283 = !DILocation(line: 210, column: 6, scope: !9278)
!9284 = !DILocation(line: 211, column: 2, scope: !9278)
!9285 = !DILocation(line: 212, column: 5, scope: !9275)
!9286 = !DILocation(line: 219, column: 33, scope: !9287)
!9287 = distinct !DILexicalBlock(scope: !9288, file: !434, line: 219, column: 11)
!9288 = distinct !DILexicalBlock(scope: !9271, file: !434, line: 214, column: 5)
!9289 = !DILocation(line: 219, column: 31, scope: !9287)
!9290 = !DILocation(line: 219, column: 38, scope: !9287)
!9291 = !DILocation(line: 219, column: 35, scope: !9287)
!9292 = !DILocation(line: 219, column: 11, scope: !9288)
!9293 = !DILocation(line: 220, column: 2, scope: !9287)
!9294 = !DILocation(line: 221, column: 13, scope: !9288)
!9295 = !DILocation(line: 221, column: 15, scope: !9288)
!9296 = !DILocation(line: 221, column: 20, scope: !9288)
!9297 = !DILocation(line: 221, column: 9, scope: !9288)
!9298 = !DILocation(line: 224, column: 9, scope: !435)
!9299 = !DILocation(line: 224, column: 4, scope: !435)
!9300 = !DILocation(line: 224, column: 7, scope: !435)
!9301 = !DILocation(line: 225, column: 20, scope: !435)
!9302 = !DILocation(line: 225, column: 23, scope: !435)
!9303 = !DILocation(line: 225, column: 27, scope: !435)
!9304 = !DILocation(line: 225, column: 25, scope: !435)
!9305 = !DILocation(line: 225, column: 10, scope: !435)
!9306 = !DILocation(line: 225, column: 3, scope: !435)
!9307 = distinct !DISubprogram(name: "xcharalloc", scope: !434, file: !434, line: 233, type: !9308, isLocal: false, isDefinition: true, scopeLine: 234, flags: DIFlagPrototyped, isOptimized: false, unit: !430, variables: !25)
!9308 = !DISubroutineType(types: !9309)
!9309 = !{!15, !91}
!9310 = !DILocalVariable(name: "n", arg: 1, scope: !9307, file: !434, line: 233, type: !91)
!9311 = !DILocation(line: 233, column: 20, scope: !9307)
!9312 = !DILocation(line: 235, column: 10, scope: !9307)
!9313 = !DILocation(line: 235, column: 3, scope: !9307)
!9314 = distinct !DISubprogram(name: "x2realloc", scope: !431, file: !431, line: 70, type: !9315, isLocal: false, isDefinition: true, scopeLine: 71, flags: DIFlagPrototyped, isOptimized: false, unit: !430, variables: !25)
!9315 = !DISubroutineType(types: !9316)
!9316 = !{!16, !16, !438}
!9317 = !DILocalVariable(name: "p", arg: 1, scope: !9314, file: !431, line: 70, type: !16)
!9318 = !DILocation(line: 70, column: 18, scope: !9314)
!9319 = !DILocalVariable(name: "pn", arg: 2, scope: !9314, file: !431, line: 70, type: !438)
!9320 = !DILocation(line: 70, column: 29, scope: !9314)
!9321 = !DILocation(line: 72, column: 22, scope: !9314)
!9322 = !DILocation(line: 72, column: 25, scope: !9314)
!9323 = !DILocation(line: 72, column: 10, scope: !9314)
!9324 = !DILocation(line: 72, column: 3, scope: !9314)
!9325 = distinct !DISubprogram(name: "xzalloc", scope: !431, file: !431, line: 80, type: !9204, isLocal: false, isDefinition: true, scopeLine: 81, flags: DIFlagPrototyped, isOptimized: false, unit: !430, variables: !25)
!9326 = !DILocalVariable(name: "s", arg: 1, scope: !9325, file: !431, line: 80, type: !91)
!9327 = !DILocation(line: 80, column: 17, scope: !9325)
!9328 = !DILocation(line: 82, column: 27, scope: !9325)
!9329 = !DILocation(line: 82, column: 18, scope: !9325)
!9330 = !DILocation(line: 82, column: 34, scope: !9325)
!9331 = !DILocation(line: 82, column: 10, scope: !9325)
!9332 = !DILocation(line: 82, column: 3, scope: !9325)
!9333 = distinct !DISubprogram(name: "xcalloc", scope: !431, file: !431, line: 89, type: !9188, isLocal: false, isDefinition: true, scopeLine: 90, flags: DIFlagPrototyped, isOptimized: false, unit: !430, variables: !25)
!9334 = !DILocalVariable(name: "n", arg: 1, scope: !9333, file: !431, line: 89, type: !91)
!9335 = !DILocation(line: 89, column: 17, scope: !9333)
!9336 = !DILocalVariable(name: "s", arg: 2, scope: !9333, file: !431, line: 89, type: !91)
!9337 = !DILocation(line: 89, column: 27, scope: !9333)
!9338 = !DILocalVariable(name: "p", scope: !9333, file: !431, line: 91, type: !16)
!9339 = !DILocation(line: 91, column: 9, scope: !9333)
!9340 = !DILocation(line: 97, column: 26, scope: !9341)
!9341 = distinct !DILexicalBlock(scope: !9333, file: !431, line: 96, column: 7)
!9342 = !DILocation(line: 97, column: 29, scope: !9341)
!9343 = !DILocation(line: 97, column: 18, scope: !9341)
!9344 = !DILocation(line: 97, column: 16, scope: !9341)
!9345 = !DILocation(line: 96, column: 7, scope: !9333)
!9346 = !DILocation(line: 98, column: 5, scope: !9341)
!9347 = !DILocation(line: 99, column: 10, scope: !9333)
!9348 = !DILocation(line: 99, column: 3, scope: !9333)
!9349 = distinct !DISubprogram(name: "xmemdup", scope: !431, file: !431, line: 107, type: !9350, isLocal: false, isDefinition: true, scopeLine: 108, flags: DIFlagPrototyped, isOptimized: false, unit: !430, variables: !25)
!9350 = !DISubroutineType(types: !9351)
!9351 = !{!16, !404, !91}
!9352 = !DILocalVariable(name: "p", arg: 1, scope: !9349, file: !431, line: 107, type: !404)
!9353 = !DILocation(line: 107, column: 22, scope: !9349)
!9354 = !DILocalVariable(name: "s", arg: 2, scope: !9349, file: !431, line: 107, type: !91)
!9355 = !DILocation(line: 107, column: 32, scope: !9349)
!9356 = !DILocation(line: 109, column: 27, scope: !9349)
!9357 = !DILocation(line: 109, column: 18, scope: !9349)
!9358 = !DILocation(line: 109, column: 31, scope: !9349)
!9359 = !DILocation(line: 109, column: 34, scope: !9349)
!9360 = !DILocation(line: 109, column: 10, scope: !9349)
!9361 = !DILocation(line: 109, column: 3, scope: !9349)
!9362 = distinct !DISubprogram(name: "xstrdup", scope: !431, file: !431, line: 115, type: !792, isLocal: false, isDefinition: true, scopeLine: 116, flags: DIFlagPrototyped, isOptimized: false, unit: !430, variables: !25)
!9363 = !DILocalVariable(name: "string", arg: 1, scope: !9362, file: !431, line: 115, type: !12)
!9364 = !DILocation(line: 115, column: 22, scope: !9362)
!9365 = !DILocation(line: 117, column: 19, scope: !9362)
!9366 = !DILocation(line: 117, column: 35, scope: !9362)
!9367 = !DILocation(line: 117, column: 27, scope: !9362)
!9368 = !DILocation(line: 117, column: 43, scope: !9362)
!9369 = !DILocation(line: 117, column: 10, scope: !9362)
!9370 = !DILocation(line: 117, column: 3, scope: !9362)
!9371 = distinct !DISubprogram(name: "xstrtoul", scope: !9372, file: !9372, line: 75, type: !9373, isLocal: false, isDefinition: true, scopeLine: 77, flags: DIFlagPrototyped, isOptimized: false, unit: !442, variables: !25)
!9372 = !DIFile(filename: "../../lib/xstrtol.c", directory: "/home/ma481/Downloads/Chisel/chisel-bench/benchmark/chown-8.2/original/obj-llvm/lib")
!9373 = !DISubroutineType(types: !9374)
!9374 = !{!9375, !12, !24, !23, !9376, !12}
!9375 = !DIDerivedType(tag: DW_TAG_typedef, name: "strtol_error", file: !199, line: 39, baseType: !198)
!9376 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !34, size: 64)
!9377 = !DILocalVariable(name: "s", arg: 1, scope: !9371, file: !9372, line: 75, type: !12)
!9378 = !DILocation(line: 75, column: 24, scope: !9371)
!9379 = !DILocalVariable(name: "ptr", arg: 2, scope: !9371, file: !9372, line: 75, type: !24)
!9380 = !DILocation(line: 75, column: 34, scope: !9371)
!9381 = !DILocalVariable(name: "strtol_base", arg: 3, scope: !9371, file: !9372, line: 75, type: !23)
!9382 = !DILocation(line: 75, column: 43, scope: !9371)
!9383 = !DILocalVariable(name: "val", arg: 4, scope: !9371, file: !9372, line: 76, type: !9376)
!9384 = !DILocation(line: 76, column: 17, scope: !9371)
!9385 = !DILocalVariable(name: "valid_suffixes", arg: 5, scope: !9371, file: !9372, line: 76, type: !12)
!9386 = !DILocation(line: 76, column: 34, scope: !9371)
!9387 = !DILocalVariable(name: "t_ptr", scope: !9371, file: !9372, line: 78, type: !15)
!9388 = !DILocation(line: 78, column: 9, scope: !9371)
!9389 = !DILocalVariable(name: "p", scope: !9371, file: !9372, line: 79, type: !24)
!9390 = !DILocation(line: 79, column: 10, scope: !9371)
!9391 = !DILocalVariable(name: "tmp", scope: !9371, file: !9372, line: 80, type: !34)
!9392 = !DILocation(line: 80, column: 14, scope: !9371)
!9393 = !DILocalVariable(name: "err", scope: !9371, file: !9372, line: 81, type: !9375)
!9394 = !DILocation(line: 81, column: 16, scope: !9371)
!9395 = !DILocation(line: 83, column: 3, scope: !9396)
!9396 = distinct !DILexicalBlock(scope: !9397, file: !9372, line: 83, column: 3)
!9397 = distinct !DILexicalBlock(scope: !9371, file: !9372, line: 83, column: 3)
!9398 = !DILocation(line: 83, column: 3, scope: !9397)
!9399 = !DILocation(line: 85, column: 8, scope: !9371)
!9400 = !DILocation(line: 85, column: 14, scope: !9371)
!9401 = !DILocation(line: 85, column: 5, scope: !9371)
!9402 = !DILocalVariable(name: "q", scope: !9403, file: !9372, line: 89, type: !12)
!9403 = distinct !DILexicalBlock(scope: !9404, file: !9372, line: 88, column: 5)
!9404 = distinct !DILexicalBlock(scope: !9371, file: !9372, line: 87, column: 7)
!9405 = !DILocation(line: 89, column: 19, scope: !9403)
!9406 = !DILocation(line: 89, column: 23, scope: !9403)
!9407 = !DILocalVariable(name: "ch", scope: !9403, file: !9372, line: 90, type: !3968)
!9408 = !DILocation(line: 90, column: 21, scope: !9403)
!9409 = !DILocation(line: 90, column: 27, scope: !9403)
!9410 = !DILocation(line: 90, column: 26, scope: !9403)
!9411 = !DILocation(line: 91, column: 7, scope: !9403)
!9412 = !DILocation(line: 91, column: 14, scope: !9403)
!9413 = !DILocation(line: 92, column: 8, scope: !9403)
!9414 = !DILocation(line: 92, column: 7, scope: !9403)
!9415 = !DILocation(line: 92, column: 5, scope: !9403)
!9416 = distinct !{!9416, !9411, !9417}
!9417 = !DILocation(line: 92, column: 10, scope: !9403)
!9418 = !DILocation(line: 93, column: 11, scope: !9419)
!9419 = distinct !DILexicalBlock(scope: !9403, file: !9372, line: 93, column: 11)
!9420 = !DILocation(line: 93, column: 14, scope: !9419)
!9421 = !DILocation(line: 93, column: 11, scope: !9403)
!9422 = !DILocation(line: 94, column: 2, scope: !9419)
!9423 = !DILocation(line: 97, column: 3, scope: !9371)
!9424 = !DILocation(line: 97, column: 9, scope: !9371)
!9425 = !DILocation(line: 98, column: 19, scope: !9371)
!9426 = !DILocation(line: 98, column: 22, scope: !9371)
!9427 = !DILocation(line: 98, column: 25, scope: !9371)
!9428 = !DILocation(line: 98, column: 9, scope: !9371)
!9429 = !DILocation(line: 98, column: 7, scope: !9371)
!9430 = !DILocation(line: 100, column: 8, scope: !9431)
!9431 = distinct !DILexicalBlock(scope: !9371, file: !9372, line: 100, column: 7)
!9432 = !DILocation(line: 100, column: 7, scope: !9431)
!9433 = !DILocation(line: 100, column: 13, scope: !9431)
!9434 = !DILocation(line: 100, column: 10, scope: !9431)
!9435 = !DILocation(line: 100, column: 7, scope: !9371)
!9436 = !DILocation(line: 104, column: 11, scope: !9437)
!9437 = distinct !DILexicalBlock(scope: !9438, file: !9372, line: 104, column: 11)
!9438 = distinct !DILexicalBlock(scope: !9431, file: !9372, line: 101, column: 5)
!9439 = !DILocation(line: 104, column: 26, scope: !9437)
!9440 = !DILocation(line: 104, column: 31, scope: !9437)
!9441 = !DILocation(line: 104, column: 30, scope: !9437)
!9442 = !DILocation(line: 104, column: 29, scope: !9437)
!9443 = !DILocation(line: 104, column: 33, scope: !9437)
!9444 = !DILocation(line: 104, column: 44, scope: !9437)
!9445 = !DILocation(line: 104, column: 62, scope: !9437)
!9446 = !DILocation(line: 104, column: 61, scope: !9437)
!9447 = !DILocation(line: 104, column: 60, scope: !9437)
!9448 = !DILocation(line: 104, column: 36, scope: !9437)
!9449 = !DILocation(line: 104, column: 11, scope: !9438)
!9450 = !DILocation(line: 105, column: 6, scope: !9437)
!9451 = !DILocation(line: 105, column: 2, scope: !9437)
!9452 = !DILocation(line: 107, column: 2, scope: !9437)
!9453 = !DILocation(line: 108, column: 5, scope: !9438)
!9454 = !DILocation(line: 109, column: 12, scope: !9455)
!9455 = distinct !DILexicalBlock(scope: !9431, file: !9372, line: 109, column: 12)
!9456 = !DILocation(line: 109, column: 18, scope: !9455)
!9457 = !DILocation(line: 109, column: 12, scope: !9431)
!9458 = !DILocation(line: 111, column: 11, scope: !9459)
!9459 = distinct !DILexicalBlock(scope: !9460, file: !9372, line: 111, column: 11)
!9460 = distinct !DILexicalBlock(scope: !9455, file: !9372, line: 110, column: 5)
!9461 = !DILocation(line: 111, column: 17, scope: !9459)
!9462 = !DILocation(line: 111, column: 11, scope: !9460)
!9463 = !DILocation(line: 112, column: 2, scope: !9459)
!9464 = !DILocation(line: 113, column: 11, scope: !9460)
!9465 = !DILocation(line: 114, column: 5, scope: !9460)
!9466 = !DILocation(line: 119, column: 8, scope: !9467)
!9467 = distinct !DILexicalBlock(scope: !9371, file: !9372, line: 119, column: 7)
!9468 = !DILocation(line: 119, column: 7, scope: !9371)
!9469 = !DILocation(line: 121, column: 14, scope: !9470)
!9470 = distinct !DILexicalBlock(scope: !9467, file: !9372, line: 120, column: 5)
!9471 = !DILocation(line: 121, column: 8, scope: !9470)
!9472 = !DILocation(line: 121, column: 12, scope: !9470)
!9473 = !DILocation(line: 122, column: 14, scope: !9470)
!9474 = !DILocation(line: 122, column: 7, scope: !9470)
!9475 = !DILocation(line: 125, column: 9, scope: !9476)
!9476 = distinct !DILexicalBlock(scope: !9371, file: !9372, line: 125, column: 7)
!9477 = !DILocation(line: 125, column: 8, scope: !9476)
!9478 = !DILocation(line: 125, column: 7, scope: !9476)
!9479 = !DILocation(line: 125, column: 11, scope: !9476)
!9480 = !DILocation(line: 125, column: 7, scope: !9371)
!9481 = !DILocalVariable(name: "base", scope: !9482, file: !9372, line: 127, type: !23)
!9482 = distinct !DILexicalBlock(scope: !9476, file: !9372, line: 126, column: 5)
!9483 = !DILocation(line: 127, column: 11, scope: !9482)
!9484 = !DILocalVariable(name: "suffixes", scope: !9482, file: !9372, line: 128, type: !23)
!9485 = !DILocation(line: 128, column: 11, scope: !9482)
!9486 = !DILocalVariable(name: "overflow", scope: !9482, file: !9372, line: 129, type: !9375)
!9487 = !DILocation(line: 129, column: 20, scope: !9482)
!9488 = !DILocation(line: 131, column: 20, scope: !9489)
!9489 = distinct !DILexicalBlock(scope: !9482, file: !9372, line: 131, column: 11)
!9490 = !DILocation(line: 131, column: 38, scope: !9489)
!9491 = !DILocation(line: 131, column: 37, scope: !9489)
!9492 = !DILocation(line: 131, column: 36, scope: !9489)
!9493 = !DILocation(line: 131, column: 12, scope: !9489)
!9494 = !DILocation(line: 131, column: 11, scope: !9482)
!9495 = !DILocation(line: 133, column: 11, scope: !9496)
!9496 = distinct !DILexicalBlock(scope: !9489, file: !9372, line: 132, column: 2)
!9497 = !DILocation(line: 133, column: 5, scope: !9496)
!9498 = !DILocation(line: 133, column: 9, scope: !9496)
!9499 = !DILocation(line: 134, column: 11, scope: !9496)
!9500 = !DILocation(line: 134, column: 15, scope: !9496)
!9501 = !DILocation(line: 134, column: 4, scope: !9496)
!9502 = !DILocation(line: 137, column: 19, scope: !9503)
!9503 = distinct !DILexicalBlock(scope: !9482, file: !9372, line: 137, column: 11)
!9504 = !DILocation(line: 137, column: 11, scope: !9503)
!9505 = !DILocation(line: 137, column: 11, scope: !9482)
!9506 = !DILocation(line: 146, column: 12, scope: !9507)
!9507 = distinct !DILexicalBlock(scope: !9503, file: !9372, line: 138, column: 2)
!9508 = !DILocation(line: 146, column: 4, scope: !9507)
!9509 = !DILocation(line: 149, column: 12, scope: !9510)
!9510 = distinct !DILexicalBlock(scope: !9511, file: !9372, line: 149, column: 12)
!9511 = distinct !DILexicalBlock(scope: !9507, file: !9372, line: 147, column: 6)
!9512 = !DILocation(line: 149, column: 20, scope: !9510)
!9513 = !DILocation(line: 149, column: 12, scope: !9511)
!9514 = !DILocation(line: 150, column: 12, scope: !9510)
!9515 = !DILocation(line: 150, column: 3, scope: !9510)
!9516 = !DILocation(line: 151, column: 8, scope: !9511)
!9517 = !DILocation(line: 155, column: 13, scope: !9511)
!9518 = !DILocation(line: 156, column: 16, scope: !9511)
!9519 = !DILocation(line: 157, column: 8, scope: !9511)
!9520 = !DILocation(line: 159, column: 2, scope: !9507)
!9521 = !DILocation(line: 161, column: 17, scope: !9482)
!9522 = !DILocation(line: 161, column: 16, scope: !9482)
!9523 = !DILocation(line: 161, column: 15, scope: !9482)
!9524 = !DILocation(line: 161, column: 7, scope: !9482)
!9525 = !DILocation(line: 164, column: 15, scope: !9526)
!9526 = distinct !DILexicalBlock(scope: !9482, file: !9372, line: 162, column: 2)
!9527 = !DILocation(line: 164, column: 13, scope: !9526)
!9528 = !DILocation(line: 165, column: 4, scope: !9526)
!9529 = !DILocation(line: 168, column: 15, scope: !9526)
!9530 = !DILocation(line: 168, column: 13, scope: !9526)
!9531 = !DILocation(line: 169, column: 4, scope: !9526)
!9532 = !DILocation(line: 172, column: 13, scope: !9526)
!9533 = !DILocation(line: 173, column: 4, scope: !9526)
!9534 = !DILocation(line: 176, column: 41, scope: !9526)
!9535 = !DILocation(line: 176, column: 15, scope: !9526)
!9536 = !DILocation(line: 176, column: 13, scope: !9526)
!9537 = !DILocation(line: 177, column: 4, scope: !9526)
!9538 = !DILocation(line: 181, column: 41, scope: !9526)
!9539 = !DILocation(line: 181, column: 15, scope: !9526)
!9540 = !DILocation(line: 181, column: 13, scope: !9526)
!9541 = !DILocation(line: 182, column: 4, scope: !9526)
!9542 = !DILocation(line: 186, column: 41, scope: !9526)
!9543 = !DILocation(line: 186, column: 15, scope: !9526)
!9544 = !DILocation(line: 186, column: 13, scope: !9526)
!9545 = !DILocation(line: 187, column: 4, scope: !9526)
!9546 = !DILocation(line: 191, column: 41, scope: !9526)
!9547 = !DILocation(line: 191, column: 15, scope: !9526)
!9548 = !DILocation(line: 191, column: 13, scope: !9526)
!9549 = !DILocation(line: 192, column: 4, scope: !9526)
!9550 = !DILocation(line: 195, column: 41, scope: !9526)
!9551 = !DILocation(line: 195, column: 15, scope: !9526)
!9552 = !DILocation(line: 195, column: 13, scope: !9526)
!9553 = !DILocation(line: 196, column: 4, scope: !9526)
!9554 = !DILocation(line: 200, column: 41, scope: !9526)
!9555 = !DILocation(line: 200, column: 15, scope: !9526)
!9556 = !DILocation(line: 200, column: 13, scope: !9526)
!9557 = !DILocation(line: 201, column: 4, scope: !9526)
!9558 = !DILocation(line: 204, column: 15, scope: !9526)
!9559 = !DILocation(line: 204, column: 13, scope: !9526)
!9560 = !DILocation(line: 205, column: 4, scope: !9526)
!9561 = !DILocation(line: 208, column: 41, scope: !9526)
!9562 = !DILocation(line: 208, column: 15, scope: !9526)
!9563 = !DILocation(line: 208, column: 13, scope: !9526)
!9564 = !DILocation(line: 209, column: 4, scope: !9526)
!9565 = !DILocation(line: 212, column: 41, scope: !9526)
!9566 = !DILocation(line: 212, column: 15, scope: !9526)
!9567 = !DILocation(line: 212, column: 13, scope: !9526)
!9568 = !DILocation(line: 213, column: 4, scope: !9526)
!9569 = !DILocation(line: 216, column: 11, scope: !9526)
!9570 = !DILocation(line: 216, column: 5, scope: !9526)
!9571 = !DILocation(line: 216, column: 9, scope: !9526)
!9572 = !DILocation(line: 217, column: 11, scope: !9526)
!9573 = !DILocation(line: 217, column: 15, scope: !9526)
!9574 = !DILocation(line: 217, column: 4, scope: !9526)
!9575 = !DILocation(line: 220, column: 14, scope: !9482)
!9576 = !DILocation(line: 220, column: 11, scope: !9482)
!9577 = !DILocation(line: 221, column: 13, scope: !9482)
!9578 = !DILocation(line: 221, column: 8, scope: !9482)
!9579 = !DILocation(line: 221, column: 10, scope: !9482)
!9580 = !DILocation(line: 222, column: 13, scope: !9581)
!9581 = distinct !DILexicalBlock(scope: !9482, file: !9372, line: 222, column: 11)
!9582 = !DILocation(line: 222, column: 12, scope: !9581)
!9583 = !DILocation(line: 222, column: 11, scope: !9581)
!9584 = !DILocation(line: 222, column: 11, scope: !9482)
!9585 = !DILocation(line: 223, column: 6, scope: !9581)
!9586 = !DILocation(line: 223, column: 2, scope: !9581)
!9587 = !DILocation(line: 224, column: 5, scope: !9482)
!9588 = !DILocation(line: 226, column: 10, scope: !9371)
!9589 = !DILocation(line: 226, column: 4, scope: !9371)
!9590 = !DILocation(line: 226, column: 8, scope: !9371)
!9591 = !DILocation(line: 227, column: 10, scope: !9371)
!9592 = !DILocation(line: 227, column: 3, scope: !9371)
!9593 = !DILocation(line: 228, column: 1, scope: !9371)
!9594 = distinct !DISubprogram(name: "bkm_scale", scope: !9372, file: !9372, line: 47, type: !9595, isLocal: true, isDefinition: true, scopeLine: 48, flags: DIFlagPrototyped, isOptimized: false, unit: !442, variables: !25)
!9595 = !DISubroutineType(types: !9596)
!9596 = !{!9375, !9376, !23}
!9597 = !DILocalVariable(name: "x", arg: 1, scope: !9594, file: !9372, line: 47, type: !9376)
!9598 = !DILocation(line: 47, column: 24, scope: !9594)
!9599 = !DILocalVariable(name: "scale_factor", arg: 2, scope: !9594, file: !9372, line: 47, type: !23)
!9600 = !DILocation(line: 47, column: 31, scope: !9594)
!9601 = !DILocation(line: 54, column: 26, scope: !9602)
!9602 = distinct !DILexicalBlock(scope: !9594, file: !9372, line: 54, column: 7)
!9603 = !DILocation(line: 54, column: 24, scope: !9602)
!9604 = !DILocation(line: 54, column: 42, scope: !9602)
!9605 = !DILocation(line: 54, column: 41, scope: !9602)
!9606 = !DILocation(line: 54, column: 39, scope: !9602)
!9607 = !DILocation(line: 54, column: 7, scope: !9594)
!9608 = !DILocation(line: 56, column: 8, scope: !9609)
!9609 = distinct !DILexicalBlock(scope: !9602, file: !9372, line: 55, column: 5)
!9610 = !DILocation(line: 56, column: 10, scope: !9609)
!9611 = !DILocation(line: 57, column: 7, scope: !9609)
!9612 = !DILocation(line: 59, column: 9, scope: !9594)
!9613 = !DILocation(line: 59, column: 4, scope: !9594)
!9614 = !DILocation(line: 59, column: 6, scope: !9594)
!9615 = !DILocation(line: 60, column: 3, scope: !9594)
!9616 = !DILocation(line: 61, column: 1, scope: !9594)
!9617 = distinct !DISubprogram(name: "bkm_scale_by_power", scope: !9372, file: !9372, line: 64, type: !9618, isLocal: true, isDefinition: true, scopeLine: 65, flags: DIFlagPrototyped, isOptimized: false, unit: !442, variables: !25)
!9618 = !DISubroutineType(types: !9619)
!9619 = !{!9375, !9376, !23, !23}
!9620 = !DILocalVariable(name: "x", arg: 1, scope: !9617, file: !9372, line: 64, type: !9376)
!9621 = !DILocation(line: 64, column: 33, scope: !9617)
!9622 = !DILocalVariable(name: "base", arg: 2, scope: !9617, file: !9372, line: 64, type: !23)
!9623 = !DILocation(line: 64, column: 40, scope: !9617)
!9624 = !DILocalVariable(name: "power", arg: 3, scope: !9617, file: !9372, line: 64, type: !23)
!9625 = !DILocation(line: 64, column: 50, scope: !9617)
!9626 = !DILocalVariable(name: "err", scope: !9617, file: !9372, line: 66, type: !9375)
!9627 = !DILocation(line: 66, column: 16, scope: !9617)
!9628 = !DILocation(line: 67, column: 3, scope: !9617)
!9629 = !DILocation(line: 67, column: 15, scope: !9617)
!9630 = !DILocation(line: 68, column: 23, scope: !9617)
!9631 = !DILocation(line: 68, column: 26, scope: !9617)
!9632 = !DILocation(line: 68, column: 12, scope: !9617)
!9633 = !DILocation(line: 68, column: 9, scope: !9617)
!9634 = distinct !{!9634, !9628, !9635}
!9635 = !DILocation(line: 68, column: 30, scope: !9617)
!9636 = !DILocation(line: 69, column: 10, scope: !9617)
!9637 = !DILocation(line: 69, column: 3, scope: !9617)
!9638 = distinct !DISubprogram(name: "xfts_open", scope: !447, file: !447, line: 33, type: !9639, isLocal: false, isDefinition: true, scopeLine: 35, flags: DIFlagPrototyped, isOptimized: false, unit: !446, variables: !25)
!9639 = !DISubroutineType(types: !9640)
!9640 = !{!9641, !2176, !23, !9724}
!9641 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9642, size: 64)
!9642 = !DIDerivedType(tag: DW_TAG_typedef, name: "FTS", file: !257, line: 183, baseType: !9643)
!9643 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !257, line: 68, size: 1024, elements: !9644)
!9644 = !{!9645, !9690, !9691, !9693, !9694, !9695, !9696, !9697, !9698, !9699, !9706, !9707, !9708, !9715}
!9645 = !DIDerivedType(tag: DW_TAG_member, name: "fts_cur", scope: !9643, file: !257, line: 69, baseType: !9646, size: 64)
!9646 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9647, size: 64)
!9647 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ftsent", file: !257, line: 185, size: 2112, elements: !9648)
!9648 = !{!9649, !9650, !9651, !9652, !9653, !9654, !9655, !9656, !9657, !9658, !9659, !9660, !9661, !9662, !9663, !9664, !9665, !9666, !9689}
!9649 = !DIDerivedType(tag: DW_TAG_member, name: "fts_cycle", scope: !9647, file: !257, line: 186, baseType: !9646, size: 64)
!9650 = !DIDerivedType(tag: DW_TAG_member, name: "fts_parent", scope: !9647, file: !257, line: 187, baseType: !9646, size: 64, offset: 64)
!9651 = !DIDerivedType(tag: DW_TAG_member, name: "fts_link", scope: !9647, file: !257, line: 188, baseType: !9646, size: 64, offset: 128)
!9652 = !DIDerivedType(tag: DW_TAG_member, name: "fts_number", scope: !9647, file: !257, line: 189, baseType: !268, size: 64, offset: 192)
!9653 = !DIDerivedType(tag: DW_TAG_member, name: "fts_pointer", scope: !9647, file: !257, line: 190, baseType: !16, size: 64, offset: 256)
!9654 = !DIDerivedType(tag: DW_TAG_member, name: "fts_accpath", scope: !9647, file: !257, line: 191, baseType: !15, size: 64, offset: 320)
!9655 = !DIDerivedType(tag: DW_TAG_member, name: "fts_path", scope: !9647, file: !257, line: 192, baseType: !15, size: 64, offset: 384)
!9656 = !DIDerivedType(tag: DW_TAG_member, name: "fts_errno", scope: !9647, file: !257, line: 193, baseType: !23, size: 32, offset: 448)
!9657 = !DIDerivedType(tag: DW_TAG_member, name: "fts_symfd", scope: !9647, file: !257, line: 194, baseType: !23, size: 32, offset: 480)
!9658 = !DIDerivedType(tag: DW_TAG_member, name: "fts_pathlen", scope: !9647, file: !257, line: 195, baseType: !91, size: 64, offset: 512)
!9659 = !DIDerivedType(tag: DW_TAG_member, name: "fts_fts", scope: !9647, file: !257, line: 197, baseType: !9641, size: 64, offset: 576)
!9660 = !DIDerivedType(tag: DW_TAG_member, name: "fts_level", scope: !9647, file: !257, line: 201, baseType: !277, size: 64, offset: 640)
!9661 = !DIDerivedType(tag: DW_TAG_member, name: "fts_namelen", scope: !9647, file: !257, line: 203, baseType: !91, size: 64, offset: 704)
!9662 = !DIDerivedType(tag: DW_TAG_member, name: "fts_n_dirs_remaining", scope: !9647, file: !257, line: 204, baseType: !280, size: 64, offset: 768)
!9663 = !DIDerivedType(tag: DW_TAG_member, name: "fts_info", scope: !9647, file: !257, line: 220, baseType: !143, size: 16, offset: 832)
!9664 = !DIDerivedType(tag: DW_TAG_member, name: "fts_flags", scope: !9647, file: !257, line: 224, baseType: !143, size: 16, offset: 848)
!9665 = !DIDerivedType(tag: DW_TAG_member, name: "fts_instr", scope: !9647, file: !257, line: 230, baseType: !143, size: 16, offset: 864)
!9666 = !DIDerivedType(tag: DW_TAG_member, name: "fts_statp", scope: !9647, file: !257, line: 232, baseType: !9667, size: 1152, offset: 896)
!9667 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9668, size: 1152, elements: !321)
!9668 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !288, line: 46, size: 1152, elements: !9669)
!9669 = !{!9670, !9671, !9672, !9673, !9674, !9675, !9676, !9677, !9678, !9679, !9680, !9681, !9686, !9687, !9688}
!9670 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !9668, file: !288, line: 48, baseType: !291, size: 64)
!9671 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !9668, file: !288, line: 53, baseType: !293, size: 64, offset: 64)
!9672 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !9668, file: !288, line: 61, baseType: !281, size: 64, offset: 128)
!9673 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !9668, file: !288, line: 62, baseType: !296, size: 32, offset: 192)
!9674 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !9668, file: !288, line: 64, baseType: !191, size: 32, offset: 224)
!9675 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !9668, file: !288, line: 65, baseType: !195, size: 32, offset: 256)
!9676 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !9668, file: !288, line: 67, baseType: !23, size: 32, offset: 288)
!9677 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !9668, file: !288, line: 69, baseType: !291, size: 64, offset: 320)
!9678 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !9668, file: !288, line: 74, baseType: !302, size: 64, offset: 384)
!9679 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !9668, file: !288, line: 78, baseType: !304, size: 64, offset: 448)
!9680 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !9668, file: !288, line: 80, baseType: !306, size: 64, offset: 512)
!9681 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !9668, file: !288, line: 91, baseType: !9682, size: 128, offset: 576)
!9682 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !309, line: 8, size: 128, elements: !9683)
!9683 = !{!9684, !9685}
!9684 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !9682, file: !309, line: 10, baseType: !312, size: 64)
!9685 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !9682, file: !309, line: 11, baseType: !314, size: 64, offset: 64)
!9686 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !9668, file: !288, line: 92, baseType: !9682, size: 128, offset: 704)
!9687 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !9668, file: !288, line: 93, baseType: !9682, size: 128, offset: 832)
!9688 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !9668, file: !288, line: 106, baseType: !318, size: 192, offset: 960)
!9689 = !DIDerivedType(tag: DW_TAG_member, name: "fts_name", scope: !9647, file: !257, line: 233, baseType: !324, size: 8, offset: 2048)
!9690 = !DIDerivedType(tag: DW_TAG_member, name: "fts_child", scope: !9643, file: !257, line: 70, baseType: !9646, size: 64, offset: 64)
!9691 = !DIDerivedType(tag: DW_TAG_member, name: "fts_array", scope: !9643, file: !257, line: 71, baseType: !9692, size: 64, offset: 128)
!9692 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9646, size: 64)
!9693 = !DIDerivedType(tag: DW_TAG_member, name: "fts_dev", scope: !9643, file: !257, line: 72, baseType: !329, size: 64, offset: 192)
!9694 = !DIDerivedType(tag: DW_TAG_member, name: "fts_path", scope: !9643, file: !257, line: 73, baseType: !15, size: 64, offset: 256)
!9695 = !DIDerivedType(tag: DW_TAG_member, name: "fts_rfd", scope: !9643, file: !257, line: 74, baseType: !23, size: 32, offset: 320)
!9696 = !DIDerivedType(tag: DW_TAG_member, name: "fts_cwd_fd", scope: !9643, file: !257, line: 75, baseType: !23, size: 32, offset: 352)
!9697 = !DIDerivedType(tag: DW_TAG_member, name: "fts_pathlen", scope: !9643, file: !257, line: 77, baseType: !91, size: 64, offset: 384)
!9698 = !DIDerivedType(tag: DW_TAG_member, name: "fts_nitems", scope: !9643, file: !257, line: 78, baseType: !91, size: 64, offset: 448)
!9699 = !DIDerivedType(tag: DW_TAG_member, name: "fts_compar", scope: !9643, file: !257, line: 79, baseType: !9700, size: 64, offset: 512)
!9700 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9701, size: 64)
!9701 = !DISubroutineType(types: !9702)
!9702 = !{!23, !9703, !9703}
!9703 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9704, size: 64)
!9704 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9705, size: 64)
!9705 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9647)
!9706 = !DIDerivedType(tag: DW_TAG_member, name: "fts_options", scope: !9643, file: !257, line: 144, baseType: !23, size: 32, offset: 576)
!9707 = !DIDerivedType(tag: DW_TAG_member, name: "fts_leaf_optimization_works_ht", scope: !9643, file: !257, line: 154, baseType: !344, size: 64, offset: 640)
!9708 = !DIDerivedType(tag: DW_TAG_member, name: "fts_cycle", scope: !9643, file: !257, line: 176, baseType: !9709, size: 64, offset: 704)
!9709 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9643, file: !257, line: 156, size: 64, elements: !9710)
!9710 = !{!9711, !9712}
!9711 = !DIDerivedType(tag: DW_TAG_member, name: "ht", scope: !9709, file: !257, line: 169, baseType: !344, size: 64)
!9712 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !9709, file: !257, line: 175, baseType: !9713, size: 64)
!9713 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9714, size: 64)
!9714 = !DICompositeType(tag: DW_TAG_structure_type, name: "cycle_check_state", file: !257, line: 175, flags: DIFlagFwdDecl)
!9715 = !DIDerivedType(tag: DW_TAG_member, name: "fts_fd_ring", scope: !9643, file: !257, line: 182, baseType: !9716, size: 256, offset: 768)
!9716 = !DIDerivedType(tag: DW_TAG_typedef, name: "I_ring", file: !369, line: 39, baseType: !9717)
!9717 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "I_ring", file: !369, line: 31, size: 256, elements: !9718)
!9718 = !{!9719, !9720, !9721, !9722, !9723}
!9719 = !DIDerivedType(tag: DW_TAG_member, name: "ir_data", scope: !9717, file: !369, line: 33, baseType: !373, size: 128)
!9720 = !DIDerivedType(tag: DW_TAG_member, name: "ir_default_val", scope: !9717, file: !369, line: 34, baseType: !23, size: 32, offset: 128)
!9721 = !DIDerivedType(tag: DW_TAG_member, name: "ir_front", scope: !9717, file: !369, line: 35, baseType: !159, size: 32, offset: 160)
!9722 = !DIDerivedType(tag: DW_TAG_member, name: "ir_back", scope: !9717, file: !369, line: 36, baseType: !159, size: 32, offset: 192)
!9723 = !DIDerivedType(tag: DW_TAG_member, name: "ir_empty", scope: !9717, file: !369, line: 37, baseType: !79, size: 8, offset: 224)
!9724 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9725, size: 64)
!9725 = !DISubroutineType(types: !9726)
!9726 = !{!23, !9727, !9727}
!9727 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9728, size: 64)
!9728 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9729, size: 64)
!9729 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9730)
!9730 = !DIDerivedType(tag: DW_TAG_typedef, name: "FTSENT", file: !257, line: 234, baseType: !9647)
!9731 = !DILocalVariable(name: "argv", arg: 1, scope: !9638, file: !447, line: 33, type: !2176)
!9732 = !DILocation(line: 33, column: 26, scope: !9638)
!9733 = !DILocalVariable(name: "options", arg: 2, scope: !9638, file: !447, line: 33, type: !23)
!9734 = !DILocation(line: 33, column: 36, scope: !9638)
!9735 = !DILocalVariable(name: "compar", arg: 3, scope: !9638, file: !447, line: 34, type: !9724)
!9736 = !DILocation(line: 34, column: 18, scope: !9638)
!9737 = !DILocalVariable(name: "fts", scope: !9638, file: !447, line: 36, type: !9641)
!9738 = !DILocation(line: 36, column: 8, scope: !9638)
!9739 = !DILocation(line: 36, column: 24, scope: !9638)
!9740 = !DILocation(line: 36, column: 30, scope: !9638)
!9741 = !DILocation(line: 36, column: 38, scope: !9638)
!9742 = !DILocation(line: 36, column: 51, scope: !9638)
!9743 = !DILocation(line: 36, column: 14, scope: !9638)
!9744 = !DILocation(line: 37, column: 7, scope: !9745)
!9745 = distinct !DILexicalBlock(scope: !9638, file: !447, line: 37, column: 7)
!9746 = !DILocation(line: 37, column: 11, scope: !9745)
!9747 = !DILocation(line: 37, column: 7, scope: !9638)
!9748 = !DILocation(line: 41, column: 7, scope: !9749)
!9749 = distinct !DILexicalBlock(scope: !9750, file: !447, line: 41, column: 7)
!9750 = distinct !DILexicalBlock(scope: !9751, file: !447, line: 41, column: 7)
!9751 = distinct !DILexicalBlock(scope: !9745, file: !447, line: 38, column: 5)
!9752 = !DILocation(line: 41, column: 7, scope: !9750)
!9753 = !DILocation(line: 42, column: 7, scope: !9751)
!9754 = !DILocation(line: 45, column: 10, scope: !9638)
!9755 = !DILocation(line: 45, column: 3, scope: !9638)
!9756 = distinct !DISubprogram(name: "cycle_warning_required", scope: !447, file: !447, line: 56, type: !9757, isLocal: false, isDefinition: true, scopeLine: 57, flags: DIFlagPrototyped, isOptimized: false, unit: !446, variables: !25)
!9757 = !DISubroutineType(types: !9758)
!9758 = !{!79, !9759, !9728}
!9759 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9760, size: 64)
!9760 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9642)
!9761 = !DILocalVariable(name: "fts", arg: 1, scope: !9756, file: !447, line: 56, type: !9759)
!9762 = !DILocation(line: 56, column: 36, scope: !9756)
!9763 = !DILocalVariable(name: "ent", arg: 2, scope: !9756, file: !447, line: 56, type: !9728)
!9764 = !DILocation(line: 56, column: 55, scope: !9756)
!9765 = !DILocation(line: 62, column: 12, scope: !9756)
!9766 = !DILocation(line: 62, column: 38, scope: !9756)
!9767 = !DILocation(line: 62, column: 42, scope: !9756)
!9768 = !DILocation(line: 63, column: 11, scope: !9756)
!9769 = !DILocation(line: 63, column: 15, scope: !9756)
!9770 = !DILocation(line: 63, column: 41, scope: !9756)
!9771 = !DILocation(line: 63, column: 44, scope: !9756)
!9772 = !DILocation(line: 64, column: 15, scope: !9756)
!9773 = !DILocation(line: 64, column: 18, scope: !9756)
!9774 = !DILocation(line: 64, column: 23, scope: !9756)
!9775 = !DILocation(line: 64, column: 33, scope: !9756)
!9776 = !DILocation(line: 62, column: 3, scope: !9756)
!9777 = distinct !DISubprogram(name: "xalloc_die", scope: !450, file: !450, line: 32, type: !502, isLocal: false, isDefinition: true, scopeLine: 33, flags: DIFlagPrototyped | DIFlagNoReturn, isOptimized: false, unit: !449, variables: !25)
!9778 = !DILocation(line: 34, column: 10, scope: !9777)
!9779 = !DILocation(line: 34, column: 3, scope: !9777)
!9780 = !DILocation(line: 40, column: 3, scope: !9777)
!9781 = !DILocation(line: 41, column: 1, scope: !9777)
!9782 = distinct !DISubprogram(name: "set_cloexec_flag", scope: !452, file: !452, line: 48, type: !9783, isLocal: false, isDefinition: true, scopeLine: 49, flags: DIFlagPrototyped, isOptimized: false, unit: !451, variables: !25)
!9783 = !DISubroutineType(types: !9784)
!9784 = !{!23, !23, !79}
!9785 = !DILocalVariable(name: "desc", arg: 1, scope: !9782, file: !452, line: 48, type: !23)
!9786 = !DILocation(line: 48, column: 23, scope: !9782)
!9787 = !DILocalVariable(name: "value", arg: 2, scope: !9782, file: !452, line: 48, type: !79)
!9788 = !DILocation(line: 48, column: 34, scope: !9782)
!9789 = !DILocalVariable(name: "flags", scope: !9782, file: !452, line: 52, type: !23)
!9790 = !DILocation(line: 52, column: 7, scope: !9782)
!9791 = !DILocation(line: 52, column: 22, scope: !9782)
!9792 = !DILocation(line: 52, column: 15, scope: !9782)
!9793 = !DILocation(line: 54, column: 12, scope: !9794)
!9794 = distinct !DILexicalBlock(scope: !9782, file: !452, line: 54, column: 7)
!9795 = !DILocation(line: 54, column: 9, scope: !9794)
!9796 = !DILocation(line: 54, column: 7, scope: !9782)
!9797 = !DILocalVariable(name: "newflags", scope: !9798, file: !452, line: 56, type: !23)
!9798 = distinct !DILexicalBlock(scope: !9794, file: !452, line: 55, column: 5)
!9799 = !DILocation(line: 56, column: 11, scope: !9798)
!9800 = !DILocation(line: 56, column: 23, scope: !9798)
!9801 = !DILocation(line: 56, column: 31, scope: !9798)
!9802 = !DILocation(line: 56, column: 37, scope: !9798)
!9803 = !DILocation(line: 56, column: 52, scope: !9798)
!9804 = !DILocation(line: 56, column: 58, scope: !9798)
!9805 = !DILocation(line: 58, column: 11, scope: !9806)
!9806 = distinct !DILexicalBlock(scope: !9798, file: !452, line: 58, column: 11)
!9807 = !DILocation(line: 58, column: 20, scope: !9806)
!9808 = !DILocation(line: 58, column: 17, scope: !9806)
!9809 = !DILocation(line: 59, column: 11, scope: !9806)
!9810 = !DILocation(line: 59, column: 21, scope: !9806)
!9811 = !DILocation(line: 59, column: 36, scope: !9806)
!9812 = !DILocation(line: 59, column: 14, scope: !9806)
!9813 = !DILocation(line: 59, column: 46, scope: !9806)
!9814 = !DILocation(line: 58, column: 11, scope: !9798)
!9815 = !DILocation(line: 60, column: 9, scope: !9806)
!9816 = !DILocation(line: 61, column: 5, scope: !9798)
!9817 = !DILocation(line: 63, column: 3, scope: !9782)
!9818 = !DILocation(line: 81, column: 1, scope: !9782)
!9819 = distinct !DISubprogram(name: "dup_cloexec", scope: !452, file: !452, line: 89, type: !9820, isLocal: false, isDefinition: true, scopeLine: 90, flags: DIFlagPrototyped, isOptimized: false, unit: !451, variables: !25)
!9820 = !DISubroutineType(types: !9821)
!9821 = !{!23, !23}
!9822 = !DILocalVariable(name: "fd", arg: 1, scope: !9819, file: !452, line: 89, type: !23)
!9823 = !DILocation(line: 89, column: 18, scope: !9819)
!9824 = !DILocalVariable(name: "nfd", scope: !9819, file: !452, line: 91, type: !23)
!9825 = !DILocation(line: 91, column: 7, scope: !9819)
!9826 = !DILocation(line: 144, column: 16, scope: !9819)
!9827 = !DILocation(line: 144, column: 9, scope: !9819)
!9828 = !DILocation(line: 144, column: 7, scope: !9819)
!9829 = !DILocation(line: 161, column: 10, scope: !9819)
!9830 = !DILocation(line: 161, column: 3, scope: !9819)
!9831 = distinct !DISubprogram(name: "close_stream", scope: !454, file: !454, line: 57, type: !9832, isLocal: false, isDefinition: true, scopeLine: 58, flags: DIFlagPrototyped, isOptimized: false, unit: !453, variables: !25)
!9832 = !DISubroutineType(types: !9833)
!9833 = !{!23, !9834}
!9834 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9835, size: 64)
!9835 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !1770, line: 7, baseType: !9836)
!9836 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !1772, line: 245, size: 1728, elements: !9837)
!9837 = !{!9838, !9839, !9840, !9841, !9842, !9843, !9844, !9845, !9846, !9847, !9848, !9849, !9850, !9858, !9859, !9860, !9861, !9862, !9863, !9864, !9865, !9866, !9867, !9868, !9869, !9870, !9871, !9872, !9873}
!9838 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !9836, file: !1772, line: 246, baseType: !23, size: 32)
!9839 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !9836, file: !1772, line: 251, baseType: !15, size: 64, offset: 64)
!9840 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !9836, file: !1772, line: 252, baseType: !15, size: 64, offset: 128)
!9841 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !9836, file: !1772, line: 253, baseType: !15, size: 64, offset: 192)
!9842 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !9836, file: !1772, line: 254, baseType: !15, size: 64, offset: 256)
!9843 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !9836, file: !1772, line: 255, baseType: !15, size: 64, offset: 320)
!9844 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !9836, file: !1772, line: 256, baseType: !15, size: 64, offset: 384)
!9845 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !9836, file: !1772, line: 257, baseType: !15, size: 64, offset: 448)
!9846 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !9836, file: !1772, line: 258, baseType: !15, size: 64, offset: 512)
!9847 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !9836, file: !1772, line: 260, baseType: !15, size: 64, offset: 576)
!9848 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !9836, file: !1772, line: 261, baseType: !15, size: 64, offset: 640)
!9849 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !9836, file: !1772, line: 262, baseType: !15, size: 64, offset: 704)
!9850 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !9836, file: !1772, line: 264, baseType: !9851, size: 64, offset: 768)
!9851 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9852, size: 64)
!9852 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !1772, line: 160, size: 192, elements: !9853)
!9853 = !{!9854, !9855, !9857}
!9854 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !9852, file: !1772, line: 161, baseType: !9851, size: 64)
!9855 = !DIDerivedType(tag: DW_TAG_member, name: "_sbuf", scope: !9852, file: !1772, line: 162, baseType: !9856, size: 64, offset: 64)
!9856 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9836, size: 64)
!9857 = !DIDerivedType(tag: DW_TAG_member, name: "_pos", scope: !9852, file: !1772, line: 166, baseType: !23, size: 32, offset: 128)
!9858 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !9836, file: !1772, line: 266, baseType: !9856, size: 64, offset: 832)
!9859 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !9836, file: !1772, line: 268, baseType: !23, size: 32, offset: 896)
!9860 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !9836, file: !1772, line: 272, baseType: !23, size: 32, offset: 928)
!9861 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !9836, file: !1772, line: 274, baseType: !302, size: 64, offset: 960)
!9862 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !9836, file: !1772, line: 278, baseType: !143, size: 16, offset: 1024)
!9863 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !9836, file: !1772, line: 279, baseType: !1800, size: 8, offset: 1040)
!9864 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !9836, file: !1772, line: 280, baseType: !324, size: 8, offset: 1048)
!9865 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !9836, file: !1772, line: 284, baseType: !1803, size: 64, offset: 1088)
!9866 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !9836, file: !1772, line: 293, baseType: !1806, size: 64, offset: 1152)
!9867 = !DIDerivedType(tag: DW_TAG_member, name: "__pad1", scope: !9836, file: !1772, line: 301, baseType: !16, size: 64, offset: 1216)
!9868 = !DIDerivedType(tag: DW_TAG_member, name: "__pad2", scope: !9836, file: !1772, line: 302, baseType: !16, size: 64, offset: 1280)
!9869 = !DIDerivedType(tag: DW_TAG_member, name: "__pad3", scope: !9836, file: !1772, line: 303, baseType: !16, size: 64, offset: 1344)
!9870 = !DIDerivedType(tag: DW_TAG_member, name: "__pad4", scope: !9836, file: !1772, line: 304, baseType: !16, size: 64, offset: 1408)
!9871 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !9836, file: !1772, line: 306, baseType: !91, size: 64, offset: 1472)
!9872 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !9836, file: !1772, line: 307, baseType: !23, size: 32, offset: 1536)
!9873 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !9836, file: !1772, line: 309, baseType: !1814, size: 160, offset: 1568)
!9874 = !DILocalVariable(name: "stream", arg: 1, scope: !9831, file: !454, line: 57, type: !9834)
!9875 = !DILocation(line: 57, column: 21, scope: !9831)
!9876 = !DILocalVariable(name: "some_pending", scope: !9831, file: !454, line: 59, type: !79)
!9877 = !DILocation(line: 59, column: 8, scope: !9831)
!9878 = !DILocation(line: 59, column: 36, scope: !9831)
!9879 = !DILocation(line: 59, column: 24, scope: !9831)
!9880 = !DILocation(line: 59, column: 44, scope: !9831)
!9881 = !DILocalVariable(name: "prev_fail", scope: !9831, file: !454, line: 60, type: !79)
!9882 = !DILocation(line: 60, column: 8, scope: !9831)
!9883 = !DILocation(line: 60, column: 21, scope: !9831)
!9884 = !DILocation(line: 60, column: 37, scope: !9831)
!9885 = !DILocalVariable(name: "fclose_fail", scope: !9831, file: !454, line: 61, type: !79)
!9886 = !DILocation(line: 61, column: 8, scope: !9831)
!9887 = !DILocation(line: 61, column: 31, scope: !9831)
!9888 = !DILocation(line: 61, column: 23, scope: !9831)
!9889 = !DILocation(line: 61, column: 39, scope: !9831)
!9890 = !DILocation(line: 71, column: 7, scope: !9891)
!9891 = distinct !DILexicalBlock(scope: !9831, file: !454, line: 71, column: 7)
!9892 = !DILocation(line: 71, column: 17, scope: !9891)
!9893 = !DILocation(line: 71, column: 21, scope: !9891)
!9894 = !DILocation(line: 71, column: 33, scope: !9891)
!9895 = !DILocation(line: 71, column: 37, scope: !9891)
!9896 = !DILocation(line: 71, column: 50, scope: !9891)
!9897 = !DILocation(line: 71, column: 53, scope: !9891)
!9898 = !DILocation(line: 71, column: 59, scope: !9891)
!9899 = !DILocation(line: 71, column: 7, scope: !9831)
!9900 = !DILocation(line: 73, column: 13, scope: !9901)
!9901 = distinct !DILexicalBlock(scope: !9902, file: !454, line: 73, column: 11)
!9902 = distinct !DILexicalBlock(scope: !9891, file: !454, line: 72, column: 5)
!9903 = !DILocation(line: 73, column: 11, scope: !9902)
!9904 = !DILocation(line: 74, column: 2, scope: !9901)
!9905 = !DILocation(line: 74, column: 8, scope: !9901)
!9906 = !DILocation(line: 75, column: 7, scope: !9902)
!9907 = !DILocation(line: 78, column: 3, scope: !9831)
!9908 = !DILocation(line: 79, column: 1, scope: !9831)
!9909 = distinct !DISubprogram(name: "cycle_check_init", scope: !456, file: !456, line: 43, type: !9910, isLocal: false, isDefinition: true, scopeLine: 44, flags: DIFlagPrototyped, isOptimized: false, unit: !455, variables: !25)
!9910 = !DISubroutineType(types: !9911)
!9911 = !{null, !9912}
!9912 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9913, size: 64)
!9913 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cycle_check_state", file: !353, line: 28, size: 256, elements: !9914)
!9914 = !{!9915, !9920, !9921}
!9915 = !DIDerivedType(tag: DW_TAG_member, name: "dev_ino", scope: !9913, file: !353, line: 30, baseType: !9916, size: 128)
!9916 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_ino", file: !357, line: 7, size: 128, elements: !9917)
!9917 = !{!9918, !9919}
!9918 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !9916, file: !357, line: 9, baseType: !360, size: 64)
!9919 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !9916, file: !357, line: 10, baseType: !329, size: 64, offset: 64)
!9920 = !DIDerivedType(tag: DW_TAG_member, name: "chdir_counter", scope: !9913, file: !353, line: 31, baseType: !363, size: 64, offset: 128)
!9921 = !DIDerivedType(tag: DW_TAG_member, name: "magic", scope: !9913, file: !353, line: 32, baseType: !23, size: 32, offset: 192)
!9922 = !DILocalVariable(name: "state", arg: 1, scope: !9909, file: !456, line: 43, type: !9912)
!9923 = !DILocation(line: 43, column: 45, scope: !9909)
!9924 = !DILocation(line: 45, column: 3, scope: !9909)
!9925 = !DILocation(line: 45, column: 10, scope: !9909)
!9926 = !DILocation(line: 45, column: 24, scope: !9909)
!9927 = !DILocation(line: 46, column: 3, scope: !9909)
!9928 = !DILocation(line: 46, column: 10, scope: !9909)
!9929 = !DILocation(line: 46, column: 16, scope: !9909)
!9930 = !DILocation(line: 47, column: 1, scope: !9909)
!9931 = distinct !DISubprogram(name: "cycle_check", scope: !456, file: !456, line: 58, type: !9932, isLocal: false, isDefinition: true, scopeLine: 59, flags: DIFlagPrototyped, isOptimized: false, unit: !455, variables: !25)
!9932 = !DISubroutineType(types: !9933)
!9933 = !{!79, !9912, !9934}
!9934 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9935, size: 64)
!9935 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9936)
!9936 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !288, line: 46, size: 1152, elements: !9937)
!9937 = !{!9938, !9939, !9940, !9941, !9942, !9943, !9944, !9945, !9946, !9947, !9948, !9949, !9954, !9955, !9956}
!9938 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !9936, file: !288, line: 48, baseType: !291, size: 64)
!9939 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !9936, file: !288, line: 53, baseType: !293, size: 64, offset: 64)
!9940 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !9936, file: !288, line: 61, baseType: !281, size: 64, offset: 128)
!9941 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !9936, file: !288, line: 62, baseType: !296, size: 32, offset: 192)
!9942 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !9936, file: !288, line: 64, baseType: !191, size: 32, offset: 224)
!9943 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !9936, file: !288, line: 65, baseType: !195, size: 32, offset: 256)
!9944 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !9936, file: !288, line: 67, baseType: !23, size: 32, offset: 288)
!9945 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !9936, file: !288, line: 69, baseType: !291, size: 64, offset: 320)
!9946 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !9936, file: !288, line: 74, baseType: !302, size: 64, offset: 384)
!9947 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !9936, file: !288, line: 78, baseType: !304, size: 64, offset: 448)
!9948 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !9936, file: !288, line: 80, baseType: !306, size: 64, offset: 512)
!9949 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !9936, file: !288, line: 91, baseType: !9950, size: 128, offset: 576)
!9950 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !309, line: 8, size: 128, elements: !9951)
!9951 = !{!9952, !9953}
!9952 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !9950, file: !309, line: 10, baseType: !312, size: 64)
!9953 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !9950, file: !309, line: 11, baseType: !314, size: 64, offset: 64)
!9954 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !9936, file: !288, line: 92, baseType: !9950, size: 128, offset: 704)
!9955 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !9936, file: !288, line: 93, baseType: !9950, size: 128, offset: 832)
!9956 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !9936, file: !288, line: 106, baseType: !318, size: 192, offset: 960)
!9957 = !DILocalVariable(name: "state", arg: 1, scope: !9931, file: !456, line: 58, type: !9912)
!9958 = !DILocation(line: 58, column: 40, scope: !9931)
!9959 = !DILocalVariable(name: "sb", arg: 2, scope: !9931, file: !456, line: 58, type: !9934)
!9960 = !DILocation(line: 58, column: 66, scope: !9931)
!9961 = !DILocation(line: 60, column: 3, scope: !9962)
!9962 = distinct !DILexicalBlock(scope: !9963, file: !456, line: 60, column: 3)
!9963 = distinct !DILexicalBlock(scope: !9931, file: !456, line: 60, column: 3)
!9964 = !DILocation(line: 60, column: 3, scope: !9963)
!9965 = !DILocation(line: 65, column: 7, scope: !9966)
!9966 = distinct !DILexicalBlock(scope: !9931, file: !456, line: 65, column: 7)
!9967 = !DILocation(line: 65, column: 14, scope: !9966)
!9968 = !DILocation(line: 65, column: 28, scope: !9966)
!9969 = !DILocation(line: 65, column: 31, scope: !9966)
!9970 = !DILocation(line: 65, column: 7, scope: !9931)
!9971 = !DILocation(line: 66, column: 5, scope: !9966)
!9972 = !DILocation(line: 70, column: 35, scope: !9973)
!9973 = distinct !DILexicalBlock(scope: !9931, file: !456, line: 70, column: 7)
!9974 = !DILocation(line: 70, column: 42, scope: !9973)
!9975 = !DILocation(line: 70, column: 32, scope: !9973)
!9976 = !DILocation(line: 70, column: 7, scope: !9973)
!9977 = !DILocation(line: 70, column: 7, scope: !9931)
!9978 = !DILocation(line: 77, column: 11, scope: !9979)
!9979 = distinct !DILexicalBlock(scope: !9980, file: !456, line: 77, column: 11)
!9980 = distinct !DILexicalBlock(scope: !9973, file: !456, line: 71, column: 5)
!9981 = !DILocation(line: 77, column: 18, scope: !9979)
!9982 = !DILocation(line: 77, column: 32, scope: !9979)
!9983 = !DILocation(line: 77, column: 11, scope: !9980)
!9984 = !DILocation(line: 78, column: 2, scope: !9979)
!9985 = !DILocation(line: 80, column: 31, scope: !9980)
!9986 = !DILocation(line: 80, column: 35, scope: !9980)
!9987 = !DILocation(line: 80, column: 7, scope: !9980)
!9988 = !DILocation(line: 80, column: 14, scope: !9980)
!9989 = !DILocation(line: 80, column: 22, scope: !9980)
!9990 = !DILocation(line: 80, column: 29, scope: !9980)
!9991 = !DILocation(line: 81, column: 31, scope: !9980)
!9992 = !DILocation(line: 81, column: 35, scope: !9980)
!9993 = !DILocation(line: 81, column: 7, scope: !9980)
!9994 = !DILocation(line: 81, column: 14, scope: !9980)
!9995 = !DILocation(line: 81, column: 22, scope: !9980)
!9996 = !DILocation(line: 81, column: 29, scope: !9980)
!9997 = !DILocation(line: 82, column: 5, scope: !9980)
!9998 = !DILocation(line: 84, column: 3, scope: !9931)
!9999 = !DILocation(line: 85, column: 1, scope: !9931)
!10000 = distinct !DISubprogram(name: "is_zero_or_power_of_two", scope: !456, file: !456, line: 37, type: !10001, isLocal: true, isDefinition: true, scopeLine: 38, flags: DIFlagPrototyped, isOptimized: false, unit: !455, variables: !25)
!10001 = !DISubroutineType(types: !10002)
!10002 = !{!79, !363}
!10003 = !DILocalVariable(name: "i", arg: 1, scope: !10000, file: !456, line: 37, type: !363)
!10004 = !DILocation(line: 37, column: 36, scope: !10000)
!10005 = !DILocation(line: 39, column: 11, scope: !10000)
!10006 = !DILocation(line: 39, column: 16, scope: !10000)
!10007 = !DILocation(line: 39, column: 18, scope: !10000)
!10008 = !DILocation(line: 39, column: 13, scope: !10000)
!10009 = !DILocation(line: 39, column: 24, scope: !10000)
!10010 = !DILocation(line: 39, column: 3, scope: !10000)
!10011 = distinct !DISubprogram(name: "dup_safer", scope: !458, file: !458, line: 32, type: !9820, isLocal: false, isDefinition: true, scopeLine: 33, flags: DIFlagPrototyped, isOptimized: false, unit: !457, variables: !25)
!10012 = !DILocalVariable(name: "fd", arg: 1, scope: !10011, file: !458, line: 32, type: !23)
!10013 = !DILocation(line: 32, column: 16, scope: !10011)
!10014 = !DILocation(line: 35, column: 17, scope: !10011)
!10015 = !DILocation(line: 35, column: 10, scope: !10011)
!10016 = !DILocation(line: 35, column: 3, scope: !10011)
!10017 = distinct !DISubprogram(name: "dup_safer_flag", scope: !458, file: !458, line: 56, type: !10018, isLocal: false, isDefinition: true, scopeLine: 57, flags: DIFlagPrototyped, isOptimized: false, unit: !457, variables: !25)
!10018 = !DISubroutineType(types: !10019)
!10019 = !{!23, !23, !23}
!10020 = !DILocalVariable(name: "fd", arg: 1, scope: !10017, file: !458, line: 56, type: !23)
!10021 = !DILocation(line: 56, column: 21, scope: !10017)
!10022 = !DILocalVariable(name: "flag", arg: 2, scope: !10017, file: !458, line: 56, type: !23)
!10023 = !DILocation(line: 56, column: 29, scope: !10017)
!10024 = !DILocation(line: 58, column: 7, scope: !10025)
!10025 = distinct !DILexicalBlock(scope: !10017, file: !458, line: 58, column: 7)
!10026 = !DILocation(line: 58, column: 12, scope: !10025)
!10027 = !DILocation(line: 58, column: 7, scope: !10017)
!10028 = !DILocation(line: 61, column: 21, scope: !10029)
!10029 = distinct !DILexicalBlock(scope: !10025, file: !458, line: 59, column: 5)
!10030 = !DILocation(line: 61, column: 14, scope: !10029)
!10031 = !DILocation(line: 61, column: 7, scope: !10029)
!10032 = !DILocation(line: 69, column: 21, scope: !10017)
!10033 = !DILocation(line: 69, column: 10, scope: !10017)
!10034 = !DILocation(line: 69, column: 3, scope: !10017)
!10035 = !DILocation(line: 70, column: 1, scope: !10017)
!10036 = distinct !DISubprogram(name: "fd_safer", scope: !460, file: !460, line: 38, type: !9820, isLocal: false, isDefinition: true, scopeLine: 39, flags: DIFlagPrototyped, isOptimized: false, unit: !459, variables: !25)
!10037 = !DILocalVariable(name: "fd", arg: 1, scope: !10036, file: !460, line: 38, type: !23)
!10038 = !DILocation(line: 38, column: 15, scope: !10036)
!10039 = !DILocation(line: 40, column: 23, scope: !10040)
!10040 = distinct !DILexicalBlock(scope: !10036, file: !460, line: 40, column: 7)
!10041 = !DILocation(line: 40, column: 20, scope: !10040)
!10042 = !DILocation(line: 40, column: 26, scope: !10040)
!10043 = !DILocation(line: 40, column: 29, scope: !10040)
!10044 = !DILocation(line: 40, column: 32, scope: !10040)
!10045 = !DILocation(line: 40, column: 7, scope: !10036)
!10046 = !DILocalVariable(name: "f", scope: !10047, file: !460, line: 42, type: !23)
!10047 = distinct !DILexicalBlock(scope: !10040, file: !460, line: 41, column: 5)
!10048 = !DILocation(line: 42, column: 11, scope: !10047)
!10049 = !DILocation(line: 42, column: 26, scope: !10047)
!10050 = !DILocation(line: 42, column: 15, scope: !10047)
!10051 = !DILocalVariable(name: "e", scope: !10047, file: !460, line: 43, type: !23)
!10052 = !DILocation(line: 43, column: 11, scope: !10047)
!10053 = !DILocation(line: 43, column: 15, scope: !10047)
!10054 = !DILocation(line: 44, column: 14, scope: !10047)
!10055 = !DILocation(line: 44, column: 7, scope: !10047)
!10056 = !DILocation(line: 45, column: 15, scope: !10047)
!10057 = !DILocation(line: 45, column: 7, scope: !10047)
!10058 = !DILocation(line: 45, column: 13, scope: !10047)
!10059 = !DILocation(line: 46, column: 12, scope: !10047)
!10060 = !DILocation(line: 46, column: 10, scope: !10047)
!10061 = !DILocation(line: 47, column: 5, scope: !10047)
!10062 = !DILocation(line: 49, column: 10, scope: !10036)
!10063 = !DILocation(line: 49, column: 3, scope: !10036)
!10064 = distinct !DISubprogram(name: "fd_safer_flag", scope: !460, file: !460, line: 65, type: !10018, isLocal: false, isDefinition: true, scopeLine: 66, flags: DIFlagPrototyped, isOptimized: false, unit: !459, variables: !25)
!10065 = !DILocalVariable(name: "fd", arg: 1, scope: !10064, file: !460, line: 65, type: !23)
!10066 = !DILocation(line: 65, column: 20, scope: !10064)
!10067 = !DILocalVariable(name: "flag", arg: 2, scope: !10064, file: !460, line: 65, type: !23)
!10068 = !DILocation(line: 65, column: 28, scope: !10064)
!10069 = !DILocation(line: 67, column: 23, scope: !10070)
!10070 = distinct !DILexicalBlock(scope: !10064, file: !460, line: 67, column: 7)
!10071 = !DILocation(line: 67, column: 20, scope: !10070)
!10072 = !DILocation(line: 67, column: 26, scope: !10070)
!10073 = !DILocation(line: 67, column: 29, scope: !10070)
!10074 = !DILocation(line: 67, column: 32, scope: !10070)
!10075 = !DILocation(line: 67, column: 7, scope: !10064)
!10076 = !DILocalVariable(name: "f", scope: !10077, file: !460, line: 69, type: !23)
!10077 = distinct !DILexicalBlock(scope: !10070, file: !460, line: 68, column: 5)
!10078 = !DILocation(line: 69, column: 11, scope: !10077)
!10079 = !DILocation(line: 69, column: 31, scope: !10077)
!10080 = !DILocation(line: 69, column: 35, scope: !10077)
!10081 = !DILocation(line: 69, column: 15, scope: !10077)
!10082 = !DILocalVariable(name: "e", scope: !10077, file: !460, line: 70, type: !23)
!10083 = !DILocation(line: 70, column: 11, scope: !10077)
!10084 = !DILocation(line: 70, column: 15, scope: !10077)
!10085 = !DILocation(line: 71, column: 14, scope: !10077)
!10086 = !DILocation(line: 71, column: 7, scope: !10077)
!10087 = !DILocation(line: 72, column: 15, scope: !10077)
!10088 = !DILocation(line: 72, column: 7, scope: !10077)
!10089 = !DILocation(line: 72, column: 13, scope: !10077)
!10090 = !DILocation(line: 73, column: 12, scope: !10077)
!10091 = !DILocation(line: 73, column: 10, scope: !10077)
!10092 = !DILocation(line: 74, column: 5, scope: !10077)
!10093 = !DILocation(line: 76, column: 10, scope: !10064)
!10094 = !DILocation(line: 76, column: 3, scope: !10064)
!10095 = distinct !DISubprogram(name: "rpl_fdopendir", scope: !462, file: !462, line: 121, type: !10096, isLocal: false, isDefinition: true, scopeLine: 122, flags: DIFlagPrototyped, isOptimized: false, unit: !461, variables: !25)
!10096 = !DISubroutineType(types: !10097)
!10097 = !{!3982, !23}
!10098 = !DILocalVariable(name: "fd", arg: 1, scope: !10095, file: !462, line: 121, type: !23)
!10099 = !DILocation(line: 121, column: 20, scope: !10095)
!10100 = !DILocalVariable(name: "st", scope: !10095, file: !462, line: 123, type: !10101)
!10101 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !288, line: 46, size: 1152, elements: !10102)
!10102 = !{!10103, !10104, !10105, !10106, !10107, !10108, !10109, !10110, !10111, !10112, !10113, !10114, !10119, !10120, !10121}
!10103 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !10101, file: !288, line: 48, baseType: !291, size: 64)
!10104 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !10101, file: !288, line: 53, baseType: !293, size: 64, offset: 64)
!10105 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !10101, file: !288, line: 61, baseType: !281, size: 64, offset: 128)
!10106 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !10101, file: !288, line: 62, baseType: !296, size: 32, offset: 192)
!10107 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !10101, file: !288, line: 64, baseType: !191, size: 32, offset: 224)
!10108 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !10101, file: !288, line: 65, baseType: !195, size: 32, offset: 256)
!10109 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !10101, file: !288, line: 67, baseType: !23, size: 32, offset: 288)
!10110 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !10101, file: !288, line: 69, baseType: !291, size: 64, offset: 320)
!10111 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !10101, file: !288, line: 74, baseType: !302, size: 64, offset: 384)
!10112 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !10101, file: !288, line: 78, baseType: !304, size: 64, offset: 448)
!10113 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !10101, file: !288, line: 80, baseType: !306, size: 64, offset: 512)
!10114 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !10101, file: !288, line: 91, baseType: !10115, size: 128, offset: 576)
!10115 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !309, line: 8, size: 128, elements: !10116)
!10116 = !{!10117, !10118}
!10117 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !10115, file: !309, line: 10, baseType: !312, size: 64)
!10118 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !10115, file: !309, line: 11, baseType: !314, size: 64, offset: 64)
!10119 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !10101, file: !288, line: 92, baseType: !10115, size: 128, offset: 704)
!10120 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !10101, file: !288, line: 93, baseType: !10115, size: 128, offset: 832)
!10121 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !10101, file: !288, line: 106, baseType: !318, size: 192, offset: 960)
!10122 = !DILocation(line: 123, column: 15, scope: !10095)
!10123 = !DILocation(line: 124, column: 14, scope: !10124)
!10124 = distinct !DILexicalBlock(scope: !10095, file: !462, line: 124, column: 7)
!10125 = !DILocation(line: 124, column: 7, scope: !10124)
!10126 = !DILocation(line: 124, column: 7, scope: !10095)
!10127 = !DILocation(line: 125, column: 5, scope: !10124)
!10128 = !DILocation(line: 126, column: 8, scope: !10129)
!10129 = distinct !DILexicalBlock(scope: !10095, file: !462, line: 126, column: 7)
!10130 = !DILocation(line: 126, column: 7, scope: !10095)
!10131 = !DILocation(line: 128, column: 7, scope: !10132)
!10132 = distinct !DILexicalBlock(scope: !10129, file: !462, line: 127, column: 5)
!10133 = !DILocation(line: 128, column: 13, scope: !10132)
!10134 = !DILocation(line: 129, column: 7, scope: !10132)
!10135 = !DILocation(line: 131, column: 21, scope: !10095)
!10136 = !DILocation(line: 131, column: 10, scope: !10095)
!10137 = !DILocation(line: 131, column: 3, scope: !10095)
!10138 = !DILocation(line: 132, column: 1, scope: !10095)
