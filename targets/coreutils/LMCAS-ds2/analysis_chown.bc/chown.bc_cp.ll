; ModuleID = 'chown.bc_cp.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, i8*, i8*, i8*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type { %struct._IO_marker*, %struct._IO_FILE*, i32 }
%struct.option = type { i8*, i32, i32*, i32 }
%struct.dev_ino = type { i64, i64 }
%struct.hash_tuning = type { float, float, float, float, i8 }
%struct.quoting_options = type { i32, i32, [8 x i32], i8*, i8* }
%struct.slotvec = type { i64, i8* }
%struct.Chown_option = type { i32, i8, %struct.dev_ino*, i8, i8, i8*, i8* }
%struct.stat = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, %struct.dev_ino, %struct.dev_ino, %struct.dev_ino, [3 x i64] }
%struct.group = type { i8*, i8*, i32, i8** }
%struct.passwd = type { i8*, i8*, i32, i32, i8*, i8*, i8* }
%struct.FTS = type { %struct._ftsent*, %struct._ftsent*, %struct._ftsent**, i64, i8*, i32, i32, i64, i64, i32 (%struct._ftsent**, %struct._ftsent**)*, i32, %struct.hash_table*, %union.anon, %struct.I_ring }
%struct._ftsent = type { %struct._ftsent*, %struct._ftsent*, %struct._ftsent*, i64, i8*, i8*, i8*, i32, i32, i64, %struct.FTS*, i64, i64, i64, i16, i16, i16, [1 x %struct.stat], [1 x i8] }
%struct.hash_table = type { %struct.hash_entry*, %struct.hash_entry*, i64, i64, i64, %struct.hash_tuning*, i64 (i8*, i64)*, i1 (i8*, i8*)*, void (i8*)*, %struct.hash_entry* }
%struct.hash_entry = type { i8*, %struct.hash_entry* }
%union.anon = type { %struct.hash_table* }
%struct.I_ring = type { [4 x i32], i32, i32, i32, i8 }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }
%struct.cycle_check_state = type { %struct.dev_ino, i64, i32 }
%struct.Active_dir = type { i64, i64, %struct._ftsent* }
%struct.dirent = type { i64, i64, i16, i8, [256 x i8] }
%struct.__dirstream = type opaque
%struct.LCO_ent = type { i64, i8 }
%struct.statfs = type { i64, i64, i64, i64, i64, i64, i64, %struct.__fsid_t, i64, i64, i64, [4 x i64] }
%struct.__fsid_t = type { [2 x i32] }
%struct.__mbstate_t = type { i32, %union.anon.24 }
%union.anon.24 = type { i32 }

@stderr = external global %struct._IO_FILE*, align 8
@.str = private unnamed_addr constant [39 x i8] c"Try `%s --help' for more information.\0A\00", align 1
@.str.1 = private unnamed_addr constant [97 x i8] c"Usage: %s [OPTION]... [OWNER][:[GROUP]] FILE...\0A  or:  %s [OPTION]... --reference=RFILE FILE...\0A\00", align 1
@stdout = external global %struct._IO_FILE*, align 8
@.str.2 = private unnamed_addr constant [373 x i8] c"Change the owner and/or group of each FILE to OWNER and/or GROUP.\0AWith --reference, change the owner and group of each FILE to those of RFILE.\0A\0A  -c, --changes          like verbose but report only when a change is made\0A      --dereference      affect the referent of each symbolic link (this is\0A                         the default), rather than the symbolic link itself\0A\00", align 1
@.str.3 = private unnamed_addr constant [201 x i8] c"  -h, --no-dereference   affect each symbolic link instead of any referenced\0A                         file (useful only on systems that can change the\0A                         ownership of a symlink)\0A\00", align 1
@.str.4 = private unnamed_addr constant [341 x i8] c"      --from=CURRENT_OWNER:CURRENT_GROUP\0A                         change the owner and/or group of each file only if\0A                         its current owner and/or group match those specified\0A                         here.  Either may be omitted, in which case a match\0A                         is not required for the omitted attribute.\0A\00", align 1
@.str.5 = private unnamed_addr constant [128 x i8] c"      --no-preserve-root  do not treat `/' specially (the default)\0A      --preserve-root    fail to operate recursively on `/'\0A\00", align 1
@.str.6 = private unnamed_addr constant [316 x i8] c"  -f, --silent, --quiet  suppress most error messages\0A      --reference=RFILE  use RFILE's owner and group rather than\0A                         specifying OWNER:GROUP values\0A  -R, --recursive        operate on files and directories recursively\0A  -v, --verbose          output a diagnostic for every file processed\0A\0A\00", align 1
@.str.7 = private unnamed_addr constant [464 x i8] c"The following options modify how a hierarchy is traversed when the -R\0Aoption is also specified.  If more than one is specified, only the final\0Aone takes effect.\0A\0A  -H                     if a command line argument is a symbolic link\0A                         to a directory, traverse it\0A  -L                     traverse every symbolic link to a directory\0A                         encountered\0A  -P                     do not traverse any symbolic links (default)\0A\0A\00", align 1
@.str.8 = private unnamed_addr constant [45 x i8] c"      --help     display this help and exit\0A\00", align 1
@.str.9 = private unnamed_addr constant [54 x i8] c"      --version  output version information and exit\0A\00", align 1
@.str.10 = private unnamed_addr constant [192 x i8] c"\0AOwner is unchanged if missing.  Group is unchanged if missing, but changed\0Ato login group if implied by a `:' following a symbolic OWNER.\0AOWNER and GROUP may be numeric as well as symbolic.\0A\00", align 1
@.str.11 = private unnamed_addr constant [201 x i8] c"\0AExamples:\0A  %s root /u        Change the owner of /u to \22root\22.\0A  %s root:staff /u  Likewise, but also change its group to \22staff\22.\0A  %s -hR root /u    Change the owner of /u and subfiles to \22root\22.\0A\00", align 1
@.str.24 = private unnamed_addr constant [23 x i8] c"\0AReport %s bugs to %s\0A\00", align 1
@.str.25 = private unnamed_addr constant [22 x i8] c"bug-coreutils@gnu.org\00", align 1
@.str.26 = private unnamed_addr constant [49 x i8] c"%s home page: <http://www.gnu.org/software/%s/>\0A\00", align 1
@.str.16 = private unnamed_addr constant [14 x i8] c"GNU coreutils\00", align 1
@.str.27 = private unnamed_addr constant [10 x i8] c"coreutils\00", align 1
@.str.28 = private unnamed_addr constant [64 x i8] c"General help using GNU software: <http://www.gnu.org/gethelp/>\0A\00", align 1
@.str.29 = private unnamed_addr constant [4 x i8] c"en_\00", align 1
@.str.30 = private unnamed_addr constant [69 x i8] c"Report %s translation bugs to <http://translationproject.org/team/>\0A\00", align 1
@.str.31 = private unnamed_addr constant [65 x i8] c"For complete documentation, run: info coreutils '%s invocation'\0A\00", align 1
@.str.12 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.13 = private unnamed_addr constant [9 x i8] c"HLPRcfhv\00", align 1
@long_options = internal constant [14 x %struct.option] [%struct.option { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.32, i32 0, i32 0), i32 0, i32* null, i32 82 }, %struct.option { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.33, i32 0, i32 0), i32 0, i32* null, i32 99 }, %struct.option { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.34, i32 0, i32 0), i32 0, i32* null, i32 128 }, %struct.option { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.35, i32 0, i32 0), i32 1, i32* null, i32 129 }, %struct.option { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.36, i32 0, i32 0), i32 0, i32* null, i32 104 }, %struct.option { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.37, i32 0, i32 0), i32 0, i32* null, i32 130 }, %struct.option { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.38, i32 0, i32 0), i32 0, i32* null, i32 131 }, %struct.option { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.39, i32 0, i32 0), i32 0, i32* null, i32 102 }, %struct.option { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.40, i32 0, i32 0), i32 0, i32* null, i32 102 }, %struct.option { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.41, i32 0, i32 0), i32 1, i32* null, i32 132 }, %struct.option { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.42, i32 0, i32 0), i32 0, i32* null, i32 118 }, %struct.option { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.43, i32 0, i32 0), i32 0, i32* null, i32 -130 }, %struct.option { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.44, i32 0, i32 0), i32 0, i32* null, i32 -131 }, %struct.option zeroinitializer], align 16, !dbg !0
@optarg = external global i8*, align 8
@reference_file = internal global i8* null, align 8, !dbg !38
@.str.14 = private unnamed_addr constant [7 x i8] c"%s: %s\00", align 1
@.str.15 = private unnamed_addr constant [6 x i8] c"chown\00", align 1
@.str.17 = private unnamed_addr constant [16 x i8] c"David MacKenzie\00", align 1
@.str.18 = private unnamed_addr constant [13 x i8] c"Jim Meyering\00", align 1
@.str.19 = private unnamed_addr constant [42 x i8] c"-R --dereference requires either -H or -L\00", align 1
@optind = external global i32, align 4
@.str.20 = private unnamed_addr constant [16 x i8] c"missing operand\00", align 1
@.str.21 = private unnamed_addr constant [25 x i8] c"missing operand after %s\00", align 1
@.str.22 = private unnamed_addr constant [31 x i8] c"failed to get attributes of %s\00", align 1
@main.dev_ino_buf = internal global %struct.dev_ino zeroinitializer, align 8, !dbg !18
@.str.23 = private unnamed_addr constant [2 x i8] c"/\00", align 1
@.str.32 = private unnamed_addr constant [10 x i8] c"recursive\00", align 1
@.str.33 = private unnamed_addr constant [8 x i8] c"changes\00", align 1
@.str.34 = private unnamed_addr constant [12 x i8] c"dereference\00", align 1
@.str.35 = private unnamed_addr constant [5 x i8] c"from\00", align 1
@.str.36 = private unnamed_addr constant [15 x i8] c"no-dereference\00", align 1
@.str.37 = private unnamed_addr constant [17 x i8] c"no-preserve-root\00", align 1
@.str.38 = private unnamed_addr constant [14 x i8] c"preserve-root\00", align 1
@.str.39 = private unnamed_addr constant [6 x i8] c"quiet\00", align 1
@.str.40 = private unnamed_addr constant [7 x i8] c"silent\00", align 1
@.str.41 = private unnamed_addr constant [10 x i8] c"reference\00", align 1
@.str.42 = private unnamed_addr constant [8 x i8] c"verbose\00", align 1
@.str.43 = private unnamed_addr constant [5 x i8] c"help\00", align 1
@.str.44 = private unnamed_addr constant [8 x i8] c"version\00", align 1
@.str.45 = private unnamed_addr constant [16 x i8] c"fts_read failed\00", align 1
@.str.1.46 = private unnamed_addr constant [17 x i8] c"fts_close failed\00", align 1
@.str.2.47 = private unnamed_addr constant [2 x i8] c"/\00", align 1
@.str.3.48 = private unnamed_addr constant [45 x i8] c"it is dangerous to operate recursively on %s\00", align 1
@.str.4.49 = private unnamed_addr constant [58 x i8] c"it is dangerous to operate recursively on %s (same as %s)\00", align 1
@.str.5.50 = private unnamed_addr constant [49 x i8] c"use --no-preserve-root to override this failsafe\00", align 1
@.str.6.51 = private unnamed_addr constant [17 x i8] c"cannot access %s\00", align 1
@.str.7.52 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str.8.53 = private unnamed_addr constant [25 x i8] c"cannot read directory %s\00", align 1
@.str.9.54 = private unnamed_addr constant [186 x i8] c"WARNING: Circular directory structure.\0AThis almost certainly means that you have a corrupted file system.\0ANOTIFY YOUR SYSTEM MANAGER.\0AThe following directory is part of the cycle:\0A  %s\0A\00", align 1
@.str.10.55 = private unnamed_addr constant [22 x i8] c"cannot dereference %s\00", align 1
@.str.11.56 = private unnamed_addr constant [25 x i8] c"changing ownership of %s\00", align 1
@.str.12.57 = private unnamed_addr constant [21 x i8] c"changing group of %s\00", align 1
@.str.13.58 = private unnamed_addr constant [56 x i8] c"neither symbolic link %s nor referent has been changed\0A\00", align 1
@.str.14.59 = private unnamed_addr constant [2 x i8] c":\00", align 1
@.str.16.60 = private unnamed_addr constant [27 x i8] c"changed group of %s to %s\0A\00", align 1
@.str.17.61 = private unnamed_addr constant [30 x i8] c"no change to ownership of %s\0A\00", align 1
@.str.15.62 = private unnamed_addr constant [31 x i8] c"changed ownership of %s to %s\0A\00", align 1
@.str.19.63 = private unnamed_addr constant [36 x i8] c"failed to change group of %s to %s\0A\00", align 1
@.str.20.64 = private unnamed_addr constant [34 x i8] c"failed to change ownership of %s\0A\00", align 1
@.str.18.65 = private unnamed_addr constant [40 x i8] c"failed to change ownership of %s to %s\0A\00", align 1
@.str.22.66 = private unnamed_addr constant [28 x i8] c"group of %s retained as %s\0A\00", align 1
@.str.23.67 = private unnamed_addr constant [26 x i8] c"ownership of %s retained\0A\00", align 1
@.str.21.68 = private unnamed_addr constant [32 x i8] c"ownership of %s retained as %s\0A\00", align 1
@Version = global i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.71, i32 0, i32 0), align 8, !dbg !52
@.str.71 = private unnamed_addr constant [10 x i8] c"8.2-dirty\00", align 1
@program_name = global i8* null, align 8, !dbg !57
@.str.76 = private unnamed_addr constant [56 x i8] c"A NULL argv[0] was passed through an exec system call.\0A\00", align 1
@.str.1.77 = private unnamed_addr constant [8 x i8] c"/.libs/\00", align 1
@.str.2.78 = private unnamed_addr constant [4 x i8] c"lt-\00", align 1
@program_invocation_short_name = external global i8*, align 8
@program_invocation_name = external global i8*, align 8
@.str.79 = private unnamed_addr constant [12 x i8] c"%s (%s) %s\0A\00", align 1
@.str.1.80 = private unnamed_addr constant [7 x i8] c"%s %s\0A\00", align 1
@.str.2.81 = private unnamed_addr constant [4 x i8] c"(C)\00", align 1
@.str.3.82 = private unnamed_addr constant [203 x i8] c"\0ALicense GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>.\0AThis is free software: you are free to change and redistribute it.\0AThere is NO WARRANTY, to the extent permitted by law.\0A\0A\00", align 1
@.str.4.83 = private unnamed_addr constant [16 x i8] c"Written by %s.\0A\00", align 1
@.str.5.84 = private unnamed_addr constant [23 x i8] c"Written by %s and %s.\0A\00", align 1
@.str.6.85 = private unnamed_addr constant [28 x i8] c"Written by %s, %s, and %s.\0A\00", align 1
@.str.7.86 = private unnamed_addr constant [32 x i8] c"Written by %s, %s, %s,\0Aand %s.\0A\00", align 1
@.str.8.87 = private unnamed_addr constant [36 x i8] c"Written by %s, %s, %s,\0A%s, and %s.\0A\00", align 1
@.str.9.88 = private unnamed_addr constant [40 x i8] c"Written by %s, %s, %s,\0A%s, %s, and %s.\0A\00", align 1
@.str.10.89 = private unnamed_addr constant [44 x i8] c"Written by %s, %s, %s,\0A%s, %s, %s, and %s.\0A\00", align 1
@.str.11.90 = private unnamed_addr constant [48 x i8] c"Written by %s, %s, %s,\0A%s, %s, %s, %s,\0Aand %s.\0A\00", align 1
@.str.12.91 = private unnamed_addr constant [52 x i8] c"Written by %s, %s, %s,\0A%s, %s, %s, %s,\0A%s, and %s.\0A\00", align 1
@.str.13.92 = private unnamed_addr constant [60 x i8] c"Written by %s, %s, %s,\0A%s, %s, %s, %s,\0A%s, %s, and others.\0A\00", align 1
@.str.14.95 = private unnamed_addr constant [21 x i8] c"\0AReport bugs to: %s\0A\00", align 1
@.str.15.96 = private unnamed_addr constant [22 x i8] c"bug-coreutils@gnu.org\00", align 1
@.str.16.97 = private unnamed_addr constant [20 x i8] c"%s home page: <%s>\0A\00", align 1
@.str.17.98 = private unnamed_addr constant [14 x i8] c"GNU coreutils\00", align 1
@.str.18.99 = private unnamed_addr constant [39 x i8] c"http://www.gnu.org/software/coreutils/\00", align 1
@.str.19.100 = private unnamed_addr constant [64 x i8] c"General help using GNU software: <http://www.gnu.org/gethelp/>\0A\00", align 1
@version_etc_copyright = constant [47 x i8] c"Copyright %s %d Free Software Foundation, Inc.\00", align 16, !dbg !63
@file_name = internal global i8* null, align 8, !dbg !71
@ignore_EPIPE = internal global i8 0, align 1, !dbg !77
@.str.107 = private unnamed_addr constant [12 x i8] c"write error\00", align 1
@.str.1.108 = private unnamed_addr constant [7 x i8] c"%s: %s\00", align 1
@.str.2.109 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@exit_failure = global i32 1, align 4, !dbg !80
@.str.112 = private unnamed_addr constant [2 x i8] c".\00", align 1
@.str.1.113 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.2.118 = private unnamed_addr constant [3 x i8] c"..\00", align 1
@.str.121 = private unnamed_addr constant [24 x i8] c"# entries:         %lu\0A\00", align 1
@.str.1.122 = private unnamed_addr constant [24 x i8] c"# buckets:         %lu\0A\00", align 1
@.str.2.123 = private unnamed_addr constant [33 x i8] c"# buckets used:    %lu (%.2f%%)\0A\00", align 1
@.str.3.124 = private unnamed_addr constant [24 x i8] c"max bucket length: %lu\0A\00", align 1
@default_tuning = internal constant %struct.hash_tuning { float 0.000000e+00, float 1.000000e+00, float 0x3FE99999A0000000, float 0x3FF69FBE80000000, i8 0 }, align 4, !dbg !86
@quoting_style_args = constant [9 x i8*] [i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.153, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.154, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.2.155, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3.156, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.4.157, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.5.158, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.6.159, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.7.160, i32 0, i32 0), i8* null], align 16, !dbg !105
@.str.153 = private unnamed_addr constant [8 x i8] c"literal\00", align 1
@.str.1.154 = private unnamed_addr constant [6 x i8] c"shell\00", align 1
@.str.2.155 = private unnamed_addr constant [13 x i8] c"shell-always\00", align 1
@.str.3.156 = private unnamed_addr constant [2 x i8] c"c\00", align 1
@.str.4.157 = private unnamed_addr constant [8 x i8] c"c-maybe\00", align 1
@.str.5.158 = private unnamed_addr constant [7 x i8] c"escape\00", align 1
@.str.6.159 = private unnamed_addr constant [7 x i8] c"locale\00", align 1
@.str.7.160 = private unnamed_addr constant [8 x i8] c"clocale\00", align 1
@quoting_style_vals = constant [8 x i32] [i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7], align 16, !dbg !145
@default_quoting_options = internal global %struct.quoting_options zeroinitializer, align 8, !dbg !151
@.str.8.161 = private unnamed_addr constant [2 x i8] c"\22\00", align 1
@.str.9.162 = private unnamed_addr constant [2 x i8] c"`\00", align 1
@.str.10.163 = private unnamed_addr constant [2 x i8] c"'\00", align 1
@slotvec = internal global %struct.slotvec* @slotvec0, align 8, !dbg !167
@nslots = internal global i32 1, align 4, !dbg !174
@slot0 = internal global [256 x i8] zeroinitializer, align 16, !dbg !162
@slotvec0 = internal global %struct.slotvec { i64 256, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @slot0, i32 0, i32 0) }, align 8, !dbg !176
@.str.170 = private unnamed_addr constant [2 x i8] c"/\00", align 1
@parse_with_separator.E_bad_spec = internal global i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.2.178, i32 0, i32 0), align 8, !dbg !182
@.str.3.175 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@parse_with_separator.E_invalid_user = internal global i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.177, i32 0, i32 0), align 8, !dbg !208
@parse_with_separator.E_invalid_group = internal global i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1.176, i32 0, i32 0), align 8, !dbg !210
@.str.1.176 = private unnamed_addr constant [14 x i8] c"invalid group\00", align 1
@.str.177 = private unnamed_addr constant [13 x i8] c"invalid user\00", align 1
@.str.2.178 = private unnamed_addr constant [13 x i8] c"invalid spec\00", align 1
@.str.191 = private unnamed_addr constant [38 x i8] c"0 <= strtol_base && strtol_base <= 36\00", align 1
@.str.1.192 = private unnamed_addr constant [20 x i8] c"../../lib/xstrtol.c\00", align 1
@__PRETTY_FUNCTION__.xstrtoul = private unnamed_addr constant [81 x i8] c"strtol_error xstrtoul(const char *, char **, int, unsigned long *, const char *)\00", align 1
@.str.195 = private unnamed_addr constant [16 x i8] c"errno != EINVAL\00", align 1
@.str.1.196 = private unnamed_addr constant [17 x i8] c"../../lib/xfts.c\00", align 1
@__PRETTY_FUNCTION__.xfts_open = private unnamed_addr constant [78 x i8] c"FTS *xfts_open(char *const *, int, int (*)(const FTSENT **, const FTSENT **))\00", align 1
@.str.201 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str.1.202 = private unnamed_addr constant [17 x i8] c"memory exhausted\00", align 1
@.str.211 = private unnamed_addr constant [25 x i8] c"state->magic == CC_MAGIC\00", align 1
@.str.1.212 = private unnamed_addr constant [24 x i8] c"../../lib/cycle-check.c\00", align 1
@__PRETTY_FUNCTION__.cycle_check = private unnamed_addr constant [67 x i8] c"_Bool cycle_check(struct cycle_check_state *, const struct stat *)\00", align 1

; Function Attrs: noinline noreturn nounwind uwtable
define void @usage(i32) #0 !dbg !467 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !470, metadata !DIExpression()), !dbg !471
  %3 = load i32, i32* %2, align 4, !dbg !472
  %4 = icmp ne i32 %3, 0, !dbg !474
  br i1 %4, label %5, label %9, !dbg !475

; <label>:5:                                      ; preds = %1
  %6 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !476
  %7 = load i8*, i8** @program_name, align 8, !dbg !477
  %8 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %6, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str, i32 0, i32 0), i8* %7), !dbg !478
  br label %35, !dbg !478

; <label>:9:                                      ; preds = %1
  %10 = load i8*, i8** @program_name, align 8, !dbg !479
  %11 = load i8*, i8** @program_name, align 8, !dbg !481
  %12 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([97 x i8], [97 x i8]* @.str.1, i32 0, i32 0), i8* %10, i8* %11), !dbg !482
  %13 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !483
  %14 = call i32 @fputs_unlocked(i8* getelementptr inbounds ([373 x i8], [373 x i8]* @.str.2, i32 0, i32 0), %struct._IO_FILE* %13), !dbg !483
  %15 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !484
  %16 = call i32 @fputs_unlocked(i8* getelementptr inbounds ([201 x i8], [201 x i8]* @.str.3, i32 0, i32 0), %struct._IO_FILE* %15), !dbg !484
  %17 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !485
  %18 = call i32 @fputs_unlocked(i8* getelementptr inbounds ([341 x i8], [341 x i8]* @.str.4, i32 0, i32 0), %struct._IO_FILE* %17), !dbg !485
  %19 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !486
  %20 = call i32 @fputs_unlocked(i8* getelementptr inbounds ([128 x i8], [128 x i8]* @.str.5, i32 0, i32 0), %struct._IO_FILE* %19), !dbg !486
  %21 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !487
  %22 = call i32 @fputs_unlocked(i8* getelementptr inbounds ([316 x i8], [316 x i8]* @.str.6, i32 0, i32 0), %struct._IO_FILE* %21), !dbg !487
  %23 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !488
  %24 = call i32 @fputs_unlocked(i8* getelementptr inbounds ([464 x i8], [464 x i8]* @.str.7, i32 0, i32 0), %struct._IO_FILE* %23), !dbg !488
  %25 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !489
  %26 = call i32 @fputs_unlocked(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.8, i32 0, i32 0), %struct._IO_FILE* %25), !dbg !489
  %27 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !490
  %28 = call i32 @fputs_unlocked(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.9, i32 0, i32 0), %struct._IO_FILE* %27), !dbg !490
  %29 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !491
  %30 = call i32 @fputs_unlocked(i8* getelementptr inbounds ([192 x i8], [192 x i8]* @.str.10, i32 0, i32 0), %struct._IO_FILE* %29), !dbg !491
  %31 = load i8*, i8** @program_name, align 8, !dbg !492
  %32 = load i8*, i8** @program_name, align 8, !dbg !493
  %33 = load i8*, i8** @program_name, align 8, !dbg !494
  %34 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([201 x i8], [201 x i8]* @.str.11, i32 0, i32 0), i8* %31, i8* %32, i8* %33), !dbg !495
  call void @emit_ancillary_info(), !dbg !496
  br label %35

; <label>:35:                                     ; preds = %9, %5
  %36 = load i32, i32* %2, align 4, !dbg !497
  call void @exit(i32 %36) #11, !dbg !498
  unreachable, !dbg !498
                                                  ; No predecessors!
  unreachable, !dbg !499
}

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

declare i32 @fprintf(%struct._IO_FILE*, i8*, ...) #2

declare i32 @printf(i8*, ...) #2

declare i32 @fputs_unlocked(i8*, %struct._IO_FILE*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @emit_ancillary_info() #3 !dbg !500 {
  %1 = alloca i8*, align 8
  %2 = load i8*, i8** @program_name, align 8, !dbg !504
  %3 = call i8* @last_component(i8* %2), !dbg !505
  %4 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.24, i32 0, i32 0), i8* %3, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.25, i32 0, i32 0)), !dbg !506
  %5 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.26, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.16, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.27, i32 0, i32 0)), !dbg !507
  %6 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !508
  %7 = call i32 @fputs_unlocked(i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.28, i32 0, i32 0), %struct._IO_FILE* %6), !dbg !508
  call void @llvm.dbg.declare(metadata i8** %1, metadata !509, metadata !DIExpression()), !dbg !510
  %8 = call i8* @setlocale(i32 5, i8* null) #8, !dbg !511
  store i8* %8, i8** %1, align 8, !dbg !510
  %9 = load i8*, i8** %1, align 8, !dbg !512
  %10 = icmp ne i8* %9, null, !dbg !512
  br i1 %10, label %11, label %19, !dbg !514

; <label>:11:                                     ; preds = %0
  %12 = load i8*, i8** %1, align 8, !dbg !515
  %13 = call i32 @strncmp(i8* %12, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.29, i32 0, i32 0), i64 3) #12, !dbg !516
  %14 = icmp ne i32 %13, 0, !dbg !516
  br i1 %14, label %15, label %19, !dbg !517

; <label>:15:                                     ; preds = %11
  %16 = load i8*, i8** @program_name, align 8, !dbg !518
  %17 = call i8* @last_component(i8* %16), !dbg !520
  %18 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.30, i32 0, i32 0), i8* %17), !dbg !521
  br label %19, !dbg !522

; <label>:19:                                     ; preds = %15, %11, %0
  %20 = load i8*, i8** @program_name, align 8, !dbg !523
  %21 = call i8* @last_component(i8* %20), !dbg !524
  %22 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.31, i32 0, i32 0), i8* %21), !dbg !525
  ret void, !dbg !526
}

; Function Attrs: noreturn nounwind
declare void @exit(i32) #4

; Function Attrs: nounwind
declare i8* @setlocale(i32, i8*) #5

; Function Attrs: nounwind readonly
declare i32 @strncmp(i8*, i8*, i64) #6

; Function Attrs: noinline nounwind uwtable
define void @klee_dump_memory() #3 !dbg !527 {
  ret void, !dbg !528
}

; Function Attrs: noinline nounwind uwtable
define i32 @main(i32, i8**) #3 !dbg !20 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 8
  %6 = alloca i8, align 1
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca %struct.Chown_option, align 8
  %14 = alloca i8, align 1
  %15 = alloca i32, align 4
  %16 = alloca i8*, align 8
  %17 = alloca i8*, align 8
  %18 = alloca i8*, align 8
  %19 = alloca %struct.stat, align 8
  %20 = alloca i8*, align 8
  store i32 0, i32* %3, align 4
  store i32 %0, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !529, metadata !DIExpression()), !dbg !530
  store i8** %1, i8*** %5, align 8
  call void @llvm.dbg.declare(metadata i8*** %5, metadata !531, metadata !DIExpression()), !dbg !532
  call void @llvm.dbg.declare(metadata i8* %6, metadata !533, metadata !DIExpression()), !dbg !534
  store i8 0, i8* %6, !dbg !534
  call void @llvm.dbg.declare(metadata i32* %7, metadata !535, metadata !DIExpression()), !dbg !536
  store i32 -1, i32* %7, !dbg !536
  call void @llvm.dbg.declare(metadata i32* %8, metadata !537, metadata !DIExpression()), !dbg !538
  store i32 -1, i32* %8, !dbg !538
  call void @llvm.dbg.declare(metadata i32* %9, metadata !539, metadata !DIExpression()), !dbg !540
  store i32 -1, i32* %9, !dbg !540
  call void @llvm.dbg.declare(metadata i32* %10, metadata !541, metadata !DIExpression()), !dbg !542
  store i32 -1, i32* %10, !dbg !542
  call void @llvm.dbg.declare(metadata i32* %11, metadata !543, metadata !DIExpression()), !dbg !544
  store i32 16, i32* %11, !dbg !544
  call void @llvm.dbg.declare(metadata i32* %12, metadata !545, metadata !DIExpression()), !dbg !546
  store i32 -1, i32* %12, !dbg !546
  call void @llvm.dbg.declare(metadata %struct.Chown_option* %13, metadata !547, metadata !DIExpression()), !dbg !558
  call void @llvm.dbg.declare(metadata i8* %14, metadata !559, metadata !DIExpression()), !dbg !560
  call void @llvm.dbg.declare(metadata i32* %15, metadata !561, metadata !DIExpression()), !dbg !562
  %21 = load i8**, i8*** %5, align 8, !dbg !563
  %22 = getelementptr inbounds i8*, i8** %21, i64 0, !dbg !563
  %23 = load i8*, i8** %22, align 8, !dbg !563
  call void @set_program_name(i8* %23), !dbg !564
  %24 = call i8* @setlocale(i32 6, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.12, i32 0, i32 0)) #8, !dbg !565
  %25 = call i32 @atexit(void ()* @close_stdout) #8, !dbg !566
  call void @chopt_init(%struct.Chown_option* %13), !dbg !567
  br label %26, !dbg !568

; <label>:26:                                     ; preds = %64, %2
  %27 = load i32, i32* %4, align 4, !dbg !569
  %28 = load i8**, i8*** %5, align 8, !dbg !570
  %29 = call i32 @getopt_long(i32 %27, i8** %28, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.13, i32 0, i32 0), %struct.option* getelementptr inbounds ([14 x %struct.option], [14 x %struct.option]* @long_options, i32 0, i32 0), i32* null) #8, !dbg !571
  store i32 %29, i32* %15, align 4, !dbg !572
  %30 = icmp ne i32 %29, -1, !dbg !573
  br i1 %30, label %31, label %65, !dbg !568

; <label>:31:                                     ; preds = %26
  switch i32 -1, label %63 [
    i32 72, label %32
    i32 76, label %33
    i32 80, label %34
    i32 104, label %35
    i32 128, label %36
    i32 130, label %37
    i32 131, label %38
    i32 132, label %39
    i32 129, label %41
    i32 82, label %51
    i32 99, label %53
    i32 102, label %55
    i32 118, label %57
    i32 -130, label %59
    i32 -131, label %60
  ], !dbg !574

; <label>:32:                                     ; preds = %31
  store i32 16, i32* %11, !dbg !576
  br label %64, !dbg !578

; <label>:33:                                     ; preds = %31
  store i32 16, i32* %11, !dbg !579
  br label %64, !dbg !580

; <label>:34:                                     ; preds = %31
  store i32 16, i32* %11, !dbg !581
  br label %64, !dbg !582

; <label>:35:                                     ; preds = %31
  store i32 -1, i32* %12, !dbg !583
  br label %64, !dbg !584

; <label>:36:                                     ; preds = %31
  store i32 -1, i32* %12, !dbg !585
  br label %64, !dbg !586

; <label>:37:                                     ; preds = %31
  store i8 0, i8* %6, !dbg !587
  br label %64, !dbg !588

; <label>:38:                                     ; preds = %31
  store i8 0, i8* %6, !dbg !589
  br label %64, !dbg !590

; <label>:39:                                     ; preds = %31
  %40 = load i8*, i8** @optarg, align 8, !dbg !591
  store i8* %40, i8** @reference_file, align 8, !dbg !592
  br label %64, !dbg !593

; <label>:41:                                     ; preds = %31
  call void @llvm.dbg.declare(metadata i8** %16, metadata !594, metadata !DIExpression()), !dbg !596
  call void @llvm.dbg.declare(metadata i8** %17, metadata !597, metadata !DIExpression()), !dbg !598
  call void @llvm.dbg.declare(metadata i8** %18, metadata !599, metadata !DIExpression()), !dbg !600
  %42 = load i8*, i8** @optarg, align 8, !dbg !601
  %43 = call i8* @parse_user_spec(i8* %42, i32* %9, i32* %10, i8** %16, i8** %17), !dbg !602
  store i8* %43, i8** %18, align 8, !dbg !600
  %44 = load i8*, i8** %18, align 8, !dbg !603
  %45 = icmp ne i8* %44, null, !dbg !603
  br i1 %45, label %46, label %50, !dbg !605

; <label>:46:                                     ; preds = %41
  %47 = load i8*, i8** %18, align 8, !dbg !606
  %48 = load i8*, i8** @optarg, align 8, !dbg !607
  %49 = call i8* @quote(i8* %48), !dbg !608
  call void (i32, i32, i8*, ...) @error(i32 1, i32 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.14, i32 0, i32 0), i8* %47, i8* %49), !dbg !609
  br label %50, !dbg !609

; <label>:50:                                     ; preds = %46, %41
  br label %64, !dbg !610

; <label>:51:                                     ; preds = %31
  %52 = getelementptr inbounds %struct.Chown_option, %struct.Chown_option* %13, i32 0, i32 1, !dbg !611
  store i8 2, i8* %52, !dbg !612
  br label %64, !dbg !613

; <label>:53:                                     ; preds = %31
  %54 = getelementptr inbounds %struct.Chown_option, %struct.Chown_option* %13, i32 0, i32 0, !dbg !614
  store i32 1, i32* %54, align 8, !dbg !615
  br label %64, !dbg !616

; <label>:55:                                     ; preds = %31
  %56 = getelementptr inbounds %struct.Chown_option, %struct.Chown_option* %13, i32 0, i32 4, !dbg !617
  store i8 1, i8* %56, align 1, !dbg !618
  br label %64, !dbg !619

; <label>:57:                                     ; preds = %31
  %58 = getelementptr inbounds %struct.Chown_option, %struct.Chown_option* %13, i32 0, i32 0, !dbg !620
  store i32 0, i32* %58, align 8, !dbg !621
  br label %64, !dbg !622

; <label>:59:                                     ; preds = %31
  call void @usage(i32 0) #13, !dbg !623
  unreachable, !dbg !623

; <label>:60:                                     ; preds = %31
  %61 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !624
  %62 = load i8*, i8** @Version, align 8, !dbg !624
  call void (%struct._IO_FILE*, i8*, i8*, i8*, ...) @version_etc(%struct._IO_FILE* %61, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.15, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.16, i32 0, i32 0), i8* %62, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.17, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.18, i32 0, i32 0), i8* null), !dbg !624
  call void @exit(i32 0) #11, !dbg !624
  unreachable, !dbg !624

; <label>:63:                                     ; preds = %31
  call void @usage(i32 1) #13, !dbg !625
  unreachable, !dbg !625

; <label>:64:                                     ; preds = %57, %55, %53, %51, %50, %39, %38, %37, %36, %35, %34, %33, %32
  br label %26, !dbg !568, !llvm.loop !626

; <label>:65:                                     ; preds = %26
  call void @klee_dump_memory(), !dbg !628
  %66 = getelementptr inbounds %struct.Chown_option, %struct.Chown_option* %13, i32 0, i32 1, !dbg !629
  %67 = load i8, i8* %66, align 4, !dbg !629
  %68 = trunc i8 %67 to i1, !dbg !629
  br i1 %68, label %69, label %78, !dbg !631

; <label>:69:                                     ; preds = %65
  %70 = load i32, i32* %11, align 4, !dbg !632
  %71 = icmp eq i32 %70, 16, !dbg !635
  br i1 %71, label %72, label %77, !dbg !636

; <label>:72:                                     ; preds = %69
  %73 = load i32, i32* %12, align 4, !dbg !637
  %74 = icmp eq i32 %73, 1, !dbg !640
  br i1 %74, label %75, label %76, !dbg !641

; <label>:75:                                     ; preds = %72
  call void (i32, i32, i8*, ...) @error(i32 1, i32 0, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.19, i32 0, i32 0)), !dbg !642
  br label %76, !dbg !642

; <label>:76:                                     ; preds = %75, %72
  store i32 0, i32* %12, align 4, !dbg !643
  br label %77, !dbg !644

; <label>:77:                                     ; preds = %76, %69
  br label %79, !dbg !645

; <label>:78:                                     ; preds = %65
  store i32 16, i32* %11, align 4, !dbg !646
  br label %79

; <label>:79:                                     ; preds = %78, %77
  %80 = load i32, i32* %12, align 4, !dbg !648
  %81 = icmp ne i32 %80, 0, !dbg !649
  %82 = getelementptr inbounds %struct.Chown_option, %struct.Chown_option* %13, i32 0, i32 3, !dbg !650
  %83 = zext i1 %81 to i8, !dbg !651
  store i8 %83, i8* %82, align 8, !dbg !651
  %84 = load i32, i32* %4, align 4, !dbg !652
  %85 = load i32, i32* @optind, align 4, !dbg !654
  %86 = sub nsw i32 %84, %85, !dbg !655
  %87 = load i8*, i8** @reference_file, align 8, !dbg !656
  %88 = icmp ne i8* %87, null, !dbg !656
  %89 = zext i1 %88 to i64, !dbg !656
  %90 = select i1 %88, i32 1, i32 2, !dbg !656
  %91 = icmp slt i32 %86, %90, !dbg !657
  br i1 %91, label %92, label %106, !dbg !658

; <label>:92:                                     ; preds = %79
  %93 = load i32, i32* %4, align 4, !dbg !659
  %94 = load i32, i32* @optind, align 4, !dbg !662
  %95 = icmp sle i32 %93, %94, !dbg !663
  br i1 %95, label %96, label %97, !dbg !664

; <label>:96:                                     ; preds = %92
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.20, i32 0, i32 0)), !dbg !665
  br label %105, !dbg !665

; <label>:97:                                     ; preds = %92
  %98 = load i8**, i8*** %5, align 8, !dbg !666
  %99 = load i32, i32* %4, align 4, !dbg !667
  %100 = sub nsw i32 %99, 1, !dbg !668
  %101 = sext i32 %100 to i64, !dbg !666
  %102 = getelementptr inbounds i8*, i8** %98, i64 %101, !dbg !666
  %103 = load i8*, i8** %102, align 8, !dbg !666
  %104 = call i8* @quote(i8* %103), !dbg !669
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.21, i32 0, i32 0), i8* %104), !dbg !670
  br label %105

; <label>:105:                                    ; preds = %97, %96
  call void @usage(i32 1) #13, !dbg !671
  unreachable, !dbg !671

; <label>:106:                                    ; preds = %79
  %107 = load i8*, i8** @reference_file, align 8, !dbg !672
  %108 = icmp ne i8* %107, null, !dbg !672
  br i1 %108, label %109, label %131, !dbg !674

; <label>:109:                                    ; preds = %106
  call void @llvm.dbg.declare(metadata %struct.stat* %19, metadata !675, metadata !DIExpression()), !dbg !708
  %110 = load i8*, i8** @reference_file, align 8, !dbg !709
  %111 = call i32 @stat(i8* %110, %struct.stat* %19) #8, !dbg !711
  %112 = icmp ne i32 %111, 0, !dbg !711
  br i1 %112, label %113, label %118, !dbg !712

; <label>:113:                                    ; preds = %109
  %114 = call i32* @__errno_location() #14, !dbg !713
  %115 = load i32, i32* %114, align 4, !dbg !713
  %116 = load i8*, i8** @reference_file, align 8, !dbg !714
  %117 = call i8* @quote(i8* %116), !dbg !715
  call void (i32, i32, i8*, ...) @error(i32 1, i32 %115, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.22, i32 0, i32 0), i8* %117), !dbg !716
  br label %118, !dbg !716

; <label>:118:                                    ; preds = %113, %109
  %119 = getelementptr inbounds %struct.stat, %struct.stat* %19, i32 0, i32 4, !dbg !717
  %120 = load i32, i32* %119, align 4, !dbg !717
  store i32 %120, i32* %7, align 4, !dbg !718
  %121 = getelementptr inbounds %struct.stat, %struct.stat* %19, i32 0, i32 5, !dbg !719
  %122 = load i32, i32* %121, align 8, !dbg !719
  store i32 %122, i32* %8, align 4, !dbg !720
  %123 = getelementptr inbounds %struct.stat, %struct.stat* %19, i32 0, i32 4, !dbg !721
  %124 = load i32, i32* %123, align 4, !dbg !721
  %125 = call i8* @uid_to_name(i32 %124), !dbg !722
  %126 = getelementptr inbounds %struct.Chown_option, %struct.Chown_option* %13, i32 0, i32 5, !dbg !723
  store i8* %125, i8** %126, align 8, !dbg !724
  %127 = getelementptr inbounds %struct.stat, %struct.stat* %19, i32 0, i32 5, !dbg !725
  %128 = load i32, i32* %127, align 8, !dbg !725
  %129 = call i8* @gid_to_name(i32 %128), !dbg !726
  %130 = getelementptr inbounds %struct.Chown_option, %struct.Chown_option* %13, i32 0, i32 6, !dbg !727
  store i8* %129, i8** %130, align 8, !dbg !728
  br label %164, !dbg !729

; <label>:131:                                    ; preds = %106
  call void @llvm.dbg.declare(metadata i8** %20, metadata !730, metadata !DIExpression()), !dbg !732
  %132 = load i8**, i8*** %5, align 8, !dbg !733
  %133 = load i32, i32* @optind, align 4, !dbg !734
  %134 = sext i32 %133 to i64, !dbg !733
  %135 = getelementptr inbounds i8*, i8** %132, i64 %134, !dbg !733
  %136 = load i8*, i8** %135, align 8, !dbg !733
  %137 = getelementptr inbounds %struct.Chown_option, %struct.Chown_option* %13, i32 0, i32 5, !dbg !735
  %138 = getelementptr inbounds %struct.Chown_option, %struct.Chown_option* %13, i32 0, i32 6, !dbg !736
  %139 = call i8* @parse_user_spec(i8* %136, i32* %7, i32* %8, i8** %137, i8** %138), !dbg !737
  store i8* %139, i8** %20, align 8, !dbg !732
  %140 = load i8*, i8** %20, align 8, !dbg !738
  %141 = icmp ne i8* %140, null, !dbg !738
  br i1 %141, label %142, label %150, !dbg !740

; <label>:142:                                    ; preds = %131
  %143 = load i8*, i8** %20, align 8, !dbg !741
  %144 = load i8**, i8*** %5, align 8, !dbg !742
  %145 = load i32, i32* @optind, align 4, !dbg !743
  %146 = sext i32 %145 to i64, !dbg !742
  %147 = getelementptr inbounds i8*, i8** %144, i64 %146, !dbg !742
  %148 = load i8*, i8** %147, align 8, !dbg !742
  %149 = call i8* @quote(i8* %148), !dbg !744
  call void (i32, i32, i8*, ...) @error(i32 1, i32 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.14, i32 0, i32 0), i8* %143, i8* %149), !dbg !745
  br label %150, !dbg !745

; <label>:150:                                    ; preds = %142, %131
  %151 = getelementptr inbounds %struct.Chown_option, %struct.Chown_option* %13, i32 0, i32 5, !dbg !746
  %152 = load i8*, i8** %151, align 8, !dbg !746
  %153 = icmp ne i8* %152, null, !dbg !748
  br i1 %153, label %161, label %154, !dbg !749

; <label>:154:                                    ; preds = %150
  %155 = getelementptr inbounds %struct.Chown_option, %struct.Chown_option* %13, i32 0, i32 6, !dbg !750
  %156 = load i8*, i8** %155, align 8, !dbg !750
  %157 = icmp ne i8* %156, null, !dbg !751
  br i1 %157, label %158, label %161, !dbg !752

; <label>:158:                                    ; preds = %154
  %159 = call i8* @bad_cast(i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.12, i32 0, i32 0)), !dbg !753
  %160 = getelementptr inbounds %struct.Chown_option, %struct.Chown_option* %13, i32 0, i32 5, !dbg !754
  store i8* %159, i8** %160, align 8, !dbg !755
  br label %161, !dbg !756

; <label>:161:                                    ; preds = %158, %154, %150
  %162 = load i32, i32* @optind, align 4, !dbg !757
  %163 = add nsw i32 %162, 1, !dbg !757
  store i32 %163, i32* @optind, align 4, !dbg !757
  br label %164

; <label>:164:                                    ; preds = %161, %118
  %165 = getelementptr inbounds %struct.Chown_option, %struct.Chown_option* %13, i32 0, i32 1, !dbg !758
  %166 = load i8, i8* %165, align 4, !dbg !758
  %167 = trunc i8 %166 to i1, !dbg !758
  br i1 %167, label %168, label %182, !dbg !760

; <label>:168:                                    ; preds = %164
  %169 = load i8, i8* %6, align 1, !dbg !761
  %170 = trunc i8 %169 to i1, !dbg !761
  br i1 %170, label %171, label %182, !dbg !762

; <label>:171:                                    ; preds = %168
  %172 = call %struct.dev_ino* @get_root_dev_ino(%struct.dev_ino* @main.dev_ino_buf), !dbg !763
  %173 = getelementptr inbounds %struct.Chown_option, %struct.Chown_option* %13, i32 0, i32 2, !dbg !765
  store %struct.dev_ino* %172, %struct.dev_ino** %173, align 8, !dbg !766
  %174 = getelementptr inbounds %struct.Chown_option, %struct.Chown_option* %13, i32 0, i32 2, !dbg !767
  %175 = load %struct.dev_ino*, %struct.dev_ino** %174, align 8, !dbg !767
  %176 = icmp eq %struct.dev_ino* %175, null, !dbg !769
  br i1 %176, label %177, label %181, !dbg !770

; <label>:177:                                    ; preds = %171
  %178 = call i32* @__errno_location() #14, !dbg !771
  %179 = load i32, i32* %178, align 4, !dbg !771
  %180 = call i8* @quote(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.23, i32 0, i32 0)), !dbg !772
  call void (i32, i32, i8*, ...) @error(i32 1, i32 %179, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.22, i32 0, i32 0), i8* %180), !dbg !773
  br label %181, !dbg !773

; <label>:181:                                    ; preds = %177, %171
  br label %182, !dbg !774

; <label>:182:                                    ; preds = %181, %168, %164
  %183 = load i32, i32* %11, align 4, !dbg !775
  %184 = or i32 %183, 1024, !dbg !775
  store i32 %184, i32* %11, align 4, !dbg !775
  %185 = load i8**, i8*** %5, align 8, !dbg !776
  %186 = load i32, i32* @optind, align 4, !dbg !777
  %187 = sext i32 %186 to i64, !dbg !778
  %188 = getelementptr inbounds i8*, i8** %185, i64 %187, !dbg !778
  %189 = load i32, i32* %11, align 4, !dbg !779
  %190 = load i32, i32* %7, align 4, !dbg !780
  %191 = load i32, i32* %8, align 4, !dbg !781
  %192 = load i32, i32* %9, align 4, !dbg !782
  %193 = load i32, i32* %10, align 4, !dbg !783
  %194 = call zeroext i1 @chown_files(i8** %188, i32 %189, i32 %190, i32 %191, i32 %192, i32 %193, %struct.Chown_option* %13), !dbg !784
  %195 = zext i1 %194 to i8, !dbg !785
  store i8 %195, i8* %14, align 1, !dbg !785
  call void @chopt_free(%struct.Chown_option* %13), !dbg !786
  %196 = load i8, i8* %14, align 1, !dbg !787
  %197 = trunc i8 %196 to i1, !dbg !787
  %198 = zext i1 %197 to i64, !dbg !787
  %199 = select i1 %197, i32 0, i32 1, !dbg !787
  call void @exit(i32 %199) #11, !dbg !788
  unreachable, !dbg !788
                                                  ; No predecessors!
  %201 = load i32, i32* %3, align 4, !dbg !789
  ret i32 %201, !dbg !789
}

; Function Attrs: nounwind
declare i32 @atexit(void ()*) #5

; Function Attrs: nounwind
declare i32 @getopt_long(i32, i8**, i8*, %struct.option*, i32*) #5

declare void @error(i32, i32, i8*, ...) #2

; Function Attrs: nounwind
declare i32 @stat(i8*, %struct.stat*) #5

; Function Attrs: nounwind readnone
declare i32* @__errno_location() #7

; Function Attrs: noinline nounwind uwtable
define internal i8* @bad_cast(i8*) #3 !dbg !790 {
  %2 = alloca i8*, align 8
  store i8* %0, i8** %2, align 8
  call void @llvm.dbg.declare(metadata i8** %2, metadata !793, metadata !DIExpression()), !dbg !794
  %3 = load i8*, i8** %2, align 8, !dbg !795
  ret i8* %3, !dbg !796
}

; Function Attrs: noinline nounwind uwtable
define void @chopt_init(%struct.Chown_option*) #3 !dbg !797 {
  %2 = alloca %struct.Chown_option*, align 8
  store %struct.Chown_option* %0, %struct.Chown_option** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.Chown_option** %2, metadata !815, metadata !DIExpression()), !dbg !816
  %3 = load %struct.Chown_option*, %struct.Chown_option** %2, align 8, !dbg !817
  %4 = getelementptr inbounds %struct.Chown_option, %struct.Chown_option* %3, i32 0, i32 0, !dbg !818
  store i32 2, i32* %4, align 8, !dbg !819
  %5 = load %struct.Chown_option*, %struct.Chown_option** %2, align 8, !dbg !820
  %6 = getelementptr inbounds %struct.Chown_option, %struct.Chown_option* %5, i32 0, i32 2, !dbg !821
  store %struct.dev_ino* null, %struct.dev_ino** %6, align 8, !dbg !822
  %7 = load %struct.Chown_option*, %struct.Chown_option** %2, align 8, !dbg !823
  %8 = getelementptr inbounds %struct.Chown_option, %struct.Chown_option* %7, i32 0, i32 3, !dbg !824
  store i8 1, i8* %8, align 8, !dbg !825
  %9 = load %struct.Chown_option*, %struct.Chown_option** %2, align 8, !dbg !826
  %10 = getelementptr inbounds %struct.Chown_option, %struct.Chown_option* %9, i32 0, i32 1, !dbg !827
  store i8 0, i8* %10, align 4, !dbg !828
  %11 = load %struct.Chown_option*, %struct.Chown_option** %2, align 8, !dbg !829
  %12 = getelementptr inbounds %struct.Chown_option, %struct.Chown_option* %11, i32 0, i32 4, !dbg !830
  store i8 0, i8* %12, align 1, !dbg !831
  %13 = load %struct.Chown_option*, %struct.Chown_option** %2, align 8, !dbg !832
  %14 = getelementptr inbounds %struct.Chown_option, %struct.Chown_option* %13, i32 0, i32 5, !dbg !833
  store i8* null, i8** %14, align 8, !dbg !834
  %15 = load %struct.Chown_option*, %struct.Chown_option** %2, align 8, !dbg !835
  %16 = getelementptr inbounds %struct.Chown_option, %struct.Chown_option* %15, i32 0, i32 6, !dbg !836
  store i8* null, i8** %16, align 8, !dbg !837
  ret void, !dbg !838
}

; Function Attrs: noinline nounwind uwtable
define void @chopt_free(%struct.Chown_option*) #3 !dbg !839 {
  %2 = alloca %struct.Chown_option*, align 8
  store %struct.Chown_option* %0, %struct.Chown_option** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.Chown_option** %2, metadata !840, metadata !DIExpression()), !dbg !841
  ret void, !dbg !842
}

; Function Attrs: noinline nounwind uwtable
define i8* @gid_to_name(i32) #3 !dbg !843 {
  %2 = alloca i32, align 4
  %3 = alloca [21 x i8], align 16
  %4 = alloca %struct.group*, align 8
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !846, metadata !DIExpression()), !dbg !847
  call void @llvm.dbg.declare(metadata [21 x i8]* %3, metadata !848, metadata !DIExpression()), !dbg !852
  call void @llvm.dbg.declare(metadata %struct.group** %4, metadata !853, metadata !DIExpression()), !dbg !862
  %5 = load i32, i32* %2, align 4, !dbg !863
  %6 = call %struct.group* @getgrgid(i32 %5), !dbg !864
  store %struct.group* %6, %struct.group** %4, align 8, !dbg !862
  %7 = load %struct.group*, %struct.group** %4, align 8, !dbg !865
  %8 = icmp ne %struct.group* %7, null, !dbg !865
  br i1 %8, label %9, label %13, !dbg !865

; <label>:9:                                      ; preds = %1
  %10 = load %struct.group*, %struct.group** %4, align 8, !dbg !866
  %11 = getelementptr inbounds %struct.group, %struct.group* %10, i32 0, i32 0, !dbg !867
  %12 = load i8*, i8** %11, align 8, !dbg !867
  br label %18, !dbg !865

; <label>:13:                                     ; preds = %1
  %14 = load i32, i32* %2, align 4, !dbg !868
  %15 = zext i32 %14 to i64, !dbg !868
  %16 = getelementptr inbounds [21 x i8], [21 x i8]* %3, i32 0, i32 0, !dbg !869
  %17 = call i8* @umaxtostr(i64 %15, i8* %16), !dbg !870
  br label %18, !dbg !865

; <label>:18:                                     ; preds = %13, %9
  %19 = phi i8* [ %12, %9 ], [ %17, %13 ], !dbg !865
  %20 = call noalias i8* @xstrdup(i8* %19), !dbg !871
  ret i8* %20, !dbg !872
}

declare %struct.group* @getgrgid(i32) #2

; Function Attrs: noinline nounwind uwtable
define i8* @uid_to_name(i32) #3 !dbg !873 {
  %2 = alloca i32, align 4
  %3 = alloca [21 x i8], align 16
  %4 = alloca %struct.passwd*, align 8
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !876, metadata !DIExpression()), !dbg !877
  call void @llvm.dbg.declare(metadata [21 x i8]* %3, metadata !878, metadata !DIExpression()), !dbg !879
  call void @llvm.dbg.declare(metadata %struct.passwd** %4, metadata !880, metadata !DIExpression()), !dbg !892
  %5 = load i32, i32* %2, align 4, !dbg !893
  %6 = call %struct.passwd* @getpwuid(i32 %5), !dbg !894
  store %struct.passwd* %6, %struct.passwd** %4, align 8, !dbg !892
  %7 = load %struct.passwd*, %struct.passwd** %4, align 8, !dbg !895
  %8 = icmp ne %struct.passwd* %7, null, !dbg !895
  br i1 %8, label %9, label %13, !dbg !895

; <label>:9:                                      ; preds = %1
  %10 = load %struct.passwd*, %struct.passwd** %4, align 8, !dbg !896
  %11 = getelementptr inbounds %struct.passwd, %struct.passwd* %10, i32 0, i32 0, !dbg !897
  %12 = load i8*, i8** %11, align 8, !dbg !897
  br label %18, !dbg !895

; <label>:13:                                     ; preds = %1
  %14 = load i32, i32* %2, align 4, !dbg !898
  %15 = zext i32 %14 to i64, !dbg !898
  %16 = getelementptr inbounds [21 x i8], [21 x i8]* %3, i32 0, i32 0, !dbg !899
  %17 = call i8* @umaxtostr(i64 %15, i8* %16), !dbg !900
  br label %18, !dbg !895

; <label>:18:                                     ; preds = %13, %9
  %19 = phi i8* [ %12, %9 ], [ %17, %13 ], !dbg !895
  %20 = call noalias i8* @xstrdup(i8* %19), !dbg !901
  ret i8* %20, !dbg !902
}

declare %struct.passwd* @getpwuid(i32) #2

; Function Attrs: noinline nounwind uwtable
define zeroext i1 @chown_files(i8**, i32, i32, i32, i32, i32, %struct.Chown_option*) #3 !dbg !903 {
  %8 = alloca i8**, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca %struct.Chown_option*, align 8
  %15 = alloca i8, align 1
  %16 = alloca i32, align 4
  %17 = alloca %struct.FTS*, align 8
  %18 = alloca %struct._ftsent*, align 8
  store i8** %0, i8*** %8, align 8
  call void @llvm.dbg.declare(metadata i8*** %8, metadata !908, metadata !DIExpression()), !dbg !909
  store i32 %1, i32* %9, align 4
  call void @llvm.dbg.declare(metadata i32* %9, metadata !910, metadata !DIExpression()), !dbg !911
  store i32 %2, i32* %10, align 4
  call void @llvm.dbg.declare(metadata i32* %10, metadata !912, metadata !DIExpression()), !dbg !913
  store i32 %3, i32* %11, align 4
  call void @llvm.dbg.declare(metadata i32* %11, metadata !914, metadata !DIExpression()), !dbg !915
  store i32 %4, i32* %12, align 4
  call void @llvm.dbg.declare(metadata i32* %12, metadata !916, metadata !DIExpression()), !dbg !917
  store i32 %5, i32* %13, align 4
  call void @llvm.dbg.declare(metadata i32* %13, metadata !918, metadata !DIExpression()), !dbg !919
  store %struct.Chown_option* %6, %struct.Chown_option** %14, align 8
  call void @llvm.dbg.declare(metadata %struct.Chown_option** %14, metadata !920, metadata !DIExpression()), !dbg !921
  call void @llvm.dbg.declare(metadata i8* %15, metadata !922, metadata !DIExpression()), !dbg !923
  store i8 1, i8* %15, align 1, !dbg !923
  call void @llvm.dbg.declare(metadata i32* %16, metadata !924, metadata !DIExpression()), !dbg !925
  %19 = load i32, i32* %12, align 4, !dbg !926
  %20 = icmp ne i32 %19, -1, !dbg !927
  br i1 %20, label %34, label %21, !dbg !928

; <label>:21:                                     ; preds = %7
  %22 = load i32, i32* %13, align 4, !dbg !929
  %23 = icmp ne i32 %22, -1, !dbg !930
  br i1 %23, label %34, label %24, !dbg !931

; <label>:24:                                     ; preds = %21
  %25 = load %struct.Chown_option*, %struct.Chown_option** %14, align 8, !dbg !932
  %26 = getelementptr inbounds %struct.Chown_option, %struct.Chown_option* %25, i32 0, i32 3, !dbg !933
  %27 = load i8, i8* %26, align 8, !dbg !933
  %28 = trunc i8 %27 to i1, !dbg !933
  br i1 %28, label %34, label %29, !dbg !934

; <label>:29:                                     ; preds = %24
  %30 = load %struct.Chown_option*, %struct.Chown_option** %14, align 8, !dbg !935
  %31 = getelementptr inbounds %struct.Chown_option, %struct.Chown_option* %30, i32 0, i32 0, !dbg !936
  %32 = load i32, i32* %31, align 8, !dbg !936
  %33 = icmp ne i32 %32, 2, !dbg !937
  br label %34, !dbg !934

; <label>:34:                                     ; preds = %29, %24, %21, %7
  %35 = phi i1 [ true, %24 ], [ true, %21 ], [ true, %7 ], [ %33, %29 ]
  %36 = zext i1 %35 to i64, !dbg !938
  %37 = select i1 %35, i32 0, i32 8, !dbg !938
  store i32 %37, i32* %16, align 4, !dbg !925
  call void @llvm.dbg.declare(metadata %struct.FTS** %17, metadata !939, metadata !DIExpression()), !dbg !1031
  %38 = load i8**, i8*** %8, align 8, !dbg !1032
  %39 = load i32, i32* %9, align 4, !dbg !1033
  %40 = load i32, i32* %16, align 4, !dbg !1034
  %41 = or i32 %39, %40, !dbg !1035
  %42 = call %struct.FTS* @xfts_open(i8** %38, i32 %41, i32 (%struct._ftsent**, %struct._ftsent**)* null), !dbg !1036
  store %struct.FTS* %42, %struct.FTS** %17, align 8, !dbg !1031
  br label %43, !dbg !1037

; <label>:43:                                     ; preds = %34, %62
  call void @llvm.dbg.declare(metadata %struct._ftsent** %18, metadata !1038, metadata !DIExpression()), !dbg !1042
  %44 = load %struct.FTS*, %struct.FTS** %17, align 8, !dbg !1043
  %45 = call %struct._ftsent* @fts_read(%struct.FTS* %44), !dbg !1044
  store %struct._ftsent* %45, %struct._ftsent** %18, align 8, !dbg !1045
  %46 = load %struct._ftsent*, %struct._ftsent** %18, align 8, !dbg !1046
  %47 = icmp eq %struct._ftsent* %46, null, !dbg !1048
  br i1 %47, label %48, label %62, !dbg !1049

; <label>:48:                                     ; preds = %43
  %49 = call i32* @__errno_location() #14, !dbg !1050
  %50 = load i32, i32* %49, align 4, !dbg !1050
  %51 = icmp ne i32 %50, 0, !dbg !1053
  br i1 %51, label %52, label %61, !dbg !1054

; <label>:52:                                     ; preds = %48
  %53 = load %struct.Chown_option*, %struct.Chown_option** %14, align 8, !dbg !1055
  %54 = getelementptr inbounds %struct.Chown_option, %struct.Chown_option* %53, i32 0, i32 4, !dbg !1058
  %55 = load i8, i8* %54, align 1, !dbg !1058
  %56 = trunc i8 %55 to i1, !dbg !1058
  br i1 %56, label %60, label %57, !dbg !1059

; <label>:57:                                     ; preds = %52
  %58 = call i32* @__errno_location() #14, !dbg !1060
  %59 = load i32, i32* %58, align 4, !dbg !1060
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %59, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.45, i32 0, i32 0)), !dbg !1061
  br label %60, !dbg !1061

; <label>:60:                                     ; preds = %57, %52
  store i8 0, i8* %15, align 1, !dbg !1062
  br label %61, !dbg !1063

; <label>:61:                                     ; preds = %60, %48
  br label %78, !dbg !1064

; <label>:62:                                     ; preds = %43
  %63 = load %struct.FTS*, %struct.FTS** %17, align 8, !dbg !1065
  %64 = load %struct._ftsent*, %struct._ftsent** %18, align 8, !dbg !1066
  %65 = load i32, i32* %10, align 4, !dbg !1067
  %66 = load i32, i32* %11, align 4, !dbg !1068
  %67 = load i32, i32* %12, align 4, !dbg !1069
  %68 = load i32, i32* %13, align 4, !dbg !1070
  %69 = load %struct.Chown_option*, %struct.Chown_option** %14, align 8, !dbg !1071
  %70 = call zeroext i1 @change_file_owner(%struct.FTS* %63, %struct._ftsent* %64, i32 %65, i32 %66, i32 %67, i32 %68, %struct.Chown_option* %69), !dbg !1072
  %71 = zext i1 %70 to i32, !dbg !1072
  %72 = load i8, i8* %15, align 1, !dbg !1073
  %73 = trunc i8 %72 to i1, !dbg !1073
  %74 = zext i1 %73 to i32, !dbg !1073
  %75 = and i32 %74, %71, !dbg !1073
  %76 = icmp ne i32 %75, 0, !dbg !1073
  %77 = zext i1 %76 to i8, !dbg !1073
  store i8 %77, i8* %15, align 1, !dbg !1073
  br label %43, !dbg !1037, !llvm.loop !1074

; <label>:78:                                     ; preds = %61
  %79 = load %struct.FTS*, %struct.FTS** %17, align 8, !dbg !1076
  %80 = call i32 @fts_close(%struct.FTS* %79), !dbg !1078
  %81 = icmp ne i32 %80, 0, !dbg !1079
  br i1 %81, label %82, label %85, !dbg !1080

; <label>:82:                                     ; preds = %78
  %83 = call i32* @__errno_location() #14, !dbg !1081
  %84 = load i32, i32* %83, align 4, !dbg !1081
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %84, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.1.46, i32 0, i32 0)), !dbg !1083
  store i8 0, i8* %15, align 1, !dbg !1084
  br label %85, !dbg !1085

; <label>:85:                                     ; preds = %82, %78
  %86 = load i8, i8* %15, align 1, !dbg !1086
  %87 = trunc i8 %86 to i1, !dbg !1086
  ret i1 %87, !dbg !1087
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i1 @change_file_owner(%struct.FTS*, %struct._ftsent*, i32, i32, i32, i32, %struct.Chown_option*) #3 !dbg !1088 {
  %8 = alloca i1, align 1
  %9 = alloca %struct.FTS*, align 8
  %10 = alloca %struct._ftsent*, align 8
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca %struct.Chown_option*, align 8
  %16 = alloca i8*, align 8
  %17 = alloca i8*, align 8
  %18 = alloca %struct.stat*, align 8
  %19 = alloca %struct.stat, align 8
  %20 = alloca i8, align 1
  %21 = alloca i8, align 1
  %22 = alloca i8, align 1
  %23 = alloca i32, align 4
  %24 = alloca i8, align 1
  %25 = alloca i32, align 4
  store %struct.FTS* %0, %struct.FTS** %9, align 8
  call void @llvm.dbg.declare(metadata %struct.FTS** %9, metadata !1091, metadata !DIExpression()), !dbg !1092
  store %struct._ftsent* %1, %struct._ftsent** %10, align 8
  call void @llvm.dbg.declare(metadata %struct._ftsent** %10, metadata !1093, metadata !DIExpression()), !dbg !1094
  store i32 %2, i32* %11, align 4
  call void @llvm.dbg.declare(metadata i32* %11, metadata !1095, metadata !DIExpression()), !dbg !1096
  store i32 %3, i32* %12, align 4
  call void @llvm.dbg.declare(metadata i32* %12, metadata !1097, metadata !DIExpression()), !dbg !1098
  store i32 %4, i32* %13, align 4
  call void @llvm.dbg.declare(metadata i32* %13, metadata !1099, metadata !DIExpression()), !dbg !1100
  store i32 %5, i32* %14, align 4
  call void @llvm.dbg.declare(metadata i32* %14, metadata !1101, metadata !DIExpression()), !dbg !1102
  store %struct.Chown_option* %6, %struct.Chown_option** %15, align 8
  call void @llvm.dbg.declare(metadata %struct.Chown_option** %15, metadata !1103, metadata !DIExpression()), !dbg !1104
  call void @llvm.dbg.declare(metadata i8** %16, metadata !1105, metadata !DIExpression()), !dbg !1106
  %26 = load %struct._ftsent*, %struct._ftsent** %10, align 8, !dbg !1107
  %27 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %26, i32 0, i32 6, !dbg !1108
  %28 = load i8*, i8** %27, align 8, !dbg !1108
  store i8* %28, i8** %16, align 8, !dbg !1106
  call void @llvm.dbg.declare(metadata i8** %17, metadata !1109, metadata !DIExpression()), !dbg !1110
  %29 = load %struct._ftsent*, %struct._ftsent** %10, align 8, !dbg !1111
  %30 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %29, i32 0, i32 5, !dbg !1112
  %31 = load i8*, i8** %30, align 8, !dbg !1112
  store i8* %31, i8** %17, align 8, !dbg !1110
  call void @llvm.dbg.declare(metadata %struct.stat** %18, metadata !1113, metadata !DIExpression()), !dbg !1116
  call void @llvm.dbg.declare(metadata %struct.stat* %19, metadata !1117, metadata !DIExpression()), !dbg !1118
  call void @llvm.dbg.declare(metadata i8* %20, metadata !1119, metadata !DIExpression()), !dbg !1120
  store i8 1, i8* %20, align 1, !dbg !1120
  call void @llvm.dbg.declare(metadata i8* %21, metadata !1121, metadata !DIExpression()), !dbg !1122
  call void @llvm.dbg.declare(metadata i8* %22, metadata !1123, metadata !DIExpression()), !dbg !1124
  store i8 1, i8* %22, align 1, !dbg !1124
  %32 = load %struct._ftsent*, %struct._ftsent** %10, align 8, !dbg !1125
  %33 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %32, i32 0, i32 14, !dbg !1126
  %34 = load i16, i16* %33, align 8, !dbg !1126
  %35 = zext i16 %34 to i32, !dbg !1125
  switch i32 %35, label %161 [
    i32 1, label %36
    i32 6, label %92
    i32 10, label %99
    i32 7, label %127
    i32 4, label %139
    i32 2, label %151
  ], !dbg !1127

; <label>:36:                                     ; preds = %7
  %37 = load %struct.Chown_option*, %struct.Chown_option** %15, align 8, !dbg !1128
  %38 = getelementptr inbounds %struct.Chown_option, %struct.Chown_option* %37, i32 0, i32 1, !dbg !1131
  %39 = load i8, i8* %38, align 4, !dbg !1131
  %40 = trunc i8 %39 to i1, !dbg !1131
  br i1 %40, label %41, label %91, !dbg !1132

; <label>:41:                                     ; preds = %36
  %42 = load %struct.Chown_option*, %struct.Chown_option** %15, align 8, !dbg !1133
  %43 = getelementptr inbounds %struct.Chown_option, %struct.Chown_option* %42, i32 0, i32 2, !dbg !1133
  %44 = load %struct.dev_ino*, %struct.dev_ino** %43, align 8, !dbg !1133
  %45 = icmp ne %struct.dev_ino* %44, null, !dbg !1133
  br i1 %45, label %46, label %90, !dbg !1133

; <label>:46:                                     ; preds = %41
  %47 = load %struct._ftsent*, %struct._ftsent** %10, align 8, !dbg !1133
  %48 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %47, i32 0, i32 17, !dbg !1133
  %49 = getelementptr inbounds [1 x %struct.stat], [1 x %struct.stat]* %48, i32 0, i32 0, !dbg !1133
  %50 = getelementptr inbounds %struct.stat, %struct.stat* %49, i32 0, i32 1, !dbg !1133
  %51 = load i64, i64* %50, align 8, !dbg !1133
  %52 = load %struct.Chown_option*, %struct.Chown_option** %15, align 8, !dbg !1133
  %53 = getelementptr inbounds %struct.Chown_option, %struct.Chown_option* %52, i32 0, i32 2, !dbg !1133
  %54 = load %struct.dev_ino*, %struct.dev_ino** %53, align 8, !dbg !1133
  %55 = getelementptr inbounds %struct.dev_ino, %struct.dev_ino* %54, i32 0, i32 0, !dbg !1133
  %56 = load i64, i64* %55, align 8, !dbg !1133
  %57 = icmp eq i64 %51, %56, !dbg !1133
  br i1 %57, label %58, label %90, !dbg !1133

; <label>:58:                                     ; preds = %46
  %59 = load %struct._ftsent*, %struct._ftsent** %10, align 8, !dbg !1133
  %60 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %59, i32 0, i32 17, !dbg !1133
  %61 = getelementptr inbounds [1 x %struct.stat], [1 x %struct.stat]* %60, i32 0, i32 0, !dbg !1133
  %62 = getelementptr inbounds %struct.stat, %struct.stat* %61, i32 0, i32 0, !dbg !1133
  %63 = load i64, i64* %62, align 8, !dbg !1133
  %64 = load %struct.Chown_option*, %struct.Chown_option** %15, align 8, !dbg !1133
  %65 = getelementptr inbounds %struct.Chown_option, %struct.Chown_option* %64, i32 0, i32 2, !dbg !1133
  %66 = load %struct.dev_ino*, %struct.dev_ino** %65, align 8, !dbg !1133
  %67 = getelementptr inbounds %struct.dev_ino, %struct.dev_ino* %66, i32 0, i32 1, !dbg !1133
  %68 = load i64, i64* %67, align 8, !dbg !1133
  %69 = icmp eq i64 %63, %68, !dbg !1133
  br i1 %69, label %70, label %90, !dbg !1136

; <label>:70:                                     ; preds = %58
  br label %71, !dbg !1137, !llvm.loop !1139

; <label>:71:                                     ; preds = %70
  %72 = load i8*, i8** %16, align 8, !dbg !1140
  %73 = call i32 @strcmp(i8* %72, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.47, i32 0, i32 0)) #12, !dbg !1140
  %74 = icmp eq i32 %73, 0, !dbg !1140
  br i1 %74, label %75, label %78, !dbg !1143

; <label>:75:                                     ; preds = %71
  %76 = load i8*, i8** %16, align 8, !dbg !1140
  %77 = call i8* @quote(i8* %76), !dbg !1140
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.3.48, i32 0, i32 0), i8* %77), !dbg !1140
  br label %82, !dbg !1140

; <label>:78:                                     ; preds = %71
  %79 = load i8*, i8** %16, align 8, !dbg !1140
  %80 = call i8* @quote_n(i32 0, i8* %79), !dbg !1140
  %81 = call i8* @quote_n(i32 1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.47, i32 0, i32 0)), !dbg !1140
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.4.49, i32 0, i32 0), i8* %80, i8* %81), !dbg !1140
  br label %82

; <label>:82:                                     ; preds = %78, %75
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.5.50, i32 0, i32 0)), !dbg !1143
  br label %83, !dbg !1143

; <label>:83:                                     ; preds = %82
  %84 = load %struct.FTS*, %struct.FTS** %9, align 8, !dbg !1144
  %85 = load %struct._ftsent*, %struct._ftsent** %10, align 8, !dbg !1145
  %86 = call i32 @fts_set(%struct.FTS* %84, %struct._ftsent* %85, i32 4), !dbg !1146
  %87 = load %struct.FTS*, %struct.FTS** %9, align 8, !dbg !1147
  %88 = call %struct._ftsent* @fts_read(%struct.FTS* %87), !dbg !1148
  %89 = bitcast %struct._ftsent* %88 to i8*, !dbg !1148
  call void @ignore_ptr(i8* %89), !dbg !1149
  store i1 false, i1* %8, align 1, !dbg !1150
  br label %477, !dbg !1150

; <label>:90:                                     ; preds = %58, %46, %41
  store i1 true, i1* %8, align 1, !dbg !1151
  br label %477, !dbg !1151

; <label>:91:                                     ; preds = %36
  br label %162, !dbg !1152

; <label>:92:                                     ; preds = %7
  %93 = load %struct.Chown_option*, %struct.Chown_option** %15, align 8, !dbg !1153
  %94 = getelementptr inbounds %struct.Chown_option, %struct.Chown_option* %93, i32 0, i32 1, !dbg !1155
  %95 = load i8, i8* %94, align 4, !dbg !1155
  %96 = trunc i8 %95 to i1, !dbg !1155
  br i1 %96, label %98, label %97, !dbg !1156

; <label>:97:                                     ; preds = %92
  store i1 true, i1* %8, align 1, !dbg !1157
  br label %477, !dbg !1157

; <label>:98:                                     ; preds = %92
  br label %162, !dbg !1158

; <label>:99:                                     ; preds = %7
  %100 = load %struct._ftsent*, %struct._ftsent** %10, align 8, !dbg !1159
  %101 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %100, i32 0, i32 11, !dbg !1161
  %102 = load i64, i64* %101, align 8, !dbg !1161
  %103 = icmp eq i64 %102, 0, !dbg !1162
  br i1 %103, label %104, label %115, !dbg !1163

; <label>:104:                                    ; preds = %99
  %105 = load %struct._ftsent*, %struct._ftsent** %10, align 8, !dbg !1164
  %106 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %105, i32 0, i32 3, !dbg !1165
  %107 = load i64, i64* %106, align 8, !dbg !1165
  %108 = icmp eq i64 %107, 0, !dbg !1166
  br i1 %108, label %109, label %115, !dbg !1167

; <label>:109:                                    ; preds = %104
  %110 = load %struct._ftsent*, %struct._ftsent** %10, align 8, !dbg !1168
  %111 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %110, i32 0, i32 3, !dbg !1170
  store i64 1, i64* %111, align 8, !dbg !1171
  %112 = load %struct.FTS*, %struct.FTS** %9, align 8, !dbg !1172
  %113 = load %struct._ftsent*, %struct._ftsent** %10, align 8, !dbg !1173
  %114 = call i32 @fts_set(%struct.FTS* %112, %struct._ftsent* %113, i32 1), !dbg !1174
  store i1 true, i1* %8, align 1, !dbg !1175
  br label %477, !dbg !1175

; <label>:115:                                    ; preds = %104, %99
  %116 = load %struct.Chown_option*, %struct.Chown_option** %15, align 8, !dbg !1176
  %117 = getelementptr inbounds %struct.Chown_option, %struct.Chown_option* %116, i32 0, i32 4, !dbg !1178
  %118 = load i8, i8* %117, align 1, !dbg !1178
  %119 = trunc i8 %118 to i1, !dbg !1178
  br i1 %119, label %126, label %120, !dbg !1179

; <label>:120:                                    ; preds = %115
  %121 = load %struct._ftsent*, %struct._ftsent** %10, align 8, !dbg !1180
  %122 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %121, i32 0, i32 7, !dbg !1181
  %123 = load i32, i32* %122, align 8, !dbg !1181
  %124 = load i8*, i8** %16, align 8, !dbg !1182
  %125 = call i8* @quote(i8* %124), !dbg !1183
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %123, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.6.51, i32 0, i32 0), i8* %125), !dbg !1184
  br label %126, !dbg !1184

; <label>:126:                                    ; preds = %120, %115
  store i8 0, i8* %20, align 1, !dbg !1185
  br label %162, !dbg !1186

; <label>:127:                                    ; preds = %7
  %128 = load %struct.Chown_option*, %struct.Chown_option** %15, align 8, !dbg !1187
  %129 = getelementptr inbounds %struct.Chown_option, %struct.Chown_option* %128, i32 0, i32 4, !dbg !1189
  %130 = load i8, i8* %129, align 1, !dbg !1189
  %131 = trunc i8 %130 to i1, !dbg !1189
  br i1 %131, label %138, label %132, !dbg !1190

; <label>:132:                                    ; preds = %127
  %133 = load %struct._ftsent*, %struct._ftsent** %10, align 8, !dbg !1191
  %134 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %133, i32 0, i32 7, !dbg !1192
  %135 = load i32, i32* %134, align 8, !dbg !1192
  %136 = load i8*, i8** %16, align 8, !dbg !1193
  %137 = call i8* @quote(i8* %136), !dbg !1194
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %135, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.7.52, i32 0, i32 0), i8* %137), !dbg !1195
  br label %138, !dbg !1195

; <label>:138:                                    ; preds = %132, %127
  store i8 0, i8* %20, align 1, !dbg !1196
  br label %162, !dbg !1197

; <label>:139:                                    ; preds = %7
  %140 = load %struct.Chown_option*, %struct.Chown_option** %15, align 8, !dbg !1198
  %141 = getelementptr inbounds %struct.Chown_option, %struct.Chown_option* %140, i32 0, i32 4, !dbg !1200
  %142 = load i8, i8* %141, align 1, !dbg !1200
  %143 = trunc i8 %142 to i1, !dbg !1200
  br i1 %143, label %150, label %144, !dbg !1201

; <label>:144:                                    ; preds = %139
  %145 = load %struct._ftsent*, %struct._ftsent** %10, align 8, !dbg !1202
  %146 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %145, i32 0, i32 7, !dbg !1203
  %147 = load i32, i32* %146, align 8, !dbg !1203
  %148 = load i8*, i8** %16, align 8, !dbg !1204
  %149 = call i8* @quote(i8* %148), !dbg !1205
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %147, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.8.53, i32 0, i32 0), i8* %149), !dbg !1206
  br label %150, !dbg !1206

; <label>:150:                                    ; preds = %144, %139
  store i8 0, i8* %20, align 1, !dbg !1207
  br label %162, !dbg !1208

; <label>:151:                                    ; preds = %7
  %152 = load %struct.FTS*, %struct.FTS** %9, align 8, !dbg !1209
  %153 = load %struct._ftsent*, %struct._ftsent** %10, align 8, !dbg !1211
  %154 = call zeroext i1 @cycle_warning_required(%struct.FTS* %152, %struct._ftsent* %153), !dbg !1212
  br i1 %154, label %155, label %160, !dbg !1213

; <label>:155:                                    ; preds = %151
  br label %156, !dbg !1214, !llvm.loop !1216

; <label>:156:                                    ; preds = %155
  %157 = load i8*, i8** %16, align 8, !dbg !1217
  %158 = call i8* @quote(i8* %157), !dbg !1217
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* getelementptr inbounds ([186 x i8], [186 x i8]* @.str.9.54, i32 0, i32 0), i8* %158), !dbg !1217
  br label %159, !dbg !1217

; <label>:159:                                    ; preds = %156
  store i1 false, i1* %8, align 1, !dbg !1219
  br label %477, !dbg !1219

; <label>:160:                                    ; preds = %151
  br label %162, !dbg !1220

; <label>:161:                                    ; preds = %7
  br label %162, !dbg !1221

; <label>:162:                                    ; preds = %161, %160, %150, %138, %126, %98, %91
  %163 = load i8, i8* %20, align 1, !dbg !1222
  %164 = trunc i8 %163 to i1, !dbg !1222
  br i1 %164, label %166, label %165, !dbg !1224

; <label>:165:                                    ; preds = %162
  store i8 0, i8* %21, align 1, !dbg !1225
  store %struct.stat* null, %struct.stat** %18, align 8, !dbg !1227
  br label %251, !dbg !1228

; <label>:166:                                    ; preds = %162
  %167 = load i32, i32* %13, align 4, !dbg !1229
  %168 = icmp eq i32 %167, -1, !dbg !1231
  br i1 %168, label %169, label %191, !dbg !1232

; <label>:169:                                    ; preds = %166
  %170 = load i32, i32* %14, align 4, !dbg !1233
  %171 = icmp eq i32 %170, -1, !dbg !1234
  br i1 %171, label %172, label %191, !dbg !1235

; <label>:172:                                    ; preds = %169
  %173 = load %struct.Chown_option*, %struct.Chown_option** %15, align 8, !dbg !1236
  %174 = getelementptr inbounds %struct.Chown_option, %struct.Chown_option* %173, i32 0, i32 0, !dbg !1237
  %175 = load i32, i32* %174, align 8, !dbg !1237
  %176 = icmp eq i32 %175, 2, !dbg !1238
  br i1 %176, label %177, label %191, !dbg !1239

; <label>:177:                                    ; preds = %172
  %178 = load %struct.Chown_option*, %struct.Chown_option** %15, align 8, !dbg !1240
  %179 = getelementptr inbounds %struct.Chown_option, %struct.Chown_option* %178, i32 0, i32 2, !dbg !1241
  %180 = load %struct.dev_ino*, %struct.dev_ino** %179, align 8, !dbg !1241
  %181 = icmp ne %struct.dev_ino* %180, null, !dbg !1240
  br i1 %181, label %191, label %182, !dbg !1242

; <label>:182:                                    ; preds = %177
  %183 = load %struct.Chown_option*, %struct.Chown_option** %15, align 8, !dbg !1243
  %184 = getelementptr inbounds %struct.Chown_option, %struct.Chown_option* %183, i32 0, i32 3, !dbg !1244
  %185 = load i8, i8* %184, align 8, !dbg !1244
  %186 = trunc i8 %185 to i1, !dbg !1244
  br i1 %186, label %191, label %187, !dbg !1245

; <label>:187:                                    ; preds = %182
  store i8 1, i8* %21, align 1, !dbg !1246
  %188 = load %struct._ftsent*, %struct._ftsent** %10, align 8, !dbg !1248
  %189 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %188, i32 0, i32 17, !dbg !1249
  %190 = getelementptr inbounds [1 x %struct.stat], [1 x %struct.stat]* %189, i32 0, i32 0, !dbg !1248
  store %struct.stat* %190, %struct.stat** %18, align 8, !dbg !1250
  br label %250, !dbg !1251

; <label>:191:                                    ; preds = %182, %177, %172, %169, %166
  %192 = load %struct._ftsent*, %struct._ftsent** %10, align 8, !dbg !1252
  %193 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %192, i32 0, i32 17, !dbg !1254
  %194 = getelementptr inbounds [1 x %struct.stat], [1 x %struct.stat]* %193, i32 0, i32 0, !dbg !1252
  store %struct.stat* %194, %struct.stat** %18, align 8, !dbg !1255
  %195 = load %struct.Chown_option*, %struct.Chown_option** %15, align 8, !dbg !1256
  %196 = getelementptr inbounds %struct.Chown_option, %struct.Chown_option* %195, i32 0, i32 3, !dbg !1258
  %197 = load i8, i8* %196, align 8, !dbg !1258
  %198 = trunc i8 %197 to i1, !dbg !1258
  br i1 %198, label %199, label %224, !dbg !1259

; <label>:199:                                    ; preds = %191
  %200 = load %struct.stat*, %struct.stat** %18, align 8, !dbg !1260
  %201 = getelementptr inbounds %struct.stat, %struct.stat* %200, i32 0, i32 3, !dbg !1260
  %202 = load i32, i32* %201, align 8, !dbg !1260
  %203 = and i32 %202, 61440, !dbg !1260
  %204 = icmp eq i32 %203, 40960, !dbg !1260
  br i1 %204, label %205, label %224, !dbg !1261

; <label>:205:                                    ; preds = %199
  %206 = load %struct.FTS*, %struct.FTS** %9, align 8, !dbg !1262
  %207 = getelementptr inbounds %struct.FTS, %struct.FTS* %206, i32 0, i32 6, !dbg !1265
  %208 = load i32, i32* %207, align 4, !dbg !1265
  %209 = load i8*, i8** %17, align 8, !dbg !1266
  %210 = call i32 @fstatat(i32 %208, i8* %209, %struct.stat* %19, i32 0) #8, !dbg !1267
  %211 = icmp ne i32 %210, 0, !dbg !1268
  br i1 %211, label %212, label %223, !dbg !1269

; <label>:212:                                    ; preds = %205
  %213 = load %struct.Chown_option*, %struct.Chown_option** %15, align 8, !dbg !1270
  %214 = getelementptr inbounds %struct.Chown_option, %struct.Chown_option* %213, i32 0, i32 4, !dbg !1273
  %215 = load i8, i8* %214, align 1, !dbg !1273
  %216 = trunc i8 %215 to i1, !dbg !1273
  br i1 %216, label %222, label %217, !dbg !1274

; <label>:217:                                    ; preds = %212
  %218 = call i32* @__errno_location() #14, !dbg !1275
  %219 = load i32, i32* %218, align 4, !dbg !1275
  %220 = load i8*, i8** %16, align 8, !dbg !1276
  %221 = call i8* @quote(i8* %220), !dbg !1277
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %219, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.10.55, i32 0, i32 0), i8* %221), !dbg !1278
  br label %222, !dbg !1278

; <label>:222:                                    ; preds = %217, %212
  store i8 0, i8* %20, align 1, !dbg !1279
  br label %223, !dbg !1280

; <label>:223:                                    ; preds = %222, %205
  store %struct.stat* %19, %struct.stat** %18, align 8, !dbg !1281
  br label %224, !dbg !1282

; <label>:224:                                    ; preds = %223, %199, %191
  %225 = load i8, i8* %20, align 1, !dbg !1283
  %226 = trunc i8 %225 to i1, !dbg !1283
  br i1 %226, label %227, label %247, !dbg !1284

; <label>:227:                                    ; preds = %224
  %228 = load i32, i32* %13, align 4, !dbg !1285
  %229 = icmp eq i32 %228, -1, !dbg !1286
  br i1 %229, label %236, label %230, !dbg !1287

; <label>:230:                                    ; preds = %227
  %231 = load i32, i32* %13, align 4, !dbg !1288
  %232 = load %struct.stat*, %struct.stat** %18, align 8, !dbg !1289
  %233 = getelementptr inbounds %struct.stat, %struct.stat* %232, i32 0, i32 4, !dbg !1290
  %234 = load i32, i32* %233, align 4, !dbg !1290
  %235 = icmp eq i32 %231, %234, !dbg !1291
  br i1 %235, label %236, label %247, !dbg !1292

; <label>:236:                                    ; preds = %230, %227
  %237 = load i32, i32* %14, align 4, !dbg !1293
  %238 = icmp eq i32 %237, -1, !dbg !1294
  br i1 %238, label %245, label %239, !dbg !1295

; <label>:239:                                    ; preds = %236
  %240 = load i32, i32* %14, align 4, !dbg !1296
  %241 = load %struct.stat*, %struct.stat** %18, align 8, !dbg !1297
  %242 = getelementptr inbounds %struct.stat, %struct.stat* %241, i32 0, i32 5, !dbg !1298
  %243 = load i32, i32* %242, align 8, !dbg !1298
  %244 = icmp eq i32 %240, %243, !dbg !1299
  br label %245, !dbg !1295

; <label>:245:                                    ; preds = %239, %236
  %246 = phi i1 [ true, %236 ], [ %244, %239 ]
  br label %247

; <label>:247:                                    ; preds = %245, %230, %224
  %248 = phi i1 [ false, %230 ], [ false, %224 ], [ %246, %245 ]
  %249 = zext i1 %248 to i8, !dbg !1300
  store i8 %249, i8* %21, align 1, !dbg !1300
  br label %250

; <label>:250:                                    ; preds = %247, %187
  br label %251

; <label>:251:                                    ; preds = %250, %165
  %252 = load i8, i8* %20, align 1, !dbg !1301
  %253 = trunc i8 %252 to i1, !dbg !1301
  br i1 %253, label %254, label %317, !dbg !1303

; <label>:254:                                    ; preds = %251
  %255 = load %struct._ftsent*, %struct._ftsent** %10, align 8, !dbg !1304
  %256 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %255, i32 0, i32 14, !dbg !1304
  %257 = load i16, i16* %256, align 8, !dbg !1304
  %258 = zext i16 %257 to i32, !dbg !1304
  %259 = icmp eq i32 %258, 1, !dbg !1304
  br i1 %259, label %278, label %260, !dbg !1304

; <label>:260:                                    ; preds = %254
  %261 = load %struct._ftsent*, %struct._ftsent** %10, align 8, !dbg !1304
  %262 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %261, i32 0, i32 14, !dbg !1304
  %263 = load i16, i16* %262, align 8, !dbg !1304
  %264 = zext i16 %263 to i32, !dbg !1304
  %265 = icmp eq i32 %264, 2, !dbg !1304
  br i1 %265, label %278, label %266, !dbg !1304

; <label>:266:                                    ; preds = %260
  %267 = load %struct._ftsent*, %struct._ftsent** %10, align 8, !dbg !1304
  %268 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %267, i32 0, i32 14, !dbg !1304
  %269 = load i16, i16* %268, align 8, !dbg !1304
  %270 = zext i16 %269 to i32, !dbg !1304
  %271 = icmp eq i32 %270, 6, !dbg !1304
  br i1 %271, label %278, label %272, !dbg !1304

; <label>:272:                                    ; preds = %266
  %273 = load %struct._ftsent*, %struct._ftsent** %10, align 8, !dbg !1304
  %274 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %273, i32 0, i32 14, !dbg !1304
  %275 = load i16, i16* %274, align 8, !dbg !1304
  %276 = zext i16 %275 to i32, !dbg !1304
  %277 = icmp eq i32 %276, 4, !dbg !1304
  br i1 %277, label %278, label %317, !dbg !1305

; <label>:278:                                    ; preds = %272, %266, %260, %254
  %279 = load %struct.Chown_option*, %struct.Chown_option** %15, align 8, !dbg !1306
  %280 = getelementptr inbounds %struct.Chown_option, %struct.Chown_option* %279, i32 0, i32 2, !dbg !1306
  %281 = load %struct.dev_ino*, %struct.dev_ino** %280, align 8, !dbg !1306
  %282 = icmp ne %struct.dev_ino* %281, null, !dbg !1306
  br i1 %282, label %283, label %317, !dbg !1306

; <label>:283:                                    ; preds = %278
  %284 = load %struct.stat*, %struct.stat** %18, align 8, !dbg !1306
  %285 = getelementptr inbounds %struct.stat, %struct.stat* %284, i32 0, i32 1, !dbg !1306
  %286 = load i64, i64* %285, align 8, !dbg !1306
  %287 = load %struct.Chown_option*, %struct.Chown_option** %15, align 8, !dbg !1306
  %288 = getelementptr inbounds %struct.Chown_option, %struct.Chown_option* %287, i32 0, i32 2, !dbg !1306
  %289 = load %struct.dev_ino*, %struct.dev_ino** %288, align 8, !dbg !1306
  %290 = getelementptr inbounds %struct.dev_ino, %struct.dev_ino* %289, i32 0, i32 0, !dbg !1306
  %291 = load i64, i64* %290, align 8, !dbg !1306
  %292 = icmp eq i64 %286, %291, !dbg !1306
  br i1 %292, label %293, label %317, !dbg !1306

; <label>:293:                                    ; preds = %283
  %294 = load %struct.stat*, %struct.stat** %18, align 8, !dbg !1306
  %295 = getelementptr inbounds %struct.stat, %struct.stat* %294, i32 0, i32 0, !dbg !1306
  %296 = load i64, i64* %295, align 8, !dbg !1306
  %297 = load %struct.Chown_option*, %struct.Chown_option** %15, align 8, !dbg !1306
  %298 = getelementptr inbounds %struct.Chown_option, %struct.Chown_option* %297, i32 0, i32 2, !dbg !1306
  %299 = load %struct.dev_ino*, %struct.dev_ino** %298, align 8, !dbg !1306
  %300 = getelementptr inbounds %struct.dev_ino, %struct.dev_ino* %299, i32 0, i32 1, !dbg !1306
  %301 = load i64, i64* %300, align 8, !dbg !1306
  %302 = icmp eq i64 %296, %301, !dbg !1306
  br i1 %302, label %303, label %317, !dbg !1307

; <label>:303:                                    ; preds = %293
  br label %304, !dbg !1308, !llvm.loop !1310

; <label>:304:                                    ; preds = %303
  %305 = load i8*, i8** %16, align 8, !dbg !1311
  %306 = call i32 @strcmp(i8* %305, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.47, i32 0, i32 0)) #12, !dbg !1311
  %307 = icmp eq i32 %306, 0, !dbg !1311
  br i1 %307, label %308, label %311, !dbg !1314

; <label>:308:                                    ; preds = %304
  %309 = load i8*, i8** %16, align 8, !dbg !1311
  %310 = call i8* @quote(i8* %309), !dbg !1311
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.3.48, i32 0, i32 0), i8* %310), !dbg !1311
  br label %315, !dbg !1311

; <label>:311:                                    ; preds = %304
  %312 = load i8*, i8** %16, align 8, !dbg !1311
  %313 = call i8* @quote_n(i32 0, i8* %312), !dbg !1311
  %314 = call i8* @quote_n(i32 1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.47, i32 0, i32 0)), !dbg !1311
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.4.49, i32 0, i32 0), i8* %313, i8* %314), !dbg !1311
  br label %315

; <label>:315:                                    ; preds = %311, %308
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.5.50, i32 0, i32 0)), !dbg !1314
  br label %316, !dbg !1314

; <label>:316:                                    ; preds = %315
  store i1 false, i1* %8, align 1, !dbg !1315
  br label %477, !dbg !1315

; <label>:317:                                    ; preds = %293, %283, %278, %272, %251
  %318 = load i8, i8* %21, align 1, !dbg !1316
  %319 = trunc i8 %318 to i1, !dbg !1316
  br i1 %319, label %320, label %391, !dbg !1318

; <label>:320:                                    ; preds = %317
  %321 = load %struct.Chown_option*, %struct.Chown_option** %15, align 8, !dbg !1319
  %322 = getelementptr inbounds %struct.Chown_option, %struct.Chown_option* %321, i32 0, i32 3, !dbg !1322
  %323 = load i8, i8* %322, align 8, !dbg !1322
  %324 = trunc i8 %323 to i1, !dbg !1322
  br i1 %324, label %343, label %325, !dbg !1323

; <label>:325:                                    ; preds = %320
  %326 = load %struct.FTS*, %struct.FTS** %9, align 8, !dbg !1324
  %327 = getelementptr inbounds %struct.FTS, %struct.FTS* %326, i32 0, i32 6, !dbg !1326
  %328 = load i32, i32* %327, align 4, !dbg !1326
  %329 = load i8*, i8** %17, align 8, !dbg !1327
  %330 = load i32, i32* %11, align 4, !dbg !1328
  %331 = load i32, i32* %12, align 4, !dbg !1329
  %332 = call i32 @lchownat(i32 %328, i8* %329, i32 %330, i32 %331), !dbg !1330
  %333 = icmp eq i32 %332, 0, !dbg !1331
  %334 = zext i1 %333 to i8, !dbg !1332
  store i8 %334, i8* %20, align 1, !dbg !1332
  %335 = load i8, i8* %20, align 1, !dbg !1333
  %336 = trunc i8 %335 to i1, !dbg !1333
  br i1 %336, label %342, label %337, !dbg !1335

; <label>:337:                                    ; preds = %325
  %338 = call i32* @__errno_location() #14, !dbg !1336
  %339 = load i32, i32* %338, align 4, !dbg !1336
  %340 = icmp eq i32 %339, 95, !dbg !1337
  br i1 %340, label %341, label %342, !dbg !1338

; <label>:341:                                    ; preds = %337
  store i8 1, i8* %20, align 1, !dbg !1339
  store i8 0, i8* %22, align 1, !dbg !1341
  br label %342, !dbg !1342

; <label>:342:                                    ; preds = %341, %337, %325
  br label %370, !dbg !1343

; <label>:343:                                    ; preds = %320
  call void @llvm.dbg.declare(metadata i32* %23, metadata !1344, metadata !DIExpression()), !dbg !1346
  %344 = load %struct.FTS*, %struct.FTS** %9, align 8, !dbg !1347
  %345 = getelementptr inbounds %struct.FTS, %struct.FTS* %344, i32 0, i32 6, !dbg !1348
  %346 = load i32, i32* %345, align 4, !dbg !1348
  %347 = load i8*, i8** %17, align 8, !dbg !1349
  %348 = load %struct.stat*, %struct.stat** %18, align 8, !dbg !1350
  %349 = load i32, i32* %11, align 4, !dbg !1351
  %350 = load i32, i32* %12, align 4, !dbg !1352
  %351 = load i32, i32* %13, align 4, !dbg !1353
  %352 = load i32, i32* %14, align 4, !dbg !1354
  %353 = call i32 @restricted_chown(i32 %346, i8* %347, %struct.stat* %348, i32 %349, i32 %350, i32 %351, i32 %352), !dbg !1355
  store i32 %353, i32* %23, align 4, !dbg !1346
  %354 = load i32, i32* %23, align 4, !dbg !1356
  switch i32 %354, label %368 [
    i32 2, label %355
    i32 5, label %356
    i32 6, label %366
    i32 4, label %367
    i32 3, label %367
  ], !dbg !1357

; <label>:355:                                    ; preds = %343
  br label %369, !dbg !1358

; <label>:356:                                    ; preds = %343
  %357 = load %struct.FTS*, %struct.FTS** %9, align 8, !dbg !1360
  %358 = getelementptr inbounds %struct.FTS, %struct.FTS* %357, i32 0, i32 6, !dbg !1361
  %359 = load i32, i32* %358, align 4, !dbg !1361
  %360 = load i8*, i8** %17, align 8, !dbg !1362
  %361 = load i32, i32* %11, align 4, !dbg !1363
  %362 = load i32, i32* %12, align 4, !dbg !1364
  %363 = call i32 @chownat(i32 %359, i8* %360, i32 %361, i32 %362), !dbg !1365
  %364 = icmp eq i32 %363, 0, !dbg !1366
  %365 = zext i1 %364 to i8, !dbg !1367
  store i8 %365, i8* %20, align 1, !dbg !1367
  br label %369, !dbg !1368

; <label>:366:                                    ; preds = %343
  store i8 0, i8* %20, align 1, !dbg !1369
  br label %369, !dbg !1370

; <label>:367:                                    ; preds = %343, %343
  store i8 0, i8* %21, align 1, !dbg !1371
  store i8 0, i8* %20, align 1, !dbg !1372
  br label %369, !dbg !1373

; <label>:368:                                    ; preds = %343
  call void @abort() #11, !dbg !1374
  unreachable, !dbg !1374

; <label>:369:                                    ; preds = %367, %366, %356, %355
  br label %370

; <label>:370:                                    ; preds = %369, %342
  %371 = load i8, i8* %21, align 1, !dbg !1375
  %372 = trunc i8 %371 to i1, !dbg !1375
  br i1 %372, label %373, label %390, !dbg !1377

; <label>:373:                                    ; preds = %370
  %374 = load i8, i8* %20, align 1, !dbg !1378
  %375 = trunc i8 %374 to i1, !dbg !1378
  br i1 %375, label %390, label %376, !dbg !1379

; <label>:376:                                    ; preds = %373
  %377 = load %struct.Chown_option*, %struct.Chown_option** %15, align 8, !dbg !1380
  %378 = getelementptr inbounds %struct.Chown_option, %struct.Chown_option* %377, i32 0, i32 4, !dbg !1381
  %379 = load i8, i8* %378, align 1, !dbg !1381
  %380 = trunc i8 %379 to i1, !dbg !1381
  br i1 %380, label %390, label %381, !dbg !1382

; <label>:381:                                    ; preds = %376
  %382 = call i32* @__errno_location() #14, !dbg !1383
  %383 = load i32, i32* %382, align 4, !dbg !1383
  %384 = load i32, i32* %11, align 4, !dbg !1384
  %385 = icmp ne i32 %384, -1, !dbg !1385
  %386 = zext i1 %385 to i64, !dbg !1384
  %387 = select i1 %385, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.11.56, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.12.57, i32 0, i32 0), !dbg !1384
  %388 = load i8*, i8** %16, align 8, !dbg !1386
  %389 = call i8* @quote(i8* %388), !dbg !1387
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %383, i8* %387, i8* %389), !dbg !1388
  br label %390, !dbg !1388

; <label>:390:                                    ; preds = %381, %376, %373, %370
  br label %391, !dbg !1389

; <label>:391:                                    ; preds = %390, %317
  %392 = load %struct.Chown_option*, %struct.Chown_option** %15, align 8, !dbg !1390
  %393 = getelementptr inbounds %struct.Chown_option, %struct.Chown_option* %392, i32 0, i32 0, !dbg !1392
  %394 = load i32, i32* %393, align 8, !dbg !1392
  %395 = icmp ne i32 %394, 2, !dbg !1393
  br i1 %395, label %396, label %465, !dbg !1394

; <label>:396:                                    ; preds = %391
  call void @llvm.dbg.declare(metadata i8* %24, metadata !1395, metadata !DIExpression()), !dbg !1397
  %397 = load i8, i8* %21, align 1, !dbg !1398
  %398 = trunc i8 %397 to i1, !dbg !1398
  br i1 %398, label %399, label %428, !dbg !1399

; <label>:399:                                    ; preds = %396
  %400 = load i8, i8* %20, align 1, !dbg !1400
  %401 = trunc i8 %400 to i1, !dbg !1400
  br i1 %401, label %402, label %428, !dbg !1401

; <label>:402:                                    ; preds = %399
  %403 = load i8, i8* %22, align 1, !dbg !1402
  %404 = trunc i8 %403 to i1, !dbg !1402
  br i1 %404, label %405, label %428, !dbg !1403

; <label>:405:                                    ; preds = %402
  %406 = load i32, i32* %11, align 4, !dbg !1404
  %407 = icmp eq i32 %406, -1, !dbg !1405
  br i1 %407, label %414, label %408, !dbg !1406

; <label>:408:                                    ; preds = %405
  %409 = load i32, i32* %11, align 4, !dbg !1407
  %410 = load %struct.stat*, %struct.stat** %18, align 8, !dbg !1408
  %411 = getelementptr inbounds %struct.stat, %struct.stat* %410, i32 0, i32 4, !dbg !1409
  %412 = load i32, i32* %411, align 4, !dbg !1409
  %413 = icmp eq i32 %409, %412, !dbg !1410
  br i1 %413, label %414, label %425, !dbg !1411

; <label>:414:                                    ; preds = %408, %405
  %415 = load i32, i32* %12, align 4, !dbg !1412
  %416 = icmp eq i32 %415, -1, !dbg !1413
  br i1 %416, label %423, label %417, !dbg !1414

; <label>:417:                                    ; preds = %414
  %418 = load i32, i32* %12, align 4, !dbg !1415
  %419 = load %struct.stat*, %struct.stat** %18, align 8, !dbg !1416
  %420 = getelementptr inbounds %struct.stat, %struct.stat* %419, i32 0, i32 5, !dbg !1417
  %421 = load i32, i32* %420, align 8, !dbg !1417
  %422 = icmp eq i32 %418, %421, !dbg !1418
  br label %423, !dbg !1414

; <label>:423:                                    ; preds = %417, %414
  %424 = phi i1 [ true, %414 ], [ %422, %417 ]
  br label %425

; <label>:425:                                    ; preds = %423, %408
  %426 = phi i1 [ false, %408 ], [ %424, %423 ]
  %427 = xor i1 %426, true, !dbg !1419
  br label %428

; <label>:428:                                    ; preds = %425, %402, %399, %396
  %429 = phi i1 [ false, %402 ], [ false, %399 ], [ false, %396 ], [ %427, %425 ]
  %430 = zext i1 %429 to i8, !dbg !1397
  store i8 %430, i8* %24, align 1, !dbg !1397
  %431 = load i8, i8* %24, align 1, !dbg !1420
  %432 = trunc i8 %431 to i1, !dbg !1420
  br i1 %432, label %438, label %433, !dbg !1422

; <label>:433:                                    ; preds = %428
  %434 = load %struct.Chown_option*, %struct.Chown_option** %15, align 8, !dbg !1423
  %435 = getelementptr inbounds %struct.Chown_option, %struct.Chown_option* %434, i32 0, i32 0, !dbg !1424
  %436 = load i32, i32* %435, align 8, !dbg !1424
  %437 = icmp eq i32 %436, 0, !dbg !1425
  br i1 %437, label %438, label %464, !dbg !1426

; <label>:438:                                    ; preds = %433, %428
  call void @llvm.dbg.declare(metadata i32* %25, metadata !1427, metadata !DIExpression()), !dbg !1429
  %439 = load i8, i8* %20, align 1, !dbg !1430
  %440 = trunc i8 %439 to i1, !dbg !1430
  br i1 %440, label %442, label %441, !dbg !1431

; <label>:441:                                    ; preds = %438
  br label %454, !dbg !1431

; <label>:442:                                    ; preds = %438
  %443 = load i8, i8* %22, align 1, !dbg !1432
  %444 = trunc i8 %443 to i1, !dbg !1432
  br i1 %444, label %446, label %445, !dbg !1433

; <label>:445:                                    ; preds = %442
  br label %452, !dbg !1433

; <label>:446:                                    ; preds = %442
  %447 = load i8, i8* %24, align 1, !dbg !1434
  %448 = trunc i8 %447 to i1, !dbg !1434
  %449 = xor i1 %448, true, !dbg !1435
  %450 = zext i1 %449 to i64, !dbg !1435
  %451 = select i1 %449, i32 4, i32 2, !dbg !1435
  br label %452, !dbg !1433

; <label>:452:                                    ; preds = %446, %445
  %453 = phi i32 [ 1, %445 ], [ %451, %446 ], !dbg !1433
  br label %454, !dbg !1431

; <label>:454:                                    ; preds = %452, %441
  %455 = phi i32 [ 3, %441 ], [ %453, %452 ], !dbg !1431
  store i32 %455, i32* %25, align 4, !dbg !1429
  %456 = load i8*, i8** %16, align 8, !dbg !1436
  %457 = load i32, i32* %25, align 4, !dbg !1437
  %458 = load %struct.Chown_option*, %struct.Chown_option** %15, align 8, !dbg !1438
  %459 = getelementptr inbounds %struct.Chown_option, %struct.Chown_option* %458, i32 0, i32 5, !dbg !1439
  %460 = load i8*, i8** %459, align 8, !dbg !1439
  %461 = load %struct.Chown_option*, %struct.Chown_option** %15, align 8, !dbg !1440
  %462 = getelementptr inbounds %struct.Chown_option, %struct.Chown_option* %461, i32 0, i32 6, !dbg !1441
  %463 = load i8*, i8** %462, align 8, !dbg !1441
  call void @describe_change(i8* %456, i32 %457, i8* %460, i8* %463), !dbg !1442
  br label %464, !dbg !1443

; <label>:464:                                    ; preds = %454, %433
  br label %465, !dbg !1444

; <label>:465:                                    ; preds = %464, %391
  %466 = load %struct.Chown_option*, %struct.Chown_option** %15, align 8, !dbg !1445
  %467 = getelementptr inbounds %struct.Chown_option, %struct.Chown_option* %466, i32 0, i32 1, !dbg !1447
  %468 = load i8, i8* %467, align 4, !dbg !1447
  %469 = trunc i8 %468 to i1, !dbg !1447
  br i1 %469, label %474, label %470, !dbg !1448

; <label>:470:                                    ; preds = %465
  %471 = load %struct.FTS*, %struct.FTS** %9, align 8, !dbg !1449
  %472 = load %struct._ftsent*, %struct._ftsent** %10, align 8, !dbg !1450
  %473 = call i32 @fts_set(%struct.FTS* %471, %struct._ftsent* %472, i32 4), !dbg !1451
  br label %474, !dbg !1451

; <label>:474:                                    ; preds = %470, %465
  %475 = load i8, i8* %20, align 1, !dbg !1452
  %476 = trunc i8 %475 to i1, !dbg !1452
  store i1 %476, i1* %8, align 1, !dbg !1453
  br label %477, !dbg !1453

; <label>:477:                                    ; preds = %474, %316, %159, %109, %97, %90, %83
  %478 = load i1, i1* %8, align 1, !dbg !1454
  ret i1 %478, !dbg !1454
}

; Function Attrs: nounwind readonly
declare i32 @strcmp(i8*, i8*) #6

; Function Attrs: noinline nounwind uwtable
define internal void @ignore_ptr(i8*) #3 !dbg !1455 {
  %2 = alloca i8*, align 8
  store i8* %0, i8** %2, align 8
  call void @llvm.dbg.declare(metadata i8** %2, metadata !1459, metadata !DIExpression()), !dbg !1460
  %3 = load i8*, i8** %2, align 8, !dbg !1461
  ret void, !dbg !1462
}

; Function Attrs: nounwind
declare i32 @fstatat(i32, i8*, %struct.stat*, i32) #5

; Function Attrs: noinline nounwind uwtable
define internal i32 @lchownat(i32, i8*, i32, i32) #3 !dbg !1463 {
  %5 = alloca i32, align 4
  %6 = alloca i8*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  store i32 %0, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !1467, metadata !DIExpression()), !dbg !1468
  store i8* %1, i8** %6, align 8
  call void @llvm.dbg.declare(metadata i8** %6, metadata !1469, metadata !DIExpression()), !dbg !1470
  store i32 %2, i32* %7, align 4
  call void @llvm.dbg.declare(metadata i32* %7, metadata !1471, metadata !DIExpression()), !dbg !1472
  store i32 %3, i32* %8, align 4
  call void @llvm.dbg.declare(metadata i32* %8, metadata !1473, metadata !DIExpression()), !dbg !1474
  %9 = load i32, i32* %5, align 4, !dbg !1475
  %10 = load i8*, i8** %6, align 8, !dbg !1476
  %11 = load i32, i32* %7, align 4, !dbg !1477
  %12 = load i32, i32* %8, align 4, !dbg !1478
  %13 = call i32 @fchownat(i32 %9, i8* %10, i32 %11, i32 %12, i32 256) #8, !dbg !1479
  ret i32 %13, !dbg !1480
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @restricted_chown(i32, i8*, %struct.stat*, i32, i32, i32, i32) #3 !dbg !1481 {
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i8*, align 8
  %11 = alloca %struct.stat*, align 8
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca %struct.stat, align 8
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  store i32 %0, i32* %9, align 4
  call void @llvm.dbg.declare(metadata i32* %9, metadata !1484, metadata !DIExpression()), !dbg !1485
  store i8* %1, i8** %10, align 8
  call void @llvm.dbg.declare(metadata i8** %10, metadata !1486, metadata !DIExpression()), !dbg !1487
  store %struct.stat* %2, %struct.stat** %11, align 8
  call void @llvm.dbg.declare(metadata %struct.stat** %11, metadata !1488, metadata !DIExpression()), !dbg !1489
  store i32 %3, i32* %12, align 4
  call void @llvm.dbg.declare(metadata i32* %12, metadata !1490, metadata !DIExpression()), !dbg !1491
  store i32 %4, i32* %13, align 4
  call void @llvm.dbg.declare(metadata i32* %13, metadata !1492, metadata !DIExpression()), !dbg !1493
  store i32 %5, i32* %14, align 4
  call void @llvm.dbg.declare(metadata i32* %14, metadata !1494, metadata !DIExpression()), !dbg !1495
  store i32 %6, i32* %15, align 4
  call void @llvm.dbg.declare(metadata i32* %15, metadata !1496, metadata !DIExpression()), !dbg !1497
  call void @llvm.dbg.declare(metadata i32* %16, metadata !1498, metadata !DIExpression()), !dbg !1499
  store i32 2, i32* %16, align 4, !dbg !1499
  call void @llvm.dbg.declare(metadata %struct.stat* %17, metadata !1500, metadata !DIExpression()), !dbg !1501
  call void @llvm.dbg.declare(metadata i32* %18, metadata !1502, metadata !DIExpression()), !dbg !1503
  store i32 2304, i32* %18, align 4, !dbg !1503
  call void @llvm.dbg.declare(metadata i32* %19, metadata !1504, metadata !DIExpression()), !dbg !1505
  %21 = load i32, i32* %14, align 4, !dbg !1506
  %22 = icmp eq i32 %21, -1, !dbg !1508
  br i1 %22, label %23, label %27, !dbg !1509

; <label>:23:                                     ; preds = %7
  %24 = load i32, i32* %15, align 4, !dbg !1510
  %25 = icmp eq i32 %24, -1, !dbg !1511
  br i1 %25, label %26, label %27, !dbg !1512

; <label>:26:                                     ; preds = %23
  store i32 5, i32* %8, align 4, !dbg !1513
  br label %136, !dbg !1513

; <label>:27:                                     ; preds = %23, %7
  %28 = load %struct.stat*, %struct.stat** %11, align 8, !dbg !1514
  %29 = getelementptr inbounds %struct.stat, %struct.stat* %28, i32 0, i32 3, !dbg !1514
  %30 = load i32, i32* %29, align 8, !dbg !1514
  %31 = and i32 %30, 61440, !dbg !1514
  %32 = icmp eq i32 %31, 32768, !dbg !1514
  br i1 %32, label %44, label %33, !dbg !1516

; <label>:33:                                     ; preds = %27
  %34 = load %struct.stat*, %struct.stat** %11, align 8, !dbg !1517
  %35 = getelementptr inbounds %struct.stat, %struct.stat* %34, i32 0, i32 3, !dbg !1517
  %36 = load i32, i32* %35, align 8, !dbg !1517
  %37 = and i32 %36, 61440, !dbg !1517
  %38 = icmp eq i32 %37, 16384, !dbg !1517
  br i1 %38, label %39, label %42, !dbg !1520

; <label>:39:                                     ; preds = %33
  %40 = load i32, i32* %18, align 4, !dbg !1521
  %41 = or i32 %40, 65536, !dbg !1521
  store i32 %41, i32* %18, align 4, !dbg !1521
  br label %43, !dbg !1522

; <label>:42:                                     ; preds = %33
  store i32 5, i32* %8, align 4, !dbg !1523
  br label %136, !dbg !1523

; <label>:43:                                     ; preds = %39
  br label %44, !dbg !1524

; <label>:44:                                     ; preds = %43, %27
  %45 = load i32, i32* %9, align 4, !dbg !1525
  %46 = load i8*, i8** %10, align 8, !dbg !1526
  %47 = load i32, i32* %18, align 4, !dbg !1527
  %48 = or i32 0, %47, !dbg !1528
  %49 = call i32 (i32, i8*, i32, ...) @openat(i32 %45, i8* %46, i32 %48), !dbg !1529
  store i32 %49, i32* %19, align 4, !dbg !1530
  %50 = load i32, i32* %19, align 4, !dbg !1531
  %51 = icmp sle i32 0, %50, !dbg !1533
  br i1 %51, label %75, label %52, !dbg !1534

; <label>:52:                                     ; preds = %44
  %53 = call i32* @__errno_location() #14, !dbg !1535
  %54 = load i32, i32* %53, align 4, !dbg !1535
  %55 = icmp eq i32 %54, 13, !dbg !1536
  br i1 %55, label %56, label %69, !dbg !1537

; <label>:56:                                     ; preds = %52
  %57 = load %struct.stat*, %struct.stat** %11, align 8, !dbg !1538
  %58 = getelementptr inbounds %struct.stat, %struct.stat* %57, i32 0, i32 3, !dbg !1538
  %59 = load i32, i32* %58, align 8, !dbg !1538
  %60 = and i32 %59, 61440, !dbg !1538
  %61 = icmp eq i32 %60, 32768, !dbg !1538
  br i1 %61, label %62, label %69, !dbg !1539

; <label>:62:                                     ; preds = %56
  %63 = load i32, i32* %9, align 4, !dbg !1540
  %64 = load i8*, i8** %10, align 8, !dbg !1541
  %65 = load i32, i32* %18, align 4, !dbg !1542
  %66 = or i32 1, %65, !dbg !1543
  %67 = call i32 (i32, i8*, i32, ...) @openat(i32 %63, i8* %64, i32 %66), !dbg !1544
  store i32 %67, i32* %19, align 4, !dbg !1545
  %68 = icmp sle i32 0, %67, !dbg !1546
  br i1 %68, label %75, label %69, !dbg !1547

; <label>:69:                                     ; preds = %62, %56, %52
  %70 = call i32* @__errno_location() #14, !dbg !1548
  %71 = load i32, i32* %70, align 4, !dbg !1548
  %72 = icmp eq i32 %71, 13, !dbg !1549
  %73 = zext i1 %72 to i64, !dbg !1548
  %74 = select i1 %72, i32 5, i32 6, !dbg !1548
  store i32 %74, i32* %8, align 4, !dbg !1550
  br label %136, !dbg !1550

; <label>:75:                                     ; preds = %62, %44
  %76 = load i32, i32* %19, align 4, !dbg !1551
  %77 = call i32 @fstat(i32 %76, %struct.stat* %17) #8, !dbg !1553
  %78 = icmp ne i32 %77, 0, !dbg !1554
  br i1 %78, label %79, label %80, !dbg !1555

; <label>:79:                                     ; preds = %75
  store i32 6, i32* %16, align 4, !dbg !1556
  br label %128, !dbg !1557

; <label>:80:                                     ; preds = %75
  %81 = load %struct.stat*, %struct.stat** %11, align 8, !dbg !1558
  %82 = getelementptr inbounds %struct.stat, %struct.stat* %81, i32 0, i32 1, !dbg !1558
  %83 = load i64, i64* %82, align 8, !dbg !1558
  %84 = getelementptr inbounds %struct.stat, %struct.stat* %17, i32 0, i32 1, !dbg !1558
  %85 = load i64, i64* %84, align 8, !dbg !1558
  %86 = icmp eq i64 %83, %85, !dbg !1558
  br i1 %86, label %87, label %94, !dbg !1558

; <label>:87:                                     ; preds = %80
  %88 = load %struct.stat*, %struct.stat** %11, align 8, !dbg !1558
  %89 = getelementptr inbounds %struct.stat, %struct.stat* %88, i32 0, i32 0, !dbg !1558
  %90 = load i64, i64* %89, align 8, !dbg !1558
  %91 = getelementptr inbounds %struct.stat, %struct.stat* %17, i32 0, i32 0, !dbg !1558
  %92 = load i64, i64* %91, align 8, !dbg !1558
  %93 = icmp eq i64 %90, %92, !dbg !1558
  br i1 %93, label %95, label %94, !dbg !1560

; <label>:94:                                     ; preds = %87, %80
  store i32 4, i32* %16, align 4, !dbg !1561
  br label %127, !dbg !1562

; <label>:95:                                     ; preds = %87
  %96 = load i32, i32* %14, align 4, !dbg !1563
  %97 = icmp eq i32 %96, -1, !dbg !1565
  br i1 %97, label %103, label %98, !dbg !1566

; <label>:98:                                     ; preds = %95
  %99 = load i32, i32* %14, align 4, !dbg !1567
  %100 = getelementptr inbounds %struct.stat, %struct.stat* %17, i32 0, i32 4, !dbg !1568
  %101 = load i32, i32* %100, align 4, !dbg !1568
  %102 = icmp eq i32 %99, %101, !dbg !1569
  br i1 %102, label %103, label %126, !dbg !1570

; <label>:103:                                    ; preds = %98, %95
  %104 = load i32, i32* %15, align 4, !dbg !1571
  %105 = icmp eq i32 %104, -1, !dbg !1572
  br i1 %105, label %111, label %106, !dbg !1573

; <label>:106:                                    ; preds = %103
  %107 = load i32, i32* %15, align 4, !dbg !1574
  %108 = getelementptr inbounds %struct.stat, %struct.stat* %17, i32 0, i32 5, !dbg !1575
  %109 = load i32, i32* %108, align 8, !dbg !1575
  %110 = icmp eq i32 %107, %109, !dbg !1576
  br i1 %110, label %111, label %126, !dbg !1577

; <label>:111:                                    ; preds = %106, %103
  %112 = load i32, i32* %19, align 4, !dbg !1578
  %113 = load i32, i32* %12, align 4, !dbg !1581
  %114 = load i32, i32* %13, align 4, !dbg !1582
  %115 = call i32 @fchown(i32 %112, i32 %113, i32 %114) #8, !dbg !1583
  %116 = icmp eq i32 %115, 0, !dbg !1584
  br i1 %116, label %117, label %124, !dbg !1585

; <label>:117:                                    ; preds = %111
  %118 = load i32, i32* %19, align 4, !dbg !1586
  %119 = call i32 @close(i32 %118), !dbg !1588
  %120 = icmp eq i32 %119, 0, !dbg !1589
  %121 = zext i1 %120 to i64, !dbg !1588
  %122 = select i1 %120, i32 2, i32 6, !dbg !1588
  store i32 %122, i32* %16, align 4, !dbg !1590
  %123 = load i32, i32* %16, align 4, !dbg !1591
  store i32 %123, i32* %8, align 4, !dbg !1592
  br label %136, !dbg !1592

; <label>:124:                                    ; preds = %111
  store i32 6, i32* %16, align 4, !dbg !1593
  br label %125

; <label>:125:                                    ; preds = %124
  br label %126, !dbg !1595

; <label>:126:                                    ; preds = %125, %106, %98
  br label %127

; <label>:127:                                    ; preds = %126, %94
  br label %128

; <label>:128:                                    ; preds = %127, %79
  call void @llvm.dbg.declare(metadata i32* %20, metadata !1596, metadata !DIExpression()), !dbg !1598
  %129 = call i32* @__errno_location() #14, !dbg !1599
  %130 = load i32, i32* %129, align 4, !dbg !1599
  store i32 %130, i32* %20, align 4, !dbg !1598
  %131 = load i32, i32* %19, align 4, !dbg !1600
  %132 = call i32 @close(i32 %131), !dbg !1601
  %133 = load i32, i32* %20, align 4, !dbg !1602
  %134 = call i32* @__errno_location() #14, !dbg !1603
  store i32 %133, i32* %134, align 4, !dbg !1604
  %135 = load i32, i32* %16, align 4, !dbg !1605
  store i32 %135, i32* %8, align 4, !dbg !1606
  br label %136, !dbg !1606

; <label>:136:                                    ; preds = %128, %117, %69, %42, %26
  %137 = load i32, i32* %8, align 4, !dbg !1607
  ret i32 %137, !dbg !1607
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @chownat(i32, i8*, i32, i32) #3 !dbg !1608 {
  %5 = alloca i32, align 4
  %6 = alloca i8*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  store i32 %0, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !1609, metadata !DIExpression()), !dbg !1610
  store i8* %1, i8** %6, align 8
  call void @llvm.dbg.declare(metadata i8** %6, metadata !1611, metadata !DIExpression()), !dbg !1612
  store i32 %2, i32* %7, align 4
  call void @llvm.dbg.declare(metadata i32* %7, metadata !1613, metadata !DIExpression()), !dbg !1614
  store i32 %3, i32* %8, align 4
  call void @llvm.dbg.declare(metadata i32* %8, metadata !1615, metadata !DIExpression()), !dbg !1616
  %9 = load i32, i32* %5, align 4, !dbg !1617
  %10 = load i8*, i8** %6, align 8, !dbg !1618
  %11 = load i32, i32* %7, align 4, !dbg !1619
  %12 = load i32, i32* %8, align 4, !dbg !1620
  %13 = call i32 @fchownat(i32 %9, i8* %10, i32 %11, i32 %12, i32 0) #8, !dbg !1621
  ret i32 %13, !dbg !1622
}

; Function Attrs: noreturn nounwind
declare void @abort() #4

; Function Attrs: noinline nounwind uwtable
define internal void @describe_change(i8*, i32, i8*, i8*) #3 !dbg !1623 {
  %5 = alloca i8*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i8*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i8*, align 8
  %10 = alloca i8*, align 8
  %11 = alloca i8*, align 8
  store i8* %0, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !1626, metadata !DIExpression()), !dbg !1627
  store i32 %1, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !1628, metadata !DIExpression()), !dbg !1629
  store i8* %2, i8** %7, align 8
  call void @llvm.dbg.declare(metadata i8** %7, metadata !1630, metadata !DIExpression()), !dbg !1631
  store i8* %3, i8** %8, align 8
  call void @llvm.dbg.declare(metadata i8** %8, metadata !1632, metadata !DIExpression()), !dbg !1633
  call void @llvm.dbg.declare(metadata i8** %9, metadata !1634, metadata !DIExpression()), !dbg !1635
  call void @llvm.dbg.declare(metadata i8** %10, metadata !1636, metadata !DIExpression()), !dbg !1637
  call void @llvm.dbg.declare(metadata i8** %11, metadata !1638, metadata !DIExpression()), !dbg !1639
  store i8* null, i8** %11, align 8, !dbg !1639
  %12 = load i32, i32* %6, align 4, !dbg !1640
  %13 = icmp eq i32 %12, 1, !dbg !1642
  br i1 %13, label %14, label %18, !dbg !1643

; <label>:14:                                     ; preds = %4
  %15 = load i8*, i8** %5, align 8, !dbg !1644
  %16 = call i8* @quote(i8* %15), !dbg !1646
  %17 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.13.58, i32 0, i32 0), i8* %16), !dbg !1647
  br label %88, !dbg !1648

; <label>:18:                                     ; preds = %4
  %19 = load i8*, i8** %7, align 8, !dbg !1649
  %20 = icmp ne i8* %19, null, !dbg !1649
  br i1 %20, label %21, label %43, !dbg !1651

; <label>:21:                                     ; preds = %18
  %22 = load i8*, i8** %8, align 8, !dbg !1652
  %23 = icmp ne i8* %22, null, !dbg !1652
  br i1 %23, label %24, label %40, !dbg !1655

; <label>:24:                                     ; preds = %21
  %25 = load i8*, i8** %7, align 8, !dbg !1656
  %26 = call i64 @strlen(i8* %25) #12, !dbg !1658
  %27 = add i64 %26, 1, !dbg !1659
  %28 = load i8*, i8** %8, align 8, !dbg !1660
  %29 = call i64 @strlen(i8* %28) #12, !dbg !1661
  %30 = add i64 %27, %29, !dbg !1662
  %31 = add i64 %30, 1, !dbg !1663
  %32 = call noalias i8* @xmalloc(i64 %31), !dbg !1664
  store i8* %32, i8** %11, align 8, !dbg !1665
  %33 = load i8*, i8** %11, align 8, !dbg !1666
  %34 = load i8*, i8** %7, align 8, !dbg !1667
  %35 = call i8* @stpcpy(i8* %33, i8* %34) #8, !dbg !1668
  %36 = call i8* @stpcpy(i8* %35, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.14.59, i32 0, i32 0)) #8, !dbg !1669
  %37 = load i8*, i8** %8, align 8, !dbg !1670
  %38 = call i8* @stpcpy(i8* %36, i8* %37) #8, !dbg !1671
  %39 = load i8*, i8** %11, align 8, !dbg !1672
  store i8* %39, i8** %10, align 8, !dbg !1673
  br label %42, !dbg !1674

; <label>:40:                                     ; preds = %21
  %41 = load i8*, i8** %7, align 8, !dbg !1675
  store i8* %41, i8** %10, align 8, !dbg !1677
  br label %42

; <label>:42:                                     ; preds = %40, %24
  br label %45, !dbg !1678

; <label>:43:                                     ; preds = %18
  %44 = load i8*, i8** %8, align 8, !dbg !1679
  store i8* %44, i8** %10, align 8, !dbg !1681
  br label %45

; <label>:45:                                     ; preds = %43, %42
  %46 = load i32, i32* %6, align 4, !dbg !1682
  switch i32 %46, label %80 [
    i32 2, label %47
    i32 3, label %58
    i32 4, label %69
  ], !dbg !1683

; <label>:47:                                     ; preds = %45
  %48 = load i8*, i8** %7, align 8, !dbg !1684
  %49 = icmp ne i8* %48, null, !dbg !1684
  br i1 %49, label %50, label %51, !dbg !1684

; <label>:50:                                     ; preds = %47
  br label %56, !dbg !1684

; <label>:51:                                     ; preds = %47
  %52 = load i8*, i8** %8, align 8, !dbg !1686
  %53 = icmp ne i8* %52, null, !dbg !1686
  %54 = zext i1 %53 to i64, !dbg !1686
  %55 = select i1 %53, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.16.60, i32 0, i32 0), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.17.61, i32 0, i32 0), !dbg !1686
  br label %56, !dbg !1684

; <label>:56:                                     ; preds = %51, %50
  %57 = phi i8* [ getelementptr inbounds ([31 x i8], [31 x i8]* @.str.15.62, i32 0, i32 0), %50 ], [ %55, %51 ], !dbg !1684
  store i8* %57, i8** %9, align 8, !dbg !1687
  br label %81, !dbg !1688

; <label>:58:                                     ; preds = %45
  %59 = load i8*, i8** %7, align 8, !dbg !1689
  %60 = icmp ne i8* %59, null, !dbg !1689
  br i1 %60, label %61, label %62, !dbg !1689

; <label>:61:                                     ; preds = %58
  br label %67, !dbg !1689

; <label>:62:                                     ; preds = %58
  %63 = load i8*, i8** %8, align 8, !dbg !1690
  %64 = icmp ne i8* %63, null, !dbg !1690
  %65 = zext i1 %64 to i64, !dbg !1690
  %66 = select i1 %64, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.19.63, i32 0, i32 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.20.64, i32 0, i32 0), !dbg !1690
  br label %67, !dbg !1689

; <label>:67:                                     ; preds = %62, %61
  %68 = phi i8* [ getelementptr inbounds ([40 x i8], [40 x i8]* @.str.18.65, i32 0, i32 0), %61 ], [ %66, %62 ], !dbg !1689
  store i8* %68, i8** %9, align 8, !dbg !1691
  br label %81, !dbg !1692

; <label>:69:                                     ; preds = %45
  %70 = load i8*, i8** %7, align 8, !dbg !1693
  %71 = icmp ne i8* %70, null, !dbg !1693
  br i1 %71, label %72, label %73, !dbg !1693

; <label>:72:                                     ; preds = %69
  br label %78, !dbg !1693

; <label>:73:                                     ; preds = %69
  %74 = load i8*, i8** %8, align 8, !dbg !1694
  %75 = icmp ne i8* %74, null, !dbg !1694
  %76 = zext i1 %75 to i64, !dbg !1694
  %77 = select i1 %75, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.22.66, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.23.67, i32 0, i32 0), !dbg !1694
  br label %78, !dbg !1693

; <label>:78:                                     ; preds = %73, %72
  %79 = phi i8* [ getelementptr inbounds ([32 x i8], [32 x i8]* @.str.21.68, i32 0, i32 0), %72 ], [ %77, %73 ], !dbg !1693
  store i8* %79, i8** %9, align 8, !dbg !1695
  br label %81, !dbg !1696

; <label>:80:                                     ; preds = %45
  call void @abort() #11, !dbg !1697
  unreachable, !dbg !1697

; <label>:81:                                     ; preds = %78, %67, %56
  %82 = load i8*, i8** %9, align 8, !dbg !1698
  %83 = load i8*, i8** %5, align 8, !dbg !1699
  %84 = call i8* @quote(i8* %83), !dbg !1700
  %85 = load i8*, i8** %10, align 8, !dbg !1701
  %86 = call i32 (i8*, ...) @printf(i8* %82, i8* %84, i8* %85), !dbg !1702
  %87 = load i8*, i8** %11, align 8, !dbg !1703
  call void @free(i8* %87) #8, !dbg !1704
  br label %88, !dbg !1705

; <label>:88:                                     ; preds = %81, %14
  ret void, !dbg !1705
}

; Function Attrs: nounwind readonly
declare i64 @strlen(i8*) #6

; Function Attrs: nounwind
declare i8* @stpcpy(i8*, i8*) #5

; Function Attrs: nounwind
declare void @free(i8*) #5

; Function Attrs: nounwind
declare i32 @fchownat(i32, i8*, i32, i32, i32) #5

declare i32 @openat(i32, i8*, i32, ...) #2

; Function Attrs: nounwind
declare i32 @fstat(i32, %struct.stat*) #5

; Function Attrs: nounwind
declare i32 @fchown(i32, i32, i32) #5

declare i32 @close(i32) #2

; Function Attrs: noinline nounwind uwtable
define void @set_program_name(i8*) #3 !dbg !1706 {
  %2 = alloca i8*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  store i8* %0, i8** %2, align 8
  call void @llvm.dbg.declare(metadata i8** %2, metadata !1709, metadata !DIExpression()), !dbg !1710
  call void @llvm.dbg.declare(metadata i8** %3, metadata !1711, metadata !DIExpression()), !dbg !1712
  call void @llvm.dbg.declare(metadata i8** %4, metadata !1713, metadata !DIExpression()), !dbg !1714
  %5 = load i8*, i8** %2, align 8, !dbg !1715
  %6 = icmp eq i8* %5, null, !dbg !1717
  br i1 %6, label %7, label %10, !dbg !1718

; <label>:7:                                      ; preds = %1
  %8 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !1719
  %9 = call i32 @fputs(i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.76, i32 0, i32 0), %struct._IO_FILE* %8), !dbg !1721
  call void @abort() #11, !dbg !1722
  unreachable, !dbg !1722

; <label>:10:                                     ; preds = %1
  %11 = load i8*, i8** %2, align 8, !dbg !1723
  %12 = call i8* @strrchr(i8* %11, i32 47) #12, !dbg !1724
  store i8* %12, i8** %3, align 8, !dbg !1725
  %13 = load i8*, i8** %3, align 8, !dbg !1726
  %14 = icmp ne i8* %13, null, !dbg !1727
  br i1 %14, label %15, label %18, !dbg !1726

; <label>:15:                                     ; preds = %10
  %16 = load i8*, i8** %3, align 8, !dbg !1728
  %17 = getelementptr inbounds i8, i8* %16, i64 1, !dbg !1729
  br label %20, !dbg !1726

; <label>:18:                                     ; preds = %10
  %19 = load i8*, i8** %2, align 8, !dbg !1730
  br label %20, !dbg !1726

; <label>:20:                                     ; preds = %18, %15
  %21 = phi i8* [ %17, %15 ], [ %19, %18 ], !dbg !1726
  store i8* %21, i8** %4, align 8, !dbg !1731
  %22 = load i8*, i8** %4, align 8, !dbg !1732
  %23 = load i8*, i8** %2, align 8, !dbg !1734
  %24 = ptrtoint i8* %22 to i64, !dbg !1735
  %25 = ptrtoint i8* %23 to i64, !dbg !1735
  %26 = sub i64 %24, %25, !dbg !1735
  %27 = icmp sge i64 %26, 7, !dbg !1736
  br i1 %27, label %28, label %43, !dbg !1737

; <label>:28:                                     ; preds = %20
  %29 = load i8*, i8** %4, align 8, !dbg !1738
  %30 = getelementptr inbounds i8, i8* %29, i64 -7, !dbg !1739
  %31 = call i32 @strncmp(i8* %30, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.77, i32 0, i32 0), i64 7) #12, !dbg !1740
  %32 = icmp eq i32 %31, 0, !dbg !1741
  br i1 %32, label %33, label %43, !dbg !1742

; <label>:33:                                     ; preds = %28
  %34 = load i8*, i8** %4, align 8, !dbg !1743
  store i8* %34, i8** %2, align 8, !dbg !1745
  %35 = load i8*, i8** %4, align 8, !dbg !1746
  %36 = call i32 @strncmp(i8* %35, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2.78, i32 0, i32 0), i64 3) #12, !dbg !1748
  %37 = icmp eq i32 %36, 0, !dbg !1749
  br i1 %37, label %38, label %42, !dbg !1750

; <label>:38:                                     ; preds = %33
  %39 = load i8*, i8** %4, align 8, !dbg !1751
  %40 = getelementptr inbounds i8, i8* %39, i64 3, !dbg !1753
  store i8* %40, i8** %2, align 8, !dbg !1754
  %41 = load i8*, i8** %2, align 8, !dbg !1755
  store i8* %41, i8** @program_invocation_short_name, align 8, !dbg !1756
  br label %42, !dbg !1757

; <label>:42:                                     ; preds = %38, %33
  br label %43, !dbg !1758

; <label>:43:                                     ; preds = %42, %28, %20
  %44 = load i8*, i8** %2, align 8, !dbg !1759
  store i8* %44, i8** @program_name, align 8, !dbg !1760
  %45 = load i8*, i8** %2, align 8, !dbg !1761
  store i8* %45, i8** @program_invocation_name, align 8, !dbg !1762
  ret void, !dbg !1763
}

declare i32 @fputs(i8*, %struct._IO_FILE*) #2

; Function Attrs: nounwind readonly
declare i8* @strrchr(i8*, i32) #6

; Function Attrs: noinline nounwind uwtable
define void @version_etc_arn(%struct._IO_FILE*, i8*, i8*, i8*, i8**, i64) #3 !dbg !1764 {
  %7 = alloca %struct._IO_FILE*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i8*, align 8
  %10 = alloca i8*, align 8
  %11 = alloca i8**, align 8
  %12 = alloca i64, align 8
  store %struct._IO_FILE* %0, %struct._IO_FILE** %7, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %7, metadata !1817, metadata !DIExpression()), !dbg !1818
  store i8* %1, i8** %8, align 8
  call void @llvm.dbg.declare(metadata i8** %8, metadata !1819, metadata !DIExpression()), !dbg !1820
  store i8* %2, i8** %9, align 8
  call void @llvm.dbg.declare(metadata i8** %9, metadata !1821, metadata !DIExpression()), !dbg !1822
  store i8* %3, i8** %10, align 8
  call void @llvm.dbg.declare(metadata i8** %10, metadata !1823, metadata !DIExpression()), !dbg !1824
  store i8** %4, i8*** %11, align 8
  call void @llvm.dbg.declare(metadata i8*** %11, metadata !1825, metadata !DIExpression()), !dbg !1826
  store i64 %5, i64* %12, align 8
  call void @llvm.dbg.declare(metadata i64* %12, metadata !1827, metadata !DIExpression()), !dbg !1828
  %13 = load i8*, i8** %8, align 8, !dbg !1829
  %14 = icmp ne i8* %13, null, !dbg !1829
  br i1 %14, label %15, label %21, !dbg !1831

; <label>:15:                                     ; preds = %6
  %16 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8, !dbg !1832
  %17 = load i8*, i8** %8, align 8, !dbg !1833
  %18 = load i8*, i8** %9, align 8, !dbg !1834
  %19 = load i8*, i8** %10, align 8, !dbg !1835
  %20 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %16, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.79, i32 0, i32 0), i8* %17, i8* %18, i8* %19), !dbg !1836
  br label %26, !dbg !1836

; <label>:21:                                     ; preds = %6
  %22 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8, !dbg !1837
  %23 = load i8*, i8** %9, align 8, !dbg !1838
  %24 = load i8*, i8** %10, align 8, !dbg !1839
  %25 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %22, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1.80, i32 0, i32 0), i8* %23, i8* %24), !dbg !1840
  br label %26

; <label>:26:                                     ; preds = %21, %15
  %27 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8, !dbg !1841
  %28 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %27, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @version_etc_copyright, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2.81, i32 0, i32 0), i32 2009), !dbg !1842
  %29 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8, !dbg !1843
  %30 = call i32 @fputs_unlocked(i8* getelementptr inbounds ([203 x i8], [203 x i8]* @.str.3.82, i32 0, i32 0), %struct._IO_FILE* %29), !dbg !1843
  %31 = load i64, i64* %12, align 8, !dbg !1844
  switch i64 %31, label %195 [
    i64 0, label %32
    i64 1, label %33
    i64 2, label %39
    i64 3, label %48
    i64 4, label %60
    i64 5, label %75
    i64 6, label %93
    i64 7, label %114
    i64 8, label %138
    i64 9, label %165
  ], !dbg !1845

; <label>:32:                                     ; preds = %26
  call void @abort() #11, !dbg !1846
  unreachable, !dbg !1846

; <label>:33:                                     ; preds = %26
  %34 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8, !dbg !1848
  %35 = load i8**, i8*** %11, align 8, !dbg !1849
  %36 = getelementptr inbounds i8*, i8** %35, i64 0, !dbg !1849
  %37 = load i8*, i8** %36, align 8, !dbg !1849
  %38 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %34, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.4.83, i32 0, i32 0), i8* %37), !dbg !1850
  br label %225, !dbg !1851

; <label>:39:                                     ; preds = %26
  %40 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8, !dbg !1852
  %41 = load i8**, i8*** %11, align 8, !dbg !1853
  %42 = getelementptr inbounds i8*, i8** %41, i64 0, !dbg !1853
  %43 = load i8*, i8** %42, align 8, !dbg !1853
  %44 = load i8**, i8*** %11, align 8, !dbg !1854
  %45 = getelementptr inbounds i8*, i8** %44, i64 1, !dbg !1854
  %46 = load i8*, i8** %45, align 8, !dbg !1854
  %47 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %40, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.5.84, i32 0, i32 0), i8* %43, i8* %46), !dbg !1855
  br label %225, !dbg !1856

; <label>:48:                                     ; preds = %26
  %49 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8, !dbg !1857
  %50 = load i8**, i8*** %11, align 8, !dbg !1858
  %51 = getelementptr inbounds i8*, i8** %50, i64 0, !dbg !1858
  %52 = load i8*, i8** %51, align 8, !dbg !1858
  %53 = load i8**, i8*** %11, align 8, !dbg !1859
  %54 = getelementptr inbounds i8*, i8** %53, i64 1, !dbg !1859
  %55 = load i8*, i8** %54, align 8, !dbg !1859
  %56 = load i8**, i8*** %11, align 8, !dbg !1860
  %57 = getelementptr inbounds i8*, i8** %56, i64 2, !dbg !1860
  %58 = load i8*, i8** %57, align 8, !dbg !1860
  %59 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %49, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.6.85, i32 0, i32 0), i8* %52, i8* %55, i8* %58), !dbg !1861
  br label %225, !dbg !1862

; <label>:60:                                     ; preds = %26
  %61 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8, !dbg !1863
  %62 = load i8**, i8*** %11, align 8, !dbg !1864
  %63 = getelementptr inbounds i8*, i8** %62, i64 0, !dbg !1864
  %64 = load i8*, i8** %63, align 8, !dbg !1864
  %65 = load i8**, i8*** %11, align 8, !dbg !1865
  %66 = getelementptr inbounds i8*, i8** %65, i64 1, !dbg !1865
  %67 = load i8*, i8** %66, align 8, !dbg !1865
  %68 = load i8**, i8*** %11, align 8, !dbg !1866
  %69 = getelementptr inbounds i8*, i8** %68, i64 2, !dbg !1866
  %70 = load i8*, i8** %69, align 8, !dbg !1866
  %71 = load i8**, i8*** %11, align 8, !dbg !1867
  %72 = getelementptr inbounds i8*, i8** %71, i64 3, !dbg !1867
  %73 = load i8*, i8** %72, align 8, !dbg !1867
  %74 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %61, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.7.86, i32 0, i32 0), i8* %64, i8* %67, i8* %70, i8* %73), !dbg !1868
  br label %225, !dbg !1869

; <label>:75:                                     ; preds = %26
  %76 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8, !dbg !1870
  %77 = load i8**, i8*** %11, align 8, !dbg !1871
  %78 = getelementptr inbounds i8*, i8** %77, i64 0, !dbg !1871
  %79 = load i8*, i8** %78, align 8, !dbg !1871
  %80 = load i8**, i8*** %11, align 8, !dbg !1872
  %81 = getelementptr inbounds i8*, i8** %80, i64 1, !dbg !1872
  %82 = load i8*, i8** %81, align 8, !dbg !1872
  %83 = load i8**, i8*** %11, align 8, !dbg !1873
  %84 = getelementptr inbounds i8*, i8** %83, i64 2, !dbg !1873
  %85 = load i8*, i8** %84, align 8, !dbg !1873
  %86 = load i8**, i8*** %11, align 8, !dbg !1874
  %87 = getelementptr inbounds i8*, i8** %86, i64 3, !dbg !1874
  %88 = load i8*, i8** %87, align 8, !dbg !1874
  %89 = load i8**, i8*** %11, align 8, !dbg !1875
  %90 = getelementptr inbounds i8*, i8** %89, i64 4, !dbg !1875
  %91 = load i8*, i8** %90, align 8, !dbg !1875
  %92 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %76, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.8.87, i32 0, i32 0), i8* %79, i8* %82, i8* %85, i8* %88, i8* %91), !dbg !1876
  br label %225, !dbg !1877

; <label>:93:                                     ; preds = %26
  %94 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8, !dbg !1878
  %95 = load i8**, i8*** %11, align 8, !dbg !1879
  %96 = getelementptr inbounds i8*, i8** %95, i64 0, !dbg !1879
  %97 = load i8*, i8** %96, align 8, !dbg !1879
  %98 = load i8**, i8*** %11, align 8, !dbg !1880
  %99 = getelementptr inbounds i8*, i8** %98, i64 1, !dbg !1880
  %100 = load i8*, i8** %99, align 8, !dbg !1880
  %101 = load i8**, i8*** %11, align 8, !dbg !1881
  %102 = getelementptr inbounds i8*, i8** %101, i64 2, !dbg !1881
  %103 = load i8*, i8** %102, align 8, !dbg !1881
  %104 = load i8**, i8*** %11, align 8, !dbg !1882
  %105 = getelementptr inbounds i8*, i8** %104, i64 3, !dbg !1882
  %106 = load i8*, i8** %105, align 8, !dbg !1882
  %107 = load i8**, i8*** %11, align 8, !dbg !1883
  %108 = getelementptr inbounds i8*, i8** %107, i64 4, !dbg !1883
  %109 = load i8*, i8** %108, align 8, !dbg !1883
  %110 = load i8**, i8*** %11, align 8, !dbg !1884
  %111 = getelementptr inbounds i8*, i8** %110, i64 5, !dbg !1884
  %112 = load i8*, i8** %111, align 8, !dbg !1884
  %113 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %94, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.9.88, i32 0, i32 0), i8* %97, i8* %100, i8* %103, i8* %106, i8* %109, i8* %112), !dbg !1885
  br label %225, !dbg !1886

; <label>:114:                                    ; preds = %26
  %115 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8, !dbg !1887
  %116 = load i8**, i8*** %11, align 8, !dbg !1888
  %117 = getelementptr inbounds i8*, i8** %116, i64 0, !dbg !1888
  %118 = load i8*, i8** %117, align 8, !dbg !1888
  %119 = load i8**, i8*** %11, align 8, !dbg !1889
  %120 = getelementptr inbounds i8*, i8** %119, i64 1, !dbg !1889
  %121 = load i8*, i8** %120, align 8, !dbg !1889
  %122 = load i8**, i8*** %11, align 8, !dbg !1890
  %123 = getelementptr inbounds i8*, i8** %122, i64 2, !dbg !1890
  %124 = load i8*, i8** %123, align 8, !dbg !1890
  %125 = load i8**, i8*** %11, align 8, !dbg !1891
  %126 = getelementptr inbounds i8*, i8** %125, i64 3, !dbg !1891
  %127 = load i8*, i8** %126, align 8, !dbg !1891
  %128 = load i8**, i8*** %11, align 8, !dbg !1892
  %129 = getelementptr inbounds i8*, i8** %128, i64 4, !dbg !1892
  %130 = load i8*, i8** %129, align 8, !dbg !1892
  %131 = load i8**, i8*** %11, align 8, !dbg !1893
  %132 = getelementptr inbounds i8*, i8** %131, i64 5, !dbg !1893
  %133 = load i8*, i8** %132, align 8, !dbg !1893
  %134 = load i8**, i8*** %11, align 8, !dbg !1894
  %135 = getelementptr inbounds i8*, i8** %134, i64 6, !dbg !1894
  %136 = load i8*, i8** %135, align 8, !dbg !1894
  %137 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %115, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.10.89, i32 0, i32 0), i8* %118, i8* %121, i8* %124, i8* %127, i8* %130, i8* %133, i8* %136), !dbg !1895
  br label %225, !dbg !1896

; <label>:138:                                    ; preds = %26
  %139 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8, !dbg !1897
  %140 = load i8**, i8*** %11, align 8, !dbg !1898
  %141 = getelementptr inbounds i8*, i8** %140, i64 0, !dbg !1898
  %142 = load i8*, i8** %141, align 8, !dbg !1898
  %143 = load i8**, i8*** %11, align 8, !dbg !1899
  %144 = getelementptr inbounds i8*, i8** %143, i64 1, !dbg !1899
  %145 = load i8*, i8** %144, align 8, !dbg !1899
  %146 = load i8**, i8*** %11, align 8, !dbg !1900
  %147 = getelementptr inbounds i8*, i8** %146, i64 2, !dbg !1900
  %148 = load i8*, i8** %147, align 8, !dbg !1900
  %149 = load i8**, i8*** %11, align 8, !dbg !1901
  %150 = getelementptr inbounds i8*, i8** %149, i64 3, !dbg !1901
  %151 = load i8*, i8** %150, align 8, !dbg !1901
  %152 = load i8**, i8*** %11, align 8, !dbg !1902
  %153 = getelementptr inbounds i8*, i8** %152, i64 4, !dbg !1902
  %154 = load i8*, i8** %153, align 8, !dbg !1902
  %155 = load i8**, i8*** %11, align 8, !dbg !1903
  %156 = getelementptr inbounds i8*, i8** %155, i64 5, !dbg !1903
  %157 = load i8*, i8** %156, align 8, !dbg !1903
  %158 = load i8**, i8*** %11, align 8, !dbg !1904
  %159 = getelementptr inbounds i8*, i8** %158, i64 6, !dbg !1904
  %160 = load i8*, i8** %159, align 8, !dbg !1904
  %161 = load i8**, i8*** %11, align 8, !dbg !1905
  %162 = getelementptr inbounds i8*, i8** %161, i64 7, !dbg !1905
  %163 = load i8*, i8** %162, align 8, !dbg !1905
  %164 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %139, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.11.90, i32 0, i32 0), i8* %142, i8* %145, i8* %148, i8* %151, i8* %154, i8* %157, i8* %160, i8* %163), !dbg !1906
  br label %225, !dbg !1907

; <label>:165:                                    ; preds = %26
  %166 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8, !dbg !1908
  %167 = load i8**, i8*** %11, align 8, !dbg !1909
  %168 = getelementptr inbounds i8*, i8** %167, i64 0, !dbg !1909
  %169 = load i8*, i8** %168, align 8, !dbg !1909
  %170 = load i8**, i8*** %11, align 8, !dbg !1910
  %171 = getelementptr inbounds i8*, i8** %170, i64 1, !dbg !1910
  %172 = load i8*, i8** %171, align 8, !dbg !1910
  %173 = load i8**, i8*** %11, align 8, !dbg !1911
  %174 = getelementptr inbounds i8*, i8** %173, i64 2, !dbg !1911
  %175 = load i8*, i8** %174, align 8, !dbg !1911
  %176 = load i8**, i8*** %11, align 8, !dbg !1912
  %177 = getelementptr inbounds i8*, i8** %176, i64 3, !dbg !1912
  %178 = load i8*, i8** %177, align 8, !dbg !1912
  %179 = load i8**, i8*** %11, align 8, !dbg !1913
  %180 = getelementptr inbounds i8*, i8** %179, i64 4, !dbg !1913
  %181 = load i8*, i8** %180, align 8, !dbg !1913
  %182 = load i8**, i8*** %11, align 8, !dbg !1914
  %183 = getelementptr inbounds i8*, i8** %182, i64 5, !dbg !1914
  %184 = load i8*, i8** %183, align 8, !dbg !1914
  %185 = load i8**, i8*** %11, align 8, !dbg !1915
  %186 = getelementptr inbounds i8*, i8** %185, i64 6, !dbg !1915
  %187 = load i8*, i8** %186, align 8, !dbg !1915
  %188 = load i8**, i8*** %11, align 8, !dbg !1916
  %189 = getelementptr inbounds i8*, i8** %188, i64 7, !dbg !1916
  %190 = load i8*, i8** %189, align 8, !dbg !1916
  %191 = load i8**, i8*** %11, align 8, !dbg !1917
  %192 = getelementptr inbounds i8*, i8** %191, i64 8, !dbg !1917
  %193 = load i8*, i8** %192, align 8, !dbg !1917
  %194 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %166, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.12.91, i32 0, i32 0), i8* %169, i8* %172, i8* %175, i8* %178, i8* %181, i8* %184, i8* %187, i8* %190, i8* %193), !dbg !1918
  br label %225, !dbg !1919

; <label>:195:                                    ; preds = %26
  %196 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8, !dbg !1920
  %197 = load i8**, i8*** %11, align 8, !dbg !1921
  %198 = getelementptr inbounds i8*, i8** %197, i64 0, !dbg !1921
  %199 = load i8*, i8** %198, align 8, !dbg !1921
  %200 = load i8**, i8*** %11, align 8, !dbg !1922
  %201 = getelementptr inbounds i8*, i8** %200, i64 1, !dbg !1922
  %202 = load i8*, i8** %201, align 8, !dbg !1922
  %203 = load i8**, i8*** %11, align 8, !dbg !1923
  %204 = getelementptr inbounds i8*, i8** %203, i64 2, !dbg !1923
  %205 = load i8*, i8** %204, align 8, !dbg !1923
  %206 = load i8**, i8*** %11, align 8, !dbg !1924
  %207 = getelementptr inbounds i8*, i8** %206, i64 3, !dbg !1924
  %208 = load i8*, i8** %207, align 8, !dbg !1924
  %209 = load i8**, i8*** %11, align 8, !dbg !1925
  %210 = getelementptr inbounds i8*, i8** %209, i64 4, !dbg !1925
  %211 = load i8*, i8** %210, align 8, !dbg !1925
  %212 = load i8**, i8*** %11, align 8, !dbg !1926
  %213 = getelementptr inbounds i8*, i8** %212, i64 5, !dbg !1926
  %214 = load i8*, i8** %213, align 8, !dbg !1926
  %215 = load i8**, i8*** %11, align 8, !dbg !1927
  %216 = getelementptr inbounds i8*, i8** %215, i64 6, !dbg !1927
  %217 = load i8*, i8** %216, align 8, !dbg !1927
  %218 = load i8**, i8*** %11, align 8, !dbg !1928
  %219 = getelementptr inbounds i8*, i8** %218, i64 7, !dbg !1928
  %220 = load i8*, i8** %219, align 8, !dbg !1928
  %221 = load i8**, i8*** %11, align 8, !dbg !1929
  %222 = getelementptr inbounds i8*, i8** %221, i64 8, !dbg !1929
  %223 = load i8*, i8** %222, align 8, !dbg !1929
  %224 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %196, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.13.92, i32 0, i32 0), i8* %199, i8* %202, i8* %205, i8* %208, i8* %211, i8* %214, i8* %217, i8* %220, i8* %223), !dbg !1930
  br label %225, !dbg !1931

; <label>:225:                                    ; preds = %195, %165, %138, %114, %93, %75, %60, %48, %39, %33
  ret void, !dbg !1932
}

; Function Attrs: noinline nounwind uwtable
define void @version_etc_ar(%struct._IO_FILE*, i8*, i8*, i8*, i8**) #3 !dbg !1933 {
  %6 = alloca %struct._IO_FILE*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i8*, align 8
  %10 = alloca i8**, align 8
  %11 = alloca i64, align 8
  store %struct._IO_FILE* %0, %struct._IO_FILE** %6, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %6, metadata !1936, metadata !DIExpression()), !dbg !1937
  store i8* %1, i8** %7, align 8
  call void @llvm.dbg.declare(metadata i8** %7, metadata !1938, metadata !DIExpression()), !dbg !1939
  store i8* %2, i8** %8, align 8
  call void @llvm.dbg.declare(metadata i8** %8, metadata !1940, metadata !DIExpression()), !dbg !1941
  store i8* %3, i8** %9, align 8
  call void @llvm.dbg.declare(metadata i8** %9, metadata !1942, metadata !DIExpression()), !dbg !1943
  store i8** %4, i8*** %10, align 8
  call void @llvm.dbg.declare(metadata i8*** %10, metadata !1944, metadata !DIExpression()), !dbg !1945
  call void @llvm.dbg.declare(metadata i64* %11, metadata !1946, metadata !DIExpression()), !dbg !1947
  store i64 0, i64* %11, align 8, !dbg !1948
  br label %12, !dbg !1950

; <label>:12:                                     ; preds = %19, %5
  %13 = load i8**, i8*** %10, align 8, !dbg !1951
  %14 = load i64, i64* %11, align 8, !dbg !1953
  %15 = getelementptr inbounds i8*, i8** %13, i64 %14, !dbg !1951
  %16 = load i8*, i8** %15, align 8, !dbg !1951
  %17 = icmp ne i8* %16, null, !dbg !1954
  br i1 %17, label %18, label %22, !dbg !1954

; <label>:18:                                     ; preds = %12
  br label %19, !dbg !1954

; <label>:19:                                     ; preds = %18
  %20 = load i64, i64* %11, align 8, !dbg !1955
  %21 = add i64 %20, 1, !dbg !1955
  store i64 %21, i64* %11, align 8, !dbg !1955
  br label %12, !dbg !1956, !llvm.loop !1957

; <label>:22:                                     ; preds = %12
  %23 = load %struct._IO_FILE*, %struct._IO_FILE** %6, align 8, !dbg !1959
  %24 = load i8*, i8** %7, align 8, !dbg !1960
  %25 = load i8*, i8** %8, align 8, !dbg !1961
  %26 = load i8*, i8** %9, align 8, !dbg !1962
  %27 = load i8**, i8*** %10, align 8, !dbg !1963
  %28 = load i64, i64* %11, align 8, !dbg !1964
  call void @version_etc_arn(%struct._IO_FILE* %23, i8* %24, i8* %25, i8* %26, i8** %27, i64 %28), !dbg !1965
  ret void, !dbg !1966
}

; Function Attrs: noinline nounwind uwtable
define void @version_etc_va(%struct._IO_FILE*, i8*, i8*, i8*, %struct.__va_list_tag*) #3 !dbg !1967 {
  %6 = alloca %struct._IO_FILE*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i8*, align 8
  %10 = alloca %struct.__va_list_tag*, align 8
  %11 = alloca i64, align 8
  %12 = alloca [10 x i8*], align 16
  store %struct._IO_FILE* %0, %struct._IO_FILE** %6, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %6, metadata !1977, metadata !DIExpression()), !dbg !1978
  store i8* %1, i8** %7, align 8
  call void @llvm.dbg.declare(metadata i8** %7, metadata !1979, metadata !DIExpression()), !dbg !1980
  store i8* %2, i8** %8, align 8
  call void @llvm.dbg.declare(metadata i8** %8, metadata !1981, metadata !DIExpression()), !dbg !1982
  store i8* %3, i8** %9, align 8
  call void @llvm.dbg.declare(metadata i8** %9, metadata !1983, metadata !DIExpression()), !dbg !1984
  store %struct.__va_list_tag* %4, %struct.__va_list_tag** %10, align 8
  call void @llvm.dbg.declare(metadata %struct.__va_list_tag** %10, metadata !1985, metadata !DIExpression()), !dbg !1986
  call void @llvm.dbg.declare(metadata i64* %11, metadata !1987, metadata !DIExpression()), !dbg !1988
  call void @llvm.dbg.declare(metadata [10 x i8*]* %12, metadata !1989, metadata !DIExpression()), !dbg !1993
  store i64 0, i64* %11, align 8, !dbg !1994
  br label %13, !dbg !1996

; <label>:13:                                     ; preds = %41, %5
  %14 = load i64, i64* %11, align 8, !dbg !1997
  %15 = icmp ult i64 %14, 10, !dbg !1999
  br i1 %15, label %16, label %38, !dbg !2000

; <label>:16:                                     ; preds = %13
  %17 = load %struct.__va_list_tag*, %struct.__va_list_tag** %10, align 8, !dbg !2001
  %18 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %17, i32 0, i32 0, !dbg !2001
  %19 = load i32, i32* %18, align 8, !dbg !2001
  %20 = icmp ule i32 %19, 40, !dbg !2001
  br i1 %20, label %21, label %27, !dbg !2001

; <label>:21:                                     ; preds = %16
  %22 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %17, i32 0, i32 3, !dbg !2001
  %23 = load i8*, i8** %22, align 8, !dbg !2001
  %24 = getelementptr i8, i8* %23, i32 %19, !dbg !2001
  %25 = bitcast i8* %24 to i8**, !dbg !2001
  %26 = add i32 %19, 8, !dbg !2001
  store i32 %26, i32* %18, align 8, !dbg !2001
  br label %32, !dbg !2001

; <label>:27:                                     ; preds = %16
  %28 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %17, i32 0, i32 2, !dbg !2001
  %29 = load i8*, i8** %28, align 8, !dbg !2001
  %30 = bitcast i8* %29 to i8**, !dbg !2001
  %31 = getelementptr i8, i8* %29, i32 8, !dbg !2001
  store i8* %31, i8** %28, align 8, !dbg !2001
  br label %32, !dbg !2001

; <label>:32:                                     ; preds = %27, %21
  %33 = phi i8** [ %25, %21 ], [ %30, %27 ], !dbg !2001
  %34 = load i8*, i8** %33, align 8, !dbg !2001
  %35 = load i64, i64* %11, align 8, !dbg !2002
  %36 = getelementptr inbounds [10 x i8*], [10 x i8*]* %12, i64 0, i64 %35, !dbg !2003
  store i8* %34, i8** %36, align 8, !dbg !2004
  %37 = icmp ne i8* %34, null, !dbg !2005
  br label %38

; <label>:38:                                     ; preds = %32, %13
  %39 = phi i1 [ false, %13 ], [ %37, %32 ]
  br i1 %39, label %40, label %44, !dbg !2006

; <label>:40:                                     ; preds = %38
  br label %41, !dbg !2006

; <label>:41:                                     ; preds = %40
  %42 = load i64, i64* %11, align 8, !dbg !2007
  %43 = add i64 %42, 1, !dbg !2007
  store i64 %43, i64* %11, align 8, !dbg !2007
  br label %13, !dbg !2008, !llvm.loop !2009

; <label>:44:                                     ; preds = %38
  %45 = load %struct._IO_FILE*, %struct._IO_FILE** %6, align 8, !dbg !2011
  %46 = load i8*, i8** %7, align 8, !dbg !2012
  %47 = load i8*, i8** %8, align 8, !dbg !2013
  %48 = load i8*, i8** %9, align 8, !dbg !2014
  %49 = getelementptr inbounds [10 x i8*], [10 x i8*]* %12, i32 0, i32 0, !dbg !2015
  %50 = load i64, i64* %11, align 8, !dbg !2016
  call void @version_etc_arn(%struct._IO_FILE* %45, i8* %46, i8* %47, i8* %48, i8** %49, i64 %50), !dbg !2017
  ret void, !dbg !2018
}

; Function Attrs: noinline nounwind uwtable
define void @version_etc(%struct._IO_FILE*, i8*, i8*, i8*, ...) #3 !dbg !2019 {
  %5 = alloca %struct._IO_FILE*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca [1 x %struct.__va_list_tag], align 16
  store %struct._IO_FILE* %0, %struct._IO_FILE** %5, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %5, metadata !2022, metadata !DIExpression()), !dbg !2023
  store i8* %1, i8** %6, align 8
  call void @llvm.dbg.declare(metadata i8** %6, metadata !2024, metadata !DIExpression()), !dbg !2025
  store i8* %2, i8** %7, align 8
  call void @llvm.dbg.declare(metadata i8** %7, metadata !2026, metadata !DIExpression()), !dbg !2027
  store i8* %3, i8** %8, align 8
  call void @llvm.dbg.declare(metadata i8** %8, metadata !2028, metadata !DIExpression()), !dbg !2029
  call void @llvm.dbg.declare(metadata [1 x %struct.__va_list_tag]* %9, metadata !2030, metadata !DIExpression()), !dbg !2037
  %10 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %9, i32 0, i32 0, !dbg !2038
  %11 = bitcast %struct.__va_list_tag* %10 to i8*, !dbg !2038
  call void @llvm.va_start(i8* %11), !dbg !2038
  %12 = load %struct._IO_FILE*, %struct._IO_FILE** %5, align 8, !dbg !2039
  %13 = load i8*, i8** %6, align 8, !dbg !2040
  %14 = load i8*, i8** %7, align 8, !dbg !2041
  %15 = load i8*, i8** %8, align 8, !dbg !2042
  %16 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %9, i32 0, i32 0, !dbg !2043
  call void @version_etc_va(%struct._IO_FILE* %12, i8* %13, i8* %14, i8* %15, %struct.__va_list_tag* %16), !dbg !2044
  %17 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %9, i32 0, i32 0, !dbg !2045
  %18 = bitcast %struct.__va_list_tag* %17 to i8*, !dbg !2045
  call void @llvm.va_end(i8* %18), !dbg !2045
  ret void, !dbg !2046
}

; Function Attrs: nounwind
declare void @llvm.va_start(i8*) #8

; Function Attrs: nounwind
declare void @llvm.va_end(i8*) #8

; Function Attrs: noinline nounwind uwtable
define void @emit_bug_reporting_address() #3 !dbg !2047 {
  %1 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.95, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.15.96, i32 0, i32 0)), !dbg !2048
  %2 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.16.97, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.17.98, i32 0, i32 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.18.99, i32 0, i32 0)), !dbg !2049
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2050
  %4 = call i32 @fputs_unlocked(i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.19.100, i32 0, i32 0), %struct._IO_FILE* %3), !dbg !2050
  ret void, !dbg !2051
}

; Function Attrs: noinline nounwind uwtable
define i8* @last_component(i8*) #3 !dbg !2052 {
  %2 = alloca i8*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca i8, align 1
  store i8* %0, i8** %2, align 8
  call void @llvm.dbg.declare(metadata i8** %2, metadata !2053, metadata !DIExpression()), !dbg !2054
  call void @llvm.dbg.declare(metadata i8** %3, metadata !2055, metadata !DIExpression()), !dbg !2056
  %6 = load i8*, i8** %2, align 8, !dbg !2057
  %7 = getelementptr inbounds i8, i8* %6, i64 0, !dbg !2058
  store i8* %7, i8** %3, align 8, !dbg !2056
  call void @llvm.dbg.declare(metadata i8** %4, metadata !2059, metadata !DIExpression()), !dbg !2060
  call void @llvm.dbg.declare(metadata i8* %5, metadata !2061, metadata !DIExpression()), !dbg !2062
  store i8 0, i8* %5, align 1, !dbg !2062
  br label %8, !dbg !2063

; <label>:8:                                      ; preds = %13, %1
  %9 = load i8*, i8** %3, align 8, !dbg !2064
  %10 = load i8, i8* %9, align 1, !dbg !2064
  %11 = sext i8 %10 to i32, !dbg !2064
  %12 = icmp eq i32 %11, 47, !dbg !2064
  br i1 %12, label %13, label %16, !dbg !2063

; <label>:13:                                     ; preds = %8
  %14 = load i8*, i8** %3, align 8, !dbg !2065
  %15 = getelementptr inbounds i8, i8* %14, i32 1, !dbg !2065
  store i8* %15, i8** %3, align 8, !dbg !2065
  br label %8, !dbg !2063, !llvm.loop !2066

; <label>:16:                                     ; preds = %8
  %17 = load i8*, i8** %3, align 8, !dbg !2067
  store i8* %17, i8** %4, align 8, !dbg !2069
  br label %18, !dbg !2070

; <label>:18:                                     ; preds = %35, %16
  %19 = load i8*, i8** %4, align 8, !dbg !2071
  %20 = load i8, i8* %19, align 1, !dbg !2073
  %21 = icmp ne i8 %20, 0, !dbg !2074
  br i1 %21, label %22, label %38, !dbg !2074

; <label>:22:                                     ; preds = %18
  %23 = load i8*, i8** %4, align 8, !dbg !2075
  %24 = load i8, i8* %23, align 1, !dbg !2075
  %25 = sext i8 %24 to i32, !dbg !2075
  %26 = icmp eq i32 %25, 47, !dbg !2075
  br i1 %26, label %27, label %28, !dbg !2078

; <label>:27:                                     ; preds = %22
  store i8 1, i8* %5, align 1, !dbg !2079
  br label %34, !dbg !2080

; <label>:28:                                     ; preds = %22
  %29 = load i8, i8* %5, align 1, !dbg !2081
  %30 = trunc i8 %29 to i1, !dbg !2081
  br i1 %30, label %31, label %33, !dbg !2083

; <label>:31:                                     ; preds = %28
  %32 = load i8*, i8** %4, align 8, !dbg !2084
  store i8* %32, i8** %3, align 8, !dbg !2086
  store i8 0, i8* %5, align 1, !dbg !2087
  br label %33, !dbg !2088

; <label>:33:                                     ; preds = %31, %28
  br label %34

; <label>:34:                                     ; preds = %33, %27
  br label %35, !dbg !2089

; <label>:35:                                     ; preds = %34
  %36 = load i8*, i8** %4, align 8, !dbg !2090
  %37 = getelementptr inbounds i8, i8* %36, i32 1, !dbg !2090
  store i8* %37, i8** %4, align 8, !dbg !2090
  br label %18, !dbg !2091, !llvm.loop !2092

; <label>:38:                                     ; preds = %18
  %39 = load i8*, i8** %3, align 8, !dbg !2094
  ret i8* %39, !dbg !2095
}

; Function Attrs: noinline nounwind uwtable
define i64 @base_len(i8*) #3 !dbg !2096 {
  %2 = alloca i8*, align 8
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  store i8* %0, i8** %2, align 8
  call void @llvm.dbg.declare(metadata i8** %2, metadata !2099, metadata !DIExpression()), !dbg !2100
  call void @llvm.dbg.declare(metadata i64* %3, metadata !2101, metadata !DIExpression()), !dbg !2102
  call void @llvm.dbg.declare(metadata i64* %4, metadata !2103, metadata !DIExpression()), !dbg !2104
  store i64 0, i64* %4, align 8, !dbg !2104
  %5 = load i8*, i8** %2, align 8, !dbg !2105
  %6 = call i64 @strlen(i8* %5) #12, !dbg !2107
  store i64 %6, i64* %3, align 8, !dbg !2108
  br label %7, !dbg !2109

; <label>:7:                                      ; preds = %21, %1
  %8 = load i64, i64* %3, align 8, !dbg !2110
  %9 = icmp ult i64 1, %8, !dbg !2112
  br i1 %9, label %10, label %18, !dbg !2113

; <label>:10:                                     ; preds = %7
  %11 = load i8*, i8** %2, align 8, !dbg !2114
  %12 = load i64, i64* %3, align 8, !dbg !2114
  %13 = sub i64 %12, 1, !dbg !2114
  %14 = getelementptr inbounds i8, i8* %11, i64 %13, !dbg !2114
  %15 = load i8, i8* %14, align 1, !dbg !2114
  %16 = sext i8 %15 to i32, !dbg !2114
  %17 = icmp eq i32 %16, 47, !dbg !2114
  br label %18

; <label>:18:                                     ; preds = %10, %7
  %19 = phi i1 [ false, %7 ], [ %17, %10 ]
  br i1 %19, label %20, label %24, !dbg !2115

; <label>:20:                                     ; preds = %18
  br label %21, !dbg !2116

; <label>:21:                                     ; preds = %20
  %22 = load i64, i64* %3, align 8, !dbg !2117
  %23 = add i64 %22, -1, !dbg !2117
  store i64 %23, i64* %3, align 8, !dbg !2117
  br label %7, !dbg !2118, !llvm.loop !2119

; <label>:24:                                     ; preds = %18
  %25 = load i64, i64* %3, align 8, !dbg !2121
  ret i64 %25, !dbg !2122
}

; Function Attrs: noinline nounwind uwtable
define void @close_stdout_set_file_name(i8*) #3 !dbg !2123 {
  %2 = alloca i8*, align 8
  store i8* %0, i8** %2, align 8
  call void @llvm.dbg.declare(metadata i8** %2, metadata !2124, metadata !DIExpression()), !dbg !2125
  %3 = load i8*, i8** %2, align 8, !dbg !2126
  store i8* %3, i8** @file_name, align 8, !dbg !2127
  ret void, !dbg !2128
}

; Function Attrs: noinline nounwind uwtable
define void @close_stdout_set_ignore_EPIPE(i1 zeroext) #3 !dbg !2129 {
  %2 = alloca i8, align 1
  %3 = zext i1 %0 to i8
  store i8 %3, i8* %2, align 1
  call void @llvm.dbg.declare(metadata i8* %2, metadata !2132, metadata !DIExpression()), !dbg !2133
  %4 = load i8, i8* %2, align 1, !dbg !2134
  %5 = trunc i8 %4 to i1, !dbg !2134
  %6 = zext i1 %5 to i8, !dbg !2135
  store i8 %6, i8* @ignore_EPIPE, align 1, !dbg !2135
  ret void, !dbg !2136
}

; Function Attrs: noinline nounwind uwtable
define void @close_stdout() #3 !dbg !2137 {
  %1 = alloca i8*, align 8
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2138
  %3 = call i32 @close_stream(%struct._IO_FILE* %2), !dbg !2140
  %4 = icmp ne i32 %3, 0, !dbg !2141
  br i1 %4, label %5, label %27, !dbg !2142

; <label>:5:                                      ; preds = %0
  %6 = load i8, i8* @ignore_EPIPE, align 1, !dbg !2143
  %7 = trunc i8 %6 to i1, !dbg !2143
  br i1 %7, label %8, label %12, !dbg !2144

; <label>:8:                                      ; preds = %5
  %9 = call i32* @__errno_location() #14, !dbg !2145
  %10 = load i32, i32* %9, align 4, !dbg !2145
  %11 = icmp eq i32 %10, 32, !dbg !2146
  br i1 %11, label %27, label %12, !dbg !2147

; <label>:12:                                     ; preds = %8, %5
  call void @llvm.dbg.declare(metadata i8** %1, metadata !2148, metadata !DIExpression()), !dbg !2150
  store i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.107, i32 0, i32 0), i8** %1, align 8, !dbg !2150
  %13 = load i8*, i8** @file_name, align 8, !dbg !2151
  %14 = icmp ne i8* %13, null, !dbg !2151
  br i1 %14, label %15, label %21, !dbg !2153

; <label>:15:                                     ; preds = %12
  %16 = call i32* @__errno_location() #14, !dbg !2154
  %17 = load i32, i32* %16, align 4, !dbg !2154
  %18 = load i8*, i8** @file_name, align 8, !dbg !2155
  %19 = call i8* @quotearg_colon(i8* %18), !dbg !2156
  %20 = load i8*, i8** %1, align 8, !dbg !2157
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %17, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1.108, i32 0, i32 0), i8* %19, i8* %20), !dbg !2158
  br label %25, !dbg !2158

; <label>:21:                                     ; preds = %12
  %22 = call i32* @__errno_location() #14, !dbg !2159
  %23 = load i32, i32* %22, align 4, !dbg !2159
  %24 = load i8*, i8** %1, align 8, !dbg !2160
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %23, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2.109, i32 0, i32 0), i8* %24), !dbg !2161
  br label %25

; <label>:25:                                     ; preds = %21, %15
  %26 = load volatile i32, i32* @exit_failure, align 4, !dbg !2162
  call void @_exit(i32 %26) #13, !dbg !2163
  unreachable, !dbg !2163

; <label>:27:                                     ; preds = %8, %0
  %28 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !2164
  %29 = call i32 @close_stream(%struct._IO_FILE* %28), !dbg !2166
  %30 = icmp ne i32 %29, 0, !dbg !2167
  br i1 %30, label %31, label %33, !dbg !2168

; <label>:31:                                     ; preds = %27
  %32 = load volatile i32, i32* @exit_failure, align 4, !dbg !2169
  call void @_exit(i32 %32) #13, !dbg !2170
  unreachable, !dbg !2170

; <label>:33:                                     ; preds = %27
  ret void, !dbg !2171
}

; Function Attrs: noreturn
declare void @_exit(i32) #9

; Function Attrs: noinline nounwind uwtable
define %struct.FTS* @fts_open(i8**, i32, i32 (%struct._ftsent**, %struct._ftsent**)*) #3 !dbg !2172 {
  %4 = alloca %struct.FTS*, align 8
  %5 = alloca i8**, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32 (%struct._ftsent**, %struct._ftsent**)*, align 8
  %8 = alloca %struct.FTS*, align 8
  %9 = alloca %struct._ftsent*, align 8
  %10 = alloca %struct._ftsent*, align 8
  %11 = alloca i64, align 8
  %12 = alloca %struct._ftsent*, align 8
  %13 = alloca %struct._ftsent*, align 8
  %14 = alloca i8, align 1
  %15 = alloca i32, align 4
  %16 = alloca i64, align 8
  %17 = alloca i64, align 8
  store i8** %0, i8*** %5, align 8
  call void @llvm.dbg.declare(metadata i8*** %5, metadata !2180, metadata !DIExpression()), !dbg !2181
  store i32 %1, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !2182, metadata !DIExpression()), !dbg !2183
  store i32 (%struct._ftsent**, %struct._ftsent**)* %2, i32 (%struct._ftsent**, %struct._ftsent**)** %7, align 8
  call void @llvm.dbg.declare(metadata i32 (%struct._ftsent**, %struct._ftsent**)** %7, metadata !2184, metadata !DIExpression()), !dbg !2185
  call void @llvm.dbg.declare(metadata %struct.FTS** %8, metadata !2186, metadata !DIExpression()), !dbg !2187
  call void @llvm.dbg.declare(metadata %struct._ftsent** %9, metadata !2188, metadata !DIExpression()), !dbg !2190
  call void @llvm.dbg.declare(metadata %struct._ftsent** %10, metadata !2191, metadata !DIExpression()), !dbg !2192
  call void @llvm.dbg.declare(metadata i64* %11, metadata !2193, metadata !DIExpression()), !dbg !2194
  call void @llvm.dbg.declare(metadata %struct._ftsent** %12, metadata !2195, metadata !DIExpression()), !dbg !2196
  store %struct._ftsent* null, %struct._ftsent** %12, align 8, !dbg !2196
  call void @llvm.dbg.declare(metadata %struct._ftsent** %13, metadata !2197, metadata !DIExpression()), !dbg !2198
  store %struct._ftsent* null, %struct._ftsent** %13, align 8, !dbg !2198
  call void @llvm.dbg.declare(metadata i8* %14, metadata !2199, metadata !DIExpression()), !dbg !2200
  %18 = load i32, i32* %6, align 4, !dbg !2201
  %19 = and i32 %18, -2048, !dbg !2203
  %20 = icmp ne i32 %19, 0, !dbg !2203
  br i1 %20, label %21, label %23, !dbg !2204

; <label>:21:                                     ; preds = %3
  %22 = call i32* @__errno_location() #14, !dbg !2205
  store i32 22, i32* %22, align 4, !dbg !2205
  store %struct.FTS* null, %struct.FTS** %4, align 8, !dbg !2207
  br label %259, !dbg !2207

; <label>:23:                                     ; preds = %3
  %24 = load i32, i32* %6, align 4, !dbg !2208
  %25 = and i32 %24, 4, !dbg !2210
  %26 = icmp ne i32 %25, 0, !dbg !2210
  br i1 %26, label %27, label %33, !dbg !2211

; <label>:27:                                     ; preds = %23
  %28 = load i32, i32* %6, align 4, !dbg !2212
  %29 = and i32 %28, 512, !dbg !2213
  %30 = icmp ne i32 %29, 0, !dbg !2213
  br i1 %30, label %31, label %33, !dbg !2214

; <label>:31:                                     ; preds = %27
  %32 = call i32* @__errno_location() #14, !dbg !2215
  store i32 22, i32* %32, align 4, !dbg !2215
  store %struct.FTS* null, %struct.FTS** %4, align 8, !dbg !2217
  br label %259, !dbg !2217

; <label>:33:                                     ; preds = %27, %23
  %34 = load i32, i32* %6, align 4, !dbg !2218
  %35 = and i32 %34, 18, !dbg !2220
  %36 = icmp ne i32 %35, 0, !dbg !2220
  br i1 %36, label %39, label %37, !dbg !2221

; <label>:37:                                     ; preds = %33
  %38 = call i32* @__errno_location() #14, !dbg !2222
  store i32 22, i32* %38, align 4, !dbg !2222
  store %struct.FTS* null, %struct.FTS** %4, align 8, !dbg !2224
  br label %259, !dbg !2224

; <label>:39:                                     ; preds = %33
  %40 = call noalias i8* @malloc(i64 128) #8, !dbg !2225
  %41 = bitcast i8* %40 to %struct.FTS*, !dbg !2225
  store %struct.FTS* %41, %struct.FTS** %8, align 8, !dbg !2227
  %42 = icmp eq %struct.FTS* %41, null, !dbg !2228
  br i1 %42, label %43, label %44, !dbg !2229

; <label>:43:                                     ; preds = %39
  store %struct.FTS* null, %struct.FTS** %4, align 8, !dbg !2230
  br label %259, !dbg !2230

; <label>:44:                                     ; preds = %39
  %45 = load %struct.FTS*, %struct.FTS** %8, align 8, !dbg !2231
  %46 = bitcast %struct.FTS* %45 to i8*, !dbg !2232
  call void @llvm.memset.p0i8.i64(i8* %46, i8 0, i64 128, i32 8, i1 false), !dbg !2232
  %47 = load i32 (%struct._ftsent**, %struct._ftsent**)*, i32 (%struct._ftsent**, %struct._ftsent**)** %7, align 8, !dbg !2233
  %48 = load %struct.FTS*, %struct.FTS** %8, align 8, !dbg !2234
  %49 = getelementptr inbounds %struct.FTS, %struct.FTS* %48, i32 0, i32 9, !dbg !2235
  store i32 (%struct._ftsent**, %struct._ftsent**)* %47, i32 (%struct._ftsent**, %struct._ftsent**)** %49, align 8, !dbg !2236
  %50 = load i32, i32* %6, align 4, !dbg !2237
  %51 = load %struct.FTS*, %struct.FTS** %8, align 8, !dbg !2238
  %52 = getelementptr inbounds %struct.FTS, %struct.FTS* %51, i32 0, i32 10, !dbg !2239
  store i32 %50, i32* %52, align 8, !dbg !2240
  %53 = load %struct.FTS*, %struct.FTS** %8, align 8, !dbg !2241
  %54 = getelementptr inbounds %struct.FTS, %struct.FTS* %53, i32 0, i32 10, !dbg !2241
  %55 = load i32, i32* %54, align 8, !dbg !2241
  %56 = and i32 %55, 2, !dbg !2241
  %57 = icmp ne i32 %56, 0, !dbg !2241
  br i1 %57, label %58, label %67, !dbg !2243

; <label>:58:                                     ; preds = %44
  %59 = load %struct.FTS*, %struct.FTS** %8, align 8, !dbg !2244
  %60 = getelementptr inbounds %struct.FTS, %struct.FTS* %59, i32 0, i32 10, !dbg !2244
  %61 = load i32, i32* %60, align 8, !dbg !2244
  %62 = or i32 %61, 4, !dbg !2244
  store i32 %62, i32* %60, align 8, !dbg !2244
  %63 = load %struct.FTS*, %struct.FTS** %8, align 8, !dbg !2246
  %64 = getelementptr inbounds %struct.FTS, %struct.FTS* %63, i32 0, i32 10, !dbg !2246
  %65 = load i32, i32* %64, align 8, !dbg !2246
  %66 = and i32 %65, -513, !dbg !2246
  store i32 %66, i32* %64, align 8, !dbg !2246
  br label %67, !dbg !2247

; <label>:67:                                     ; preds = %58, %44
  %68 = load %struct.FTS*, %struct.FTS** %8, align 8, !dbg !2248
  %69 = getelementptr inbounds %struct.FTS, %struct.FTS* %68, i32 0, i32 6, !dbg !2249
  store i32 -100, i32* %69, align 4, !dbg !2250
  %70 = load %struct.FTS*, %struct.FTS** %8, align 8, !dbg !2251
  %71 = getelementptr inbounds %struct.FTS, %struct.FTS* %70, i32 0, i32 10, !dbg !2251
  %72 = load i32, i32* %71, align 8, !dbg !2251
  %73 = and i32 %72, 512, !dbg !2251
  %74 = icmp ne i32 %73, 0, !dbg !2251
  br i1 %74, label %75, label %85, !dbg !2253

; <label>:75:                                     ; preds = %67
  br i1 true, label %85, label %76, !dbg !2254

; <label>:76:                                     ; preds = %75
  call void @llvm.dbg.declare(metadata i32* %15, metadata !2255, metadata !DIExpression()), !dbg !2257
  %77 = call i32 (i8*, i32, ...) @open_safer(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.112, i32 0, i32 0), i32 0), !dbg !2258
  store i32 %77, i32* %15, align 4, !dbg !2257
  %78 = load i32, i32* %15, align 4, !dbg !2259
  %79 = icmp slt i32 %78, 0, !dbg !2261
  br i1 %79, label %80, label %81, !dbg !2262

; <label>:80:                                     ; preds = %76
  br label %84, !dbg !2263

; <label>:81:                                     ; preds = %76
  %82 = load i32, i32* %15, align 4, !dbg !2265
  %83 = call i32 @close(i32 %82), !dbg !2267
  br label %84

; <label>:84:                                     ; preds = %81, %80
  br label %85, !dbg !2268

; <label>:85:                                     ; preds = %84, %75, %67
  call void @llvm.dbg.declare(metadata i64* %16, metadata !2269, metadata !DIExpression()), !dbg !2271
  %86 = load i8**, i8*** %5, align 8, !dbg !2272
  %87 = call i64 @fts_maxarglen(i8** %86), !dbg !2273
  store i64 %87, i64* %16, align 8, !dbg !2271
  %88 = load %struct.FTS*, %struct.FTS** %8, align 8, !dbg !2274
  %89 = load i64, i64* %16, align 8, !dbg !2276
  %90 = icmp ugt i64 %89, 4096, !dbg !2276
  br i1 %90, label %91, label %93, !dbg !2276

; <label>:91:                                     ; preds = %85
  %92 = load i64, i64* %16, align 8, !dbg !2276
  br label %94, !dbg !2276

; <label>:93:                                     ; preds = %85
  br label %94, !dbg !2276

; <label>:94:                                     ; preds = %93, %91
  %95 = phi i64 [ %92, %91 ], [ 4096, %93 ], !dbg !2276
  %96 = call zeroext i1 @fts_palloc(%struct.FTS* %88, i64 %95), !dbg !2277
  br i1 %96, label %98, label %97, !dbg !2278

; <label>:97:                                     ; preds = %94
  br label %256, !dbg !2279

; <label>:98:                                     ; preds = %94
  %99 = load i8**, i8*** %5, align 8, !dbg !2280
  %100 = load i8*, i8** %99, align 8, !dbg !2282
  %101 = icmp ne i8* %100, null, !dbg !2283
  br i1 %101, label %102, label %110, !dbg !2284

; <label>:102:                                    ; preds = %98
  %103 = load %struct.FTS*, %struct.FTS** %8, align 8, !dbg !2285
  %104 = call %struct._ftsent* @fts_alloc(%struct.FTS* %103, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1.113, i32 0, i32 0), i64 0), !dbg !2288
  store %struct._ftsent* %104, %struct._ftsent** %12, align 8, !dbg !2289
  %105 = icmp eq %struct._ftsent* %104, null, !dbg !2290
  br i1 %105, label %106, label %107, !dbg !2291

; <label>:106:                                    ; preds = %102
  br label %252, !dbg !2292

; <label>:107:                                    ; preds = %102
  %108 = load %struct._ftsent*, %struct._ftsent** %12, align 8, !dbg !2293
  %109 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %108, i32 0, i32 11, !dbg !2294
  store i64 -1, i64* %109, align 8, !dbg !2295
  br label %110, !dbg !2296

; <label>:110:                                    ; preds = %107, %98
  %111 = load i32 (%struct._ftsent**, %struct._ftsent**)*, i32 (%struct._ftsent**, %struct._ftsent**)** %7, align 8, !dbg !2297
  %112 = icmp eq i32 (%struct._ftsent**, %struct._ftsent**)* %111, null, !dbg !2298
  br i1 %112, label %119, label %113, !dbg !2299

; <label>:113:                                    ; preds = %110
  %114 = load %struct.FTS*, %struct.FTS** %8, align 8, !dbg !2300
  %115 = getelementptr inbounds %struct.FTS, %struct.FTS* %114, i32 0, i32 10, !dbg !2300
  %116 = load i32, i32* %115, align 8, !dbg !2300
  %117 = and i32 %116, 1024, !dbg !2300
  %118 = icmp ne i32 %117, 0, !dbg !2299
  br label %119, !dbg !2299

; <label>:119:                                    ; preds = %113, %110
  %120 = phi i1 [ true, %110 ], [ %118, %113 ]
  %121 = zext i1 %120 to i8, !dbg !2301
  store i8 %121, i8* %14, align 1, !dbg !2301
  store %struct._ftsent* null, %struct._ftsent** %10, align 8, !dbg !2302
  store i64 0, i64* %11, align 8, !dbg !2304
  br label %122, !dbg !2305

; <label>:122:                                    ; preds = %185, %119
  %123 = load i8**, i8*** %5, align 8, !dbg !2306
  %124 = load i8*, i8** %123, align 8, !dbg !2308
  %125 = icmp ne i8* %124, null, !dbg !2309
  br i1 %125, label %126, label %190, !dbg !2310

; <label>:126:                                    ; preds = %122
  call void @llvm.dbg.declare(metadata i64* %17, metadata !2311, metadata !DIExpression()), !dbg !2313
  %127 = load i8**, i8*** %5, align 8, !dbg !2314
  %128 = load i8*, i8** %127, align 8, !dbg !2315
  %129 = call i64 @strlen(i8* %128) #12, !dbg !2316
  store i64 %129, i64* %17, align 8, !dbg !2313
  %130 = load %struct.FTS*, %struct.FTS** %8, align 8, !dbg !2317
  %131 = load i8**, i8*** %5, align 8, !dbg !2319
  %132 = load i8*, i8** %131, align 8, !dbg !2320
  %133 = load i64, i64* %17, align 8, !dbg !2321
  %134 = call %struct._ftsent* @fts_alloc(%struct.FTS* %130, i8* %132, i64 %133), !dbg !2322
  store %struct._ftsent* %134, %struct._ftsent** %9, align 8, !dbg !2323
  %135 = icmp eq %struct._ftsent* %134, null, !dbg !2324
  br i1 %135, label %136, label %137, !dbg !2325

; <label>:136:                                    ; preds = %126
  br label %248, !dbg !2326

; <label>:137:                                    ; preds = %126
  %138 = load %struct._ftsent*, %struct._ftsent** %9, align 8, !dbg !2327
  %139 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %138, i32 0, i32 11, !dbg !2328
  store i64 0, i64* %139, align 8, !dbg !2329
  %140 = load %struct._ftsent*, %struct._ftsent** %12, align 8, !dbg !2330
  %141 = load %struct._ftsent*, %struct._ftsent** %9, align 8, !dbg !2331
  %142 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %141, i32 0, i32 1, !dbg !2332
  store %struct._ftsent* %140, %struct._ftsent** %142, align 8, !dbg !2333
  %143 = load %struct._ftsent*, %struct._ftsent** %9, align 8, !dbg !2334
  %144 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %143, i32 0, i32 18, !dbg !2335
  %145 = getelementptr inbounds [1 x i8], [1 x i8]* %144, i32 0, i32 0, !dbg !2334
  %146 = load %struct._ftsent*, %struct._ftsent** %9, align 8, !dbg !2336
  %147 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %146, i32 0, i32 5, !dbg !2337
  store i8* %145, i8** %147, align 8, !dbg !2338
  %148 = load i8, i8* %14, align 1, !dbg !2339
  %149 = trunc i8 %148 to i1, !dbg !2339
  br i1 %149, label %150, label %157, !dbg !2341

; <label>:150:                                    ; preds = %137
  %151 = load %struct._ftsent*, %struct._ftsent** %10, align 8, !dbg !2342
  %152 = icmp ne %struct._ftsent* %151, null, !dbg !2343
  br i1 %152, label %153, label %157, !dbg !2344

; <label>:153:                                    ; preds = %150
  %154 = load %struct._ftsent*, %struct._ftsent** %9, align 8, !dbg !2345
  %155 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %154, i32 0, i32 14, !dbg !2347
  store i16 11, i16* %155, align 8, !dbg !2348
  %156 = load %struct._ftsent*, %struct._ftsent** %9, align 8, !dbg !2349
  call void @fts_set_stat_required(%struct._ftsent* %156, i1 zeroext true), !dbg !2350
  br label %163, !dbg !2351

; <label>:157:                                    ; preds = %150, %137
  %158 = load %struct.FTS*, %struct.FTS** %8, align 8, !dbg !2352
  %159 = load %struct._ftsent*, %struct._ftsent** %9, align 8, !dbg !2354
  %160 = call zeroext i16 @fts_stat(%struct.FTS* %158, %struct._ftsent* %159, i1 zeroext false), !dbg !2355
  %161 = load %struct._ftsent*, %struct._ftsent** %9, align 8, !dbg !2356
  %162 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %161, i32 0, i32 14, !dbg !2357
  store i16 %160, i16* %162, align 8, !dbg !2358
  br label %163

; <label>:163:                                    ; preds = %157, %153
  %164 = load i32 (%struct._ftsent**, %struct._ftsent**)*, i32 (%struct._ftsent**, %struct._ftsent**)** %7, align 8, !dbg !2359
  %165 = icmp ne i32 (%struct._ftsent**, %struct._ftsent**)* %164, null, !dbg !2359
  br i1 %165, label %166, label %171, !dbg !2361

; <label>:166:                                    ; preds = %163
  %167 = load %struct._ftsent*, %struct._ftsent** %10, align 8, !dbg !2362
  %168 = load %struct._ftsent*, %struct._ftsent** %9, align 8, !dbg !2364
  %169 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %168, i32 0, i32 2, !dbg !2365
  store %struct._ftsent* %167, %struct._ftsent** %169, align 8, !dbg !2366
  %170 = load %struct._ftsent*, %struct._ftsent** %9, align 8, !dbg !2367
  store %struct._ftsent* %170, %struct._ftsent** %10, align 8, !dbg !2368
  br label %184, !dbg !2369

; <label>:171:                                    ; preds = %163
  %172 = load %struct._ftsent*, %struct._ftsent** %9, align 8, !dbg !2370
  %173 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %172, i32 0, i32 2, !dbg !2372
  store %struct._ftsent* null, %struct._ftsent** %173, align 8, !dbg !2373
  %174 = load %struct._ftsent*, %struct._ftsent** %10, align 8, !dbg !2374
  %175 = icmp eq %struct._ftsent* %174, null, !dbg !2376
  br i1 %175, label %176, label %178, !dbg !2377

; <label>:176:                                    ; preds = %171
  %177 = load %struct._ftsent*, %struct._ftsent** %9, align 8, !dbg !2378
  store %struct._ftsent* %177, %struct._ftsent** %10, align 8, !dbg !2379
  store %struct._ftsent* %177, %struct._ftsent** %13, align 8, !dbg !2380
  br label %183, !dbg !2381

; <label>:178:                                    ; preds = %171
  %179 = load %struct._ftsent*, %struct._ftsent** %9, align 8, !dbg !2382
  %180 = load %struct._ftsent*, %struct._ftsent** %13, align 8, !dbg !2384
  %181 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %180, i32 0, i32 2, !dbg !2385
  store %struct._ftsent* %179, %struct._ftsent** %181, align 8, !dbg !2386
  %182 = load %struct._ftsent*, %struct._ftsent** %9, align 8, !dbg !2387
  store %struct._ftsent* %182, %struct._ftsent** %13, align 8, !dbg !2388
  br label %183

; <label>:183:                                    ; preds = %178, %176
  br label %184

; <label>:184:                                    ; preds = %183, %166
  br label %185, !dbg !2389

; <label>:185:                                    ; preds = %184
  %186 = load i8**, i8*** %5, align 8, !dbg !2390
  %187 = getelementptr inbounds i8*, i8** %186, i32 1, !dbg !2390
  store i8** %187, i8*** %5, align 8, !dbg !2390
  %188 = load i64, i64* %11, align 8, !dbg !2391
  %189 = add i64 %188, 1, !dbg !2391
  store i64 %189, i64* %11, align 8, !dbg !2391
  br label %122, !dbg !2392, !llvm.loop !2393

; <label>:190:                                    ; preds = %122
  %191 = load i32 (%struct._ftsent**, %struct._ftsent**)*, i32 (%struct._ftsent**, %struct._ftsent**)** %7, align 8, !dbg !2395
  %192 = icmp ne i32 (%struct._ftsent**, %struct._ftsent**)* %191, null, !dbg !2395
  br i1 %192, label %193, label %201, !dbg !2397

; <label>:193:                                    ; preds = %190
  %194 = load i64, i64* %11, align 8, !dbg !2398
  %195 = icmp ugt i64 %194, 1, !dbg !2399
  br i1 %195, label %196, label %201, !dbg !2400

; <label>:196:                                    ; preds = %193
  %197 = load %struct.FTS*, %struct.FTS** %8, align 8, !dbg !2401
  %198 = load %struct._ftsent*, %struct._ftsent** %10, align 8, !dbg !2402
  %199 = load i64, i64* %11, align 8, !dbg !2403
  %200 = call %struct._ftsent* @fts_sort(%struct.FTS* %197, %struct._ftsent* %198, i64 %199), !dbg !2404
  store %struct._ftsent* %200, %struct._ftsent** %10, align 8, !dbg !2405
  br label %201, !dbg !2406

; <label>:201:                                    ; preds = %196, %193, %190
  %202 = load %struct.FTS*, %struct.FTS** %8, align 8, !dbg !2407
  %203 = call %struct._ftsent* @fts_alloc(%struct.FTS* %202, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1.113, i32 0, i32 0), i64 0), !dbg !2409
  %204 = load %struct.FTS*, %struct.FTS** %8, align 8, !dbg !2410
  %205 = getelementptr inbounds %struct.FTS, %struct.FTS* %204, i32 0, i32 0, !dbg !2411
  store %struct._ftsent* %203, %struct._ftsent** %205, align 8, !dbg !2412
  %206 = icmp eq %struct._ftsent* %203, null, !dbg !2413
  br i1 %206, label %207, label %208, !dbg !2414

; <label>:207:                                    ; preds = %201
  br label %248, !dbg !2415

; <label>:208:                                    ; preds = %201
  %209 = load %struct._ftsent*, %struct._ftsent** %10, align 8, !dbg !2416
  %210 = load %struct.FTS*, %struct.FTS** %8, align 8, !dbg !2417
  %211 = getelementptr inbounds %struct.FTS, %struct.FTS* %210, i32 0, i32 0, !dbg !2418
  %212 = load %struct._ftsent*, %struct._ftsent** %211, align 8, !dbg !2418
  %213 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %212, i32 0, i32 2, !dbg !2419
  store %struct._ftsent* %209, %struct._ftsent** %213, align 8, !dbg !2420
  %214 = load %struct.FTS*, %struct.FTS** %8, align 8, !dbg !2421
  %215 = getelementptr inbounds %struct.FTS, %struct.FTS* %214, i32 0, i32 0, !dbg !2422
  %216 = load %struct._ftsent*, %struct._ftsent** %215, align 8, !dbg !2422
  %217 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %216, i32 0, i32 14, !dbg !2423
  store i16 9, i16* %217, align 8, !dbg !2424
  %218 = load %struct.FTS*, %struct.FTS** %8, align 8, !dbg !2425
  %219 = call zeroext i1 @setup_dir(%struct.FTS* %218), !dbg !2427
  br i1 %219, label %221, label %220, !dbg !2428

; <label>:220:                                    ; preds = %208
  br label %248, !dbg !2429

; <label>:221:                                    ; preds = %208
  %222 = load %struct.FTS*, %struct.FTS** %8, align 8, !dbg !2430
  %223 = getelementptr inbounds %struct.FTS, %struct.FTS* %222, i32 0, i32 10, !dbg !2430
  %224 = load i32, i32* %223, align 8, !dbg !2430
  %225 = and i32 %224, 4, !dbg !2430
  %226 = icmp ne i32 %225, 0, !dbg !2430
  br i1 %226, label %244, label %227, !dbg !2432

; <label>:227:                                    ; preds = %221
  %228 = load %struct.FTS*, %struct.FTS** %8, align 8, !dbg !2433
  %229 = getelementptr inbounds %struct.FTS, %struct.FTS* %228, i32 0, i32 10, !dbg !2433
  %230 = load i32, i32* %229, align 8, !dbg !2433
  %231 = and i32 %230, 512, !dbg !2433
  %232 = icmp ne i32 %231, 0, !dbg !2433
  br i1 %232, label %244, label %233, !dbg !2434

; <label>:233:                                    ; preds = %227
  %234 = load %struct.FTS*, %struct.FTS** %8, align 8, !dbg !2435
  %235 = call i32 @diropen(%struct.FTS* %234, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.112, i32 0, i32 0)), !dbg !2436
  %236 = load %struct.FTS*, %struct.FTS** %8, align 8, !dbg !2437
  %237 = getelementptr inbounds %struct.FTS, %struct.FTS* %236, i32 0, i32 5, !dbg !2438
  store i32 %235, i32* %237, align 8, !dbg !2439
  %238 = icmp slt i32 %235, 0, !dbg !2440
  br i1 %238, label %239, label %244, !dbg !2441

; <label>:239:                                    ; preds = %233
  %240 = load %struct.FTS*, %struct.FTS** %8, align 8, !dbg !2442
  %241 = getelementptr inbounds %struct.FTS, %struct.FTS* %240, i32 0, i32 10, !dbg !2442
  %242 = load i32, i32* %241, align 8, !dbg !2442
  %243 = or i32 %242, 4, !dbg !2442
  store i32 %243, i32* %241, align 8, !dbg !2442
  br label %244, !dbg !2442

; <label>:244:                                    ; preds = %239, %233, %227, %221
  %245 = load %struct.FTS*, %struct.FTS** %8, align 8, !dbg !2443
  %246 = getelementptr inbounds %struct.FTS, %struct.FTS* %245, i32 0, i32 13, !dbg !2444
  call void @i_ring_init(%struct.I_ring* %246, i32 -1), !dbg !2445
  %247 = load %struct.FTS*, %struct.FTS** %8, align 8, !dbg !2446
  store %struct.FTS* %247, %struct.FTS** %4, align 8, !dbg !2447
  br label %259, !dbg !2447

; <label>:248:                                    ; preds = %220, %207, %136
  %249 = load %struct._ftsent*, %struct._ftsent** %10, align 8, !dbg !2448
  call void @fts_lfree(%struct._ftsent* %249), !dbg !2449
  %250 = load %struct._ftsent*, %struct._ftsent** %12, align 8, !dbg !2450
  %251 = bitcast %struct._ftsent* %250 to i8*, !dbg !2450
  call void @free(i8* %251) #8, !dbg !2451
  br label %252, !dbg !2451

; <label>:252:                                    ; preds = %248, %106
  %253 = load %struct.FTS*, %struct.FTS** %8, align 8, !dbg !2452
  %254 = getelementptr inbounds %struct.FTS, %struct.FTS* %253, i32 0, i32 4, !dbg !2453
  %255 = load i8*, i8** %254, align 8, !dbg !2453
  call void @free(i8* %255) #8, !dbg !2454
  br label %256, !dbg !2454

; <label>:256:                                    ; preds = %252, %97
  %257 = load %struct.FTS*, %struct.FTS** %8, align 8, !dbg !2455
  %258 = bitcast %struct.FTS* %257 to i8*, !dbg !2455
  call void @free(i8* %258) #8, !dbg !2456
  store %struct.FTS* null, %struct.FTS** %4, align 8, !dbg !2457
  br label %259, !dbg !2457

; <label>:259:                                    ; preds = %256, %244, %43, %37, %31, %21
  %260 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !2458
  ret %struct.FTS* %260, !dbg !2458
}

; Function Attrs: nounwind
declare noalias i8* @malloc(i64) #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i32, i1) #10

; Function Attrs: noinline nounwind uwtable
define internal i64 @fts_maxarglen(i8**) #3 !dbg !2459 {
  %2 = alloca i8**, align 8
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  store i8** %0, i8*** %2, align 8
  call void @llvm.dbg.declare(metadata i8*** %2, metadata !2462, metadata !DIExpression()), !dbg !2463
  call void @llvm.dbg.declare(metadata i64* %3, metadata !2464, metadata !DIExpression()), !dbg !2465
  call void @llvm.dbg.declare(metadata i64* %4, metadata !2466, metadata !DIExpression()), !dbg !2467
  store i64 0, i64* %4, align 8, !dbg !2468
  br label %5, !dbg !2470

; <label>:5:                                      ; preds = %18, %1
  %6 = load i8**, i8*** %2, align 8, !dbg !2471
  %7 = load i8*, i8** %6, align 8, !dbg !2473
  %8 = icmp ne i8* %7, null, !dbg !2474
  br i1 %8, label %9, label %21, !dbg !2474

; <label>:9:                                      ; preds = %5
  %10 = load i8**, i8*** %2, align 8, !dbg !2475
  %11 = load i8*, i8** %10, align 8, !dbg !2477
  %12 = call i64 @strlen(i8* %11) #12, !dbg !2478
  store i64 %12, i64* %3, align 8, !dbg !2479
  %13 = load i64, i64* %4, align 8, !dbg !2480
  %14 = icmp ugt i64 %12, %13, !dbg !2481
  br i1 %14, label %15, label %17, !dbg !2482

; <label>:15:                                     ; preds = %9
  %16 = load i64, i64* %3, align 8, !dbg !2483
  store i64 %16, i64* %4, align 8, !dbg !2484
  br label %17, !dbg !2485

; <label>:17:                                     ; preds = %15, %9
  br label %18, !dbg !2480

; <label>:18:                                     ; preds = %17
  %19 = load i8**, i8*** %2, align 8, !dbg !2486
  %20 = getelementptr inbounds i8*, i8** %19, i32 1, !dbg !2486
  store i8** %20, i8*** %2, align 8, !dbg !2486
  br label %5, !dbg !2487, !llvm.loop !2488

; <label>:21:                                     ; preds = %5
  %22 = load i64, i64* %4, align 8, !dbg !2490
  %23 = add i64 %22, 1, !dbg !2491
  ret i64 %23, !dbg !2492
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i1 @fts_palloc(%struct.FTS*, i64) #3 !dbg !2493 {
  %3 = alloca i1, align 1
  %4 = alloca %struct.FTS*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i64, align 8
  store %struct.FTS* %0, %struct.FTS** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.FTS** %4, metadata !2496, metadata !DIExpression()), !dbg !2497
  store i64 %1, i64* %5, align 8
  call void @llvm.dbg.declare(metadata i64* %5, metadata !2498, metadata !DIExpression()), !dbg !2499
  call void @llvm.dbg.declare(metadata i8** %6, metadata !2500, metadata !DIExpression()), !dbg !2501
  call void @llvm.dbg.declare(metadata i64* %7, metadata !2502, metadata !DIExpression()), !dbg !2503
  %8 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !2504
  %9 = getelementptr inbounds %struct.FTS, %struct.FTS* %8, i32 0, i32 7, !dbg !2505
  %10 = load i64, i64* %9, align 8, !dbg !2505
  %11 = load i64, i64* %5, align 8, !dbg !2506
  %12 = add i64 %10, %11, !dbg !2507
  %13 = add i64 %12, 256, !dbg !2508
  store i64 %13, i64* %7, align 8, !dbg !2503
  %14 = load i64, i64* %7, align 8, !dbg !2509
  %15 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !2511
  %16 = getelementptr inbounds %struct.FTS, %struct.FTS* %15, i32 0, i32 7, !dbg !2512
  %17 = load i64, i64* %16, align 8, !dbg !2512
  %18 = icmp ult i64 %14, %17, !dbg !2513
  br i1 %18, label %19, label %26, !dbg !2514

; <label>:19:                                     ; preds = %2
  %20 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !2515
  %21 = getelementptr inbounds %struct.FTS, %struct.FTS* %20, i32 0, i32 4, !dbg !2517
  %22 = load i8*, i8** %21, align 8, !dbg !2517
  call void @free(i8* %22) #8, !dbg !2518
  %23 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !2519
  %24 = getelementptr inbounds %struct.FTS, %struct.FTS* %23, i32 0, i32 4, !dbg !2520
  store i8* null, i8** %24, align 8, !dbg !2521
  %25 = call i32* @__errno_location() #14, !dbg !2522
  store i32 36, i32* %25, align 4, !dbg !2522
  store i1 false, i1* %3, align 1, !dbg !2523
  br label %49, !dbg !2523

; <label>:26:                                     ; preds = %2
  %27 = load i64, i64* %7, align 8, !dbg !2524
  %28 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !2525
  %29 = getelementptr inbounds %struct.FTS, %struct.FTS* %28, i32 0, i32 7, !dbg !2526
  store i64 %27, i64* %29, align 8, !dbg !2527
  %30 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !2528
  %31 = getelementptr inbounds %struct.FTS, %struct.FTS* %30, i32 0, i32 4, !dbg !2529
  %32 = load i8*, i8** %31, align 8, !dbg !2529
  %33 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !2530
  %34 = getelementptr inbounds %struct.FTS, %struct.FTS* %33, i32 0, i32 7, !dbg !2531
  %35 = load i64, i64* %34, align 8, !dbg !2531
  %36 = call i8* @realloc(i8* %32, i64 %35) #8, !dbg !2532
  store i8* %36, i8** %6, align 8, !dbg !2533
  %37 = load i8*, i8** %6, align 8, !dbg !2534
  %38 = icmp eq i8* %37, null, !dbg !2536
  br i1 %38, label %39, label %45, !dbg !2537

; <label>:39:                                     ; preds = %26
  %40 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !2538
  %41 = getelementptr inbounds %struct.FTS, %struct.FTS* %40, i32 0, i32 4, !dbg !2540
  %42 = load i8*, i8** %41, align 8, !dbg !2540
  call void @free(i8* %42) #8, !dbg !2541
  %43 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !2542
  %44 = getelementptr inbounds %struct.FTS, %struct.FTS* %43, i32 0, i32 4, !dbg !2543
  store i8* null, i8** %44, align 8, !dbg !2544
  store i1 false, i1* %3, align 1, !dbg !2545
  br label %49, !dbg !2545

; <label>:45:                                     ; preds = %26
  %46 = load i8*, i8** %6, align 8, !dbg !2546
  %47 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !2547
  %48 = getelementptr inbounds %struct.FTS, %struct.FTS* %47, i32 0, i32 4, !dbg !2548
  store i8* %46, i8** %48, align 8, !dbg !2549
  store i1 true, i1* %3, align 1, !dbg !2550
  br label %49, !dbg !2550

; <label>:49:                                     ; preds = %45, %39, %19
  %50 = load i1, i1* %3, align 1, !dbg !2551
  ret i1 %50, !dbg !2551
}

; Function Attrs: noinline nounwind uwtable
define internal %struct._ftsent* @fts_alloc(%struct.FTS*, i8*, i64) #3 !dbg !2552 {
  %4 = alloca %struct._ftsent*, align 8
  %5 = alloca %struct.FTS*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i64, align 8
  %8 = alloca %struct._ftsent*, align 8
  %9 = alloca i64, align 8
  store %struct.FTS* %0, %struct.FTS** %5, align 8
  call void @llvm.dbg.declare(metadata %struct.FTS** %5, metadata !2555, metadata !DIExpression()), !dbg !2556
  store i8* %1, i8** %6, align 8
  call void @llvm.dbg.declare(metadata i8** %6, metadata !2557, metadata !DIExpression()), !dbg !2558
  store i64 %2, i64* %7, align 8
  call void @llvm.dbg.declare(metadata i64* %7, metadata !2559, metadata !DIExpression()), !dbg !2560
  call void @llvm.dbg.declare(metadata %struct._ftsent** %8, metadata !2561, metadata !DIExpression()), !dbg !2562
  call void @llvm.dbg.declare(metadata i64* %9, metadata !2563, metadata !DIExpression()), !dbg !2564
  %10 = load i64, i64* %7, align 8, !dbg !2565
  %11 = add i64 264, %10, !dbg !2566
  store i64 %11, i64* %9, align 8, !dbg !2567
  %12 = load i64, i64* %9, align 8, !dbg !2568
  %13 = call noalias i8* @malloc(i64 %12) #8, !dbg !2570
  %14 = bitcast i8* %13 to %struct._ftsent*, !dbg !2570
  store %struct._ftsent* %14, %struct._ftsent** %8, align 8, !dbg !2571
  %15 = icmp eq %struct._ftsent* %14, null, !dbg !2572
  br i1 %15, label %16, label %17, !dbg !2573

; <label>:16:                                     ; preds = %3
  store %struct._ftsent* null, %struct._ftsent** %4, align 8, !dbg !2574
  br label %49, !dbg !2574

; <label>:17:                                     ; preds = %3
  %18 = load %struct._ftsent*, %struct._ftsent** %8, align 8, !dbg !2575
  %19 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %18, i32 0, i32 18, !dbg !2576
  %20 = getelementptr inbounds [1 x i8], [1 x i8]* %19, i32 0, i32 0, !dbg !2577
  %21 = load i8*, i8** %6, align 8, !dbg !2578
  %22 = load i64, i64* %7, align 8, !dbg !2579
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %20, i8* %21, i64 %22, i32 1, i1 false), !dbg !2577
  %23 = load %struct._ftsent*, %struct._ftsent** %8, align 8, !dbg !2580
  %24 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %23, i32 0, i32 18, !dbg !2581
  %25 = load i64, i64* %7, align 8, !dbg !2582
  %26 = getelementptr inbounds [1 x i8], [1 x i8]* %24, i64 0, i64 %25, !dbg !2580
  store i8 0, i8* %26, align 1, !dbg !2583
  %27 = load i64, i64* %7, align 8, !dbg !2584
  %28 = load %struct._ftsent*, %struct._ftsent** %8, align 8, !dbg !2585
  %29 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %28, i32 0, i32 12, !dbg !2586
  store i64 %27, i64* %29, align 8, !dbg !2587
  %30 = load %struct.FTS*, %struct.FTS** %5, align 8, !dbg !2588
  %31 = load %struct._ftsent*, %struct._ftsent** %8, align 8, !dbg !2589
  %32 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %31, i32 0, i32 10, !dbg !2590
  store %struct.FTS* %30, %struct.FTS** %32, align 8, !dbg !2591
  %33 = load %struct.FTS*, %struct.FTS** %5, align 8, !dbg !2592
  %34 = getelementptr inbounds %struct.FTS, %struct.FTS* %33, i32 0, i32 4, !dbg !2593
  %35 = load i8*, i8** %34, align 8, !dbg !2593
  %36 = load %struct._ftsent*, %struct._ftsent** %8, align 8, !dbg !2594
  %37 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %36, i32 0, i32 6, !dbg !2595
  store i8* %35, i8** %37, align 8, !dbg !2596
  %38 = load %struct._ftsent*, %struct._ftsent** %8, align 8, !dbg !2597
  %39 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %38, i32 0, i32 7, !dbg !2598
  store i32 0, i32* %39, align 8, !dbg !2599
  %40 = load %struct._ftsent*, %struct._ftsent** %8, align 8, !dbg !2600
  %41 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %40, i32 0, i32 15, !dbg !2601
  store i16 0, i16* %41, align 2, !dbg !2602
  %42 = load %struct._ftsent*, %struct._ftsent** %8, align 8, !dbg !2603
  %43 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %42, i32 0, i32 16, !dbg !2604
  store i16 3, i16* %43, align 4, !dbg !2605
  %44 = load %struct._ftsent*, %struct._ftsent** %8, align 8, !dbg !2606
  %45 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %44, i32 0, i32 3, !dbg !2607
  store i64 0, i64* %45, align 8, !dbg !2608
  %46 = load %struct._ftsent*, %struct._ftsent** %8, align 8, !dbg !2609
  %47 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %46, i32 0, i32 4, !dbg !2610
  store i8* null, i8** %47, align 8, !dbg !2611
  %48 = load %struct._ftsent*, %struct._ftsent** %8, align 8, !dbg !2612
  store %struct._ftsent* %48, %struct._ftsent** %4, align 8, !dbg !2613
  br label %49, !dbg !2613

; <label>:49:                                     ; preds = %17, %16
  %50 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !2614
  ret %struct._ftsent* %50, !dbg !2614
}

; Function Attrs: noinline nounwind uwtable
define internal void @fts_set_stat_required(%struct._ftsent*, i1 zeroext) #3 !dbg !2615 {
  %3 = alloca %struct._ftsent*, align 8
  %4 = alloca i8, align 1
  store %struct._ftsent* %0, %struct._ftsent** %3, align 8
  call void @llvm.dbg.declare(metadata %struct._ftsent** %3, metadata !2618, metadata !DIExpression()), !dbg !2619
  %5 = zext i1 %1 to i8
  store i8 %5, i8* %4, align 1
  call void @llvm.dbg.declare(metadata i8* %4, metadata !2620, metadata !DIExpression()), !dbg !2621
  br label %6, !dbg !2622, !llvm.loop !2623

; <label>:6:                                      ; preds = %2
  %7 = load %struct._ftsent*, %struct._ftsent** %3, align 8, !dbg !2624
  %8 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %7, i32 0, i32 14, !dbg !2624
  %9 = load i16, i16* %8, align 8, !dbg !2624
  %10 = zext i16 %9 to i32, !dbg !2624
  %11 = icmp eq i32 %10, 11, !dbg !2624
  br i1 %11, label %13, label %12, !dbg !2627

; <label>:12:                                     ; preds = %6
  call void @abort() #11, !dbg !2624
  unreachable, !dbg !2624

; <label>:13:                                     ; preds = %6
  br label %14, !dbg !2627

; <label>:14:                                     ; preds = %13
  %15 = load i8, i8* %4, align 1, !dbg !2628
  %16 = trunc i8 %15 to i1, !dbg !2628
  %17 = zext i1 %16 to i64, !dbg !2628
  %18 = select i1 %16, i32 2, i32 1, !dbg !2628
  %19 = sext i32 %18 to i64, !dbg !2629
  %20 = load %struct._ftsent*, %struct._ftsent** %3, align 8, !dbg !2630
  %21 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %20, i32 0, i32 17, !dbg !2631
  %22 = getelementptr inbounds [1 x %struct.stat], [1 x %struct.stat]* %21, i32 0, i32 0, !dbg !2632
  %23 = getelementptr inbounds %struct.stat, %struct.stat* %22, i32 0, i32 8, !dbg !2632
  store i64 %19, i64* %23, align 8, !dbg !2633
  ret void, !dbg !2634
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i16 @fts_stat(%struct.FTS*, %struct._ftsent*, i1 zeroext) #3 !dbg !2635 {
  %4 = alloca i16, align 2
  %5 = alloca %struct.FTS*, align 8
  %6 = alloca %struct._ftsent*, align 8
  %7 = alloca i8, align 1
  %8 = alloca %struct.stat*, align 8
  %9 = alloca i32, align 4
  store %struct.FTS* %0, %struct.FTS** %5, align 8
  call void @llvm.dbg.declare(metadata %struct.FTS** %5, metadata !2638, metadata !DIExpression()), !dbg !2639
  store %struct._ftsent* %1, %struct._ftsent** %6, align 8
  call void @llvm.dbg.declare(metadata %struct._ftsent** %6, metadata !2640, metadata !DIExpression()), !dbg !2641
  %10 = zext i1 %2 to i8
  store i8 %10, i8* %7, align 1
  call void @llvm.dbg.declare(metadata i8* %7, metadata !2642, metadata !DIExpression()), !dbg !2643
  call void @llvm.dbg.declare(metadata %struct.stat** %8, metadata !2644, metadata !DIExpression()), !dbg !2646
  %11 = load %struct._ftsent*, %struct._ftsent** %6, align 8, !dbg !2647
  %12 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %11, i32 0, i32 17, !dbg !2648
  %13 = getelementptr inbounds [1 x %struct.stat], [1 x %struct.stat]* %12, i32 0, i32 0, !dbg !2647
  store %struct.stat* %13, %struct.stat** %8, align 8, !dbg !2646
  call void @llvm.dbg.declare(metadata i32* %9, metadata !2649, metadata !DIExpression()), !dbg !2650
  %14 = load %struct._ftsent*, %struct._ftsent** %6, align 8, !dbg !2651
  %15 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %14, i32 0, i32 11, !dbg !2653
  %16 = load i64, i64* %15, align 8, !dbg !2653
  %17 = icmp eq i64 %16, 0, !dbg !2654
  br i1 %17, label %18, label %25, !dbg !2655

; <label>:18:                                     ; preds = %3
  %19 = load %struct.FTS*, %struct.FTS** %5, align 8, !dbg !2656
  %20 = getelementptr inbounds %struct.FTS, %struct.FTS* %19, i32 0, i32 10, !dbg !2656
  %21 = load i32, i32* %20, align 8, !dbg !2656
  %22 = and i32 %21, 1, !dbg !2656
  %23 = icmp ne i32 %22, 0, !dbg !2656
  br i1 %23, label %24, label %25, !dbg !2657

; <label>:24:                                     ; preds = %18
  store i8 1, i8* %7, align 1, !dbg !2658
  br label %25, !dbg !2659

; <label>:25:                                     ; preds = %24, %18, %3
  %26 = load %struct.FTS*, %struct.FTS** %5, align 8, !dbg !2660
  %27 = getelementptr inbounds %struct.FTS, %struct.FTS* %26, i32 0, i32 10, !dbg !2660
  %28 = load i32, i32* %27, align 8, !dbg !2660
  %29 = and i32 %28, 2, !dbg !2660
  %30 = icmp ne i32 %29, 0, !dbg !2660
  br i1 %30, label %34, label %31, !dbg !2662

; <label>:31:                                     ; preds = %25
  %32 = load i8, i8* %7, align 1, !dbg !2663
  %33 = trunc i8 %32 to i1, !dbg !2663
  br i1 %33, label %34, label %61, !dbg !2664

; <label>:34:                                     ; preds = %31, %25
  %35 = load %struct._ftsent*, %struct._ftsent** %6, align 8, !dbg !2665
  %36 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %35, i32 0, i32 5, !dbg !2668
  %37 = load i8*, i8** %36, align 8, !dbg !2668
  %38 = load %struct.stat*, %struct.stat** %8, align 8, !dbg !2669
  %39 = call i32 @stat(i8* %37, %struct.stat* %38) #8, !dbg !2670
  %40 = icmp ne i32 %39, 0, !dbg !2670
  br i1 %40, label %41, label %60, !dbg !2671

; <label>:41:                                     ; preds = %34
  %42 = call i32* @__errno_location() #14, !dbg !2672
  %43 = load i32, i32* %42, align 4, !dbg !2672
  store i32 %43, i32* %9, align 4, !dbg !2674
  %44 = call i32* @__errno_location() #14, !dbg !2675
  %45 = load i32, i32* %44, align 4, !dbg !2675
  %46 = icmp eq i32 %45, 2, !dbg !2677
  br i1 %46, label %47, label %56, !dbg !2678

; <label>:47:                                     ; preds = %41
  %48 = load %struct._ftsent*, %struct._ftsent** %6, align 8, !dbg !2679
  %49 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %48, i32 0, i32 5, !dbg !2680
  %50 = load i8*, i8** %49, align 8, !dbg !2680
  %51 = load %struct.stat*, %struct.stat** %8, align 8, !dbg !2681
  %52 = call i32 @lstat(i8* %50, %struct.stat* %51) #8, !dbg !2682
  %53 = icmp eq i32 %52, 0, !dbg !2683
  br i1 %53, label %54, label %56, !dbg !2684

; <label>:54:                                     ; preds = %47
  %55 = call i32* @__errno_location() #14, !dbg !2685
  store i32 0, i32* %55, align 4, !dbg !2685
  store i16 13, i16* %4, align 2, !dbg !2687
  br label %150, !dbg !2687

; <label>:56:                                     ; preds = %47, %41
  %57 = load i32, i32* %9, align 4, !dbg !2688
  %58 = load %struct._ftsent*, %struct._ftsent** %6, align 8, !dbg !2689
  %59 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %58, i32 0, i32 7, !dbg !2690
  store i32 %57, i32* %59, align 8, !dbg !2691
  br label %76, !dbg !2692

; <label>:60:                                     ; preds = %34
  br label %80, !dbg !2693

; <label>:61:                                     ; preds = %31
  %62 = load %struct.FTS*, %struct.FTS** %5, align 8, !dbg !2694
  %63 = getelementptr inbounds %struct.FTS, %struct.FTS* %62, i32 0, i32 6, !dbg !2696
  %64 = load i32, i32* %63, align 4, !dbg !2696
  %65 = load %struct._ftsent*, %struct._ftsent** %6, align 8, !dbg !2697
  %66 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %65, i32 0, i32 5, !dbg !2698
  %67 = load i8*, i8** %66, align 8, !dbg !2698
  %68 = load %struct.stat*, %struct.stat** %8, align 8, !dbg !2699
  %69 = call i32 @fstatat(i32 %64, i8* %67, %struct.stat* %68, i32 256) #8, !dbg !2700
  %70 = icmp ne i32 %69, 0, !dbg !2700
  br i1 %70, label %71, label %79, !dbg !2701

; <label>:71:                                     ; preds = %61
  %72 = call i32* @__errno_location() #14, !dbg !2702
  %73 = load i32, i32* %72, align 4, !dbg !2702
  %74 = load %struct._ftsent*, %struct._ftsent** %6, align 8, !dbg !2704
  %75 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %74, i32 0, i32 7, !dbg !2705
  store i32 %73, i32* %75, align 8, !dbg !2706
  br label %76, !dbg !2704

; <label>:76:                                     ; preds = %71, %56
  %77 = load %struct.stat*, %struct.stat** %8, align 8, !dbg !2707
  %78 = bitcast %struct.stat* %77 to i8*, !dbg !2708
  call void @llvm.memset.p0i8.i64(i8* %78, i8 0, i64 144, i32 8, i1 false), !dbg !2708
  store i16 10, i16* %4, align 2, !dbg !2709
  br label %150, !dbg !2709

; <label>:79:                                     ; preds = %61
  br label %80

; <label>:80:                                     ; preds = %79, %60
  %81 = load %struct.stat*, %struct.stat** %8, align 8, !dbg !2710
  %82 = getelementptr inbounds %struct.stat, %struct.stat* %81, i32 0, i32 3, !dbg !2710
  %83 = load i32, i32* %82, align 8, !dbg !2710
  %84 = and i32 %83, 61440, !dbg !2710
  %85 = icmp eq i32 %84, 16384, !dbg !2710
  br i1 %85, label %86, label %135, !dbg !2712

; <label>:86:                                     ; preds = %80
  %87 = load %struct.stat*, %struct.stat** %8, align 8, !dbg !2713
  %88 = getelementptr inbounds %struct.stat, %struct.stat* %87, i32 0, i32 2, !dbg !2715
  %89 = load i64, i64* %88, align 8, !dbg !2715
  %90 = load %struct.FTS*, %struct.FTS** %5, align 8, !dbg !2716
  %91 = getelementptr inbounds %struct.FTS, %struct.FTS* %90, i32 0, i32 10, !dbg !2716
  %92 = load i32, i32* %91, align 8, !dbg !2716
  %93 = and i32 %92, 32, !dbg !2716
  %94 = icmp ne i32 %93, 0, !dbg !2716
  %95 = zext i1 %94 to i64, !dbg !2716
  %96 = select i1 %94, i32 0, i32 2, !dbg !2716
  %97 = sext i32 %96 to i64, !dbg !2717
  %98 = sub i64 %89, %97, !dbg !2718
  %99 = load %struct._ftsent*, %struct._ftsent** %6, align 8, !dbg !2719
  %100 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %99, i32 0, i32 13, !dbg !2720
  store i64 %98, i64* %100, align 8, !dbg !2721
  %101 = load %struct._ftsent*, %struct._ftsent** %6, align 8, !dbg !2722
  %102 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %101, i32 0, i32 18, !dbg !2722
  %103 = getelementptr inbounds [1 x i8], [1 x i8]* %102, i64 0, i64 0, !dbg !2722
  %104 = load i8, i8* %103, align 8, !dbg !2722
  %105 = sext i8 %104 to i32, !dbg !2722
  %106 = icmp eq i32 %105, 46, !dbg !2722
  br i1 %106, label %107, label %134, !dbg !2722

; <label>:107:                                    ; preds = %86
  %108 = load %struct._ftsent*, %struct._ftsent** %6, align 8, !dbg !2722
  %109 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %108, i32 0, i32 18, !dbg !2722
  %110 = getelementptr inbounds [1 x i8], [1 x i8]* %109, i64 0, i64 1, !dbg !2722
  %111 = load i8, i8* %110, align 1, !dbg !2722
  %112 = icmp ne i8 %111, 0, !dbg !2722
  br i1 %112, label %113, label %126, !dbg !2722

; <label>:113:                                    ; preds = %107
  %114 = load %struct._ftsent*, %struct._ftsent** %6, align 8, !dbg !2722
  %115 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %114, i32 0, i32 18, !dbg !2722
  %116 = getelementptr inbounds [1 x i8], [1 x i8]* %115, i64 0, i64 1, !dbg !2722
  %117 = load i8, i8* %116, align 1, !dbg !2722
  %118 = sext i8 %117 to i32, !dbg !2722
  %119 = icmp eq i32 %118, 46, !dbg !2722
  br i1 %119, label %120, label %134, !dbg !2722

; <label>:120:                                    ; preds = %113
  %121 = load %struct._ftsent*, %struct._ftsent** %6, align 8, !dbg !2722
  %122 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %121, i32 0, i32 18, !dbg !2722
  %123 = getelementptr inbounds [1 x i8], [1 x i8]* %122, i64 0, i64 2, !dbg !2722
  %124 = load i8, i8* %123, align 2, !dbg !2722
  %125 = icmp ne i8 %124, 0, !dbg !2722
  br i1 %125, label %134, label %126, !dbg !2724

; <label>:126:                                    ; preds = %120, %107
  %127 = load %struct._ftsent*, %struct._ftsent** %6, align 8, !dbg !2725
  %128 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %127, i32 0, i32 11, !dbg !2727
  %129 = load i64, i64* %128, align 8, !dbg !2727
  %130 = icmp eq i64 %129, 0, !dbg !2728
  %131 = zext i1 %130 to i64, !dbg !2725
  %132 = select i1 %130, i32 1, i32 5, !dbg !2725
  %133 = trunc i32 %132 to i16, !dbg !2729
  store i16 %133, i16* %4, align 2, !dbg !2730
  br label %150, !dbg !2730

; <label>:134:                                    ; preds = %120, %113, %86
  store i16 1, i16* %4, align 2, !dbg !2731
  br label %150, !dbg !2731

; <label>:135:                                    ; preds = %80
  %136 = load %struct.stat*, %struct.stat** %8, align 8, !dbg !2732
  %137 = getelementptr inbounds %struct.stat, %struct.stat* %136, i32 0, i32 3, !dbg !2732
  %138 = load i32, i32* %137, align 8, !dbg !2732
  %139 = and i32 %138, 61440, !dbg !2732
  %140 = icmp eq i32 %139, 40960, !dbg !2732
  br i1 %140, label %141, label %142, !dbg !2734

; <label>:141:                                    ; preds = %135
  store i16 12, i16* %4, align 2, !dbg !2735
  br label %150, !dbg !2735

; <label>:142:                                    ; preds = %135
  %143 = load %struct.stat*, %struct.stat** %8, align 8, !dbg !2736
  %144 = getelementptr inbounds %struct.stat, %struct.stat* %143, i32 0, i32 3, !dbg !2736
  %145 = load i32, i32* %144, align 8, !dbg !2736
  %146 = and i32 %145, 61440, !dbg !2736
  %147 = icmp eq i32 %146, 32768, !dbg !2736
  br i1 %147, label %148, label %149, !dbg !2738

; <label>:148:                                    ; preds = %142
  store i16 8, i16* %4, align 2, !dbg !2739
  br label %150, !dbg !2739

; <label>:149:                                    ; preds = %142
  store i16 3, i16* %4, align 2, !dbg !2740
  br label %150, !dbg !2740

; <label>:150:                                    ; preds = %149, %148, %141, %134, %126, %76, %54
  %151 = load i16, i16* %4, align 2, !dbg !2741
  ret i16 %151, !dbg !2741
}

; Function Attrs: noinline nounwind uwtable
define internal %struct._ftsent* @fts_sort(%struct.FTS*, %struct._ftsent*, i64) #3 !dbg !2742 {
  %4 = alloca %struct._ftsent*, align 8
  %5 = alloca %struct.FTS*, align 8
  %6 = alloca %struct._ftsent*, align 8
  %7 = alloca i64, align 8
  %8 = alloca %struct._ftsent**, align 8
  %9 = alloca %struct._ftsent*, align 8
  %10 = alloca %struct._ftsent*, align 8
  %11 = alloca i32 (i8*, i8*)*, align 8
  %12 = alloca %struct._ftsent**, align 8
  store %struct.FTS* %0, %struct.FTS** %5, align 8
  call void @llvm.dbg.declare(metadata %struct.FTS** %5, metadata !2745, metadata !DIExpression()), !dbg !2746
  store %struct._ftsent* %1, %struct._ftsent** %6, align 8
  call void @llvm.dbg.declare(metadata %struct._ftsent** %6, metadata !2747, metadata !DIExpression()), !dbg !2748
  store i64 %2, i64* %7, align 8
  call void @llvm.dbg.declare(metadata i64* %7, metadata !2749, metadata !DIExpression()), !dbg !2750
  call void @llvm.dbg.declare(metadata %struct._ftsent*** %8, metadata !2751, metadata !DIExpression()), !dbg !2753
  call void @llvm.dbg.declare(metadata %struct._ftsent** %9, metadata !2754, metadata !DIExpression()), !dbg !2755
  call void @llvm.dbg.declare(metadata %struct._ftsent** %10, metadata !2756, metadata !DIExpression()), !dbg !2757
  call void @llvm.dbg.declare(metadata i32 (i8*, i8*)** %11, metadata !2758, metadata !DIExpression()), !dbg !2759
  %13 = ptrtoint %struct._ftsent** %10 to i64, !dbg !2760
  %14 = bitcast %struct._ftsent** %10 to i8*, !dbg !2761
  %15 = ptrtoint i8* %14 to i64, !dbg !2762
  %16 = icmp eq i64 %13, %15, !dbg !2763
  br i1 %16, label %17, label %22, !dbg !2764

; <label>:17:                                     ; preds = %3
  %18 = load %struct.FTS*, %struct.FTS** %5, align 8, !dbg !2765
  %19 = getelementptr inbounds %struct.FTS, %struct.FTS* %18, i32 0, i32 9, !dbg !2766
  %20 = load i32 (%struct._ftsent**, %struct._ftsent**)*, i32 (%struct._ftsent**, %struct._ftsent**)** %19, align 8, !dbg !2766
  %21 = bitcast i32 (%struct._ftsent**, %struct._ftsent**)* %20 to i32 (i8*, i8*)*, !dbg !2767
  br label %23, !dbg !2764

; <label>:22:                                     ; preds = %3
  br label %23, !dbg !2764

; <label>:23:                                     ; preds = %22, %17
  %24 = phi i32 (i8*, i8*)* [ %21, %17 ], [ @fts_compar, %22 ], !dbg !2764
  store i32 (i8*, i8*)* %24, i32 (i8*, i8*)** %11, align 8, !dbg !2759
  %25 = load i64, i64* %7, align 8, !dbg !2768
  %26 = load %struct.FTS*, %struct.FTS** %5, align 8, !dbg !2770
  %27 = getelementptr inbounds %struct.FTS, %struct.FTS* %26, i32 0, i32 8, !dbg !2771
  %28 = load i64, i64* %27, align 8, !dbg !2771
  %29 = icmp ugt i64 %25, %28, !dbg !2772
  br i1 %29, label %30, label %65, !dbg !2773

; <label>:30:                                     ; preds = %23
  call void @llvm.dbg.declare(metadata %struct._ftsent*** %12, metadata !2774, metadata !DIExpression()), !dbg !2776
  %31 = load i64, i64* %7, align 8, !dbg !2777
  %32 = add i64 %31, 40, !dbg !2778
  %33 = load %struct.FTS*, %struct.FTS** %5, align 8, !dbg !2779
  %34 = getelementptr inbounds %struct.FTS, %struct.FTS* %33, i32 0, i32 8, !dbg !2780
  store i64 %32, i64* %34, align 8, !dbg !2781
  %35 = load %struct.FTS*, %struct.FTS** %5, align 8, !dbg !2782
  %36 = getelementptr inbounds %struct.FTS, %struct.FTS* %35, i32 0, i32 8, !dbg !2784
  %37 = load i64, i64* %36, align 8, !dbg !2784
  %38 = icmp ult i64 2305843009213693951, %37, !dbg !2785
  br i1 %38, label %51, label %39, !dbg !2786

; <label>:39:                                     ; preds = %30
  %40 = load %struct.FTS*, %struct.FTS** %5, align 8, !dbg !2787
  %41 = getelementptr inbounds %struct.FTS, %struct.FTS* %40, i32 0, i32 2, !dbg !2788
  %42 = load %struct._ftsent**, %struct._ftsent*** %41, align 8, !dbg !2788
  %43 = bitcast %struct._ftsent** %42 to i8*, !dbg !2787
  %44 = load %struct.FTS*, %struct.FTS** %5, align 8, !dbg !2789
  %45 = getelementptr inbounds %struct.FTS, %struct.FTS* %44, i32 0, i32 8, !dbg !2790
  %46 = load i64, i64* %45, align 8, !dbg !2790
  %47 = mul i64 %46, 8, !dbg !2791
  %48 = call i8* @realloc(i8* %43, i64 %47) #8, !dbg !2792
  %49 = bitcast i8* %48 to %struct._ftsent**, !dbg !2792
  store %struct._ftsent** %49, %struct._ftsent*** %12, align 8, !dbg !2793
  %50 = icmp ne %struct._ftsent** %49, null, !dbg !2793
  br i1 %50, label %61, label %51, !dbg !2794

; <label>:51:                                     ; preds = %39, %30
  %52 = load %struct.FTS*, %struct.FTS** %5, align 8, !dbg !2795
  %53 = getelementptr inbounds %struct.FTS, %struct.FTS* %52, i32 0, i32 2, !dbg !2797
  %54 = load %struct._ftsent**, %struct._ftsent*** %53, align 8, !dbg !2797
  %55 = bitcast %struct._ftsent** %54 to i8*, !dbg !2795
  call void @free(i8* %55) #8, !dbg !2798
  %56 = load %struct.FTS*, %struct.FTS** %5, align 8, !dbg !2799
  %57 = getelementptr inbounds %struct.FTS, %struct.FTS* %56, i32 0, i32 2, !dbg !2800
  store %struct._ftsent** null, %struct._ftsent*** %57, align 8, !dbg !2801
  %58 = load %struct.FTS*, %struct.FTS** %5, align 8, !dbg !2802
  %59 = getelementptr inbounds %struct.FTS, %struct.FTS* %58, i32 0, i32 8, !dbg !2803
  store i64 0, i64* %59, align 8, !dbg !2804
  %60 = load %struct._ftsent*, %struct._ftsent** %6, align 8, !dbg !2805
  store %struct._ftsent* %60, %struct._ftsent** %4, align 8, !dbg !2806
  br label %113, !dbg !2806

; <label>:61:                                     ; preds = %39
  %62 = load %struct._ftsent**, %struct._ftsent*** %12, align 8, !dbg !2807
  %63 = load %struct.FTS*, %struct.FTS** %5, align 8, !dbg !2808
  %64 = getelementptr inbounds %struct.FTS, %struct.FTS* %63, i32 0, i32 2, !dbg !2809
  store %struct._ftsent** %62, %struct._ftsent*** %64, align 8, !dbg !2810
  br label %65, !dbg !2811

; <label>:65:                                     ; preds = %61, %23
  %66 = load %struct.FTS*, %struct.FTS** %5, align 8, !dbg !2812
  %67 = getelementptr inbounds %struct.FTS, %struct.FTS* %66, i32 0, i32 2, !dbg !2814
  %68 = load %struct._ftsent**, %struct._ftsent*** %67, align 8, !dbg !2814
  store %struct._ftsent** %68, %struct._ftsent*** %8, align 8, !dbg !2815
  %69 = load %struct._ftsent*, %struct._ftsent** %6, align 8, !dbg !2816
  store %struct._ftsent* %69, %struct._ftsent** %9, align 8, !dbg !2817
  br label %70, !dbg !2818

; <label>:70:                                     ; preds = %77, %65
  %71 = load %struct._ftsent*, %struct._ftsent** %9, align 8, !dbg !2819
  %72 = icmp ne %struct._ftsent* %71, null, !dbg !2821
  br i1 %72, label %73, label %81, !dbg !2821

; <label>:73:                                     ; preds = %70
  %74 = load %struct._ftsent*, %struct._ftsent** %9, align 8, !dbg !2822
  %75 = load %struct._ftsent**, %struct._ftsent*** %8, align 8, !dbg !2823
  %76 = getelementptr inbounds %struct._ftsent*, %struct._ftsent** %75, i32 1, !dbg !2823
  store %struct._ftsent** %76, %struct._ftsent*** %8, align 8, !dbg !2823
  store %struct._ftsent* %74, %struct._ftsent** %75, align 8, !dbg !2824
  br label %77, !dbg !2825

; <label>:77:                                     ; preds = %73
  %78 = load %struct._ftsent*, %struct._ftsent** %9, align 8, !dbg !2826
  %79 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %78, i32 0, i32 2, !dbg !2827
  %80 = load %struct._ftsent*, %struct._ftsent** %79, align 8, !dbg !2827
  store %struct._ftsent* %80, %struct._ftsent** %9, align 8, !dbg !2828
  br label %70, !dbg !2829, !llvm.loop !2830

; <label>:81:                                     ; preds = %70
  %82 = load %struct.FTS*, %struct.FTS** %5, align 8, !dbg !2832
  %83 = getelementptr inbounds %struct.FTS, %struct.FTS* %82, i32 0, i32 2, !dbg !2833
  %84 = load %struct._ftsent**, %struct._ftsent*** %83, align 8, !dbg !2833
  %85 = bitcast %struct._ftsent** %84 to i8*, !dbg !2834
  %86 = load i64, i64* %7, align 8, !dbg !2835
  %87 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %11, align 8, !dbg !2836
  call void @qsort(i8* %85, i64 %86, i64 8, i32 (i8*, i8*)* %87), !dbg !2837
  %88 = load %struct.FTS*, %struct.FTS** %5, align 8, !dbg !2838
  %89 = getelementptr inbounds %struct.FTS, %struct.FTS* %88, i32 0, i32 2, !dbg !2840
  %90 = load %struct._ftsent**, %struct._ftsent*** %89, align 8, !dbg !2840
  store %struct._ftsent** %90, %struct._ftsent*** %8, align 8, !dbg !2841
  %91 = load %struct._ftsent*, %struct._ftsent** %90, align 8, !dbg !2842
  store %struct._ftsent* %91, %struct._ftsent** %6, align 8, !dbg !2843
  br label %92, !dbg !2844

; <label>:92:                                     ; preds = %104, %81
  %93 = load i64, i64* %7, align 8, !dbg !2845
  %94 = add i64 %93, -1, !dbg !2845
  store i64 %94, i64* %7, align 8, !dbg !2845
  %95 = icmp ne i64 %94, 0, !dbg !2847
  br i1 %95, label %96, label %107, !dbg !2847

; <label>:96:                                     ; preds = %92
  %97 = load %struct._ftsent**, %struct._ftsent*** %8, align 8, !dbg !2848
  %98 = getelementptr inbounds %struct._ftsent*, %struct._ftsent** %97, i64 1, !dbg !2848
  %99 = load %struct._ftsent*, %struct._ftsent** %98, align 8, !dbg !2848
  %100 = load %struct._ftsent**, %struct._ftsent*** %8, align 8, !dbg !2849
  %101 = getelementptr inbounds %struct._ftsent*, %struct._ftsent** %100, i64 0, !dbg !2849
  %102 = load %struct._ftsent*, %struct._ftsent** %101, align 8, !dbg !2849
  %103 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %102, i32 0, i32 2, !dbg !2850
  store %struct._ftsent* %99, %struct._ftsent** %103, align 8, !dbg !2851
  br label %104, !dbg !2849

; <label>:104:                                    ; preds = %96
  %105 = load %struct._ftsent**, %struct._ftsent*** %8, align 8, !dbg !2852
  %106 = getelementptr inbounds %struct._ftsent*, %struct._ftsent** %105, i32 1, !dbg !2852
  store %struct._ftsent** %106, %struct._ftsent*** %8, align 8, !dbg !2852
  br label %92, !dbg !2853, !llvm.loop !2854

; <label>:107:                                    ; preds = %92
  %108 = load %struct._ftsent**, %struct._ftsent*** %8, align 8, !dbg !2856
  %109 = getelementptr inbounds %struct._ftsent*, %struct._ftsent** %108, i64 0, !dbg !2856
  %110 = load %struct._ftsent*, %struct._ftsent** %109, align 8, !dbg !2856
  %111 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %110, i32 0, i32 2, !dbg !2857
  store %struct._ftsent* null, %struct._ftsent** %111, align 8, !dbg !2858
  %112 = load %struct._ftsent*, %struct._ftsent** %6, align 8, !dbg !2859
  store %struct._ftsent* %112, %struct._ftsent** %4, align 8, !dbg !2860
  br label %113, !dbg !2860

; <label>:113:                                    ; preds = %107, %51
  %114 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !2861
  ret %struct._ftsent* %114, !dbg !2861
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i1 @setup_dir(%struct.FTS*) #3 !dbg !252 {
  %2 = alloca i1, align 1
  %3 = alloca %struct.FTS*, align 8
  store %struct.FTS* %0, %struct.FTS** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.FTS** %3, metadata !2862, metadata !DIExpression()), !dbg !2863
  %4 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !2864
  %5 = getelementptr inbounds %struct.FTS, %struct.FTS* %4, i32 0, i32 10, !dbg !2866
  %6 = load i32, i32* %5, align 8, !dbg !2866
  %7 = and i32 %6, 258, !dbg !2867
  %8 = icmp ne i32 %7, 0, !dbg !2867
  br i1 %8, label %9, label %21, !dbg !2868

; <label>:9:                                      ; preds = %1
  %10 = call %struct.hash_table* @hash_initialize(i64 31, %struct.hash_tuning* null, i64 (i8*, i64)* @AD_hash, i1 (i8*, i8*)* @AD_compare, void (i8*)* @free), !dbg !2869
  %11 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !2871
  %12 = getelementptr inbounds %struct.FTS, %struct.FTS* %11, i32 0, i32 12, !dbg !2872
  %13 = bitcast %union.anon* %12 to %struct.hash_table**, !dbg !2873
  store %struct.hash_table* %10, %struct.hash_table** %13, align 8, !dbg !2874
  %14 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !2875
  %15 = getelementptr inbounds %struct.FTS, %struct.FTS* %14, i32 0, i32 12, !dbg !2877
  %16 = bitcast %union.anon* %15 to %struct.hash_table**, !dbg !2878
  %17 = load %struct.hash_table*, %struct.hash_table** %16, align 8, !dbg !2878
  %18 = icmp ne %struct.hash_table* %17, null, !dbg !2875
  br i1 %18, label %20, label %19, !dbg !2879

; <label>:19:                                     ; preds = %9
  store i1 false, i1* %2, align 1, !dbg !2880
  br label %39, !dbg !2880

; <label>:20:                                     ; preds = %9
  br label %38, !dbg !2881

; <label>:21:                                     ; preds = %1
  %22 = call noalias i8* @malloc(i64 32) #8, !dbg !2882
  %23 = bitcast i8* %22 to %struct.cycle_check_state*, !dbg !2882
  %24 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !2884
  %25 = getelementptr inbounds %struct.FTS, %struct.FTS* %24, i32 0, i32 12, !dbg !2885
  %26 = bitcast %union.anon* %25 to %struct.cycle_check_state**, !dbg !2886
  store %struct.cycle_check_state* %23, %struct.cycle_check_state** %26, align 8, !dbg !2887
  %27 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !2888
  %28 = getelementptr inbounds %struct.FTS, %struct.FTS* %27, i32 0, i32 12, !dbg !2890
  %29 = bitcast %union.anon* %28 to %struct.cycle_check_state**, !dbg !2891
  %30 = load %struct.cycle_check_state*, %struct.cycle_check_state** %29, align 8, !dbg !2891
  %31 = icmp ne %struct.cycle_check_state* %30, null, !dbg !2888
  br i1 %31, label %33, label %32, !dbg !2892

; <label>:32:                                     ; preds = %21
  store i1 false, i1* %2, align 1, !dbg !2893
  br label %39, !dbg !2893

; <label>:33:                                     ; preds = %21
  %34 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !2894
  %35 = getelementptr inbounds %struct.FTS, %struct.FTS* %34, i32 0, i32 12, !dbg !2895
  %36 = bitcast %union.anon* %35 to %struct.cycle_check_state**, !dbg !2896
  %37 = load %struct.cycle_check_state*, %struct.cycle_check_state** %36, align 8, !dbg !2896
  call void @cycle_check_init(%struct.cycle_check_state* %37), !dbg !2897
  br label %38

; <label>:38:                                     ; preds = %33, %20
  store i1 true, i1* %2, align 1, !dbg !2898
  br label %39, !dbg !2898

; <label>:39:                                     ; preds = %38, %32, %19
  %40 = load i1, i1* %2, align 1, !dbg !2899
  ret i1 %40, !dbg !2899
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @diropen(%struct.FTS*, i8*) #3 !dbg !2900 {
  %3 = alloca %struct.FTS*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  store %struct.FTS* %0, %struct.FTS** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.FTS** %3, metadata !2905, metadata !DIExpression()), !dbg !2906
  store i8* %1, i8** %4, align 8
  call void @llvm.dbg.declare(metadata i8** %4, metadata !2907, metadata !DIExpression()), !dbg !2908
  call void @llvm.dbg.declare(metadata i32* %5, metadata !2909, metadata !DIExpression()), !dbg !2910
  %7 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !2911
  %8 = getelementptr inbounds %struct.FTS, %struct.FTS* %7, i32 0, i32 10, !dbg !2911
  %9 = load i32, i32* %8, align 8, !dbg !2911
  %10 = and i32 %9, 16, !dbg !2911
  %11 = icmp ne i32 %10, 0, !dbg !2911
  %12 = zext i1 %11 to i64, !dbg !2911
  %13 = select i1 %11, i32 131072, i32 0, !dbg !2911
  %14 = or i32 67840, %13, !dbg !2912
  store i32 %14, i32* %5, align 4, !dbg !2910
  call void @llvm.dbg.declare(metadata i32* %6, metadata !2913, metadata !DIExpression()), !dbg !2914
  %15 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !2915
  %16 = getelementptr inbounds %struct.FTS, %struct.FTS* %15, i32 0, i32 10, !dbg !2915
  %17 = load i32, i32* %16, align 8, !dbg !2915
  %18 = and i32 %17, 512, !dbg !2915
  %19 = icmp ne i32 %18, 0, !dbg !2915
  br i1 %19, label %20, label %27, !dbg !2915

; <label>:20:                                     ; preds = %2
  %21 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !2916
  %22 = getelementptr inbounds %struct.FTS, %struct.FTS* %21, i32 0, i32 6, !dbg !2917
  %23 = load i32, i32* %22, align 4, !dbg !2917
  %24 = load i8*, i8** %4, align 8, !dbg !2918
  %25 = load i32, i32* %5, align 4, !dbg !2919
  %26 = call i32 (i32, i8*, i32, ...) @openat_safer(i32 %23, i8* %24, i32 %25), !dbg !2920
  br label %31, !dbg !2915

; <label>:27:                                     ; preds = %2
  %28 = load i8*, i8** %4, align 8, !dbg !2921
  %29 = load i32, i32* %5, align 4, !dbg !2922
  %30 = call i32 (i8*, i32, ...) @open_safer(i8* %28, i32 %29), !dbg !2923
  br label %31, !dbg !2915

; <label>:31:                                     ; preds = %27, %20
  %32 = phi i32 [ %26, %20 ], [ %30, %27 ], !dbg !2915
  store i32 %32, i32* %6, align 4, !dbg !2914
  %33 = load i32, i32* %6, align 4, !dbg !2924
  %34 = icmp sle i32 0, %33, !dbg !2926
  br i1 %34, label %35, label %38, !dbg !2927

; <label>:35:                                     ; preds = %31
  %36 = load i32, i32* %6, align 4, !dbg !2928
  %37 = call i32 @set_cloexec_flag(i32 %36, i1 zeroext true), !dbg !2929
  br label %38, !dbg !2929

; <label>:38:                                     ; preds = %35, %31
  %39 = load i32, i32* %6, align 4, !dbg !2930
  ret i32 %39, !dbg !2931
}

; Function Attrs: noinline nounwind uwtable
define internal void @fts_lfree(%struct._ftsent*) #3 !dbg !2932 {
  %2 = alloca %struct._ftsent*, align 8
  %3 = alloca %struct._ftsent*, align 8
  store %struct._ftsent* %0, %struct._ftsent** %2, align 8
  call void @llvm.dbg.declare(metadata %struct._ftsent** %2, metadata !2935, metadata !DIExpression()), !dbg !2936
  call void @llvm.dbg.declare(metadata %struct._ftsent** %3, metadata !2937, metadata !DIExpression()), !dbg !2938
  br label %4, !dbg !2939

; <label>:4:                                      ; preds = %7, %1
  %5 = load %struct._ftsent*, %struct._ftsent** %2, align 8, !dbg !2940
  store %struct._ftsent* %5, %struct._ftsent** %3, align 8, !dbg !2941
  %6 = icmp ne %struct._ftsent* %5, null, !dbg !2939
  br i1 %6, label %7, label %13, !dbg !2939

; <label>:7:                                      ; preds = %4
  %8 = load %struct._ftsent*, %struct._ftsent** %2, align 8, !dbg !2942
  %9 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %8, i32 0, i32 2, !dbg !2944
  %10 = load %struct._ftsent*, %struct._ftsent** %9, align 8, !dbg !2944
  store %struct._ftsent* %10, %struct._ftsent** %2, align 8, !dbg !2945
  %11 = load %struct._ftsent*, %struct._ftsent** %3, align 8, !dbg !2946
  %12 = bitcast %struct._ftsent* %11 to i8*, !dbg !2946
  call void @free(i8* %12) #8, !dbg !2947
  br label %4, !dbg !2939, !llvm.loop !2948

; <label>:13:                                     ; preds = %4
  ret void, !dbg !2950
}

; Function Attrs: noinline nounwind uwtable
define internal i64 @AD_hash(i8*, i64) #3 !dbg !2951 {
  %3 = alloca i8*, align 8
  %4 = alloca i64, align 8
  %5 = alloca %struct.Active_dir*, align 8
  store i8* %0, i8** %3, align 8
  call void @llvm.dbg.declare(metadata i8** %3, metadata !2954, metadata !DIExpression()), !dbg !2955
  store i64 %1, i64* %4, align 8
  call void @llvm.dbg.declare(metadata i64* %4, metadata !2956, metadata !DIExpression()), !dbg !2957
  call void @llvm.dbg.declare(metadata %struct.Active_dir** %5, metadata !2958, metadata !DIExpression()), !dbg !2966
  %6 = load i8*, i8** %3, align 8, !dbg !2967
  %7 = bitcast i8* %6 to %struct.Active_dir*, !dbg !2967
  store %struct.Active_dir* %7, %struct.Active_dir** %5, align 8, !dbg !2966
  %8 = load %struct.Active_dir*, %struct.Active_dir** %5, align 8, !dbg !2968
  %9 = getelementptr inbounds %struct.Active_dir, %struct.Active_dir* %8, i32 0, i32 1, !dbg !2969
  %10 = load i64, i64* %9, align 8, !dbg !2969
  %11 = load i64, i64* %4, align 8, !dbg !2970
  %12 = urem i64 %10, %11, !dbg !2971
  ret i64 %12, !dbg !2972
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i1 @AD_compare(i8*, i8*) #3 !dbg !2973 {
  %3 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca %struct.Active_dir*, align 8
  %6 = alloca %struct.Active_dir*, align 8
  store i8* %0, i8** %3, align 8
  call void @llvm.dbg.declare(metadata i8** %3, metadata !2976, metadata !DIExpression()), !dbg !2977
  store i8* %1, i8** %4, align 8
  call void @llvm.dbg.declare(metadata i8** %4, metadata !2978, metadata !DIExpression()), !dbg !2979
  call void @llvm.dbg.declare(metadata %struct.Active_dir** %5, metadata !2980, metadata !DIExpression()), !dbg !2981
  %7 = load i8*, i8** %3, align 8, !dbg !2982
  %8 = bitcast i8* %7 to %struct.Active_dir*, !dbg !2982
  store %struct.Active_dir* %8, %struct.Active_dir** %5, align 8, !dbg !2981
  call void @llvm.dbg.declare(metadata %struct.Active_dir** %6, metadata !2983, metadata !DIExpression()), !dbg !2984
  %9 = load i8*, i8** %4, align 8, !dbg !2985
  %10 = bitcast i8* %9 to %struct.Active_dir*, !dbg !2985
  store %struct.Active_dir* %10, %struct.Active_dir** %6, align 8, !dbg !2984
  %11 = load %struct.Active_dir*, %struct.Active_dir** %5, align 8, !dbg !2986
  %12 = getelementptr inbounds %struct.Active_dir, %struct.Active_dir* %11, i32 0, i32 1, !dbg !2987
  %13 = load i64, i64* %12, align 8, !dbg !2987
  %14 = load %struct.Active_dir*, %struct.Active_dir** %6, align 8, !dbg !2988
  %15 = getelementptr inbounds %struct.Active_dir, %struct.Active_dir* %14, i32 0, i32 1, !dbg !2989
  %16 = load i64, i64* %15, align 8, !dbg !2989
  %17 = icmp eq i64 %13, %16, !dbg !2990
  br i1 %17, label %18, label %26, !dbg !2991

; <label>:18:                                     ; preds = %2
  %19 = load %struct.Active_dir*, %struct.Active_dir** %5, align 8, !dbg !2992
  %20 = getelementptr inbounds %struct.Active_dir, %struct.Active_dir* %19, i32 0, i32 0, !dbg !2993
  %21 = load i64, i64* %20, align 8, !dbg !2993
  %22 = load %struct.Active_dir*, %struct.Active_dir** %6, align 8, !dbg !2994
  %23 = getelementptr inbounds %struct.Active_dir, %struct.Active_dir* %22, i32 0, i32 0, !dbg !2995
  %24 = load i64, i64* %23, align 8, !dbg !2995
  %25 = icmp eq i64 %21, %24, !dbg !2996
  br label %26

; <label>:26:                                     ; preds = %18, %2
  %27 = phi i1 [ false, %2 ], [ %25, %18 ]
  ret i1 %27, !dbg !2997
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @fts_compar(i8*, i8*) #3 !dbg !2998 {
  %3 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca %struct._ftsent**, align 8
  %6 = alloca %struct._ftsent**, align 8
  store i8* %0, i8** %3, align 8
  call void @llvm.dbg.declare(metadata i8** %3, metadata !2999, metadata !DIExpression()), !dbg !3000
  store i8* %1, i8** %4, align 8
  call void @llvm.dbg.declare(metadata i8** %4, metadata !3001, metadata !DIExpression()), !dbg !3002
  call void @llvm.dbg.declare(metadata %struct._ftsent*** %5, metadata !3003, metadata !DIExpression()), !dbg !3004
  %7 = load i8*, i8** %3, align 8, !dbg !3005
  %8 = bitcast i8* %7 to %struct._ftsent**, !dbg !3006
  store %struct._ftsent** %8, %struct._ftsent*** %5, align 8, !dbg !3004
  call void @llvm.dbg.declare(metadata %struct._ftsent*** %6, metadata !3007, metadata !DIExpression()), !dbg !3008
  %9 = load i8*, i8** %4, align 8, !dbg !3009
  %10 = bitcast i8* %9 to %struct._ftsent**, !dbg !3010
  store %struct._ftsent** %10, %struct._ftsent*** %6, align 8, !dbg !3008
  %11 = load %struct._ftsent**, %struct._ftsent*** %5, align 8, !dbg !3011
  %12 = getelementptr inbounds %struct._ftsent*, %struct._ftsent** %11, i64 0, !dbg !3011
  %13 = load %struct._ftsent*, %struct._ftsent** %12, align 8, !dbg !3011
  %14 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %13, i32 0, i32 10, !dbg !3012
  %15 = load %struct.FTS*, %struct.FTS** %14, align 8, !dbg !3012
  %16 = getelementptr inbounds %struct.FTS, %struct.FTS* %15, i32 0, i32 9, !dbg !3013
  %17 = load i32 (%struct._ftsent**, %struct._ftsent**)*, i32 (%struct._ftsent**, %struct._ftsent**)** %16, align 8, !dbg !3013
  %18 = load %struct._ftsent**, %struct._ftsent*** %5, align 8, !dbg !3014
  %19 = load %struct._ftsent**, %struct._ftsent*** %6, align 8, !dbg !3015
  %20 = call i32 %17(%struct._ftsent** %18, %struct._ftsent** %19), !dbg !3011
  ret i32 %20, !dbg !3016
}

; Function Attrs: nounwind
declare i8* @realloc(i8*, i64) #5

declare void @qsort(i8*, i64, i64, i32 (i8*, i8*)*) #2

; Function Attrs: nounwind
declare i32 @lstat(i8*, %struct.stat*) #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i32, i1) #10

; Function Attrs: noinline nounwind uwtable
define i32 @fts_close(%struct.FTS*) #3 !dbg !3017 {
  %2 = alloca i32, align 4
  %3 = alloca %struct.FTS*, align 8
  %4 = alloca %struct._ftsent*, align 8
  %5 = alloca %struct._ftsent*, align 8
  %6 = alloca i32, align 4
  store %struct.FTS* %0, %struct.FTS** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.FTS** %3, metadata !3020, metadata !DIExpression()), !dbg !3021
  call void @llvm.dbg.declare(metadata %struct._ftsent** %4, metadata !3022, metadata !DIExpression()), !dbg !3023
  call void @llvm.dbg.declare(metadata %struct._ftsent** %5, metadata !3024, metadata !DIExpression()), !dbg !3025
  call void @llvm.dbg.declare(metadata i32* %6, metadata !3026, metadata !DIExpression()), !dbg !3027
  store i32 0, i32* %6, align 4, !dbg !3027
  %7 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !3028
  %8 = getelementptr inbounds %struct.FTS, %struct.FTS* %7, i32 0, i32 0, !dbg !3030
  %9 = load %struct._ftsent*, %struct._ftsent** %8, align 8, !dbg !3030
  %10 = icmp ne %struct._ftsent* %9, null, !dbg !3028
  br i1 %10, label %11, label %41, !dbg !3031

; <label>:11:                                     ; preds = %1
  %12 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !3032
  %13 = getelementptr inbounds %struct.FTS, %struct.FTS* %12, i32 0, i32 0, !dbg !3035
  %14 = load %struct._ftsent*, %struct._ftsent** %13, align 8, !dbg !3035
  store %struct._ftsent* %14, %struct._ftsent** %5, align 8, !dbg !3036
  br label %15, !dbg !3037

; <label>:15:                                     ; preds = %34, %11
  %16 = load %struct._ftsent*, %struct._ftsent** %5, align 8, !dbg !3038
  %17 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %16, i32 0, i32 11, !dbg !3040
  %18 = load i64, i64* %17, align 8, !dbg !3040
  %19 = icmp sge i64 %18, 0, !dbg !3041
  br i1 %19, label %20, label %38, !dbg !3042

; <label>:20:                                     ; preds = %15
  %21 = load %struct._ftsent*, %struct._ftsent** %5, align 8, !dbg !3043
  store %struct._ftsent* %21, %struct._ftsent** %4, align 8, !dbg !3045
  %22 = load %struct._ftsent*, %struct._ftsent** %5, align 8, !dbg !3046
  %23 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %22, i32 0, i32 2, !dbg !3047
  %24 = load %struct._ftsent*, %struct._ftsent** %23, align 8, !dbg !3047
  %25 = icmp ne %struct._ftsent* %24, null, !dbg !3048
  br i1 %25, label %26, label %30, !dbg !3046

; <label>:26:                                     ; preds = %20
  %27 = load %struct._ftsent*, %struct._ftsent** %5, align 8, !dbg !3049
  %28 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %27, i32 0, i32 2, !dbg !3050
  %29 = load %struct._ftsent*, %struct._ftsent** %28, align 8, !dbg !3050
  br label %34, !dbg !3046

; <label>:30:                                     ; preds = %20
  %31 = load %struct._ftsent*, %struct._ftsent** %5, align 8, !dbg !3051
  %32 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %31, i32 0, i32 1, !dbg !3052
  %33 = load %struct._ftsent*, %struct._ftsent** %32, align 8, !dbg !3052
  br label %34, !dbg !3046

; <label>:34:                                     ; preds = %30, %26
  %35 = phi %struct._ftsent* [ %29, %26 ], [ %33, %30 ], !dbg !3046
  store %struct._ftsent* %35, %struct._ftsent** %5, align 8, !dbg !3053
  %36 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !3054
  %37 = bitcast %struct._ftsent* %36 to i8*, !dbg !3054
  call void @free(i8* %37) #8, !dbg !3055
  br label %15, !dbg !3056, !llvm.loop !3057

; <label>:38:                                     ; preds = %15
  %39 = load %struct._ftsent*, %struct._ftsent** %5, align 8, !dbg !3059
  %40 = bitcast %struct._ftsent* %39 to i8*, !dbg !3059
  call void @free(i8* %40) #8, !dbg !3060
  br label %41, !dbg !3061

; <label>:41:                                     ; preds = %38, %1
  %42 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !3062
  %43 = getelementptr inbounds %struct.FTS, %struct.FTS* %42, i32 0, i32 1, !dbg !3064
  %44 = load %struct._ftsent*, %struct._ftsent** %43, align 8, !dbg !3064
  %45 = icmp ne %struct._ftsent* %44, null, !dbg !3062
  br i1 %45, label %46, label %50, !dbg !3065

; <label>:46:                                     ; preds = %41
  %47 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !3066
  %48 = getelementptr inbounds %struct.FTS, %struct.FTS* %47, i32 0, i32 1, !dbg !3067
  %49 = load %struct._ftsent*, %struct._ftsent** %48, align 8, !dbg !3067
  call void @fts_lfree(%struct._ftsent* %49), !dbg !3068
  br label %50, !dbg !3068

; <label>:50:                                     ; preds = %46, %41
  %51 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !3069
  %52 = getelementptr inbounds %struct.FTS, %struct.FTS* %51, i32 0, i32 2, !dbg !3070
  %53 = load %struct._ftsent**, %struct._ftsent*** %52, align 8, !dbg !3070
  %54 = bitcast %struct._ftsent** %53 to i8*, !dbg !3069
  call void @free(i8* %54) #8, !dbg !3071
  %55 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !3072
  %56 = getelementptr inbounds %struct.FTS, %struct.FTS* %55, i32 0, i32 4, !dbg !3073
  %57 = load i8*, i8** %56, align 8, !dbg !3073
  call void @free(i8* %57) #8, !dbg !3074
  %58 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !3075
  %59 = getelementptr inbounds %struct.FTS, %struct.FTS* %58, i32 0, i32 10, !dbg !3075
  %60 = load i32, i32* %59, align 8, !dbg !3075
  %61 = and i32 %60, 512, !dbg !3075
  %62 = icmp ne i32 %61, 0, !dbg !3075
  br i1 %62, label %63, label %79, !dbg !3077

; <label>:63:                                     ; preds = %50
  %64 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !3078
  %65 = getelementptr inbounds %struct.FTS, %struct.FTS* %64, i32 0, i32 6, !dbg !3081
  %66 = load i32, i32* %65, align 4, !dbg !3081
  %67 = icmp sle i32 0, %66, !dbg !3082
  br i1 %67, label %68, label %78, !dbg !3083

; <label>:68:                                     ; preds = %63
  %69 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !3084
  %70 = getelementptr inbounds %struct.FTS, %struct.FTS* %69, i32 0, i32 6, !dbg !3086
  %71 = load i32, i32* %70, align 4, !dbg !3086
  %72 = call i32 @close(i32 %71), !dbg !3087
  %73 = icmp ne i32 %72, 0, !dbg !3087
  br i1 %73, label %74, label %77, !dbg !3088

; <label>:74:                                     ; preds = %68
  %75 = call i32* @__errno_location() #14, !dbg !3089
  %76 = load i32, i32* %75, align 4, !dbg !3089
  store i32 %76, i32* %6, align 4, !dbg !3090
  br label %77, !dbg !3091

; <label>:77:                                     ; preds = %74, %68
  br label %78, !dbg !3092

; <label>:78:                                     ; preds = %77, %63
  br label %109, !dbg !3093

; <label>:79:                                     ; preds = %50
  %80 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !3094
  %81 = getelementptr inbounds %struct.FTS, %struct.FTS* %80, i32 0, i32 10, !dbg !3094
  %82 = load i32, i32* %81, align 8, !dbg !3094
  %83 = and i32 %82, 4, !dbg !3094
  %84 = icmp ne i32 %83, 0, !dbg !3094
  br i1 %84, label %108, label %85, !dbg !3096

; <label>:85:                                     ; preds = %79
  %86 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !3097
  %87 = getelementptr inbounds %struct.FTS, %struct.FTS* %86, i32 0, i32 5, !dbg !3100
  %88 = load i32, i32* %87, align 8, !dbg !3100
  %89 = call i32 @fchdir(i32 %88) #8, !dbg !3101
  %90 = icmp ne i32 %89, 0, !dbg !3101
  br i1 %90, label %91, label %94, !dbg !3102

; <label>:91:                                     ; preds = %85
  %92 = call i32* @__errno_location() #14, !dbg !3103
  %93 = load i32, i32* %92, align 4, !dbg !3103
  store i32 %93, i32* %6, align 4, !dbg !3104
  br label %94, !dbg !3105

; <label>:94:                                     ; preds = %91, %85
  %95 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !3106
  %96 = getelementptr inbounds %struct.FTS, %struct.FTS* %95, i32 0, i32 5, !dbg !3108
  %97 = load i32, i32* %96, align 8, !dbg !3108
  %98 = call i32 @close(i32 %97), !dbg !3109
  %99 = icmp ne i32 %98, 0, !dbg !3109
  br i1 %99, label %100, label %107, !dbg !3110

; <label>:100:                                    ; preds = %94
  %101 = load i32, i32* %6, align 4, !dbg !3111
  %102 = icmp eq i32 %101, 0, !dbg !3113
  br i1 %102, label %103, label %106, !dbg !3114

; <label>:103:                                    ; preds = %100
  %104 = call i32* @__errno_location() #14, !dbg !3115
  %105 = load i32, i32* %104, align 4, !dbg !3115
  store i32 %105, i32* %6, align 4, !dbg !3116
  br label %106, !dbg !3117

; <label>:106:                                    ; preds = %103, %100
  br label %107, !dbg !3118

; <label>:107:                                    ; preds = %106, %94
  br label %108, !dbg !3119

; <label>:108:                                    ; preds = %107, %79
  br label %109

; <label>:109:                                    ; preds = %108, %78
  %110 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !3120
  %111 = getelementptr inbounds %struct.FTS, %struct.FTS* %110, i32 0, i32 13, !dbg !3121
  call void @fd_ring_clear(%struct.I_ring* %111), !dbg !3122
  %112 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !3123
  %113 = getelementptr inbounds %struct.FTS, %struct.FTS* %112, i32 0, i32 11, !dbg !3125
  %114 = load %struct.hash_table*, %struct.hash_table** %113, align 8, !dbg !3125
  %115 = icmp ne %struct.hash_table* %114, null, !dbg !3123
  br i1 %115, label %116, label %120, !dbg !3126

; <label>:116:                                    ; preds = %109
  %117 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !3127
  %118 = getelementptr inbounds %struct.FTS, %struct.FTS* %117, i32 0, i32 11, !dbg !3128
  %119 = load %struct.hash_table*, %struct.hash_table** %118, align 8, !dbg !3128
  call void @hash_free(%struct.hash_table* %119), !dbg !3129
  br label %120, !dbg !3129

; <label>:120:                                    ; preds = %116, %109
  %121 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !3130
  call void @free_dir(%struct.FTS* %121), !dbg !3131
  %122 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !3132
  %123 = bitcast %struct.FTS* %122 to i8*, !dbg !3132
  call void @free(i8* %123) #8, !dbg !3133
  %124 = load i32, i32* %6, align 4, !dbg !3134
  %125 = icmp ne i32 %124, 0, !dbg !3134
  br i1 %125, label %126, label %129, !dbg !3136

; <label>:126:                                    ; preds = %120
  %127 = load i32, i32* %6, align 4, !dbg !3137
  %128 = call i32* @__errno_location() #14, !dbg !3137
  store i32 %127, i32* %128, align 4, !dbg !3137
  store i32 -1, i32* %2, align 4, !dbg !3139
  br label %130, !dbg !3139

; <label>:129:                                    ; preds = %120
  store i32 0, i32* %2, align 4, !dbg !3140
  br label %130, !dbg !3140

; <label>:130:                                    ; preds = %129, %126
  %131 = load i32, i32* %2, align 4, !dbg !3141
  ret i32 %131, !dbg !3141
}

; Function Attrs: nounwind
declare i32 @fchdir(i32) #5

; Function Attrs: noinline nounwind uwtable
define internal void @fd_ring_clear(%struct.I_ring*) #3 !dbg !3142 {
  %2 = alloca %struct.I_ring*, align 8
  %3 = alloca i32, align 4
  store %struct.I_ring* %0, %struct.I_ring** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.I_ring** %2, metadata !3146, metadata !DIExpression()), !dbg !3147
  br label %4, !dbg !3148

; <label>:4:                                      ; preds = %16, %1
  %5 = load %struct.I_ring*, %struct.I_ring** %2, align 8, !dbg !3149
  %6 = call zeroext i1 @i_ring_empty(%struct.I_ring* %5), !dbg !3150
  %7 = xor i1 %6, true, !dbg !3151
  br i1 %7, label %8, label %17, !dbg !3148

; <label>:8:                                      ; preds = %4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !3152, metadata !DIExpression()), !dbg !3154
  %9 = load %struct.I_ring*, %struct.I_ring** %2, align 8, !dbg !3155
  %10 = call i32 @i_ring_pop(%struct.I_ring* %9), !dbg !3156
  store i32 %10, i32* %3, align 4, !dbg !3154
  %11 = load i32, i32* %3, align 4, !dbg !3157
  %12 = icmp sle i32 0, %11, !dbg !3159
  br i1 %12, label %13, label %16, !dbg !3160

; <label>:13:                                     ; preds = %8
  %14 = load i32, i32* %3, align 4, !dbg !3161
  %15 = call i32 @close(i32 %14), !dbg !3162
  br label %16, !dbg !3162

; <label>:16:                                     ; preds = %13, %8
  br label %4, !dbg !3148, !llvm.loop !3163

; <label>:17:                                     ; preds = %4
  ret void, !dbg !3165
}

; Function Attrs: noinline nounwind uwtable
define internal void @free_dir(%struct.FTS*) #3 !dbg !3166 {
  %2 = alloca %struct.FTS*, align 8
  store %struct.FTS* %0, %struct.FTS** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.FTS** %2, metadata !3169, metadata !DIExpression()), !dbg !3170
  %3 = load %struct.FTS*, %struct.FTS** %2, align 8, !dbg !3171
  %4 = getelementptr inbounds %struct.FTS, %struct.FTS* %3, i32 0, i32 10, !dbg !3173
  %5 = load i32, i32* %4, align 8, !dbg !3173
  %6 = and i32 %5, 258, !dbg !3174
  %7 = icmp ne i32 %6, 0, !dbg !3174
  br i1 %7, label %8, label %20, !dbg !3175

; <label>:8:                                      ; preds = %1
  %9 = load %struct.FTS*, %struct.FTS** %2, align 8, !dbg !3176
  %10 = getelementptr inbounds %struct.FTS, %struct.FTS* %9, i32 0, i32 12, !dbg !3179
  %11 = bitcast %union.anon* %10 to %struct.hash_table**, !dbg !3180
  %12 = load %struct.hash_table*, %struct.hash_table** %11, align 8, !dbg !3180
  %13 = icmp ne %struct.hash_table* %12, null, !dbg !3176
  br i1 %13, label %14, label %19, !dbg !3181

; <label>:14:                                     ; preds = %8
  %15 = load %struct.FTS*, %struct.FTS** %2, align 8, !dbg !3182
  %16 = getelementptr inbounds %struct.FTS, %struct.FTS* %15, i32 0, i32 12, !dbg !3183
  %17 = bitcast %union.anon* %16 to %struct.hash_table**, !dbg !3184
  %18 = load %struct.hash_table*, %struct.hash_table** %17, align 8, !dbg !3184
  call void @hash_free(%struct.hash_table* %18), !dbg !3185
  br label %19, !dbg !3185

; <label>:19:                                     ; preds = %14, %8
  br label %26, !dbg !3186

; <label>:20:                                     ; preds = %1
  %21 = load %struct.FTS*, %struct.FTS** %2, align 8, !dbg !3187
  %22 = getelementptr inbounds %struct.FTS, %struct.FTS* %21, i32 0, i32 12, !dbg !3188
  %23 = bitcast %union.anon* %22 to %struct.cycle_check_state**, !dbg !3189
  %24 = load %struct.cycle_check_state*, %struct.cycle_check_state** %23, align 8, !dbg !3189
  %25 = bitcast %struct.cycle_check_state* %24 to i8*, !dbg !3187
  call void @free(i8* %25) #8, !dbg !3190
  br label %26

; <label>:26:                                     ; preds = %20, %19
  ret void, !dbg !3191
}

; Function Attrs: noinline nounwind uwtable
define %struct._ftsent* @fts_read(%struct.FTS*) #3 !dbg !3192 {
  %2 = alloca %struct._ftsent*, align 8
  %3 = alloca %struct.FTS*, align 8
  %4 = alloca %struct._ftsent*, align 8
  %5 = alloca %struct._ftsent*, align 8
  %6 = alloca i16, align 2
  %7 = alloca i8*, align 8
  %8 = alloca %struct._ftsent*, align 8
  %9 = alloca i32, align 4
  store %struct.FTS* %0, %struct.FTS** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.FTS** %3, metadata !3195, metadata !DIExpression()), !dbg !3196
  call void @llvm.dbg.declare(metadata %struct._ftsent** %4, metadata !3197, metadata !DIExpression()), !dbg !3198
  call void @llvm.dbg.declare(metadata %struct._ftsent** %5, metadata !3199, metadata !DIExpression()), !dbg !3200
  call void @llvm.dbg.declare(metadata i16* %6, metadata !3201, metadata !DIExpression()), !dbg !3202
  call void @llvm.dbg.declare(metadata i8** %7, metadata !3203, metadata !DIExpression()), !dbg !3204
  %10 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !3205
  %11 = getelementptr inbounds %struct.FTS, %struct.FTS* %10, i32 0, i32 0, !dbg !3207
  %12 = load %struct._ftsent*, %struct._ftsent** %11, align 8, !dbg !3207
  %13 = icmp eq %struct._ftsent* %12, null, !dbg !3208
  br i1 %13, label %20, label %14, !dbg !3209

; <label>:14:                                     ; preds = %1
  %15 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !3210
  %16 = getelementptr inbounds %struct.FTS, %struct.FTS* %15, i32 0, i32 10, !dbg !3210
  %17 = load i32, i32* %16, align 8, !dbg !3210
  %18 = and i32 %17, 8192, !dbg !3210
  %19 = icmp ne i32 %18, 0, !dbg !3210
  br i1 %19, label %20, label %21, !dbg !3211

; <label>:20:                                     ; preds = %14, %1
  store %struct._ftsent* null, %struct._ftsent** %2, align 8, !dbg !3212
  br label %751, !dbg !3212

; <label>:21:                                     ; preds = %14
  %22 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !3213
  %23 = getelementptr inbounds %struct.FTS, %struct.FTS* %22, i32 0, i32 0, !dbg !3214
  %24 = load %struct._ftsent*, %struct._ftsent** %23, align 8, !dbg !3214
  store %struct._ftsent* %24, %struct._ftsent** %4, align 8, !dbg !3215
  %25 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !3216
  %26 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %25, i32 0, i32 16, !dbg !3217
  %27 = load i16, i16* %26, align 4, !dbg !3217
  store i16 %27, i16* %6, align 2, !dbg !3218
  %28 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !3219
  %29 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %28, i32 0, i32 16, !dbg !3220
  store i16 3, i16* %29, align 4, !dbg !3221
  %30 = load i16, i16* %6, align 2, !dbg !3222
  %31 = zext i16 %30 to i32, !dbg !3222
  %32 = icmp eq i32 %31, 1, !dbg !3224
  br i1 %32, label %33, label %40, !dbg !3225

; <label>:33:                                     ; preds = %21
  %34 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !3226
  %35 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !3228
  %36 = call zeroext i16 @fts_stat(%struct.FTS* %34, %struct._ftsent* %35, i1 zeroext false), !dbg !3229
  %37 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !3230
  %38 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %37, i32 0, i32 14, !dbg !3231
  store i16 %36, i16* %38, align 8, !dbg !3232
  %39 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !3233
  store %struct._ftsent* %39, %struct._ftsent** %2, align 8, !dbg !3234
  br label %751, !dbg !3234

; <label>:40:                                     ; preds = %21
  %41 = load i16, i16* %6, align 2, !dbg !3235
  %42 = zext i16 %41 to i32, !dbg !3235
  %43 = icmp eq i32 %42, 2, !dbg !3237
  br i1 %43, label %44, label %95, !dbg !3238

; <label>:44:                                     ; preds = %40
  %45 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !3239
  %46 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %45, i32 0, i32 14, !dbg !3240
  %47 = load i16, i16* %46, align 8, !dbg !3240
  %48 = zext i16 %47 to i32, !dbg !3239
  %49 = icmp eq i32 %48, 12, !dbg !3241
  br i1 %49, label %56, label %50, !dbg !3242

; <label>:50:                                     ; preds = %44
  %51 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !3243
  %52 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %51, i32 0, i32 14, !dbg !3244
  %53 = load i16, i16* %52, align 8, !dbg !3244
  %54 = zext i16 %53 to i32, !dbg !3243
  %55 = icmp eq i32 %54, 13, !dbg !3245
  br i1 %55, label %56, label %95, !dbg !3246

; <label>:56:                                     ; preds = %50, %44
  %57 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !3247
  %58 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !3249
  %59 = call zeroext i16 @fts_stat(%struct.FTS* %57, %struct._ftsent* %58, i1 zeroext true), !dbg !3250
  %60 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !3251
  %61 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %60, i32 0, i32 14, !dbg !3252
  store i16 %59, i16* %61, align 8, !dbg !3253
  %62 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !3254
  %63 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %62, i32 0, i32 14, !dbg !3256
  %64 = load i16, i16* %63, align 8, !dbg !3256
  %65 = zext i16 %64 to i32, !dbg !3254
  %66 = icmp eq i32 %65, 1, !dbg !3257
  br i1 %66, label %67, label %94, !dbg !3258

; <label>:67:                                     ; preds = %56
  %68 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !3259
  %69 = getelementptr inbounds %struct.FTS, %struct.FTS* %68, i32 0, i32 10, !dbg !3259
  %70 = load i32, i32* %69, align 8, !dbg !3259
  %71 = and i32 %70, 4, !dbg !3259
  %72 = icmp ne i32 %71, 0, !dbg !3259
  br i1 %72, label %94, label %73, !dbg !3260

; <label>:73:                                     ; preds = %67
  %74 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !3261
  %75 = call i32 @diropen(%struct.FTS* %74, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.112, i32 0, i32 0)), !dbg !3264
  %76 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !3265
  %77 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %76, i32 0, i32 8, !dbg !3266
  store i32 %75, i32* %77, align 4, !dbg !3267
  %78 = icmp slt i32 %75, 0, !dbg !3268
  br i1 %78, label %79, label %86, !dbg !3269

; <label>:79:                                     ; preds = %73
  %80 = call i32* @__errno_location() #14, !dbg !3270
  %81 = load i32, i32* %80, align 4, !dbg !3270
  %82 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !3272
  %83 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %82, i32 0, i32 7, !dbg !3273
  store i32 %81, i32* %83, align 8, !dbg !3274
  %84 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !3275
  %85 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %84, i32 0, i32 14, !dbg !3276
  store i16 7, i16* %85, align 8, !dbg !3277
  br label %93, !dbg !3278

; <label>:86:                                     ; preds = %73
  %87 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !3279
  %88 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %87, i32 0, i32 15, !dbg !3280
  %89 = load i16, i16* %88, align 2, !dbg !3281
  %90 = zext i16 %89 to i32, !dbg !3281
  %91 = or i32 %90, 2, !dbg !3281
  %92 = trunc i32 %91 to i16, !dbg !3281
  store i16 %92, i16* %88, align 2, !dbg !3281
  br label %93

; <label>:93:                                     ; preds = %86, %79
  br label %94, !dbg !3282

; <label>:94:                                     ; preds = %93, %67, %56
  br label %432, !dbg !3283

; <label>:95:                                     ; preds = %50, %40
  %96 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !3284
  %97 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %96, i32 0, i32 14, !dbg !3286
  %98 = load i16, i16* %97, align 8, !dbg !3286
  %99 = zext i16 %98 to i32, !dbg !3284
  %100 = icmp eq i32 %99, 1, !dbg !3287
  br i1 %100, label %101, label %257, !dbg !3288

; <label>:101:                                    ; preds = %95
  %102 = load i16, i16* %6, align 2, !dbg !3289
  %103 = zext i16 %102 to i32, !dbg !3289
  %104 = icmp eq i32 %103, 4, !dbg !3292
  br i1 %104, label %121, label %105, !dbg !3293

; <label>:105:                                    ; preds = %101
  %106 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !3294
  %107 = getelementptr inbounds %struct.FTS, %struct.FTS* %106, i32 0, i32 10, !dbg !3294
  %108 = load i32, i32* %107, align 8, !dbg !3294
  %109 = and i32 %108, 64, !dbg !3294
  %110 = icmp ne i32 %109, 0, !dbg !3294
  br i1 %110, label %111, label %152, !dbg !3295

; <label>:111:                                    ; preds = %105
  %112 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !3296
  %113 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %112, i32 0, i32 17, !dbg !3297
  %114 = getelementptr inbounds [1 x %struct.stat], [1 x %struct.stat]* %113, i32 0, i32 0, !dbg !3298
  %115 = getelementptr inbounds %struct.stat, %struct.stat* %114, i32 0, i32 0, !dbg !3298
  %116 = load i64, i64* %115, align 8, !dbg !3298
  %117 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !3299
  %118 = getelementptr inbounds %struct.FTS, %struct.FTS* %117, i32 0, i32 3, !dbg !3300
  %119 = load i64, i64* %118, align 8, !dbg !3300
  %120 = icmp ne i64 %116, %119, !dbg !3301
  br i1 %120, label %121, label %152, !dbg !3302

; <label>:121:                                    ; preds = %111, %101
  %122 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !3303
  %123 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %122, i32 0, i32 15, !dbg !3306
  %124 = load i16, i16* %123, align 2, !dbg !3306
  %125 = zext i16 %124 to i32, !dbg !3303
  %126 = and i32 %125, 2, !dbg !3307
  %127 = icmp ne i32 %126, 0, !dbg !3307
  br i1 %127, label %128, label %133, !dbg !3308

; <label>:128:                                    ; preds = %121
  %129 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !3309
  %130 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %129, i32 0, i32 8, !dbg !3310
  %131 = load i32, i32* %130, align 4, !dbg !3310
  %132 = call i32 @close(i32 %131), !dbg !3311
  br label %133, !dbg !3312

; <label>:133:                                    ; preds = %128, %121
  %134 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !3313
  %135 = getelementptr inbounds %struct.FTS, %struct.FTS* %134, i32 0, i32 1, !dbg !3315
  %136 = load %struct._ftsent*, %struct._ftsent** %135, align 8, !dbg !3315
  %137 = icmp ne %struct._ftsent* %136, null, !dbg !3313
  br i1 %137, label %138, label %144, !dbg !3316

; <label>:138:                                    ; preds = %133
  %139 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !3317
  %140 = getelementptr inbounds %struct.FTS, %struct.FTS* %139, i32 0, i32 1, !dbg !3319
  %141 = load %struct._ftsent*, %struct._ftsent** %140, align 8, !dbg !3319
  call void @fts_lfree(%struct._ftsent* %141), !dbg !3320
  %142 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !3321
  %143 = getelementptr inbounds %struct.FTS, %struct.FTS* %142, i32 0, i32 1, !dbg !3322
  store %struct._ftsent* null, %struct._ftsent** %143, align 8, !dbg !3323
  br label %144, !dbg !3324

; <label>:144:                                    ; preds = %138, %133
  %145 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !3325
  %146 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %145, i32 0, i32 14, !dbg !3326
  store i16 6, i16* %146, align 8, !dbg !3327
  br label %147, !dbg !3328, !llvm.loop !3329

; <label>:147:                                    ; preds = %144
  %148 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !3330
  %149 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !3330
  call void @leave_dir(%struct.FTS* %148, %struct._ftsent* %149), !dbg !3330
  br label %150, !dbg !3330

; <label>:150:                                    ; preds = %147
  %151 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !3332
  store %struct._ftsent* %151, %struct._ftsent** %2, align 8, !dbg !3333
  br label %751, !dbg !3333

; <label>:152:                                    ; preds = %111, %105
  %153 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !3334
  %154 = getelementptr inbounds %struct.FTS, %struct.FTS* %153, i32 0, i32 1, !dbg !3336
  %155 = load %struct._ftsent*, %struct._ftsent** %154, align 8, !dbg !3336
  %156 = icmp ne %struct._ftsent* %155, null, !dbg !3337
  br i1 %156, label %157, label %173, !dbg !3338

; <label>:157:                                    ; preds = %152
  %158 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !3339
  %159 = getelementptr inbounds %struct.FTS, %struct.FTS* %158, i32 0, i32 10, !dbg !3339
  %160 = load i32, i32* %159, align 8, !dbg !3339
  %161 = and i32 %160, 4096, !dbg !3339
  %162 = icmp ne i32 %161, 0, !dbg !3339
  br i1 %162, label %163, label %173, !dbg !3340

; <label>:163:                                    ; preds = %157
  %164 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !3341
  %165 = getelementptr inbounds %struct.FTS, %struct.FTS* %164, i32 0, i32 10, !dbg !3341
  %166 = load i32, i32* %165, align 8, !dbg !3341
  %167 = and i32 %166, -4097, !dbg !3341
  store i32 %167, i32* %165, align 8, !dbg !3341
  %168 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !3343
  %169 = getelementptr inbounds %struct.FTS, %struct.FTS* %168, i32 0, i32 1, !dbg !3344
  %170 = load %struct._ftsent*, %struct._ftsent** %169, align 8, !dbg !3344
  call void @fts_lfree(%struct._ftsent* %170), !dbg !3345
  %171 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !3346
  %172 = getelementptr inbounds %struct.FTS, %struct.FTS* %171, i32 0, i32 1, !dbg !3347
  store %struct._ftsent* null, %struct._ftsent** %172, align 8, !dbg !3348
  br label %173, !dbg !3349

; <label>:173:                                    ; preds = %163, %157, %152
  %174 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !3350
  %175 = getelementptr inbounds %struct.FTS, %struct.FTS* %174, i32 0, i32 1, !dbg !3352
  %176 = load %struct._ftsent*, %struct._ftsent** %175, align 8, !dbg !3352
  %177 = icmp ne %struct._ftsent* %176, null, !dbg !3353
  br i1 %177, label %178, label %217, !dbg !3354

; <label>:178:                                    ; preds = %173
  %179 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !3355
  %180 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !3358
  %181 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !3359
  %182 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %181, i32 0, i32 5, !dbg !3360
  %183 = load i8*, i8** %182, align 8, !dbg !3360
  %184 = call i32 @fts_safe_changedir(%struct.FTS* %179, %struct._ftsent* %180, i32 -1, i8* %183), !dbg !3361
  %185 = icmp ne i32 %184, 0, !dbg !3361
  br i1 %185, label %186, label %216, !dbg !3362

; <label>:186:                                    ; preds = %178
  %187 = call i32* @__errno_location() #14, !dbg !3363
  %188 = load i32, i32* %187, align 4, !dbg !3363
  %189 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !3365
  %190 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %189, i32 0, i32 7, !dbg !3366
  store i32 %188, i32* %190, align 8, !dbg !3367
  %191 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !3368
  %192 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %191, i32 0, i32 15, !dbg !3369
  %193 = load i16, i16* %192, align 2, !dbg !3370
  %194 = zext i16 %193 to i32, !dbg !3370
  %195 = or i32 %194, 1, !dbg !3370
  %196 = trunc i32 %195 to i16, !dbg !3370
  store i16 %196, i16* %192, align 2, !dbg !3370
  %197 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !3371
  %198 = getelementptr inbounds %struct.FTS, %struct.FTS* %197, i32 0, i32 1, !dbg !3373
  %199 = load %struct._ftsent*, %struct._ftsent** %198, align 8, !dbg !3373
  store %struct._ftsent* %199, %struct._ftsent** %4, align 8, !dbg !3374
  br label %200, !dbg !3375

; <label>:200:                                    ; preds = %211, %186
  %201 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !3376
  %202 = icmp ne %struct._ftsent* %201, null, !dbg !3378
  br i1 %202, label %203, label %215, !dbg !3379

; <label>:203:                                    ; preds = %200
  %204 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !3380
  %205 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %204, i32 0, i32 1, !dbg !3381
  %206 = load %struct._ftsent*, %struct._ftsent** %205, align 8, !dbg !3381
  %207 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %206, i32 0, i32 5, !dbg !3382
  %208 = load i8*, i8** %207, align 8, !dbg !3382
  %209 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !3383
  %210 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %209, i32 0, i32 5, !dbg !3384
  store i8* %208, i8** %210, align 8, !dbg !3385
  br label %211, !dbg !3383

; <label>:211:                                    ; preds = %203
  %212 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !3386
  %213 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %212, i32 0, i32 2, !dbg !3387
  %214 = load %struct._ftsent*, %struct._ftsent** %213, align 8, !dbg !3387
  store %struct._ftsent* %214, %struct._ftsent** %4, align 8, !dbg !3388
  br label %200, !dbg !3389, !llvm.loop !3390

; <label>:215:                                    ; preds = %200
  br label %216, !dbg !3392

; <label>:216:                                    ; preds = %215, %178
  br label %251, !dbg !3393

; <label>:217:                                    ; preds = %173
  %218 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !3394
  %219 = call %struct._ftsent* @fts_build(%struct.FTS* %218, i32 3), !dbg !3396
  %220 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !3397
  %221 = getelementptr inbounds %struct.FTS, %struct.FTS* %220, i32 0, i32 1, !dbg !3398
  store %struct._ftsent* %219, %struct._ftsent** %221, align 8, !dbg !3399
  %222 = icmp eq %struct._ftsent* %219, null, !dbg !3400
  br i1 %222, label %223, label %250, !dbg !3401

; <label>:223:                                    ; preds = %217
  %224 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !3402
  %225 = getelementptr inbounds %struct.FTS, %struct.FTS* %224, i32 0, i32 10, !dbg !3402
  %226 = load i32, i32* %225, align 8, !dbg !3402
  %227 = and i32 %226, 8192, !dbg !3402
  %228 = icmp ne i32 %227, 0, !dbg !3402
  br i1 %228, label %229, label %230, !dbg !3405

; <label>:229:                                    ; preds = %223
  store %struct._ftsent* null, %struct._ftsent** %2, align 8, !dbg !3406
  br label %751, !dbg !3406

; <label>:230:                                    ; preds = %223
  %231 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !3407
  %232 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %231, i32 0, i32 7, !dbg !3409
  %233 = load i32, i32* %232, align 8, !dbg !3409
  %234 = icmp ne i32 %233, 0, !dbg !3407
  br i1 %234, label %235, label %244, !dbg !3410

; <label>:235:                                    ; preds = %230
  %236 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !3411
  %237 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %236, i32 0, i32 14, !dbg !3412
  %238 = load i16, i16* %237, align 8, !dbg !3412
  %239 = zext i16 %238 to i32, !dbg !3411
  %240 = icmp ne i32 %239, 4, !dbg !3413
  br i1 %240, label %241, label %244, !dbg !3414

; <label>:241:                                    ; preds = %235
  %242 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !3415
  %243 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %242, i32 0, i32 14, !dbg !3416
  store i16 7, i16* %243, align 8, !dbg !3417
  br label %244, !dbg !3415

; <label>:244:                                    ; preds = %241, %235, %230
  br label %245, !dbg !3418, !llvm.loop !3419

; <label>:245:                                    ; preds = %244
  %246 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !3420
  %247 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !3420
  call void @leave_dir(%struct.FTS* %246, %struct._ftsent* %247), !dbg !3420
  br label %248, !dbg !3420

; <label>:248:                                    ; preds = %245
  %249 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !3422
  store %struct._ftsent* %249, %struct._ftsent** %2, align 8, !dbg !3423
  br label %751, !dbg !3423

; <label>:250:                                    ; preds = %217
  br label %251

; <label>:251:                                    ; preds = %250, %216
  %252 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !3424
  %253 = getelementptr inbounds %struct.FTS, %struct.FTS* %252, i32 0, i32 1, !dbg !3425
  %254 = load %struct._ftsent*, %struct._ftsent** %253, align 8, !dbg !3425
  store %struct._ftsent* %254, %struct._ftsent** %4, align 8, !dbg !3426
  %255 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !3427
  %256 = getelementptr inbounds %struct.FTS, %struct.FTS* %255, i32 0, i32 1, !dbg !3428
  store %struct._ftsent* null, %struct._ftsent** %256, align 8, !dbg !3429
  br label %387, !dbg !3430

; <label>:257:                                    ; preds = %95
  br label %258, !dbg !3431

; <label>:258:                                    ; preds = %338, %257
  %259 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !3432
  store %struct._ftsent* %259, %struct._ftsent** %5, align 8, !dbg !3433
  %260 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !3434
  %261 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %260, i32 0, i32 2, !dbg !3436
  %262 = load %struct._ftsent*, %struct._ftsent** %261, align 8, !dbg !3436
  store %struct._ftsent* %262, %struct._ftsent** %4, align 8, !dbg !3437
  %263 = icmp ne %struct._ftsent* %262, null, !dbg !3438
  br i1 %263, label %264, label %547, !dbg !3439

; <label>:264:                                    ; preds = %258
  %265 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !3440
  %266 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !3442
  %267 = getelementptr inbounds %struct.FTS, %struct.FTS* %266, i32 0, i32 0, !dbg !3443
  store %struct._ftsent* %265, %struct._ftsent** %267, align 8, !dbg !3444
  %268 = load %struct._ftsent*, %struct._ftsent** %5, align 8, !dbg !3445
  %269 = bitcast %struct._ftsent* %268 to i8*, !dbg !3445
  call void @free(i8* %269) #8, !dbg !3446
  %270 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !3447
  %271 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %270, i32 0, i32 11, !dbg !3449
  %272 = load i64, i64* %271, align 8, !dbg !3449
  %273 = icmp eq i64 %272, 0, !dbg !3450
  br i1 %273, label %274, label %332, !dbg !3451

; <label>:274:                                    ; preds = %264
  %275 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !3452
  %276 = getelementptr inbounds %struct.FTS, %struct.FTS* %275, i32 0, i32 13, !dbg !3452
  call void @fd_ring_clear(%struct.I_ring* %276), !dbg !3452
  %277 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !3452
  %278 = getelementptr inbounds %struct.FTS, %struct.FTS* %277, i32 0, i32 10, !dbg !3452
  %279 = load i32, i32* %278, align 8, !dbg !3452
  %280 = and i32 %279, 4, !dbg !3452
  %281 = icmp ne i32 %280, 0, !dbg !3452
  br i1 %281, label %319, label %282, !dbg !3452

; <label>:282:                                    ; preds = %274
  %283 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !3452
  %284 = getelementptr inbounds %struct.FTS, %struct.FTS* %283, i32 0, i32 10, !dbg !3452
  %285 = load i32, i32* %284, align 8, !dbg !3452
  %286 = and i32 %285, 512, !dbg !3452
  %287 = icmp ne i32 %286, 0, !dbg !3452
  br i1 %287, label %288, label %302, !dbg !3452

; <label>:288:                                    ; preds = %282
  %289 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !3452
  %290 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !3452
  %291 = getelementptr inbounds %struct.FTS, %struct.FTS* %290, i32 0, i32 10, !dbg !3452
  %292 = load i32, i32* %291, align 8, !dbg !3452
  %293 = and i32 %292, 512, !dbg !3452
  %294 = icmp ne i32 %293, 0, !dbg !3452
  br i1 %294, label %295, label %296, !dbg !3452

; <label>:295:                                    ; preds = %288
  br label %300, !dbg !3452

; <label>:296:                                    ; preds = %288
  %297 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !3452
  %298 = getelementptr inbounds %struct.FTS, %struct.FTS* %297, i32 0, i32 5, !dbg !3452
  %299 = load i32, i32* %298, align 8, !dbg !3452
  br label %300, !dbg !3452

; <label>:300:                                    ; preds = %296, %295
  %301 = phi i32 [ -100, %295 ], [ %299, %296 ], !dbg !3452
  call void @cwd_advance_fd(%struct.FTS* %289, i32 %301, i1 zeroext true), !dbg !3452
  br label %316, !dbg !3452

; <label>:302:                                    ; preds = %282
  %303 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !3452
  %304 = getelementptr inbounds %struct.FTS, %struct.FTS* %303, i32 0, i32 10, !dbg !3452
  %305 = load i32, i32* %304, align 8, !dbg !3452
  %306 = and i32 %305, 512, !dbg !3452
  %307 = icmp ne i32 %306, 0, !dbg !3452
  br i1 %307, label %308, label %309, !dbg !3452

; <label>:308:                                    ; preds = %302
  br label %313, !dbg !3452

; <label>:309:                                    ; preds = %302
  %310 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !3452
  %311 = getelementptr inbounds %struct.FTS, %struct.FTS* %310, i32 0, i32 5, !dbg !3452
  %312 = load i32, i32* %311, align 8, !dbg !3452
  br label %313, !dbg !3452

; <label>:313:                                    ; preds = %309, %308
  %314 = phi i32 [ -100, %308 ], [ %312, %309 ], !dbg !3452
  %315 = call i32 @fchdir(i32 %314) #8, !dbg !3452
  br label %316, !dbg !3452

; <label>:316:                                    ; preds = %313, %300
  %317 = phi i32 [ 0, %300 ], [ %315, %313 ], !dbg !3452
  %318 = icmp ne i32 %317, 0, !dbg !3452
  br label %319

; <label>:319:                                    ; preds = %316, %274
  %320 = phi i1 [ false, %274 ], [ %318, %316 ]
  br i1 %320, label %321, label %326, !dbg !3455

; <label>:321:                                    ; preds = %319
  %322 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !3456
  %323 = getelementptr inbounds %struct.FTS, %struct.FTS* %322, i32 0, i32 10, !dbg !3456
  %324 = load i32, i32* %323, align 8, !dbg !3456
  %325 = or i32 %324, 8192, !dbg !3456
  store i32 %325, i32* %323, align 8, !dbg !3456
  store %struct._ftsent* null, %struct._ftsent** %2, align 8, !dbg !3458
  br label %751, !dbg !3458

; <label>:326:                                    ; preds = %319
  %327 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !3459
  call void @free_dir(%struct.FTS* %327), !dbg !3460
  %328 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !3461
  %329 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !3462
  call void @fts_load(%struct.FTS* %328, %struct._ftsent* %329), !dbg !3463
  %330 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !3464
  %331 = call zeroext i1 @setup_dir(%struct.FTS* %330), !dbg !3465
  br label %432, !dbg !3466

; <label>:332:                                    ; preds = %264
  %333 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !3467
  %334 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %333, i32 0, i32 16, !dbg !3469
  %335 = load i16, i16* %334, align 4, !dbg !3469
  %336 = zext i16 %335 to i32, !dbg !3467
  %337 = icmp eq i32 %336, 4, !dbg !3470
  br i1 %337, label %338, label %339, !dbg !3471

; <label>:338:                                    ; preds = %332
  br label %258, !dbg !3472

; <label>:339:                                    ; preds = %332
  %340 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !3473
  %341 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %340, i32 0, i32 16, !dbg !3475
  %342 = load i16, i16* %341, align 4, !dbg !3475
  %343 = zext i16 %342 to i32, !dbg !3473
  %344 = icmp eq i32 %343, 2, !dbg !3476
  br i1 %344, label %345, label %386, !dbg !3477

; <label>:345:                                    ; preds = %339
  %346 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !3478
  %347 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !3480
  %348 = call zeroext i16 @fts_stat(%struct.FTS* %346, %struct._ftsent* %347, i1 zeroext true), !dbg !3481
  %349 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !3482
  %350 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %349, i32 0, i32 14, !dbg !3483
  store i16 %348, i16* %350, align 8, !dbg !3484
  %351 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !3485
  %352 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %351, i32 0, i32 14, !dbg !3487
  %353 = load i16, i16* %352, align 8, !dbg !3487
  %354 = zext i16 %353 to i32, !dbg !3485
  %355 = icmp eq i32 %354, 1, !dbg !3488
  br i1 %355, label %356, label %383, !dbg !3489

; <label>:356:                                    ; preds = %345
  %357 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !3490
  %358 = getelementptr inbounds %struct.FTS, %struct.FTS* %357, i32 0, i32 10, !dbg !3490
  %359 = load i32, i32* %358, align 8, !dbg !3490
  %360 = and i32 %359, 4, !dbg !3490
  %361 = icmp ne i32 %360, 0, !dbg !3490
  br i1 %361, label %383, label %362, !dbg !3491

; <label>:362:                                    ; preds = %356
  %363 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !3492
  %364 = call i32 @diropen(%struct.FTS* %363, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.112, i32 0, i32 0)), !dbg !3495
  %365 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !3496
  %366 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %365, i32 0, i32 8, !dbg !3497
  store i32 %364, i32* %366, align 4, !dbg !3498
  %367 = icmp slt i32 %364, 0, !dbg !3499
  br i1 %367, label %368, label %375, !dbg !3500

; <label>:368:                                    ; preds = %362
  %369 = call i32* @__errno_location() #14, !dbg !3501
  %370 = load i32, i32* %369, align 4, !dbg !3501
  %371 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !3503
  %372 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %371, i32 0, i32 7, !dbg !3504
  store i32 %370, i32* %372, align 8, !dbg !3505
  %373 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !3506
  %374 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %373, i32 0, i32 14, !dbg !3507
  store i16 7, i16* %374, align 8, !dbg !3508
  br label %382, !dbg !3509

; <label>:375:                                    ; preds = %362
  %376 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !3510
  %377 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %376, i32 0, i32 15, !dbg !3511
  %378 = load i16, i16* %377, align 2, !dbg !3512
  %379 = zext i16 %378 to i32, !dbg !3512
  %380 = or i32 %379, 2, !dbg !3512
  %381 = trunc i32 %380 to i16, !dbg !3512
  store i16 %381, i16* %377, align 2, !dbg !3512
  br label %382

; <label>:382:                                    ; preds = %375, %368
  br label %383, !dbg !3513

; <label>:383:                                    ; preds = %382, %356, %345
  %384 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !3514
  %385 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %384, i32 0, i32 16, !dbg !3515
  store i16 3, i16* %385, align 4, !dbg !3516
  br label %386, !dbg !3517

; <label>:386:                                    ; preds = %383, %339
  br label %387, !dbg !3518

; <label>:387:                                    ; preds = %386, %251
  %388 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !3519
  %389 = getelementptr inbounds %struct.FTS, %struct.FTS* %388, i32 0, i32 4, !dbg !3520
  %390 = load i8*, i8** %389, align 8, !dbg !3520
  %391 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !3521
  %392 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %391, i32 0, i32 1, !dbg !3521
  %393 = load %struct._ftsent*, %struct._ftsent** %392, align 8, !dbg !3521
  %394 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %393, i32 0, i32 6, !dbg !3521
  %395 = load i8*, i8** %394, align 8, !dbg !3521
  %396 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !3521
  %397 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %396, i32 0, i32 1, !dbg !3521
  %398 = load %struct._ftsent*, %struct._ftsent** %397, align 8, !dbg !3521
  %399 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %398, i32 0, i32 9, !dbg !3521
  %400 = load i64, i64* %399, align 8, !dbg !3521
  %401 = sub i64 %400, 1, !dbg !3521
  %402 = getelementptr inbounds i8, i8* %395, i64 %401, !dbg !3521
  %403 = load i8, i8* %402, align 1, !dbg !3521
  %404 = sext i8 %403 to i32, !dbg !3521
  %405 = icmp eq i32 %404, 47, !dbg !3521
  br i1 %405, label %406, label %413, !dbg !3521

; <label>:406:                                    ; preds = %387
  %407 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !3521
  %408 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %407, i32 0, i32 1, !dbg !3521
  %409 = load %struct._ftsent*, %struct._ftsent** %408, align 8, !dbg !3521
  %410 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %409, i32 0, i32 9, !dbg !3521
  %411 = load i64, i64* %410, align 8, !dbg !3521
  %412 = sub i64 %411, 1, !dbg !3521
  br label %419, !dbg !3521

; <label>:413:                                    ; preds = %387
  %414 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !3521
  %415 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %414, i32 0, i32 1, !dbg !3521
  %416 = load %struct._ftsent*, %struct._ftsent** %415, align 8, !dbg !3521
  %417 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %416, i32 0, i32 9, !dbg !3521
  %418 = load i64, i64* %417, align 8, !dbg !3521
  br label %419, !dbg !3521

; <label>:419:                                    ; preds = %413, %406
  %420 = phi i64 [ %412, %406 ], [ %418, %413 ], !dbg !3521
  %421 = getelementptr inbounds i8, i8* %390, i64 %420, !dbg !3522
  store i8* %421, i8** %7, align 8, !dbg !3523
  %422 = load i8*, i8** %7, align 8, !dbg !3524
  %423 = getelementptr inbounds i8, i8* %422, i32 1, !dbg !3524
  store i8* %423, i8** %7, align 8, !dbg !3524
  store i8 47, i8* %422, align 1, !dbg !3525
  %424 = load i8*, i8** %7, align 8, !dbg !3526
  %425 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !3527
  %426 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %425, i32 0, i32 18, !dbg !3528
  %427 = getelementptr inbounds [1 x i8], [1 x i8]* %426, i32 0, i32 0, !dbg !3529
  %428 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !3530
  %429 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %428, i32 0, i32 12, !dbg !3531
  %430 = load i64, i64* %429, align 8, !dbg !3531
  %431 = add i64 %430, 1, !dbg !3532
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %424, i8* %427, i64 %431, i32 1, i1 false), !dbg !3529
  br label %432, !dbg !3529

; <label>:432:                                    ; preds = %419, %326, %94
  %433 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !3533
  %434 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !3534
  %435 = getelementptr inbounds %struct.FTS, %struct.FTS* %434, i32 0, i32 0, !dbg !3535
  store %struct._ftsent* %433, %struct._ftsent** %435, align 8, !dbg !3536
  %436 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !3537
  %437 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %436, i32 0, i32 14, !dbg !3539
  %438 = load i16, i16* %437, align 8, !dbg !3539
  %439 = zext i16 %438 to i32, !dbg !3537
  %440 = icmp eq i32 %439, 11, !dbg !3540
  br i1 %440, label %441, label %519, !dbg !3541

; <label>:441:                                    ; preds = %432
  %442 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !3542
  %443 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %442, i32 0, i32 17, !dbg !3545
  %444 = getelementptr inbounds [1 x %struct.stat], [1 x %struct.stat]* %443, i32 0, i32 0, !dbg !3546
  %445 = getelementptr inbounds %struct.stat, %struct.stat* %444, i32 0, i32 8, !dbg !3546
  %446 = load i64, i64* %445, align 8, !dbg !3546
  %447 = icmp eq i64 %446, 2, !dbg !3547
  br i1 %447, label %448, label %507, !dbg !3548

; <label>:448:                                    ; preds = %441
  call void @llvm.dbg.declare(metadata %struct._ftsent** %8, metadata !3549, metadata !DIExpression()), !dbg !3551
  %449 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !3552
  %450 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %449, i32 0, i32 1, !dbg !3553
  %451 = load %struct._ftsent*, %struct._ftsent** %450, align 8, !dbg !3553
  store %struct._ftsent* %451, %struct._ftsent** %8, align 8, !dbg !3551
  %452 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !3554
  %453 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %452, i32 0, i32 11, !dbg !3556
  %454 = load i64, i64* %453, align 8, !dbg !3556
  %455 = icmp slt i64 0, %454, !dbg !3557
  br i1 %455, label %456, label %477, !dbg !3558

; <label>:456:                                    ; preds = %448
  %457 = load %struct._ftsent*, %struct._ftsent** %8, align 8, !dbg !3559
  %458 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %457, i32 0, i32 13, !dbg !3560
  %459 = load i64, i64* %458, align 8, !dbg !3560
  %460 = icmp eq i64 %459, 0, !dbg !3561
  br i1 %460, label %461, label %477, !dbg !3562

; <label>:461:                                    ; preds = %456
  %462 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !3563
  %463 = getelementptr inbounds %struct.FTS, %struct.FTS* %462, i32 0, i32 10, !dbg !3563
  %464 = load i32, i32* %463, align 8, !dbg !3563
  %465 = and i32 %464, 8, !dbg !3563
  %466 = icmp ne i32 %465, 0, !dbg !3563
  br i1 %466, label %467, label %477, !dbg !3564

; <label>:467:                                    ; preds = %461
  %468 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !3565
  %469 = getelementptr inbounds %struct.FTS, %struct.FTS* %468, i32 0, i32 10, !dbg !3565
  %470 = load i32, i32* %469, align 8, !dbg !3565
  %471 = and i32 %470, 16, !dbg !3565
  %472 = icmp ne i32 %471, 0, !dbg !3565
  br i1 %472, label %473, label %477, !dbg !3566

; <label>:473:                                    ; preds = %467
  %474 = load %struct._ftsent*, %struct._ftsent** %8, align 8, !dbg !3567
  %475 = call zeroext i1 @link_count_optimize_ok(%struct._ftsent* %474), !dbg !3568
  br i1 %475, label %476, label %477, !dbg !3569

; <label>:476:                                    ; preds = %473
  br label %506, !dbg !3570

; <label>:477:                                    ; preds = %473, %467, %461, %456, %448
  %478 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !3572
  %479 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !3574
  %480 = call zeroext i16 @fts_stat(%struct.FTS* %478, %struct._ftsent* %479, i1 zeroext false), !dbg !3575
  %481 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !3576
  %482 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %481, i32 0, i32 14, !dbg !3577
  store i16 %480, i16* %482, align 8, !dbg !3578
  %483 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !3579
  %484 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %483, i32 0, i32 17, !dbg !3579
  %485 = getelementptr inbounds [1 x %struct.stat], [1 x %struct.stat]* %484, i32 0, i32 0, !dbg !3579
  %486 = getelementptr inbounds %struct.stat, %struct.stat* %485, i32 0, i32 3, !dbg !3579
  %487 = load i32, i32* %486, align 8, !dbg !3579
  %488 = and i32 %487, 61440, !dbg !3579
  %489 = icmp eq i32 %488, 16384, !dbg !3579
  br i1 %489, label %490, label %505, !dbg !3581

; <label>:490:                                    ; preds = %477
  %491 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !3582
  %492 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %491, i32 0, i32 11, !dbg !3583
  %493 = load i64, i64* %492, align 8, !dbg !3583
  %494 = icmp ne i64 %493, 0, !dbg !3584
  br i1 %494, label %495, label %505, !dbg !3585

; <label>:495:                                    ; preds = %490
  %496 = load %struct._ftsent*, %struct._ftsent** %8, align 8, !dbg !3586
  %497 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %496, i32 0, i32 13, !dbg !3587
  %498 = load i64, i64* %497, align 8, !dbg !3587
  %499 = icmp ne i64 %498, 0, !dbg !3586
  br i1 %499, label %500, label %505, !dbg !3588

; <label>:500:                                    ; preds = %495
  %501 = load %struct._ftsent*, %struct._ftsent** %8, align 8, !dbg !3589
  %502 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %501, i32 0, i32 13, !dbg !3590
  %503 = load i64, i64* %502, align 8, !dbg !3591
  %504 = add i64 %503, -1, !dbg !3591
  store i64 %504, i64* %502, align 8, !dbg !3591
  br label %505, !dbg !3589

; <label>:505:                                    ; preds = %500, %495, %490, %477
  br label %506

; <label>:506:                                    ; preds = %505, %476
  br label %518, !dbg !3592

; <label>:507:                                    ; preds = %441
  br label %508, !dbg !3593, !llvm.loop !3594

; <label>:508:                                    ; preds = %507
  %509 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !3595
  %510 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %509, i32 0, i32 17, !dbg !3595
  %511 = getelementptr inbounds [1 x %struct.stat], [1 x %struct.stat]* %510, i32 0, i32 0, !dbg !3595
  %512 = getelementptr inbounds %struct.stat, %struct.stat* %511, i32 0, i32 8, !dbg !3595
  %513 = load i64, i64* %512, align 8, !dbg !3595
  %514 = icmp eq i64 %513, 1, !dbg !3595
  br i1 %514, label %516, label %515, !dbg !3598

; <label>:515:                                    ; preds = %508
  call void @abort() #11, !dbg !3595
  unreachable, !dbg !3595

; <label>:516:                                    ; preds = %508
  br label %517, !dbg !3598

; <label>:517:                                    ; preds = %516
  br label %518

; <label>:518:                                    ; preds = %517, %506
  br label %519, !dbg !3599

; <label>:519:                                    ; preds = %518, %432
  %520 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !3600
  %521 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %520, i32 0, i32 14, !dbg !3602
  %522 = load i16, i16* %521, align 8, !dbg !3602
  %523 = zext i16 %522 to i32, !dbg !3600
  %524 = icmp eq i32 %523, 1, !dbg !3603
  br i1 %524, label %525, label %545, !dbg !3604

; <label>:525:                                    ; preds = %519
  %526 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !3605
  %527 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %526, i32 0, i32 11, !dbg !3608
  %528 = load i64, i64* %527, align 8, !dbg !3608
  %529 = icmp eq i64 %528, 0, !dbg !3609
  br i1 %529, label %530, label %538, !dbg !3610

; <label>:530:                                    ; preds = %525
  %531 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !3611
  %532 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %531, i32 0, i32 17, !dbg !3612
  %533 = getelementptr inbounds [1 x %struct.stat], [1 x %struct.stat]* %532, i32 0, i32 0, !dbg !3613
  %534 = getelementptr inbounds %struct.stat, %struct.stat* %533, i32 0, i32 0, !dbg !3613
  %535 = load i64, i64* %534, align 8, !dbg !3613
  %536 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !3614
  %537 = getelementptr inbounds %struct.FTS, %struct.FTS* %536, i32 0, i32 3, !dbg !3615
  store i64 %535, i64* %537, align 8, !dbg !3616
  br label %538, !dbg !3614

; <label>:538:                                    ; preds = %530, %525
  %539 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !3617
  %540 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !3619
  %541 = call zeroext i1 @enter_dir(%struct.FTS* %539, %struct._ftsent* %540), !dbg !3620
  br i1 %541, label %544, label %542, !dbg !3621

; <label>:542:                                    ; preds = %538
  %543 = call i32* @__errno_location() #14, !dbg !3622
  store i32 12, i32* %543, align 4, !dbg !3622
  store %struct._ftsent* null, %struct._ftsent** %2, align 8, !dbg !3624
  br label %751, !dbg !3624

; <label>:544:                                    ; preds = %538
  br label %545, !dbg !3625

; <label>:545:                                    ; preds = %544, %519
  %546 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !3626
  store %struct._ftsent* %546, %struct._ftsent** %2, align 8, !dbg !3627
  br label %751, !dbg !3627

; <label>:547:                                    ; preds = %258
  %548 = load %struct._ftsent*, %struct._ftsent** %5, align 8, !dbg !3628
  %549 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %548, i32 0, i32 1, !dbg !3629
  %550 = load %struct._ftsent*, %struct._ftsent** %549, align 8, !dbg !3629
  store %struct._ftsent* %550, %struct._ftsent** %4, align 8, !dbg !3630
  %551 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !3631
  %552 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !3632
  %553 = getelementptr inbounds %struct.FTS, %struct.FTS* %552, i32 0, i32 0, !dbg !3633
  store %struct._ftsent* %551, %struct._ftsent** %553, align 8, !dbg !3634
  %554 = load %struct._ftsent*, %struct._ftsent** %5, align 8, !dbg !3635
  %555 = bitcast %struct._ftsent* %554 to i8*, !dbg !3635
  call void @free(i8* %555) #8, !dbg !3636
  %556 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !3637
  %557 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %556, i32 0, i32 11, !dbg !3639
  %558 = load i64, i64* %557, align 8, !dbg !3639
  %559 = icmp eq i64 %558, -1, !dbg !3640
  br i1 %559, label %560, label %566, !dbg !3641

; <label>:560:                                    ; preds = %547
  %561 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !3642
  %562 = bitcast %struct._ftsent* %561 to i8*, !dbg !3642
  call void @free(i8* %562) #8, !dbg !3644
  %563 = call i32* @__errno_location() #14, !dbg !3645
  store i32 0, i32* %563, align 4, !dbg !3645
  %564 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !3646
  %565 = getelementptr inbounds %struct.FTS, %struct.FTS* %564, i32 0, i32 0, !dbg !3647
  store %struct._ftsent* null, %struct._ftsent** %565, align 8, !dbg !3648
  store %struct._ftsent* null, %struct._ftsent** %2, align 8, !dbg !3649
  br label %751, !dbg !3649

; <label>:566:                                    ; preds = %547
  br label %567, !dbg !3650, !llvm.loop !3651

; <label>:567:                                    ; preds = %566
  %568 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !3652
  %569 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %568, i32 0, i32 14, !dbg !3652
  %570 = load i16, i16* %569, align 8, !dbg !3652
  %571 = zext i16 %570 to i32, !dbg !3652
  %572 = icmp ne i32 %571, 11, !dbg !3652
  br i1 %572, label %574, label %573, !dbg !3655

; <label>:573:                                    ; preds = %567
  call void @abort() #11, !dbg !3652
  unreachable, !dbg !3652

; <label>:574:                                    ; preds = %567
  br label %575, !dbg !3655

; <label>:575:                                    ; preds = %574
  %576 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !3656
  %577 = getelementptr inbounds %struct.FTS, %struct.FTS* %576, i32 0, i32 4, !dbg !3657
  %578 = load i8*, i8** %577, align 8, !dbg !3657
  %579 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !3658
  %580 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %579, i32 0, i32 9, !dbg !3659
  %581 = load i64, i64* %580, align 8, !dbg !3659
  %582 = getelementptr inbounds i8, i8* %578, i64 %581, !dbg !3656
  store i8 0, i8* %582, align 1, !dbg !3660
  %583 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !3661
  %584 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %583, i32 0, i32 11, !dbg !3663
  %585 = load i64, i64* %584, align 8, !dbg !3663
  %586 = icmp eq i64 %585, 0, !dbg !3664
  br i1 %586, label %587, label %644, !dbg !3665

; <label>:587:                                    ; preds = %575
  %588 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !3666
  %589 = getelementptr inbounds %struct.FTS, %struct.FTS* %588, i32 0, i32 13, !dbg !3666
  call void @fd_ring_clear(%struct.I_ring* %589), !dbg !3666
  %590 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !3666
  %591 = getelementptr inbounds %struct.FTS, %struct.FTS* %590, i32 0, i32 10, !dbg !3666
  %592 = load i32, i32* %591, align 8, !dbg !3666
  %593 = and i32 %592, 4, !dbg !3666
  %594 = icmp ne i32 %593, 0, !dbg !3666
  br i1 %594, label %632, label %595, !dbg !3666

; <label>:595:                                    ; preds = %587
  %596 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !3666
  %597 = getelementptr inbounds %struct.FTS, %struct.FTS* %596, i32 0, i32 10, !dbg !3666
  %598 = load i32, i32* %597, align 8, !dbg !3666
  %599 = and i32 %598, 512, !dbg !3666
  %600 = icmp ne i32 %599, 0, !dbg !3666
  br i1 %600, label %601, label %615, !dbg !3666

; <label>:601:                                    ; preds = %595
  %602 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !3666
  %603 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !3666
  %604 = getelementptr inbounds %struct.FTS, %struct.FTS* %603, i32 0, i32 10, !dbg !3666
  %605 = load i32, i32* %604, align 8, !dbg !3666
  %606 = and i32 %605, 512, !dbg !3666
  %607 = icmp ne i32 %606, 0, !dbg !3666
  br i1 %607, label %608, label %609, !dbg !3666

; <label>:608:                                    ; preds = %601
  br label %613, !dbg !3666

; <label>:609:                                    ; preds = %601
  %610 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !3666
  %611 = getelementptr inbounds %struct.FTS, %struct.FTS* %610, i32 0, i32 5, !dbg !3666
  %612 = load i32, i32* %611, align 8, !dbg !3666
  br label %613, !dbg !3666

; <label>:613:                                    ; preds = %609, %608
  %614 = phi i32 [ -100, %608 ], [ %612, %609 ], !dbg !3666
  call void @cwd_advance_fd(%struct.FTS* %602, i32 %614, i1 zeroext true), !dbg !3666
  br label %629, !dbg !3666

; <label>:615:                                    ; preds = %595
  %616 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !3666
  %617 = getelementptr inbounds %struct.FTS, %struct.FTS* %616, i32 0, i32 10, !dbg !3666
  %618 = load i32, i32* %617, align 8, !dbg !3666
  %619 = and i32 %618, 512, !dbg !3666
  %620 = icmp ne i32 %619, 0, !dbg !3666
  br i1 %620, label %621, label %622, !dbg !3666

; <label>:621:                                    ; preds = %615
  br label %626, !dbg !3666

; <label>:622:                                    ; preds = %615
  %623 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !3666
  %624 = getelementptr inbounds %struct.FTS, %struct.FTS* %623, i32 0, i32 5, !dbg !3666
  %625 = load i32, i32* %624, align 8, !dbg !3666
  br label %626, !dbg !3666

; <label>:626:                                    ; preds = %622, %621
  %627 = phi i32 [ -100, %621 ], [ %625, %622 ], !dbg !3666
  %628 = call i32 @fchdir(i32 %627) #8, !dbg !3666
  br label %629, !dbg !3666

; <label>:629:                                    ; preds = %626, %613
  %630 = phi i32 [ 0, %613 ], [ %628, %626 ], !dbg !3666
  %631 = icmp ne i32 %630, 0, !dbg !3666
  br label %632

; <label>:632:                                    ; preds = %629, %587
  %633 = phi i1 [ false, %587 ], [ %631, %629 ]
  br i1 %633, label %634, label %643, !dbg !3669

; <label>:634:                                    ; preds = %632
  %635 = call i32* @__errno_location() #14, !dbg !3670
  %636 = load i32, i32* %635, align 4, !dbg !3670
  %637 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !3672
  %638 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %637, i32 0, i32 7, !dbg !3673
  store i32 %636, i32* %638, align 8, !dbg !3674
  %639 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !3675
  %640 = getelementptr inbounds %struct.FTS, %struct.FTS* %639, i32 0, i32 10, !dbg !3675
  %641 = load i32, i32* %640, align 8, !dbg !3675
  %642 = or i32 %641, 8192, !dbg !3675
  store i32 %642, i32* %640, align 8, !dbg !3675
  br label %643, !dbg !3676

; <label>:643:                                    ; preds = %634, %632
  br label %721, !dbg !3677

; <label>:644:                                    ; preds = %575
  %645 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !3678
  %646 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %645, i32 0, i32 15, !dbg !3680
  %647 = load i16, i16* %646, align 2, !dbg !3680
  %648 = zext i16 %647 to i32, !dbg !3678
  %649 = and i32 %648, 2, !dbg !3681
  %650 = icmp ne i32 %649, 0, !dbg !3681
  br i1 %650, label %651, label %696, !dbg !3682

; <label>:651:                                    ; preds = %644
  %652 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !3683
  %653 = getelementptr inbounds %struct.FTS, %struct.FTS* %652, i32 0, i32 10, !dbg !3683
  %654 = load i32, i32* %653, align 8, !dbg !3683
  %655 = and i32 %654, 4, !dbg !3683
  %656 = icmp ne i32 %655, 0, !dbg !3683
  br i1 %656, label %691, label %657, !dbg !3683

; <label>:657:                                    ; preds = %651
  %658 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !3683
  %659 = getelementptr inbounds %struct.FTS, %struct.FTS* %658, i32 0, i32 10, !dbg !3683
  %660 = load i32, i32* %659, align 8, !dbg !3683
  %661 = and i32 %660, 512, !dbg !3683
  %662 = icmp ne i32 %661, 0, !dbg !3683
  br i1 %662, label %663, label %668, !dbg !3686

; <label>:663:                                    ; preds = %657
  %664 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !3683
  %665 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !3683
  %666 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %665, i32 0, i32 8, !dbg !3683
  %667 = load i32, i32* %666, align 4, !dbg !3683
  call void @cwd_advance_fd(%struct.FTS* %664, i32 %667, i1 zeroext true), !dbg !3683
  br i1 false, label %674, label %691, !dbg !3683

; <label>:668:                                    ; preds = %657
  %669 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !3683
  %670 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %669, i32 0, i32 8, !dbg !3683
  %671 = load i32, i32* %670, align 4, !dbg !3683
  %672 = call i32 @fchdir(i32 %671) #8, !dbg !3683
  %673 = icmp ne i32 %672, 0, !dbg !3683
  br i1 %673, label %674, label %691, !dbg !3686

; <label>:674:                                    ; preds = %668, %663
  call void @llvm.dbg.declare(metadata i32* %9, metadata !3687, metadata !DIExpression()), !dbg !3689
  %675 = call i32* @__errno_location() #14, !dbg !3690
  %676 = load i32, i32* %675, align 4, !dbg !3690
  store i32 %676, i32* %9, align 4, !dbg !3689
  %677 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !3691
  %678 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %677, i32 0, i32 8, !dbg !3692
  %679 = load i32, i32* %678, align 4, !dbg !3692
  %680 = call i32 @close(i32 %679), !dbg !3693
  %681 = load i32, i32* %9, align 4, !dbg !3694
  %682 = call i32* @__errno_location() #14, !dbg !3694
  store i32 %681, i32* %682, align 4, !dbg !3694
  %683 = call i32* @__errno_location() #14, !dbg !3695
  %684 = load i32, i32* %683, align 4, !dbg !3695
  %685 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !3696
  %686 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %685, i32 0, i32 7, !dbg !3697
  store i32 %684, i32* %686, align 8, !dbg !3698
  %687 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !3699
  %688 = getelementptr inbounds %struct.FTS, %struct.FTS* %687, i32 0, i32 10, !dbg !3699
  %689 = load i32, i32* %688, align 8, !dbg !3699
  %690 = or i32 %689, 8192, !dbg !3699
  store i32 %690, i32* %688, align 8, !dbg !3699
  br label %691, !dbg !3700

; <label>:691:                                    ; preds = %674, %668, %663, %651
  %692 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !3701
  %693 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %692, i32 0, i32 8, !dbg !3702
  %694 = load i32, i32* %693, align 4, !dbg !3702
  %695 = call i32 @close(i32 %694), !dbg !3703
  br label %720, !dbg !3704

; <label>:696:                                    ; preds = %644
  %697 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !3705
  %698 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %697, i32 0, i32 15, !dbg !3707
  %699 = load i16, i16* %698, align 2, !dbg !3707
  %700 = zext i16 %699 to i32, !dbg !3705
  %701 = and i32 %700, 1, !dbg !3708
  %702 = icmp ne i32 %701, 0, !dbg !3708
  br i1 %702, label %719, label %703, !dbg !3709

; <label>:703:                                    ; preds = %696
  %704 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !3710
  %705 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !3711
  %706 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %705, i32 0, i32 1, !dbg !3712
  %707 = load %struct._ftsent*, %struct._ftsent** %706, align 8, !dbg !3712
  %708 = call i32 @fts_safe_changedir(%struct.FTS* %704, %struct._ftsent* %707, i32 -1, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2.118, i32 0, i32 0)), !dbg !3713
  %709 = icmp ne i32 %708, 0, !dbg !3713
  br i1 %709, label %710, label %719, !dbg !3714

; <label>:710:                                    ; preds = %703
  %711 = call i32* @__errno_location() #14, !dbg !3715
  %712 = load i32, i32* %711, align 4, !dbg !3715
  %713 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !3717
  %714 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %713, i32 0, i32 7, !dbg !3718
  store i32 %712, i32* %714, align 8, !dbg !3719
  %715 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !3720
  %716 = getelementptr inbounds %struct.FTS, %struct.FTS* %715, i32 0, i32 10, !dbg !3720
  %717 = load i32, i32* %716, align 8, !dbg !3720
  %718 = or i32 %717, 8192, !dbg !3720
  store i32 %718, i32* %716, align 8, !dbg !3720
  br label %719, !dbg !3721

; <label>:719:                                    ; preds = %710, %703, %696
  br label %720

; <label>:720:                                    ; preds = %719, %691
  br label %721

; <label>:721:                                    ; preds = %720, %643
  %722 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !3722
  %723 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %722, i32 0, i32 7, !dbg !3723
  %724 = load i32, i32* %723, align 8, !dbg !3723
  %725 = icmp ne i32 %724, 0, !dbg !3722
  %726 = zext i1 %725 to i64, !dbg !3722
  %727 = select i1 %725, i32 7, i32 6, !dbg !3722
  %728 = trunc i32 %727 to i16, !dbg !3722
  %729 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !3724
  %730 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %729, i32 0, i32 14, !dbg !3725
  store i16 %728, i16* %730, align 8, !dbg !3726
  %731 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !3727
  %732 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %731, i32 0, i32 7, !dbg !3729
  %733 = load i32, i32* %732, align 8, !dbg !3729
  %734 = icmp eq i32 %733, 0, !dbg !3730
  br i1 %734, label %735, label %740, !dbg !3731

; <label>:735:                                    ; preds = %721
  br label %736, !dbg !3732, !llvm.loop !3733

; <label>:736:                                    ; preds = %735
  %737 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !3734
  %738 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !3734
  call void @leave_dir(%struct.FTS* %737, %struct._ftsent* %738), !dbg !3734
  br label %739, !dbg !3734

; <label>:739:                                    ; preds = %736
  br label %740, !dbg !3734

; <label>:740:                                    ; preds = %739, %721
  %741 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !3736
  %742 = getelementptr inbounds %struct.FTS, %struct.FTS* %741, i32 0, i32 10, !dbg !3736
  %743 = load i32, i32* %742, align 8, !dbg !3736
  %744 = and i32 %743, 8192, !dbg !3736
  %745 = icmp ne i32 %744, 0, !dbg !3736
  br i1 %745, label %746, label %747, !dbg !3736

; <label>:746:                                    ; preds = %740
  br label %749, !dbg !3736

; <label>:747:                                    ; preds = %740
  %748 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !3737
  br label %749, !dbg !3736

; <label>:749:                                    ; preds = %747, %746
  %750 = phi %struct._ftsent* [ null, %746 ], [ %748, %747 ], !dbg !3736
  store %struct._ftsent* %750, %struct._ftsent** %2, align 8, !dbg !3738
  br label %751, !dbg !3738

; <label>:751:                                    ; preds = %749, %560, %545, %542, %321, %248, %229, %150, %33, %20
  %752 = load %struct._ftsent*, %struct._ftsent** %2, align 8, !dbg !3739
  ret %struct._ftsent* %752, !dbg !3739
}

; Function Attrs: noinline nounwind uwtable
define internal void @leave_dir(%struct.FTS*, %struct._ftsent*) #3 !dbg !3740 {
  %3 = alloca %struct.FTS*, align 8
  %4 = alloca %struct._ftsent*, align 8
  %5 = alloca %struct.stat*, align 8
  %6 = alloca %struct.Active_dir, align 8
  %7 = alloca i8*, align 8
  %8 = alloca %struct._ftsent*, align 8
  store %struct.FTS* %0, %struct.FTS** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.FTS** %3, metadata !3743, metadata !DIExpression()), !dbg !3744
  store %struct._ftsent* %1, %struct._ftsent** %4, align 8
  call void @llvm.dbg.declare(metadata %struct._ftsent** %4, metadata !3745, metadata !DIExpression()), !dbg !3746
  call void @llvm.dbg.declare(metadata %struct.stat** %5, metadata !3747, metadata !DIExpression()), !dbg !3750
  %9 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !3751
  %10 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %9, i32 0, i32 17, !dbg !3752
  %11 = getelementptr inbounds [1 x %struct.stat], [1 x %struct.stat]* %10, i32 0, i32 0, !dbg !3751
  store %struct.stat* %11, %struct.stat** %5, align 8, !dbg !3750
  %12 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !3753
  %13 = getelementptr inbounds %struct.FTS, %struct.FTS* %12, i32 0, i32 10, !dbg !3755
  %14 = load i32, i32* %13, align 8, !dbg !3755
  %15 = and i32 %14, 258, !dbg !3756
  %16 = icmp ne i32 %15, 0, !dbg !3756
  br i1 %16, label %17, label %37, !dbg !3757

; <label>:17:                                     ; preds = %2
  call void @llvm.dbg.declare(metadata %struct.Active_dir* %6, metadata !3758, metadata !DIExpression()), !dbg !3760
  call void @llvm.dbg.declare(metadata i8** %7, metadata !3761, metadata !DIExpression()), !dbg !3762
  %18 = load %struct.stat*, %struct.stat** %5, align 8, !dbg !3763
  %19 = getelementptr inbounds %struct.stat, %struct.stat* %18, i32 0, i32 0, !dbg !3764
  %20 = load i64, i64* %19, align 8, !dbg !3764
  %21 = getelementptr inbounds %struct.Active_dir, %struct.Active_dir* %6, i32 0, i32 0, !dbg !3765
  store i64 %20, i64* %21, align 8, !dbg !3766
  %22 = load %struct.stat*, %struct.stat** %5, align 8, !dbg !3767
  %23 = getelementptr inbounds %struct.stat, %struct.stat* %22, i32 0, i32 1, !dbg !3768
  %24 = load i64, i64* %23, align 8, !dbg !3768
  %25 = getelementptr inbounds %struct.Active_dir, %struct.Active_dir* %6, i32 0, i32 1, !dbg !3769
  store i64 %24, i64* %25, align 8, !dbg !3770
  %26 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !3771
  %27 = getelementptr inbounds %struct.FTS, %struct.FTS* %26, i32 0, i32 12, !dbg !3772
  %28 = bitcast %union.anon* %27 to %struct.hash_table**, !dbg !3773
  %29 = load %struct.hash_table*, %struct.hash_table** %28, align 8, !dbg !3773
  %30 = bitcast %struct.Active_dir* %6 to i8*, !dbg !3774
  %31 = call i8* @hash_delete(%struct.hash_table* %29, i8* %30), !dbg !3775
  store i8* %31, i8** %7, align 8, !dbg !3776
  %32 = load i8*, i8** %7, align 8, !dbg !3777
  %33 = icmp ne i8* %32, null, !dbg !3777
  br i1 %33, label %35, label %34, !dbg !3779

; <label>:34:                                     ; preds = %17
  call void @abort() #11, !dbg !3780
  unreachable, !dbg !3780

; <label>:35:                                     ; preds = %17
  %36 = load i8*, i8** %7, align 8, !dbg !3781
  call void @free(i8* %36) #8, !dbg !3782
  br label %108, !dbg !3783

; <label>:37:                                     ; preds = %2
  call void @llvm.dbg.declare(metadata %struct._ftsent** %8, metadata !3784, metadata !DIExpression()), !dbg !3786
  %38 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !3787
  %39 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %38, i32 0, i32 1, !dbg !3788
  %40 = load %struct._ftsent*, %struct._ftsent** %39, align 8, !dbg !3788
  store %struct._ftsent* %40, %struct._ftsent** %8, align 8, !dbg !3786
  %41 = load %struct._ftsent*, %struct._ftsent** %8, align 8, !dbg !3789
  %42 = icmp ne %struct._ftsent* %41, null, !dbg !3791
  br i1 %42, label %43, label %107, !dbg !3792

; <label>:43:                                     ; preds = %37
  %44 = load %struct._ftsent*, %struct._ftsent** %8, align 8, !dbg !3793
  %45 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %44, i32 0, i32 11, !dbg !3794
  %46 = load i64, i64* %45, align 8, !dbg !3794
  %47 = icmp sle i64 0, %46, !dbg !3795
  br i1 %47, label %48, label %107, !dbg !3796

; <label>:48:                                     ; preds = %43
  br label %49, !dbg !3797, !llvm.loop !3798

; <label>:49:                                     ; preds = %48
  %50 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !3799
  %51 = getelementptr inbounds %struct.FTS, %struct.FTS* %50, i32 0, i32 12, !dbg !3799
  %52 = bitcast %union.anon* %51 to %struct.cycle_check_state**, !dbg !3799
  %53 = load %struct.cycle_check_state*, %struct.cycle_check_state** %52, align 8, !dbg !3799
  %54 = getelementptr inbounds %struct.cycle_check_state, %struct.cycle_check_state* %53, i32 0, i32 1, !dbg !3799
  %55 = load i64, i64* %54, align 8, !dbg !3799
  %56 = icmp eq i64 %55, 0, !dbg !3799
  br i1 %56, label %57, label %58, !dbg !3802

; <label>:57:                                     ; preds = %49
  call void @abort() #11, !dbg !3799
  unreachable, !dbg !3799

; <label>:58:                                     ; preds = %49
  %59 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !3803
  %60 = getelementptr inbounds %struct.FTS, %struct.FTS* %59, i32 0, i32 12, !dbg !3803
  %61 = bitcast %union.anon* %60 to %struct.cycle_check_state**, !dbg !3803
  %62 = load %struct.cycle_check_state*, %struct.cycle_check_state** %61, align 8, !dbg !3803
  %63 = getelementptr inbounds %struct.cycle_check_state, %struct.cycle_check_state* %62, i32 0, i32 0, !dbg !3803
  %64 = getelementptr inbounds %struct.dev_ino, %struct.dev_ino* %63, i32 0, i32 0, !dbg !3803
  %65 = load i64, i64* %64, align 8, !dbg !3803
  %66 = load %struct.stat*, %struct.stat** %5, align 8, !dbg !3803
  %67 = getelementptr inbounds %struct.stat, %struct.stat* %66, i32 0, i32 1, !dbg !3803
  %68 = load i64, i64* %67, align 8, !dbg !3803
  %69 = icmp eq i64 %65, %68, !dbg !3803
  br i1 %69, label %70, label %105, !dbg !3803

; <label>:70:                                     ; preds = %58
  %71 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !3803
  %72 = getelementptr inbounds %struct.FTS, %struct.FTS* %71, i32 0, i32 12, !dbg !3803
  %73 = bitcast %union.anon* %72 to %struct.cycle_check_state**, !dbg !3803
  %74 = load %struct.cycle_check_state*, %struct.cycle_check_state** %73, align 8, !dbg !3803
  %75 = getelementptr inbounds %struct.cycle_check_state, %struct.cycle_check_state* %74, i32 0, i32 0, !dbg !3803
  %76 = getelementptr inbounds %struct.dev_ino, %struct.dev_ino* %75, i32 0, i32 1, !dbg !3803
  %77 = load i64, i64* %76, align 8, !dbg !3803
  %78 = load %struct.stat*, %struct.stat** %5, align 8, !dbg !3803
  %79 = getelementptr inbounds %struct.stat, %struct.stat* %78, i32 0, i32 0, !dbg !3803
  %80 = load i64, i64* %79, align 8, !dbg !3803
  %81 = icmp eq i64 %77, %80, !dbg !3803
  br i1 %81, label %82, label %105, !dbg !3802

; <label>:82:                                     ; preds = %70
  %83 = load %struct._ftsent*, %struct._ftsent** %8, align 8, !dbg !3805
  %84 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %83, i32 0, i32 17, !dbg !3805
  %85 = getelementptr inbounds [1 x %struct.stat], [1 x %struct.stat]* %84, i32 0, i32 0, !dbg !3805
  %86 = getelementptr inbounds %struct.stat, %struct.stat* %85, i32 0, i32 0, !dbg !3805
  %87 = load i64, i64* %86, align 8, !dbg !3805
  %88 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !3805
  %89 = getelementptr inbounds %struct.FTS, %struct.FTS* %88, i32 0, i32 12, !dbg !3805
  %90 = bitcast %union.anon* %89 to %struct.cycle_check_state**, !dbg !3805
  %91 = load %struct.cycle_check_state*, %struct.cycle_check_state** %90, align 8, !dbg !3805
  %92 = getelementptr inbounds %struct.cycle_check_state, %struct.cycle_check_state* %91, i32 0, i32 0, !dbg !3805
  %93 = getelementptr inbounds %struct.dev_ino, %struct.dev_ino* %92, i32 0, i32 1, !dbg !3805
  store i64 %87, i64* %93, align 8, !dbg !3805
  %94 = load %struct._ftsent*, %struct._ftsent** %8, align 8, !dbg !3805
  %95 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %94, i32 0, i32 17, !dbg !3805
  %96 = getelementptr inbounds [1 x %struct.stat], [1 x %struct.stat]* %95, i32 0, i32 0, !dbg !3805
  %97 = getelementptr inbounds %struct.stat, %struct.stat* %96, i32 0, i32 1, !dbg !3805
  %98 = load i64, i64* %97, align 8, !dbg !3805
  %99 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !3805
  %100 = getelementptr inbounds %struct.FTS, %struct.FTS* %99, i32 0, i32 12, !dbg !3805
  %101 = bitcast %union.anon* %100 to %struct.cycle_check_state**, !dbg !3805
  %102 = load %struct.cycle_check_state*, %struct.cycle_check_state** %101, align 8, !dbg !3805
  %103 = getelementptr inbounds %struct.cycle_check_state, %struct.cycle_check_state* %102, i32 0, i32 0, !dbg !3805
  %104 = getelementptr inbounds %struct.dev_ino, %struct.dev_ino* %103, i32 0, i32 0, !dbg !3805
  store i64 %98, i64* %104, align 8, !dbg !3805
  br label %105, !dbg !3805

; <label>:105:                                    ; preds = %82, %70, %58
  br label %106, !dbg !3802

; <label>:106:                                    ; preds = %105
  br label %107, !dbg !3802

; <label>:107:                                    ; preds = %106, %43, %37
  br label %108

; <label>:108:                                    ; preds = %107, %35
  ret void, !dbg !3807
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @fts_safe_changedir(%struct.FTS*, %struct._ftsent*, i32, i8*) #3 !dbg !3808 {
  %5 = alloca i32, align 4
  %6 = alloca %struct.FTS*, align 8
  %7 = alloca %struct._ftsent*, align 8
  %8 = alloca i32, align 4
  %9 = alloca i8*, align 8
  %10 = alloca i32, align 4
  %11 = alloca i8, align 1
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca %struct.stat, align 8
  %15 = alloca i32, align 4
  store %struct.FTS* %0, %struct.FTS** %6, align 8
  call void @llvm.dbg.declare(metadata %struct.FTS** %6, metadata !3811, metadata !DIExpression()), !dbg !3812
  store %struct._ftsent* %1, %struct._ftsent** %7, align 8
  call void @llvm.dbg.declare(metadata %struct._ftsent** %7, metadata !3813, metadata !DIExpression()), !dbg !3814
  store i32 %2, i32* %8, align 4
  call void @llvm.dbg.declare(metadata i32* %8, metadata !3815, metadata !DIExpression()), !dbg !3816
  store i8* %3, i8** %9, align 8
  call void @llvm.dbg.declare(metadata i8** %9, metadata !3817, metadata !DIExpression()), !dbg !3818
  call void @llvm.dbg.declare(metadata i32* %10, metadata !3819, metadata !DIExpression()), !dbg !3820
  call void @llvm.dbg.declare(metadata i8* %11, metadata !3821, metadata !DIExpression()), !dbg !3822
  %16 = load i8*, i8** %9, align 8, !dbg !3823
  %17 = icmp ne i8* %16, null, !dbg !3823
  br i1 %17, label %18, label %22, !dbg !3824

; <label>:18:                                     ; preds = %4
  %19 = load i8*, i8** %9, align 8, !dbg !3825
  %20 = call i32 @strcmp(i8* %19, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2.118, i32 0, i32 0)) #12, !dbg !3825
  %21 = icmp eq i32 %20, 0, !dbg !3825
  br label %22

; <label>:22:                                     ; preds = %18, %4
  %23 = phi i1 [ false, %4 ], [ %21, %18 ]
  %24 = zext i1 %23 to i8, !dbg !3822
  store i8 %24, i8* %11, align 1, !dbg !3822
  call void @llvm.dbg.declare(metadata i32* %12, metadata !3826, metadata !DIExpression()), !dbg !3827
  %25 = load %struct.FTS*, %struct.FTS** %6, align 8, !dbg !3828
  %26 = getelementptr inbounds %struct.FTS, %struct.FTS* %25, i32 0, i32 10, !dbg !3828
  %27 = load i32, i32* %26, align 8, !dbg !3828
  %28 = and i32 %27, 4, !dbg !3828
  %29 = icmp ne i32 %28, 0, !dbg !3828
  br i1 %29, label %30, label %43, !dbg !3830

; <label>:30:                                     ; preds = %22
  %31 = load %struct.FTS*, %struct.FTS** %6, align 8, !dbg !3831
  %32 = getelementptr inbounds %struct.FTS, %struct.FTS* %31, i32 0, i32 10, !dbg !3831
  %33 = load i32, i32* %32, align 8, !dbg !3831
  %34 = and i32 %33, 512, !dbg !3831
  %35 = icmp ne i32 %34, 0, !dbg !3831
  br i1 %35, label %36, label %42, !dbg !3834

; <label>:36:                                     ; preds = %30
  %37 = load i32, i32* %8, align 4, !dbg !3835
  %38 = icmp sle i32 0, %37, !dbg !3836
  br i1 %38, label %39, label %42, !dbg !3837

; <label>:39:                                     ; preds = %36
  %40 = load i32, i32* %8, align 4, !dbg !3838
  %41 = call i32 @close(i32 %40), !dbg !3839
  br label %42, !dbg !3839

; <label>:42:                                     ; preds = %39, %36, %30
  store i32 0, i32* %5, align 4, !dbg !3840
  br label %145, !dbg !3840

; <label>:43:                                     ; preds = %22
  %44 = load i32, i32* %8, align 4, !dbg !3841
  %45 = icmp slt i32 %44, 0, !dbg !3843
  br i1 %45, label %46, label %69, !dbg !3844

; <label>:46:                                     ; preds = %43
  %47 = load i8, i8* %11, align 1, !dbg !3845
  %48 = trunc i8 %47 to i1, !dbg !3845
  br i1 %48, label %49, label %69, !dbg !3846

; <label>:49:                                     ; preds = %46
  %50 = load %struct.FTS*, %struct.FTS** %6, align 8, !dbg !3847
  %51 = getelementptr inbounds %struct.FTS, %struct.FTS* %50, i32 0, i32 10, !dbg !3847
  %52 = load i32, i32* %51, align 8, !dbg !3847
  %53 = and i32 %52, 512, !dbg !3847
  %54 = icmp ne i32 %53, 0, !dbg !3847
  br i1 %54, label %55, label %69, !dbg !3848

; <label>:55:                                     ; preds = %49
  %56 = load %struct.FTS*, %struct.FTS** %6, align 8, !dbg !3849
  %57 = getelementptr inbounds %struct.FTS, %struct.FTS* %56, i32 0, i32 13, !dbg !3852
  %58 = call zeroext i1 @i_ring_empty(%struct.I_ring* %57), !dbg !3853
  br i1 %58, label %68, label %59, !dbg !3854

; <label>:59:                                     ; preds = %55
  call void @llvm.dbg.declare(metadata i32* %13, metadata !3855, metadata !DIExpression()), !dbg !3857
  %60 = load %struct.FTS*, %struct.FTS** %6, align 8, !dbg !3858
  %61 = getelementptr inbounds %struct.FTS, %struct.FTS* %60, i32 0, i32 13, !dbg !3859
  %62 = call i32 @i_ring_pop(%struct.I_ring* %61), !dbg !3860
  store i32 %62, i32* %13, align 4, !dbg !3861
  store i8 1, i8* %11, align 1, !dbg !3862
  %63 = load i32, i32* %13, align 4, !dbg !3863
  %64 = icmp sle i32 0, %63, !dbg !3865
  br i1 %64, label %65, label %67, !dbg !3866

; <label>:65:                                     ; preds = %59
  %66 = load i32, i32* %13, align 4, !dbg !3867
  store i32 %66, i32* %8, align 4, !dbg !3869
  store i8* null, i8** %9, align 8, !dbg !3870
  br label %67, !dbg !3871

; <label>:67:                                     ; preds = %65, %59
  br label %68, !dbg !3872

; <label>:68:                                     ; preds = %67, %55
  br label %69, !dbg !3873

; <label>:69:                                     ; preds = %68, %49, %46, %43
  %70 = load i32, i32* %8, align 4, !dbg !3874
  store i32 %70, i32* %12, align 4, !dbg !3875
  %71 = load i32, i32* %8, align 4, !dbg !3876
  %72 = icmp slt i32 %71, 0, !dbg !3878
  br i1 %72, label %73, label %79, !dbg !3879

; <label>:73:                                     ; preds = %69
  %74 = load %struct.FTS*, %struct.FTS** %6, align 8, !dbg !3880
  %75 = load i8*, i8** %9, align 8, !dbg !3881
  %76 = call i32 @diropen(%struct.FTS* %74, i8* %75), !dbg !3882
  store i32 %76, i32* %12, align 4, !dbg !3883
  %77 = icmp slt i32 %76, 0, !dbg !3884
  br i1 %77, label %78, label %79, !dbg !3885

; <label>:78:                                     ; preds = %73
  store i32 -1, i32* %5, align 4, !dbg !3886
  br label %145, !dbg !3886

; <label>:79:                                     ; preds = %73, %69
  %80 = load %struct.FTS*, %struct.FTS** %6, align 8, !dbg !3887
  %81 = getelementptr inbounds %struct.FTS, %struct.FTS* %80, i32 0, i32 10, !dbg !3887
  %82 = load i32, i32* %81, align 8, !dbg !3887
  %83 = and i32 %82, 2, !dbg !3887
  %84 = icmp ne i32 %83, 0, !dbg !3887
  br i1 %84, label %92, label %85, !dbg !3889

; <label>:85:                                     ; preds = %79
  %86 = load i8*, i8** %9, align 8, !dbg !3890
  %87 = icmp ne i8* %86, null, !dbg !3890
  br i1 %87, label %88, label %118, !dbg !3891

; <label>:88:                                     ; preds = %85
  %89 = load i8*, i8** %9, align 8, !dbg !3892
  %90 = call i32 @strcmp(i8* %89, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2.118, i32 0, i32 0)) #12, !dbg !3892
  %91 = icmp eq i32 %90, 0, !dbg !3892
  br i1 %91, label %92, label %118, !dbg !3893

; <label>:92:                                     ; preds = %88, %79
  call void @llvm.dbg.declare(metadata %struct.stat* %14, metadata !3894, metadata !DIExpression()), !dbg !3896
  %93 = load i32, i32* %12, align 4, !dbg !3897
  %94 = call i32 @fstat(i32 %93, %struct.stat* %14) #8, !dbg !3899
  %95 = icmp ne i32 %94, 0, !dbg !3899
  br i1 %95, label %96, label %97, !dbg !3900

; <label>:96:                                     ; preds = %92
  store i32 -1, i32* %10, align 4, !dbg !3901
  br label %133, !dbg !3903

; <label>:97:                                     ; preds = %92
  %98 = load %struct._ftsent*, %struct._ftsent** %7, align 8, !dbg !3904
  %99 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %98, i32 0, i32 17, !dbg !3906
  %100 = getelementptr inbounds [1 x %struct.stat], [1 x %struct.stat]* %99, i32 0, i32 0, !dbg !3907
  %101 = getelementptr inbounds %struct.stat, %struct.stat* %100, i32 0, i32 0, !dbg !3907
  %102 = load i64, i64* %101, align 8, !dbg !3907
  %103 = getelementptr inbounds %struct.stat, %struct.stat* %14, i32 0, i32 0, !dbg !3908
  %104 = load i64, i64* %103, align 8, !dbg !3908
  %105 = icmp ne i64 %102, %104, !dbg !3909
  br i1 %105, label %115, label %106, !dbg !3910

; <label>:106:                                    ; preds = %97
  %107 = load %struct._ftsent*, %struct._ftsent** %7, align 8, !dbg !3911
  %108 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %107, i32 0, i32 17, !dbg !3912
  %109 = getelementptr inbounds [1 x %struct.stat], [1 x %struct.stat]* %108, i32 0, i32 0, !dbg !3913
  %110 = getelementptr inbounds %struct.stat, %struct.stat* %109, i32 0, i32 1, !dbg !3913
  %111 = load i64, i64* %110, align 8, !dbg !3913
  %112 = getelementptr inbounds %struct.stat, %struct.stat* %14, i32 0, i32 1, !dbg !3914
  %113 = load i64, i64* %112, align 8, !dbg !3914
  %114 = icmp ne i64 %111, %113, !dbg !3915
  br i1 %114, label %115, label %117, !dbg !3916

; <label>:115:                                    ; preds = %106, %97
  %116 = call i32* @__errno_location() #14, !dbg !3917
  store i32 2, i32* %116, align 4, !dbg !3917
  store i32 -1, i32* %10, align 4, !dbg !3919
  br label %133, !dbg !3920

; <label>:117:                                    ; preds = %106
  br label %118, !dbg !3921

; <label>:118:                                    ; preds = %117, %88, %85
  %119 = load %struct.FTS*, %struct.FTS** %6, align 8, !dbg !3922
  %120 = getelementptr inbounds %struct.FTS, %struct.FTS* %119, i32 0, i32 10, !dbg !3922
  %121 = load i32, i32* %120, align 8, !dbg !3922
  %122 = and i32 %121, 512, !dbg !3922
  %123 = icmp ne i32 %122, 0, !dbg !3922
  br i1 %123, label %124, label %130, !dbg !3924

; <label>:124:                                    ; preds = %118
  %125 = load %struct.FTS*, %struct.FTS** %6, align 8, !dbg !3925
  %126 = load i32, i32* %12, align 4, !dbg !3927
  %127 = load i8, i8* %11, align 1, !dbg !3928
  %128 = trunc i8 %127 to i1, !dbg !3928
  %129 = xor i1 %128, true, !dbg !3929
  call void @cwd_advance_fd(%struct.FTS* %125, i32 %126, i1 zeroext %129), !dbg !3930
  store i32 0, i32* %5, align 4, !dbg !3931
  br label %145, !dbg !3931

; <label>:130:                                    ; preds = %118
  %131 = load i32, i32* %12, align 4, !dbg !3932
  %132 = call i32 @fchdir(i32 %131) #8, !dbg !3933
  store i32 %132, i32* %10, align 4, !dbg !3934
  br label %133, !dbg !3935

; <label>:133:                                    ; preds = %130, %115, %96
  %134 = load i32, i32* %8, align 4, !dbg !3936
  %135 = icmp slt i32 %134, 0, !dbg !3938
  br i1 %135, label %136, label %143, !dbg !3939

; <label>:136:                                    ; preds = %133
  call void @llvm.dbg.declare(metadata i32* %15, metadata !3940, metadata !DIExpression()), !dbg !3942
  %137 = call i32* @__errno_location() #14, !dbg !3943
  %138 = load i32, i32* %137, align 4, !dbg !3943
  store i32 %138, i32* %15, align 4, !dbg !3942
  %139 = load i32, i32* %12, align 4, !dbg !3944
  %140 = call i32 @close(i32 %139), !dbg !3945
  %141 = load i32, i32* %15, align 4, !dbg !3946
  %142 = call i32* @__errno_location() #14, !dbg !3946
  store i32 %141, i32* %142, align 4, !dbg !3946
  br label %143, !dbg !3947

; <label>:143:                                    ; preds = %136, %133
  %144 = load i32, i32* %10, align 4, !dbg !3948
  store i32 %144, i32* %5, align 4, !dbg !3949
  br label %145, !dbg !3949

; <label>:145:                                    ; preds = %143, %124, %78, %42
  %146 = load i32, i32* %5, align 4, !dbg !3950
  ret i32 %146, !dbg !3950
}

; Function Attrs: noinline nounwind uwtable
define internal %struct._ftsent* @fts_build(%struct.FTS*, i32) #3 !dbg !3951 {
  %3 = alloca %struct._ftsent*, align 8
  %4 = alloca %struct.FTS*, align 8
  %5 = alloca i32, align 4
  %6 = alloca %struct.dirent*, align 8
  %7 = alloca %struct._ftsent*, align 8
  %8 = alloca %struct._ftsent*, align 8
  %9 = alloca i64, align 8
  %10 = alloca %struct._ftsent*, align 8
  %11 = alloca %struct._ftsent*, align 8
  %12 = alloca %struct.__dirstream*, align 8
  %13 = alloca i8*, align 8
  %14 = alloca i32, align 4
  %15 = alloca i8, align 1
  %16 = alloca i8, align 1
  %17 = alloca i64, align 8
  %18 = alloca i64, align 8
  %19 = alloca i8, align 1
  %20 = alloca i64, align 8
  %21 = alloca i64, align 8
  %22 = alloca i64, align 8
  %23 = alloca i8*, align 8
  %24 = alloca i32, align 4
  %25 = alloca i8, align 1
  %26 = alloca i8, align 1
  store %struct.FTS* %0, %struct.FTS** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.FTS** %4, metadata !3954, metadata !DIExpression()), !dbg !3955
  store i32 %1, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !3956, metadata !DIExpression()), !dbg !3957
  call void @llvm.dbg.declare(metadata %struct.dirent** %6, metadata !3958, metadata !DIExpression()), !dbg !3969
  call void @llvm.dbg.declare(metadata %struct._ftsent** %7, metadata !3970, metadata !DIExpression()), !dbg !3971
  call void @llvm.dbg.declare(metadata %struct._ftsent** %8, metadata !3972, metadata !DIExpression()), !dbg !3973
  call void @llvm.dbg.declare(metadata i64* %9, metadata !3974, metadata !DIExpression()), !dbg !3975
  call void @llvm.dbg.declare(metadata %struct._ftsent** %10, metadata !3976, metadata !DIExpression()), !dbg !3977
  call void @llvm.dbg.declare(metadata %struct._ftsent** %11, metadata !3978, metadata !DIExpression()), !dbg !3979
  call void @llvm.dbg.declare(metadata %struct.__dirstream** %12, metadata !3980, metadata !DIExpression()), !dbg !3984
  call void @llvm.dbg.declare(metadata i8** %13, metadata !3985, metadata !DIExpression()), !dbg !3986
  call void @llvm.dbg.declare(metadata i32* %14, metadata !3987, metadata !DIExpression()), !dbg !3988
  call void @llvm.dbg.declare(metadata i8* %15, metadata !3989, metadata !DIExpression()), !dbg !3990
  call void @llvm.dbg.declare(metadata i8* %16, metadata !3991, metadata !DIExpression()), !dbg !3992
  call void @llvm.dbg.declare(metadata i64* %17, metadata !3993, metadata !DIExpression()), !dbg !3994
  call void @llvm.dbg.declare(metadata i64* %18, metadata !3995, metadata !DIExpression()), !dbg !3996
  call void @llvm.dbg.declare(metadata i8* %19, metadata !3997, metadata !DIExpression()), !dbg !3998
  call void @llvm.dbg.declare(metadata i64* %20, metadata !3999, metadata !DIExpression()), !dbg !4000
  call void @llvm.dbg.declare(metadata i64* %21, metadata !4001, metadata !DIExpression()), !dbg !4002
  call void @llvm.dbg.declare(metadata i64* %22, metadata !4003, metadata !DIExpression()), !dbg !4004
  call void @llvm.dbg.declare(metadata i8** %23, metadata !4005, metadata !DIExpression()), !dbg !4006
  %27 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !4007
  %28 = getelementptr inbounds %struct.FTS, %struct.FTS* %27, i32 0, i32 0, !dbg !4008
  %29 = load %struct._ftsent*, %struct._ftsent** %28, align 8, !dbg !4008
  store %struct._ftsent* %29, %struct._ftsent** %10, align 8, !dbg !4009
  %30 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !4010
  %31 = getelementptr inbounds %struct.FTS, %struct.FTS* %30, i32 0, i32 10, !dbg !4010
  %32 = load i32, i32* %31, align 8, !dbg !4010
  %33 = and i32 %32, 4, !dbg !4010
  %34 = icmp ne i32 %33, 0, !dbg !4010
  br i1 %34, label %49, label %35, !dbg !4010

; <label>:35:                                     ; preds = %2
  %36 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !4010
  %37 = getelementptr inbounds %struct.FTS, %struct.FTS* %36, i32 0, i32 10, !dbg !4010
  %38 = load i32, i32* %37, align 8, !dbg !4010
  %39 = and i32 %38, 512, !dbg !4010
  %40 = icmp ne i32 %39, 0, !dbg !4010
  br i1 %40, label %41, label %49, !dbg !4010

; <label>:41:                                     ; preds = %35
  %42 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !4010
  %43 = getelementptr inbounds %struct.FTS, %struct.FTS* %42, i32 0, i32 6, !dbg !4010
  %44 = load i32, i32* %43, align 4, !dbg !4010
  %45 = load %struct._ftsent*, %struct._ftsent** %10, align 8, !dbg !4010
  %46 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %45, i32 0, i32 5, !dbg !4010
  %47 = load i8*, i8** %46, align 8, !dbg !4010
  %48 = call %struct.__dirstream* @opendirat(i32 %44, i8* %47), !dbg !4010
  br label %54, !dbg !4010

; <label>:49:                                     ; preds = %35, %2
  %50 = load %struct._ftsent*, %struct._ftsent** %10, align 8, !dbg !4010
  %51 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %50, i32 0, i32 5, !dbg !4010
  %52 = load i8*, i8** %51, align 8, !dbg !4010
  %53 = call %struct.__dirstream* @opendir_safer(i8* %52), !dbg !4010
  br label %54, !dbg !4010

; <label>:54:                                     ; preds = %49, %41
  %55 = phi %struct.__dirstream* [ %48, %41 ], [ %53, %49 ], !dbg !4010
  store %struct.__dirstream* %55, %struct.__dirstream** %12, align 8, !dbg !4012
  %56 = icmp eq %struct.__dirstream* %55, null, !dbg !4013
  br i1 %56, label %57, label %68, !dbg !4014

; <label>:57:                                     ; preds = %54
  %58 = load i32, i32* %5, align 4, !dbg !4015
  %59 = icmp eq i32 %58, 3, !dbg !4018
  br i1 %59, label %60, label %67, !dbg !4019

; <label>:60:                                     ; preds = %57
  %61 = load %struct._ftsent*, %struct._ftsent** %10, align 8, !dbg !4020
  %62 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %61, i32 0, i32 14, !dbg !4022
  store i16 4, i16* %62, align 8, !dbg !4023
  %63 = call i32* @__errno_location() #14, !dbg !4024
  %64 = load i32, i32* %63, align 4, !dbg !4024
  %65 = load %struct._ftsent*, %struct._ftsent** %10, align 8, !dbg !4025
  %66 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %65, i32 0, i32 7, !dbg !4026
  store i32 %64, i32* %66, align 8, !dbg !4027
  br label %67, !dbg !4028

; <label>:67:                                     ; preds = %60, %57
  store %struct._ftsent* null, %struct._ftsent** %3, align 8, !dbg !4029
  br label %713, !dbg !4029

; <label>:68:                                     ; preds = %54
  %69 = load %struct._ftsent*, %struct._ftsent** %10, align 8, !dbg !4030
  %70 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %69, i32 0, i32 14, !dbg !4032
  %71 = load i16, i16* %70, align 8, !dbg !4032
  %72 = zext i16 %71 to i32, !dbg !4030
  %73 = icmp eq i32 %72, 11, !dbg !4033
  br i1 %73, label %74, label %80, !dbg !4034

; <label>:74:                                     ; preds = %68
  %75 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !4035
  %76 = load %struct._ftsent*, %struct._ftsent** %10, align 8, !dbg !4036
  %77 = call zeroext i16 @fts_stat(%struct.FTS* %75, %struct._ftsent* %76, i1 zeroext false), !dbg !4037
  %78 = load %struct._ftsent*, %struct._ftsent** %10, align 8, !dbg !4038
  %79 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %78, i32 0, i32 14, !dbg !4039
  store i16 %77, i16* %79, align 8, !dbg !4040
  br label %101, !dbg !4038

; <label>:80:                                     ; preds = %68
  %81 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !4041
  %82 = getelementptr inbounds %struct.FTS, %struct.FTS* %81, i32 0, i32 10, !dbg !4043
  %83 = load i32, i32* %82, align 8, !dbg !4043
  %84 = and i32 %83, 256, !dbg !4044
  %85 = icmp ne i32 %84, 0, !dbg !4044
  br i1 %85, label %86, label %100, !dbg !4045

; <label>:86:                                     ; preds = %80
  br label %87, !dbg !4046, !llvm.loop !4048

; <label>:87:                                     ; preds = %86
  %88 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !4049
  %89 = load %struct._ftsent*, %struct._ftsent** %10, align 8, !dbg !4049
  call void @leave_dir(%struct.FTS* %88, %struct._ftsent* %89), !dbg !4049
  br label %90, !dbg !4049

; <label>:90:                                     ; preds = %87
  %91 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !4051
  %92 = load %struct._ftsent*, %struct._ftsent** %10, align 8, !dbg !4052
  %93 = call zeroext i16 @fts_stat(%struct.FTS* %91, %struct._ftsent* %92, i1 zeroext false), !dbg !4053
  %94 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !4054
  %95 = load %struct._ftsent*, %struct._ftsent** %10, align 8, !dbg !4056
  %96 = call zeroext i1 @enter_dir(%struct.FTS* %94, %struct._ftsent* %95), !dbg !4057
  br i1 %96, label %99, label %97, !dbg !4058

; <label>:97:                                     ; preds = %90
  %98 = call i32* @__errno_location() #14, !dbg !4059
  store i32 12, i32* %98, align 4, !dbg !4059
  store %struct._ftsent* null, %struct._ftsent** %3, align 8, !dbg !4061
  br label %713, !dbg !4061

; <label>:99:                                     ; preds = %90
  br label %100, !dbg !4062

; <label>:100:                                    ; preds = %99, %80
  br label %101

; <label>:101:                                    ; preds = %100, %74
  %102 = load i32, i32* %5, align 4, !dbg !4063
  %103 = icmp eq i32 %102, 2, !dbg !4065
  br i1 %103, label %104, label %105, !dbg !4066

; <label>:104:                                    ; preds = %101
  store i64 0, i64* %18, align 8, !dbg !4067
  store i8 0, i8* %19, align 1, !dbg !4069
  br label %134, !dbg !4070

; <label>:105:                                    ; preds = %101
  %106 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !4071
  %107 = getelementptr inbounds %struct.FTS, %struct.FTS* %106, i32 0, i32 10, !dbg !4071
  %108 = load i32, i32* %107, align 8, !dbg !4071
  %109 = and i32 %108, 8, !dbg !4071
  %110 = icmp ne i32 %109, 0, !dbg !4071
  br i1 %110, label %111, label %132, !dbg !4073

; <label>:111:                                    ; preds = %105
  %112 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !4074
  %113 = getelementptr inbounds %struct.FTS, %struct.FTS* %112, i32 0, i32 10, !dbg !4074
  %114 = load i32, i32* %113, align 8, !dbg !4074
  %115 = and i32 %114, 16, !dbg !4074
  %116 = icmp ne i32 %115, 0, !dbg !4074
  br i1 %116, label %117, label %132, !dbg !4075

; <label>:117:                                    ; preds = %111
  %118 = load %struct._ftsent*, %struct._ftsent** %10, align 8, !dbg !4076
  %119 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %118, i32 0, i32 17, !dbg !4078
  %120 = getelementptr inbounds [1 x %struct.stat], [1 x %struct.stat]* %119, i32 0, i32 0, !dbg !4079
  %121 = getelementptr inbounds %struct.stat, %struct.stat* %120, i32 0, i32 2, !dbg !4079
  %122 = load i64, i64* %121, align 8, !dbg !4079
  %123 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !4080
  %124 = getelementptr inbounds %struct.FTS, %struct.FTS* %123, i32 0, i32 10, !dbg !4080
  %125 = load i32, i32* %124, align 8, !dbg !4080
  %126 = and i32 %125, 32, !dbg !4080
  %127 = icmp ne i32 %126, 0, !dbg !4080
  %128 = zext i1 %127 to i64, !dbg !4080
  %129 = select i1 %127, i32 0, i32 2, !dbg !4080
  %130 = sext i32 %129 to i64, !dbg !4081
  %131 = sub i64 %122, %130, !dbg !4082
  store i64 %131, i64* %18, align 8, !dbg !4083
  store i8 1, i8* %19, align 1, !dbg !4084
  br label %133, !dbg !4085

; <label>:132:                                    ; preds = %111, %105
  store i64 -1, i64* %18, align 8, !dbg !4086
  store i8 0, i8* %19, align 1, !dbg !4088
  br label %133

; <label>:133:                                    ; preds = %132, %117
  br label %134

; <label>:134:                                    ; preds = %133, %104
  %135 = load i64, i64* %18, align 8, !dbg !4089
  %136 = icmp ne i64 %135, 0, !dbg !4089
  br i1 %136, label %140, label %137, !dbg !4091

; <label>:137:                                    ; preds = %134
  %138 = load i32, i32* %5, align 4, !dbg !4092
  %139 = icmp eq i32 %138, 3, !dbg !4093
  br i1 %139, label %140, label %199, !dbg !4094

; <label>:140:                                    ; preds = %137, %134
  call void @llvm.dbg.declare(metadata i32* %24, metadata !4095, metadata !DIExpression()), !dbg !4097
  %141 = load %struct.__dirstream*, %struct.__dirstream** %12, align 8, !dbg !4098
  %142 = call i32 @dirfd(%struct.__dirstream* %141) #8, !dbg !4099
  store i32 %142, i32* %24, align 4, !dbg !4097
  %143 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !4100
  %144 = getelementptr inbounds %struct.FTS, %struct.FTS* %143, i32 0, i32 10, !dbg !4100
  %145 = load i32, i32* %144, align 8, !dbg !4100
  %146 = and i32 %145, 512, !dbg !4100
  %147 = icmp ne i32 %146, 0, !dbg !4100
  br i1 %147, label %148, label %156, !dbg !4102

; <label>:148:                                    ; preds = %140
  %149 = load i32, i32* %24, align 4, !dbg !4103
  %150 = icmp sle i32 0, %149, !dbg !4104
  br i1 %150, label %151, label %156, !dbg !4105

; <label>:151:                                    ; preds = %148
  %152 = load i32, i32* %24, align 4, !dbg !4106
  %153 = call i32 @dup_safer(i32 %152), !dbg !4108
  store i32 %153, i32* %24, align 4, !dbg !4109
  %154 = load i32, i32* %24, align 4, !dbg !4110
  %155 = call i32 @set_cloexec_flag(i32 %154, i1 zeroext true), !dbg !4111
  br label %156, !dbg !4112

; <label>:156:                                    ; preds = %151, %148, %140
  %157 = load i32, i32* %24, align 4, !dbg !4113
  %158 = icmp slt i32 %157, 0, !dbg !4115
  br i1 %158, label %165, label %159, !dbg !4116

; <label>:159:                                    ; preds = %156
  %160 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !4117
  %161 = load %struct._ftsent*, %struct._ftsent** %10, align 8, !dbg !4118
  %162 = load i32, i32* %24, align 4, !dbg !4119
  %163 = call i32 @fts_safe_changedir(%struct.FTS* %160, %struct._ftsent* %161, i32 %162, i8* null), !dbg !4120
  %164 = icmp ne i32 %163, 0, !dbg !4120
  br i1 %164, label %165, label %197, !dbg !4121

; <label>:165:                                    ; preds = %159, %156
  %166 = load i64, i64* %18, align 8, !dbg !4122
  %167 = icmp ne i64 %166, 0, !dbg !4122
  br i1 %167, label %168, label %176, !dbg !4125

; <label>:168:                                    ; preds = %165
  %169 = load i32, i32* %5, align 4, !dbg !4126
  %170 = icmp eq i32 %169, 3, !dbg !4127
  br i1 %170, label %171, label %176, !dbg !4128

; <label>:171:                                    ; preds = %168
  %172 = call i32* @__errno_location() #14, !dbg !4129
  %173 = load i32, i32* %172, align 4, !dbg !4129
  %174 = load %struct._ftsent*, %struct._ftsent** %10, align 8, !dbg !4130
  %175 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %174, i32 0, i32 7, !dbg !4131
  store i32 %173, i32* %175, align 8, !dbg !4132
  br label %176, !dbg !4130

; <label>:176:                                    ; preds = %171, %168, %165
  %177 = load %struct._ftsent*, %struct._ftsent** %10, align 8, !dbg !4133
  %178 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %177, i32 0, i32 15, !dbg !4134
  %179 = load i16, i16* %178, align 2, !dbg !4135
  %180 = zext i16 %179 to i32, !dbg !4135
  %181 = or i32 %180, 1, !dbg !4135
  %182 = trunc i32 %181 to i16, !dbg !4135
  store i16 %182, i16* %178, align 2, !dbg !4135
  store i8 0, i8* %15, align 1, !dbg !4136
  %183 = load %struct.__dirstream*, %struct.__dirstream** %12, align 8, !dbg !4137
  %184 = call i32 @closedir(%struct.__dirstream* %183), !dbg !4138
  %185 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !4139
  %186 = getelementptr inbounds %struct.FTS, %struct.FTS* %185, i32 0, i32 10, !dbg !4139
  %187 = load i32, i32* %186, align 8, !dbg !4139
  %188 = and i32 %187, 512, !dbg !4139
  %189 = icmp ne i32 %188, 0, !dbg !4139
  br i1 %189, label %190, label %196, !dbg !4141

; <label>:190:                                    ; preds = %176
  %191 = load i32, i32* %24, align 4, !dbg !4142
  %192 = icmp sle i32 0, %191, !dbg !4143
  br i1 %192, label %193, label %196, !dbg !4144

; <label>:193:                                    ; preds = %190
  %194 = load i32, i32* %24, align 4, !dbg !4145
  %195 = call i32 @close(i32 %194), !dbg !4146
  br label %196, !dbg !4146

; <label>:196:                                    ; preds = %193, %190, %176
  store %struct.__dirstream* null, %struct.__dirstream** %12, align 8, !dbg !4147
  br label %198, !dbg !4148

; <label>:197:                                    ; preds = %159
  store i8 1, i8* %15, align 1, !dbg !4149
  br label %198

; <label>:198:                                    ; preds = %197, %196
  br label %200, !dbg !4150

; <label>:199:                                    ; preds = %137
  store i8 0, i8* %15, align 1, !dbg !4151
  br label %200

; <label>:200:                                    ; preds = %199, %198
  %201 = load %struct._ftsent*, %struct._ftsent** %10, align 8, !dbg !4152
  %202 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %201, i32 0, i32 6, !dbg !4152
  %203 = load i8*, i8** %202, align 8, !dbg !4152
  %204 = load %struct._ftsent*, %struct._ftsent** %10, align 8, !dbg !4152
  %205 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %204, i32 0, i32 9, !dbg !4152
  %206 = load i64, i64* %205, align 8, !dbg !4152
  %207 = sub i64 %206, 1, !dbg !4152
  %208 = getelementptr inbounds i8, i8* %203, i64 %207, !dbg !4152
  %209 = load i8, i8* %208, align 1, !dbg !4152
  %210 = sext i8 %209 to i32, !dbg !4152
  %211 = icmp eq i32 %210, 47, !dbg !4152
  br i1 %211, label %212, label %217, !dbg !4152

; <label>:212:                                    ; preds = %200
  %213 = load %struct._ftsent*, %struct._ftsent** %10, align 8, !dbg !4152
  %214 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %213, i32 0, i32 9, !dbg !4152
  %215 = load i64, i64* %214, align 8, !dbg !4152
  %216 = sub i64 %215, 1, !dbg !4152
  br label %221, !dbg !4152

; <label>:217:                                    ; preds = %200
  %218 = load %struct._ftsent*, %struct._ftsent** %10, align 8, !dbg !4152
  %219 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %218, i32 0, i32 9, !dbg !4152
  %220 = load i64, i64* %219, align 8, !dbg !4152
  br label %221, !dbg !4152

; <label>:221:                                    ; preds = %217, %212
  %222 = phi i64 [ %216, %212 ], [ %220, %217 ], !dbg !4152
  store i64 %222, i64* %20, align 8, !dbg !4153
  %223 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !4154
  %224 = getelementptr inbounds %struct.FTS, %struct.FTS* %223, i32 0, i32 10, !dbg !4154
  %225 = load i32, i32* %224, align 8, !dbg !4154
  %226 = and i32 %225, 4, !dbg !4154
  %227 = icmp ne i32 %226, 0, !dbg !4154
  br i1 %227, label %228, label %236, !dbg !4156

; <label>:228:                                    ; preds = %221
  %229 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !4157
  %230 = getelementptr inbounds %struct.FTS, %struct.FTS* %229, i32 0, i32 4, !dbg !4159
  %231 = load i8*, i8** %230, align 8, !dbg !4159
  %232 = load i64, i64* %20, align 8, !dbg !4160
  %233 = getelementptr inbounds i8, i8* %231, i64 %232, !dbg !4161
  store i8* %233, i8** %23, align 8, !dbg !4162
  %234 = load i8*, i8** %23, align 8, !dbg !4163
  %235 = getelementptr inbounds i8, i8* %234, i32 1, !dbg !4163
  store i8* %235, i8** %23, align 8, !dbg !4163
  store i8 47, i8* %234, align 1, !dbg !4164
  br label %237, !dbg !4165

; <label>:236:                                    ; preds = %221
  store i8* null, i8** %23, align 8, !dbg !4166
  br label %237

; <label>:237:                                    ; preds = %236, %228
  %238 = load i64, i64* %20, align 8, !dbg !4168
  %239 = add i64 %238, 1, !dbg !4168
  store i64 %239, i64* %20, align 8, !dbg !4168
  %240 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !4169
  %241 = getelementptr inbounds %struct.FTS, %struct.FTS* %240, i32 0, i32 7, !dbg !4170
  %242 = load i64, i64* %241, align 8, !dbg !4170
  %243 = load i64, i64* %20, align 8, !dbg !4171
  %244 = sub i64 %242, %243, !dbg !4172
  store i64 %244, i64* %21, align 8, !dbg !4173
  %245 = load %struct._ftsent*, %struct._ftsent** %10, align 8, !dbg !4174
  %246 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %245, i32 0, i32 11, !dbg !4175
  %247 = load i64, i64* %246, align 8, !dbg !4175
  %248 = add nsw i64 %247, 1, !dbg !4176
  store i64 %248, i64* %17, align 8, !dbg !4177
  store i8 0, i8* %16, align 1, !dbg !4178
  store %struct._ftsent* null, %struct._ftsent** %11, align 8, !dbg !4179
  store %struct._ftsent* null, %struct._ftsent** %8, align 8, !dbg !4181
  store i64 0, i64* %9, align 8, !dbg !4182
  br label %249, !dbg !4183

; <label>:249:                                    ; preds = %548, %290, %237
  %250 = load %struct.__dirstream*, %struct.__dirstream** %12, align 8, !dbg !4184
  %251 = icmp ne %struct.__dirstream* %250, null, !dbg !4184
  br i1 %251, label %252, label %256, !dbg !4186

; <label>:252:                                    ; preds = %249
  %253 = load %struct.__dirstream*, %struct.__dirstream** %12, align 8, !dbg !4187
  %254 = call %struct.dirent* @readdir(%struct.__dirstream* %253), !dbg !4188
  store %struct.dirent* %254, %struct.dirent** %6, align 8, !dbg !4189
  %255 = icmp ne %struct.dirent* %254, null, !dbg !4186
  br label %256

; <label>:256:                                    ; preds = %252, %249
  %257 = phi i1 [ false, %249 ], [ %255, %252 ]
  br i1 %257, label %258, label %551, !dbg !4190

; <label>:258:                                    ; preds = %256
  call void @llvm.dbg.declare(metadata i8* %25, metadata !4191, metadata !DIExpression()), !dbg !4193
  %259 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !4194
  %260 = getelementptr inbounds %struct.FTS, %struct.FTS* %259, i32 0, i32 10, !dbg !4194
  %261 = load i32, i32* %260, align 8, !dbg !4194
  %262 = and i32 %261, 32, !dbg !4194
  %263 = icmp ne i32 %262, 0, !dbg !4194
  br i1 %263, label %291, label %264, !dbg !4196

; <label>:264:                                    ; preds = %258
  %265 = load %struct.dirent*, %struct.dirent** %6, align 8, !dbg !4197
  %266 = getelementptr inbounds %struct.dirent, %struct.dirent* %265, i32 0, i32 4, !dbg !4197
  %267 = getelementptr inbounds [256 x i8], [256 x i8]* %266, i64 0, i64 0, !dbg !4197
  %268 = load i8, i8* %267, align 1, !dbg !4197
  %269 = sext i8 %268 to i32, !dbg !4197
  %270 = icmp eq i32 %269, 46, !dbg !4197
  br i1 %270, label %271, label %291, !dbg !4197

; <label>:271:                                    ; preds = %264
  %272 = load %struct.dirent*, %struct.dirent** %6, align 8, !dbg !4197
  %273 = getelementptr inbounds %struct.dirent, %struct.dirent* %272, i32 0, i32 4, !dbg !4197
  %274 = getelementptr inbounds [256 x i8], [256 x i8]* %273, i64 0, i64 1, !dbg !4197
  %275 = load i8, i8* %274, align 1, !dbg !4197
  %276 = icmp ne i8 %275, 0, !dbg !4197
  br i1 %276, label %277, label %290, !dbg !4197

; <label>:277:                                    ; preds = %271
  %278 = load %struct.dirent*, %struct.dirent** %6, align 8, !dbg !4197
  %279 = getelementptr inbounds %struct.dirent, %struct.dirent* %278, i32 0, i32 4, !dbg !4197
  %280 = getelementptr inbounds [256 x i8], [256 x i8]* %279, i64 0, i64 1, !dbg !4197
  %281 = load i8, i8* %280, align 1, !dbg !4197
  %282 = sext i8 %281 to i32, !dbg !4197
  %283 = icmp eq i32 %282, 46, !dbg !4197
  br i1 %283, label %284, label %291, !dbg !4197

; <label>:284:                                    ; preds = %277
  %285 = load %struct.dirent*, %struct.dirent** %6, align 8, !dbg !4197
  %286 = getelementptr inbounds %struct.dirent, %struct.dirent* %285, i32 0, i32 4, !dbg !4197
  %287 = getelementptr inbounds [256 x i8], [256 x i8]* %286, i64 0, i64 2, !dbg !4197
  %288 = load i8, i8* %287, align 1, !dbg !4197
  %289 = icmp ne i8 %288, 0, !dbg !4197
  br i1 %289, label %291, label %290, !dbg !4198

; <label>:290:                                    ; preds = %284, %271
  br label %249, !dbg !4199, !llvm.loop !4200

; <label>:291:                                    ; preds = %284, %277, %264, %258
  %292 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !4202
  %293 = load %struct.dirent*, %struct.dirent** %6, align 8, !dbg !4204
  %294 = getelementptr inbounds %struct.dirent, %struct.dirent* %293, i32 0, i32 4, !dbg !4205
  %295 = getelementptr inbounds [256 x i8], [256 x i8]* %294, i32 0, i32 0, !dbg !4204
  %296 = load %struct.dirent*, %struct.dirent** %6, align 8, !dbg !4206
  %297 = getelementptr inbounds %struct.dirent, %struct.dirent* %296, i32 0, i32 4, !dbg !4206
  %298 = getelementptr inbounds [256 x i8], [256 x i8]* %297, i32 0, i32 0, !dbg !4206
  %299 = call i64 @strlen(i8* %298) #12, !dbg !4206
  %300 = call %struct._ftsent* @fts_alloc(%struct.FTS* %292, i8* %295, i64 %299), !dbg !4207
  store %struct._ftsent* %300, %struct._ftsent** %7, align 8, !dbg !4208
  %301 = icmp eq %struct._ftsent* %300, null, !dbg !4209
  br i1 %301, label %302, label %303, !dbg !4210

; <label>:302:                                    ; preds = %291
  br label %324, !dbg !4211

; <label>:303:                                    ; preds = %291
  %304 = load %struct.dirent*, %struct.dirent** %6, align 8, !dbg !4212
  %305 = getelementptr inbounds %struct.dirent, %struct.dirent* %304, i32 0, i32 4, !dbg !4212
  %306 = getelementptr inbounds [256 x i8], [256 x i8]* %305, i32 0, i32 0, !dbg !4212
  %307 = call i64 @strlen(i8* %306) #12, !dbg !4212
  %308 = load i64, i64* %21, align 8, !dbg !4214
  %309 = icmp uge i64 %307, %308, !dbg !4215
  br i1 %309, label %310, label %365, !dbg !4216

; <label>:310:                                    ; preds = %303
  %311 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !4217
  %312 = getelementptr inbounds %struct.FTS, %struct.FTS* %311, i32 0, i32 4, !dbg !4219
  %313 = load i8*, i8** %312, align 8, !dbg !4219
  store i8* %313, i8** %13, align 8, !dbg !4220
  %314 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !4221
  %315 = load %struct.dirent*, %struct.dirent** %6, align 8, !dbg !4223
  %316 = getelementptr inbounds %struct.dirent, %struct.dirent* %315, i32 0, i32 4, !dbg !4223
  %317 = getelementptr inbounds [256 x i8], [256 x i8]* %316, i32 0, i32 0, !dbg !4223
  %318 = call i64 @strlen(i8* %317) #12, !dbg !4223
  %319 = load i64, i64* %20, align 8, !dbg !4224
  %320 = add i64 %318, %319, !dbg !4225
  %321 = add i64 %320, 1, !dbg !4226
  %322 = call zeroext i1 @fts_palloc(%struct.FTS* %314, i64 %321), !dbg !4227
  br i1 %322, label %340, label %323, !dbg !4228

; <label>:323:                                    ; preds = %310
  br label %324, !dbg !4229

; <label>:324:                                    ; preds = %323, %302
  %325 = call i32* @__errno_location() #14, !dbg !4230
  %326 = load i32, i32* %325, align 4, !dbg !4230
  store i32 %326, i32* %14, align 4, !dbg !4232
  %327 = load %struct._ftsent*, %struct._ftsent** %7, align 8, !dbg !4233
  %328 = bitcast %struct._ftsent* %327 to i8*, !dbg !4233
  call void @free(i8* %328) #8, !dbg !4234
  %329 = load %struct._ftsent*, %struct._ftsent** %8, align 8, !dbg !4235
  call void @fts_lfree(%struct._ftsent* %329), !dbg !4236
  %330 = load %struct.__dirstream*, %struct.__dirstream** %12, align 8, !dbg !4237
  %331 = call i32 @closedir(%struct.__dirstream* %330), !dbg !4238
  %332 = load %struct._ftsent*, %struct._ftsent** %10, align 8, !dbg !4239
  %333 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %332, i32 0, i32 14, !dbg !4240
  store i16 7, i16* %333, align 8, !dbg !4241
  %334 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !4242
  %335 = getelementptr inbounds %struct.FTS, %struct.FTS* %334, i32 0, i32 10, !dbg !4242
  %336 = load i32, i32* %335, align 8, !dbg !4242
  %337 = or i32 %336, 8192, !dbg !4242
  store i32 %337, i32* %335, align 8, !dbg !4242
  %338 = load i32, i32* %14, align 4, !dbg !4243
  %339 = call i32* @__errno_location() #14, !dbg !4243
  store i32 %338, i32* %339, align 4, !dbg !4243
  store %struct._ftsent* null, %struct._ftsent** %3, align 8, !dbg !4244
  br label %713, !dbg !4244

; <label>:340:                                    ; preds = %310
  %341 = load i8*, i8** %13, align 8, !dbg !4245
  %342 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !4247
  %343 = getelementptr inbounds %struct.FTS, %struct.FTS* %342, i32 0, i32 4, !dbg !4248
  %344 = load i8*, i8** %343, align 8, !dbg !4248
  %345 = icmp ne i8* %341, %344, !dbg !4249
  br i1 %345, label %346, label %359, !dbg !4250

; <label>:346:                                    ; preds = %340
  store i8 1, i8* %16, align 1, !dbg !4251
  %347 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !4253
  %348 = getelementptr inbounds %struct.FTS, %struct.FTS* %347, i32 0, i32 10, !dbg !4253
  %349 = load i32, i32* %348, align 8, !dbg !4253
  %350 = and i32 %349, 4, !dbg !4253
  %351 = icmp ne i32 %350, 0, !dbg !4253
  br i1 %351, label %352, label %358, !dbg !4255

; <label>:352:                                    ; preds = %346
  %353 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !4256
  %354 = getelementptr inbounds %struct.FTS, %struct.FTS* %353, i32 0, i32 4, !dbg !4257
  %355 = load i8*, i8** %354, align 8, !dbg !4257
  %356 = load i64, i64* %20, align 8, !dbg !4258
  %357 = getelementptr inbounds i8, i8* %355, i64 %356, !dbg !4259
  store i8* %357, i8** %23, align 8, !dbg !4260
  br label %358, !dbg !4261

; <label>:358:                                    ; preds = %352, %346
  br label %359, !dbg !4262

; <label>:359:                                    ; preds = %358, %340
  %360 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !4263
  %361 = getelementptr inbounds %struct.FTS, %struct.FTS* %360, i32 0, i32 7, !dbg !4264
  %362 = load i64, i64* %361, align 8, !dbg !4264
  %363 = load i64, i64* %20, align 8, !dbg !4265
  %364 = sub i64 %362, %363, !dbg !4266
  store i64 %364, i64* %21, align 8, !dbg !4267
  br label %365, !dbg !4268

; <label>:365:                                    ; preds = %359, %303
  %366 = load i64, i64* %20, align 8, !dbg !4269
  %367 = load %struct.dirent*, %struct.dirent** %6, align 8, !dbg !4270
  %368 = getelementptr inbounds %struct.dirent, %struct.dirent* %367, i32 0, i32 4, !dbg !4270
  %369 = getelementptr inbounds [256 x i8], [256 x i8]* %368, i32 0, i32 0, !dbg !4270
  %370 = call i64 @strlen(i8* %369) #12, !dbg !4270
  %371 = add i64 %366, %370, !dbg !4271
  store i64 %371, i64* %22, align 8, !dbg !4272
  %372 = load i64, i64* %22, align 8, !dbg !4273
  %373 = load i64, i64* %20, align 8, !dbg !4275
  %374 = icmp ult i64 %372, %373, !dbg !4276
  br i1 %374, label %375, label %388, !dbg !4277

; <label>:375:                                    ; preds = %365
  %376 = load %struct._ftsent*, %struct._ftsent** %7, align 8, !dbg !4278
  %377 = bitcast %struct._ftsent* %376 to i8*, !dbg !4278
  call void @free(i8* %377) #8, !dbg !4280
  %378 = load %struct._ftsent*, %struct._ftsent** %8, align 8, !dbg !4281
  call void @fts_lfree(%struct._ftsent* %378), !dbg !4282
  %379 = load %struct.__dirstream*, %struct.__dirstream** %12, align 8, !dbg !4283
  %380 = call i32 @closedir(%struct.__dirstream* %379), !dbg !4284
  %381 = load %struct._ftsent*, %struct._ftsent** %10, align 8, !dbg !4285
  %382 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %381, i32 0, i32 14, !dbg !4286
  store i16 7, i16* %382, align 8, !dbg !4287
  %383 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !4288
  %384 = getelementptr inbounds %struct.FTS, %struct.FTS* %383, i32 0, i32 10, !dbg !4288
  %385 = load i32, i32* %384, align 8, !dbg !4288
  %386 = or i32 %385, 8192, !dbg !4288
  store i32 %386, i32* %384, align 8, !dbg !4288
  %387 = call i32* @__errno_location() #14, !dbg !4289
  store i32 36, i32* %387, align 4, !dbg !4289
  store %struct._ftsent* null, %struct._ftsent** %3, align 8, !dbg !4290
  br label %713, !dbg !4290

; <label>:388:                                    ; preds = %365
  %389 = load i64, i64* %17, align 8, !dbg !4291
  %390 = load %struct._ftsent*, %struct._ftsent** %7, align 8, !dbg !4292
  %391 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %390, i32 0, i32 11, !dbg !4293
  store i64 %389, i64* %391, align 8, !dbg !4294
  %392 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !4295
  %393 = getelementptr inbounds %struct.FTS, %struct.FTS* %392, i32 0, i32 0, !dbg !4296
  %394 = load %struct._ftsent*, %struct._ftsent** %393, align 8, !dbg !4296
  %395 = load %struct._ftsent*, %struct._ftsent** %7, align 8, !dbg !4297
  %396 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %395, i32 0, i32 1, !dbg !4298
  store %struct._ftsent* %394, %struct._ftsent** %396, align 8, !dbg !4299
  %397 = load i64, i64* %22, align 8, !dbg !4300
  %398 = load %struct._ftsent*, %struct._ftsent** %7, align 8, !dbg !4301
  %399 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %398, i32 0, i32 9, !dbg !4302
  store i64 %397, i64* %399, align 8, !dbg !4303
  %400 = load %struct.dirent*, %struct.dirent** %6, align 8, !dbg !4304
  %401 = getelementptr inbounds %struct.dirent, %struct.dirent* %400, i32 0, i32 0, !dbg !4304
  %402 = load i64, i64* %401, align 8, !dbg !4304
  %403 = load %struct._ftsent*, %struct._ftsent** %7, align 8, !dbg !4305
  %404 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %403, i32 0, i32 17, !dbg !4306
  %405 = getelementptr inbounds [1 x %struct.stat], [1 x %struct.stat]* %404, i32 0, i32 0, !dbg !4307
  %406 = getelementptr inbounds %struct.stat, %struct.stat* %405, i32 0, i32 1, !dbg !4307
  store i64 %402, i64* %406, align 8, !dbg !4308
  %407 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !4309
  %408 = getelementptr inbounds %struct.FTS, %struct.FTS* %407, i32 0, i32 10, !dbg !4309
  %409 = load i32, i32* %408, align 8, !dbg !4309
  %410 = and i32 %409, 4, !dbg !4309
  %411 = icmp ne i32 %410, 0, !dbg !4309
  br i1 %411, label %412, label %426, !dbg !4311

; <label>:412:                                    ; preds = %388
  %413 = load %struct._ftsent*, %struct._ftsent** %7, align 8, !dbg !4312
  %414 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %413, i32 0, i32 6, !dbg !4314
  %415 = load i8*, i8** %414, align 8, !dbg !4314
  %416 = load %struct._ftsent*, %struct._ftsent** %7, align 8, !dbg !4315
  %417 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %416, i32 0, i32 5, !dbg !4316
  store i8* %415, i8** %417, align 8, !dbg !4317
  %418 = load i8*, i8** %23, align 8, !dbg !4318
  %419 = load %struct._ftsent*, %struct._ftsent** %7, align 8, !dbg !4319
  %420 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %419, i32 0, i32 18, !dbg !4320
  %421 = getelementptr inbounds [1 x i8], [1 x i8]* %420, i32 0, i32 0, !dbg !4321
  %422 = load %struct._ftsent*, %struct._ftsent** %7, align 8, !dbg !4322
  %423 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %422, i32 0, i32 12, !dbg !4323
  %424 = load i64, i64* %423, align 8, !dbg !4323
  %425 = add i64 %424, 1, !dbg !4324
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %418, i8* %421, i64 %425, i32 1, i1 false), !dbg !4321
  br label %432, !dbg !4325

; <label>:426:                                    ; preds = %388
  %427 = load %struct._ftsent*, %struct._ftsent** %7, align 8, !dbg !4326
  %428 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %427, i32 0, i32 18, !dbg !4327
  %429 = getelementptr inbounds [1 x i8], [1 x i8]* %428, i32 0, i32 0, !dbg !4326
  %430 = load %struct._ftsent*, %struct._ftsent** %7, align 8, !dbg !4328
  %431 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %430, i32 0, i32 5, !dbg !4329
  store i8* %429, i8** %431, align 8, !dbg !4330
  br label %432

; <label>:432:                                    ; preds = %426, %412
  %433 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !4331
  %434 = getelementptr inbounds %struct.FTS, %struct.FTS* %433, i32 0, i32 9, !dbg !4333
  %435 = load i32 (%struct._ftsent**, %struct._ftsent**)*, i32 (%struct._ftsent**, %struct._ftsent**)** %434, align 8, !dbg !4333
  %436 = icmp eq i32 (%struct._ftsent**, %struct._ftsent**)* %435, null, !dbg !4334
  br i1 %436, label %443, label %437, !dbg !4335

; <label>:437:                                    ; preds = %432
  %438 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !4336
  %439 = getelementptr inbounds %struct.FTS, %struct.FTS* %438, i32 0, i32 10, !dbg !4336
  %440 = load i32, i32* %439, align 8, !dbg !4336
  %441 = and i32 %440, 1024, !dbg !4336
  %442 = icmp ne i32 %441, 0, !dbg !4336
  br i1 %442, label %443, label %498, !dbg !4337

; <label>:443:                                    ; preds = %437, %432
  call void @llvm.dbg.declare(metadata i8* %26, metadata !4338, metadata !DIExpression()), !dbg !4340
  %444 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !4341
  %445 = getelementptr inbounds %struct.FTS, %struct.FTS* %444, i32 0, i32 10, !dbg !4341
  %446 = load i32, i32* %445, align 8, !dbg !4341
  %447 = and i32 %446, 16, !dbg !4341
  %448 = icmp ne i32 %447, 0, !dbg !4341
  br i1 %448, label %449, label %468, !dbg !4342

; <label>:449:                                    ; preds = %443
  %450 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !4343
  %451 = getelementptr inbounds %struct.FTS, %struct.FTS* %450, i32 0, i32 10, !dbg !4343
  %452 = load i32, i32* %451, align 8, !dbg !4343
  %453 = and i32 %452, 8, !dbg !4343
  %454 = icmp ne i32 %453, 0, !dbg !4343
  br i1 %454, label %455, label %468, !dbg !4344

; <label>:455:                                    ; preds = %449
  %456 = load %struct.dirent*, %struct.dirent** %6, align 8, !dbg !4345
  %457 = getelementptr inbounds %struct.dirent, %struct.dirent* %456, i32 0, i32 3, !dbg !4345
  %458 = load i8, i8* %457, align 2, !dbg !4345
  %459 = zext i8 %458 to i32, !dbg !4345
  %460 = icmp ne i32 %459, 0, !dbg !4345
  br i1 %460, label %461, label %468, !dbg !4346

; <label>:461:                                    ; preds = %455
  %462 = load %struct.dirent*, %struct.dirent** %6, align 8, !dbg !4347
  %463 = getelementptr inbounds %struct.dirent, %struct.dirent* %462, i32 0, i32 3, !dbg !4347
  %464 = load i8, i8* %463, align 2, !dbg !4347
  %465 = zext i8 %464 to i32, !dbg !4347
  %466 = icmp eq i32 %465, 4, !dbg !4347
  %467 = xor i1 %466, true, !dbg !4348
  br label %468

; <label>:468:                                    ; preds = %461, %455, %449, %443
  %469 = phi i1 [ false, %455 ], [ false, %449 ], [ false, %443 ], [ %467, %461 ]
  %470 = zext i1 %469 to i8, !dbg !4340
  store i8 %470, i8* %26, align 1, !dbg !4340
  %471 = load %struct._ftsent*, %struct._ftsent** %7, align 8, !dbg !4349
  %472 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %471, i32 0, i32 14, !dbg !4350
  store i16 11, i16* %472, align 8, !dbg !4351
  %473 = load %struct._ftsent*, %struct._ftsent** %7, align 8, !dbg !4352
  %474 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %473, i32 0, i32 17, !dbg !4353
  %475 = getelementptr inbounds [1 x %struct.stat], [1 x %struct.stat]* %474, i32 0, i32 0, !dbg !4352
  %476 = load %struct.dirent*, %struct.dirent** %6, align 8, !dbg !4354
  %477 = getelementptr inbounds %struct.dirent, %struct.dirent* %476, i32 0, i32 3, !dbg !4354
  %478 = load i8, i8* %477, align 2, !dbg !4354
  %479 = zext i8 %478 to i32, !dbg !4354
  call void @set_stat_type(%struct.stat* %475, i32 %479), !dbg !4355
  %480 = load %struct._ftsent*, %struct._ftsent** %7, align 8, !dbg !4356
  %481 = load i8, i8* %26, align 1, !dbg !4357
  %482 = trunc i8 %481 to i1, !dbg !4357
  %483 = xor i1 %482, true, !dbg !4358
  call void @fts_set_stat_required(%struct._ftsent* %480, i1 zeroext %483), !dbg !4359
  %484 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !4360
  %485 = getelementptr inbounds %struct.FTS, %struct.FTS* %484, i32 0, i32 10, !dbg !4360
  %486 = load i32, i32* %485, align 8, !dbg !4360
  %487 = and i32 %486, 16, !dbg !4360
  %488 = icmp ne i32 %487, 0, !dbg !4360
  br i1 %488, label %489, label %495, !dbg !4361

; <label>:489:                                    ; preds = %468
  %490 = load %struct.dirent*, %struct.dirent** %6, align 8, !dbg !4362
  %491 = getelementptr inbounds %struct.dirent, %struct.dirent* %490, i32 0, i32 3, !dbg !4362
  %492 = load i8, i8* %491, align 2, !dbg !4362
  %493 = zext i8 %492 to i32, !dbg !4362
  %494 = icmp eq i32 %493, 4, !dbg !4362
  br label %495

; <label>:495:                                    ; preds = %489, %468
  %496 = phi i1 [ false, %468 ], [ %494, %489 ]
  %497 = zext i1 %496 to i8, !dbg !4363
  store i8 %497, i8* %25, align 1, !dbg !4363
  br label %524, !dbg !4364

; <label>:498:                                    ; preds = %437
  %499 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !4365
  %500 = load %struct._ftsent*, %struct._ftsent** %7, align 8, !dbg !4367
  %501 = call zeroext i16 @fts_stat(%struct.FTS* %499, %struct._ftsent* %500, i1 zeroext false), !dbg !4368
  %502 = load %struct._ftsent*, %struct._ftsent** %7, align 8, !dbg !4369
  %503 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %502, i32 0, i32 14, !dbg !4370
  store i16 %501, i16* %503, align 8, !dbg !4371
  %504 = load %struct._ftsent*, %struct._ftsent** %7, align 8, !dbg !4372
  %505 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %504, i32 0, i32 14, !dbg !4373
  %506 = load i16, i16* %505, align 8, !dbg !4373
  %507 = zext i16 %506 to i32, !dbg !4372
  %508 = icmp eq i32 %507, 1, !dbg !4374
  br i1 %508, label %521, label %509, !dbg !4375

; <label>:509:                                    ; preds = %498
  %510 = load %struct._ftsent*, %struct._ftsent** %7, align 8, !dbg !4376
  %511 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %510, i32 0, i32 14, !dbg !4377
  %512 = load i16, i16* %511, align 8, !dbg !4377
  %513 = zext i16 %512 to i32, !dbg !4376
  %514 = icmp eq i32 %513, 2, !dbg !4378
  br i1 %514, label %521, label %515, !dbg !4379

; <label>:515:                                    ; preds = %509
  %516 = load %struct._ftsent*, %struct._ftsent** %7, align 8, !dbg !4380
  %517 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %516, i32 0, i32 14, !dbg !4381
  %518 = load i16, i16* %517, align 8, !dbg !4381
  %519 = zext i16 %518 to i32, !dbg !4380
  %520 = icmp eq i32 %519, 5, !dbg !4382
  br label %521, !dbg !4379

; <label>:521:                                    ; preds = %515, %509, %498
  %522 = phi i1 [ true, %509 ], [ true, %498 ], [ %520, %515 ]
  %523 = zext i1 %522 to i8, !dbg !4383
  store i8 %523, i8* %25, align 1, !dbg !4383
  br label %524

; <label>:524:                                    ; preds = %521, %495
  %525 = load i64, i64* %18, align 8, !dbg !4384
  %526 = icmp ugt i64 %525, 0, !dbg !4386
  br i1 %526, label %527, label %536, !dbg !4387

; <label>:527:                                    ; preds = %524
  %528 = load i8, i8* %25, align 1, !dbg !4388
  %529 = trunc i8 %528 to i1, !dbg !4388
  br i1 %529, label %530, label %536, !dbg !4389

; <label>:530:                                    ; preds = %527
  %531 = load i8, i8* %19, align 1, !dbg !4390
  %532 = trunc i8 %531 to i1, !dbg !4390
  %533 = zext i1 %532 to i64, !dbg !4390
  %534 = load i64, i64* %18, align 8, !dbg !4391
  %535 = sub i64 %534, %533, !dbg !4391
  store i64 %535, i64* %18, align 8, !dbg !4391
  br label %536, !dbg !4392

; <label>:536:                                    ; preds = %530, %527, %524
  %537 = load %struct._ftsent*, %struct._ftsent** %7, align 8, !dbg !4393
  %538 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %537, i32 0, i32 2, !dbg !4394
  store %struct._ftsent* null, %struct._ftsent** %538, align 8, !dbg !4395
  %539 = load %struct._ftsent*, %struct._ftsent** %8, align 8, !dbg !4396
  %540 = icmp eq %struct._ftsent* %539, null, !dbg !4398
  br i1 %540, label %541, label %543, !dbg !4399

; <label>:541:                                    ; preds = %536
  %542 = load %struct._ftsent*, %struct._ftsent** %7, align 8, !dbg !4400
  store %struct._ftsent* %542, %struct._ftsent** %11, align 8, !dbg !4401
  store %struct._ftsent* %542, %struct._ftsent** %8, align 8, !dbg !4402
  br label %548, !dbg !4403

; <label>:543:                                    ; preds = %536
  %544 = load %struct._ftsent*, %struct._ftsent** %7, align 8, !dbg !4404
  %545 = load %struct._ftsent*, %struct._ftsent** %11, align 8, !dbg !4406
  %546 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %545, i32 0, i32 2, !dbg !4407
  store %struct._ftsent* %544, %struct._ftsent** %546, align 8, !dbg !4408
  %547 = load %struct._ftsent*, %struct._ftsent** %7, align 8, !dbg !4409
  store %struct._ftsent* %547, %struct._ftsent** %11, align 8, !dbg !4410
  br label %548

; <label>:548:                                    ; preds = %543, %541
  %549 = load i64, i64* %9, align 8, !dbg !4411
  %550 = add i64 %549, 1, !dbg !4411
  store i64 %550, i64* %9, align 8, !dbg !4411
  br label %249, !dbg !4412, !llvm.loop !4200

; <label>:551:                                    ; preds = %256
  %552 = load %struct.__dirstream*, %struct.__dirstream** %12, align 8, !dbg !4413
  %553 = icmp ne %struct.__dirstream* %552, null, !dbg !4413
  br i1 %553, label %554, label %557, !dbg !4415

; <label>:554:                                    ; preds = %551
  %555 = load %struct.__dirstream*, %struct.__dirstream** %12, align 8, !dbg !4416
  %556 = call i32 @closedir(%struct.__dirstream* %555), !dbg !4417
  br label %557, !dbg !4417

; <label>:557:                                    ; preds = %554, %551
  %558 = load i8, i8* %16, align 1, !dbg !4418
  %559 = trunc i8 %558 to i1, !dbg !4418
  br i1 %559, label %560, label %563, !dbg !4420

; <label>:560:                                    ; preds = %557
  %561 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !4421
  %562 = load %struct._ftsent*, %struct._ftsent** %8, align 8, !dbg !4422
  call void @fts_padjust(%struct.FTS* %561, %struct._ftsent* %562), !dbg !4423
  br label %563, !dbg !4423

; <label>:563:                                    ; preds = %560, %557
  %564 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !4424
  %565 = getelementptr inbounds %struct.FTS, %struct.FTS* %564, i32 0, i32 10, !dbg !4424
  %566 = load i32, i32* %565, align 8, !dbg !4424
  %567 = and i32 %566, 4, !dbg !4424
  %568 = icmp ne i32 %567, 0, !dbg !4424
  br i1 %568, label %569, label %583, !dbg !4426

; <label>:569:                                    ; preds = %563
  %570 = load i64, i64* %20, align 8, !dbg !4427
  %571 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !4430
  %572 = getelementptr inbounds %struct.FTS, %struct.FTS* %571, i32 0, i32 7, !dbg !4431
  %573 = load i64, i64* %572, align 8, !dbg !4431
  %574 = icmp eq i64 %570, %573, !dbg !4432
  br i1 %574, label %578, label %575, !dbg !4433

; <label>:575:                                    ; preds = %569
  %576 = load i64, i64* %9, align 8, !dbg !4434
  %577 = icmp eq i64 %576, 0, !dbg !4435
  br i1 %577, label %578, label %581, !dbg !4436

; <label>:578:                                    ; preds = %575, %569
  %579 = load i8*, i8** %23, align 8, !dbg !4437
  %580 = getelementptr inbounds i8, i8* %579, i32 -1, !dbg !4437
  store i8* %580, i8** %23, align 8, !dbg !4437
  br label %581, !dbg !4437

; <label>:581:                                    ; preds = %578, %575
  %582 = load i8*, i8** %23, align 8, !dbg !4438
  store i8 0, i8* %582, align 1, !dbg !4439
  br label %583, !dbg !4440

; <label>:583:                                    ; preds = %581, %563
  %584 = load i8, i8* %15, align 1, !dbg !4441
  %585 = trunc i8 %584 to i1, !dbg !4441
  br i1 %585, label %586, label %659, !dbg !4443

; <label>:586:                                    ; preds = %583
  %587 = load i32, i32* %5, align 4, !dbg !4444
  %588 = icmp eq i32 %587, 1, !dbg !4445
  br i1 %588, label %592, label %589, !dbg !4446

; <label>:589:                                    ; preds = %586
  %590 = load i64, i64* %9, align 8, !dbg !4447
  %591 = icmp ne i64 %590, 0, !dbg !4447
  br i1 %591, label %659, label %592, !dbg !4448

; <label>:592:                                    ; preds = %589, %586
  %593 = load %struct._ftsent*, %struct._ftsent** %10, align 8, !dbg !4449
  %594 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %593, i32 0, i32 11, !dbg !4450
  %595 = load i64, i64* %594, align 8, !dbg !4450
  %596 = icmp eq i64 %595, 0, !dbg !4451
  br i1 %596, label %597, label %644, !dbg !4452

; <label>:597:                                    ; preds = %592
  %598 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !4453
  %599 = getelementptr inbounds %struct.FTS, %struct.FTS* %598, i32 0, i32 13, !dbg !4453
  call void @fd_ring_clear(%struct.I_ring* %599), !dbg !4453
  %600 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !4453
  %601 = getelementptr inbounds %struct.FTS, %struct.FTS* %600, i32 0, i32 10, !dbg !4453
  %602 = load i32, i32* %601, align 8, !dbg !4453
  %603 = and i32 %602, 4, !dbg !4453
  %604 = icmp ne i32 %603, 0, !dbg !4453
  br i1 %604, label %642, label %605, !dbg !4453

; <label>:605:                                    ; preds = %597
  %606 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !4453
  %607 = getelementptr inbounds %struct.FTS, %struct.FTS* %606, i32 0, i32 10, !dbg !4453
  %608 = load i32, i32* %607, align 8, !dbg !4453
  %609 = and i32 %608, 512, !dbg !4453
  %610 = icmp ne i32 %609, 0, !dbg !4453
  br i1 %610, label %611, label %625, !dbg !4453

; <label>:611:                                    ; preds = %605
  %612 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !4453
  %613 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !4453
  %614 = getelementptr inbounds %struct.FTS, %struct.FTS* %613, i32 0, i32 10, !dbg !4453
  %615 = load i32, i32* %614, align 8, !dbg !4453
  %616 = and i32 %615, 512, !dbg !4453
  %617 = icmp ne i32 %616, 0, !dbg !4453
  br i1 %617, label %618, label %619, !dbg !4453

; <label>:618:                                    ; preds = %611
  br label %623, !dbg !4453

; <label>:619:                                    ; preds = %611
  %620 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !4453
  %621 = getelementptr inbounds %struct.FTS, %struct.FTS* %620, i32 0, i32 5, !dbg !4453
  %622 = load i32, i32* %621, align 8, !dbg !4453
  br label %623, !dbg !4453

; <label>:623:                                    ; preds = %619, %618
  %624 = phi i32 [ -100, %618 ], [ %622, %619 ], !dbg !4453
  call void @cwd_advance_fd(%struct.FTS* %612, i32 %624, i1 zeroext true), !dbg !4453
  br label %639, !dbg !4453

; <label>:625:                                    ; preds = %605
  %626 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !4453
  %627 = getelementptr inbounds %struct.FTS, %struct.FTS* %626, i32 0, i32 10, !dbg !4453
  %628 = load i32, i32* %627, align 8, !dbg !4453
  %629 = and i32 %628, 512, !dbg !4453
  %630 = icmp ne i32 %629, 0, !dbg !4453
  br i1 %630, label %631, label %632, !dbg !4453

; <label>:631:                                    ; preds = %625
  br label %636, !dbg !4453

; <label>:632:                                    ; preds = %625
  %633 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !4453
  %634 = getelementptr inbounds %struct.FTS, %struct.FTS* %633, i32 0, i32 5, !dbg !4453
  %635 = load i32, i32* %634, align 8, !dbg !4453
  br label %636, !dbg !4453

; <label>:636:                                    ; preds = %632, %631
  %637 = phi i32 [ -100, %631 ], [ %635, %632 ], !dbg !4453
  %638 = call i32 @fchdir(i32 %637) #8, !dbg !4453
  br label %639, !dbg !4453

; <label>:639:                                    ; preds = %636, %623
  %640 = phi i32 [ 0, %623 ], [ %638, %636 ], !dbg !4453
  %641 = icmp ne i32 %640, 0, !dbg !4453
  br label %642

; <label>:642:                                    ; preds = %639, %597
  %643 = phi i1 [ false, %597 ], [ %641, %639 ]
  br i1 %643, label %651, label %659, !dbg !4449

; <label>:644:                                    ; preds = %592
  %645 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !4454
  %646 = load %struct._ftsent*, %struct._ftsent** %10, align 8, !dbg !4455
  %647 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %646, i32 0, i32 1, !dbg !4456
  %648 = load %struct._ftsent*, %struct._ftsent** %647, align 8, !dbg !4456
  %649 = call i32 @fts_safe_changedir(%struct.FTS* %645, %struct._ftsent* %648, i32 -1, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2.118, i32 0, i32 0)), !dbg !4457
  %650 = icmp ne i32 %649, 0, !dbg !4457
  br i1 %650, label %651, label %659, !dbg !4452

; <label>:651:                                    ; preds = %644, %642
  %652 = load %struct._ftsent*, %struct._ftsent** %10, align 8, !dbg !4458
  %653 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %652, i32 0, i32 14, !dbg !4460
  store i16 7, i16* %653, align 8, !dbg !4461
  %654 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !4462
  %655 = getelementptr inbounds %struct.FTS, %struct.FTS* %654, i32 0, i32 10, !dbg !4462
  %656 = load i32, i32* %655, align 8, !dbg !4462
  %657 = or i32 %656, 8192, !dbg !4462
  store i32 %657, i32* %655, align 8, !dbg !4462
  %658 = load %struct._ftsent*, %struct._ftsent** %8, align 8, !dbg !4463
  call void @fts_lfree(%struct._ftsent* %658), !dbg !4464
  store %struct._ftsent* null, %struct._ftsent** %3, align 8, !dbg !4465
  br label %713, !dbg !4465

; <label>:659:                                    ; preds = %644, %642, %589, %583
  %660 = load i64, i64* %9, align 8, !dbg !4466
  %661 = icmp ne i64 %660, 0, !dbg !4466
  br i1 %661, label %670, label %662, !dbg !4468

; <label>:662:                                    ; preds = %659
  %663 = load i32, i32* %5, align 4, !dbg !4469
  %664 = icmp eq i32 %663, 3, !dbg !4472
  br i1 %664, label %665, label %668, !dbg !4473

; <label>:665:                                    ; preds = %662
  %666 = load %struct._ftsent*, %struct._ftsent** %10, align 8, !dbg !4474
  %667 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %666, i32 0, i32 14, !dbg !4475
  store i16 6, i16* %667, align 8, !dbg !4476
  br label %668, !dbg !4474

; <label>:668:                                    ; preds = %665, %662
  %669 = load %struct._ftsent*, %struct._ftsent** %8, align 8, !dbg !4477
  call void @fts_lfree(%struct._ftsent* %669), !dbg !4478
  store %struct._ftsent* null, %struct._ftsent** %3, align 8, !dbg !4479
  br label %713, !dbg !4479

; <label>:670:                                    ; preds = %659
  %671 = load i64, i64* %9, align 8, !dbg !4480
  %672 = icmp ugt i64 %671, 10000, !dbg !4482
  br i1 %672, label %673, label %698, !dbg !4483

; <label>:673:                                    ; preds = %670
  %674 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !4484
  %675 = getelementptr inbounds %struct.FTS, %struct.FTS* %674, i32 0, i32 9, !dbg !4485
  %676 = load i32 (%struct._ftsent**, %struct._ftsent**)*, i32 (%struct._ftsent**, %struct._ftsent**)** %675, align 8, !dbg !4485
  %677 = icmp ne i32 (%struct._ftsent**, %struct._ftsent**)* %676, null, !dbg !4484
  br i1 %677, label %698, label %678, !dbg !4486

; <label>:678:                                    ; preds = %673
  %679 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !4487
  %680 = getelementptr inbounds %struct.FTS, %struct.FTS* %679, i32 0, i32 10, !dbg !4487
  %681 = load i32, i32* %680, align 8, !dbg !4487
  %682 = and i32 %681, 512, !dbg !4487
  %683 = icmp ne i32 %682, 0, !dbg !4487
  br i1 %683, label %684, label %698, !dbg !4488

; <label>:684:                                    ; preds = %678
  %685 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !4489
  %686 = getelementptr inbounds %struct.FTS, %struct.FTS* %685, i32 0, i32 6, !dbg !4490
  %687 = load i32, i32* %686, align 4, !dbg !4490
  %688 = call zeroext i1 @dirent_inode_sort_may_be_useful(i32 %687), !dbg !4491
  br i1 %688, label %689, label %698, !dbg !4492

; <label>:689:                                    ; preds = %684
  %690 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !4493
  %691 = getelementptr inbounds %struct.FTS, %struct.FTS* %690, i32 0, i32 9, !dbg !4495
  store i32 (%struct._ftsent**, %struct._ftsent**)* @fts_compare_ino, i32 (%struct._ftsent**, %struct._ftsent**)** %691, align 8, !dbg !4496
  %692 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !4497
  %693 = load %struct._ftsent*, %struct._ftsent** %8, align 8, !dbg !4498
  %694 = load i64, i64* %9, align 8, !dbg !4499
  %695 = call %struct._ftsent* @fts_sort(%struct.FTS* %692, %struct._ftsent* %693, i64 %694), !dbg !4500
  store %struct._ftsent* %695, %struct._ftsent** %8, align 8, !dbg !4501
  %696 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !4502
  %697 = getelementptr inbounds %struct.FTS, %struct.FTS* %696, i32 0, i32 9, !dbg !4503
  store i32 (%struct._ftsent**, %struct._ftsent**)* null, i32 (%struct._ftsent**, %struct._ftsent**)** %697, align 8, !dbg !4504
  br label %698, !dbg !4505

; <label>:698:                                    ; preds = %689, %684, %678, %673, %670
  %699 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !4506
  %700 = getelementptr inbounds %struct.FTS, %struct.FTS* %699, i32 0, i32 9, !dbg !4508
  %701 = load i32 (%struct._ftsent**, %struct._ftsent**)*, i32 (%struct._ftsent**, %struct._ftsent**)** %700, align 8, !dbg !4508
  %702 = icmp ne i32 (%struct._ftsent**, %struct._ftsent**)* %701, null, !dbg !4506
  br i1 %702, label %703, label %711, !dbg !4509

; <label>:703:                                    ; preds = %698
  %704 = load i64, i64* %9, align 8, !dbg !4510
  %705 = icmp ugt i64 %704, 1, !dbg !4511
  br i1 %705, label %706, label %711, !dbg !4512

; <label>:706:                                    ; preds = %703
  %707 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !4513
  %708 = load %struct._ftsent*, %struct._ftsent** %8, align 8, !dbg !4514
  %709 = load i64, i64* %9, align 8, !dbg !4515
  %710 = call %struct._ftsent* @fts_sort(%struct.FTS* %707, %struct._ftsent* %708, i64 %709), !dbg !4516
  store %struct._ftsent* %710, %struct._ftsent** %8, align 8, !dbg !4517
  br label %711, !dbg !4518

; <label>:711:                                    ; preds = %706, %703, %698
  %712 = load %struct._ftsent*, %struct._ftsent** %8, align 8, !dbg !4519
  store %struct._ftsent* %712, %struct._ftsent** %3, align 8, !dbg !4520
  br label %713, !dbg !4520

; <label>:713:                                    ; preds = %711, %668, %651, %375, %324, %97, %67
  %714 = load %struct._ftsent*, %struct._ftsent** %3, align 8, !dbg !4521
  ret %struct._ftsent* %714, !dbg !4521
}

; Function Attrs: noinline nounwind uwtable
define internal void @cwd_advance_fd(%struct.FTS*, i32, i1 zeroext) #3 !dbg !4522 {
  %4 = alloca %struct.FTS*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i8, align 1
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  store %struct.FTS* %0, %struct.FTS** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.FTS** %4, metadata !4525, metadata !DIExpression()), !dbg !4526
  store i32 %1, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !4527, metadata !DIExpression()), !dbg !4528
  %9 = zext i1 %2 to i8
  store i8 %9, i8* %6, align 1
  call void @llvm.dbg.declare(metadata i8* %6, metadata !4529, metadata !DIExpression()), !dbg !4530
  call void @llvm.dbg.declare(metadata i32* %7, metadata !4531, metadata !DIExpression()), !dbg !4532
  %10 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !4533
  %11 = getelementptr inbounds %struct.FTS, %struct.FTS* %10, i32 0, i32 6, !dbg !4534
  %12 = load i32, i32* %11, align 4, !dbg !4534
  store i32 %12, i32* %7, align 4, !dbg !4532
  br label %13, !dbg !4535, !llvm.loop !4536

; <label>:13:                                     ; preds = %3
  %14 = load i32, i32* %7, align 4, !dbg !4537
  %15 = load i32, i32* %5, align 4, !dbg !4537
  %16 = icmp ne i32 %14, %15, !dbg !4537
  br i1 %16, label %21, label %17, !dbg !4537

; <label>:17:                                     ; preds = %13
  %18 = load i32, i32* %7, align 4, !dbg !4537
  %19 = icmp eq i32 %18, -100, !dbg !4537
  br i1 %19, label %21, label %20, !dbg !4540

; <label>:20:                                     ; preds = %17
  call void @abort() #11, !dbg !4537
  unreachable, !dbg !4537

; <label>:21:                                     ; preds = %17, %13
  br label %22, !dbg !4540

; <label>:22:                                     ; preds = %21
  %23 = load i8, i8* %6, align 1, !dbg !4541
  %24 = trunc i8 %23 to i1, !dbg !4541
  br i1 %24, label %25, label %36, !dbg !4543

; <label>:25:                                     ; preds = %22
  call void @llvm.dbg.declare(metadata i32* %8, metadata !4544, metadata !DIExpression()), !dbg !4546
  %26 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !4547
  %27 = getelementptr inbounds %struct.FTS, %struct.FTS* %26, i32 0, i32 13, !dbg !4548
  %28 = load i32, i32* %7, align 4, !dbg !4549
  %29 = call i32 @i_ring_push(%struct.I_ring* %27, i32 %28), !dbg !4550
  store i32 %29, i32* %8, align 4, !dbg !4546
  %30 = load i32, i32* %8, align 4, !dbg !4551
  %31 = icmp sle i32 0, %30, !dbg !4553
  br i1 %31, label %32, label %35, !dbg !4554

; <label>:32:                                     ; preds = %25
  %33 = load i32, i32* %8, align 4, !dbg !4555
  %34 = call i32 @close(i32 %33), !dbg !4556
  br label %35, !dbg !4556

; <label>:35:                                     ; preds = %32, %25
  br label %50, !dbg !4557

; <label>:36:                                     ; preds = %22
  %37 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !4558
  %38 = getelementptr inbounds %struct.FTS, %struct.FTS* %37, i32 0, i32 10, !dbg !4558
  %39 = load i32, i32* %38, align 8, !dbg !4558
  %40 = and i32 %39, 4, !dbg !4558
  %41 = icmp ne i32 %40, 0, !dbg !4558
  br i1 %41, label %49, label %42, !dbg !4560

; <label>:42:                                     ; preds = %36
  %43 = load i32, i32* %7, align 4, !dbg !4561
  %44 = icmp sle i32 0, %43, !dbg !4564
  br i1 %44, label %45, label %48, !dbg !4565

; <label>:45:                                     ; preds = %42
  %46 = load i32, i32* %7, align 4, !dbg !4566
  %47 = call i32 @close(i32 %46), !dbg !4567
  br label %48, !dbg !4567

; <label>:48:                                     ; preds = %45, %42
  br label %49, !dbg !4568

; <label>:49:                                     ; preds = %48, %36
  br label %50

; <label>:50:                                     ; preds = %49, %35
  %51 = load i32, i32* %5, align 4, !dbg !4569
  %52 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !4570
  %53 = getelementptr inbounds %struct.FTS, %struct.FTS* %52, i32 0, i32 6, !dbg !4571
  store i32 %51, i32* %53, align 4, !dbg !4572
  ret void, !dbg !4573
}

; Function Attrs: noinline nounwind uwtable
define internal void @fts_load(%struct.FTS*, %struct._ftsent*) #3 !dbg !4574 {
  %3 = alloca %struct.FTS*, align 8
  %4 = alloca %struct._ftsent*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i8*, align 8
  store %struct.FTS* %0, %struct.FTS** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.FTS** %3, metadata !4575, metadata !DIExpression()), !dbg !4576
  store %struct._ftsent* %1, %struct._ftsent** %4, align 8
  call void @llvm.dbg.declare(metadata %struct._ftsent** %4, metadata !4577, metadata !DIExpression()), !dbg !4578
  call void @llvm.dbg.declare(metadata i64* %5, metadata !4579, metadata !DIExpression()), !dbg !4580
  call void @llvm.dbg.declare(metadata i8** %6, metadata !4581, metadata !DIExpression()), !dbg !4582
  %7 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !4583
  %8 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %7, i32 0, i32 12, !dbg !4584
  %9 = load i64, i64* %8, align 8, !dbg !4584
  %10 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !4585
  %11 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %10, i32 0, i32 9, !dbg !4586
  store i64 %9, i64* %11, align 8, !dbg !4587
  store i64 %9, i64* %5, align 8, !dbg !4588
  %12 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !4589
  %13 = getelementptr inbounds %struct.FTS, %struct.FTS* %12, i32 0, i32 4, !dbg !4590
  %14 = load i8*, i8** %13, align 8, !dbg !4590
  %15 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !4591
  %16 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %15, i32 0, i32 18, !dbg !4592
  %17 = getelementptr inbounds [1 x i8], [1 x i8]* %16, i32 0, i32 0, !dbg !4593
  %18 = load i64, i64* %5, align 8, !dbg !4594
  %19 = add i64 %18, 1, !dbg !4595
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %14, i8* %17, i64 %19, i32 1, i1 false), !dbg !4593
  %20 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !4596
  %21 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %20, i32 0, i32 18, !dbg !4598
  %22 = getelementptr inbounds [1 x i8], [1 x i8]* %21, i32 0, i32 0, !dbg !4596
  %23 = call i8* @strrchr(i8* %22, i32 47) #12, !dbg !4599
  store i8* %23, i8** %6, align 8, !dbg !4600
  %24 = icmp ne i8* %23, null, !dbg !4600
  br i1 %24, label %25, label %50, !dbg !4601

; <label>:25:                                     ; preds = %2
  %26 = load i8*, i8** %6, align 8, !dbg !4602
  %27 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !4603
  %28 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %27, i32 0, i32 18, !dbg !4604
  %29 = getelementptr inbounds [1 x i8], [1 x i8]* %28, i32 0, i32 0, !dbg !4603
  %30 = icmp ne i8* %26, %29, !dbg !4605
  br i1 %30, label %37, label %31, !dbg !4606

; <label>:31:                                     ; preds = %25
  %32 = load i8*, i8** %6, align 8, !dbg !4607
  %33 = getelementptr inbounds i8, i8* %32, i64 1, !dbg !4607
  %34 = load i8, i8* %33, align 1, !dbg !4607
  %35 = sext i8 %34 to i32, !dbg !4607
  %36 = icmp ne i32 %35, 0, !dbg !4607
  br i1 %36, label %37, label %50, !dbg !4608

; <label>:37:                                     ; preds = %31, %25
  %38 = load i8*, i8** %6, align 8, !dbg !4609
  %39 = getelementptr inbounds i8, i8* %38, i32 1, !dbg !4609
  store i8* %39, i8** %6, align 8, !dbg !4609
  %40 = call i64 @strlen(i8* %39) #12, !dbg !4611
  store i64 %40, i64* %5, align 8, !dbg !4612
  %41 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !4613
  %42 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %41, i32 0, i32 18, !dbg !4614
  %43 = getelementptr inbounds [1 x i8], [1 x i8]* %42, i32 0, i32 0, !dbg !4615
  %44 = load i8*, i8** %6, align 8, !dbg !4616
  %45 = load i64, i64* %5, align 8, !dbg !4617
  %46 = add i64 %45, 1, !dbg !4618
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %43, i8* %44, i64 %46, i32 1, i1 false), !dbg !4615
  %47 = load i64, i64* %5, align 8, !dbg !4619
  %48 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !4620
  %49 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %48, i32 0, i32 12, !dbg !4621
  store i64 %47, i64* %49, align 8, !dbg !4622
  br label %50, !dbg !4623

; <label>:50:                                     ; preds = %37, %31, %2
  %51 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !4624
  %52 = getelementptr inbounds %struct.FTS, %struct.FTS* %51, i32 0, i32 4, !dbg !4625
  %53 = load i8*, i8** %52, align 8, !dbg !4625
  %54 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !4626
  %55 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %54, i32 0, i32 6, !dbg !4627
  store i8* %53, i8** %55, align 8, !dbg !4628
  %56 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !4629
  %57 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %56, i32 0, i32 5, !dbg !4630
  store i8* %53, i8** %57, align 8, !dbg !4631
  ret void, !dbg !4632
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i1 @link_count_optimize_ok(%struct._ftsent*) #3 !dbg !4633 {
  %2 = alloca i1, align 1
  %3 = alloca %struct._ftsent*, align 8
  %4 = alloca %struct.FTS*, align 8
  %5 = alloca %struct.hash_table*, align 8
  %6 = alloca %struct.LCO_ent, align 8
  %7 = alloca %struct.LCO_ent*, align 8
  %8 = alloca i8, align 1
  %9 = alloca %struct.LCO_ent*, align 8
  store %struct._ftsent* %0, %struct._ftsent** %3, align 8
  call void @llvm.dbg.declare(metadata %struct._ftsent** %3, metadata !4636, metadata !DIExpression()), !dbg !4637
  call void @llvm.dbg.declare(metadata %struct.FTS** %4, metadata !4638, metadata !DIExpression()), !dbg !4639
  %10 = load %struct._ftsent*, %struct._ftsent** %3, align 8, !dbg !4640
  %11 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %10, i32 0, i32 10, !dbg !4641
  %12 = load %struct.FTS*, %struct.FTS** %11, align 8, !dbg !4641
  store %struct.FTS* %12, %struct.FTS** %4, align 8, !dbg !4639
  call void @llvm.dbg.declare(metadata %struct.hash_table** %5, metadata !4642, metadata !DIExpression()), !dbg !4645
  %13 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !4646
  %14 = getelementptr inbounds %struct.FTS, %struct.FTS* %13, i32 0, i32 11, !dbg !4647
  %15 = load %struct.hash_table*, %struct.hash_table** %14, align 8, !dbg !4647
  store %struct.hash_table* %15, %struct.hash_table** %5, align 8, !dbg !4645
  call void @llvm.dbg.declare(metadata %struct.LCO_ent* %6, metadata !4648, metadata !DIExpression()), !dbg !4653
  call void @llvm.dbg.declare(metadata %struct.LCO_ent** %7, metadata !4654, metadata !DIExpression()), !dbg !4656
  call void @llvm.dbg.declare(metadata i8* %8, metadata !4657, metadata !DIExpression()), !dbg !4658
  call void @llvm.dbg.declare(metadata %struct.LCO_ent** %9, metadata !4659, metadata !DIExpression()), !dbg !4660
  %16 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !4661
  %17 = getelementptr inbounds %struct.FTS, %struct.FTS* %16, i32 0, i32 10, !dbg !4661
  %18 = load i32, i32* %17, align 8, !dbg !4661
  %19 = and i32 %18, 512, !dbg !4661
  %20 = icmp ne i32 %19, 0, !dbg !4661
  br i1 %20, label %22, label %21, !dbg !4663

; <label>:21:                                     ; preds = %1
  store i1 false, i1* %2, align 1, !dbg !4664
  br label %95, !dbg !4664

; <label>:22:                                     ; preds = %1
  %23 = load %struct.hash_table*, %struct.hash_table** %5, align 8, !dbg !4665
  %24 = icmp eq %struct.hash_table* %23, null, !dbg !4667
  br i1 %24, label %25, label %33, !dbg !4668

; <label>:25:                                     ; preds = %22
  %26 = call %struct.hash_table* @hash_initialize(i64 13, %struct.hash_tuning* null, i64 (i8*, i64)* @LCO_hash, i1 (i8*, i8*)* @LCO_compare, void (i8*)* @free), !dbg !4669
  %27 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !4671
  %28 = getelementptr inbounds %struct.FTS, %struct.FTS* %27, i32 0, i32 11, !dbg !4672
  store %struct.hash_table* %26, %struct.hash_table** %28, align 8, !dbg !4673
  store %struct.hash_table* %26, %struct.hash_table** %5, align 8, !dbg !4674
  %29 = load %struct.hash_table*, %struct.hash_table** %5, align 8, !dbg !4675
  %30 = icmp eq %struct.hash_table* %29, null, !dbg !4677
  br i1 %30, label %31, label %32, !dbg !4678

; <label>:31:                                     ; preds = %25
  store i1 false, i1* %2, align 1, !dbg !4679
  br label %95, !dbg !4679

; <label>:32:                                     ; preds = %25
  br label %33, !dbg !4680

; <label>:33:                                     ; preds = %32, %22
  %34 = load %struct._ftsent*, %struct._ftsent** %3, align 8, !dbg !4681
  %35 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %34, i32 0, i32 17, !dbg !4682
  %36 = getelementptr inbounds [1 x %struct.stat], [1 x %struct.stat]* %35, i32 0, i32 0, !dbg !4683
  %37 = getelementptr inbounds %struct.stat, %struct.stat* %36, i32 0, i32 0, !dbg !4683
  %38 = load i64, i64* %37, align 8, !dbg !4683
  %39 = getelementptr inbounds %struct.LCO_ent, %struct.LCO_ent* %6, i32 0, i32 0, !dbg !4684
  store i64 %38, i64* %39, align 8, !dbg !4685
  %40 = load %struct.hash_table*, %struct.hash_table** %5, align 8, !dbg !4686
  %41 = bitcast %struct.LCO_ent* %6 to i8*, !dbg !4687
  %42 = call i8* @hash_lookup(%struct.hash_table* %40, i8* %41), !dbg !4688
  %43 = bitcast i8* %42 to %struct.LCO_ent*, !dbg !4688
  store %struct.LCO_ent* %43, %struct.LCO_ent** %7, align 8, !dbg !4689
  %44 = load %struct.LCO_ent*, %struct.LCO_ent** %7, align 8, !dbg !4690
  %45 = icmp ne %struct.LCO_ent* %44, null, !dbg !4690
  br i1 %45, label %46, label %51, !dbg !4692

; <label>:46:                                     ; preds = %33
  %47 = load %struct.LCO_ent*, %struct.LCO_ent** %7, align 8, !dbg !4693
  %48 = getelementptr inbounds %struct.LCO_ent, %struct.LCO_ent* %47, i32 0, i32 1, !dbg !4694
  %49 = load i8, i8* %48, align 8, !dbg !4694
  %50 = trunc i8 %49 to i1, !dbg !4694
  store i1 %50, i1* %2, align 1, !dbg !4695
  br label %95, !dbg !4695

; <label>:51:                                     ; preds = %33
  %52 = call noalias i8* @malloc(i64 16) #8, !dbg !4696
  %53 = bitcast i8* %52 to %struct.LCO_ent*, !dbg !4696
  store %struct.LCO_ent* %53, %struct.LCO_ent** %9, align 8, !dbg !4697
  %54 = load %struct.LCO_ent*, %struct.LCO_ent** %9, align 8, !dbg !4698
  %55 = icmp eq %struct.LCO_ent* %54, null, !dbg !4700
  br i1 %55, label %56, label %57, !dbg !4701

; <label>:56:                                     ; preds = %51
  store i1 false, i1* %2, align 1, !dbg !4702
  br label %95, !dbg !4702

; <label>:57:                                     ; preds = %51
  %58 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !4703
  %59 = getelementptr inbounds %struct.FTS, %struct.FTS* %58, i32 0, i32 6, !dbg !4704
  %60 = load i32, i32* %59, align 4, !dbg !4704
  %61 = call zeroext i1 @leaf_optimization_applies(i32 %60), !dbg !4705
  %62 = zext i1 %61 to i8, !dbg !4706
  store i8 %62, i8* %8, align 1, !dbg !4706
  %63 = load i8, i8* %8, align 1, !dbg !4707
  %64 = trunc i8 %63 to i1, !dbg !4707
  %65 = load %struct.LCO_ent*, %struct.LCO_ent** %9, align 8, !dbg !4708
  %66 = getelementptr inbounds %struct.LCO_ent, %struct.LCO_ent* %65, i32 0, i32 1, !dbg !4709
  %67 = zext i1 %64 to i8, !dbg !4710
  store i8 %67, i8* %66, align 8, !dbg !4710
  %68 = load %struct._ftsent*, %struct._ftsent** %3, align 8, !dbg !4711
  %69 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %68, i32 0, i32 17, !dbg !4712
  %70 = getelementptr inbounds [1 x %struct.stat], [1 x %struct.stat]* %69, i32 0, i32 0, !dbg !4713
  %71 = getelementptr inbounds %struct.stat, %struct.stat* %70, i32 0, i32 0, !dbg !4713
  %72 = load i64, i64* %71, align 8, !dbg !4713
  %73 = load %struct.LCO_ent*, %struct.LCO_ent** %9, align 8, !dbg !4714
  %74 = getelementptr inbounds %struct.LCO_ent, %struct.LCO_ent* %73, i32 0, i32 0, !dbg !4715
  store i64 %72, i64* %74, align 8, !dbg !4716
  %75 = load %struct.hash_table*, %struct.hash_table** %5, align 8, !dbg !4717
  %76 = load %struct.LCO_ent*, %struct.LCO_ent** %9, align 8, !dbg !4718
  %77 = bitcast %struct.LCO_ent* %76 to i8*, !dbg !4718
  %78 = call i8* @hash_insert(%struct.hash_table* %75, i8* %77), !dbg !4719
  %79 = bitcast i8* %78 to %struct.LCO_ent*, !dbg !4719
  store %struct.LCO_ent* %79, %struct.LCO_ent** %7, align 8, !dbg !4720
  %80 = load %struct.LCO_ent*, %struct.LCO_ent** %7, align 8, !dbg !4721
  %81 = icmp eq %struct.LCO_ent* %80, null, !dbg !4723
  br i1 %81, label %82, label %85, !dbg !4724

; <label>:82:                                     ; preds = %57
  %83 = load %struct.LCO_ent*, %struct.LCO_ent** %9, align 8, !dbg !4725
  %84 = bitcast %struct.LCO_ent* %83 to i8*, !dbg !4725
  call void @free(i8* %84) #8, !dbg !4727
  store i1 false, i1* %2, align 1, !dbg !4728
  br label %95, !dbg !4728

; <label>:85:                                     ; preds = %57
  br label %86, !dbg !4729, !llvm.loop !4730

; <label>:86:                                     ; preds = %85
  %87 = load %struct.LCO_ent*, %struct.LCO_ent** %7, align 8, !dbg !4731
  %88 = load %struct.LCO_ent*, %struct.LCO_ent** %9, align 8, !dbg !4731
  %89 = icmp eq %struct.LCO_ent* %87, %88, !dbg !4731
  br i1 %89, label %91, label %90, !dbg !4734

; <label>:90:                                     ; preds = %86
  call void @abort() #11, !dbg !4731
  unreachable, !dbg !4731

; <label>:91:                                     ; preds = %86
  br label %92, !dbg !4734

; <label>:92:                                     ; preds = %91
  %93 = load i8, i8* %8, align 1, !dbg !4735
  %94 = trunc i8 %93 to i1, !dbg !4735
  store i1 %94, i1* %2, align 1, !dbg !4736
  br label %95, !dbg !4736

; <label>:95:                                     ; preds = %92, %82, %56, %46, %31, %21
  %96 = load i1, i1* %2, align 1, !dbg !4737
  ret i1 %96, !dbg !4737
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i1 @enter_dir(%struct.FTS*, %struct._ftsent*) #3 !dbg !4738 {
  %3 = alloca i1, align 1
  %4 = alloca %struct.FTS*, align 8
  %5 = alloca %struct._ftsent*, align 8
  %6 = alloca %struct.stat*, align 8
  %7 = alloca %struct.Active_dir*, align 8
  %8 = alloca %struct.Active_dir*, align 8
  store %struct.FTS* %0, %struct.FTS** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.FTS** %4, metadata !4741, metadata !DIExpression()), !dbg !4742
  store %struct._ftsent* %1, %struct._ftsent** %5, align 8
  call void @llvm.dbg.declare(metadata %struct._ftsent** %5, metadata !4743, metadata !DIExpression()), !dbg !4744
  %9 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !4745
  %10 = getelementptr inbounds %struct.FTS, %struct.FTS* %9, i32 0, i32 10, !dbg !4747
  %11 = load i32, i32* %10, align 8, !dbg !4747
  %12 = and i32 %11, 258, !dbg !4748
  %13 = icmp ne i32 %12, 0, !dbg !4748
  br i1 %13, label %14, label %63, !dbg !4749

; <label>:14:                                     ; preds = %2
  call void @llvm.dbg.declare(metadata %struct.stat** %6, metadata !4750, metadata !DIExpression()), !dbg !4752
  %15 = load %struct._ftsent*, %struct._ftsent** %5, align 8, !dbg !4753
  %16 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %15, i32 0, i32 17, !dbg !4754
  %17 = getelementptr inbounds [1 x %struct.stat], [1 x %struct.stat]* %16, i32 0, i32 0, !dbg !4753
  store %struct.stat* %17, %struct.stat** %6, align 8, !dbg !4752
  call void @llvm.dbg.declare(metadata %struct.Active_dir** %7, metadata !4755, metadata !DIExpression()), !dbg !4757
  %18 = call noalias i8* @malloc(i64 24) #8, !dbg !4758
  %19 = bitcast i8* %18 to %struct.Active_dir*, !dbg !4758
  store %struct.Active_dir* %19, %struct.Active_dir** %7, align 8, !dbg !4757
  call void @llvm.dbg.declare(metadata %struct.Active_dir** %8, metadata !4759, metadata !DIExpression()), !dbg !4760
  %20 = load %struct.Active_dir*, %struct.Active_dir** %7, align 8, !dbg !4761
  %21 = icmp ne %struct.Active_dir* %20, null, !dbg !4761
  br i1 %21, label %23, label %22, !dbg !4763

; <label>:22:                                     ; preds = %14
  store i1 false, i1* %3, align 1, !dbg !4764
  br label %80, !dbg !4764

; <label>:23:                                     ; preds = %14
  %24 = load %struct.stat*, %struct.stat** %6, align 8, !dbg !4765
  %25 = getelementptr inbounds %struct.stat, %struct.stat* %24, i32 0, i32 0, !dbg !4766
  %26 = load i64, i64* %25, align 8, !dbg !4766
  %27 = load %struct.Active_dir*, %struct.Active_dir** %7, align 8, !dbg !4767
  %28 = getelementptr inbounds %struct.Active_dir, %struct.Active_dir* %27, i32 0, i32 0, !dbg !4768
  store i64 %26, i64* %28, align 8, !dbg !4769
  %29 = load %struct.stat*, %struct.stat** %6, align 8, !dbg !4770
  %30 = getelementptr inbounds %struct.stat, %struct.stat* %29, i32 0, i32 1, !dbg !4771
  %31 = load i64, i64* %30, align 8, !dbg !4771
  %32 = load %struct.Active_dir*, %struct.Active_dir** %7, align 8, !dbg !4772
  %33 = getelementptr inbounds %struct.Active_dir, %struct.Active_dir* %32, i32 0, i32 1, !dbg !4773
  store i64 %31, i64* %33, align 8, !dbg !4774
  %34 = load %struct._ftsent*, %struct._ftsent** %5, align 8, !dbg !4775
  %35 = load %struct.Active_dir*, %struct.Active_dir** %7, align 8, !dbg !4776
  %36 = getelementptr inbounds %struct.Active_dir, %struct.Active_dir* %35, i32 0, i32 2, !dbg !4777
  store %struct._ftsent* %34, %struct._ftsent** %36, align 8, !dbg !4778
  %37 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !4779
  %38 = getelementptr inbounds %struct.FTS, %struct.FTS* %37, i32 0, i32 12, !dbg !4780
  %39 = bitcast %union.anon* %38 to %struct.hash_table**, !dbg !4781
  %40 = load %struct.hash_table*, %struct.hash_table** %39, align 8, !dbg !4781
  %41 = load %struct.Active_dir*, %struct.Active_dir** %7, align 8, !dbg !4782
  %42 = bitcast %struct.Active_dir* %41 to i8*, !dbg !4782
  %43 = call i8* @hash_insert(%struct.hash_table* %40, i8* %42), !dbg !4783
  %44 = bitcast i8* %43 to %struct.Active_dir*, !dbg !4783
  store %struct.Active_dir* %44, %struct.Active_dir** %8, align 8, !dbg !4784
  %45 = load %struct.Active_dir*, %struct.Active_dir** %8, align 8, !dbg !4785
  %46 = load %struct.Active_dir*, %struct.Active_dir** %7, align 8, !dbg !4787
  %47 = icmp ne %struct.Active_dir* %45, %46, !dbg !4788
  br i1 %47, label %48, label %62, !dbg !4789

; <label>:48:                                     ; preds = %23
  %49 = load %struct.Active_dir*, %struct.Active_dir** %7, align 8, !dbg !4790
  %50 = bitcast %struct.Active_dir* %49 to i8*, !dbg !4790
  call void @free(i8* %50) #8, !dbg !4792
  %51 = load %struct.Active_dir*, %struct.Active_dir** %8, align 8, !dbg !4793
  %52 = icmp ne %struct.Active_dir* %51, null, !dbg !4793
  br i1 %52, label %54, label %53, !dbg !4795

; <label>:53:                                     ; preds = %48
  store i1 false, i1* %3, align 1, !dbg !4796
  br label %80, !dbg !4796

; <label>:54:                                     ; preds = %48
  %55 = load %struct.Active_dir*, %struct.Active_dir** %8, align 8, !dbg !4797
  %56 = getelementptr inbounds %struct.Active_dir, %struct.Active_dir* %55, i32 0, i32 2, !dbg !4798
  %57 = load %struct._ftsent*, %struct._ftsent** %56, align 8, !dbg !4798
  %58 = load %struct._ftsent*, %struct._ftsent** %5, align 8, !dbg !4799
  %59 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %58, i32 0, i32 0, !dbg !4800
  store %struct._ftsent* %57, %struct._ftsent** %59, align 8, !dbg !4801
  %60 = load %struct._ftsent*, %struct._ftsent** %5, align 8, !dbg !4802
  %61 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %60, i32 0, i32 14, !dbg !4803
  store i16 2, i16* %61, align 8, !dbg !4804
  br label %62, !dbg !4805

; <label>:62:                                     ; preds = %54, %23
  br label %79, !dbg !4806

; <label>:63:                                     ; preds = %2
  %64 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !4807
  %65 = getelementptr inbounds %struct.FTS, %struct.FTS* %64, i32 0, i32 12, !dbg !4810
  %66 = bitcast %union.anon* %65 to %struct.cycle_check_state**, !dbg !4811
  %67 = load %struct.cycle_check_state*, %struct.cycle_check_state** %66, align 8, !dbg !4811
  %68 = load %struct._ftsent*, %struct._ftsent** %5, align 8, !dbg !4812
  %69 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %68, i32 0, i32 17, !dbg !4813
  %70 = getelementptr inbounds [1 x %struct.stat], [1 x %struct.stat]* %69, i32 0, i32 0, !dbg !4812
  %71 = call zeroext i1 @cycle_check(%struct.cycle_check_state* %67, %struct.stat* %70), !dbg !4814
  br i1 %71, label %72, label %78, !dbg !4815

; <label>:72:                                     ; preds = %63
  %73 = load %struct._ftsent*, %struct._ftsent** %5, align 8, !dbg !4816
  %74 = load %struct._ftsent*, %struct._ftsent** %5, align 8, !dbg !4818
  %75 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %74, i32 0, i32 0, !dbg !4819
  store %struct._ftsent* %73, %struct._ftsent** %75, align 8, !dbg !4820
  %76 = load %struct._ftsent*, %struct._ftsent** %5, align 8, !dbg !4821
  %77 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %76, i32 0, i32 14, !dbg !4822
  store i16 2, i16* %77, align 8, !dbg !4823
  br label %78, !dbg !4824

; <label>:78:                                     ; preds = %72, %63
  br label %79

; <label>:79:                                     ; preds = %78, %62
  store i1 true, i1* %3, align 1, !dbg !4825
  br label %80, !dbg !4825

; <label>:80:                                     ; preds = %79, %53, %22
  %81 = load i1, i1* %3, align 1, !dbg !4826
  ret i1 %81, !dbg !4826
}

; Function Attrs: noinline nounwind uwtable
define internal i64 @LCO_hash(i8*, i64) #3 !dbg !4827 {
  %3 = alloca i8*, align 8
  %4 = alloca i64, align 8
  %5 = alloca %struct.LCO_ent*, align 8
  store i8* %0, i8** %3, align 8
  call void @llvm.dbg.declare(metadata i8** %3, metadata !4828, metadata !DIExpression()), !dbg !4829
  store i64 %1, i64* %4, align 8
  call void @llvm.dbg.declare(metadata i64* %4, metadata !4830, metadata !DIExpression()), !dbg !4831
  call void @llvm.dbg.declare(metadata %struct.LCO_ent** %5, metadata !4832, metadata !DIExpression()), !dbg !4835
  %6 = load i8*, i8** %3, align 8, !dbg !4836
  %7 = bitcast i8* %6 to %struct.LCO_ent*, !dbg !4836
  store %struct.LCO_ent* %7, %struct.LCO_ent** %5, align 8, !dbg !4835
  %8 = load %struct.LCO_ent*, %struct.LCO_ent** %5, align 8, !dbg !4837
  %9 = getelementptr inbounds %struct.LCO_ent, %struct.LCO_ent* %8, i32 0, i32 0, !dbg !4838
  %10 = load i64, i64* %9, align 8, !dbg !4838
  %11 = load i64, i64* %4, align 8, !dbg !4839
  %12 = urem i64 %10, %11, !dbg !4840
  ret i64 %12, !dbg !4841
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i1 @LCO_compare(i8*, i8*) #3 !dbg !4842 {
  %3 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca %struct.LCO_ent*, align 8
  %6 = alloca %struct.LCO_ent*, align 8
  store i8* %0, i8** %3, align 8
  call void @llvm.dbg.declare(metadata i8** %3, metadata !4843, metadata !DIExpression()), !dbg !4844
  store i8* %1, i8** %4, align 8
  call void @llvm.dbg.declare(metadata i8** %4, metadata !4845, metadata !DIExpression()), !dbg !4846
  call void @llvm.dbg.declare(metadata %struct.LCO_ent** %5, metadata !4847, metadata !DIExpression()), !dbg !4848
  %7 = load i8*, i8** %3, align 8, !dbg !4849
  %8 = bitcast i8* %7 to %struct.LCO_ent*, !dbg !4849
  store %struct.LCO_ent* %8, %struct.LCO_ent** %5, align 8, !dbg !4848
  call void @llvm.dbg.declare(metadata %struct.LCO_ent** %6, metadata !4850, metadata !DIExpression()), !dbg !4851
  %9 = load i8*, i8** %4, align 8, !dbg !4852
  %10 = bitcast i8* %9 to %struct.LCO_ent*, !dbg !4852
  store %struct.LCO_ent* %10, %struct.LCO_ent** %6, align 8, !dbg !4851
  %11 = load %struct.LCO_ent*, %struct.LCO_ent** %5, align 8, !dbg !4853
  %12 = getelementptr inbounds %struct.LCO_ent, %struct.LCO_ent* %11, i32 0, i32 0, !dbg !4854
  %13 = load i64, i64* %12, align 8, !dbg !4854
  %14 = load %struct.LCO_ent*, %struct.LCO_ent** %6, align 8, !dbg !4855
  %15 = getelementptr inbounds %struct.LCO_ent, %struct.LCO_ent* %14, i32 0, i32 0, !dbg !4856
  %16 = load i64, i64* %15, align 8, !dbg !4856
  %17 = icmp eq i64 %13, %16, !dbg !4857
  ret i1 %17, !dbg !4858
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i1 @leaf_optimization_applies(i32) #3 !dbg !4859 {
  %2 = alloca i1, align 1
  %3 = alloca i32, align 4
  %4 = alloca %struct.statfs, align 8
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !4862, metadata !DIExpression()), !dbg !4863
  call void @llvm.dbg.declare(metadata %struct.statfs* %4, metadata !4864, metadata !DIExpression()), !dbg !4891
  %5 = load i32, i32* %3, align 4, !dbg !4892
  %6 = call i32 @fstatfs(i32 %5, %struct.statfs* %4) #8, !dbg !4894
  %7 = icmp ne i32 %6, 0, !dbg !4895
  br i1 %7, label %8, label %9, !dbg !4896

; <label>:8:                                      ; preds = %1
  store i1 false, i1* %2, align 1, !dbg !4897
  br label %15, !dbg !4897

; <label>:9:                                      ; preds = %1
  %10 = getelementptr inbounds %struct.statfs, %struct.statfs* %4, i32 0, i32 0, !dbg !4898
  %11 = load i64, i64* %10, align 8, !dbg !4898
  switch i64 %11, label %14 [
    i64 1382369651, label %12
    i64 40864, label %13
  ], !dbg !4899

; <label>:12:                                     ; preds = %9
  store i1 true, i1* %2, align 1, !dbg !4900
  br label %15, !dbg !4900

; <label>:13:                                     ; preds = %9
  br label %14, !dbg !4900

; <label>:14:                                     ; preds = %9, %13
  store i1 false, i1* %2, align 1, !dbg !4902
  br label %15, !dbg !4902

; <label>:15:                                     ; preds = %14, %12, %8
  %16 = load i1, i1* %2, align 1, !dbg !4903
  ret i1 %16, !dbg !4903
}

; Function Attrs: nounwind
declare i32 @fstatfs(i32, %struct.statfs*) #5

; Function Attrs: noinline nounwind uwtable
define internal %struct.__dirstream* @opendirat(i32, i8*) #3 !dbg !4904 {
  %3 = alloca %struct.__dirstream*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i8*, align 8
  %6 = alloca i32, align 4
  %7 = alloca %struct.__dirstream*, align 8
  %8 = alloca i32, align 4
  store i32 %0, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !4907, metadata !DIExpression()), !dbg !4908
  store i8* %1, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !4909, metadata !DIExpression()), !dbg !4910
  call void @llvm.dbg.declare(metadata i32* %6, metadata !4911, metadata !DIExpression()), !dbg !4912
  %9 = load i32, i32* %4, align 4, !dbg !4913
  %10 = load i8*, i8** %5, align 8, !dbg !4914
  %11 = call i32 (i32, i8*, i32, ...) @openat_safer(i32 %9, i8* %10, i32 67840), !dbg !4915
  store i32 %11, i32* %6, align 4, !dbg !4912
  call void @llvm.dbg.declare(metadata %struct.__dirstream** %7, metadata !4916, metadata !DIExpression()), !dbg !4917
  %12 = load i32, i32* %6, align 4, !dbg !4918
  %13 = icmp slt i32 %12, 0, !dbg !4920
  br i1 %13, label %14, label %15, !dbg !4921

; <label>:14:                                     ; preds = %2
  store %struct.__dirstream* null, %struct.__dirstream** %3, align 8, !dbg !4922
  br label %31, !dbg !4922

; <label>:15:                                     ; preds = %2
  %16 = load i32, i32* %6, align 4, !dbg !4923
  %17 = call i32 @set_cloexec_flag(i32 %16, i1 zeroext true), !dbg !4924
  %18 = load i32, i32* %6, align 4, !dbg !4925
  %19 = call %struct.__dirstream* @rpl_fdopendir(i32 %18), !dbg !4926
  store %struct.__dirstream* %19, %struct.__dirstream** %7, align 8, !dbg !4927
  %20 = load %struct.__dirstream*, %struct.__dirstream** %7, align 8, !dbg !4928
  %21 = icmp eq %struct.__dirstream* %20, null, !dbg !4930
  br i1 %21, label %22, label %29, !dbg !4931

; <label>:22:                                     ; preds = %15
  call void @llvm.dbg.declare(metadata i32* %8, metadata !4932, metadata !DIExpression()), !dbg !4934
  %23 = call i32* @__errno_location() #14, !dbg !4935
  %24 = load i32, i32* %23, align 4, !dbg !4935
  store i32 %24, i32* %8, align 4, !dbg !4934
  %25 = load i32, i32* %6, align 4, !dbg !4936
  %26 = call i32 @close(i32 %25), !dbg !4937
  %27 = load i32, i32* %8, align 4, !dbg !4938
  %28 = call i32* @__errno_location() #14, !dbg !4939
  store i32 %27, i32* %28, align 4, !dbg !4940
  br label %29, !dbg !4941

; <label>:29:                                     ; preds = %22, %15
  %30 = load %struct.__dirstream*, %struct.__dirstream** %7, align 8, !dbg !4942
  store %struct.__dirstream* %30, %struct.__dirstream** %3, align 8, !dbg !4943
  br label %31, !dbg !4943

; <label>:31:                                     ; preds = %29, %14
  %32 = load %struct.__dirstream*, %struct.__dirstream** %3, align 8, !dbg !4944
  ret %struct.__dirstream* %32, !dbg !4944
}

; Function Attrs: nounwind
declare i32 @dirfd(%struct.__dirstream*) #5

declare i32 @closedir(%struct.__dirstream*) #2

declare %struct.dirent* @readdir(%struct.__dirstream*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @set_stat_type(%struct.stat*, i32) #3 !dbg !4945 {
  %3 = alloca %struct.stat*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  store %struct.stat* %0, %struct.stat** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.stat** %3, metadata !4948, metadata !DIExpression()), !dbg !4949
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !4950, metadata !DIExpression()), !dbg !4951
  call void @llvm.dbg.declare(metadata i32* %5, metadata !4952, metadata !DIExpression()), !dbg !4954
  %6 = load i32, i32* %4, align 4, !dbg !4955
  switch i32 %6, label %14 [
    i32 6, label %7
    i32 2, label %8
    i32 4, label %9
    i32 1, label %10
    i32 10, label %11
    i32 8, label %12
    i32 12, label %13
  ], !dbg !4956

; <label>:7:                                      ; preds = %2
  store i32 24576, i32* %5, align 4, !dbg !4957
  br label %15, !dbg !4959

; <label>:8:                                      ; preds = %2
  store i32 8192, i32* %5, align 4, !dbg !4960
  br label %15, !dbg !4961

; <label>:9:                                      ; preds = %2
  store i32 16384, i32* %5, align 4, !dbg !4962
  br label %15, !dbg !4963

; <label>:10:                                     ; preds = %2
  store i32 4096, i32* %5, align 4, !dbg !4964
  br label %15, !dbg !4965

; <label>:11:                                     ; preds = %2
  store i32 40960, i32* %5, align 4, !dbg !4966
  br label %15, !dbg !4967

; <label>:12:                                     ; preds = %2
  store i32 32768, i32* %5, align 4, !dbg !4968
  br label %15, !dbg !4969

; <label>:13:                                     ; preds = %2
  store i32 49152, i32* %5, align 4, !dbg !4970
  br label %15, !dbg !4971

; <label>:14:                                     ; preds = %2
  store i32 0, i32* %5, align 4, !dbg !4972
  br label %15, !dbg !4973

; <label>:15:                                     ; preds = %14, %13, %12, %11, %10, %9, %8, %7
  %16 = load i32, i32* %5, align 4, !dbg !4974
  %17 = load %struct.stat*, %struct.stat** %3, align 8, !dbg !4975
  %18 = getelementptr inbounds %struct.stat, %struct.stat* %17, i32 0, i32 3, !dbg !4976
  store i32 %16, i32* %18, align 8, !dbg !4977
  ret void, !dbg !4978
}

; Function Attrs: noinline nounwind uwtable
define internal void @fts_padjust(%struct.FTS*, %struct._ftsent*) #3 !dbg !4979 {
  %3 = alloca %struct.FTS*, align 8
  %4 = alloca %struct._ftsent*, align 8
  %5 = alloca %struct._ftsent*, align 8
  %6 = alloca i8*, align 8
  store %struct.FTS* %0, %struct.FTS** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.FTS** %3, metadata !4980, metadata !DIExpression()), !dbg !4981
  store %struct._ftsent* %1, %struct._ftsent** %4, align 8
  call void @llvm.dbg.declare(metadata %struct._ftsent** %4, metadata !4982, metadata !DIExpression()), !dbg !4983
  call void @llvm.dbg.declare(metadata %struct._ftsent** %5, metadata !4984, metadata !DIExpression()), !dbg !4985
  call void @llvm.dbg.declare(metadata i8** %6, metadata !4986, metadata !DIExpression()), !dbg !4987
  %7 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !4988
  %8 = getelementptr inbounds %struct.FTS, %struct.FTS* %7, i32 0, i32 4, !dbg !4989
  %9 = load i8*, i8** %8, align 8, !dbg !4989
  store i8* %9, i8** %6, align 8, !dbg !4987
  %10 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !4990
  %11 = getelementptr inbounds %struct.FTS, %struct.FTS* %10, i32 0, i32 1, !dbg !4992
  %12 = load %struct._ftsent*, %struct._ftsent** %11, align 8, !dbg !4992
  store %struct._ftsent* %12, %struct._ftsent** %5, align 8, !dbg !4993
  br label %13, !dbg !4994

; <label>:13:                                     ; preds = %44, %2
  %14 = load %struct._ftsent*, %struct._ftsent** %5, align 8, !dbg !4995
  %15 = icmp ne %struct._ftsent* %14, null, !dbg !4997
  br i1 %15, label %16, label %48, !dbg !4997

; <label>:16:                                     ; preds = %13
  br label %17, !dbg !4998, !llvm.loop !4999

; <label>:17:                                     ; preds = %16
  %18 = load %struct._ftsent*, %struct._ftsent** %5, align 8, !dbg !5000
  %19 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %18, i32 0, i32 5, !dbg !5000
  %20 = load i8*, i8** %19, align 8, !dbg !5000
  %21 = load %struct._ftsent*, %struct._ftsent** %5, align 8, !dbg !5000
  %22 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %21, i32 0, i32 18, !dbg !5000
  %23 = getelementptr inbounds [1 x i8], [1 x i8]* %22, i32 0, i32 0, !dbg !5000
  %24 = icmp ne i8* %20, %23, !dbg !5000
  br i1 %24, label %25, label %39, !dbg !5003

; <label>:25:                                     ; preds = %17
  %26 = load i8*, i8** %6, align 8, !dbg !5004
  %27 = load %struct._ftsent*, %struct._ftsent** %5, align 8, !dbg !5004
  %28 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %27, i32 0, i32 5, !dbg !5004
  %29 = load i8*, i8** %28, align 8, !dbg !5004
  %30 = load %struct._ftsent*, %struct._ftsent** %5, align 8, !dbg !5004
  %31 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %30, i32 0, i32 6, !dbg !5004
  %32 = load i8*, i8** %31, align 8, !dbg !5004
  %33 = ptrtoint i8* %29 to i64, !dbg !5004
  %34 = ptrtoint i8* %32 to i64, !dbg !5004
  %35 = sub i64 %33, %34, !dbg !5004
  %36 = getelementptr inbounds i8, i8* %26, i64 %35, !dbg !5004
  %37 = load %struct._ftsent*, %struct._ftsent** %5, align 8, !dbg !5004
  %38 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %37, i32 0, i32 5, !dbg !5004
  store i8* %36, i8** %38, align 8, !dbg !5004
  br label %39, !dbg !5004

; <label>:39:                                     ; preds = %25, %17
  %40 = load i8*, i8** %6, align 8, !dbg !5003
  %41 = load %struct._ftsent*, %struct._ftsent** %5, align 8, !dbg !5003
  %42 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %41, i32 0, i32 6, !dbg !5003
  store i8* %40, i8** %42, align 8, !dbg !5003
  br label %43, !dbg !5003

; <label>:43:                                     ; preds = %39
  br label %44, !dbg !5003

; <label>:44:                                     ; preds = %43
  %45 = load %struct._ftsent*, %struct._ftsent** %5, align 8, !dbg !5006
  %46 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %45, i32 0, i32 2, !dbg !5007
  %47 = load %struct._ftsent*, %struct._ftsent** %46, align 8, !dbg !5007
  store %struct._ftsent* %47, %struct._ftsent** %5, align 8, !dbg !5008
  br label %13, !dbg !5009, !llvm.loop !5010

; <label>:48:                                     ; preds = %13
  %49 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !5012
  store %struct._ftsent* %49, %struct._ftsent** %5, align 8, !dbg !5014
  br label %50, !dbg !5015

; <label>:50:                                     ; preds = %95, %48
  %51 = load %struct._ftsent*, %struct._ftsent** %5, align 8, !dbg !5016
  %52 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %51, i32 0, i32 11, !dbg !5018
  %53 = load i64, i64* %52, align 8, !dbg !5018
  %54 = icmp sge i64 %53, 0, !dbg !5019
  br i1 %54, label %55, label %97, !dbg !5020

; <label>:55:                                     ; preds = %50
  br label %56, !dbg !5021, !llvm.loop !5023

; <label>:56:                                     ; preds = %55
  %57 = load %struct._ftsent*, %struct._ftsent** %5, align 8, !dbg !5024
  %58 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %57, i32 0, i32 5, !dbg !5024
  %59 = load i8*, i8** %58, align 8, !dbg !5024
  %60 = load %struct._ftsent*, %struct._ftsent** %5, align 8, !dbg !5024
  %61 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %60, i32 0, i32 18, !dbg !5024
  %62 = getelementptr inbounds [1 x i8], [1 x i8]* %61, i32 0, i32 0, !dbg !5024
  %63 = icmp ne i8* %59, %62, !dbg !5024
  br i1 %63, label %64, label %78, !dbg !5027

; <label>:64:                                     ; preds = %56
  %65 = load i8*, i8** %6, align 8, !dbg !5028
  %66 = load %struct._ftsent*, %struct._ftsent** %5, align 8, !dbg !5028
  %67 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %66, i32 0, i32 5, !dbg !5028
  %68 = load i8*, i8** %67, align 8, !dbg !5028
  %69 = load %struct._ftsent*, %struct._ftsent** %5, align 8, !dbg !5028
  %70 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %69, i32 0, i32 6, !dbg !5028
  %71 = load i8*, i8** %70, align 8, !dbg !5028
  %72 = ptrtoint i8* %68 to i64, !dbg !5028
  %73 = ptrtoint i8* %71 to i64, !dbg !5028
  %74 = sub i64 %72, %73, !dbg !5028
  %75 = getelementptr inbounds i8, i8* %65, i64 %74, !dbg !5028
  %76 = load %struct._ftsent*, %struct._ftsent** %5, align 8, !dbg !5028
  %77 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %76, i32 0, i32 5, !dbg !5028
  store i8* %75, i8** %77, align 8, !dbg !5028
  br label %78, !dbg !5028

; <label>:78:                                     ; preds = %64, %56
  %79 = load i8*, i8** %6, align 8, !dbg !5027
  %80 = load %struct._ftsent*, %struct._ftsent** %5, align 8, !dbg !5027
  %81 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %80, i32 0, i32 6, !dbg !5027
  store i8* %79, i8** %81, align 8, !dbg !5027
  br label %82, !dbg !5027

; <label>:82:                                     ; preds = %78
  %83 = load %struct._ftsent*, %struct._ftsent** %5, align 8, !dbg !5030
  %84 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %83, i32 0, i32 2, !dbg !5031
  %85 = load %struct._ftsent*, %struct._ftsent** %84, align 8, !dbg !5031
  %86 = icmp ne %struct._ftsent* %85, null, !dbg !5030
  br i1 %86, label %87, label %91, !dbg !5030

; <label>:87:                                     ; preds = %82
  %88 = load %struct._ftsent*, %struct._ftsent** %5, align 8, !dbg !5032
  %89 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %88, i32 0, i32 2, !dbg !5033
  %90 = load %struct._ftsent*, %struct._ftsent** %89, align 8, !dbg !5033
  br label %95, !dbg !5030

; <label>:91:                                     ; preds = %82
  %92 = load %struct._ftsent*, %struct._ftsent** %5, align 8, !dbg !5034
  %93 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %92, i32 0, i32 1, !dbg !5035
  %94 = load %struct._ftsent*, %struct._ftsent** %93, align 8, !dbg !5035
  br label %95, !dbg !5030

; <label>:95:                                     ; preds = %91, %87
  %96 = phi %struct._ftsent* [ %90, %87 ], [ %94, %91 ], !dbg !5030
  store %struct._ftsent* %96, %struct._ftsent** %5, align 8, !dbg !5036
  br label %50, !dbg !5037, !llvm.loop !5038

; <label>:97:                                     ; preds = %50
  ret void, !dbg !5040
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i1 @dirent_inode_sort_may_be_useful(i32) #3 !dbg !5041 {
  %2 = alloca i1, align 1
  %3 = alloca i32, align 4
  %4 = alloca %struct.statfs, align 8
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !5042, metadata !DIExpression()), !dbg !5043
  call void @llvm.dbg.declare(metadata %struct.statfs* %4, metadata !5044, metadata !DIExpression()), !dbg !5045
  %5 = load i32, i32* %3, align 4, !dbg !5046
  %6 = call i32 @fstatfs(i32 %5, %struct.statfs* %4) #8, !dbg !5048
  %7 = icmp ne i32 %6, 0, !dbg !5049
  br i1 %7, label %8, label %9, !dbg !5050

; <label>:8:                                      ; preds = %1
  store i1 true, i1* %2, align 1, !dbg !5051
  br label %14, !dbg !5051

; <label>:9:                                      ; preds = %1
  %10 = getelementptr inbounds %struct.statfs, %struct.statfs* %4, i32 0, i32 0, !dbg !5052
  %11 = load i64, i64* %10, align 8, !dbg !5052
  switch i64 %11, label %13 [
    i64 16914836, label %12
    i64 26985, label %12
  ], !dbg !5053

; <label>:12:                                     ; preds = %9, %9
  store i1 false, i1* %2, align 1, !dbg !5054
  br label %14, !dbg !5054

; <label>:13:                                     ; preds = %9
  store i1 true, i1* %2, align 1, !dbg !5056
  br label %14, !dbg !5056

; <label>:14:                                     ; preds = %13, %12, %8
  %15 = load i1, i1* %2, align 1, !dbg !5057
  ret i1 %15, !dbg !5057
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @fts_compare_ino(%struct._ftsent**, %struct._ftsent**) #3 !dbg !5058 {
  %3 = alloca %struct._ftsent**, align 8
  %4 = alloca %struct._ftsent**, align 8
  store %struct._ftsent** %0, %struct._ftsent*** %3, align 8
  call void @llvm.dbg.declare(metadata %struct._ftsent*** %3, metadata !5059, metadata !DIExpression()), !dbg !5060
  store %struct._ftsent** %1, %struct._ftsent*** %4, align 8
  call void @llvm.dbg.declare(metadata %struct._ftsent*** %4, metadata !5061, metadata !DIExpression()), !dbg !5062
  %5 = load %struct._ftsent**, %struct._ftsent*** %3, align 8, !dbg !5063
  %6 = getelementptr inbounds %struct._ftsent*, %struct._ftsent** %5, i64 0, !dbg !5063
  %7 = load %struct._ftsent*, %struct._ftsent** %6, align 8, !dbg !5063
  %8 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %7, i32 0, i32 17, !dbg !5064
  %9 = getelementptr inbounds [1 x %struct.stat], [1 x %struct.stat]* %8, i32 0, i32 0, !dbg !5065
  %10 = getelementptr inbounds %struct.stat, %struct.stat* %9, i32 0, i32 1, !dbg !5065
  %11 = load i64, i64* %10, align 8, !dbg !5065
  %12 = load %struct._ftsent**, %struct._ftsent*** %4, align 8, !dbg !5066
  %13 = getelementptr inbounds %struct._ftsent*, %struct._ftsent** %12, i64 0, !dbg !5066
  %14 = load %struct._ftsent*, %struct._ftsent** %13, align 8, !dbg !5066
  %15 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %14, i32 0, i32 17, !dbg !5067
  %16 = getelementptr inbounds [1 x %struct.stat], [1 x %struct.stat]* %15, i32 0, i32 0, !dbg !5068
  %17 = getelementptr inbounds %struct.stat, %struct.stat* %16, i32 0, i32 1, !dbg !5068
  %18 = load i64, i64* %17, align 8, !dbg !5068
  %19 = icmp ult i64 %11, %18, !dbg !5069
  br i1 %19, label %20, label %21, !dbg !5063

; <label>:20:                                     ; preds = %2
  br label %39, !dbg !5063

; <label>:21:                                     ; preds = %2
  %22 = load %struct._ftsent**, %struct._ftsent*** %4, align 8, !dbg !5070
  %23 = getelementptr inbounds %struct._ftsent*, %struct._ftsent** %22, i64 0, !dbg !5070
  %24 = load %struct._ftsent*, %struct._ftsent** %23, align 8, !dbg !5070
  %25 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %24, i32 0, i32 17, !dbg !5071
  %26 = getelementptr inbounds [1 x %struct.stat], [1 x %struct.stat]* %25, i32 0, i32 0, !dbg !5072
  %27 = getelementptr inbounds %struct.stat, %struct.stat* %26, i32 0, i32 1, !dbg !5072
  %28 = load i64, i64* %27, align 8, !dbg !5072
  %29 = load %struct._ftsent**, %struct._ftsent*** %3, align 8, !dbg !5073
  %30 = getelementptr inbounds %struct._ftsent*, %struct._ftsent** %29, i64 0, !dbg !5073
  %31 = load %struct._ftsent*, %struct._ftsent** %30, align 8, !dbg !5073
  %32 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %31, i32 0, i32 17, !dbg !5074
  %33 = getelementptr inbounds [1 x %struct.stat], [1 x %struct.stat]* %32, i32 0, i32 0, !dbg !5075
  %34 = getelementptr inbounds %struct.stat, %struct.stat* %33, i32 0, i32 1, !dbg !5075
  %35 = load i64, i64* %34, align 8, !dbg !5075
  %36 = icmp ult i64 %28, %35, !dbg !5076
  %37 = zext i1 %36 to i64, !dbg !5070
  %38 = select i1 %36, i32 1, i32 0, !dbg !5070
  br label %39, !dbg !5063

; <label>:39:                                     ; preds = %21, %20
  %40 = phi i32 [ -1, %20 ], [ %38, %21 ], !dbg !5063
  ret i32 %40, !dbg !5077
}

; Function Attrs: noinline nounwind uwtable
define i32 @fts_set(%struct.FTS*, %struct._ftsent*, i32) #3 !dbg !5078 {
  %4 = alloca i32, align 4
  %5 = alloca %struct.FTS*, align 8
  %6 = alloca %struct._ftsent*, align 8
  %7 = alloca i32, align 4
  store %struct.FTS* %0, %struct.FTS** %5, align 8
  call void @llvm.dbg.declare(metadata %struct.FTS** %5, metadata !5081, metadata !DIExpression()), !dbg !5082
  store %struct._ftsent* %1, %struct._ftsent** %6, align 8
  call void @llvm.dbg.declare(metadata %struct._ftsent** %6, metadata !5083, metadata !DIExpression()), !dbg !5084
  store i32 %2, i32* %7, align 4
  call void @llvm.dbg.declare(metadata i32* %7, metadata !5085, metadata !DIExpression()), !dbg !5086
  %8 = load i32, i32* %7, align 4, !dbg !5087
  %9 = icmp ne i32 %8, 0, !dbg !5089
  br i1 %9, label %10, label %24, !dbg !5090

; <label>:10:                                     ; preds = %3
  %11 = load i32, i32* %7, align 4, !dbg !5091
  %12 = icmp ne i32 %11, 1, !dbg !5092
  br i1 %12, label %13, label %24, !dbg !5093

; <label>:13:                                     ; preds = %10
  %14 = load i32, i32* %7, align 4, !dbg !5094
  %15 = icmp ne i32 %14, 2, !dbg !5095
  br i1 %15, label %16, label %24, !dbg !5096

; <label>:16:                                     ; preds = %13
  %17 = load i32, i32* %7, align 4, !dbg !5097
  %18 = icmp ne i32 %17, 3, !dbg !5098
  br i1 %18, label %19, label %24, !dbg !5099

; <label>:19:                                     ; preds = %16
  %20 = load i32, i32* %7, align 4, !dbg !5100
  %21 = icmp ne i32 %20, 4, !dbg !5101
  br i1 %21, label %22, label %24, !dbg !5102

; <label>:22:                                     ; preds = %19
  %23 = call i32* @__errno_location() #14, !dbg !5103
  store i32 22, i32* %23, align 4, !dbg !5103
  store i32 1, i32* %4, align 4, !dbg !5105
  br label %29, !dbg !5105

; <label>:24:                                     ; preds = %19, %16, %13, %10, %3
  %25 = load i32, i32* %7, align 4, !dbg !5106
  %26 = trunc i32 %25 to i16, !dbg !5106
  %27 = load %struct._ftsent*, %struct._ftsent** %6, align 8, !dbg !5107
  %28 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %27, i32 0, i32 16, !dbg !5108
  store i16 %26, i16* %28, align 4, !dbg !5109
  store i32 0, i32* %4, align 4, !dbg !5110
  br label %29, !dbg !5110

; <label>:29:                                     ; preds = %24, %22
  %30 = load i32, i32* %4, align 4, !dbg !5111
  ret i32 %30, !dbg !5111
}

; Function Attrs: noinline nounwind uwtable
define %struct._ftsent* @fts_children(%struct.FTS*, i32) #3 !dbg !5112 {
  %3 = alloca %struct._ftsent*, align 8
  %4 = alloca %struct.FTS*, align 8
  %5 = alloca i32, align 4
  %6 = alloca %struct._ftsent*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  store %struct.FTS* %0, %struct.FTS** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.FTS** %4, metadata !5113, metadata !DIExpression()), !dbg !5114
  store i32 %1, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !5115, metadata !DIExpression()), !dbg !5116
  call void @llvm.dbg.declare(metadata %struct._ftsent** %6, metadata !5117, metadata !DIExpression()), !dbg !5118
  call void @llvm.dbg.declare(metadata i32* %7, metadata !5119, metadata !DIExpression()), !dbg !5120
  %9 = load i32, i32* %5, align 4, !dbg !5121
  %10 = icmp ne i32 %9, 0, !dbg !5123
  br i1 %10, label %11, label %16, !dbg !5124

; <label>:11:                                     ; preds = %2
  %12 = load i32, i32* %5, align 4, !dbg !5125
  %13 = icmp ne i32 %12, 4096, !dbg !5126
  br i1 %13, label %14, label %16, !dbg !5127

; <label>:14:                                     ; preds = %11
  %15 = call i32* @__errno_location() #14, !dbg !5128
  store i32 22, i32* %15, align 4, !dbg !5128
  store %struct._ftsent* null, %struct._ftsent** %3, align 8, !dbg !5130
  br label %126, !dbg !5130

; <label>:16:                                     ; preds = %11, %2
  %17 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !5131
  %18 = getelementptr inbounds %struct.FTS, %struct.FTS* %17, i32 0, i32 0, !dbg !5132
  %19 = load %struct._ftsent*, %struct._ftsent** %18, align 8, !dbg !5132
  store %struct._ftsent* %19, %struct._ftsent** %6, align 8, !dbg !5133
  %20 = call i32* @__errno_location() #14, !dbg !5134
  store i32 0, i32* %20, align 4, !dbg !5134
  %21 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !5135
  %22 = getelementptr inbounds %struct.FTS, %struct.FTS* %21, i32 0, i32 10, !dbg !5135
  %23 = load i32, i32* %22, align 8, !dbg !5135
  %24 = and i32 %23, 8192, !dbg !5135
  %25 = icmp ne i32 %24, 0, !dbg !5135
  br i1 %25, label %26, label %27, !dbg !5137

; <label>:26:                                     ; preds = %16
  store %struct._ftsent* null, %struct._ftsent** %3, align 8, !dbg !5138
  br label %126, !dbg !5138

; <label>:27:                                     ; preds = %16
  %28 = load %struct._ftsent*, %struct._ftsent** %6, align 8, !dbg !5139
  %29 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %28, i32 0, i32 14, !dbg !5141
  %30 = load i16, i16* %29, align 8, !dbg !5141
  %31 = zext i16 %30 to i32, !dbg !5139
  %32 = icmp eq i32 %31, 9, !dbg !5142
  br i1 %32, label %33, label %37, !dbg !5143

; <label>:33:                                     ; preds = %27
  %34 = load %struct._ftsent*, %struct._ftsent** %6, align 8, !dbg !5144
  %35 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %34, i32 0, i32 2, !dbg !5145
  %36 = load %struct._ftsent*, %struct._ftsent** %35, align 8, !dbg !5145
  store %struct._ftsent* %36, %struct._ftsent** %3, align 8, !dbg !5146
  br label %126, !dbg !5146

; <label>:37:                                     ; preds = %27
  %38 = load %struct._ftsent*, %struct._ftsent** %6, align 8, !dbg !5147
  %39 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %38, i32 0, i32 14, !dbg !5149
  %40 = load i16, i16* %39, align 8, !dbg !5149
  %41 = zext i16 %40 to i32, !dbg !5147
  %42 = icmp ne i32 %41, 1, !dbg !5150
  br i1 %42, label %43, label %44, !dbg !5151

; <label>:43:                                     ; preds = %37
  store %struct._ftsent* null, %struct._ftsent** %3, align 8, !dbg !5152
  br label %126, !dbg !5152

; <label>:44:                                     ; preds = %37
  %45 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !5153
  %46 = getelementptr inbounds %struct.FTS, %struct.FTS* %45, i32 0, i32 1, !dbg !5155
  %47 = load %struct._ftsent*, %struct._ftsent** %46, align 8, !dbg !5155
  %48 = icmp ne %struct._ftsent* %47, null, !dbg !5156
  br i1 %48, label %49, label %53, !dbg !5157

; <label>:49:                                     ; preds = %44
  %50 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !5158
  %51 = getelementptr inbounds %struct.FTS, %struct.FTS* %50, i32 0, i32 1, !dbg !5159
  %52 = load %struct._ftsent*, %struct._ftsent** %51, align 8, !dbg !5159
  call void @fts_lfree(%struct._ftsent* %52), !dbg !5160
  br label %53, !dbg !5160

; <label>:53:                                     ; preds = %49, %44
  %54 = load i32, i32* %5, align 4, !dbg !5161
  %55 = icmp eq i32 %54, 4096, !dbg !5163
  br i1 %55, label %56, label %61, !dbg !5164

; <label>:56:                                     ; preds = %53
  %57 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !5165
  %58 = getelementptr inbounds %struct.FTS, %struct.FTS* %57, i32 0, i32 10, !dbg !5165
  %59 = load i32, i32* %58, align 8, !dbg !5165
  %60 = or i32 %59, 4096, !dbg !5165
  store i32 %60, i32* %58, align 8, !dbg !5165
  store i32 2, i32* %5, align 4, !dbg !5167
  br label %62, !dbg !5168

; <label>:61:                                     ; preds = %53
  store i32 1, i32* %5, align 4, !dbg !5169
  br label %62

; <label>:62:                                     ; preds = %61, %56
  %63 = load %struct._ftsent*, %struct._ftsent** %6, align 8, !dbg !5170
  %64 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %63, i32 0, i32 11, !dbg !5172
  %65 = load i64, i64* %64, align 8, !dbg !5172
  %66 = icmp ne i64 %65, 0, !dbg !5173
  br i1 %66, label %81, label %67, !dbg !5174

; <label>:67:                                     ; preds = %62
  %68 = load %struct._ftsent*, %struct._ftsent** %6, align 8, !dbg !5175
  %69 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %68, i32 0, i32 5, !dbg !5176
  %70 = load i8*, i8** %69, align 8, !dbg !5176
  %71 = getelementptr inbounds i8, i8* %70, i64 0, !dbg !5175
  %72 = load i8, i8* %71, align 1, !dbg !5175
  %73 = sext i8 %72 to i32, !dbg !5175
  %74 = icmp eq i32 %73, 47, !dbg !5177
  br i1 %74, label %81, label %75, !dbg !5178

; <label>:75:                                     ; preds = %67
  %76 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !5179
  %77 = getelementptr inbounds %struct.FTS, %struct.FTS* %76, i32 0, i32 10, !dbg !5179
  %78 = load i32, i32* %77, align 8, !dbg !5179
  %79 = and i32 %78, 4, !dbg !5179
  %80 = icmp ne i32 %79, 0, !dbg !5179
  br i1 %80, label %81, label %87, !dbg !5180

; <label>:81:                                     ; preds = %75, %67, %62
  %82 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !5181
  %83 = load i32, i32* %5, align 4, !dbg !5182
  %84 = call %struct._ftsent* @fts_build(%struct.FTS* %82, i32 %83), !dbg !5183
  %85 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !5184
  %86 = getelementptr inbounds %struct.FTS, %struct.FTS* %85, i32 0, i32 1, !dbg !5185
  store %struct._ftsent* %84, %struct._ftsent** %86, align 8, !dbg !5186
  store %struct._ftsent* %84, %struct._ftsent** %3, align 8, !dbg !5187
  br label %126, !dbg !5187

; <label>:87:                                     ; preds = %75
  %88 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !5188
  %89 = call i32 @diropen(%struct.FTS* %88, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.112, i32 0, i32 0)), !dbg !5190
  store i32 %89, i32* %7, align 4, !dbg !5191
  %90 = icmp slt i32 %89, 0, !dbg !5192
  br i1 %90, label %91, label %94, !dbg !5193

; <label>:91:                                     ; preds = %87
  %92 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !5194
  %93 = getelementptr inbounds %struct.FTS, %struct.FTS* %92, i32 0, i32 1, !dbg !5195
  store %struct._ftsent* null, %struct._ftsent** %93, align 8, !dbg !5196
  store %struct._ftsent* null, %struct._ftsent** %3, align 8, !dbg !5197
  br label %126, !dbg !5197

; <label>:94:                                     ; preds = %87
  %95 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !5198
  %96 = load i32, i32* %5, align 4, !dbg !5199
  %97 = call %struct._ftsent* @fts_build(%struct.FTS* %95, i32 %96), !dbg !5200
  %98 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !5201
  %99 = getelementptr inbounds %struct.FTS, %struct.FTS* %98, i32 0, i32 1, !dbg !5202
  store %struct._ftsent* %97, %struct._ftsent** %99, align 8, !dbg !5203
  %100 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !5204
  %101 = getelementptr inbounds %struct.FTS, %struct.FTS* %100, i32 0, i32 10, !dbg !5204
  %102 = load i32, i32* %101, align 8, !dbg !5204
  %103 = and i32 %102, 512, !dbg !5204
  %104 = icmp ne i32 %103, 0, !dbg !5204
  br i1 %104, label %105, label %108, !dbg !5206

; <label>:105:                                    ; preds = %94
  %106 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !5207
  %107 = load i32, i32* %7, align 4, !dbg !5209
  call void @cwd_advance_fd(%struct.FTS* %106, i32 %107, i1 zeroext true), !dbg !5210
  br label %122, !dbg !5211

; <label>:108:                                    ; preds = %94
  %109 = load i32, i32* %7, align 4, !dbg !5212
  %110 = call i32 @fchdir(i32 %109) #8, !dbg !5215
  %111 = icmp ne i32 %110, 0, !dbg !5215
  br i1 %111, label %112, label %119, !dbg !5216

; <label>:112:                                    ; preds = %108
  call void @llvm.dbg.declare(metadata i32* %8, metadata !5217, metadata !DIExpression()), !dbg !5219
  %113 = call i32* @__errno_location() #14, !dbg !5220
  %114 = load i32, i32* %113, align 4, !dbg !5220
  store i32 %114, i32* %8, align 4, !dbg !5219
  %115 = load i32, i32* %7, align 4, !dbg !5221
  %116 = call i32 @close(i32 %115), !dbg !5222
  %117 = load i32, i32* %8, align 4, !dbg !5223
  %118 = call i32* @__errno_location() #14, !dbg !5223
  store i32 %117, i32* %118, align 4, !dbg !5223
  store %struct._ftsent* null, %struct._ftsent** %3, align 8, !dbg !5224
  br label %126, !dbg !5224

; <label>:119:                                    ; preds = %108
  %120 = load i32, i32* %7, align 4, !dbg !5225
  %121 = call i32 @close(i32 %120), !dbg !5226
  br label %122

; <label>:122:                                    ; preds = %119, %105
  %123 = load %struct.FTS*, %struct.FTS** %4, align 8, !dbg !5227
  %124 = getelementptr inbounds %struct.FTS, %struct.FTS* %123, i32 0, i32 1, !dbg !5228
  %125 = load %struct._ftsent*, %struct._ftsent** %124, align 8, !dbg !5228
  store %struct._ftsent* %125, %struct._ftsent** %3, align 8, !dbg !5229
  br label %126, !dbg !5229

; <label>:126:                                    ; preds = %122, %112, %91, %81, %43, %33, %26, %14
  %127 = load %struct._ftsent*, %struct._ftsent** %3, align 8, !dbg !5230
  ret %struct._ftsent* %127, !dbg !5230
}

; Function Attrs: noinline nounwind uwtable
define i64 @hash_get_n_buckets(%struct.hash_table*) #3 !dbg !5231 {
  %2 = alloca %struct.hash_table*, align 8
  store %struct.hash_table* %0, %struct.hash_table** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.hash_table** %2, metadata !5263, metadata !DIExpression()), !dbg !5264
  %3 = load %struct.hash_table*, %struct.hash_table** %2, align 8, !dbg !5265
  %4 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %3, i32 0, i32 2, !dbg !5266
  %5 = load i64, i64* %4, align 8, !dbg !5266
  ret i64 %5, !dbg !5267
}

; Function Attrs: noinline nounwind uwtable
define i64 @hash_get_n_buckets_used(%struct.hash_table*) #3 !dbg !5268 {
  %2 = alloca %struct.hash_table*, align 8
  store %struct.hash_table* %0, %struct.hash_table** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.hash_table** %2, metadata !5269, metadata !DIExpression()), !dbg !5270
  %3 = load %struct.hash_table*, %struct.hash_table** %2, align 8, !dbg !5271
  %4 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %3, i32 0, i32 3, !dbg !5272
  %5 = load i64, i64* %4, align 8, !dbg !5272
  ret i64 %5, !dbg !5273
}

; Function Attrs: noinline nounwind uwtable
define i64 @hash_get_n_entries(%struct.hash_table*) #3 !dbg !5274 {
  %2 = alloca %struct.hash_table*, align 8
  store %struct.hash_table* %0, %struct.hash_table** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.hash_table** %2, metadata !5275, metadata !DIExpression()), !dbg !5276
  %3 = load %struct.hash_table*, %struct.hash_table** %2, align 8, !dbg !5277
  %4 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %3, i32 0, i32 4, !dbg !5278
  %5 = load i64, i64* %4, align 8, !dbg !5278
  ret i64 %5, !dbg !5279
}

; Function Attrs: noinline nounwind uwtable
define i64 @hash_get_max_bucket_length(%struct.hash_table*) #3 !dbg !5280 {
  %2 = alloca %struct.hash_table*, align 8
  %3 = alloca %struct.hash_entry*, align 8
  %4 = alloca i64, align 8
  %5 = alloca %struct.hash_entry*, align 8
  %6 = alloca i64, align 8
  store %struct.hash_table* %0, %struct.hash_table** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.hash_table** %2, metadata !5281, metadata !DIExpression()), !dbg !5282
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %3, metadata !5283, metadata !DIExpression()), !dbg !5284
  call void @llvm.dbg.declare(metadata i64* %4, metadata !5285, metadata !DIExpression()), !dbg !5286
  store i64 0, i64* %4, align 8, !dbg !5286
  %7 = load %struct.hash_table*, %struct.hash_table** %2, align 8, !dbg !5287
  %8 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %7, i32 0, i32 0, !dbg !5289
  %9 = load %struct.hash_entry*, %struct.hash_entry** %8, align 8, !dbg !5289
  store %struct.hash_entry* %9, %struct.hash_entry** %3, align 8, !dbg !5290
  br label %10, !dbg !5291

; <label>:10:                                     ; preds = %40, %1
  %11 = load %struct.hash_entry*, %struct.hash_entry** %3, align 8, !dbg !5292
  %12 = load %struct.hash_table*, %struct.hash_table** %2, align 8, !dbg !5294
  %13 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %12, i32 0, i32 1, !dbg !5295
  %14 = load %struct.hash_entry*, %struct.hash_entry** %13, align 8, !dbg !5295
  %15 = icmp ult %struct.hash_entry* %11, %14, !dbg !5296
  br i1 %15, label %16, label %43, !dbg !5297

; <label>:16:                                     ; preds = %10
  %17 = load %struct.hash_entry*, %struct.hash_entry** %3, align 8, !dbg !5298
  %18 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %17, i32 0, i32 0, !dbg !5301
  %19 = load i8*, i8** %18, align 8, !dbg !5301
  %20 = icmp ne i8* %19, null, !dbg !5298
  br i1 %20, label %21, label %39, !dbg !5302

; <label>:21:                                     ; preds = %16
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %5, metadata !5303, metadata !DIExpression()), !dbg !5305
  %22 = load %struct.hash_entry*, %struct.hash_entry** %3, align 8, !dbg !5306
  store %struct.hash_entry* %22, %struct.hash_entry** %5, align 8, !dbg !5305
  call void @llvm.dbg.declare(metadata i64* %6, metadata !5307, metadata !DIExpression()), !dbg !5308
  store i64 1, i64* %6, align 8, !dbg !5308
  br label %23, !dbg !5309

; <label>:23:                                     ; preds = %29, %21
  %24 = load %struct.hash_entry*, %struct.hash_entry** %5, align 8, !dbg !5310
  %25 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %24, i32 0, i32 1, !dbg !5311
  %26 = load %struct.hash_entry*, %struct.hash_entry** %25, align 8, !dbg !5311
  store %struct.hash_entry* %26, %struct.hash_entry** %5, align 8, !dbg !5312
  %27 = load %struct.hash_entry*, %struct.hash_entry** %5, align 8, !dbg !5313
  %28 = icmp ne %struct.hash_entry* %27, null, !dbg !5309
  br i1 %28, label %29, label %32, !dbg !5309

; <label>:29:                                     ; preds = %23
  %30 = load i64, i64* %6, align 8, !dbg !5314
  %31 = add i64 %30, 1, !dbg !5314
  store i64 %31, i64* %6, align 8, !dbg !5314
  br label %23, !dbg !5309, !llvm.loop !5315

; <label>:32:                                     ; preds = %23
  %33 = load i64, i64* %6, align 8, !dbg !5316
  %34 = load i64, i64* %4, align 8, !dbg !5318
  %35 = icmp ugt i64 %33, %34, !dbg !5319
  br i1 %35, label %36, label %38, !dbg !5320

; <label>:36:                                     ; preds = %32
  %37 = load i64, i64* %6, align 8, !dbg !5321
  store i64 %37, i64* %4, align 8, !dbg !5322
  br label %38, !dbg !5323

; <label>:38:                                     ; preds = %36, %32
  br label %39, !dbg !5324

; <label>:39:                                     ; preds = %38, %16
  br label %40, !dbg !5325

; <label>:40:                                     ; preds = %39
  %41 = load %struct.hash_entry*, %struct.hash_entry** %3, align 8, !dbg !5326
  %42 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %41, i32 1, !dbg !5326
  store %struct.hash_entry* %42, %struct.hash_entry** %3, align 8, !dbg !5326
  br label %10, !dbg !5327, !llvm.loop !5328

; <label>:43:                                     ; preds = %10
  %44 = load i64, i64* %4, align 8, !dbg !5330
  ret i64 %44, !dbg !5331
}

; Function Attrs: noinline nounwind uwtable
define zeroext i1 @hash_table_ok(%struct.hash_table*) #3 !dbg !5332 {
  %2 = alloca i1, align 1
  %3 = alloca %struct.hash_table*, align 8
  %4 = alloca %struct.hash_entry*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca %struct.hash_entry*, align 8
  store %struct.hash_table* %0, %struct.hash_table** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.hash_table** %3, metadata !5335, metadata !DIExpression()), !dbg !5336
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %4, metadata !5337, metadata !DIExpression()), !dbg !5338
  call void @llvm.dbg.declare(metadata i64* %5, metadata !5339, metadata !DIExpression()), !dbg !5340
  store i64 0, i64* %5, align 8, !dbg !5340
  call void @llvm.dbg.declare(metadata i64* %6, metadata !5341, metadata !DIExpression()), !dbg !5342
  store i64 0, i64* %6, align 8, !dbg !5342
  %8 = load %struct.hash_table*, %struct.hash_table** %3, align 8, !dbg !5343
  %9 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %8, i32 0, i32 0, !dbg !5345
  %10 = load %struct.hash_entry*, %struct.hash_entry** %9, align 8, !dbg !5345
  store %struct.hash_entry* %10, %struct.hash_entry** %4, align 8, !dbg !5346
  br label %11, !dbg !5347

; <label>:11:                                     ; preds = %39, %1
  %12 = load %struct.hash_entry*, %struct.hash_entry** %4, align 8, !dbg !5348
  %13 = load %struct.hash_table*, %struct.hash_table** %3, align 8, !dbg !5350
  %14 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %13, i32 0, i32 1, !dbg !5351
  %15 = load %struct.hash_entry*, %struct.hash_entry** %14, align 8, !dbg !5351
  %16 = icmp ult %struct.hash_entry* %12, %15, !dbg !5352
  br i1 %16, label %17, label %42, !dbg !5353

; <label>:17:                                     ; preds = %11
  %18 = load %struct.hash_entry*, %struct.hash_entry** %4, align 8, !dbg !5354
  %19 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %18, i32 0, i32 0, !dbg !5357
  %20 = load i8*, i8** %19, align 8, !dbg !5357
  %21 = icmp ne i8* %20, null, !dbg !5354
  br i1 %21, label %22, label %38, !dbg !5358

; <label>:22:                                     ; preds = %17
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %7, metadata !5359, metadata !DIExpression()), !dbg !5361
  %23 = load %struct.hash_entry*, %struct.hash_entry** %4, align 8, !dbg !5362
  store %struct.hash_entry* %23, %struct.hash_entry** %7, align 8, !dbg !5361
  %24 = load i64, i64* %5, align 8, !dbg !5363
  %25 = add i64 %24, 1, !dbg !5363
  store i64 %25, i64* %5, align 8, !dbg !5363
  %26 = load i64, i64* %6, align 8, !dbg !5364
  %27 = add i64 %26, 1, !dbg !5364
  store i64 %27, i64* %6, align 8, !dbg !5364
  br label %28, !dbg !5365

; <label>:28:                                     ; preds = %34, %22
  %29 = load %struct.hash_entry*, %struct.hash_entry** %7, align 8, !dbg !5366
  %30 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %29, i32 0, i32 1, !dbg !5367
  %31 = load %struct.hash_entry*, %struct.hash_entry** %30, align 8, !dbg !5367
  store %struct.hash_entry* %31, %struct.hash_entry** %7, align 8, !dbg !5368
  %32 = load %struct.hash_entry*, %struct.hash_entry** %7, align 8, !dbg !5369
  %33 = icmp ne %struct.hash_entry* %32, null, !dbg !5365
  br i1 %33, label %34, label %37, !dbg !5365

; <label>:34:                                     ; preds = %28
  %35 = load i64, i64* %6, align 8, !dbg !5370
  %36 = add i64 %35, 1, !dbg !5370
  store i64 %36, i64* %6, align 8, !dbg !5370
  br label %28, !dbg !5365, !llvm.loop !5371

; <label>:37:                                     ; preds = %28
  br label %38, !dbg !5372

; <label>:38:                                     ; preds = %37, %17
  br label %39, !dbg !5373

; <label>:39:                                     ; preds = %38
  %40 = load %struct.hash_entry*, %struct.hash_entry** %4, align 8, !dbg !5374
  %41 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %40, i32 1, !dbg !5374
  store %struct.hash_entry* %41, %struct.hash_entry** %4, align 8, !dbg !5374
  br label %11, !dbg !5375, !llvm.loop !5376

; <label>:42:                                     ; preds = %11
  %43 = load i64, i64* %5, align 8, !dbg !5378
  %44 = load %struct.hash_table*, %struct.hash_table** %3, align 8, !dbg !5380
  %45 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %44, i32 0, i32 3, !dbg !5381
  %46 = load i64, i64* %45, align 8, !dbg !5381
  %47 = icmp eq i64 %43, %46, !dbg !5382
  br i1 %47, label %48, label %55, !dbg !5383

; <label>:48:                                     ; preds = %42
  %49 = load i64, i64* %6, align 8, !dbg !5384
  %50 = load %struct.hash_table*, %struct.hash_table** %3, align 8, !dbg !5385
  %51 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %50, i32 0, i32 4, !dbg !5386
  %52 = load i64, i64* %51, align 8, !dbg !5386
  %53 = icmp eq i64 %49, %52, !dbg !5387
  br i1 %53, label %54, label %55, !dbg !5388

; <label>:54:                                     ; preds = %48
  store i1 true, i1* %2, align 1, !dbg !5389
  br label %56, !dbg !5389

; <label>:55:                                     ; preds = %48, %42
  store i1 false, i1* %2, align 1, !dbg !5390
  br label %56, !dbg !5390

; <label>:56:                                     ; preds = %55, %54
  %57 = load i1, i1* %2, align 1, !dbg !5391
  ret i1 %57, !dbg !5391
}

; Function Attrs: noinline nounwind uwtable
define void @hash_print_statistics(%struct.hash_table*, %struct._IO_FILE*) #3 !dbg !5392 {
  %3 = alloca %struct.hash_table*, align 8
  %4 = alloca %struct._IO_FILE*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  store %struct.hash_table* %0, %struct.hash_table** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.hash_table** %3, metadata !5435, metadata !DIExpression()), !dbg !5436
  store %struct._IO_FILE* %1, %struct._IO_FILE** %4, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %4, metadata !5437, metadata !DIExpression()), !dbg !5438
  call void @llvm.dbg.declare(metadata i64* %5, metadata !5439, metadata !DIExpression()), !dbg !5440
  %9 = load %struct.hash_table*, %struct.hash_table** %3, align 8, !dbg !5441
  %10 = call i64 @hash_get_n_entries(%struct.hash_table* %9), !dbg !5442
  store i64 %10, i64* %5, align 8, !dbg !5440
  call void @llvm.dbg.declare(metadata i64* %6, metadata !5443, metadata !DIExpression()), !dbg !5444
  %11 = load %struct.hash_table*, %struct.hash_table** %3, align 8, !dbg !5445
  %12 = call i64 @hash_get_n_buckets(%struct.hash_table* %11), !dbg !5446
  store i64 %12, i64* %6, align 8, !dbg !5444
  call void @llvm.dbg.declare(metadata i64* %7, metadata !5447, metadata !DIExpression()), !dbg !5448
  %13 = load %struct.hash_table*, %struct.hash_table** %3, align 8, !dbg !5449
  %14 = call i64 @hash_get_n_buckets_used(%struct.hash_table* %13), !dbg !5450
  store i64 %14, i64* %7, align 8, !dbg !5448
  call void @llvm.dbg.declare(metadata i64* %8, metadata !5451, metadata !DIExpression()), !dbg !5452
  %15 = load %struct.hash_table*, %struct.hash_table** %3, align 8, !dbg !5453
  %16 = call i64 @hash_get_max_bucket_length(%struct.hash_table* %15), !dbg !5454
  store i64 %16, i64* %8, align 8, !dbg !5452
  %17 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8, !dbg !5455
  %18 = load i64, i64* %5, align 8, !dbg !5456
  %19 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %17, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.121, i32 0, i32 0), i64 %18), !dbg !5457
  %20 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8, !dbg !5458
  %21 = load i64, i64* %6, align 8, !dbg !5459
  %22 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %20, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.1.122, i32 0, i32 0), i64 %21), !dbg !5460
  %23 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8, !dbg !5461
  %24 = load i64, i64* %7, align 8, !dbg !5462
  %25 = load i64, i64* %7, align 8, !dbg !5463
  %26 = uitofp i64 %25 to double, !dbg !5463
  %27 = fmul double 1.000000e+02, %26, !dbg !5464
  %28 = load i64, i64* %6, align 8, !dbg !5465
  %29 = uitofp i64 %28 to double, !dbg !5465
  %30 = fdiv double %27, %29, !dbg !5466
  %31 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %23, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.2.123, i32 0, i32 0), i64 %24, double %30), !dbg !5467
  %32 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8, !dbg !5468
  %33 = load i64, i64* %8, align 8, !dbg !5469
  %34 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %32, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.124, i32 0, i32 0), i64 %33), !dbg !5470
  ret void, !dbg !5471
}

; Function Attrs: noinline nounwind uwtable
define i8* @hash_lookup(%struct.hash_table*, i8*) #3 !dbg !5472 {
  %3 = alloca i8*, align 8
  %4 = alloca %struct.hash_table*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca %struct.hash_entry*, align 8
  %7 = alloca %struct.hash_entry*, align 8
  store %struct.hash_table* %0, %struct.hash_table** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.hash_table** %4, metadata !5475, metadata !DIExpression()), !dbg !5476
  store i8* %1, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !5477, metadata !DIExpression()), !dbg !5478
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %6, metadata !5479, metadata !DIExpression()), !dbg !5480
  %8 = load %struct.hash_table*, %struct.hash_table** %4, align 8, !dbg !5481
  %9 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %8, i32 0, i32 0, !dbg !5482
  %10 = load %struct.hash_entry*, %struct.hash_entry** %9, align 8, !dbg !5482
  %11 = load %struct.hash_table*, %struct.hash_table** %4, align 8, !dbg !5483
  %12 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %11, i32 0, i32 6, !dbg !5484
  %13 = load i64 (i8*, i64)*, i64 (i8*, i64)** %12, align 8, !dbg !5484
  %14 = load i8*, i8** %5, align 8, !dbg !5485
  %15 = load %struct.hash_table*, %struct.hash_table** %4, align 8, !dbg !5486
  %16 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %15, i32 0, i32 2, !dbg !5487
  %17 = load i64, i64* %16, align 8, !dbg !5487
  %18 = call i64 %13(i8* %14, i64 %17), !dbg !5483
  %19 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %10, i64 %18, !dbg !5488
  store %struct.hash_entry* %19, %struct.hash_entry** %6, align 8, !dbg !5480
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %7, metadata !5489, metadata !DIExpression()), !dbg !5490
  %20 = load %struct.hash_entry*, %struct.hash_entry** %6, align 8, !dbg !5491
  %21 = load %struct.hash_table*, %struct.hash_table** %4, align 8, !dbg !5493
  %22 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %21, i32 0, i32 1, !dbg !5494
  %23 = load %struct.hash_entry*, %struct.hash_entry** %22, align 8, !dbg !5494
  %24 = icmp ult %struct.hash_entry* %20, %23, !dbg !5495
  br i1 %24, label %26, label %25, !dbg !5496

; <label>:25:                                     ; preds = %2
  call void @abort() #11, !dbg !5497
  unreachable, !dbg !5497

; <label>:26:                                     ; preds = %2
  %27 = load %struct.hash_entry*, %struct.hash_entry** %6, align 8, !dbg !5498
  %28 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %27, i32 0, i32 0, !dbg !5500
  %29 = load i8*, i8** %28, align 8, !dbg !5500
  %30 = icmp eq i8* %29, null, !dbg !5501
  br i1 %30, label %31, label %32, !dbg !5502

; <label>:31:                                     ; preds = %26
  store i8* null, i8** %3, align 8, !dbg !5503
  br label %62, !dbg !5503

; <label>:32:                                     ; preds = %26
  %33 = load %struct.hash_entry*, %struct.hash_entry** %6, align 8, !dbg !5504
  store %struct.hash_entry* %33, %struct.hash_entry** %7, align 8, !dbg !5506
  br label %34, !dbg !5507

; <label>:34:                                     ; preds = %57, %32
  %35 = load %struct.hash_entry*, %struct.hash_entry** %7, align 8, !dbg !5508
  %36 = icmp ne %struct.hash_entry* %35, null, !dbg !5510
  br i1 %36, label %37, label %61, !dbg !5510

; <label>:37:                                     ; preds = %34
  %38 = load i8*, i8** %5, align 8, !dbg !5511
  %39 = load %struct.hash_entry*, %struct.hash_entry** %7, align 8, !dbg !5513
  %40 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %39, i32 0, i32 0, !dbg !5514
  %41 = load i8*, i8** %40, align 8, !dbg !5514
  %42 = icmp eq i8* %38, %41, !dbg !5515
  br i1 %42, label %52, label %43, !dbg !5516

; <label>:43:                                     ; preds = %37
  %44 = load %struct.hash_table*, %struct.hash_table** %4, align 8, !dbg !5517
  %45 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %44, i32 0, i32 7, !dbg !5518
  %46 = load i1 (i8*, i8*)*, i1 (i8*, i8*)** %45, align 8, !dbg !5518
  %47 = load i8*, i8** %5, align 8, !dbg !5519
  %48 = load %struct.hash_entry*, %struct.hash_entry** %7, align 8, !dbg !5520
  %49 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %48, i32 0, i32 0, !dbg !5521
  %50 = load i8*, i8** %49, align 8, !dbg !5521
  %51 = call zeroext i1 %46(i8* %47, i8* %50), !dbg !5517
  br i1 %51, label %52, label %56, !dbg !5522

; <label>:52:                                     ; preds = %43, %37
  %53 = load %struct.hash_entry*, %struct.hash_entry** %7, align 8, !dbg !5523
  %54 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %53, i32 0, i32 0, !dbg !5524
  %55 = load i8*, i8** %54, align 8, !dbg !5524
  store i8* %55, i8** %3, align 8, !dbg !5525
  br label %62, !dbg !5525

; <label>:56:                                     ; preds = %43
  br label %57, !dbg !5526

; <label>:57:                                     ; preds = %56
  %58 = load %struct.hash_entry*, %struct.hash_entry** %7, align 8, !dbg !5527
  %59 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %58, i32 0, i32 1, !dbg !5528
  %60 = load %struct.hash_entry*, %struct.hash_entry** %59, align 8, !dbg !5528
  store %struct.hash_entry* %60, %struct.hash_entry** %7, align 8, !dbg !5529
  br label %34, !dbg !5530, !llvm.loop !5531

; <label>:61:                                     ; preds = %34
  store i8* null, i8** %3, align 8, !dbg !5533
  br label %62, !dbg !5533

; <label>:62:                                     ; preds = %61, %52, %31
  %63 = load i8*, i8** %3, align 8, !dbg !5534
  ret i8* %63, !dbg !5534
}

; Function Attrs: noinline nounwind uwtable
define i8* @hash_get_first(%struct.hash_table*) #3 !dbg !5535 {
  %2 = alloca i8*, align 8
  %3 = alloca %struct.hash_table*, align 8
  %4 = alloca %struct.hash_entry*, align 8
  store %struct.hash_table* %0, %struct.hash_table** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.hash_table** %3, metadata !5538, metadata !DIExpression()), !dbg !5539
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %4, metadata !5540, metadata !DIExpression()), !dbg !5541
  %5 = load %struct.hash_table*, %struct.hash_table** %3, align 8, !dbg !5542
  %6 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %5, i32 0, i32 4, !dbg !5544
  %7 = load i64, i64* %6, align 8, !dbg !5544
  %8 = icmp eq i64 %7, 0, !dbg !5545
  br i1 %8, label %9, label %10, !dbg !5546

; <label>:9:                                      ; preds = %1
  store i8* null, i8** %2, align 8, !dbg !5547
  br label %35, !dbg !5547

; <label>:10:                                     ; preds = %1
  %11 = load %struct.hash_table*, %struct.hash_table** %3, align 8, !dbg !5548
  %12 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %11, i32 0, i32 0, !dbg !5550
  %13 = load %struct.hash_entry*, %struct.hash_entry** %12, align 8, !dbg !5550
  store %struct.hash_entry* %13, %struct.hash_entry** %4, align 8, !dbg !5551
  br label %14, !dbg !5552

; <label>:14:                                     ; preds = %32, %10
  %15 = load %struct.hash_entry*, %struct.hash_entry** %4, align 8, !dbg !5553
  %16 = load %struct.hash_table*, %struct.hash_table** %3, align 8, !dbg !5556
  %17 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %16, i32 0, i32 1, !dbg !5557
  %18 = load %struct.hash_entry*, %struct.hash_entry** %17, align 8, !dbg !5557
  %19 = icmp ult %struct.hash_entry* %15, %18, !dbg !5558
  br i1 %19, label %21, label %20, !dbg !5559

; <label>:20:                                     ; preds = %14
  call void @abort() #11, !dbg !5560
  unreachable, !dbg !5560

; <label>:21:                                     ; preds = %14
  %22 = load %struct.hash_entry*, %struct.hash_entry** %4, align 8, !dbg !5561
  %23 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %22, i32 0, i32 0, !dbg !5563
  %24 = load i8*, i8** %23, align 8, !dbg !5563
  %25 = icmp ne i8* %24, null, !dbg !5561
  br i1 %25, label %26, label %30, !dbg !5564

; <label>:26:                                     ; preds = %21
  %27 = load %struct.hash_entry*, %struct.hash_entry** %4, align 8, !dbg !5565
  %28 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %27, i32 0, i32 0, !dbg !5566
  %29 = load i8*, i8** %28, align 8, !dbg !5566
  store i8* %29, i8** %2, align 8, !dbg !5567
  br label %35, !dbg !5567

; <label>:30:                                     ; preds = %21
  br label %31

; <label>:31:                                     ; preds = %30
  br label %32, !dbg !5568

; <label>:32:                                     ; preds = %31
  %33 = load %struct.hash_entry*, %struct.hash_entry** %4, align 8, !dbg !5569
  %34 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %33, i32 1, !dbg !5569
  store %struct.hash_entry* %34, %struct.hash_entry** %4, align 8, !dbg !5569
  br label %14, !dbg !5570, !llvm.loop !5571

; <label>:35:                                     ; preds = %26, %9
  %36 = load i8*, i8** %2, align 8, !dbg !5574
  ret i8* %36, !dbg !5574
}

; Function Attrs: noinline nounwind uwtable
define i8* @hash_get_next(%struct.hash_table*, i8*) #3 !dbg !5575 {
  %3 = alloca i8*, align 8
  %4 = alloca %struct.hash_table*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca %struct.hash_entry*, align 8
  %7 = alloca %struct.hash_entry*, align 8
  store %struct.hash_table* %0, %struct.hash_table** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.hash_table** %4, metadata !5576, metadata !DIExpression()), !dbg !5577
  store i8* %1, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !5578, metadata !DIExpression()), !dbg !5579
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %6, metadata !5580, metadata !DIExpression()), !dbg !5581
  %8 = load %struct.hash_table*, %struct.hash_table** %4, align 8, !dbg !5582
  %9 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %8, i32 0, i32 0, !dbg !5583
  %10 = load %struct.hash_entry*, %struct.hash_entry** %9, align 8, !dbg !5583
  %11 = load %struct.hash_table*, %struct.hash_table** %4, align 8, !dbg !5584
  %12 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %11, i32 0, i32 6, !dbg !5585
  %13 = load i64 (i8*, i64)*, i64 (i8*, i64)** %12, align 8, !dbg !5585
  %14 = load i8*, i8** %5, align 8, !dbg !5586
  %15 = load %struct.hash_table*, %struct.hash_table** %4, align 8, !dbg !5587
  %16 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %15, i32 0, i32 2, !dbg !5588
  %17 = load i64, i64* %16, align 8, !dbg !5588
  %18 = call i64 %13(i8* %14, i64 %17), !dbg !5584
  %19 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %10, i64 %18, !dbg !5589
  store %struct.hash_entry* %19, %struct.hash_entry** %6, align 8, !dbg !5581
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %7, metadata !5590, metadata !DIExpression()), !dbg !5591
  %20 = load %struct.hash_entry*, %struct.hash_entry** %6, align 8, !dbg !5592
  %21 = load %struct.hash_table*, %struct.hash_table** %4, align 8, !dbg !5594
  %22 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %21, i32 0, i32 1, !dbg !5595
  %23 = load %struct.hash_entry*, %struct.hash_entry** %22, align 8, !dbg !5595
  %24 = icmp ult %struct.hash_entry* %20, %23, !dbg !5596
  br i1 %24, label %26, label %25, !dbg !5597

; <label>:25:                                     ; preds = %2
  call void @abort() #11, !dbg !5598
  unreachable, !dbg !5598

; <label>:26:                                     ; preds = %2
  %27 = load %struct.hash_entry*, %struct.hash_entry** %6, align 8, !dbg !5599
  store %struct.hash_entry* %27, %struct.hash_entry** %7, align 8, !dbg !5601
  br label %28, !dbg !5602

; <label>:28:                                     ; preds = %49, %26
  %29 = load %struct.hash_entry*, %struct.hash_entry** %7, align 8, !dbg !5603
  %30 = icmp ne %struct.hash_entry* %29, null, !dbg !5605
  br i1 %30, label %31, label %53, !dbg !5605

; <label>:31:                                     ; preds = %28
  %32 = load %struct.hash_entry*, %struct.hash_entry** %7, align 8, !dbg !5606
  %33 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %32, i32 0, i32 0, !dbg !5608
  %34 = load i8*, i8** %33, align 8, !dbg !5608
  %35 = load i8*, i8** %5, align 8, !dbg !5609
  %36 = icmp eq i8* %34, %35, !dbg !5610
  br i1 %36, label %37, label %48, !dbg !5611

; <label>:37:                                     ; preds = %31
  %38 = load %struct.hash_entry*, %struct.hash_entry** %7, align 8, !dbg !5612
  %39 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %38, i32 0, i32 1, !dbg !5613
  %40 = load %struct.hash_entry*, %struct.hash_entry** %39, align 8, !dbg !5613
  %41 = icmp ne %struct.hash_entry* %40, null, !dbg !5612
  br i1 %41, label %42, label %48, !dbg !5614

; <label>:42:                                     ; preds = %37
  %43 = load %struct.hash_entry*, %struct.hash_entry** %7, align 8, !dbg !5615
  %44 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %43, i32 0, i32 1, !dbg !5616
  %45 = load %struct.hash_entry*, %struct.hash_entry** %44, align 8, !dbg !5616
  %46 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %45, i32 0, i32 0, !dbg !5617
  %47 = load i8*, i8** %46, align 8, !dbg !5617
  store i8* %47, i8** %3, align 8, !dbg !5618
  br label %72, !dbg !5618

; <label>:48:                                     ; preds = %37, %31
  br label %49, !dbg !5613

; <label>:49:                                     ; preds = %48
  %50 = load %struct.hash_entry*, %struct.hash_entry** %7, align 8, !dbg !5619
  %51 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %50, i32 0, i32 1, !dbg !5620
  %52 = load %struct.hash_entry*, %struct.hash_entry** %51, align 8, !dbg !5620
  store %struct.hash_entry* %52, %struct.hash_entry** %7, align 8, !dbg !5621
  br label %28, !dbg !5622, !llvm.loop !5623

; <label>:53:                                     ; preds = %28
  br label %54, !dbg !5625

; <label>:54:                                     ; preds = %70, %53
  %55 = load %struct.hash_entry*, %struct.hash_entry** %6, align 8, !dbg !5626
  %56 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %55, i32 1, !dbg !5626
  store %struct.hash_entry* %56, %struct.hash_entry** %6, align 8, !dbg !5626
  %57 = load %struct.hash_table*, %struct.hash_table** %4, align 8, !dbg !5627
  %58 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %57, i32 0, i32 1, !dbg !5628
  %59 = load %struct.hash_entry*, %struct.hash_entry** %58, align 8, !dbg !5628
  %60 = icmp ult %struct.hash_entry* %56, %59, !dbg !5629
  br i1 %60, label %61, label %71, !dbg !5625

; <label>:61:                                     ; preds = %54
  %62 = load %struct.hash_entry*, %struct.hash_entry** %6, align 8, !dbg !5630
  %63 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %62, i32 0, i32 0, !dbg !5632
  %64 = load i8*, i8** %63, align 8, !dbg !5632
  %65 = icmp ne i8* %64, null, !dbg !5630
  br i1 %65, label %66, label %70, !dbg !5633

; <label>:66:                                     ; preds = %61
  %67 = load %struct.hash_entry*, %struct.hash_entry** %6, align 8, !dbg !5634
  %68 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %67, i32 0, i32 0, !dbg !5635
  %69 = load i8*, i8** %68, align 8, !dbg !5635
  store i8* %69, i8** %3, align 8, !dbg !5636
  br label %72, !dbg !5636

; <label>:70:                                     ; preds = %61
  br label %54, !dbg !5625, !llvm.loop !5637

; <label>:71:                                     ; preds = %54
  store i8* null, i8** %3, align 8, !dbg !5639
  br label %72, !dbg !5639

; <label>:72:                                     ; preds = %71, %66, %42
  %73 = load i8*, i8** %3, align 8, !dbg !5640
  ret i8* %73, !dbg !5640
}

; Function Attrs: noinline nounwind uwtable
define i64 @hash_get_entries(%struct.hash_table*, i8**, i64) #3 !dbg !5641 {
  %4 = alloca i64, align 8
  %5 = alloca %struct.hash_table*, align 8
  %6 = alloca i8**, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca %struct.hash_entry*, align 8
  %10 = alloca %struct.hash_entry*, align 8
  store %struct.hash_table* %0, %struct.hash_table** %5, align 8
  call void @llvm.dbg.declare(metadata %struct.hash_table** %5, metadata !5645, metadata !DIExpression()), !dbg !5646
  store i8** %1, i8*** %6, align 8
  call void @llvm.dbg.declare(metadata i8*** %6, metadata !5647, metadata !DIExpression()), !dbg !5648
  store i64 %2, i64* %7, align 8
  call void @llvm.dbg.declare(metadata i64* %7, metadata !5649, metadata !DIExpression()), !dbg !5650
  call void @llvm.dbg.declare(metadata i64* %8, metadata !5651, metadata !DIExpression()), !dbg !5652
  store i64 0, i64* %8, align 8, !dbg !5652
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %9, metadata !5653, metadata !DIExpression()), !dbg !5654
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %10, metadata !5655, metadata !DIExpression()), !dbg !5656
  %11 = load %struct.hash_table*, %struct.hash_table** %5, align 8, !dbg !5657
  %12 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %11, i32 0, i32 0, !dbg !5659
  %13 = load %struct.hash_entry*, %struct.hash_entry** %12, align 8, !dbg !5659
  store %struct.hash_entry* %13, %struct.hash_entry** %9, align 8, !dbg !5660
  br label %14, !dbg !5661

; <label>:14:                                     ; preds = %50, %3
  %15 = load %struct.hash_entry*, %struct.hash_entry** %9, align 8, !dbg !5662
  %16 = load %struct.hash_table*, %struct.hash_table** %5, align 8, !dbg !5664
  %17 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %16, i32 0, i32 1, !dbg !5665
  %18 = load %struct.hash_entry*, %struct.hash_entry** %17, align 8, !dbg !5665
  %19 = icmp ult %struct.hash_entry* %15, %18, !dbg !5666
  br i1 %19, label %20, label %53, !dbg !5667

; <label>:20:                                     ; preds = %14
  %21 = load %struct.hash_entry*, %struct.hash_entry** %9, align 8, !dbg !5668
  %22 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %21, i32 0, i32 0, !dbg !5671
  %23 = load i8*, i8** %22, align 8, !dbg !5671
  %24 = icmp ne i8* %23, null, !dbg !5668
  br i1 %24, label %25, label %49, !dbg !5672

; <label>:25:                                     ; preds = %20
  %26 = load %struct.hash_entry*, %struct.hash_entry** %9, align 8, !dbg !5673
  store %struct.hash_entry* %26, %struct.hash_entry** %10, align 8, !dbg !5676
  br label %27, !dbg !5677

; <label>:27:                                     ; preds = %44, %25
  %28 = load %struct.hash_entry*, %struct.hash_entry** %10, align 8, !dbg !5678
  %29 = icmp ne %struct.hash_entry* %28, null, !dbg !5680
  br i1 %29, label %30, label %48, !dbg !5680

; <label>:30:                                     ; preds = %27
  %31 = load i64, i64* %8, align 8, !dbg !5681
  %32 = load i64, i64* %7, align 8, !dbg !5684
  %33 = icmp uge i64 %31, %32, !dbg !5685
  br i1 %33, label %34, label %36, !dbg !5686

; <label>:34:                                     ; preds = %30
  %35 = load i64, i64* %8, align 8, !dbg !5687
  store i64 %35, i64* %4, align 8, !dbg !5688
  br label %55, !dbg !5688

; <label>:36:                                     ; preds = %30
  %37 = load %struct.hash_entry*, %struct.hash_entry** %10, align 8, !dbg !5689
  %38 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %37, i32 0, i32 0, !dbg !5690
  %39 = load i8*, i8** %38, align 8, !dbg !5690
  %40 = load i8**, i8*** %6, align 8, !dbg !5691
  %41 = load i64, i64* %8, align 8, !dbg !5692
  %42 = add i64 %41, 1, !dbg !5692
  store i64 %42, i64* %8, align 8, !dbg !5692
  %43 = getelementptr inbounds i8*, i8** %40, i64 %41, !dbg !5691
  store i8* %39, i8** %43, align 8, !dbg !5693
  br label %44, !dbg !5694

; <label>:44:                                     ; preds = %36
  %45 = load %struct.hash_entry*, %struct.hash_entry** %10, align 8, !dbg !5695
  %46 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %45, i32 0, i32 1, !dbg !5696
  %47 = load %struct.hash_entry*, %struct.hash_entry** %46, align 8, !dbg !5696
  store %struct.hash_entry* %47, %struct.hash_entry** %10, align 8, !dbg !5697
  br label %27, !dbg !5698, !llvm.loop !5699

; <label>:48:                                     ; preds = %27
  br label %49, !dbg !5701

; <label>:49:                                     ; preds = %48, %20
  br label %50, !dbg !5702

; <label>:50:                                     ; preds = %49
  %51 = load %struct.hash_entry*, %struct.hash_entry** %9, align 8, !dbg !5703
  %52 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %51, i32 1, !dbg !5703
  store %struct.hash_entry* %52, %struct.hash_entry** %9, align 8, !dbg !5703
  br label %14, !dbg !5704, !llvm.loop !5705

; <label>:53:                                     ; preds = %14
  %54 = load i64, i64* %8, align 8, !dbg !5707
  store i64 %54, i64* %4, align 8, !dbg !5708
  br label %55, !dbg !5708

; <label>:55:                                     ; preds = %53, %34
  %56 = load i64, i64* %4, align 8, !dbg !5709
  ret i64 %56, !dbg !5709
}

; Function Attrs: noinline nounwind uwtable
define i64 @hash_do_for_each(%struct.hash_table*, i1 (i8*, i8*)*, i8*) #3 !dbg !5710 {
  %4 = alloca i64, align 8
  %5 = alloca %struct.hash_table*, align 8
  %6 = alloca i1 (i8*, i8*)*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i64, align 8
  %9 = alloca %struct.hash_entry*, align 8
  %10 = alloca %struct.hash_entry*, align 8
  store %struct.hash_table* %0, %struct.hash_table** %5, align 8
  call void @llvm.dbg.declare(metadata %struct.hash_table** %5, metadata !5717, metadata !DIExpression()), !dbg !5718
  store i1 (i8*, i8*)* %1, i1 (i8*, i8*)** %6, align 8
  call void @llvm.dbg.declare(metadata i1 (i8*, i8*)** %6, metadata !5719, metadata !DIExpression()), !dbg !5720
  store i8* %2, i8** %7, align 8
  call void @llvm.dbg.declare(metadata i8** %7, metadata !5721, metadata !DIExpression()), !dbg !5722
  call void @llvm.dbg.declare(metadata i64* %8, metadata !5723, metadata !DIExpression()), !dbg !5724
  store i64 0, i64* %8, align 8, !dbg !5724
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %9, metadata !5725, metadata !DIExpression()), !dbg !5726
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %10, metadata !5727, metadata !DIExpression()), !dbg !5728
  %11 = load %struct.hash_table*, %struct.hash_table** %5, align 8, !dbg !5729
  %12 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %11, i32 0, i32 0, !dbg !5731
  %13 = load %struct.hash_entry*, %struct.hash_entry** %12, align 8, !dbg !5731
  store %struct.hash_entry* %13, %struct.hash_entry** %9, align 8, !dbg !5732
  br label %14, !dbg !5733

; <label>:14:                                     ; preds = %48, %3
  %15 = load %struct.hash_entry*, %struct.hash_entry** %9, align 8, !dbg !5734
  %16 = load %struct.hash_table*, %struct.hash_table** %5, align 8, !dbg !5736
  %17 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %16, i32 0, i32 1, !dbg !5737
  %18 = load %struct.hash_entry*, %struct.hash_entry** %17, align 8, !dbg !5737
  %19 = icmp ult %struct.hash_entry* %15, %18, !dbg !5738
  br i1 %19, label %20, label %51, !dbg !5739

; <label>:20:                                     ; preds = %14
  %21 = load %struct.hash_entry*, %struct.hash_entry** %9, align 8, !dbg !5740
  %22 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %21, i32 0, i32 0, !dbg !5743
  %23 = load i8*, i8** %22, align 8, !dbg !5743
  %24 = icmp ne i8* %23, null, !dbg !5740
  br i1 %24, label %25, label %47, !dbg !5744

; <label>:25:                                     ; preds = %20
  %26 = load %struct.hash_entry*, %struct.hash_entry** %9, align 8, !dbg !5745
  store %struct.hash_entry* %26, %struct.hash_entry** %10, align 8, !dbg !5748
  br label %27, !dbg !5749

; <label>:27:                                     ; preds = %42, %25
  %28 = load %struct.hash_entry*, %struct.hash_entry** %10, align 8, !dbg !5750
  %29 = icmp ne %struct.hash_entry* %28, null, !dbg !5752
  br i1 %29, label %30, label %46, !dbg !5752

; <label>:30:                                     ; preds = %27
  %31 = load i1 (i8*, i8*)*, i1 (i8*, i8*)** %6, align 8, !dbg !5753
  %32 = load %struct.hash_entry*, %struct.hash_entry** %10, align 8, !dbg !5756
  %33 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %32, i32 0, i32 0, !dbg !5757
  %34 = load i8*, i8** %33, align 8, !dbg !5757
  %35 = load i8*, i8** %7, align 8, !dbg !5758
  %36 = call zeroext i1 %31(i8* %34, i8* %35), !dbg !5753
  br i1 %36, label %39, label %37, !dbg !5759

; <label>:37:                                     ; preds = %30
  %38 = load i64, i64* %8, align 8, !dbg !5760
  store i64 %38, i64* %4, align 8, !dbg !5761
  br label %53, !dbg !5761

; <label>:39:                                     ; preds = %30
  %40 = load i64, i64* %8, align 8, !dbg !5762
  %41 = add i64 %40, 1, !dbg !5762
  store i64 %41, i64* %8, align 8, !dbg !5762
  br label %42, !dbg !5763

; <label>:42:                                     ; preds = %39
  %43 = load %struct.hash_entry*, %struct.hash_entry** %10, align 8, !dbg !5764
  %44 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %43, i32 0, i32 1, !dbg !5765
  %45 = load %struct.hash_entry*, %struct.hash_entry** %44, align 8, !dbg !5765
  store %struct.hash_entry* %45, %struct.hash_entry** %10, align 8, !dbg !5766
  br label %27, !dbg !5767, !llvm.loop !5768

; <label>:46:                                     ; preds = %27
  br label %47, !dbg !5770

; <label>:47:                                     ; preds = %46, %20
  br label %48, !dbg !5771

; <label>:48:                                     ; preds = %47
  %49 = load %struct.hash_entry*, %struct.hash_entry** %9, align 8, !dbg !5772
  %50 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %49, i32 1, !dbg !5772
  store %struct.hash_entry* %50, %struct.hash_entry** %9, align 8, !dbg !5772
  br label %14, !dbg !5773, !llvm.loop !5774

; <label>:51:                                     ; preds = %14
  %52 = load i64, i64* %8, align 8, !dbg !5776
  store i64 %52, i64* %4, align 8, !dbg !5777
  br label %53, !dbg !5777

; <label>:53:                                     ; preds = %51, %37
  %54 = load i64, i64* %4, align 8, !dbg !5778
  ret i64 %54, !dbg !5778
}

; Function Attrs: noinline nounwind uwtable
define i64 @hash_string(i8*, i64) #3 !dbg !5779 {
  %3 = alloca i8*, align 8
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = alloca i8, align 1
  store i8* %0, i8** %3, align 8
  call void @llvm.dbg.declare(metadata i8** %3, metadata !5782, metadata !DIExpression()), !dbg !5783
  store i64 %1, i64* %4, align 8
  call void @llvm.dbg.declare(metadata i64* %4, metadata !5784, metadata !DIExpression()), !dbg !5785
  call void @llvm.dbg.declare(metadata i64* %5, metadata !5786, metadata !DIExpression()), !dbg !5787
  store i64 0, i64* %5, align 8, !dbg !5787
  call void @llvm.dbg.declare(metadata i8* %6, metadata !5788, metadata !DIExpression()), !dbg !5789
  br label %7, !dbg !5790

; <label>:7:                                      ; preds = %19, %2
  %8 = load i8*, i8** %3, align 8, !dbg !5791
  %9 = load i8, i8* %8, align 1, !dbg !5794
  store i8 %9, i8* %6, align 1, !dbg !5795
  %10 = icmp ne i8 %9, 0, !dbg !5796
  br i1 %10, label %11, label %22, !dbg !5796

; <label>:11:                                     ; preds = %7
  %12 = load i64, i64* %5, align 8, !dbg !5797
  %13 = mul i64 %12, 31, !dbg !5798
  %14 = load i8, i8* %6, align 1, !dbg !5799
  %15 = zext i8 %14 to i64, !dbg !5799
  %16 = add i64 %13, %15, !dbg !5800
  %17 = load i64, i64* %4, align 8, !dbg !5801
  %18 = urem i64 %16, %17, !dbg !5802
  store i64 %18, i64* %5, align 8, !dbg !5803
  br label %19, !dbg !5804

; <label>:19:                                     ; preds = %11
  %20 = load i8*, i8** %3, align 8, !dbg !5805
  %21 = getelementptr inbounds i8, i8* %20, i32 1, !dbg !5805
  store i8* %21, i8** %3, align 8, !dbg !5805
  br label %7, !dbg !5806, !llvm.loop !5807

; <label>:22:                                     ; preds = %7
  %23 = load i64, i64* %5, align 8, !dbg !5809
  ret i64 %23, !dbg !5810
}

; Function Attrs: noinline nounwind uwtable
define void @hash_reset_tuning(%struct.hash_tuning*) #3 !dbg !5811 {
  %2 = alloca %struct.hash_tuning*, align 8
  store %struct.hash_tuning* %0, %struct.hash_tuning** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.hash_tuning** %2, metadata !5815, metadata !DIExpression()), !dbg !5816
  %3 = load %struct.hash_tuning*, %struct.hash_tuning** %2, align 8, !dbg !5817
  %4 = bitcast %struct.hash_tuning* %3 to i8*, !dbg !5818
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %4, i8* bitcast (%struct.hash_tuning* @default_tuning to i8*), i64 20, i32 4, i1 false), !dbg !5818
  ret void, !dbg !5819
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i32, i1) #10

; Function Attrs: noinline nounwind uwtable
define %struct.hash_table* @hash_initialize(i64, %struct.hash_tuning*, i64 (i8*, i64)*, i1 (i8*, i8*)*, void (i8*)*) #3 !dbg !5820 {
  %6 = alloca %struct.hash_table*, align 8
  %7 = alloca i64, align 8
  %8 = alloca %struct.hash_tuning*, align 8
  %9 = alloca i64 (i8*, i64)*, align 8
  %10 = alloca i1 (i8*, i8*)*, align 8
  %11 = alloca void (i8*)*, align 8
  %12 = alloca %struct.hash_table*, align 8
  store i64 %0, i64* %7, align 8
  call void @llvm.dbg.declare(metadata i64* %7, metadata !5824, metadata !DIExpression()), !dbg !5825
  store %struct.hash_tuning* %1, %struct.hash_tuning** %8, align 8
  call void @llvm.dbg.declare(metadata %struct.hash_tuning** %8, metadata !5826, metadata !DIExpression()), !dbg !5827
  store i64 (i8*, i64)* %2, i64 (i8*, i64)** %9, align 8
  call void @llvm.dbg.declare(metadata i64 (i8*, i64)** %9, metadata !5828, metadata !DIExpression()), !dbg !5829
  store i1 (i8*, i8*)* %3, i1 (i8*, i8*)** %10, align 8
  call void @llvm.dbg.declare(metadata i1 (i8*, i8*)** %10, metadata !5830, metadata !DIExpression()), !dbg !5831
  store void (i8*)* %4, void (i8*)** %11, align 8
  call void @llvm.dbg.declare(metadata void (i8*)** %11, metadata !5832, metadata !DIExpression()), !dbg !5833
  call void @llvm.dbg.declare(metadata %struct.hash_table** %12, metadata !5834, metadata !DIExpression()), !dbg !5835
  %13 = load i64 (i8*, i64)*, i64 (i8*, i64)** %9, align 8, !dbg !5836
  %14 = icmp eq i64 (i8*, i64)* %13, null, !dbg !5838
  br i1 %14, label %15, label %16, !dbg !5839

; <label>:15:                                     ; preds = %5
  store i64 (i8*, i64)* @raw_hasher, i64 (i8*, i64)** %9, align 8, !dbg !5840
  br label %16, !dbg !5841

; <label>:16:                                     ; preds = %15, %5
  %17 = load i1 (i8*, i8*)*, i1 (i8*, i8*)** %10, align 8, !dbg !5842
  %18 = icmp eq i1 (i8*, i8*)* %17, null, !dbg !5844
  br i1 %18, label %19, label %20, !dbg !5845

; <label>:19:                                     ; preds = %16
  store i1 (i8*, i8*)* @raw_comparator, i1 (i8*, i8*)** %10, align 8, !dbg !5846
  br label %20, !dbg !5847

; <label>:20:                                     ; preds = %19, %16
  %21 = call noalias i8* @malloc(i64 80) #8, !dbg !5848
  %22 = bitcast i8* %21 to %struct.hash_table*, !dbg !5848
  store %struct.hash_table* %22, %struct.hash_table** %12, align 8, !dbg !5849
  %23 = load %struct.hash_table*, %struct.hash_table** %12, align 8, !dbg !5850
  %24 = icmp eq %struct.hash_table* %23, null, !dbg !5852
  br i1 %24, label %25, label %26, !dbg !5853

; <label>:25:                                     ; preds = %20
  store %struct.hash_table* null, %struct.hash_table** %6, align 8, !dbg !5854
  br label %90, !dbg !5854

; <label>:26:                                     ; preds = %20
  %27 = load %struct.hash_tuning*, %struct.hash_tuning** %8, align 8, !dbg !5855
  %28 = icmp ne %struct.hash_tuning* %27, null, !dbg !5855
  br i1 %28, label %30, label %29, !dbg !5857

; <label>:29:                                     ; preds = %26
  store %struct.hash_tuning* @default_tuning, %struct.hash_tuning** %8, align 8, !dbg !5858
  br label %30, !dbg !5859

; <label>:30:                                     ; preds = %29, %26
  %31 = load %struct.hash_tuning*, %struct.hash_tuning** %8, align 8, !dbg !5860
  %32 = load %struct.hash_table*, %struct.hash_table** %12, align 8, !dbg !5861
  %33 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %32, i32 0, i32 5, !dbg !5862
  store %struct.hash_tuning* %31, %struct.hash_tuning** %33, align 8, !dbg !5863
  %34 = load %struct.hash_table*, %struct.hash_table** %12, align 8, !dbg !5864
  %35 = call zeroext i1 @check_tuning(%struct.hash_table* %34), !dbg !5866
  br i1 %35, label %37, label %36, !dbg !5867

; <label>:36:                                     ; preds = %30
  br label %87, !dbg !5868

; <label>:37:                                     ; preds = %30
  %38 = load i64, i64* %7, align 8, !dbg !5870
  %39 = load %struct.hash_tuning*, %struct.hash_tuning** %8, align 8, !dbg !5871
  %40 = call i64 @compute_bucket_size(i64 %38, %struct.hash_tuning* %39), !dbg !5872
  %41 = load %struct.hash_table*, %struct.hash_table** %12, align 8, !dbg !5873
  %42 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %41, i32 0, i32 2, !dbg !5874
  store i64 %40, i64* %42, align 8, !dbg !5875
  %43 = load %struct.hash_table*, %struct.hash_table** %12, align 8, !dbg !5876
  %44 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %43, i32 0, i32 2, !dbg !5878
  %45 = load i64, i64* %44, align 8, !dbg !5878
  %46 = icmp ne i64 %45, 0, !dbg !5876
  br i1 %46, label %48, label %47, !dbg !5879

; <label>:47:                                     ; preds = %37
  br label %87, !dbg !5880

; <label>:48:                                     ; preds = %37
  %49 = load %struct.hash_table*, %struct.hash_table** %12, align 8, !dbg !5881
  %50 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %49, i32 0, i32 2, !dbg !5882
  %51 = load i64, i64* %50, align 8, !dbg !5882
  %52 = call noalias i8* @calloc(i64 %51, i64 16) #8, !dbg !5883
  %53 = bitcast i8* %52 to %struct.hash_entry*, !dbg !5883
  %54 = load %struct.hash_table*, %struct.hash_table** %12, align 8, !dbg !5884
  %55 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %54, i32 0, i32 0, !dbg !5885
  store %struct.hash_entry* %53, %struct.hash_entry** %55, align 8, !dbg !5886
  %56 = load %struct.hash_table*, %struct.hash_table** %12, align 8, !dbg !5887
  %57 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %56, i32 0, i32 0, !dbg !5889
  %58 = load %struct.hash_entry*, %struct.hash_entry** %57, align 8, !dbg !5889
  %59 = icmp eq %struct.hash_entry* %58, null, !dbg !5890
  br i1 %59, label %60, label %61, !dbg !5891

; <label>:60:                                     ; preds = %48
  br label %87, !dbg !5892

; <label>:61:                                     ; preds = %48
  %62 = load %struct.hash_table*, %struct.hash_table** %12, align 8, !dbg !5893
  %63 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %62, i32 0, i32 0, !dbg !5894
  %64 = load %struct.hash_entry*, %struct.hash_entry** %63, align 8, !dbg !5894
  %65 = load %struct.hash_table*, %struct.hash_table** %12, align 8, !dbg !5895
  %66 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %65, i32 0, i32 2, !dbg !5896
  %67 = load i64, i64* %66, align 8, !dbg !5896
  %68 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %64, i64 %67, !dbg !5897
  %69 = load %struct.hash_table*, %struct.hash_table** %12, align 8, !dbg !5898
  %70 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %69, i32 0, i32 1, !dbg !5899
  store %struct.hash_entry* %68, %struct.hash_entry** %70, align 8, !dbg !5900
  %71 = load %struct.hash_table*, %struct.hash_table** %12, align 8, !dbg !5901
  %72 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %71, i32 0, i32 3, !dbg !5902
  store i64 0, i64* %72, align 8, !dbg !5903
  %73 = load %struct.hash_table*, %struct.hash_table** %12, align 8, !dbg !5904
  %74 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %73, i32 0, i32 4, !dbg !5905
  store i64 0, i64* %74, align 8, !dbg !5906
  %75 = load i64 (i8*, i64)*, i64 (i8*, i64)** %9, align 8, !dbg !5907
  %76 = load %struct.hash_table*, %struct.hash_table** %12, align 8, !dbg !5908
  %77 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %76, i32 0, i32 6, !dbg !5909
  store i64 (i8*, i64)* %75, i64 (i8*, i64)** %77, align 8, !dbg !5910
  %78 = load i1 (i8*, i8*)*, i1 (i8*, i8*)** %10, align 8, !dbg !5911
  %79 = load %struct.hash_table*, %struct.hash_table** %12, align 8, !dbg !5912
  %80 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %79, i32 0, i32 7, !dbg !5913
  store i1 (i8*, i8*)* %78, i1 (i8*, i8*)** %80, align 8, !dbg !5914
  %81 = load void (i8*)*, void (i8*)** %11, align 8, !dbg !5915
  %82 = load %struct.hash_table*, %struct.hash_table** %12, align 8, !dbg !5916
  %83 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %82, i32 0, i32 8, !dbg !5917
  store void (i8*)* %81, void (i8*)** %83, align 8, !dbg !5918
  %84 = load %struct.hash_table*, %struct.hash_table** %12, align 8, !dbg !5919
  %85 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %84, i32 0, i32 9, !dbg !5920
  store %struct.hash_entry* null, %struct.hash_entry** %85, align 8, !dbg !5921
  %86 = load %struct.hash_table*, %struct.hash_table** %12, align 8, !dbg !5922
  store %struct.hash_table* %86, %struct.hash_table** %6, align 8, !dbg !5923
  br label %90, !dbg !5923

; <label>:87:                                     ; preds = %60, %47, %36
  %88 = load %struct.hash_table*, %struct.hash_table** %12, align 8, !dbg !5924
  %89 = bitcast %struct.hash_table* %88 to i8*, !dbg !5924
  call void @free(i8* %89) #8, !dbg !5925
  store %struct.hash_table* null, %struct.hash_table** %6, align 8, !dbg !5926
  br label %90, !dbg !5926

; <label>:90:                                     ; preds = %87, %61, %25
  %91 = load %struct.hash_table*, %struct.hash_table** %6, align 8, !dbg !5927
  ret %struct.hash_table* %91, !dbg !5927
}

; Function Attrs: noinline nounwind uwtable
define internal i64 @raw_hasher(i8*, i64) #3 !dbg !5928 {
  %3 = alloca i8*, align 8
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  store i8* %0, i8** %3, align 8
  call void @llvm.dbg.declare(metadata i8** %3, metadata !5929, metadata !DIExpression()), !dbg !5930
  store i64 %1, i64* %4, align 8
  call void @llvm.dbg.declare(metadata i64* %4, metadata !5931, metadata !DIExpression()), !dbg !5932
  call void @llvm.dbg.declare(metadata i64* %5, metadata !5933, metadata !DIExpression()), !dbg !5934
  %6 = load i8*, i8** %3, align 8, !dbg !5935
  %7 = ptrtoint i8* %6 to i64, !dbg !5936
  %8 = call i64 @rotr_sz(i64 %7, i32 3), !dbg !5937
  store i64 %8, i64* %5, align 8, !dbg !5934
  %9 = load i64, i64* %5, align 8, !dbg !5938
  %10 = load i64, i64* %4, align 8, !dbg !5939
  %11 = urem i64 %9, %10, !dbg !5940
  ret i64 %11, !dbg !5941
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i1 @raw_comparator(i8*, i8*) #3 !dbg !5942 {
  %3 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  store i8* %0, i8** %3, align 8
  call void @llvm.dbg.declare(metadata i8** %3, metadata !5943, metadata !DIExpression()), !dbg !5944
  store i8* %1, i8** %4, align 8
  call void @llvm.dbg.declare(metadata i8** %4, metadata !5945, metadata !DIExpression()), !dbg !5946
  %5 = load i8*, i8** %3, align 8, !dbg !5947
  %6 = load i8*, i8** %4, align 8, !dbg !5948
  %7 = icmp eq i8* %5, %6, !dbg !5949
  ret i1 %7, !dbg !5950
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i1 @check_tuning(%struct.hash_table*) #3 !dbg !5951 {
  %2 = alloca i1, align 1
  %3 = alloca %struct.hash_table*, align 8
  %4 = alloca %struct.hash_tuning*, align 8
  %5 = alloca float, align 4
  store %struct.hash_table* %0, %struct.hash_table** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.hash_table** %3, metadata !5954, metadata !DIExpression()), !dbg !5955
  call void @llvm.dbg.declare(metadata %struct.hash_tuning** %4, metadata !5956, metadata !DIExpression()), !dbg !5957
  %6 = load %struct.hash_table*, %struct.hash_table** %3, align 8, !dbg !5958
  %7 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %6, i32 0, i32 5, !dbg !5959
  %8 = load %struct.hash_tuning*, %struct.hash_tuning** %7, align 8, !dbg !5959
  store %struct.hash_tuning* %8, %struct.hash_tuning** %4, align 8, !dbg !5957
  call void @llvm.dbg.declare(metadata float* %5, metadata !5960, metadata !DIExpression()), !dbg !5961
  %9 = load %struct.hash_tuning*, %struct.hash_tuning** %4, align 8, !dbg !5962
  %10 = icmp eq %struct.hash_tuning* %9, @default_tuning, !dbg !5964
  br i1 %10, label %11, label %12, !dbg !5965

; <label>:11:                                     ; preds = %1
  store i1 true, i1* %2, align 1, !dbg !5966
  br label %66, !dbg !5966

; <label>:12:                                     ; preds = %1
  store float 0x3FB99999A0000000, float* %5, align 4, !dbg !5967
  %13 = load float, float* %5, align 4, !dbg !5968
  %14 = load %struct.hash_tuning*, %struct.hash_tuning** %4, align 8, !dbg !5970
  %15 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %14, i32 0, i32 2, !dbg !5971
  %16 = load float, float* %15, align 4, !dbg !5971
  %17 = fcmp olt float %13, %16, !dbg !5972
  br i1 %17, label %18, label %63, !dbg !5973

; <label>:18:                                     ; preds = %12
  %19 = load %struct.hash_tuning*, %struct.hash_tuning** %4, align 8, !dbg !5974
  %20 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %19, i32 0, i32 2, !dbg !5975
  %21 = load float, float* %20, align 4, !dbg !5975
  %22 = load float, float* %5, align 4, !dbg !5976
  %23 = fsub float 1.000000e+00, %22, !dbg !5977
  %24 = fcmp olt float %21, %23, !dbg !5978
  br i1 %24, label %25, label %63, !dbg !5979

; <label>:25:                                     ; preds = %18
  %26 = load float, float* %5, align 4, !dbg !5980
  %27 = fadd float 1.000000e+00, %26, !dbg !5981
  %28 = load %struct.hash_tuning*, %struct.hash_tuning** %4, align 8, !dbg !5982
  %29 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %28, i32 0, i32 3, !dbg !5983
  %30 = load float, float* %29, align 4, !dbg !5983
  %31 = fcmp olt float %27, %30, !dbg !5984
  br i1 %31, label %32, label %63, !dbg !5985

; <label>:32:                                     ; preds = %25
  %33 = load %struct.hash_tuning*, %struct.hash_tuning** %4, align 8, !dbg !5986
  %34 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %33, i32 0, i32 0, !dbg !5987
  %35 = load float, float* %34, align 4, !dbg !5987
  %36 = fcmp ole float 0.000000e+00, %35, !dbg !5988
  br i1 %36, label %37, label %63, !dbg !5989

; <label>:37:                                     ; preds = %32
  %38 = load %struct.hash_tuning*, %struct.hash_tuning** %4, align 8, !dbg !5990
  %39 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %38, i32 0, i32 0, !dbg !5991
  %40 = load float, float* %39, align 4, !dbg !5991
  %41 = load float, float* %5, align 4, !dbg !5992
  %42 = fadd float %40, %41, !dbg !5993
  %43 = load %struct.hash_tuning*, %struct.hash_tuning** %4, align 8, !dbg !5994
  %44 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %43, i32 0, i32 1, !dbg !5995
  %45 = load float, float* %44, align 4, !dbg !5995
  %46 = fcmp olt float %42, %45, !dbg !5996
  br i1 %46, label %47, label %63, !dbg !5997

; <label>:47:                                     ; preds = %37
  %48 = load %struct.hash_tuning*, %struct.hash_tuning** %4, align 8, !dbg !5998
  %49 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %48, i32 0, i32 1, !dbg !5999
  %50 = load float, float* %49, align 4, !dbg !5999
  %51 = fcmp ole float %50, 1.000000e+00, !dbg !6000
  br i1 %51, label %52, label %63, !dbg !6001

; <label>:52:                                     ; preds = %47
  %53 = load %struct.hash_tuning*, %struct.hash_tuning** %4, align 8, !dbg !6002
  %54 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %53, i32 0, i32 0, !dbg !6003
  %55 = load float, float* %54, align 4, !dbg !6003
  %56 = load float, float* %5, align 4, !dbg !6004
  %57 = fadd float %55, %56, !dbg !6005
  %58 = load %struct.hash_tuning*, %struct.hash_tuning** %4, align 8, !dbg !6006
  %59 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %58, i32 0, i32 2, !dbg !6007
  %60 = load float, float* %59, align 4, !dbg !6007
  %61 = fcmp olt float %57, %60, !dbg !6008
  br i1 %61, label %62, label %63, !dbg !6009

; <label>:62:                                     ; preds = %52
  store i1 true, i1* %2, align 1, !dbg !6010
  br label %66, !dbg !6010

; <label>:63:                                     ; preds = %52, %47, %37, %32, %25, %18, %12
  %64 = load %struct.hash_table*, %struct.hash_table** %3, align 8, !dbg !6011
  %65 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %64, i32 0, i32 5, !dbg !6012
  store %struct.hash_tuning* @default_tuning, %struct.hash_tuning** %65, align 8, !dbg !6013
  store i1 false, i1* %2, align 1, !dbg !6014
  br label %66, !dbg !6014

; <label>:66:                                     ; preds = %63, %62, %11
  %67 = load i1, i1* %2, align 1, !dbg !6015
  ret i1 %67, !dbg !6015
}

; Function Attrs: noinline nounwind uwtable
define internal i64 @compute_bucket_size(i64, %struct.hash_tuning*) #3 !dbg !6016 {
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = alloca %struct.hash_tuning*, align 8
  %6 = alloca float, align 4
  store i64 %0, i64* %4, align 8
  call void @llvm.dbg.declare(metadata i64* %4, metadata !6019, metadata !DIExpression()), !dbg !6020
  store %struct.hash_tuning* %1, %struct.hash_tuning** %5, align 8
  call void @llvm.dbg.declare(metadata %struct.hash_tuning** %5, metadata !6021, metadata !DIExpression()), !dbg !6022
  %7 = load %struct.hash_tuning*, %struct.hash_tuning** %5, align 8, !dbg !6023
  %8 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %7, i32 0, i32 4, !dbg !6025
  %9 = load i8, i8* %8, align 4, !dbg !6025
  %10 = trunc i8 %9 to i1, !dbg !6025
  br i1 %10, label %24, label %11, !dbg !6026

; <label>:11:                                     ; preds = %2
  call void @llvm.dbg.declare(metadata float* %6, metadata !6027, metadata !DIExpression()), !dbg !6029
  %12 = load i64, i64* %4, align 8, !dbg !6030
  %13 = uitofp i64 %12 to float, !dbg !6030
  %14 = load %struct.hash_tuning*, %struct.hash_tuning** %5, align 8, !dbg !6031
  %15 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %14, i32 0, i32 2, !dbg !6032
  %16 = load float, float* %15, align 4, !dbg !6032
  %17 = fdiv float %13, %16, !dbg !6033
  store float %17, float* %6, align 4, !dbg !6029
  %18 = load float, float* %6, align 4, !dbg !6034
  %19 = fcmp ole float 0x43F0000000000000, %18, !dbg !6036
  br i1 %19, label %20, label %21, !dbg !6037

; <label>:20:                                     ; preds = %11
  store i64 0, i64* %3, align 8, !dbg !6038
  br label %32, !dbg !6038

; <label>:21:                                     ; preds = %11
  %22 = load float, float* %6, align 4, !dbg !6039
  %23 = fptoui float %22 to i64, !dbg !6039
  store i64 %23, i64* %4, align 8, !dbg !6040
  br label %24, !dbg !6041

; <label>:24:                                     ; preds = %21, %2
  %25 = load i64, i64* %4, align 8, !dbg !6042
  %26 = call i64 @next_prime(i64 %25), !dbg !6043
  store i64 %26, i64* %4, align 8, !dbg !6044
  %27 = load i64, i64* %4, align 8, !dbg !6045
  %28 = icmp ult i64 2305843009213693951, %27, !dbg !6045
  br i1 %28, label %29, label %30, !dbg !6047

; <label>:29:                                     ; preds = %24
  store i64 0, i64* %3, align 8, !dbg !6048
  br label %32, !dbg !6048

; <label>:30:                                     ; preds = %24
  %31 = load i64, i64* %4, align 8, !dbg !6049
  store i64 %31, i64* %3, align 8, !dbg !6050
  br label %32, !dbg !6050

; <label>:32:                                     ; preds = %30, %29, %20
  %33 = load i64, i64* %3, align 8, !dbg !6051
  ret i64 %33, !dbg !6051
}

; Function Attrs: nounwind
declare noalias i8* @calloc(i64, i64) #5

; Function Attrs: noinline nounwind uwtable
define internal i64 @next_prime(i64) #3 !dbg !6052 {
  %2 = alloca i64, align 8
  store i64 %0, i64* %2, align 8
  call void @llvm.dbg.declare(metadata i64* %2, metadata !6055, metadata !DIExpression()), !dbg !6056
  %3 = load i64, i64* %2, align 8, !dbg !6057
  %4 = icmp ult i64 %3, 10, !dbg !6059
  br i1 %4, label %5, label %6, !dbg !6060

; <label>:5:                                      ; preds = %1
  store i64 10, i64* %2, align 8, !dbg !6061
  br label %6, !dbg !6062

; <label>:6:                                      ; preds = %5, %1
  %7 = load i64, i64* %2, align 8, !dbg !6063
  %8 = or i64 %7, 1, !dbg !6063
  store i64 %8, i64* %2, align 8, !dbg !6063
  br label %9, !dbg !6064

; <label>:9:                                      ; preds = %18, %6
  %10 = load i64, i64* %2, align 8, !dbg !6065
  %11 = icmp ne i64 -1, %10, !dbg !6066
  br i1 %11, label %12, label %16, !dbg !6067

; <label>:12:                                     ; preds = %9
  %13 = load i64, i64* %2, align 8, !dbg !6068
  %14 = call zeroext i1 @is_prime(i64 %13), !dbg !6069
  %15 = xor i1 %14, true, !dbg !6070
  br label %16

; <label>:16:                                     ; preds = %12, %9
  %17 = phi i1 [ false, %9 ], [ %15, %12 ]
  br i1 %17, label %18, label %21, !dbg !6064

; <label>:18:                                     ; preds = %16
  %19 = load i64, i64* %2, align 8, !dbg !6071
  %20 = add i64 %19, 2, !dbg !6071
  store i64 %20, i64* %2, align 8, !dbg !6071
  br label %9, !dbg !6064, !llvm.loop !6072

; <label>:21:                                     ; preds = %16
  %22 = load i64, i64* %2, align 8, !dbg !6074
  ret i64 %22, !dbg !6075
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i1 @is_prime(i64) #3 !dbg !6076 {
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  store i64 %0, i64* %2, align 8
  call void @llvm.dbg.declare(metadata i64* %2, metadata !6079, metadata !DIExpression()), !dbg !6080
  call void @llvm.dbg.declare(metadata i64* %3, metadata !6081, metadata !DIExpression()), !dbg !6082
  store i64 3, i64* %3, align 8, !dbg !6082
  call void @llvm.dbg.declare(metadata i64* %4, metadata !6083, metadata !DIExpression()), !dbg !6084
  %5 = load i64, i64* %3, align 8, !dbg !6085
  %6 = load i64, i64* %3, align 8, !dbg !6086
  %7 = mul i64 %5, %6, !dbg !6087
  store i64 %7, i64* %4, align 8, !dbg !6084
  br label %8, !dbg !6088

; <label>:8:                                      ; preds = %19, %1
  %9 = load i64, i64* %4, align 8, !dbg !6089
  %10 = load i64, i64* %2, align 8, !dbg !6090
  %11 = icmp ult i64 %9, %10, !dbg !6091
  br i1 %11, label %12, label %17, !dbg !6092

; <label>:12:                                     ; preds = %8
  %13 = load i64, i64* %2, align 8, !dbg !6093
  %14 = load i64, i64* %3, align 8, !dbg !6094
  %15 = urem i64 %13, %14, !dbg !6095
  %16 = icmp ne i64 %15, 0, !dbg !6092
  br label %17

; <label>:17:                                     ; preds = %12, %8
  %18 = phi i1 [ false, %8 ], [ %16, %12 ]
  br i1 %18, label %19, label %28, !dbg !6088

; <label>:19:                                     ; preds = %17
  %20 = load i64, i64* %3, align 8, !dbg !6096
  %21 = add i64 %20, 1, !dbg !6096
  store i64 %21, i64* %3, align 8, !dbg !6096
  %22 = load i64, i64* %3, align 8, !dbg !6098
  %23 = mul i64 4, %22, !dbg !6099
  %24 = load i64, i64* %4, align 8, !dbg !6100
  %25 = add i64 %24, %23, !dbg !6100
  store i64 %25, i64* %4, align 8, !dbg !6100
  %26 = load i64, i64* %3, align 8, !dbg !6101
  %27 = add i64 %26, 1, !dbg !6101
  store i64 %27, i64* %3, align 8, !dbg !6101
  br label %8, !dbg !6088, !llvm.loop !6102

; <label>:28:                                     ; preds = %17
  %29 = load i64, i64* %2, align 8, !dbg !6104
  %30 = load i64, i64* %3, align 8, !dbg !6105
  %31 = urem i64 %29, %30, !dbg !6106
  %32 = icmp ne i64 %31, 0, !dbg !6104
  %33 = zext i1 %32 to i64, !dbg !6104
  %34 = select i1 %32, i32 1, i32 0, !dbg !6104
  %35 = icmp ne i32 %34, 0, !dbg !6107
  ret i1 %35, !dbg !6108
}

; Function Attrs: noinline nounwind uwtable
define internal i64 @rotr_sz(i64, i32) #3 !dbg !6109 {
  %3 = alloca i64, align 8
  %4 = alloca i32, align 4
  store i64 %0, i64* %3, align 8
  call void @llvm.dbg.declare(metadata i64* %3, metadata !6113, metadata !DIExpression()), !dbg !6114
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !6115, metadata !DIExpression()), !dbg !6116
  %5 = load i64, i64* %3, align 8, !dbg !6117
  %6 = load i32, i32* %4, align 4, !dbg !6118
  %7 = zext i32 %6 to i64, !dbg !6119
  %8 = lshr i64 %5, %7, !dbg !6119
  %9 = load i64, i64* %3, align 8, !dbg !6120
  %10 = load i32, i32* %4, align 4, !dbg !6121
  %11 = sext i32 %10 to i64, !dbg !6121
  %12 = sub i64 64, %11, !dbg !6122
  %13 = shl i64 %9, %12, !dbg !6123
  %14 = or i64 %8, %13, !dbg !6124
  ret i64 %14, !dbg !6125
}

; Function Attrs: noinline nounwind uwtable
define void @hash_clear(%struct.hash_table*) #3 !dbg !6126 {
  %2 = alloca %struct.hash_table*, align 8
  %3 = alloca %struct.hash_entry*, align 8
  %4 = alloca %struct.hash_entry*, align 8
  %5 = alloca %struct.hash_entry*, align 8
  store %struct.hash_table* %0, %struct.hash_table** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.hash_table** %2, metadata !6129, metadata !DIExpression()), !dbg !6130
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %3, metadata !6131, metadata !DIExpression()), !dbg !6132
  %6 = load %struct.hash_table*, %struct.hash_table** %2, align 8, !dbg !6133
  %7 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %6, i32 0, i32 0, !dbg !6135
  %8 = load %struct.hash_entry*, %struct.hash_entry** %7, align 8, !dbg !6135
  store %struct.hash_entry* %8, %struct.hash_entry** %3, align 8, !dbg !6136
  br label %9, !dbg !6137

; <label>:9:                                      ; preds = %73, %1
  %10 = load %struct.hash_entry*, %struct.hash_entry** %3, align 8, !dbg !6138
  %11 = load %struct.hash_table*, %struct.hash_table** %2, align 8, !dbg !6140
  %12 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %11, i32 0, i32 1, !dbg !6141
  %13 = load %struct.hash_entry*, %struct.hash_entry** %12, align 8, !dbg !6141
  %14 = icmp ult %struct.hash_entry* %10, %13, !dbg !6142
  br i1 %14, label %15, label %76, !dbg !6143

; <label>:15:                                     ; preds = %9
  %16 = load %struct.hash_entry*, %struct.hash_entry** %3, align 8, !dbg !6144
  %17 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %16, i32 0, i32 0, !dbg !6147
  %18 = load i8*, i8** %17, align 8, !dbg !6147
  %19 = icmp ne i8* %18, null, !dbg !6144
  br i1 %19, label %20, label %72, !dbg !6148

; <label>:20:                                     ; preds = %15
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %4, metadata !6149, metadata !DIExpression()), !dbg !6151
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %5, metadata !6152, metadata !DIExpression()), !dbg !6153
  %21 = load %struct.hash_entry*, %struct.hash_entry** %3, align 8, !dbg !6154
  %22 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %21, i32 0, i32 1, !dbg !6156
  %23 = load %struct.hash_entry*, %struct.hash_entry** %22, align 8, !dbg !6156
  store %struct.hash_entry* %23, %struct.hash_entry** %4, align 8, !dbg !6157
  br label %24, !dbg !6158

; <label>:24:                                     ; preds = %53, %20
  %25 = load %struct.hash_entry*, %struct.hash_entry** %4, align 8, !dbg !6159
  %26 = icmp ne %struct.hash_entry* %25, null, !dbg !6161
  br i1 %26, label %27, label %55, !dbg !6161

; <label>:27:                                     ; preds = %24
  %28 = load %struct.hash_table*, %struct.hash_table** %2, align 8, !dbg !6162
  %29 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %28, i32 0, i32 8, !dbg !6165
  %30 = load void (i8*)*, void (i8*)** %29, align 8, !dbg !6165
  %31 = icmp ne void (i8*)* %30, null, !dbg !6162
  br i1 %31, label %32, label %39, !dbg !6166

; <label>:32:                                     ; preds = %27
  %33 = load %struct.hash_table*, %struct.hash_table** %2, align 8, !dbg !6167
  %34 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %33, i32 0, i32 8, !dbg !6168
  %35 = load void (i8*)*, void (i8*)** %34, align 8, !dbg !6168
  %36 = load %struct.hash_entry*, %struct.hash_entry** %4, align 8, !dbg !6169
  %37 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %36, i32 0, i32 0, !dbg !6170
  %38 = load i8*, i8** %37, align 8, !dbg !6170
  call void %35(i8* %38), !dbg !6167
  br label %39, !dbg !6167

; <label>:39:                                     ; preds = %32, %27
  %40 = load %struct.hash_entry*, %struct.hash_entry** %4, align 8, !dbg !6171
  %41 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %40, i32 0, i32 0, !dbg !6172
  store i8* null, i8** %41, align 8, !dbg !6173
  %42 = load %struct.hash_entry*, %struct.hash_entry** %4, align 8, !dbg !6174
  %43 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %42, i32 0, i32 1, !dbg !6175
  %44 = load %struct.hash_entry*, %struct.hash_entry** %43, align 8, !dbg !6175
  store %struct.hash_entry* %44, %struct.hash_entry** %5, align 8, !dbg !6176
  %45 = load %struct.hash_table*, %struct.hash_table** %2, align 8, !dbg !6177
  %46 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %45, i32 0, i32 9, !dbg !6178
  %47 = load %struct.hash_entry*, %struct.hash_entry** %46, align 8, !dbg !6178
  %48 = load %struct.hash_entry*, %struct.hash_entry** %4, align 8, !dbg !6179
  %49 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %48, i32 0, i32 1, !dbg !6180
  store %struct.hash_entry* %47, %struct.hash_entry** %49, align 8, !dbg !6181
  %50 = load %struct.hash_entry*, %struct.hash_entry** %4, align 8, !dbg !6182
  %51 = load %struct.hash_table*, %struct.hash_table** %2, align 8, !dbg !6183
  %52 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %51, i32 0, i32 9, !dbg !6184
  store %struct.hash_entry* %50, %struct.hash_entry** %52, align 8, !dbg !6185
  br label %53, !dbg !6186

; <label>:53:                                     ; preds = %39
  %54 = load %struct.hash_entry*, %struct.hash_entry** %5, align 8, !dbg !6187
  store %struct.hash_entry* %54, %struct.hash_entry** %4, align 8, !dbg !6188
  br label %24, !dbg !6189, !llvm.loop !6190

; <label>:55:                                     ; preds = %24
  %56 = load %struct.hash_table*, %struct.hash_table** %2, align 8, !dbg !6192
  %57 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %56, i32 0, i32 8, !dbg !6194
  %58 = load void (i8*)*, void (i8*)** %57, align 8, !dbg !6194
  %59 = icmp ne void (i8*)* %58, null, !dbg !6192
  br i1 %59, label %60, label %67, !dbg !6195

; <label>:60:                                     ; preds = %55
  %61 = load %struct.hash_table*, %struct.hash_table** %2, align 8, !dbg !6196
  %62 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %61, i32 0, i32 8, !dbg !6197
  %63 = load void (i8*)*, void (i8*)** %62, align 8, !dbg !6197
  %64 = load %struct.hash_entry*, %struct.hash_entry** %3, align 8, !dbg !6198
  %65 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %64, i32 0, i32 0, !dbg !6199
  %66 = load i8*, i8** %65, align 8, !dbg !6199
  call void %63(i8* %66), !dbg !6196
  br label %67, !dbg !6196

; <label>:67:                                     ; preds = %60, %55
  %68 = load %struct.hash_entry*, %struct.hash_entry** %3, align 8, !dbg !6200
  %69 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %68, i32 0, i32 0, !dbg !6201
  store i8* null, i8** %69, align 8, !dbg !6202
  %70 = load %struct.hash_entry*, %struct.hash_entry** %3, align 8, !dbg !6203
  %71 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %70, i32 0, i32 1, !dbg !6204
  store %struct.hash_entry* null, %struct.hash_entry** %71, align 8, !dbg !6205
  br label %72, !dbg !6206

; <label>:72:                                     ; preds = %67, %15
  br label %73, !dbg !6207

; <label>:73:                                     ; preds = %72
  %74 = load %struct.hash_entry*, %struct.hash_entry** %3, align 8, !dbg !6208
  %75 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %74, i32 1, !dbg !6208
  store %struct.hash_entry* %75, %struct.hash_entry** %3, align 8, !dbg !6208
  br label %9, !dbg !6209, !llvm.loop !6210

; <label>:76:                                     ; preds = %9
  %77 = load %struct.hash_table*, %struct.hash_table** %2, align 8, !dbg !6212
  %78 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %77, i32 0, i32 3, !dbg !6213
  store i64 0, i64* %78, align 8, !dbg !6214
  %79 = load %struct.hash_table*, %struct.hash_table** %2, align 8, !dbg !6215
  %80 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %79, i32 0, i32 4, !dbg !6216
  store i64 0, i64* %80, align 8, !dbg !6217
  ret void, !dbg !6218
}

; Function Attrs: noinline nounwind uwtable
define void @hash_free(%struct.hash_table*) #3 !dbg !6219 {
  %2 = alloca %struct.hash_table*, align 8
  %3 = alloca %struct.hash_entry*, align 8
  %4 = alloca %struct.hash_entry*, align 8
  %5 = alloca %struct.hash_entry*, align 8
  store %struct.hash_table* %0, %struct.hash_table** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.hash_table** %2, metadata !6220, metadata !DIExpression()), !dbg !6221
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %3, metadata !6222, metadata !DIExpression()), !dbg !6223
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %4, metadata !6224, metadata !DIExpression()), !dbg !6225
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %5, metadata !6226, metadata !DIExpression()), !dbg !6227
  %6 = load %struct.hash_table*, %struct.hash_table** %2, align 8, !dbg !6228
  %7 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %6, i32 0, i32 8, !dbg !6230
  %8 = load void (i8*)*, void (i8*)** %7, align 8, !dbg !6230
  %9 = icmp ne void (i8*)* %8, null, !dbg !6228
  br i1 %9, label %10, label %52, !dbg !6231

; <label>:10:                                     ; preds = %1
  %11 = load %struct.hash_table*, %struct.hash_table** %2, align 8, !dbg !6232
  %12 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %11, i32 0, i32 4, !dbg !6233
  %13 = load i64, i64* %12, align 8, !dbg !6233
  %14 = icmp ne i64 %13, 0, !dbg !6232
  br i1 %14, label %15, label %52, !dbg !6234

; <label>:15:                                     ; preds = %10
  %16 = load %struct.hash_table*, %struct.hash_table** %2, align 8, !dbg !6235
  %17 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %16, i32 0, i32 0, !dbg !6238
  %18 = load %struct.hash_entry*, %struct.hash_entry** %17, align 8, !dbg !6238
  store %struct.hash_entry* %18, %struct.hash_entry** %3, align 8, !dbg !6239
  br label %19, !dbg !6240

; <label>:19:                                     ; preds = %48, %15
  %20 = load %struct.hash_entry*, %struct.hash_entry** %3, align 8, !dbg !6241
  %21 = load %struct.hash_table*, %struct.hash_table** %2, align 8, !dbg !6243
  %22 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %21, i32 0, i32 1, !dbg !6244
  %23 = load %struct.hash_entry*, %struct.hash_entry** %22, align 8, !dbg !6244
  %24 = icmp ult %struct.hash_entry* %20, %23, !dbg !6245
  br i1 %24, label %25, label %51, !dbg !6246

; <label>:25:                                     ; preds = %19
  %26 = load %struct.hash_entry*, %struct.hash_entry** %3, align 8, !dbg !6247
  %27 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %26, i32 0, i32 0, !dbg !6250
  %28 = load i8*, i8** %27, align 8, !dbg !6250
  %29 = icmp ne i8* %28, null, !dbg !6247
  br i1 %29, label %30, label %47, !dbg !6251

; <label>:30:                                     ; preds = %25
  %31 = load %struct.hash_entry*, %struct.hash_entry** %3, align 8, !dbg !6252
  store %struct.hash_entry* %31, %struct.hash_entry** %4, align 8, !dbg !6255
  br label %32, !dbg !6256

; <label>:32:                                     ; preds = %42, %30
  %33 = load %struct.hash_entry*, %struct.hash_entry** %4, align 8, !dbg !6257
  %34 = icmp ne %struct.hash_entry* %33, null, !dbg !6259
  br i1 %34, label %35, label %46, !dbg !6259

; <label>:35:                                     ; preds = %32
  %36 = load %struct.hash_table*, %struct.hash_table** %2, align 8, !dbg !6260
  %37 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %36, i32 0, i32 8, !dbg !6261
  %38 = load void (i8*)*, void (i8*)** %37, align 8, !dbg !6261
  %39 = load %struct.hash_entry*, %struct.hash_entry** %4, align 8, !dbg !6262
  %40 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %39, i32 0, i32 0, !dbg !6263
  %41 = load i8*, i8** %40, align 8, !dbg !6263
  call void %38(i8* %41), !dbg !6260
  br label %42, !dbg !6260

; <label>:42:                                     ; preds = %35
  %43 = load %struct.hash_entry*, %struct.hash_entry** %4, align 8, !dbg !6264
  %44 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %43, i32 0, i32 1, !dbg !6265
  %45 = load %struct.hash_entry*, %struct.hash_entry** %44, align 8, !dbg !6265
  store %struct.hash_entry* %45, %struct.hash_entry** %4, align 8, !dbg !6266
  br label %32, !dbg !6267, !llvm.loop !6268

; <label>:46:                                     ; preds = %32
  br label %47, !dbg !6270

; <label>:47:                                     ; preds = %46, %25
  br label %48, !dbg !6271

; <label>:48:                                     ; preds = %47
  %49 = load %struct.hash_entry*, %struct.hash_entry** %3, align 8, !dbg !6272
  %50 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %49, i32 1, !dbg !6272
  store %struct.hash_entry* %50, %struct.hash_entry** %3, align 8, !dbg !6272
  br label %19, !dbg !6273, !llvm.loop !6274

; <label>:51:                                     ; preds = %19
  br label %52, !dbg !6276

; <label>:52:                                     ; preds = %51, %10, %1
  %53 = load %struct.hash_table*, %struct.hash_table** %2, align 8, !dbg !6277
  %54 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %53, i32 0, i32 0, !dbg !6279
  %55 = load %struct.hash_entry*, %struct.hash_entry** %54, align 8, !dbg !6279
  store %struct.hash_entry* %55, %struct.hash_entry** %3, align 8, !dbg !6280
  br label %56, !dbg !6281

; <label>:56:                                     ; preds = %78, %52
  %57 = load %struct.hash_entry*, %struct.hash_entry** %3, align 8, !dbg !6282
  %58 = load %struct.hash_table*, %struct.hash_table** %2, align 8, !dbg !6284
  %59 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %58, i32 0, i32 1, !dbg !6285
  %60 = load %struct.hash_entry*, %struct.hash_entry** %59, align 8, !dbg !6285
  %61 = icmp ult %struct.hash_entry* %57, %60, !dbg !6286
  br i1 %61, label %62, label %81, !dbg !6287

; <label>:62:                                     ; preds = %56
  %63 = load %struct.hash_entry*, %struct.hash_entry** %3, align 8, !dbg !6288
  %64 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %63, i32 0, i32 1, !dbg !6291
  %65 = load %struct.hash_entry*, %struct.hash_entry** %64, align 8, !dbg !6291
  store %struct.hash_entry* %65, %struct.hash_entry** %4, align 8, !dbg !6292
  br label %66, !dbg !6293

; <label>:66:                                     ; preds = %75, %62
  %67 = load %struct.hash_entry*, %struct.hash_entry** %4, align 8, !dbg !6294
  %68 = icmp ne %struct.hash_entry* %67, null, !dbg !6296
  br i1 %68, label %69, label %77, !dbg !6296

; <label>:69:                                     ; preds = %66
  %70 = load %struct.hash_entry*, %struct.hash_entry** %4, align 8, !dbg !6297
  %71 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %70, i32 0, i32 1, !dbg !6299
  %72 = load %struct.hash_entry*, %struct.hash_entry** %71, align 8, !dbg !6299
  store %struct.hash_entry* %72, %struct.hash_entry** %5, align 8, !dbg !6300
  %73 = load %struct.hash_entry*, %struct.hash_entry** %4, align 8, !dbg !6301
  %74 = bitcast %struct.hash_entry* %73 to i8*, !dbg !6301
  call void @free(i8* %74) #8, !dbg !6302
  br label %75, !dbg !6303

; <label>:75:                                     ; preds = %69
  %76 = load %struct.hash_entry*, %struct.hash_entry** %5, align 8, !dbg !6304
  store %struct.hash_entry* %76, %struct.hash_entry** %4, align 8, !dbg !6305
  br label %66, !dbg !6306, !llvm.loop !6307

; <label>:77:                                     ; preds = %66
  br label %78, !dbg !6309

; <label>:78:                                     ; preds = %77
  %79 = load %struct.hash_entry*, %struct.hash_entry** %3, align 8, !dbg !6310
  %80 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %79, i32 1, !dbg !6310
  store %struct.hash_entry* %80, %struct.hash_entry** %3, align 8, !dbg !6310
  br label %56, !dbg !6311, !llvm.loop !6312

; <label>:81:                                     ; preds = %56
  %82 = load %struct.hash_table*, %struct.hash_table** %2, align 8, !dbg !6314
  %83 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %82, i32 0, i32 9, !dbg !6316
  %84 = load %struct.hash_entry*, %struct.hash_entry** %83, align 8, !dbg !6316
  store %struct.hash_entry* %84, %struct.hash_entry** %4, align 8, !dbg !6317
  br label %85, !dbg !6318

; <label>:85:                                     ; preds = %94, %81
  %86 = load %struct.hash_entry*, %struct.hash_entry** %4, align 8, !dbg !6319
  %87 = icmp ne %struct.hash_entry* %86, null, !dbg !6321
  br i1 %87, label %88, label %96, !dbg !6321

; <label>:88:                                     ; preds = %85
  %89 = load %struct.hash_entry*, %struct.hash_entry** %4, align 8, !dbg !6322
  %90 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %89, i32 0, i32 1, !dbg !6324
  %91 = load %struct.hash_entry*, %struct.hash_entry** %90, align 8, !dbg !6324
  store %struct.hash_entry* %91, %struct.hash_entry** %5, align 8, !dbg !6325
  %92 = load %struct.hash_entry*, %struct.hash_entry** %4, align 8, !dbg !6326
  %93 = bitcast %struct.hash_entry* %92 to i8*, !dbg !6326
  call void @free(i8* %93) #8, !dbg !6327
  br label %94, !dbg !6328

; <label>:94:                                     ; preds = %88
  %95 = load %struct.hash_entry*, %struct.hash_entry** %5, align 8, !dbg !6329
  store %struct.hash_entry* %95, %struct.hash_entry** %4, align 8, !dbg !6330
  br label %85, !dbg !6331, !llvm.loop !6332

; <label>:96:                                     ; preds = %85
  %97 = load %struct.hash_table*, %struct.hash_table** %2, align 8, !dbg !6334
  %98 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %97, i32 0, i32 0, !dbg !6335
  %99 = load %struct.hash_entry*, %struct.hash_entry** %98, align 8, !dbg !6335
  %100 = bitcast %struct.hash_entry* %99 to i8*, !dbg !6334
  call void @free(i8* %100) #8, !dbg !6336
  %101 = load %struct.hash_table*, %struct.hash_table** %2, align 8, !dbg !6337
  %102 = bitcast %struct.hash_table* %101 to i8*, !dbg !6337
  call void @free(i8* %102) #8, !dbg !6338
  ret void, !dbg !6339
}

; Function Attrs: noinline nounwind uwtable
define zeroext i1 @hash_rehash(%struct.hash_table*, i64) #3 !dbg !6340 {
  %3 = alloca i1, align 1
  %4 = alloca %struct.hash_table*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %struct.hash_table, align 8
  %7 = alloca %struct.hash_table*, align 8
  %8 = alloca i64, align 8
  store %struct.hash_table* %0, %struct.hash_table** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.hash_table** %4, metadata !6343, metadata !DIExpression()), !dbg !6344
  store i64 %1, i64* %5, align 8
  call void @llvm.dbg.declare(metadata i64* %5, metadata !6345, metadata !DIExpression()), !dbg !6346
  call void @llvm.dbg.declare(metadata %struct.hash_table* %6, metadata !6347, metadata !DIExpression()), !dbg !6348
  call void @llvm.dbg.declare(metadata %struct.hash_table** %7, metadata !6349, metadata !DIExpression()), !dbg !6350
  call void @llvm.dbg.declare(metadata i64* %8, metadata !6351, metadata !DIExpression()), !dbg !6352
  %9 = load i64, i64* %5, align 8, !dbg !6353
  %10 = load %struct.hash_table*, %struct.hash_table** %4, align 8, !dbg !6354
  %11 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %10, i32 0, i32 5, !dbg !6355
  %12 = load %struct.hash_tuning*, %struct.hash_tuning** %11, align 8, !dbg !6355
  %13 = call i64 @compute_bucket_size(i64 %9, %struct.hash_tuning* %12), !dbg !6356
  store i64 %13, i64* %8, align 8, !dbg !6352
  %14 = load i64, i64* %8, align 8, !dbg !6357
  %15 = icmp ne i64 %14, 0, !dbg !6357
  br i1 %15, label %17, label %16, !dbg !6359

; <label>:16:                                     ; preds = %2
  store i1 false, i1* %3, align 1, !dbg !6360
  br label %127, !dbg !6360

; <label>:17:                                     ; preds = %2
  %18 = load i64, i64* %8, align 8, !dbg !6361
  %19 = load %struct.hash_table*, %struct.hash_table** %4, align 8, !dbg !6363
  %20 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %19, i32 0, i32 2, !dbg !6364
  %21 = load i64, i64* %20, align 8, !dbg !6364
  %22 = icmp eq i64 %18, %21, !dbg !6365
  br i1 %22, label %23, label %24, !dbg !6366

; <label>:23:                                     ; preds = %17
  store i1 true, i1* %3, align 1, !dbg !6367
  br label %127, !dbg !6367

; <label>:24:                                     ; preds = %17
  store %struct.hash_table* %6, %struct.hash_table** %7, align 8, !dbg !6368
  %25 = load i64, i64* %8, align 8, !dbg !6369
  %26 = call noalias i8* @calloc(i64 %25, i64 16) #8, !dbg !6370
  %27 = bitcast i8* %26 to %struct.hash_entry*, !dbg !6370
  %28 = load %struct.hash_table*, %struct.hash_table** %7, align 8, !dbg !6371
  %29 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %28, i32 0, i32 0, !dbg !6372
  store %struct.hash_entry* %27, %struct.hash_entry** %29, align 8, !dbg !6373
  %30 = load %struct.hash_table*, %struct.hash_table** %7, align 8, !dbg !6374
  %31 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %30, i32 0, i32 0, !dbg !6376
  %32 = load %struct.hash_entry*, %struct.hash_entry** %31, align 8, !dbg !6376
  %33 = icmp eq %struct.hash_entry* %32, null, !dbg !6377
  br i1 %33, label %34, label %35, !dbg !6378

; <label>:34:                                     ; preds = %24
  store i1 false, i1* %3, align 1, !dbg !6379
  br label %127, !dbg !6379

; <label>:35:                                     ; preds = %24
  %36 = load i64, i64* %8, align 8, !dbg !6380
  %37 = load %struct.hash_table*, %struct.hash_table** %7, align 8, !dbg !6381
  %38 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %37, i32 0, i32 2, !dbg !6382
  store i64 %36, i64* %38, align 8, !dbg !6383
  %39 = load %struct.hash_table*, %struct.hash_table** %7, align 8, !dbg !6384
  %40 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %39, i32 0, i32 0, !dbg !6385
  %41 = load %struct.hash_entry*, %struct.hash_entry** %40, align 8, !dbg !6385
  %42 = load i64, i64* %8, align 8, !dbg !6386
  %43 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %41, i64 %42, !dbg !6387
  %44 = load %struct.hash_table*, %struct.hash_table** %7, align 8, !dbg !6388
  %45 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %44, i32 0, i32 1, !dbg !6389
  store %struct.hash_entry* %43, %struct.hash_entry** %45, align 8, !dbg !6390
  %46 = load %struct.hash_table*, %struct.hash_table** %7, align 8, !dbg !6391
  %47 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %46, i32 0, i32 3, !dbg !6392
  store i64 0, i64* %47, align 8, !dbg !6393
  %48 = load %struct.hash_table*, %struct.hash_table** %7, align 8, !dbg !6394
  %49 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %48, i32 0, i32 4, !dbg !6395
  store i64 0, i64* %49, align 8, !dbg !6396
  %50 = load %struct.hash_table*, %struct.hash_table** %4, align 8, !dbg !6397
  %51 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %50, i32 0, i32 5, !dbg !6398
  %52 = load %struct.hash_tuning*, %struct.hash_tuning** %51, align 8, !dbg !6398
  %53 = load %struct.hash_table*, %struct.hash_table** %7, align 8, !dbg !6399
  %54 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %53, i32 0, i32 5, !dbg !6400
  store %struct.hash_tuning* %52, %struct.hash_tuning** %54, align 8, !dbg !6401
  %55 = load %struct.hash_table*, %struct.hash_table** %4, align 8, !dbg !6402
  %56 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %55, i32 0, i32 6, !dbg !6403
  %57 = load i64 (i8*, i64)*, i64 (i8*, i64)** %56, align 8, !dbg !6403
  %58 = load %struct.hash_table*, %struct.hash_table** %7, align 8, !dbg !6404
  %59 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %58, i32 0, i32 6, !dbg !6405
  store i64 (i8*, i64)* %57, i64 (i8*, i64)** %59, align 8, !dbg !6406
  %60 = load %struct.hash_table*, %struct.hash_table** %4, align 8, !dbg !6407
  %61 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %60, i32 0, i32 7, !dbg !6408
  %62 = load i1 (i8*, i8*)*, i1 (i8*, i8*)** %61, align 8, !dbg !6408
  %63 = load %struct.hash_table*, %struct.hash_table** %7, align 8, !dbg !6409
  %64 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %63, i32 0, i32 7, !dbg !6410
  store i1 (i8*, i8*)* %62, i1 (i8*, i8*)** %64, align 8, !dbg !6411
  %65 = load %struct.hash_table*, %struct.hash_table** %4, align 8, !dbg !6412
  %66 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %65, i32 0, i32 8, !dbg !6413
  %67 = load void (i8*)*, void (i8*)** %66, align 8, !dbg !6413
  %68 = load %struct.hash_table*, %struct.hash_table** %7, align 8, !dbg !6414
  %69 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %68, i32 0, i32 8, !dbg !6415
  store void (i8*)* %67, void (i8*)** %69, align 8, !dbg !6416
  %70 = load %struct.hash_table*, %struct.hash_table** %4, align 8, !dbg !6417
  %71 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %70, i32 0, i32 9, !dbg !6418
  %72 = load %struct.hash_entry*, %struct.hash_entry** %71, align 8, !dbg !6418
  %73 = load %struct.hash_table*, %struct.hash_table** %7, align 8, !dbg !6419
  %74 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %73, i32 0, i32 9, !dbg !6420
  store %struct.hash_entry* %72, %struct.hash_entry** %74, align 8, !dbg !6421
  %75 = load %struct.hash_table*, %struct.hash_table** %7, align 8, !dbg !6422
  %76 = load %struct.hash_table*, %struct.hash_table** %4, align 8, !dbg !6424
  %77 = call zeroext i1 @transfer_entries(%struct.hash_table* %75, %struct.hash_table* %76, i1 zeroext false), !dbg !6425
  br i1 %77, label %78, label %108, !dbg !6426

; <label>:78:                                     ; preds = %35
  %79 = load %struct.hash_table*, %struct.hash_table** %4, align 8, !dbg !6427
  %80 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %79, i32 0, i32 0, !dbg !6429
  %81 = load %struct.hash_entry*, %struct.hash_entry** %80, align 8, !dbg !6429
  %82 = bitcast %struct.hash_entry* %81 to i8*, !dbg !6427
  call void @free(i8* %82) #8, !dbg !6430
  %83 = load %struct.hash_table*, %struct.hash_table** %7, align 8, !dbg !6431
  %84 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %83, i32 0, i32 0, !dbg !6432
  %85 = load %struct.hash_entry*, %struct.hash_entry** %84, align 8, !dbg !6432
  %86 = load %struct.hash_table*, %struct.hash_table** %4, align 8, !dbg !6433
  %87 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %86, i32 0, i32 0, !dbg !6434
  store %struct.hash_entry* %85, %struct.hash_entry** %87, align 8, !dbg !6435
  %88 = load %struct.hash_table*, %struct.hash_table** %7, align 8, !dbg !6436
  %89 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %88, i32 0, i32 1, !dbg !6437
  %90 = load %struct.hash_entry*, %struct.hash_entry** %89, align 8, !dbg !6437
  %91 = load %struct.hash_table*, %struct.hash_table** %4, align 8, !dbg !6438
  %92 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %91, i32 0, i32 1, !dbg !6439
  store %struct.hash_entry* %90, %struct.hash_entry** %92, align 8, !dbg !6440
  %93 = load %struct.hash_table*, %struct.hash_table** %7, align 8, !dbg !6441
  %94 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %93, i32 0, i32 2, !dbg !6442
  %95 = load i64, i64* %94, align 8, !dbg !6442
  %96 = load %struct.hash_table*, %struct.hash_table** %4, align 8, !dbg !6443
  %97 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %96, i32 0, i32 2, !dbg !6444
  store i64 %95, i64* %97, align 8, !dbg !6445
  %98 = load %struct.hash_table*, %struct.hash_table** %7, align 8, !dbg !6446
  %99 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %98, i32 0, i32 3, !dbg !6447
  %100 = load i64, i64* %99, align 8, !dbg !6447
  %101 = load %struct.hash_table*, %struct.hash_table** %4, align 8, !dbg !6448
  %102 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %101, i32 0, i32 3, !dbg !6449
  store i64 %100, i64* %102, align 8, !dbg !6450
  %103 = load %struct.hash_table*, %struct.hash_table** %7, align 8, !dbg !6451
  %104 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %103, i32 0, i32 9, !dbg !6452
  %105 = load %struct.hash_entry*, %struct.hash_entry** %104, align 8, !dbg !6452
  %106 = load %struct.hash_table*, %struct.hash_table** %4, align 8, !dbg !6453
  %107 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %106, i32 0, i32 9, !dbg !6454
  store %struct.hash_entry* %105, %struct.hash_entry** %107, align 8, !dbg !6455
  store i1 true, i1* %3, align 1, !dbg !6456
  br label %127, !dbg !6456

; <label>:108:                                    ; preds = %35
  %109 = load %struct.hash_table*, %struct.hash_table** %7, align 8, !dbg !6457
  %110 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %109, i32 0, i32 9, !dbg !6458
  %111 = load %struct.hash_entry*, %struct.hash_entry** %110, align 8, !dbg !6458
  %112 = load %struct.hash_table*, %struct.hash_table** %4, align 8, !dbg !6459
  %113 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %112, i32 0, i32 9, !dbg !6460
  store %struct.hash_entry* %111, %struct.hash_entry** %113, align 8, !dbg !6461
  %114 = load %struct.hash_table*, %struct.hash_table** %4, align 8, !dbg !6462
  %115 = load %struct.hash_table*, %struct.hash_table** %7, align 8, !dbg !6464
  %116 = call zeroext i1 @transfer_entries(%struct.hash_table* %114, %struct.hash_table* %115, i1 zeroext true), !dbg !6465
  br i1 %116, label %117, label %121, !dbg !6466

; <label>:117:                                    ; preds = %108
  %118 = load %struct.hash_table*, %struct.hash_table** %4, align 8, !dbg !6467
  %119 = load %struct.hash_table*, %struct.hash_table** %7, align 8, !dbg !6468
  %120 = call zeroext i1 @transfer_entries(%struct.hash_table* %118, %struct.hash_table* %119, i1 zeroext false), !dbg !6469
  br i1 %120, label %122, label %121, !dbg !6470

; <label>:121:                                    ; preds = %117, %108
  call void @abort() #11, !dbg !6471
  unreachable, !dbg !6471

; <label>:122:                                    ; preds = %117
  %123 = load %struct.hash_table*, %struct.hash_table** %7, align 8, !dbg !6472
  %124 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %123, i32 0, i32 0, !dbg !6473
  %125 = load %struct.hash_entry*, %struct.hash_entry** %124, align 8, !dbg !6473
  %126 = bitcast %struct.hash_entry* %125 to i8*, !dbg !6472
  call void @free(i8* %126) #8, !dbg !6474
  store i1 false, i1* %3, align 1, !dbg !6475
  br label %127, !dbg !6475

; <label>:127:                                    ; preds = %122, %78, %34, %23, %16
  %128 = load i1, i1* %3, align 1, !dbg !6476
  ret i1 %128, !dbg !6476
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i1 @transfer_entries(%struct.hash_table*, %struct.hash_table*, i1 zeroext) #3 !dbg !6477 {
  %4 = alloca i1, align 1
  %5 = alloca %struct.hash_table*, align 8
  %6 = alloca %struct.hash_table*, align 8
  %7 = alloca i8, align 1
  %8 = alloca %struct.hash_entry*, align 8
  %9 = alloca %struct.hash_entry*, align 8
  %10 = alloca %struct.hash_entry*, align 8
  %11 = alloca i8*, align 8
  %12 = alloca %struct.hash_entry*, align 8
  %13 = alloca %struct.hash_entry*, align 8
  store %struct.hash_table* %0, %struct.hash_table** %5, align 8
  call void @llvm.dbg.declare(metadata %struct.hash_table** %5, metadata !6480, metadata !DIExpression()), !dbg !6481
  store %struct.hash_table* %1, %struct.hash_table** %6, align 8
  call void @llvm.dbg.declare(metadata %struct.hash_table** %6, metadata !6482, metadata !DIExpression()), !dbg !6483
  %14 = zext i1 %2 to i8
  store i8 %14, i8* %7, align 1
  call void @llvm.dbg.declare(metadata i8* %7, metadata !6484, metadata !DIExpression()), !dbg !6485
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %8, metadata !6486, metadata !DIExpression()), !dbg !6487
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %9, metadata !6488, metadata !DIExpression()), !dbg !6489
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %10, metadata !6490, metadata !DIExpression()), !dbg !6491
  %15 = load %struct.hash_table*, %struct.hash_table** %6, align 8, !dbg !6492
  %16 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %15, i32 0, i32 0, !dbg !6494
  %17 = load %struct.hash_entry*, %struct.hash_entry** %16, align 8, !dbg !6494
  store %struct.hash_entry* %17, %struct.hash_entry** %8, align 8, !dbg !6495
  br label %18, !dbg !6496

; <label>:18:                                     ; preds = %155, %3
  %19 = load %struct.hash_entry*, %struct.hash_entry** %8, align 8, !dbg !6497
  %20 = load %struct.hash_table*, %struct.hash_table** %6, align 8, !dbg !6499
  %21 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %20, i32 0, i32 1, !dbg !6500
  %22 = load %struct.hash_entry*, %struct.hash_entry** %21, align 8, !dbg !6500
  %23 = icmp ult %struct.hash_entry* %19, %22, !dbg !6501
  br i1 %23, label %24, label %158, !dbg !6502

; <label>:24:                                     ; preds = %18
  %25 = load %struct.hash_entry*, %struct.hash_entry** %8, align 8, !dbg !6503
  %26 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %25, i32 0, i32 0, !dbg !6505
  %27 = load i8*, i8** %26, align 8, !dbg !6505
  %28 = icmp ne i8* %27, null, !dbg !6503
  br i1 %28, label %29, label %154, !dbg !6506

; <label>:29:                                     ; preds = %24
  call void @llvm.dbg.declare(metadata i8** %11, metadata !6507, metadata !DIExpression()), !dbg !6509
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %12, metadata !6510, metadata !DIExpression()), !dbg !6511
  %30 = load %struct.hash_entry*, %struct.hash_entry** %8, align 8, !dbg !6512
  %31 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %30, i32 0, i32 1, !dbg !6514
  %32 = load %struct.hash_entry*, %struct.hash_entry** %31, align 8, !dbg !6514
  store %struct.hash_entry* %32, %struct.hash_entry** %9, align 8, !dbg !6515
  br label %33, !dbg !6516

; <label>:33:                                     ; preds = %86, %29
  %34 = load %struct.hash_entry*, %struct.hash_entry** %9, align 8, !dbg !6517
  %35 = icmp ne %struct.hash_entry* %34, null, !dbg !6519
  br i1 %35, label %36, label %88, !dbg !6519

; <label>:36:                                     ; preds = %33
  %37 = load %struct.hash_entry*, %struct.hash_entry** %9, align 8, !dbg !6520
  %38 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %37, i32 0, i32 0, !dbg !6522
  %39 = load i8*, i8** %38, align 8, !dbg !6522
  store i8* %39, i8** %11, align 8, !dbg !6523
  %40 = load %struct.hash_table*, %struct.hash_table** %5, align 8, !dbg !6524
  %41 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %40, i32 0, i32 0, !dbg !6525
  %42 = load %struct.hash_entry*, %struct.hash_entry** %41, align 8, !dbg !6525
  %43 = load %struct.hash_table*, %struct.hash_table** %5, align 8, !dbg !6526
  %44 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %43, i32 0, i32 6, !dbg !6527
  %45 = load i64 (i8*, i64)*, i64 (i8*, i64)** %44, align 8, !dbg !6527
  %46 = load i8*, i8** %11, align 8, !dbg !6528
  %47 = load %struct.hash_table*, %struct.hash_table** %5, align 8, !dbg !6529
  %48 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %47, i32 0, i32 2, !dbg !6530
  %49 = load i64, i64* %48, align 8, !dbg !6530
  %50 = call i64 %45(i8* %46, i64 %49), !dbg !6526
  %51 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %42, i64 %50, !dbg !6531
  store %struct.hash_entry* %51, %struct.hash_entry** %12, align 8, !dbg !6532
  %52 = load %struct.hash_entry*, %struct.hash_entry** %12, align 8, !dbg !6533
  %53 = load %struct.hash_table*, %struct.hash_table** %5, align 8, !dbg !6535
  %54 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %53, i32 0, i32 1, !dbg !6536
  %55 = load %struct.hash_entry*, %struct.hash_entry** %54, align 8, !dbg !6536
  %56 = icmp ult %struct.hash_entry* %52, %55, !dbg !6537
  br i1 %56, label %58, label %57, !dbg !6538

; <label>:57:                                     ; preds = %36
  call void @abort() #11, !dbg !6539
  unreachable, !dbg !6539

; <label>:58:                                     ; preds = %36
  %59 = load %struct.hash_entry*, %struct.hash_entry** %9, align 8, !dbg !6540
  %60 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %59, i32 0, i32 1, !dbg !6541
  %61 = load %struct.hash_entry*, %struct.hash_entry** %60, align 8, !dbg !6541
  store %struct.hash_entry* %61, %struct.hash_entry** %10, align 8, !dbg !6542
  %62 = load %struct.hash_entry*, %struct.hash_entry** %12, align 8, !dbg !6543
  %63 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %62, i32 0, i32 0, !dbg !6545
  %64 = load i8*, i8** %63, align 8, !dbg !6545
  %65 = icmp ne i8* %64, null, !dbg !6543
  br i1 %65, label %66, label %75, !dbg !6546

; <label>:66:                                     ; preds = %58
  %67 = load %struct.hash_entry*, %struct.hash_entry** %12, align 8, !dbg !6547
  %68 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %67, i32 0, i32 1, !dbg !6549
  %69 = load %struct.hash_entry*, %struct.hash_entry** %68, align 8, !dbg !6549
  %70 = load %struct.hash_entry*, %struct.hash_entry** %9, align 8, !dbg !6550
  %71 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %70, i32 0, i32 1, !dbg !6551
  store %struct.hash_entry* %69, %struct.hash_entry** %71, align 8, !dbg !6552
  %72 = load %struct.hash_entry*, %struct.hash_entry** %9, align 8, !dbg !6553
  %73 = load %struct.hash_entry*, %struct.hash_entry** %12, align 8, !dbg !6554
  %74 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %73, i32 0, i32 1, !dbg !6555
  store %struct.hash_entry* %72, %struct.hash_entry** %74, align 8, !dbg !6556
  br label %85, !dbg !6557

; <label>:75:                                     ; preds = %58
  %76 = load i8*, i8** %11, align 8, !dbg !6558
  %77 = load %struct.hash_entry*, %struct.hash_entry** %12, align 8, !dbg !6560
  %78 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %77, i32 0, i32 0, !dbg !6561
  store i8* %76, i8** %78, align 8, !dbg !6562
  %79 = load %struct.hash_table*, %struct.hash_table** %5, align 8, !dbg !6563
  %80 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %79, i32 0, i32 3, !dbg !6564
  %81 = load i64, i64* %80, align 8, !dbg !6565
  %82 = add i64 %81, 1, !dbg !6565
  store i64 %82, i64* %80, align 8, !dbg !6565
  %83 = load %struct.hash_table*, %struct.hash_table** %5, align 8, !dbg !6566
  %84 = load %struct.hash_entry*, %struct.hash_entry** %9, align 8, !dbg !6567
  call void @free_entry(%struct.hash_table* %83, %struct.hash_entry* %84), !dbg !6568
  br label %85

; <label>:85:                                     ; preds = %75, %66
  br label %86, !dbg !6569

; <label>:86:                                     ; preds = %85
  %87 = load %struct.hash_entry*, %struct.hash_entry** %10, align 8, !dbg !6570
  store %struct.hash_entry* %87, %struct.hash_entry** %9, align 8, !dbg !6571
  br label %33, !dbg !6572, !llvm.loop !6573

; <label>:88:                                     ; preds = %33
  %89 = load %struct.hash_entry*, %struct.hash_entry** %8, align 8, !dbg !6575
  %90 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %89, i32 0, i32 0, !dbg !6576
  %91 = load i8*, i8** %90, align 8, !dbg !6576
  store i8* %91, i8** %11, align 8, !dbg !6577
  %92 = load %struct.hash_entry*, %struct.hash_entry** %8, align 8, !dbg !6578
  %93 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %92, i32 0, i32 1, !dbg !6579
  store %struct.hash_entry* null, %struct.hash_entry** %93, align 8, !dbg !6580
  %94 = load i8, i8* %7, align 1, !dbg !6581
  %95 = trunc i8 %94 to i1, !dbg !6581
  br i1 %95, label %96, label %97, !dbg !6583

; <label>:96:                                     ; preds = %88
  br label %155, !dbg !6584

; <label>:97:                                     ; preds = %88
  %98 = load %struct.hash_table*, %struct.hash_table** %5, align 8, !dbg !6585
  %99 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %98, i32 0, i32 0, !dbg !6586
  %100 = load %struct.hash_entry*, %struct.hash_entry** %99, align 8, !dbg !6586
  %101 = load %struct.hash_table*, %struct.hash_table** %5, align 8, !dbg !6587
  %102 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %101, i32 0, i32 6, !dbg !6588
  %103 = load i64 (i8*, i64)*, i64 (i8*, i64)** %102, align 8, !dbg !6588
  %104 = load i8*, i8** %11, align 8, !dbg !6589
  %105 = load %struct.hash_table*, %struct.hash_table** %5, align 8, !dbg !6590
  %106 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %105, i32 0, i32 2, !dbg !6591
  %107 = load i64, i64* %106, align 8, !dbg !6591
  %108 = call i64 %103(i8* %104, i64 %107), !dbg !6587
  %109 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %100, i64 %108, !dbg !6592
  store %struct.hash_entry* %109, %struct.hash_entry** %12, align 8, !dbg !6593
  %110 = load %struct.hash_entry*, %struct.hash_entry** %12, align 8, !dbg !6594
  %111 = load %struct.hash_table*, %struct.hash_table** %5, align 8, !dbg !6596
  %112 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %111, i32 0, i32 1, !dbg !6597
  %113 = load %struct.hash_entry*, %struct.hash_entry** %112, align 8, !dbg !6597
  %114 = icmp ult %struct.hash_entry* %110, %113, !dbg !6598
  br i1 %114, label %116, label %115, !dbg !6599

; <label>:115:                                    ; preds = %97
  call void @abort() #11, !dbg !6600
  unreachable, !dbg !6600

; <label>:116:                                    ; preds = %97
  %117 = load %struct.hash_entry*, %struct.hash_entry** %12, align 8, !dbg !6601
  %118 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %117, i32 0, i32 0, !dbg !6603
  %119 = load i8*, i8** %118, align 8, !dbg !6603
  %120 = icmp ne i8* %119, null, !dbg !6601
  br i1 %120, label %121, label %139, !dbg !6604

; <label>:121:                                    ; preds = %116
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %13, metadata !6605, metadata !DIExpression()), !dbg !6607
  %122 = load %struct.hash_table*, %struct.hash_table** %5, align 8, !dbg !6608
  %123 = call %struct.hash_entry* @allocate_entry(%struct.hash_table* %122), !dbg !6609
  store %struct.hash_entry* %123, %struct.hash_entry** %13, align 8, !dbg !6607
  %124 = load %struct.hash_entry*, %struct.hash_entry** %13, align 8, !dbg !6610
  %125 = icmp eq %struct.hash_entry* %124, null, !dbg !6612
  br i1 %125, label %126, label %127, !dbg !6613

; <label>:126:                                    ; preds = %121
  store i1 false, i1* %4, align 1, !dbg !6614
  br label %159, !dbg !6614

; <label>:127:                                    ; preds = %121
  %128 = load i8*, i8** %11, align 8, !dbg !6615
  %129 = load %struct.hash_entry*, %struct.hash_entry** %13, align 8, !dbg !6616
  %130 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %129, i32 0, i32 0, !dbg !6617
  store i8* %128, i8** %130, align 8, !dbg !6618
  %131 = load %struct.hash_entry*, %struct.hash_entry** %12, align 8, !dbg !6619
  %132 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %131, i32 0, i32 1, !dbg !6620
  %133 = load %struct.hash_entry*, %struct.hash_entry** %132, align 8, !dbg !6620
  %134 = load %struct.hash_entry*, %struct.hash_entry** %13, align 8, !dbg !6621
  %135 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %134, i32 0, i32 1, !dbg !6622
  store %struct.hash_entry* %133, %struct.hash_entry** %135, align 8, !dbg !6623
  %136 = load %struct.hash_entry*, %struct.hash_entry** %13, align 8, !dbg !6624
  %137 = load %struct.hash_entry*, %struct.hash_entry** %12, align 8, !dbg !6625
  %138 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %137, i32 0, i32 1, !dbg !6626
  store %struct.hash_entry* %136, %struct.hash_entry** %138, align 8, !dbg !6627
  br label %147, !dbg !6628

; <label>:139:                                    ; preds = %116
  %140 = load i8*, i8** %11, align 8, !dbg !6629
  %141 = load %struct.hash_entry*, %struct.hash_entry** %12, align 8, !dbg !6631
  %142 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %141, i32 0, i32 0, !dbg !6632
  store i8* %140, i8** %142, align 8, !dbg !6633
  %143 = load %struct.hash_table*, %struct.hash_table** %5, align 8, !dbg !6634
  %144 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %143, i32 0, i32 3, !dbg !6635
  %145 = load i64, i64* %144, align 8, !dbg !6636
  %146 = add i64 %145, 1, !dbg !6636
  store i64 %146, i64* %144, align 8, !dbg !6636
  br label %147

; <label>:147:                                    ; preds = %139, %127
  %148 = load %struct.hash_entry*, %struct.hash_entry** %8, align 8, !dbg !6637
  %149 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %148, i32 0, i32 0, !dbg !6638
  store i8* null, i8** %149, align 8, !dbg !6639
  %150 = load %struct.hash_table*, %struct.hash_table** %6, align 8, !dbg !6640
  %151 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %150, i32 0, i32 3, !dbg !6641
  %152 = load i64, i64* %151, align 8, !dbg !6642
  %153 = add i64 %152, -1, !dbg !6642
  store i64 %153, i64* %151, align 8, !dbg !6642
  br label %154, !dbg !6643

; <label>:154:                                    ; preds = %147, %24
  br label %155, !dbg !6505

; <label>:155:                                    ; preds = %154, %96
  %156 = load %struct.hash_entry*, %struct.hash_entry** %8, align 8, !dbg !6644
  %157 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %156, i32 1, !dbg !6644
  store %struct.hash_entry* %157, %struct.hash_entry** %8, align 8, !dbg !6644
  br label %18, !dbg !6645, !llvm.loop !6646

; <label>:158:                                    ; preds = %18
  store i1 true, i1* %4, align 1, !dbg !6648
  br label %159, !dbg !6648

; <label>:159:                                    ; preds = %158, %126
  %160 = load i1, i1* %4, align 1, !dbg !6649
  ret i1 %160, !dbg !6649
}

; Function Attrs: noinline nounwind uwtable
define internal void @free_entry(%struct.hash_table*, %struct.hash_entry*) #3 !dbg !6650 {
  %3 = alloca %struct.hash_table*, align 8
  %4 = alloca %struct.hash_entry*, align 8
  store %struct.hash_table* %0, %struct.hash_table** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.hash_table** %3, metadata !6653, metadata !DIExpression()), !dbg !6654
  store %struct.hash_entry* %1, %struct.hash_entry** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %4, metadata !6655, metadata !DIExpression()), !dbg !6656
  %5 = load %struct.hash_entry*, %struct.hash_entry** %4, align 8, !dbg !6657
  %6 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %5, i32 0, i32 0, !dbg !6658
  store i8* null, i8** %6, align 8, !dbg !6659
  %7 = load %struct.hash_table*, %struct.hash_table** %3, align 8, !dbg !6660
  %8 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %7, i32 0, i32 9, !dbg !6661
  %9 = load %struct.hash_entry*, %struct.hash_entry** %8, align 8, !dbg !6661
  %10 = load %struct.hash_entry*, %struct.hash_entry** %4, align 8, !dbg !6662
  %11 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %10, i32 0, i32 1, !dbg !6663
  store %struct.hash_entry* %9, %struct.hash_entry** %11, align 8, !dbg !6664
  %12 = load %struct.hash_entry*, %struct.hash_entry** %4, align 8, !dbg !6665
  %13 = load %struct.hash_table*, %struct.hash_table** %3, align 8, !dbg !6666
  %14 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %13, i32 0, i32 9, !dbg !6667
  store %struct.hash_entry* %12, %struct.hash_entry** %14, align 8, !dbg !6668
  ret void, !dbg !6669
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.hash_entry* @allocate_entry(%struct.hash_table*) #3 !dbg !6670 {
  %2 = alloca %struct.hash_table*, align 8
  %3 = alloca %struct.hash_entry*, align 8
  store %struct.hash_table* %0, %struct.hash_table** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.hash_table** %2, metadata !6673, metadata !DIExpression()), !dbg !6674
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %3, metadata !6675, metadata !DIExpression()), !dbg !6676
  %4 = load %struct.hash_table*, %struct.hash_table** %2, align 8, !dbg !6677
  %5 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %4, i32 0, i32 9, !dbg !6679
  %6 = load %struct.hash_entry*, %struct.hash_entry** %5, align 8, !dbg !6679
  %7 = icmp ne %struct.hash_entry* %6, null, !dbg !6677
  br i1 %7, label %8, label %17, !dbg !6680

; <label>:8:                                      ; preds = %1
  %9 = load %struct.hash_table*, %struct.hash_table** %2, align 8, !dbg !6681
  %10 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %9, i32 0, i32 9, !dbg !6683
  %11 = load %struct.hash_entry*, %struct.hash_entry** %10, align 8, !dbg !6683
  store %struct.hash_entry* %11, %struct.hash_entry** %3, align 8, !dbg !6684
  %12 = load %struct.hash_entry*, %struct.hash_entry** %3, align 8, !dbg !6685
  %13 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %12, i32 0, i32 1, !dbg !6686
  %14 = load %struct.hash_entry*, %struct.hash_entry** %13, align 8, !dbg !6686
  %15 = load %struct.hash_table*, %struct.hash_table** %2, align 8, !dbg !6687
  %16 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %15, i32 0, i32 9, !dbg !6688
  store %struct.hash_entry* %14, %struct.hash_entry** %16, align 8, !dbg !6689
  br label %20, !dbg !6690

; <label>:17:                                     ; preds = %1
  %18 = call noalias i8* @malloc(i64 16) #8, !dbg !6691
  %19 = bitcast i8* %18 to %struct.hash_entry*, !dbg !6691
  store %struct.hash_entry* %19, %struct.hash_entry** %3, align 8, !dbg !6693
  br label %20

; <label>:20:                                     ; preds = %17, %8
  %21 = load %struct.hash_entry*, %struct.hash_entry** %3, align 8, !dbg !6694
  ret %struct.hash_entry* %21, !dbg !6695
}

; Function Attrs: noinline nounwind uwtable
define i8* @hash_insert(%struct.hash_table*, i8*) #3 !dbg !6696 {
  %3 = alloca i8*, align 8
  %4 = alloca %struct.hash_table*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca %struct.hash_entry*, align 8
  %8 = alloca %struct.hash_tuning*, align 8
  %9 = alloca float, align 4
  %10 = alloca %struct.hash_entry*, align 8
  store %struct.hash_table* %0, %struct.hash_table** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.hash_table** %4, metadata !6699, metadata !DIExpression()), !dbg !6700
  store i8* %1, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !6701, metadata !DIExpression()), !dbg !6702
  call void @llvm.dbg.declare(metadata i8** %6, metadata !6703, metadata !DIExpression()), !dbg !6704
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %7, metadata !6705, metadata !DIExpression()), !dbg !6706
  %11 = load i8*, i8** %5, align 8, !dbg !6707
  %12 = icmp ne i8* %11, null, !dbg !6707
  br i1 %12, label %14, label %13, !dbg !6709

; <label>:13:                                     ; preds = %2
  call void @abort() #11, !dbg !6710
  unreachable, !dbg !6710

; <label>:14:                                     ; preds = %2
  %15 = load %struct.hash_table*, %struct.hash_table** %4, align 8, !dbg !6711
  %16 = load i8*, i8** %5, align 8, !dbg !6713
  %17 = call i8* @hash_find_entry(%struct.hash_table* %15, i8* %16, %struct.hash_entry** %7, i1 zeroext false), !dbg !6714
  store i8* %17, i8** %6, align 8, !dbg !6715
  %18 = icmp ne i8* %17, null, !dbg !6716
  br i1 %18, label %19, label %21, !dbg !6717

; <label>:19:                                     ; preds = %14
  %20 = load i8*, i8** %6, align 8, !dbg !6718
  store i8* %20, i8** %3, align 8, !dbg !6719
  br label %145, !dbg !6719

; <label>:21:                                     ; preds = %14
  %22 = load %struct.hash_table*, %struct.hash_table** %4, align 8, !dbg !6720
  %23 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %22, i32 0, i32 3, !dbg !6722
  %24 = load i64, i64* %23, align 8, !dbg !6722
  %25 = uitofp i64 %24 to float, !dbg !6720
  %26 = load %struct.hash_table*, %struct.hash_table** %4, align 8, !dbg !6723
  %27 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %26, i32 0, i32 5, !dbg !6724
  %28 = load %struct.hash_tuning*, %struct.hash_tuning** %27, align 8, !dbg !6724
  %29 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %28, i32 0, i32 2, !dbg !6725
  %30 = load float, float* %29, align 4, !dbg !6725
  %31 = load %struct.hash_table*, %struct.hash_table** %4, align 8, !dbg !6726
  %32 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %31, i32 0, i32 2, !dbg !6727
  %33 = load i64, i64* %32, align 8, !dbg !6727
  %34 = uitofp i64 %33 to float, !dbg !6726
  %35 = fmul float %30, %34, !dbg !6728
  %36 = fcmp ogt float %25, %35, !dbg !6729
  br i1 %36, label %37, label %104, !dbg !6730

; <label>:37:                                     ; preds = %21
  %38 = load %struct.hash_table*, %struct.hash_table** %4, align 8, !dbg !6731
  %39 = call zeroext i1 @check_tuning(%struct.hash_table* %38), !dbg !6733
  %40 = load %struct.hash_table*, %struct.hash_table** %4, align 8, !dbg !6734
  %41 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %40, i32 0, i32 3, !dbg !6736
  %42 = load i64, i64* %41, align 8, !dbg !6736
  %43 = uitofp i64 %42 to float, !dbg !6734
  %44 = load %struct.hash_table*, %struct.hash_table** %4, align 8, !dbg !6737
  %45 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %44, i32 0, i32 5, !dbg !6738
  %46 = load %struct.hash_tuning*, %struct.hash_tuning** %45, align 8, !dbg !6738
  %47 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %46, i32 0, i32 2, !dbg !6739
  %48 = load float, float* %47, align 4, !dbg !6739
  %49 = load %struct.hash_table*, %struct.hash_table** %4, align 8, !dbg !6740
  %50 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %49, i32 0, i32 2, !dbg !6741
  %51 = load i64, i64* %50, align 8, !dbg !6741
  %52 = uitofp i64 %51 to float, !dbg !6740
  %53 = fmul float %48, %52, !dbg !6742
  %54 = fcmp ogt float %43, %53, !dbg !6743
  br i1 %54, label %55, label %103, !dbg !6744

; <label>:55:                                     ; preds = %37
  call void @llvm.dbg.declare(metadata %struct.hash_tuning** %8, metadata !6745, metadata !DIExpression()), !dbg !6747
  %56 = load %struct.hash_table*, %struct.hash_table** %4, align 8, !dbg !6748
  %57 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %56, i32 0, i32 5, !dbg !6749
  %58 = load %struct.hash_tuning*, %struct.hash_tuning** %57, align 8, !dbg !6749
  store %struct.hash_tuning* %58, %struct.hash_tuning** %8, align 8, !dbg !6747
  call void @llvm.dbg.declare(metadata float* %9, metadata !6750, metadata !DIExpression()), !dbg !6751
  %59 = load %struct.hash_tuning*, %struct.hash_tuning** %8, align 8, !dbg !6752
  %60 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %59, i32 0, i32 4, !dbg !6753
  %61 = load i8, i8* %60, align 4, !dbg !6753
  %62 = trunc i8 %61 to i1, !dbg !6753
  br i1 %62, label %63, label %72, !dbg !6752

; <label>:63:                                     ; preds = %55
  %64 = load %struct.hash_table*, %struct.hash_table** %4, align 8, !dbg !6754
  %65 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %64, i32 0, i32 2, !dbg !6755
  %66 = load i64, i64* %65, align 8, !dbg !6755
  %67 = uitofp i64 %66 to float, !dbg !6754
  %68 = load %struct.hash_tuning*, %struct.hash_tuning** %8, align 8, !dbg !6756
  %69 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %68, i32 0, i32 3, !dbg !6757
  %70 = load float, float* %69, align 4, !dbg !6757
  %71 = fmul float %67, %70, !dbg !6758
  br label %85, !dbg !6752

; <label>:72:                                     ; preds = %55
  %73 = load %struct.hash_table*, %struct.hash_table** %4, align 8, !dbg !6759
  %74 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %73, i32 0, i32 2, !dbg !6760
  %75 = load i64, i64* %74, align 8, !dbg !6760
  %76 = uitofp i64 %75 to float, !dbg !6759
  %77 = load %struct.hash_tuning*, %struct.hash_tuning** %8, align 8, !dbg !6761
  %78 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %77, i32 0, i32 3, !dbg !6762
  %79 = load float, float* %78, align 4, !dbg !6762
  %80 = fmul float %76, %79, !dbg !6763
  %81 = load %struct.hash_tuning*, %struct.hash_tuning** %8, align 8, !dbg !6764
  %82 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %81, i32 0, i32 2, !dbg !6765
  %83 = load float, float* %82, align 4, !dbg !6765
  %84 = fmul float %80, %83, !dbg !6766
  br label %85, !dbg !6752

; <label>:85:                                     ; preds = %72, %63
  %86 = phi float [ %71, %63 ], [ %84, %72 ], !dbg !6752
  store float %86, float* %9, align 4, !dbg !6751
  %87 = load float, float* %9, align 4, !dbg !6767
  %88 = fcmp ole float 0x43F0000000000000, %87, !dbg !6769
  br i1 %88, label %89, label %90, !dbg !6770

; <label>:89:                                     ; preds = %85
  store i8* null, i8** %3, align 8, !dbg !6771
  br label %145, !dbg !6771

; <label>:90:                                     ; preds = %85
  %91 = load %struct.hash_table*, %struct.hash_table** %4, align 8, !dbg !6772
  %92 = load float, float* %9, align 4, !dbg !6774
  %93 = fptoui float %92 to i64, !dbg !6774
  %94 = call zeroext i1 @hash_rehash(%struct.hash_table* %91, i64 %93), !dbg !6775
  br i1 %94, label %96, label %95, !dbg !6776

; <label>:95:                                     ; preds = %90
  store i8* null, i8** %3, align 8, !dbg !6777
  br label %145, !dbg !6777

; <label>:96:                                     ; preds = %90
  %97 = load %struct.hash_table*, %struct.hash_table** %4, align 8, !dbg !6778
  %98 = load i8*, i8** %5, align 8, !dbg !6780
  %99 = call i8* @hash_find_entry(%struct.hash_table* %97, i8* %98, %struct.hash_entry** %7, i1 zeroext false), !dbg !6781
  %100 = icmp ne i8* %99, null, !dbg !6782
  br i1 %100, label %101, label %102, !dbg !6783

; <label>:101:                                    ; preds = %96
  call void @abort() #11, !dbg !6784
  unreachable, !dbg !6784

; <label>:102:                                    ; preds = %96
  br label %103, !dbg !6785

; <label>:103:                                    ; preds = %102, %37
  br label %104, !dbg !6786

; <label>:104:                                    ; preds = %103, %21
  %105 = load %struct.hash_entry*, %struct.hash_entry** %7, align 8, !dbg !6787
  %106 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %105, i32 0, i32 0, !dbg !6789
  %107 = load i8*, i8** %106, align 8, !dbg !6789
  %108 = icmp ne i8* %107, null, !dbg !6787
  br i1 %108, label %109, label %132, !dbg !6790

; <label>:109:                                    ; preds = %104
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %10, metadata !6791, metadata !DIExpression()), !dbg !6793
  %110 = load %struct.hash_table*, %struct.hash_table** %4, align 8, !dbg !6794
  %111 = call %struct.hash_entry* @allocate_entry(%struct.hash_table* %110), !dbg !6795
  store %struct.hash_entry* %111, %struct.hash_entry** %10, align 8, !dbg !6793
  %112 = load %struct.hash_entry*, %struct.hash_entry** %10, align 8, !dbg !6796
  %113 = icmp eq %struct.hash_entry* %112, null, !dbg !6798
  br i1 %113, label %114, label %115, !dbg !6799

; <label>:114:                                    ; preds = %109
  store i8* null, i8** %3, align 8, !dbg !6800
  br label %145, !dbg !6800

; <label>:115:                                    ; preds = %109
  %116 = load i8*, i8** %5, align 8, !dbg !6801
  %117 = load %struct.hash_entry*, %struct.hash_entry** %10, align 8, !dbg !6802
  %118 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %117, i32 0, i32 0, !dbg !6803
  store i8* %116, i8** %118, align 8, !dbg !6804
  %119 = load %struct.hash_entry*, %struct.hash_entry** %7, align 8, !dbg !6805
  %120 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %119, i32 0, i32 1, !dbg !6806
  %121 = load %struct.hash_entry*, %struct.hash_entry** %120, align 8, !dbg !6806
  %122 = load %struct.hash_entry*, %struct.hash_entry** %10, align 8, !dbg !6807
  %123 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %122, i32 0, i32 1, !dbg !6808
  store %struct.hash_entry* %121, %struct.hash_entry** %123, align 8, !dbg !6809
  %124 = load %struct.hash_entry*, %struct.hash_entry** %10, align 8, !dbg !6810
  %125 = load %struct.hash_entry*, %struct.hash_entry** %7, align 8, !dbg !6811
  %126 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %125, i32 0, i32 1, !dbg !6812
  store %struct.hash_entry* %124, %struct.hash_entry** %126, align 8, !dbg !6813
  %127 = load %struct.hash_table*, %struct.hash_table** %4, align 8, !dbg !6814
  %128 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %127, i32 0, i32 4, !dbg !6815
  %129 = load i64, i64* %128, align 8, !dbg !6816
  %130 = add i64 %129, 1, !dbg !6816
  store i64 %130, i64* %128, align 8, !dbg !6816
  %131 = load i8*, i8** %5, align 8, !dbg !6817
  store i8* %131, i8** %3, align 8, !dbg !6818
  br label %145, !dbg !6818

; <label>:132:                                    ; preds = %104
  %133 = load i8*, i8** %5, align 8, !dbg !6819
  %134 = load %struct.hash_entry*, %struct.hash_entry** %7, align 8, !dbg !6820
  %135 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %134, i32 0, i32 0, !dbg !6821
  store i8* %133, i8** %135, align 8, !dbg !6822
  %136 = load %struct.hash_table*, %struct.hash_table** %4, align 8, !dbg !6823
  %137 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %136, i32 0, i32 4, !dbg !6824
  %138 = load i64, i64* %137, align 8, !dbg !6825
  %139 = add i64 %138, 1, !dbg !6825
  store i64 %139, i64* %137, align 8, !dbg !6825
  %140 = load %struct.hash_table*, %struct.hash_table** %4, align 8, !dbg !6826
  %141 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %140, i32 0, i32 3, !dbg !6827
  %142 = load i64, i64* %141, align 8, !dbg !6828
  %143 = add i64 %142, 1, !dbg !6828
  store i64 %143, i64* %141, align 8, !dbg !6828
  %144 = load i8*, i8** %5, align 8, !dbg !6829
  store i8* %144, i8** %3, align 8, !dbg !6830
  br label %145, !dbg !6830

; <label>:145:                                    ; preds = %132, %115, %114, %95, %89, %19
  %146 = load i8*, i8** %3, align 8, !dbg !6831
  ret i8* %146, !dbg !6831
}

; Function Attrs: noinline nounwind uwtable
define internal i8* @hash_find_entry(%struct.hash_table*, i8*, %struct.hash_entry**, i1 zeroext) #3 !dbg !6832 {
  %5 = alloca i8*, align 8
  %6 = alloca %struct.hash_table*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca %struct.hash_entry**, align 8
  %9 = alloca i8, align 1
  %10 = alloca %struct.hash_entry*, align 8
  %11 = alloca %struct.hash_entry*, align 8
  %12 = alloca i8*, align 8
  %13 = alloca %struct.hash_entry*, align 8
  %14 = alloca i8*, align 8
  %15 = alloca %struct.hash_entry*, align 8
  store %struct.hash_table* %0, %struct.hash_table** %6, align 8
  call void @llvm.dbg.declare(metadata %struct.hash_table** %6, metadata !6836, metadata !DIExpression()), !dbg !6837
  store i8* %1, i8** %7, align 8
  call void @llvm.dbg.declare(metadata i8** %7, metadata !6838, metadata !DIExpression()), !dbg !6839
  store %struct.hash_entry** %2, %struct.hash_entry*** %8, align 8
  call void @llvm.dbg.declare(metadata %struct.hash_entry*** %8, metadata !6840, metadata !DIExpression()), !dbg !6841
  %16 = zext i1 %3 to i8
  store i8 %16, i8* %9, align 1
  call void @llvm.dbg.declare(metadata i8* %9, metadata !6842, metadata !DIExpression()), !dbg !6843
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %10, metadata !6844, metadata !DIExpression()), !dbg !6845
  %17 = load %struct.hash_table*, %struct.hash_table** %6, align 8, !dbg !6846
  %18 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %17, i32 0, i32 0, !dbg !6847
  %19 = load %struct.hash_entry*, %struct.hash_entry** %18, align 8, !dbg !6847
  %20 = load %struct.hash_table*, %struct.hash_table** %6, align 8, !dbg !6848
  %21 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %20, i32 0, i32 6, !dbg !6849
  %22 = load i64 (i8*, i64)*, i64 (i8*, i64)** %21, align 8, !dbg !6849
  %23 = load i8*, i8** %7, align 8, !dbg !6850
  %24 = load %struct.hash_table*, %struct.hash_table** %6, align 8, !dbg !6851
  %25 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %24, i32 0, i32 2, !dbg !6852
  %26 = load i64, i64* %25, align 8, !dbg !6852
  %27 = call i64 %22(i8* %23, i64 %26), !dbg !6848
  %28 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %19, i64 %27, !dbg !6853
  store %struct.hash_entry* %28, %struct.hash_entry** %10, align 8, !dbg !6845
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %11, metadata !6854, metadata !DIExpression()), !dbg !6855
  %29 = load %struct.hash_entry*, %struct.hash_entry** %10, align 8, !dbg !6856
  %30 = load %struct.hash_table*, %struct.hash_table** %6, align 8, !dbg !6858
  %31 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %30, i32 0, i32 1, !dbg !6859
  %32 = load %struct.hash_entry*, %struct.hash_entry** %31, align 8, !dbg !6859
  %33 = icmp ult %struct.hash_entry* %29, %32, !dbg !6860
  br i1 %33, label %35, label %34, !dbg !6861

; <label>:34:                                     ; preds = %4
  call void @abort() #11, !dbg !6862
  unreachable, !dbg !6862

; <label>:35:                                     ; preds = %4
  %36 = load %struct.hash_entry*, %struct.hash_entry** %10, align 8, !dbg !6863
  %37 = load %struct.hash_entry**, %struct.hash_entry*** %8, align 8, !dbg !6864
  store %struct.hash_entry* %36, %struct.hash_entry** %37, align 8, !dbg !6865
  %38 = load %struct.hash_entry*, %struct.hash_entry** %10, align 8, !dbg !6866
  %39 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %38, i32 0, i32 0, !dbg !6868
  %40 = load i8*, i8** %39, align 8, !dbg !6868
  %41 = icmp eq i8* %40, null, !dbg !6869
  br i1 %41, label %42, label %43, !dbg !6870

; <label>:42:                                     ; preds = %35
  store i8* null, i8** %5, align 8, !dbg !6871
  br label %138, !dbg !6871

; <label>:43:                                     ; preds = %35
  %44 = load i8*, i8** %7, align 8, !dbg !6872
  %45 = load %struct.hash_entry*, %struct.hash_entry** %10, align 8, !dbg !6874
  %46 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %45, i32 0, i32 0, !dbg !6875
  %47 = load i8*, i8** %46, align 8, !dbg !6875
  %48 = icmp eq i8* %44, %47, !dbg !6876
  br i1 %48, label %58, label %49, !dbg !6877

; <label>:49:                                     ; preds = %43
  %50 = load %struct.hash_table*, %struct.hash_table** %6, align 8, !dbg !6878
  %51 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %50, i32 0, i32 7, !dbg !6879
  %52 = load i1 (i8*, i8*)*, i1 (i8*, i8*)** %51, align 8, !dbg !6879
  %53 = load i8*, i8** %7, align 8, !dbg !6880
  %54 = load %struct.hash_entry*, %struct.hash_entry** %10, align 8, !dbg !6881
  %55 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %54, i32 0, i32 0, !dbg !6882
  %56 = load i8*, i8** %55, align 8, !dbg !6882
  %57 = call zeroext i1 %52(i8* %53, i8* %56), !dbg !6878
  br i1 %57, label %58, label %85, !dbg !6883

; <label>:58:                                     ; preds = %49, %43
  call void @llvm.dbg.declare(metadata i8** %12, metadata !6884, metadata !DIExpression()), !dbg !6886
  %59 = load %struct.hash_entry*, %struct.hash_entry** %10, align 8, !dbg !6887
  %60 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %59, i32 0, i32 0, !dbg !6888
  %61 = load i8*, i8** %60, align 8, !dbg !6888
  store i8* %61, i8** %12, align 8, !dbg !6886
  %62 = load i8, i8* %9, align 1, !dbg !6889
  %63 = trunc i8 %62 to i1, !dbg !6889
  br i1 %63, label %64, label %83, !dbg !6891

; <label>:64:                                     ; preds = %58
  %65 = load %struct.hash_entry*, %struct.hash_entry** %10, align 8, !dbg !6892
  %66 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %65, i32 0, i32 1, !dbg !6895
  %67 = load %struct.hash_entry*, %struct.hash_entry** %66, align 8, !dbg !6895
  %68 = icmp ne %struct.hash_entry* %67, null, !dbg !6892
  br i1 %68, label %69, label %79, !dbg !6896

; <label>:69:                                     ; preds = %64
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %13, metadata !6897, metadata !DIExpression()), !dbg !6899
  %70 = load %struct.hash_entry*, %struct.hash_entry** %10, align 8, !dbg !6900
  %71 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %70, i32 0, i32 1, !dbg !6901
  %72 = load %struct.hash_entry*, %struct.hash_entry** %71, align 8, !dbg !6901
  store %struct.hash_entry* %72, %struct.hash_entry** %13, align 8, !dbg !6899
  %73 = load %struct.hash_entry*, %struct.hash_entry** %10, align 8, !dbg !6902
  %74 = load %struct.hash_entry*, %struct.hash_entry** %13, align 8, !dbg !6903
  %75 = bitcast %struct.hash_entry* %73 to i8*, !dbg !6904
  %76 = bitcast %struct.hash_entry* %74 to i8*, !dbg !6904
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %75, i8* %76, i64 16, i32 8, i1 false), !dbg !6904
  %77 = load %struct.hash_table*, %struct.hash_table** %6, align 8, !dbg !6905
  %78 = load %struct.hash_entry*, %struct.hash_entry** %13, align 8, !dbg !6906
  call void @free_entry(%struct.hash_table* %77, %struct.hash_entry* %78), !dbg !6907
  br label %82, !dbg !6908

; <label>:79:                                     ; preds = %64
  %80 = load %struct.hash_entry*, %struct.hash_entry** %10, align 8, !dbg !6909
  %81 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %80, i32 0, i32 0, !dbg !6911
  store i8* null, i8** %81, align 8, !dbg !6912
  br label %82

; <label>:82:                                     ; preds = %79, %69
  br label %83, !dbg !6913

; <label>:83:                                     ; preds = %82, %58
  %84 = load i8*, i8** %12, align 8, !dbg !6914
  store i8* %84, i8** %5, align 8, !dbg !6915
  br label %138, !dbg !6915

; <label>:85:                                     ; preds = %49
  %86 = load %struct.hash_entry*, %struct.hash_entry** %10, align 8, !dbg !6916
  store %struct.hash_entry* %86, %struct.hash_entry** %11, align 8, !dbg !6918
  br label %87, !dbg !6919

; <label>:87:                                     ; preds = %133, %85
  %88 = load %struct.hash_entry*, %struct.hash_entry** %11, align 8, !dbg !6920
  %89 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %88, i32 0, i32 1, !dbg !6922
  %90 = load %struct.hash_entry*, %struct.hash_entry** %89, align 8, !dbg !6922
  %91 = icmp ne %struct.hash_entry* %90, null, !dbg !6923
  br i1 %91, label %92, label %137, !dbg !6923

; <label>:92:                                     ; preds = %87
  %93 = load i8*, i8** %7, align 8, !dbg !6924
  %94 = load %struct.hash_entry*, %struct.hash_entry** %11, align 8, !dbg !6927
  %95 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %94, i32 0, i32 1, !dbg !6928
  %96 = load %struct.hash_entry*, %struct.hash_entry** %95, align 8, !dbg !6928
  %97 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %96, i32 0, i32 0, !dbg !6929
  %98 = load i8*, i8** %97, align 8, !dbg !6929
  %99 = icmp eq i8* %93, %98, !dbg !6930
  br i1 %99, label %111, label %100, !dbg !6931

; <label>:100:                                    ; preds = %92
  %101 = load %struct.hash_table*, %struct.hash_table** %6, align 8, !dbg !6932
  %102 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %101, i32 0, i32 7, !dbg !6933
  %103 = load i1 (i8*, i8*)*, i1 (i8*, i8*)** %102, align 8, !dbg !6933
  %104 = load i8*, i8** %7, align 8, !dbg !6934
  %105 = load %struct.hash_entry*, %struct.hash_entry** %11, align 8, !dbg !6935
  %106 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %105, i32 0, i32 1, !dbg !6936
  %107 = load %struct.hash_entry*, %struct.hash_entry** %106, align 8, !dbg !6936
  %108 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %107, i32 0, i32 0, !dbg !6937
  %109 = load i8*, i8** %108, align 8, !dbg !6937
  %110 = call zeroext i1 %103(i8* %104, i8* %109), !dbg !6932
  br i1 %110, label %111, label %132, !dbg !6938

; <label>:111:                                    ; preds = %100, %92
  call void @llvm.dbg.declare(metadata i8** %14, metadata !6939, metadata !DIExpression()), !dbg !6941
  %112 = load %struct.hash_entry*, %struct.hash_entry** %11, align 8, !dbg !6942
  %113 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %112, i32 0, i32 1, !dbg !6943
  %114 = load %struct.hash_entry*, %struct.hash_entry** %113, align 8, !dbg !6943
  %115 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %114, i32 0, i32 0, !dbg !6944
  %116 = load i8*, i8** %115, align 8, !dbg !6944
  store i8* %116, i8** %14, align 8, !dbg !6941
  %117 = load i8, i8* %9, align 1, !dbg !6945
  %118 = trunc i8 %117 to i1, !dbg !6945
  br i1 %118, label %119, label %130, !dbg !6947

; <label>:119:                                    ; preds = %111
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %15, metadata !6948, metadata !DIExpression()), !dbg !6950
  %120 = load %struct.hash_entry*, %struct.hash_entry** %11, align 8, !dbg !6951
  %121 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %120, i32 0, i32 1, !dbg !6952
  %122 = load %struct.hash_entry*, %struct.hash_entry** %121, align 8, !dbg !6952
  store %struct.hash_entry* %122, %struct.hash_entry** %15, align 8, !dbg !6950
  %123 = load %struct.hash_entry*, %struct.hash_entry** %15, align 8, !dbg !6953
  %124 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %123, i32 0, i32 1, !dbg !6954
  %125 = load %struct.hash_entry*, %struct.hash_entry** %124, align 8, !dbg !6954
  %126 = load %struct.hash_entry*, %struct.hash_entry** %11, align 8, !dbg !6955
  %127 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %126, i32 0, i32 1, !dbg !6956
  store %struct.hash_entry* %125, %struct.hash_entry** %127, align 8, !dbg !6957
  %128 = load %struct.hash_table*, %struct.hash_table** %6, align 8, !dbg !6958
  %129 = load %struct.hash_entry*, %struct.hash_entry** %15, align 8, !dbg !6959
  call void @free_entry(%struct.hash_table* %128, %struct.hash_entry* %129), !dbg !6960
  br label %130, !dbg !6961

; <label>:130:                                    ; preds = %119, %111
  %131 = load i8*, i8** %14, align 8, !dbg !6962
  store i8* %131, i8** %5, align 8, !dbg !6963
  br label %138, !dbg !6963

; <label>:132:                                    ; preds = %100
  br label %133, !dbg !6964

; <label>:133:                                    ; preds = %132
  %134 = load %struct.hash_entry*, %struct.hash_entry** %11, align 8, !dbg !6965
  %135 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %134, i32 0, i32 1, !dbg !6966
  %136 = load %struct.hash_entry*, %struct.hash_entry** %135, align 8, !dbg !6966
  store %struct.hash_entry* %136, %struct.hash_entry** %11, align 8, !dbg !6967
  br label %87, !dbg !6968, !llvm.loop !6969

; <label>:137:                                    ; preds = %87
  store i8* null, i8** %5, align 8, !dbg !6971
  br label %138, !dbg !6971

; <label>:138:                                    ; preds = %137, %130, %83, %42
  %139 = load i8*, i8** %5, align 8, !dbg !6972
  ret i8* %139, !dbg !6972
}

; Function Attrs: noinline nounwind uwtable
define i8* @hash_delete(%struct.hash_table*, i8*) #3 !dbg !6973 {
  %3 = alloca i8*, align 8
  %4 = alloca %struct.hash_table*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca %struct.hash_entry*, align 8
  %8 = alloca %struct.hash_tuning*, align 8
  %9 = alloca i64, align 8
  %10 = alloca %struct.hash_entry*, align 8
  %11 = alloca %struct.hash_entry*, align 8
  store %struct.hash_table* %0, %struct.hash_table** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.hash_table** %4, metadata !6974, metadata !DIExpression()), !dbg !6975
  store i8* %1, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !6976, metadata !DIExpression()), !dbg !6977
  call void @llvm.dbg.declare(metadata i8** %6, metadata !6978, metadata !DIExpression()), !dbg !6979
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %7, metadata !6980, metadata !DIExpression()), !dbg !6981
  %12 = load %struct.hash_table*, %struct.hash_table** %4, align 8, !dbg !6982
  %13 = load i8*, i8** %5, align 8, !dbg !6983
  %14 = call i8* @hash_find_entry(%struct.hash_table* %12, i8* %13, %struct.hash_entry** %7, i1 zeroext true), !dbg !6984
  store i8* %14, i8** %6, align 8, !dbg !6985
  %15 = load i8*, i8** %6, align 8, !dbg !6986
  %16 = icmp ne i8* %15, null, !dbg !6986
  br i1 %16, label %18, label %17, !dbg !6988

; <label>:17:                                     ; preds = %2
  store i8* null, i8** %3, align 8, !dbg !6989
  br label %123, !dbg !6989

; <label>:18:                                     ; preds = %2
  %19 = load %struct.hash_table*, %struct.hash_table** %4, align 8, !dbg !6990
  %20 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %19, i32 0, i32 4, !dbg !6991
  %21 = load i64, i64* %20, align 8, !dbg !6992
  %22 = add i64 %21, -1, !dbg !6992
  store i64 %22, i64* %20, align 8, !dbg !6992
  %23 = load %struct.hash_entry*, %struct.hash_entry** %7, align 8, !dbg !6993
  %24 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %23, i32 0, i32 0, !dbg !6995
  %25 = load i8*, i8** %24, align 8, !dbg !6995
  %26 = icmp ne i8* %25, null, !dbg !6993
  br i1 %26, label %121, label %27, !dbg !6996

; <label>:27:                                     ; preds = %18
  %28 = load %struct.hash_table*, %struct.hash_table** %4, align 8, !dbg !6997
  %29 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %28, i32 0, i32 3, !dbg !6999
  %30 = load i64, i64* %29, align 8, !dbg !7000
  %31 = add i64 %30, -1, !dbg !7000
  store i64 %31, i64* %29, align 8, !dbg !7000
  %32 = load %struct.hash_table*, %struct.hash_table** %4, align 8, !dbg !7001
  %33 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %32, i32 0, i32 3, !dbg !7003
  %34 = load i64, i64* %33, align 8, !dbg !7003
  %35 = uitofp i64 %34 to float, !dbg !7001
  %36 = load %struct.hash_table*, %struct.hash_table** %4, align 8, !dbg !7004
  %37 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %36, i32 0, i32 5, !dbg !7005
  %38 = load %struct.hash_tuning*, %struct.hash_tuning** %37, align 8, !dbg !7005
  %39 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %38, i32 0, i32 0, !dbg !7006
  %40 = load float, float* %39, align 4, !dbg !7006
  %41 = load %struct.hash_table*, %struct.hash_table** %4, align 8, !dbg !7007
  %42 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %41, i32 0, i32 2, !dbg !7008
  %43 = load i64, i64* %42, align 8, !dbg !7008
  %44 = uitofp i64 %43 to float, !dbg !7007
  %45 = fmul float %40, %44, !dbg !7009
  %46 = fcmp olt float %35, %45, !dbg !7010
  br i1 %46, label %47, label %120, !dbg !7011

; <label>:47:                                     ; preds = %27
  %48 = load %struct.hash_table*, %struct.hash_table** %4, align 8, !dbg !7012
  %49 = call zeroext i1 @check_tuning(%struct.hash_table* %48), !dbg !7014
  %50 = load %struct.hash_table*, %struct.hash_table** %4, align 8, !dbg !7015
  %51 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %50, i32 0, i32 3, !dbg !7017
  %52 = load i64, i64* %51, align 8, !dbg !7017
  %53 = uitofp i64 %52 to float, !dbg !7015
  %54 = load %struct.hash_table*, %struct.hash_table** %4, align 8, !dbg !7018
  %55 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %54, i32 0, i32 5, !dbg !7019
  %56 = load %struct.hash_tuning*, %struct.hash_tuning** %55, align 8, !dbg !7019
  %57 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %56, i32 0, i32 0, !dbg !7020
  %58 = load float, float* %57, align 4, !dbg !7020
  %59 = load %struct.hash_table*, %struct.hash_table** %4, align 8, !dbg !7021
  %60 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %59, i32 0, i32 2, !dbg !7022
  %61 = load i64, i64* %60, align 8, !dbg !7022
  %62 = uitofp i64 %61 to float, !dbg !7021
  %63 = fmul float %58, %62, !dbg !7023
  %64 = fcmp olt float %53, %63, !dbg !7024
  br i1 %64, label %65, label %119, !dbg !7025

; <label>:65:                                     ; preds = %47
  call void @llvm.dbg.declare(metadata %struct.hash_tuning** %8, metadata !7026, metadata !DIExpression()), !dbg !7028
  %66 = load %struct.hash_table*, %struct.hash_table** %4, align 8, !dbg !7029
  %67 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %66, i32 0, i32 5, !dbg !7030
  %68 = load %struct.hash_tuning*, %struct.hash_tuning** %67, align 8, !dbg !7030
  store %struct.hash_tuning* %68, %struct.hash_tuning** %8, align 8, !dbg !7028
  call void @llvm.dbg.declare(metadata i64* %9, metadata !7031, metadata !DIExpression()), !dbg !7032
  %69 = load %struct.hash_tuning*, %struct.hash_tuning** %8, align 8, !dbg !7033
  %70 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %69, i32 0, i32 4, !dbg !7034
  %71 = load i8, i8* %70, align 4, !dbg !7034
  %72 = trunc i8 %71 to i1, !dbg !7034
  br i1 %72, label %73, label %82, !dbg !7033

; <label>:73:                                     ; preds = %65
  %74 = load %struct.hash_table*, %struct.hash_table** %4, align 8, !dbg !7035
  %75 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %74, i32 0, i32 2, !dbg !7036
  %76 = load i64, i64* %75, align 8, !dbg !7036
  %77 = uitofp i64 %76 to float, !dbg !7035
  %78 = load %struct.hash_tuning*, %struct.hash_tuning** %8, align 8, !dbg !7037
  %79 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %78, i32 0, i32 1, !dbg !7038
  %80 = load float, float* %79, align 4, !dbg !7038
  %81 = fmul float %77, %80, !dbg !7039
  br label %95, !dbg !7033

; <label>:82:                                     ; preds = %65
  %83 = load %struct.hash_table*, %struct.hash_table** %4, align 8, !dbg !7040
  %84 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %83, i32 0, i32 2, !dbg !7041
  %85 = load i64, i64* %84, align 8, !dbg !7041
  %86 = uitofp i64 %85 to float, !dbg !7040
  %87 = load %struct.hash_tuning*, %struct.hash_tuning** %8, align 8, !dbg !7042
  %88 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %87, i32 0, i32 1, !dbg !7043
  %89 = load float, float* %88, align 4, !dbg !7043
  %90 = fmul float %86, %89, !dbg !7044
  %91 = load %struct.hash_tuning*, %struct.hash_tuning** %8, align 8, !dbg !7045
  %92 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %91, i32 0, i32 2, !dbg !7046
  %93 = load float, float* %92, align 4, !dbg !7046
  %94 = fmul float %90, %93, !dbg !7047
  br label %95, !dbg !7033

; <label>:95:                                     ; preds = %82, %73
  %96 = phi float [ %81, %73 ], [ %94, %82 ], !dbg !7033
  %97 = fptoui float %96 to i64, !dbg !7048
  store i64 %97, i64* %9, align 8, !dbg !7032
  %98 = load %struct.hash_table*, %struct.hash_table** %4, align 8, !dbg !7049
  %99 = load i64, i64* %9, align 8, !dbg !7051
  %100 = call zeroext i1 @hash_rehash(%struct.hash_table* %98, i64 %99), !dbg !7052
  br i1 %100, label %118, label %101, !dbg !7053

; <label>:101:                                    ; preds = %95
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %10, metadata !7054, metadata !DIExpression()), !dbg !7056
  %102 = load %struct.hash_table*, %struct.hash_table** %4, align 8, !dbg !7057
  %103 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %102, i32 0, i32 9, !dbg !7058
  %104 = load %struct.hash_entry*, %struct.hash_entry** %103, align 8, !dbg !7058
  store %struct.hash_entry* %104, %struct.hash_entry** %10, align 8, !dbg !7056
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %11, metadata !7059, metadata !DIExpression()), !dbg !7060
  br label %105, !dbg !7061

; <label>:105:                                    ; preds = %108, %101
  %106 = load %struct.hash_entry*, %struct.hash_entry** %10, align 8, !dbg !7062
  %107 = icmp ne %struct.hash_entry* %106, null, !dbg !7061
  br i1 %107, label %108, label %115, !dbg !7061

; <label>:108:                                    ; preds = %105
  %109 = load %struct.hash_entry*, %struct.hash_entry** %10, align 8, !dbg !7063
  %110 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %109, i32 0, i32 1, !dbg !7065
  %111 = load %struct.hash_entry*, %struct.hash_entry** %110, align 8, !dbg !7065
  store %struct.hash_entry* %111, %struct.hash_entry** %11, align 8, !dbg !7066
  %112 = load %struct.hash_entry*, %struct.hash_entry** %10, align 8, !dbg !7067
  %113 = bitcast %struct.hash_entry* %112 to i8*, !dbg !7067
  call void @free(i8* %113) #8, !dbg !7068
  %114 = load %struct.hash_entry*, %struct.hash_entry** %11, align 8, !dbg !7069
  store %struct.hash_entry* %114, %struct.hash_entry** %10, align 8, !dbg !7070
  br label %105, !dbg !7061, !llvm.loop !7071

; <label>:115:                                    ; preds = %105
  %116 = load %struct.hash_table*, %struct.hash_table** %4, align 8, !dbg !7073
  %117 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %116, i32 0, i32 9, !dbg !7074
  store %struct.hash_entry* null, %struct.hash_entry** %117, align 8, !dbg !7075
  br label %118, !dbg !7076

; <label>:118:                                    ; preds = %115, %95
  br label %119, !dbg !7077

; <label>:119:                                    ; preds = %118, %47
  br label %120, !dbg !7078

; <label>:120:                                    ; preds = %119, %27
  br label %121, !dbg !7079

; <label>:121:                                    ; preds = %120, %18
  %122 = load i8*, i8** %6, align 8, !dbg !7080
  store i8* %122, i8** %3, align 8, !dbg !7081
  br label %123, !dbg !7081

; <label>:123:                                    ; preds = %121, %17
  %124 = load i8*, i8** %3, align 8, !dbg !7082
  ret i8* %124, !dbg !7082
}

; Function Attrs: noinline nounwind uwtable
define void @i_ring_init(%struct.I_ring*, i32) #3 !dbg !7083 {
  %3 = alloca %struct.I_ring*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  store %struct.I_ring* %0, %struct.I_ring** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.I_ring** %3, metadata !7095, metadata !DIExpression()), !dbg !7096
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !7097, metadata !DIExpression()), !dbg !7098
  call void @llvm.dbg.declare(metadata i32* %5, metadata !7099, metadata !DIExpression()), !dbg !7100
  %6 = load %struct.I_ring*, %struct.I_ring** %3, align 8, !dbg !7101
  %7 = getelementptr inbounds %struct.I_ring, %struct.I_ring* %6, i32 0, i32 4, !dbg !7102
  store i8 1, i8* %7, align 4, !dbg !7103
  %8 = load %struct.I_ring*, %struct.I_ring** %3, align 8, !dbg !7104
  %9 = getelementptr inbounds %struct.I_ring, %struct.I_ring* %8, i32 0, i32 2, !dbg !7105
  store i32 0, i32* %9, align 4, !dbg !7106
  %10 = load %struct.I_ring*, %struct.I_ring** %3, align 8, !dbg !7107
  %11 = getelementptr inbounds %struct.I_ring, %struct.I_ring* %10, i32 0, i32 3, !dbg !7108
  store i32 0, i32* %11, align 4, !dbg !7109
  store i32 0, i32* %5, align 4, !dbg !7110
  br label %12, !dbg !7112

; <label>:12:                                     ; preds = %22, %2
  %13 = load i32, i32* %5, align 4, !dbg !7113
  %14 = icmp slt i32 %13, 4, !dbg !7115
  br i1 %14, label %15, label %25, !dbg !7116

; <label>:15:                                     ; preds = %12
  %16 = load i32, i32* %4, align 4, !dbg !7117
  %17 = load %struct.I_ring*, %struct.I_ring** %3, align 8, !dbg !7118
  %18 = getelementptr inbounds %struct.I_ring, %struct.I_ring* %17, i32 0, i32 0, !dbg !7119
  %19 = load i32, i32* %5, align 4, !dbg !7120
  %20 = sext i32 %19 to i64, !dbg !7118
  %21 = getelementptr inbounds [4 x i32], [4 x i32]* %18, i64 0, i64 %20, !dbg !7118
  store i32 %16, i32* %21, align 4, !dbg !7121
  br label %22, !dbg !7118

; <label>:22:                                     ; preds = %15
  %23 = load i32, i32* %5, align 4, !dbg !7122
  %24 = add nsw i32 %23, 1, !dbg !7122
  store i32 %24, i32* %5, align 4, !dbg !7122
  br label %12, !dbg !7123, !llvm.loop !7124

; <label>:25:                                     ; preds = %12
  %26 = load i32, i32* %4, align 4, !dbg !7126
  %27 = load %struct.I_ring*, %struct.I_ring** %3, align 8, !dbg !7127
  %28 = getelementptr inbounds %struct.I_ring, %struct.I_ring* %27, i32 0, i32 1, !dbg !7128
  store i32 %26, i32* %28, align 4, !dbg !7129
  ret void, !dbg !7130
}

; Function Attrs: noinline nounwind uwtable
define zeroext i1 @i_ring_empty(%struct.I_ring*) #3 !dbg !7131 {
  %2 = alloca %struct.I_ring*, align 8
  store %struct.I_ring* %0, %struct.I_ring** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.I_ring** %2, metadata !7136, metadata !DIExpression()), !dbg !7137
  %3 = load %struct.I_ring*, %struct.I_ring** %2, align 8, !dbg !7138
  %4 = getelementptr inbounds %struct.I_ring, %struct.I_ring* %3, i32 0, i32 4, !dbg !7139
  %5 = load i8, i8* %4, align 4, !dbg !7139
  %6 = trunc i8 %5 to i1, !dbg !7139
  ret i1 %6, !dbg !7140
}

; Function Attrs: noinline nounwind uwtable
define i32 @i_ring_push(%struct.I_ring*, i32) #3 !dbg !7141 {
  %3 = alloca %struct.I_ring*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  store %struct.I_ring* %0, %struct.I_ring** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.I_ring** %3, metadata !7144, metadata !DIExpression()), !dbg !7145
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !7146, metadata !DIExpression()), !dbg !7147
  call void @llvm.dbg.declare(metadata i32* %5, metadata !7148, metadata !DIExpression()), !dbg !7149
  %7 = load %struct.I_ring*, %struct.I_ring** %3, align 8, !dbg !7150
  %8 = getelementptr inbounds %struct.I_ring, %struct.I_ring* %7, i32 0, i32 2, !dbg !7151
  %9 = load i32, i32* %8, align 4, !dbg !7151
  %10 = load %struct.I_ring*, %struct.I_ring** %3, align 8, !dbg !7152
  %11 = getelementptr inbounds %struct.I_ring, %struct.I_ring* %10, i32 0, i32 4, !dbg !7153
  %12 = load i8, i8* %11, align 4, !dbg !7153
  %13 = trunc i8 %12 to i1, !dbg !7153
  %14 = xor i1 %13, true, !dbg !7154
  %15 = zext i1 %14 to i32, !dbg !7154
  %16 = add i32 %9, %15, !dbg !7155
  %17 = urem i32 %16, 4, !dbg !7156
  store i32 %17, i32* %5, align 4, !dbg !7149
  call void @llvm.dbg.declare(metadata i32* %6, metadata !7157, metadata !DIExpression()), !dbg !7158
  %18 = load %struct.I_ring*, %struct.I_ring** %3, align 8, !dbg !7159
  %19 = getelementptr inbounds %struct.I_ring, %struct.I_ring* %18, i32 0, i32 0, !dbg !7160
  %20 = load i32, i32* %5, align 4, !dbg !7161
  %21 = zext i32 %20 to i64, !dbg !7159
  %22 = getelementptr inbounds [4 x i32], [4 x i32]* %19, i64 0, i64 %21, !dbg !7159
  %23 = load i32, i32* %22, align 4, !dbg !7159
  store i32 %23, i32* %6, align 4, !dbg !7158
  %24 = load i32, i32* %4, align 4, !dbg !7162
  %25 = load %struct.I_ring*, %struct.I_ring** %3, align 8, !dbg !7163
  %26 = getelementptr inbounds %struct.I_ring, %struct.I_ring* %25, i32 0, i32 0, !dbg !7164
  %27 = load i32, i32* %5, align 4, !dbg !7165
  %28 = zext i32 %27 to i64, !dbg !7163
  %29 = getelementptr inbounds [4 x i32], [4 x i32]* %26, i64 0, i64 %28, !dbg !7163
  store i32 %24, i32* %29, align 4, !dbg !7166
  %30 = load i32, i32* %5, align 4, !dbg !7167
  %31 = load %struct.I_ring*, %struct.I_ring** %3, align 8, !dbg !7168
  %32 = getelementptr inbounds %struct.I_ring, %struct.I_ring* %31, i32 0, i32 2, !dbg !7169
  store i32 %30, i32* %32, align 4, !dbg !7170
  %33 = load i32, i32* %5, align 4, !dbg !7171
  %34 = load %struct.I_ring*, %struct.I_ring** %3, align 8, !dbg !7173
  %35 = getelementptr inbounds %struct.I_ring, %struct.I_ring* %34, i32 0, i32 3, !dbg !7174
  %36 = load i32, i32* %35, align 4, !dbg !7174
  %37 = icmp eq i32 %33, %36, !dbg !7175
  br i1 %37, label %38, label %52, !dbg !7176

; <label>:38:                                     ; preds = %2
  %39 = load %struct.I_ring*, %struct.I_ring** %3, align 8, !dbg !7177
  %40 = getelementptr inbounds %struct.I_ring, %struct.I_ring* %39, i32 0, i32 3, !dbg !7178
  %41 = load i32, i32* %40, align 4, !dbg !7178
  %42 = load %struct.I_ring*, %struct.I_ring** %3, align 8, !dbg !7179
  %43 = getelementptr inbounds %struct.I_ring, %struct.I_ring* %42, i32 0, i32 4, !dbg !7180
  %44 = load i8, i8* %43, align 4, !dbg !7180
  %45 = trunc i8 %44 to i1, !dbg !7180
  %46 = xor i1 %45, true, !dbg !7181
  %47 = zext i1 %46 to i32, !dbg !7181
  %48 = add i32 %41, %47, !dbg !7182
  %49 = urem i32 %48, 4, !dbg !7183
  %50 = load %struct.I_ring*, %struct.I_ring** %3, align 8, !dbg !7184
  %51 = getelementptr inbounds %struct.I_ring, %struct.I_ring* %50, i32 0, i32 3, !dbg !7185
  store i32 %49, i32* %51, align 4, !dbg !7186
  br label %52, !dbg !7184

; <label>:52:                                     ; preds = %38, %2
  %53 = load %struct.I_ring*, %struct.I_ring** %3, align 8, !dbg !7187
  %54 = getelementptr inbounds %struct.I_ring, %struct.I_ring* %53, i32 0, i32 4, !dbg !7188
  store i8 0, i8* %54, align 4, !dbg !7189
  %55 = load i32, i32* %6, align 4, !dbg !7190
  ret i32 %55, !dbg !7191
}

; Function Attrs: noinline nounwind uwtable
define i32 @i_ring_pop(%struct.I_ring*) #3 !dbg !7192 {
  %2 = alloca %struct.I_ring*, align 8
  %3 = alloca i32, align 4
  store %struct.I_ring* %0, %struct.I_ring** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.I_ring** %2, metadata !7195, metadata !DIExpression()), !dbg !7196
  call void @llvm.dbg.declare(metadata i32* %3, metadata !7197, metadata !DIExpression()), !dbg !7198
  %4 = load %struct.I_ring*, %struct.I_ring** %2, align 8, !dbg !7199
  %5 = call zeroext i1 @i_ring_empty(%struct.I_ring* %4), !dbg !7201
  br i1 %5, label %6, label %7, !dbg !7202

; <label>:6:                                      ; preds = %1
  call void @abort() #11, !dbg !7203
  unreachable, !dbg !7203

; <label>:7:                                      ; preds = %1
  %8 = load %struct.I_ring*, %struct.I_ring** %2, align 8, !dbg !7204
  %9 = getelementptr inbounds %struct.I_ring, %struct.I_ring* %8, i32 0, i32 0, !dbg !7205
  %10 = load %struct.I_ring*, %struct.I_ring** %2, align 8, !dbg !7206
  %11 = getelementptr inbounds %struct.I_ring, %struct.I_ring* %10, i32 0, i32 2, !dbg !7207
  %12 = load i32, i32* %11, align 4, !dbg !7207
  %13 = zext i32 %12 to i64, !dbg !7204
  %14 = getelementptr inbounds [4 x i32], [4 x i32]* %9, i64 0, i64 %13, !dbg !7204
  %15 = load i32, i32* %14, align 4, !dbg !7204
  store i32 %15, i32* %3, align 4, !dbg !7208
  %16 = load %struct.I_ring*, %struct.I_ring** %2, align 8, !dbg !7209
  %17 = getelementptr inbounds %struct.I_ring, %struct.I_ring* %16, i32 0, i32 1, !dbg !7210
  %18 = load i32, i32* %17, align 4, !dbg !7210
  %19 = load %struct.I_ring*, %struct.I_ring** %2, align 8, !dbg !7211
  %20 = getelementptr inbounds %struct.I_ring, %struct.I_ring* %19, i32 0, i32 0, !dbg !7212
  %21 = load %struct.I_ring*, %struct.I_ring** %2, align 8, !dbg !7213
  %22 = getelementptr inbounds %struct.I_ring, %struct.I_ring* %21, i32 0, i32 2, !dbg !7214
  %23 = load i32, i32* %22, align 4, !dbg !7214
  %24 = zext i32 %23 to i64, !dbg !7211
  %25 = getelementptr inbounds [4 x i32], [4 x i32]* %20, i64 0, i64 %24, !dbg !7211
  store i32 %18, i32* %25, align 4, !dbg !7215
  %26 = load %struct.I_ring*, %struct.I_ring** %2, align 8, !dbg !7216
  %27 = getelementptr inbounds %struct.I_ring, %struct.I_ring* %26, i32 0, i32 2, !dbg !7218
  %28 = load i32, i32* %27, align 4, !dbg !7218
  %29 = load %struct.I_ring*, %struct.I_ring** %2, align 8, !dbg !7219
  %30 = getelementptr inbounds %struct.I_ring, %struct.I_ring* %29, i32 0, i32 3, !dbg !7220
  %31 = load i32, i32* %30, align 4, !dbg !7220
  %32 = icmp eq i32 %28, %31, !dbg !7221
  br i1 %32, label %33, label %36, !dbg !7222

; <label>:33:                                     ; preds = %7
  %34 = load %struct.I_ring*, %struct.I_ring** %2, align 8, !dbg !7223
  %35 = getelementptr inbounds %struct.I_ring, %struct.I_ring* %34, i32 0, i32 4, !dbg !7224
  store i8 1, i8* %35, align 4, !dbg !7225
  br label %45, !dbg !7223

; <label>:36:                                     ; preds = %7
  %37 = load %struct.I_ring*, %struct.I_ring** %2, align 8, !dbg !7226
  %38 = getelementptr inbounds %struct.I_ring, %struct.I_ring* %37, i32 0, i32 2, !dbg !7227
  %39 = load i32, i32* %38, align 4, !dbg !7227
  %40 = add i32 %39, 4, !dbg !7228
  %41 = sub i32 %40, 1, !dbg !7229
  %42 = urem i32 %41, 4, !dbg !7230
  %43 = load %struct.I_ring*, %struct.I_ring** %2, align 8, !dbg !7231
  %44 = getelementptr inbounds %struct.I_ring, %struct.I_ring* %43, i32 0, i32 2, !dbg !7232
  store i32 %42, i32* %44, align 4, !dbg !7233
  br label %45

; <label>:45:                                     ; preds = %36, %33
  %46 = load i32, i32* %3, align 4, !dbg !7234
  ret i32 %46, !dbg !7235
}

; Function Attrs: noinline nounwind uwtable
define i32 @open_safer(i8*, i32, ...) #3 !dbg !7236 {
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca [1 x %struct.__va_list_tag], align 16
  store i8* %0, i8** %3, align 8
  call void @llvm.dbg.declare(metadata i8** %3, metadata !7239, metadata !DIExpression()), !dbg !7240
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !7241, metadata !DIExpression()), !dbg !7242
  call void @llvm.dbg.declare(metadata i32* %5, metadata !7243, metadata !DIExpression()), !dbg !7244
  store i32 0, i32* %5, align 4, !dbg !7244
  %7 = load i32, i32* %4, align 4, !dbg !7245
  %8 = and i32 %7, 64, !dbg !7247
  %9 = icmp ne i32 %8, 0, !dbg !7247
  br i1 %9, label %10, label %33, !dbg !7248

; <label>:10:                                     ; preds = %2
  call void @llvm.dbg.declare(metadata [1 x %struct.__va_list_tag]* %6, metadata !7249, metadata !DIExpression()), !dbg !7260
  %11 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %6, i32 0, i32 0, !dbg !7261
  %12 = bitcast %struct.__va_list_tag* %11 to i8*, !dbg !7261
  call void @llvm.va_start(i8* %12), !dbg !7261
  %13 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %6, i32 0, i32 0, !dbg !7262
  %14 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %13, i32 0, i32 0, !dbg !7262
  %15 = load i32, i32* %14, align 16, !dbg !7262
  %16 = icmp ule i32 %15, 40, !dbg !7262
  br i1 %16, label %17, label %23, !dbg !7262

; <label>:17:                                     ; preds = %10
  %18 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %13, i32 0, i32 3, !dbg !7262
  %19 = load i8*, i8** %18, align 16, !dbg !7262
  %20 = getelementptr i8, i8* %19, i32 %15, !dbg !7262
  %21 = bitcast i8* %20 to i32*, !dbg !7262
  %22 = add i32 %15, 8, !dbg !7262
  store i32 %22, i32* %14, align 16, !dbg !7262
  br label %28, !dbg !7262

; <label>:23:                                     ; preds = %10
  %24 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %13, i32 0, i32 2, !dbg !7262
  %25 = load i8*, i8** %24, align 8, !dbg !7262
  %26 = bitcast i8* %25 to i32*, !dbg !7262
  %27 = getelementptr i8, i8* %25, i32 8, !dbg !7262
  store i8* %27, i8** %24, align 8, !dbg !7262
  br label %28, !dbg !7262

; <label>:28:                                     ; preds = %23, %17
  %29 = phi i32* [ %21, %17 ], [ %26, %23 ], !dbg !7262
  %30 = load i32, i32* %29, align 4, !dbg !7262
  store i32 %30, i32* %5, align 4, !dbg !7263
  %31 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %6, i32 0, i32 0, !dbg !7264
  %32 = bitcast %struct.__va_list_tag* %31 to i8*, !dbg !7264
  call void @llvm.va_end(i8* %32), !dbg !7264
  br label %33, !dbg !7265

; <label>:33:                                     ; preds = %28, %2
  %34 = load i8*, i8** %3, align 8, !dbg !7266
  %35 = load i32, i32* %4, align 4, !dbg !7267
  %36 = load i32, i32* %5, align 4, !dbg !7268
  %37 = call i32 (i8*, i32, ...) @open(i8* %34, i32 %35, i32 %36), !dbg !7269
  %38 = call i32 @fd_safer(i32 %37), !dbg !7270
  ret i32 %38, !dbg !7271
}

declare i32 @open(i8*, i32, ...) #2

; Function Attrs: noinline nounwind uwtable
define i32 @openat_safer(i32, i8*, i32, ...) #3 !dbg !7272 {
  %4 = alloca i32, align 4
  %5 = alloca i8*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca [1 x %struct.__va_list_tag], align 16
  store i32 %0, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !7275, metadata !DIExpression()), !dbg !7276
  store i8* %1, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !7277, metadata !DIExpression()), !dbg !7278
  store i32 %2, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !7279, metadata !DIExpression()), !dbg !7280
  call void @llvm.dbg.declare(metadata i32* %7, metadata !7281, metadata !DIExpression()), !dbg !7282
  store i32 0, i32* %7, align 4, !dbg !7282
  %9 = load i32, i32* %6, align 4, !dbg !7283
  %10 = and i32 %9, 64, !dbg !7285
  %11 = icmp ne i32 %10, 0, !dbg !7285
  br i1 %11, label %12, label %35, !dbg !7286

; <label>:12:                                     ; preds = %3
  call void @llvm.dbg.declare(metadata [1 x %struct.__va_list_tag]* %8, metadata !7287, metadata !DIExpression()), !dbg !7298
  %13 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %8, i32 0, i32 0, !dbg !7299
  %14 = bitcast %struct.__va_list_tag* %13 to i8*, !dbg !7299
  call void @llvm.va_start(i8* %14), !dbg !7299
  %15 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %8, i32 0, i32 0, !dbg !7300
  %16 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %15, i32 0, i32 0, !dbg !7300
  %17 = load i32, i32* %16, align 16, !dbg !7300
  %18 = icmp ule i32 %17, 40, !dbg !7300
  br i1 %18, label %19, label %25, !dbg !7300

; <label>:19:                                     ; preds = %12
  %20 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %15, i32 0, i32 3, !dbg !7300
  %21 = load i8*, i8** %20, align 16, !dbg !7300
  %22 = getelementptr i8, i8* %21, i32 %17, !dbg !7300
  %23 = bitcast i8* %22 to i32*, !dbg !7300
  %24 = add i32 %17, 8, !dbg !7300
  store i32 %24, i32* %16, align 16, !dbg !7300
  br label %30, !dbg !7300

; <label>:25:                                     ; preds = %12
  %26 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %15, i32 0, i32 2, !dbg !7300
  %27 = load i8*, i8** %26, align 8, !dbg !7300
  %28 = bitcast i8* %27 to i32*, !dbg !7300
  %29 = getelementptr i8, i8* %27, i32 8, !dbg !7300
  store i8* %29, i8** %26, align 8, !dbg !7300
  br label %30, !dbg !7300

; <label>:30:                                     ; preds = %25, %19
  %31 = phi i32* [ %23, %19 ], [ %28, %25 ], !dbg !7300
  %32 = load i32, i32* %31, align 4, !dbg !7300
  store i32 %32, i32* %7, align 4, !dbg !7301
  %33 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %8, i32 0, i32 0, !dbg !7302
  %34 = bitcast %struct.__va_list_tag* %33 to i8*, !dbg !7302
  call void @llvm.va_end(i8* %34), !dbg !7302
  br label %35, !dbg !7303

; <label>:35:                                     ; preds = %30, %3
  %36 = load i32, i32* %4, align 4, !dbg !7304
  %37 = load i8*, i8** %5, align 8, !dbg !7305
  %38 = load i32, i32* %6, align 4, !dbg !7306
  %39 = load i32, i32* %7, align 4, !dbg !7307
  %40 = call i32 (i32, i8*, i32, ...) @openat(i32 %36, i8* %37, i32 %38, i32 %39), !dbg !7308
  %41 = call i32 @fd_safer(i32 %40), !dbg !7309
  ret i32 %41, !dbg !7310
}

; Function Attrs: noinline nounwind uwtable
define %struct.__dirstream* @opendir_safer(i8*) #3 !dbg !7311 {
  %2 = alloca i8*, align 8
  %3 = alloca %struct.__dirstream*, align 8
  %4 = alloca i32, align 4
  %5 = alloca %struct.__dirstream*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  store i8* %0, i8** %2, align 8
  call void @llvm.dbg.declare(metadata i8** %2, metadata !7314, metadata !DIExpression()), !dbg !7315
  call void @llvm.dbg.declare(metadata %struct.__dirstream** %3, metadata !7316, metadata !DIExpression()), !dbg !7317
  %8 = load i8*, i8** %2, align 8, !dbg !7318
  %9 = call %struct.__dirstream* @opendir(i8* %8), !dbg !7319
  store %struct.__dirstream* %9, %struct.__dirstream** %3, align 8, !dbg !7317
  %10 = load %struct.__dirstream*, %struct.__dirstream** %3, align 8, !dbg !7320
  %11 = icmp ne %struct.__dirstream* %10, null, !dbg !7320
  br i1 %11, label %12, label %39, !dbg !7322

; <label>:12:                                     ; preds = %1
  call void @llvm.dbg.declare(metadata i32* %4, metadata !7323, metadata !DIExpression()), !dbg !7325
  %13 = load %struct.__dirstream*, %struct.__dirstream** %3, align 8, !dbg !7326
  %14 = call i32 @dirfd(%struct.__dirstream* %13) #8, !dbg !7327
  store i32 %14, i32* %4, align 4, !dbg !7325
  %15 = load i32, i32* %4, align 4, !dbg !7328
  %16 = icmp sle i32 0, %15, !dbg !7330
  br i1 %16, label %17, label %38, !dbg !7331

; <label>:17:                                     ; preds = %12
  %18 = load i32, i32* %4, align 4, !dbg !7332
  %19 = icmp sle i32 %18, 2, !dbg !7333
  br i1 %19, label %20, label %38, !dbg !7334

; <label>:20:                                     ; preds = %17
  call void @llvm.dbg.declare(metadata %struct.__dirstream** %5, metadata !7335, metadata !DIExpression()), !dbg !7337
  call void @llvm.dbg.declare(metadata i32* %6, metadata !7338, metadata !DIExpression()), !dbg !7339
  call void @llvm.dbg.declare(metadata i32* %7, metadata !7340, metadata !DIExpression()), !dbg !7341
  %21 = load i32, i32* %4, align 4, !dbg !7342
  %22 = call i32 @dup_safer(i32 %21), !dbg !7343
  store i32 %22, i32* %7, align 4, !dbg !7341
  %23 = load i32, i32* %7, align 4, !dbg !7344
  %24 = call %struct.__dirstream* @rpl_fdopendir(i32 %23), !dbg !7345
  store %struct.__dirstream* %24, %struct.__dirstream** %5, align 8, !dbg !7346
  %25 = call i32* @__errno_location() #14, !dbg !7347
  %26 = load i32, i32* %25, align 4, !dbg !7347
  store i32 %26, i32* %6, align 4, !dbg !7348
  %27 = load %struct.__dirstream*, %struct.__dirstream** %5, align 8, !dbg !7349
  %28 = icmp ne %struct.__dirstream* %27, null, !dbg !7349
  br i1 %28, label %32, label %29, !dbg !7351

; <label>:29:                                     ; preds = %20
  %30 = load i32, i32* %7, align 4, !dbg !7352
  %31 = call i32 @close(i32 %30), !dbg !7353
  br label %32, !dbg !7353

; <label>:32:                                     ; preds = %29, %20
  %33 = load %struct.__dirstream*, %struct.__dirstream** %3, align 8, !dbg !7354
  %34 = call i32 @closedir(%struct.__dirstream* %33), !dbg !7355
  %35 = load i32, i32* %6, align 4, !dbg !7356
  %36 = call i32* @__errno_location() #14, !dbg !7357
  store i32 %35, i32* %36, align 4, !dbg !7358
  %37 = load %struct.__dirstream*, %struct.__dirstream** %5, align 8, !dbg !7359
  store %struct.__dirstream* %37, %struct.__dirstream** %3, align 8, !dbg !7360
  br label %38, !dbg !7361

; <label>:38:                                     ; preds = %32, %17, %12
  br label %39, !dbg !7362

; <label>:39:                                     ; preds = %38, %1
  %40 = load %struct.__dirstream*, %struct.__dirstream** %3, align 8, !dbg !7363
  ret %struct.__dirstream* %40, !dbg !7364
}

declare %struct.__dirstream* @opendir(i8*) #2

; Function Attrs: noinline nounwind uwtable
define i8* @quote_n(i32, i8*) #3 !dbg !7365 {
  %3 = alloca i32, align 4
  %4 = alloca i8*, align 8
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !7368, metadata !DIExpression()), !dbg !7369
  store i8* %1, i8** %4, align 8
  call void @llvm.dbg.declare(metadata i8** %4, metadata !7370, metadata !DIExpression()), !dbg !7371
  %5 = load i32, i32* %3, align 4, !dbg !7372
  %6 = load i8*, i8** %4, align 8, !dbg !7373
  %7 = call i8* @quotearg_n_style(i32 %5, i32 6, i8* %6), !dbg !7374
  ret i8* %7, !dbg !7375
}

; Function Attrs: noinline nounwind uwtable
define i8* @quote(i8*) #3 !dbg !7376 {
  %2 = alloca i8*, align 8
  store i8* %0, i8** %2, align 8
  call void @llvm.dbg.declare(metadata i8** %2, metadata !7379, metadata !DIExpression()), !dbg !7380
  %3 = load i8*, i8** %2, align 8, !dbg !7381
  %4 = call i8* @quote_n(i32 0, i8* %3), !dbg !7382
  ret i8* %4, !dbg !7383
}

; Function Attrs: noinline nounwind uwtable
define %struct.quoting_options* @clone_quoting_options(%struct.quoting_options*) #3 !dbg !7384 {
  %2 = alloca %struct.quoting_options*, align 8
  %3 = alloca i32, align 4
  %4 = alloca %struct.quoting_options*, align 8
  store %struct.quoting_options* %0, %struct.quoting_options** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %2, metadata !7388, metadata !DIExpression()), !dbg !7389
  call void @llvm.dbg.declare(metadata i32* %3, metadata !7390, metadata !DIExpression()), !dbg !7391
  %5 = call i32* @__errno_location() #14, !dbg !7392
  %6 = load i32, i32* %5, align 4, !dbg !7392
  store i32 %6, i32* %3, align 4, !dbg !7391
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %4, metadata !7393, metadata !DIExpression()), !dbg !7394
  %7 = load %struct.quoting_options*, %struct.quoting_options** %2, align 8, !dbg !7395
  %8 = icmp ne %struct.quoting_options* %7, null, !dbg !7395
  br i1 %8, label %9, label %11, !dbg !7395

; <label>:9:                                      ; preds = %1
  %10 = load %struct.quoting_options*, %struct.quoting_options** %2, align 8, !dbg !7396
  br label %12, !dbg !7395

; <label>:11:                                     ; preds = %1
  br label %12, !dbg !7395

; <label>:12:                                     ; preds = %11, %9
  %13 = phi %struct.quoting_options* [ %10, %9 ], [ @default_quoting_options, %11 ], !dbg !7395
  %14 = bitcast %struct.quoting_options* %13 to i8*, !dbg !7395
  %15 = call noalias i8* @xmemdup(i8* %14, i64 56), !dbg !7397
  %16 = bitcast i8* %15 to %struct.quoting_options*, !dbg !7397
  store %struct.quoting_options* %16, %struct.quoting_options** %4, align 8, !dbg !7394
  %17 = load i32, i32* %3, align 4, !dbg !7398
  %18 = call i32* @__errno_location() #14, !dbg !7399
  store i32 %17, i32* %18, align 4, !dbg !7400
  %19 = load %struct.quoting_options*, %struct.quoting_options** %4, align 8, !dbg !7401
  ret %struct.quoting_options* %19, !dbg !7402
}

; Function Attrs: noinline nounwind uwtable
define i32 @get_quoting_style(%struct.quoting_options*) #3 !dbg !7403 {
  %2 = alloca %struct.quoting_options*, align 8
  store %struct.quoting_options* %0, %struct.quoting_options** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %2, metadata !7406, metadata !DIExpression()), !dbg !7407
  %3 = load %struct.quoting_options*, %struct.quoting_options** %2, align 8, !dbg !7408
  %4 = icmp ne %struct.quoting_options* %3, null, !dbg !7408
  br i1 %4, label %5, label %7, !dbg !7408

; <label>:5:                                      ; preds = %1
  %6 = load %struct.quoting_options*, %struct.quoting_options** %2, align 8, !dbg !7409
  br label %8, !dbg !7408

; <label>:7:                                      ; preds = %1
  br label %8, !dbg !7408

; <label>:8:                                      ; preds = %7, %5
  %9 = phi %struct.quoting_options* [ %6, %5 ], [ @default_quoting_options, %7 ], !dbg !7408
  %10 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %9, i32 0, i32 0, !dbg !7410
  %11 = load i32, i32* %10, align 8, !dbg !7410
  ret i32 %11, !dbg !7411
}

; Function Attrs: noinline nounwind uwtable
define void @set_quoting_style(%struct.quoting_options*, i32) #3 !dbg !7412 {
  %3 = alloca %struct.quoting_options*, align 8
  %4 = alloca i32, align 4
  store %struct.quoting_options* %0, %struct.quoting_options** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %3, metadata !7415, metadata !DIExpression()), !dbg !7416
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !7417, metadata !DIExpression()), !dbg !7418
  %5 = load i32, i32* %4, align 4, !dbg !7419
  %6 = load %struct.quoting_options*, %struct.quoting_options** %3, align 8, !dbg !7420
  %7 = icmp ne %struct.quoting_options* %6, null, !dbg !7420
  br i1 %7, label %8, label %10, !dbg !7420

; <label>:8:                                      ; preds = %2
  %9 = load %struct.quoting_options*, %struct.quoting_options** %3, align 8, !dbg !7421
  br label %11, !dbg !7420

; <label>:10:                                     ; preds = %2
  br label %11, !dbg !7420

; <label>:11:                                     ; preds = %10, %8
  %12 = phi %struct.quoting_options* [ %9, %8 ], [ @default_quoting_options, %10 ], !dbg !7420
  %13 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %12, i32 0, i32 0, !dbg !7422
  store i32 %5, i32* %13, align 8, !dbg !7423
  ret void, !dbg !7424
}

; Function Attrs: noinline nounwind uwtable
define i32 @set_char_quoting(%struct.quoting_options*, i8 signext, i32) #3 !dbg !7425 {
  %4 = alloca %struct.quoting_options*, align 8
  %5 = alloca i8, align 1
  %6 = alloca i32, align 4
  %7 = alloca i8, align 1
  %8 = alloca i32*, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  store %struct.quoting_options* %0, %struct.quoting_options** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %4, metadata !7428, metadata !DIExpression()), !dbg !7429
  store i8 %1, i8* %5, align 1
  call void @llvm.dbg.declare(metadata i8* %5, metadata !7430, metadata !DIExpression()), !dbg !7431
  store i32 %2, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !7432, metadata !DIExpression()), !dbg !7433
  call void @llvm.dbg.declare(metadata i8* %7, metadata !7434, metadata !DIExpression()), !dbg !7435
  %11 = load i8, i8* %5, align 1, !dbg !7436
  store i8 %11, i8* %7, align 1, !dbg !7435
  call void @llvm.dbg.declare(metadata i32** %8, metadata !7437, metadata !DIExpression()), !dbg !7439
  %12 = load %struct.quoting_options*, %struct.quoting_options** %4, align 8, !dbg !7440
  %13 = icmp ne %struct.quoting_options* %12, null, !dbg !7440
  br i1 %13, label %14, label %16, !dbg !7440

; <label>:14:                                     ; preds = %3
  %15 = load %struct.quoting_options*, %struct.quoting_options** %4, align 8, !dbg !7441
  br label %17, !dbg !7440

; <label>:16:                                     ; preds = %3
  br label %17, !dbg !7440

; <label>:17:                                     ; preds = %16, %14
  %18 = phi %struct.quoting_options* [ %15, %14 ], [ @default_quoting_options, %16 ], !dbg !7440
  %19 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %18, i32 0, i32 2, !dbg !7442
  %20 = getelementptr inbounds [8 x i32], [8 x i32]* %19, i32 0, i32 0, !dbg !7443
  %21 = load i8, i8* %7, align 1, !dbg !7444
  %22 = zext i8 %21 to i64, !dbg !7444
  %23 = udiv i64 %22, 32, !dbg !7445
  %24 = getelementptr inbounds i32, i32* %20, i64 %23, !dbg !7446
  store i32* %24, i32** %8, align 8, !dbg !7439
  call void @llvm.dbg.declare(metadata i32* %9, metadata !7447, metadata !DIExpression()), !dbg !7448
  %25 = load i8, i8* %7, align 1, !dbg !7449
  %26 = zext i8 %25 to i64, !dbg !7449
  %27 = urem i64 %26, 32, !dbg !7450
  %28 = trunc i64 %27 to i32, !dbg !7449
  store i32 %28, i32* %9, align 4, !dbg !7448
  call void @llvm.dbg.declare(metadata i32* %10, metadata !7451, metadata !DIExpression()), !dbg !7452
  %29 = load i32*, i32** %8, align 8, !dbg !7453
  %30 = load i32, i32* %29, align 4, !dbg !7454
  %31 = load i32, i32* %9, align 4, !dbg !7455
  %32 = lshr i32 %30, %31, !dbg !7456
  %33 = and i32 %32, 1, !dbg !7457
  store i32 %33, i32* %10, align 4, !dbg !7452
  %34 = load i32, i32* %6, align 4, !dbg !7458
  %35 = and i32 %34, 1, !dbg !7459
  %36 = load i32, i32* %10, align 4, !dbg !7460
  %37 = xor i32 %35, %36, !dbg !7461
  %38 = load i32, i32* %9, align 4, !dbg !7462
  %39 = shl i32 %37, %38, !dbg !7463
  %40 = load i32*, i32** %8, align 8, !dbg !7464
  %41 = load i32, i32* %40, align 4, !dbg !7465
  %42 = xor i32 %41, %39, !dbg !7465
  store i32 %42, i32* %40, align 4, !dbg !7465
  %43 = load i32, i32* %10, align 4, !dbg !7466
  ret i32 %43, !dbg !7467
}

; Function Attrs: noinline nounwind uwtable
define i32 @set_quoting_flags(%struct.quoting_options*, i32) #3 !dbg !7468 {
  %3 = alloca %struct.quoting_options*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  store %struct.quoting_options* %0, %struct.quoting_options** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %3, metadata !7471, metadata !DIExpression()), !dbg !7472
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !7473, metadata !DIExpression()), !dbg !7474
  call void @llvm.dbg.declare(metadata i32* %5, metadata !7475, metadata !DIExpression()), !dbg !7476
  %6 = load %struct.quoting_options*, %struct.quoting_options** %3, align 8, !dbg !7477
  %7 = icmp ne %struct.quoting_options* %6, null, !dbg !7477
  br i1 %7, label %9, label %8, !dbg !7479

; <label>:8:                                      ; preds = %2
  store %struct.quoting_options* @default_quoting_options, %struct.quoting_options** %3, align 8, !dbg !7480
  br label %9, !dbg !7481

; <label>:9:                                      ; preds = %8, %2
  %10 = load %struct.quoting_options*, %struct.quoting_options** %3, align 8, !dbg !7482
  %11 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %10, i32 0, i32 1, !dbg !7483
  %12 = load i32, i32* %11, align 4, !dbg !7483
  store i32 %12, i32* %5, align 4, !dbg !7484
  %13 = load i32, i32* %4, align 4, !dbg !7485
  %14 = load %struct.quoting_options*, %struct.quoting_options** %3, align 8, !dbg !7486
  %15 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %14, i32 0, i32 1, !dbg !7487
  store i32 %13, i32* %15, align 4, !dbg !7488
  %16 = load i32, i32* %5, align 4, !dbg !7489
  ret i32 %16, !dbg !7490
}

; Function Attrs: noinline nounwind uwtable
define void @set_custom_quoting(%struct.quoting_options*, i8*, i8*) #3 !dbg !7491 {
  %4 = alloca %struct.quoting_options*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  store %struct.quoting_options* %0, %struct.quoting_options** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %4, metadata !7494, metadata !DIExpression()), !dbg !7495
  store i8* %1, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !7496, metadata !DIExpression()), !dbg !7497
  store i8* %2, i8** %6, align 8
  call void @llvm.dbg.declare(metadata i8** %6, metadata !7498, metadata !DIExpression()), !dbg !7499
  %7 = load %struct.quoting_options*, %struct.quoting_options** %4, align 8, !dbg !7500
  %8 = icmp ne %struct.quoting_options* %7, null, !dbg !7500
  br i1 %8, label %10, label %9, !dbg !7502

; <label>:9:                                      ; preds = %3
  store %struct.quoting_options* @default_quoting_options, %struct.quoting_options** %4, align 8, !dbg !7503
  br label %10, !dbg !7504

; <label>:10:                                     ; preds = %9, %3
  %11 = load %struct.quoting_options*, %struct.quoting_options** %4, align 8, !dbg !7505
  %12 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %11, i32 0, i32 0, !dbg !7506
  store i32 8, i32* %12, align 8, !dbg !7507
  %13 = load i8*, i8** %5, align 8, !dbg !7508
  %14 = icmp ne i8* %13, null, !dbg !7508
  br i1 %14, label %15, label %18, !dbg !7510

; <label>:15:                                     ; preds = %10
  %16 = load i8*, i8** %6, align 8, !dbg !7511
  %17 = icmp ne i8* %16, null, !dbg !7511
  br i1 %17, label %19, label %18, !dbg !7512

; <label>:18:                                     ; preds = %15, %10
  call void @abort() #11, !dbg !7513
  unreachable, !dbg !7513

; <label>:19:                                     ; preds = %15
  %20 = load i8*, i8** %5, align 8, !dbg !7514
  %21 = load %struct.quoting_options*, %struct.quoting_options** %4, align 8, !dbg !7515
  %22 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %21, i32 0, i32 3, !dbg !7516
  store i8* %20, i8** %22, align 8, !dbg !7517
  %23 = load i8*, i8** %6, align 8, !dbg !7518
  %24 = load %struct.quoting_options*, %struct.quoting_options** %4, align 8, !dbg !7519
  %25 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %24, i32 0, i32 4, !dbg !7520
  store i8* %23, i8** %25, align 8, !dbg !7521
  ret void, !dbg !7522
}

; Function Attrs: noinline nounwind uwtable
define i64 @quotearg_buffer(i8*, i64, i8*, i64, %struct.quoting_options*) #3 !dbg !7523 {
  %6 = alloca i8*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i64, align 8
  %10 = alloca %struct.quoting_options*, align 8
  %11 = alloca %struct.quoting_options*, align 8
  %12 = alloca i32, align 4
  %13 = alloca i64, align 8
  store i8* %0, i8** %6, align 8
  call void @llvm.dbg.declare(metadata i8** %6, metadata !7528, metadata !DIExpression()), !dbg !7529
  store i64 %1, i64* %7, align 8
  call void @llvm.dbg.declare(metadata i64* %7, metadata !7530, metadata !DIExpression()), !dbg !7531
  store i8* %2, i8** %8, align 8
  call void @llvm.dbg.declare(metadata i8** %8, metadata !7532, metadata !DIExpression()), !dbg !7533
  store i64 %3, i64* %9, align 8
  call void @llvm.dbg.declare(metadata i64* %9, metadata !7534, metadata !DIExpression()), !dbg !7535
  store %struct.quoting_options* %4, %struct.quoting_options** %10, align 8
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %10, metadata !7536, metadata !DIExpression()), !dbg !7537
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %11, metadata !7538, metadata !DIExpression()), !dbg !7539
  %14 = load %struct.quoting_options*, %struct.quoting_options** %10, align 8, !dbg !7540
  %15 = icmp ne %struct.quoting_options* %14, null, !dbg !7540
  br i1 %15, label %16, label %18, !dbg !7540

; <label>:16:                                     ; preds = %5
  %17 = load %struct.quoting_options*, %struct.quoting_options** %10, align 8, !dbg !7541
  br label %19, !dbg !7540

; <label>:18:                                     ; preds = %5
  br label %19, !dbg !7540

; <label>:19:                                     ; preds = %18, %16
  %20 = phi %struct.quoting_options* [ %17, %16 ], [ @default_quoting_options, %18 ], !dbg !7540
  store %struct.quoting_options* %20, %struct.quoting_options** %11, align 8, !dbg !7539
  call void @llvm.dbg.declare(metadata i32* %12, metadata !7542, metadata !DIExpression()), !dbg !7543
  %21 = call i32* @__errno_location() #14, !dbg !7544
  %22 = load i32, i32* %21, align 4, !dbg !7544
  store i32 %22, i32* %12, align 4, !dbg !7543
  call void @llvm.dbg.declare(metadata i64* %13, metadata !7545, metadata !DIExpression()), !dbg !7546
  %23 = load i8*, i8** %6, align 8, !dbg !7547
  %24 = load i64, i64* %7, align 8, !dbg !7548
  %25 = load i8*, i8** %8, align 8, !dbg !7549
  %26 = load i64, i64* %9, align 8, !dbg !7550
  %27 = load %struct.quoting_options*, %struct.quoting_options** %11, align 8, !dbg !7551
  %28 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %27, i32 0, i32 0, !dbg !7552
  %29 = load i32, i32* %28, align 8, !dbg !7552
  %30 = load %struct.quoting_options*, %struct.quoting_options** %11, align 8, !dbg !7553
  %31 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %30, i32 0, i32 1, !dbg !7554
  %32 = load i32, i32* %31, align 4, !dbg !7554
  %33 = load %struct.quoting_options*, %struct.quoting_options** %11, align 8, !dbg !7555
  %34 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %33, i32 0, i32 2, !dbg !7556
  %35 = getelementptr inbounds [8 x i32], [8 x i32]* %34, i32 0, i32 0, !dbg !7555
  %36 = load %struct.quoting_options*, %struct.quoting_options** %11, align 8, !dbg !7557
  %37 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %36, i32 0, i32 3, !dbg !7558
  %38 = load i8*, i8** %37, align 8, !dbg !7558
  %39 = load %struct.quoting_options*, %struct.quoting_options** %11, align 8, !dbg !7559
  %40 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %39, i32 0, i32 4, !dbg !7560
  %41 = load i8*, i8** %40, align 8, !dbg !7560
  %42 = call i64 @quotearg_buffer_restyled(i8* %23, i64 %24, i8* %25, i64 %26, i32 %29, i32 %32, i32* %35, i8* %38, i8* %41), !dbg !7561
  store i64 %42, i64* %13, align 8, !dbg !7546
  %43 = load i32, i32* %12, align 4, !dbg !7562
  %44 = call i32* @__errno_location() #14, !dbg !7563
  store i32 %43, i32* %44, align 4, !dbg !7564
  %45 = load i64, i64* %13, align 8, !dbg !7565
  ret i64 %45, !dbg !7566
}

; Function Attrs: noinline nounwind uwtable
define internal i64 @quotearg_buffer_restyled(i8*, i64, i8*, i64, i32, i32, i32*, i8*, i8*) #3 !dbg !7567 {
  %10 = alloca i64, align 8
  %11 = alloca i8*, align 8
  %12 = alloca i64, align 8
  %13 = alloca i8*, align 8
  %14 = alloca i64, align 8
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32*, align 8
  %18 = alloca i8*, align 8
  %19 = alloca i8*, align 8
  %20 = alloca i64, align 8
  %21 = alloca i64, align 8
  %22 = alloca i8*, align 8
  %23 = alloca i64, align 8
  %24 = alloca i8, align 1
  %25 = alloca i8, align 1
  %26 = alloca i8, align 1
  %27 = alloca i8, align 1
  %28 = alloca i8, align 1
  %29 = alloca i8, align 1
  %30 = alloca i64, align 8
  %31 = alloca i8, align 1
  %32 = alloca %struct.__mbstate_t, align 4
  %33 = alloca i32, align 4
  %34 = alloca i64, align 8
  %35 = alloca i64, align 8
  %36 = alloca i64, align 8
  store i8* %0, i8** %11, align 8
  call void @llvm.dbg.declare(metadata i8** %11, metadata !7572, metadata !DIExpression()), !dbg !7573
  store i64 %1, i64* %12, align 8
  call void @llvm.dbg.declare(metadata i64* %12, metadata !7574, metadata !DIExpression()), !dbg !7575
  store i8* %2, i8** %13, align 8
  call void @llvm.dbg.declare(metadata i8** %13, metadata !7576, metadata !DIExpression()), !dbg !7577
  store i64 %3, i64* %14, align 8
  call void @llvm.dbg.declare(metadata i64* %14, metadata !7578, metadata !DIExpression()), !dbg !7579
  store i32 %4, i32* %15, align 4
  call void @llvm.dbg.declare(metadata i32* %15, metadata !7580, metadata !DIExpression()), !dbg !7581
  store i32 %5, i32* %16, align 4
  call void @llvm.dbg.declare(metadata i32* %16, metadata !7582, metadata !DIExpression()), !dbg !7583
  store i32* %6, i32** %17, align 8
  call void @llvm.dbg.declare(metadata i32** %17, metadata !7584, metadata !DIExpression()), !dbg !7585
  store i8* %7, i8** %18, align 8
  call void @llvm.dbg.declare(metadata i8** %18, metadata !7586, metadata !DIExpression()), !dbg !7587
  store i8* %8, i8** %19, align 8
  call void @llvm.dbg.declare(metadata i8** %19, metadata !7588, metadata !DIExpression()), !dbg !7589
  call void @llvm.dbg.declare(metadata i64* %20, metadata !7590, metadata !DIExpression()), !dbg !7591
  call void @llvm.dbg.declare(metadata i64* %21, metadata !7592, metadata !DIExpression()), !dbg !7593
  store i64 0, i64* %21, align 8, !dbg !7593
  call void @llvm.dbg.declare(metadata i8** %22, metadata !7594, metadata !DIExpression()), !dbg !7595
  store i8* null, i8** %22, align 8, !dbg !7595
  call void @llvm.dbg.declare(metadata i64* %23, metadata !7596, metadata !DIExpression()), !dbg !7597
  store i64 0, i64* %23, align 8, !dbg !7597
  call void @llvm.dbg.declare(metadata i8* %24, metadata !7598, metadata !DIExpression()), !dbg !7599
  store i8 0, i8* %24, align 1, !dbg !7599
  call void @llvm.dbg.declare(metadata i8* %25, metadata !7600, metadata !DIExpression()), !dbg !7601
  %37 = call i64 @__ctype_get_mb_cur_max() #8, !dbg !7602
  %38 = icmp eq i64 %37, 1, !dbg !7603
  %39 = zext i1 %38 to i8, !dbg !7601
  store i8 %39, i8* %25, align 1, !dbg !7601
  call void @llvm.dbg.declare(metadata i8* %26, metadata !7604, metadata !DIExpression()), !dbg !7605
  %40 = load i32, i32* %16, align 4, !dbg !7606
  %41 = and i32 %40, 2, !dbg !7607
  %42 = icmp ne i32 %41, 0, !dbg !7608
  %43 = zext i1 %42 to i8, !dbg !7605
  store i8 %43, i8* %26, align 1, !dbg !7605
  %44 = load i32, i32* %15, align 4, !dbg !7609
  switch i32 %44, label %123 [
    i32 4, label %45
    i32 3, label %46
    i32 5, label %63
    i32 6, label %64
    i32 7, label %64
    i32 8, label %64
    i32 1, label %104
    i32 2, label %105
    i32 0, label %122
  ], !dbg !7610

; <label>:45:                                     ; preds = %9
  store i32 3, i32* %15, align 4, !dbg !7611
  store i8 1, i8* %26, align 1, !dbg !7613
  br label %46, !dbg !7614

; <label>:46:                                     ; preds = %9, %45
  %47 = load i8, i8* %26, align 1, !dbg !7615
  %48 = trunc i8 %47 to i1, !dbg !7615
  br i1 %48, label %62, label %49, !dbg !7617

; <label>:49:                                     ; preds = %46
  br label %50, !dbg !7618, !llvm.loop !7619

; <label>:50:                                     ; preds = %49
  %51 = load i64, i64* %21, align 8, !dbg !7620
  %52 = load i64, i64* %12, align 8, !dbg !7620
  %53 = icmp ult i64 %51, %52, !dbg !7620
  br i1 %53, label %54, label %58, !dbg !7623

; <label>:54:                                     ; preds = %50
  %55 = load i8*, i8** %11, align 8, !dbg !7620
  %56 = load i64, i64* %21, align 8, !dbg !7620
  %57 = getelementptr inbounds i8, i8* %55, i64 %56, !dbg !7620
  store i8 34, i8* %57, align 1, !dbg !7620
  br label %58, !dbg !7620

; <label>:58:                                     ; preds = %54, %50
  %59 = load i64, i64* %21, align 8, !dbg !7623
  %60 = add i64 %59, 1, !dbg !7623
  store i64 %60, i64* %21, align 8, !dbg !7623
  br label %61, !dbg !7623

; <label>:61:                                     ; preds = %58
  br label %62, !dbg !7623

; <label>:62:                                     ; preds = %61, %46
  store i8 1, i8* %24, align 1, !dbg !7624
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8.161, i32 0, i32 0), i8** %22, align 8, !dbg !7625
  store i64 1, i64* %23, align 8, !dbg !7626
  br label %124, !dbg !7627

; <label>:63:                                     ; preds = %9
  store i8 1, i8* %24, align 1, !dbg !7628
  store i8 0, i8* %26, align 1, !dbg !7629
  br label %124, !dbg !7630

; <label>:64:                                     ; preds = %9, %9, %9
  %65 = load i32, i32* %15, align 4, !dbg !7631
  %66 = icmp ne i32 %65, 8, !dbg !7634
  br i1 %66, label %67, label %72, !dbg !7635

; <label>:67:                                     ; preds = %64
  %68 = load i32, i32* %15, align 4, !dbg !7636
  %69 = call i8* @gettext_quote(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9.162, i32 0, i32 0), i32 %68), !dbg !7638
  store i8* %69, i8** %18, align 8, !dbg !7639
  %70 = load i32, i32* %15, align 4, !dbg !7640
  %71 = call i8* @gettext_quote(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.163, i32 0, i32 0), i32 %70), !dbg !7641
  store i8* %71, i8** %19, align 8, !dbg !7642
  br label %72, !dbg !7643

; <label>:72:                                     ; preds = %67, %64
  %73 = load i8, i8* %26, align 1, !dbg !7644
  %74 = trunc i8 %73 to i1, !dbg !7644
  br i1 %74, label %100, label %75, !dbg !7646

; <label>:75:                                     ; preds = %72
  %76 = load i8*, i8** %18, align 8, !dbg !7647
  store i8* %76, i8** %22, align 8, !dbg !7649
  br label %77, !dbg !7650

; <label>:77:                                     ; preds = %96, %75
  %78 = load i8*, i8** %22, align 8, !dbg !7651
  %79 = load i8, i8* %78, align 1, !dbg !7653
  %80 = icmp ne i8 %79, 0, !dbg !7654
  br i1 %80, label %81, label %99, !dbg !7654

; <label>:81:                                     ; preds = %77
  br label %82, !dbg !7655, !llvm.loop !7656

; <label>:82:                                     ; preds = %81
  %83 = load i64, i64* %21, align 8, !dbg !7657
  %84 = load i64, i64* %12, align 8, !dbg !7657
  %85 = icmp ult i64 %83, %84, !dbg !7657
  br i1 %85, label %86, label %92, !dbg !7660

; <label>:86:                                     ; preds = %82
  %87 = load i8*, i8** %22, align 8, !dbg !7657
  %88 = load i8, i8* %87, align 1, !dbg !7657
  %89 = load i8*, i8** %11, align 8, !dbg !7657
  %90 = load i64, i64* %21, align 8, !dbg !7657
  %91 = getelementptr inbounds i8, i8* %89, i64 %90, !dbg !7657
  store i8 %88, i8* %91, align 1, !dbg !7657
  br label %92, !dbg !7657

; <label>:92:                                     ; preds = %86, %82
  %93 = load i64, i64* %21, align 8, !dbg !7660
  %94 = add i64 %93, 1, !dbg !7660
  store i64 %94, i64* %21, align 8, !dbg !7660
  br label %95, !dbg !7660

; <label>:95:                                     ; preds = %92
  br label %96, !dbg !7660

; <label>:96:                                     ; preds = %95
  %97 = load i8*, i8** %22, align 8, !dbg !7661
  %98 = getelementptr inbounds i8, i8* %97, i32 1, !dbg !7661
  store i8* %98, i8** %22, align 8, !dbg !7661
  br label %77, !dbg !7662, !llvm.loop !7663

; <label>:99:                                     ; preds = %77
  br label %100, !dbg !7664

; <label>:100:                                    ; preds = %99, %72
  store i8 1, i8* %24, align 1, !dbg !7665
  %101 = load i8*, i8** %19, align 8, !dbg !7666
  store i8* %101, i8** %22, align 8, !dbg !7667
  %102 = load i8*, i8** %22, align 8, !dbg !7668
  %103 = call i64 @strlen(i8* %102) #12, !dbg !7669
  store i64 %103, i64* %23, align 8, !dbg !7670
  br label %124, !dbg !7671

; <label>:104:                                    ; preds = %9
  store i32 2, i32* %15, align 4, !dbg !7672
  store i8 1, i8* %26, align 1, !dbg !7673
  br label %105, !dbg !7674

; <label>:105:                                    ; preds = %9, %104
  %106 = load i8, i8* %26, align 1, !dbg !7675
  %107 = trunc i8 %106 to i1, !dbg !7675
  br i1 %107, label %121, label %108, !dbg !7677

; <label>:108:                                    ; preds = %105
  br label %109, !dbg !7678, !llvm.loop !7679

; <label>:109:                                    ; preds = %108
  %110 = load i64, i64* %21, align 8, !dbg !7680
  %111 = load i64, i64* %12, align 8, !dbg !7680
  %112 = icmp ult i64 %110, %111, !dbg !7680
  br i1 %112, label %113, label %117, !dbg !7683

; <label>:113:                                    ; preds = %109
  %114 = load i8*, i8** %11, align 8, !dbg !7680
  %115 = load i64, i64* %21, align 8, !dbg !7680
  %116 = getelementptr inbounds i8, i8* %114, i64 %115, !dbg !7680
  store i8 39, i8* %116, align 1, !dbg !7680
  br label %117, !dbg !7680

; <label>:117:                                    ; preds = %113, %109
  %118 = load i64, i64* %21, align 8, !dbg !7683
  %119 = add i64 %118, 1, !dbg !7683
  store i64 %119, i64* %21, align 8, !dbg !7683
  br label %120, !dbg !7683

; <label>:120:                                    ; preds = %117
  br label %121, !dbg !7683

; <label>:121:                                    ; preds = %120, %105
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.163, i32 0, i32 0), i8** %22, align 8, !dbg !7684
  store i64 1, i64* %23, align 8, !dbg !7685
  br label %124, !dbg !7686

; <label>:122:                                    ; preds = %9
  store i8 0, i8* %26, align 1, !dbg !7687
  br label %124, !dbg !7688

; <label>:123:                                    ; preds = %9
  call void @abort() #11, !dbg !7689
  unreachable, !dbg !7689

; <label>:124:                                    ; preds = %122, %121, %100, %63, %62
  store i64 0, i64* %20, align 8, !dbg !7690
  br label %125, !dbg !7692

; <label>:125:                                    ; preds = %743, %124
  %126 = load i64, i64* %14, align 8, !dbg !7693
  %127 = icmp eq i64 %126, -1, !dbg !7695
  br i1 %127, label %128, label %136, !dbg !7693

; <label>:128:                                    ; preds = %125
  %129 = load i8*, i8** %13, align 8, !dbg !7696
  %130 = load i64, i64* %20, align 8, !dbg !7697
  %131 = getelementptr inbounds i8, i8* %129, i64 %130, !dbg !7696
  %132 = load i8, i8* %131, align 1, !dbg !7696
  %133 = sext i8 %132 to i32, !dbg !7696
  %134 = icmp eq i32 %133, 0, !dbg !7698
  %135 = zext i1 %134 to i32, !dbg !7698
  br label %141, !dbg !7693

; <label>:136:                                    ; preds = %125
  %137 = load i64, i64* %20, align 8, !dbg !7699
  %138 = load i64, i64* %14, align 8, !dbg !7700
  %139 = icmp eq i64 %137, %138, !dbg !7701
  %140 = zext i1 %139 to i32, !dbg !7701
  br label %141, !dbg !7693

; <label>:141:                                    ; preds = %136, %128
  %142 = phi i32 [ %135, %128 ], [ %140, %136 ], !dbg !7693
  %143 = icmp ne i32 %142, 0, !dbg !7702
  %144 = xor i1 %143, true, !dbg !7702
  br i1 %144, label %145, label %746, !dbg !7703

; <label>:145:                                    ; preds = %141
  call void @llvm.dbg.declare(metadata i8* %27, metadata !7704, metadata !DIExpression()), !dbg !7706
  call void @llvm.dbg.declare(metadata i8* %28, metadata !7707, metadata !DIExpression()), !dbg !7708
  call void @llvm.dbg.declare(metadata i8* %29, metadata !7709, metadata !DIExpression()), !dbg !7710
  store i8 0, i8* %29, align 1, !dbg !7710
  %146 = load i8, i8* %24, align 1, !dbg !7711
  %147 = trunc i8 %146 to i1, !dbg !7711
  br i1 %147, label %148, label %170, !dbg !7713

; <label>:148:                                    ; preds = %145
  %149 = load i64, i64* %23, align 8, !dbg !7714
  %150 = icmp ne i64 %149, 0, !dbg !7714
  br i1 %150, label %151, label %170, !dbg !7715

; <label>:151:                                    ; preds = %148
  %152 = load i64, i64* %20, align 8, !dbg !7716
  %153 = load i64, i64* %23, align 8, !dbg !7717
  %154 = add i64 %152, %153, !dbg !7718
  %155 = load i64, i64* %14, align 8, !dbg !7719
  %156 = icmp ule i64 %154, %155, !dbg !7720
  br i1 %156, label %157, label %170, !dbg !7721

; <label>:157:                                    ; preds = %151
  %158 = load i8*, i8** %13, align 8, !dbg !7722
  %159 = load i64, i64* %20, align 8, !dbg !7723
  %160 = getelementptr inbounds i8, i8* %158, i64 %159, !dbg !7724
  %161 = load i8*, i8** %22, align 8, !dbg !7725
  %162 = load i64, i64* %23, align 8, !dbg !7726
  %163 = call i32 @memcmp(i8* %160, i8* %161, i64 %162) #12, !dbg !7727
  %164 = icmp eq i32 %163, 0, !dbg !7728
  br i1 %164, label %165, label %170, !dbg !7729

; <label>:165:                                    ; preds = %157
  %166 = load i8, i8* %26, align 1, !dbg !7730
  %167 = trunc i8 %166 to i1, !dbg !7730
  br i1 %167, label %168, label %169, !dbg !7733

; <label>:168:                                    ; preds = %165
  br label %796, !dbg !7734

; <label>:169:                                    ; preds = %165
  store i8 1, i8* %29, align 1, !dbg !7735
  br label %170, !dbg !7736

; <label>:170:                                    ; preds = %169, %157, %151, %148, %145
  %171 = load i8*, i8** %13, align 8, !dbg !7737
  %172 = load i64, i64* %20, align 8, !dbg !7738
  %173 = getelementptr inbounds i8, i8* %171, i64 %172, !dbg !7737
  %174 = load i8, i8* %173, align 1, !dbg !7737
  store i8 %174, i8* %27, align 1, !dbg !7739
  %175 = load i8, i8* %27, align 1, !dbg !7740
  %176 = zext i8 %175 to i32, !dbg !7740
  switch i32 %176, label %452 [
    i32 0, label %177
    i32 63, label %250
    i32 7, label %346
    i32 8, label %347
    i32 12, label %348
    i32 10, label %349
    i32 13, label %350
    i32 9, label %351
    i32 11, label %352
    i32 92, label %353
    i32 123, label %379
    i32 125, label %379
    i32 35, label %393
    i32 126, label %393
    i32 32, label %398
    i32 33, label %398
    i32 34, label %398
    i32 36, label %398
    i32 38, label %398
    i32 40, label %398
    i32 41, label %398
    i32 42, label %398
    i32 59, label %398
    i32 60, label %398
    i32 61, label %398
    i32 62, label %398
    i32 91, label %398
    i32 94, label %398
    i32 96, label %398
    i32 124, label %398
    i32 39, label %406
    i32 37, label %451
    i32 43, label %451
    i32 44, label %451
    i32 45, label %451
    i32 46, label %451
    i32 47, label %451
    i32 48, label %451
    i32 49, label %451
    i32 50, label %451
    i32 51, label %451
    i32 52, label %451
    i32 53, label %451
    i32 54, label %451
    i32 55, label %451
    i32 56, label %451
    i32 57, label %451
    i32 58, label %451
    i32 65, label %451
    i32 66, label %451
    i32 67, label %451
    i32 68, label %451
    i32 69, label %451
    i32 70, label %451
    i32 71, label %451
    i32 72, label %451
    i32 73, label %451
    i32 74, label %451
    i32 75, label %451
    i32 76, label %451
    i32 77, label %451
    i32 78, label %451
    i32 79, label %451
    i32 80, label %451
    i32 81, label %451
    i32 82, label %451
    i32 83, label %451
    i32 84, label %451
    i32 85, label %451
    i32 86, label %451
    i32 87, label %451
    i32 88, label %451
    i32 89, label %451
    i32 90, label %451
    i32 93, label %451
    i32 95, label %451
    i32 97, label %451
    i32 98, label %451
    i32 99, label %451
    i32 100, label %451
    i32 101, label %451
    i32 102, label %451
    i32 103, label %451
    i32 104, label %451
    i32 105, label %451
    i32 106, label %451
    i32 107, label %451
    i32 108, label %451
    i32 109, label %451
    i32 110, label %451
    i32 111, label %451
    i32 112, label %451
    i32 113, label %451
    i32 114, label %451
    i32 115, label %451
    i32 116, label %451
    i32 117, label %451
    i32 118, label %451
    i32 119, label %451
    i32 120, label %451
    i32 121, label %451
    i32 122, label %451
  ], !dbg !7741

; <label>:177:                                    ; preds = %170
  %178 = load i8, i8* %24, align 1, !dbg !7742
  %179 = trunc i8 %178 to i1, !dbg !7742
  br i1 %179, label %180, label %243, !dbg !7745

; <label>:180:                                    ; preds = %177
  %181 = load i8, i8* %26, align 1, !dbg !7746
  %182 = trunc i8 %181 to i1, !dbg !7746
  br i1 %182, label %183, label %184, !dbg !7749

; <label>:183:                                    ; preds = %180
  br label %796, !dbg !7750

; <label>:184:                                    ; preds = %180
  br label %185, !dbg !7751, !llvm.loop !7752

; <label>:185:                                    ; preds = %184
  %186 = load i64, i64* %21, align 8, !dbg !7753
  %187 = load i64, i64* %12, align 8, !dbg !7753
  %188 = icmp ult i64 %186, %187, !dbg !7753
  br i1 %188, label %189, label %193, !dbg !7756

; <label>:189:                                    ; preds = %185
  %190 = load i8*, i8** %11, align 8, !dbg !7753
  %191 = load i64, i64* %21, align 8, !dbg !7753
  %192 = getelementptr inbounds i8, i8* %190, i64 %191, !dbg !7753
  store i8 92, i8* %192, align 1, !dbg !7753
  br label %193, !dbg !7753

; <label>:193:                                    ; preds = %189, %185
  %194 = load i64, i64* %21, align 8, !dbg !7756
  %195 = add i64 %194, 1, !dbg !7756
  store i64 %195, i64* %21, align 8, !dbg !7756
  br label %196, !dbg !7756

; <label>:196:                                    ; preds = %193
  %197 = load i64, i64* %20, align 8, !dbg !7757
  %198 = add i64 %197, 1, !dbg !7759
  %199 = load i64, i64* %14, align 8, !dbg !7760
  %200 = icmp ult i64 %198, %199, !dbg !7761
  br i1 %200, label %201, label %242, !dbg !7762

; <label>:201:                                    ; preds = %196
  %202 = load i8*, i8** %13, align 8, !dbg !7763
  %203 = load i64, i64* %20, align 8, !dbg !7764
  %204 = add i64 %203, 1, !dbg !7765
  %205 = getelementptr inbounds i8, i8* %202, i64 %204, !dbg !7763
  %206 = load i8, i8* %205, align 1, !dbg !7763
  %207 = sext i8 %206 to i32, !dbg !7763
  %208 = icmp sle i32 48, %207, !dbg !7766
  br i1 %208, label %209, label %242, !dbg !7767

; <label>:209:                                    ; preds = %201
  %210 = load i8*, i8** %13, align 8, !dbg !7768
  %211 = load i64, i64* %20, align 8, !dbg !7769
  %212 = add i64 %211, 1, !dbg !7770
  %213 = getelementptr inbounds i8, i8* %210, i64 %212, !dbg !7768
  %214 = load i8, i8* %213, align 1, !dbg !7768
  %215 = sext i8 %214 to i32, !dbg !7768
  %216 = icmp sle i32 %215, 57, !dbg !7771
  br i1 %216, label %217, label %242, !dbg !7772

; <label>:217:                                    ; preds = %209
  br label %218, !dbg !7773, !llvm.loop !7775

; <label>:218:                                    ; preds = %217
  %219 = load i64, i64* %21, align 8, !dbg !7776
  %220 = load i64, i64* %12, align 8, !dbg !7776
  %221 = icmp ult i64 %219, %220, !dbg !7776
  br i1 %221, label %222, label %226, !dbg !7779

; <label>:222:                                    ; preds = %218
  %223 = load i8*, i8** %11, align 8, !dbg !7776
  %224 = load i64, i64* %21, align 8, !dbg !7776
  %225 = getelementptr inbounds i8, i8* %223, i64 %224, !dbg !7776
  store i8 48, i8* %225, align 1, !dbg !7776
  br label %226, !dbg !7776

; <label>:226:                                    ; preds = %222, %218
  %227 = load i64, i64* %21, align 8, !dbg !7779
  %228 = add i64 %227, 1, !dbg !7779
  store i64 %228, i64* %21, align 8, !dbg !7779
  br label %229, !dbg !7779

; <label>:229:                                    ; preds = %226
  br label %230, !dbg !7780, !llvm.loop !7781

; <label>:230:                                    ; preds = %229
  %231 = load i64, i64* %21, align 8, !dbg !7782
  %232 = load i64, i64* %12, align 8, !dbg !7782
  %233 = icmp ult i64 %231, %232, !dbg !7782
  br i1 %233, label %234, label %238, !dbg !7785

; <label>:234:                                    ; preds = %230
  %235 = load i8*, i8** %11, align 8, !dbg !7782
  %236 = load i64, i64* %21, align 8, !dbg !7782
  %237 = getelementptr inbounds i8, i8* %235, i64 %236, !dbg !7782
  store i8 48, i8* %237, align 1, !dbg !7782
  br label %238, !dbg !7782

; <label>:238:                                    ; preds = %234, %230
  %239 = load i64, i64* %21, align 8, !dbg !7785
  %240 = add i64 %239, 1, !dbg !7785
  store i64 %240, i64* %21, align 8, !dbg !7785
  br label %241, !dbg !7785

; <label>:241:                                    ; preds = %238
  br label %242, !dbg !7786

; <label>:242:                                    ; preds = %241, %209, %201, %196
  store i8 48, i8* %27, align 1, !dbg !7787
  br label %249, !dbg !7788

; <label>:243:                                    ; preds = %177
  %244 = load i32, i32* %16, align 4, !dbg !7789
  %245 = and i32 %244, 1, !dbg !7791
  %246 = icmp ne i32 %245, 0, !dbg !7791
  br i1 %246, label %247, label %248, !dbg !7792

; <label>:247:                                    ; preds = %243
  br label %743, !dbg !7793

; <label>:248:                                    ; preds = %243
  br label %249

; <label>:249:                                    ; preds = %248, %242
  br label %684, !dbg !7794

; <label>:250:                                    ; preds = %170
  %251 = load i32, i32* %15, align 4, !dbg !7795
  switch i32 %251, label %344 [
    i32 2, label %252
    i32 3, label %257
  ], !dbg !7796

; <label>:252:                                    ; preds = %250
  %253 = load i8, i8* %26, align 1, !dbg !7797
  %254 = trunc i8 %253 to i1, !dbg !7797
  br i1 %254, label %255, label %256, !dbg !7800

; <label>:255:                                    ; preds = %252
  br label %796, !dbg !7801

; <label>:256:                                    ; preds = %252
  br label %345, !dbg !7802

; <label>:257:                                    ; preds = %250
  %258 = load i32, i32* %16, align 4, !dbg !7803
  %259 = and i32 %258, 4, !dbg !7805
  %260 = icmp ne i32 %259, 0, !dbg !7805
  br i1 %260, label %261, label %343, !dbg !7806

; <label>:261:                                    ; preds = %257
  %262 = load i64, i64* %20, align 8, !dbg !7807
  %263 = add i64 %262, 2, !dbg !7808
  %264 = load i64, i64* %14, align 8, !dbg !7809
  %265 = icmp ult i64 %263, %264, !dbg !7810
  br i1 %265, label %266, label %343, !dbg !7811

; <label>:266:                                    ; preds = %261
  %267 = load i8*, i8** %13, align 8, !dbg !7812
  %268 = load i64, i64* %20, align 8, !dbg !7813
  %269 = add i64 %268, 1, !dbg !7814
  %270 = getelementptr inbounds i8, i8* %267, i64 %269, !dbg !7812
  %271 = load i8, i8* %270, align 1, !dbg !7812
  %272 = sext i8 %271 to i32, !dbg !7812
  %273 = icmp eq i32 %272, 63, !dbg !7815
  br i1 %273, label %274, label %343, !dbg !7816

; <label>:274:                                    ; preds = %266
  %275 = load i8*, i8** %13, align 8, !dbg !7817
  %276 = load i64, i64* %20, align 8, !dbg !7818
  %277 = add i64 %276, 2, !dbg !7819
  %278 = getelementptr inbounds i8, i8* %275, i64 %277, !dbg !7817
  %279 = load i8, i8* %278, align 1, !dbg !7817
  %280 = sext i8 %279 to i32, !dbg !7817
  switch i32 %280, label %341 [
    i32 33, label %281
    i32 39, label %281
    i32 40, label %281
    i32 41, label %281
    i32 45, label %281
    i32 47, label %281
    i32 60, label %281
    i32 61, label %281
    i32 62, label %281
  ], !dbg !7820

; <label>:281:                                    ; preds = %274, %274, %274, %274, %274, %274, %274, %274, %274
  %282 = load i8, i8* %26, align 1, !dbg !7821
  %283 = trunc i8 %282 to i1, !dbg !7821
  br i1 %283, label %284, label %285, !dbg !7824

; <label>:284:                                    ; preds = %281
  br label %796, !dbg !7825

; <label>:285:                                    ; preds = %281
  %286 = load i8*, i8** %13, align 8, !dbg !7826
  %287 = load i64, i64* %20, align 8, !dbg !7827
  %288 = add i64 %287, 2, !dbg !7828
  %289 = getelementptr inbounds i8, i8* %286, i64 %288, !dbg !7826
  %290 = load i8, i8* %289, align 1, !dbg !7826
  store i8 %290, i8* %27, align 1, !dbg !7829
  %291 = load i64, i64* %20, align 8, !dbg !7830
  %292 = add i64 %291, 2, !dbg !7830
  store i64 %292, i64* %20, align 8, !dbg !7830
  br label %293, !dbg !7831, !llvm.loop !7832

; <label>:293:                                    ; preds = %285
  %294 = load i64, i64* %21, align 8, !dbg !7833
  %295 = load i64, i64* %12, align 8, !dbg !7833
  %296 = icmp ult i64 %294, %295, !dbg !7833
  br i1 %296, label %297, label %301, !dbg !7836

; <label>:297:                                    ; preds = %293
  %298 = load i8*, i8** %11, align 8, !dbg !7833
  %299 = load i64, i64* %21, align 8, !dbg !7833
  %300 = getelementptr inbounds i8, i8* %298, i64 %299, !dbg !7833
  store i8 63, i8* %300, align 1, !dbg !7833
  br label %301, !dbg !7833

; <label>:301:                                    ; preds = %297, %293
  %302 = load i64, i64* %21, align 8, !dbg !7836
  %303 = add i64 %302, 1, !dbg !7836
  store i64 %303, i64* %21, align 8, !dbg !7836
  br label %304, !dbg !7836

; <label>:304:                                    ; preds = %301
  br label %305, !dbg !7837, !llvm.loop !7838

; <label>:305:                                    ; preds = %304
  %306 = load i64, i64* %21, align 8, !dbg !7839
  %307 = load i64, i64* %12, align 8, !dbg !7839
  %308 = icmp ult i64 %306, %307, !dbg !7839
  br i1 %308, label %309, label %313, !dbg !7842

; <label>:309:                                    ; preds = %305
  %310 = load i8*, i8** %11, align 8, !dbg !7839
  %311 = load i64, i64* %21, align 8, !dbg !7839
  %312 = getelementptr inbounds i8, i8* %310, i64 %311, !dbg !7839
  store i8 34, i8* %312, align 1, !dbg !7839
  br label %313, !dbg !7839

; <label>:313:                                    ; preds = %309, %305
  %314 = load i64, i64* %21, align 8, !dbg !7842
  %315 = add i64 %314, 1, !dbg !7842
  store i64 %315, i64* %21, align 8, !dbg !7842
  br label %316, !dbg !7842

; <label>:316:                                    ; preds = %313
  br label %317, !dbg !7843, !llvm.loop !7844

; <label>:317:                                    ; preds = %316
  %318 = load i64, i64* %21, align 8, !dbg !7845
  %319 = load i64, i64* %12, align 8, !dbg !7845
  %320 = icmp ult i64 %318, %319, !dbg !7845
  br i1 %320, label %321, label %325, !dbg !7848

; <label>:321:                                    ; preds = %317
  %322 = load i8*, i8** %11, align 8, !dbg !7845
  %323 = load i64, i64* %21, align 8, !dbg !7845
  %324 = getelementptr inbounds i8, i8* %322, i64 %323, !dbg !7845
  store i8 34, i8* %324, align 1, !dbg !7845
  br label %325, !dbg !7845

; <label>:325:                                    ; preds = %321, %317
  %326 = load i64, i64* %21, align 8, !dbg !7848
  %327 = add i64 %326, 1, !dbg !7848
  store i64 %327, i64* %21, align 8, !dbg !7848
  br label %328, !dbg !7848

; <label>:328:                                    ; preds = %325
  br label %329, !dbg !7849, !llvm.loop !7850

; <label>:329:                                    ; preds = %328
  %330 = load i64, i64* %21, align 8, !dbg !7851
  %331 = load i64, i64* %12, align 8, !dbg !7851
  %332 = icmp ult i64 %330, %331, !dbg !7851
  br i1 %332, label %333, label %337, !dbg !7854

; <label>:333:                                    ; preds = %329
  %334 = load i8*, i8** %11, align 8, !dbg !7851
  %335 = load i64, i64* %21, align 8, !dbg !7851
  %336 = getelementptr inbounds i8, i8* %334, i64 %335, !dbg !7851
  store i8 63, i8* %336, align 1, !dbg !7851
  br label %337, !dbg !7851

; <label>:337:                                    ; preds = %333, %329
  %338 = load i64, i64* %21, align 8, !dbg !7854
  %339 = add i64 %338, 1, !dbg !7854
  store i64 %339, i64* %21, align 8, !dbg !7854
  br label %340, !dbg !7854

; <label>:340:                                    ; preds = %337
  br label %342, !dbg !7855

; <label>:341:                                    ; preds = %274
  br label %342, !dbg !7856

; <label>:342:                                    ; preds = %341, %340
  br label %343, !dbg !7857

; <label>:343:                                    ; preds = %342, %266, %261, %257
  br label %345, !dbg !7858

; <label>:344:                                    ; preds = %250
  br label %345, !dbg !7859

; <label>:345:                                    ; preds = %344, %343, %256
  br label %684, !dbg !7860

; <label>:346:                                    ; preds = %170
  store i8 97, i8* %28, align 1, !dbg !7861
  br label %373, !dbg !7862

; <label>:347:                                    ; preds = %170
  store i8 98, i8* %28, align 1, !dbg !7863
  br label %373, !dbg !7864

; <label>:348:                                    ; preds = %170
  store i8 102, i8* %28, align 1, !dbg !7865
  br label %373, !dbg !7866

; <label>:349:                                    ; preds = %170
  store i8 110, i8* %28, align 1, !dbg !7867
  br label %365, !dbg !7868

; <label>:350:                                    ; preds = %170
  store i8 114, i8* %28, align 1, !dbg !7869
  br label %365, !dbg !7870

; <label>:351:                                    ; preds = %170
  store i8 116, i8* %28, align 1, !dbg !7871
  br label %365, !dbg !7872

; <label>:352:                                    ; preds = %170
  store i8 118, i8* %28, align 1, !dbg !7873
  br label %373, !dbg !7874

; <label>:353:                                    ; preds = %170
  %354 = load i8, i8* %27, align 1, !dbg !7875
  store i8 %354, i8* %28, align 1, !dbg !7876
  %355 = load i8, i8* %24, align 1, !dbg !7877
  %356 = trunc i8 %355 to i1, !dbg !7877
  br i1 %356, label %357, label %364, !dbg !7879

; <label>:357:                                    ; preds = %353
  %358 = load i8, i8* %26, align 1, !dbg !7880
  %359 = trunc i8 %358 to i1, !dbg !7880
  br i1 %359, label %360, label %364, !dbg !7881

; <label>:360:                                    ; preds = %357
  %361 = load i64, i64* %23, align 8, !dbg !7882
  %362 = icmp ne i64 %361, 0, !dbg !7882
  br i1 %362, label %363, label %364, !dbg !7883

; <label>:363:                                    ; preds = %360
  br label %729, !dbg !7884

; <label>:364:                                    ; preds = %360, %357, %353
  br label %365, !dbg !7882

; <label>:365:                                    ; preds = %364, %351, %350, %349
  %366 = load i32, i32* %15, align 4, !dbg !7885
  %367 = icmp eq i32 %366, 2, !dbg !7887
  br i1 %367, label %368, label %372, !dbg !7888

; <label>:368:                                    ; preds = %365
  %369 = load i8, i8* %26, align 1, !dbg !7889
  %370 = trunc i8 %369 to i1, !dbg !7889
  br i1 %370, label %371, label %372, !dbg !7890

; <label>:371:                                    ; preds = %368
  br label %796, !dbg !7891

; <label>:372:                                    ; preds = %368, %365
  br label %373, !dbg !7889

; <label>:373:                                    ; preds = %372, %352, %348, %347, %346
  %374 = load i8, i8* %24, align 1, !dbg !7892
  %375 = trunc i8 %374 to i1, !dbg !7892
  br i1 %375, label %376, label %378, !dbg !7894

; <label>:376:                                    ; preds = %373
  %377 = load i8, i8* %28, align 1, !dbg !7895
  store i8 %377, i8* %27, align 1, !dbg !7897
  br label %712, !dbg !7898

; <label>:378:                                    ; preds = %373
  br label %684, !dbg !7899

; <label>:379:                                    ; preds = %170, %170
  %380 = load i64, i64* %14, align 8, !dbg !7900
  %381 = icmp eq i64 %380, -1, !dbg !7902
  br i1 %381, label %382, label %388, !dbg !7903

; <label>:382:                                    ; preds = %379
  %383 = load i8*, i8** %13, align 8, !dbg !7904
  %384 = getelementptr inbounds i8, i8* %383, i64 1, !dbg !7904
  %385 = load i8, i8* %384, align 1, !dbg !7904
  %386 = sext i8 %385 to i32, !dbg !7904
  %387 = icmp eq i32 %386, 0, !dbg !7905
  br i1 %387, label %392, label %391, !dbg !7900

; <label>:388:                                    ; preds = %379
  %389 = load i64, i64* %14, align 8, !dbg !7906
  %390 = icmp eq i64 %389, 1, !dbg !7907
  br i1 %390, label %392, label %391, !dbg !7903

; <label>:391:                                    ; preds = %388, %382
  br label %684, !dbg !7908

; <label>:392:                                    ; preds = %388, %382
  br label %393, !dbg !7909

; <label>:393:                                    ; preds = %170, %170, %392
  %394 = load i64, i64* %20, align 8, !dbg !7910
  %395 = icmp ne i64 %394, 0, !dbg !7912
  br i1 %395, label %396, label %397, !dbg !7913

; <label>:396:                                    ; preds = %393
  br label %684, !dbg !7914

; <label>:397:                                    ; preds = %393
  br label %398, !dbg !7915

; <label>:398:                                    ; preds = %170, %170, %170, %170, %170, %170, %170, %170, %170, %170, %170, %170, %170, %170, %170, %170, %397
  %399 = load i32, i32* %15, align 4, !dbg !7916
  %400 = icmp eq i32 %399, 2, !dbg !7918
  br i1 %400, label %401, label %405, !dbg !7919

; <label>:401:                                    ; preds = %398
  %402 = load i8, i8* %26, align 1, !dbg !7920
  %403 = trunc i8 %402 to i1, !dbg !7920
  br i1 %403, label %404, label %405, !dbg !7921

; <label>:404:                                    ; preds = %401
  br label %796, !dbg !7922

; <label>:405:                                    ; preds = %401, %398
  br label %684, !dbg !7923

; <label>:406:                                    ; preds = %170
  %407 = load i32, i32* %15, align 4, !dbg !7924
  %408 = icmp eq i32 %407, 2, !dbg !7926
  br i1 %408, label %409, label %450, !dbg !7927

; <label>:409:                                    ; preds = %406
  %410 = load i8, i8* %26, align 1, !dbg !7928
  %411 = trunc i8 %410 to i1, !dbg !7928
  br i1 %411, label %412, label %413, !dbg !7931

; <label>:412:                                    ; preds = %409
  br label %796, !dbg !7932

; <label>:413:                                    ; preds = %409
  br label %414, !dbg !7933, !llvm.loop !7934

; <label>:414:                                    ; preds = %413
  %415 = load i64, i64* %21, align 8, !dbg !7935
  %416 = load i64, i64* %12, align 8, !dbg !7935
  %417 = icmp ult i64 %415, %416, !dbg !7935
  br i1 %417, label %418, label %422, !dbg !7938

; <label>:418:                                    ; preds = %414
  %419 = load i8*, i8** %11, align 8, !dbg !7935
  %420 = load i64, i64* %21, align 8, !dbg !7935
  %421 = getelementptr inbounds i8, i8* %419, i64 %420, !dbg !7935
  store i8 39, i8* %421, align 1, !dbg !7935
  br label %422, !dbg !7935

; <label>:422:                                    ; preds = %418, %414
  %423 = load i64, i64* %21, align 8, !dbg !7938
  %424 = add i64 %423, 1, !dbg !7938
  store i64 %424, i64* %21, align 8, !dbg !7938
  br label %425, !dbg !7938

; <label>:425:                                    ; preds = %422
  br label %426, !dbg !7939, !llvm.loop !7940

; <label>:426:                                    ; preds = %425
  %427 = load i64, i64* %21, align 8, !dbg !7941
  %428 = load i64, i64* %12, align 8, !dbg !7941
  %429 = icmp ult i64 %427, %428, !dbg !7941
  br i1 %429, label %430, label %434, !dbg !7944

; <label>:430:                                    ; preds = %426
  %431 = load i8*, i8** %11, align 8, !dbg !7941
  %432 = load i64, i64* %21, align 8, !dbg !7941
  %433 = getelementptr inbounds i8, i8* %431, i64 %432, !dbg !7941
  store i8 92, i8* %433, align 1, !dbg !7941
  br label %434, !dbg !7941

; <label>:434:                                    ; preds = %430, %426
  %435 = load i64, i64* %21, align 8, !dbg !7944
  %436 = add i64 %435, 1, !dbg !7944
  store i64 %436, i64* %21, align 8, !dbg !7944
  br label %437, !dbg !7944

; <label>:437:                                    ; preds = %434
  br label %438, !dbg !7945, !llvm.loop !7946

; <label>:438:                                    ; preds = %437
  %439 = load i64, i64* %21, align 8, !dbg !7947
  %440 = load i64, i64* %12, align 8, !dbg !7947
  %441 = icmp ult i64 %439, %440, !dbg !7947
  br i1 %441, label %442, label %446, !dbg !7950

; <label>:442:                                    ; preds = %438
  %443 = load i8*, i8** %11, align 8, !dbg !7947
  %444 = load i64, i64* %21, align 8, !dbg !7947
  %445 = getelementptr inbounds i8, i8* %443, i64 %444, !dbg !7947
  store i8 39, i8* %445, align 1, !dbg !7947
  br label %446, !dbg !7947

; <label>:446:                                    ; preds = %442, %438
  %447 = load i64, i64* %21, align 8, !dbg !7950
  %448 = add i64 %447, 1, !dbg !7950
  store i64 %448, i64* %21, align 8, !dbg !7950
  br label %449, !dbg !7950

; <label>:449:                                    ; preds = %446
  br label %450, !dbg !7951

; <label>:450:                                    ; preds = %449, %406
  br label %684, !dbg !7952

; <label>:451:                                    ; preds = %170, %170, %170, %170, %170, %170, %170, %170, %170, %170, %170, %170, %170, %170, %170, %170, %170, %170, %170, %170, %170, %170, %170, %170, %170, %170, %170, %170, %170, %170, %170, %170, %170, %170, %170, %170, %170, %170, %170, %170, %170, %170, %170, %170, %170, %170, %170, %170, %170, %170, %170, %170, %170, %170, %170, %170, %170, %170, %170, %170, %170, %170, %170, %170, %170, %170, %170, %170, %170, %170, %170
  br label %684, !dbg !7953

; <label>:452:                                    ; preds = %170
  call void @llvm.dbg.declare(metadata i64* %30, metadata !7954, metadata !DIExpression()), !dbg !7956
  call void @llvm.dbg.declare(metadata i8* %31, metadata !7957, metadata !DIExpression()), !dbg !7958
  %453 = load i8, i8* %25, align 1, !dbg !7959
  %454 = trunc i8 %453 to i1, !dbg !7959
  br i1 %454, label %455, label %467, !dbg !7961

; <label>:455:                                    ; preds = %452
  store i64 1, i64* %30, align 8, !dbg !7962
  %456 = call i16** @__ctype_b_loc() #14, !dbg !7964
  %457 = load i16*, i16** %456, align 8, !dbg !7964
  %458 = load i8, i8* %27, align 1, !dbg !7964
  %459 = zext i8 %458 to i32, !dbg !7964
  %460 = sext i32 %459 to i64, !dbg !7964
  %461 = getelementptr inbounds i16, i16* %457, i64 %460, !dbg !7964
  %462 = load i16, i16* %461, align 2, !dbg !7964
  %463 = zext i16 %462 to i32, !dbg !7964
  %464 = and i32 %463, 16384, !dbg !7964
  %465 = icmp ne i32 %464, 0, !dbg !7965
  %466 = zext i1 %465 to i8, !dbg !7966
  store i8 %466, i8* %31, align 1, !dbg !7966
  br label %564, !dbg !7967

; <label>:467:                                    ; preds = %452
  call void @llvm.dbg.declare(metadata %struct.__mbstate_t* %32, metadata !7968, metadata !DIExpression()), !dbg !7983
  %468 = bitcast %struct.__mbstate_t* %32 to i8*, !dbg !7984
  call void @llvm.memset.p0i8.i64(i8* %468, i8 0, i64 8, i32 4, i1 false), !dbg !7984
  store i64 0, i64* %30, align 8, !dbg !7985
  store i8 1, i8* %31, align 1, !dbg !7986
  %469 = load i64, i64* %14, align 8, !dbg !7987
  %470 = icmp eq i64 %469, -1, !dbg !7989
  br i1 %470, label %471, label %474, !dbg !7990

; <label>:471:                                    ; preds = %467
  %472 = load i8*, i8** %13, align 8, !dbg !7991
  %473 = call i64 @strlen(i8* %472) #12, !dbg !7992
  store i64 %473, i64* %14, align 8, !dbg !7993
  br label %474, !dbg !7994

; <label>:474:                                    ; preds = %471, %467
  br label %475, !dbg !7995, !llvm.loop !7996

; <label>:475:                                    ; preds = %559, %474
  call void @llvm.dbg.declare(metadata i32* %33, metadata !7998, metadata !DIExpression()), !dbg !8001
  call void @llvm.dbg.declare(metadata i64* %34, metadata !8002, metadata !DIExpression()), !dbg !8003
  %476 = load i8*, i8** %13, align 8, !dbg !8004
  %477 = load i64, i64* %20, align 8, !dbg !8005
  %478 = load i64, i64* %30, align 8, !dbg !8006
  %479 = add i64 %477, %478, !dbg !8007
  %480 = getelementptr inbounds i8, i8* %476, i64 %479, !dbg !8004
  %481 = load i64, i64* %14, align 8, !dbg !8008
  %482 = load i64, i64* %20, align 8, !dbg !8009
  %483 = load i64, i64* %30, align 8, !dbg !8010
  %484 = add i64 %482, %483, !dbg !8011
  %485 = sub i64 %481, %484, !dbg !8012
  %486 = call i64 @mbrtowc(i32* %33, i8* %480, i64 %485, %struct.__mbstate_t* %32) #8, !dbg !8013
  store i64 %486, i64* %34, align 8, !dbg !8003
  %487 = load i64, i64* %34, align 8, !dbg !8014
  %488 = icmp eq i64 %487, 0, !dbg !8016
  br i1 %488, label %489, label %490, !dbg !8017

; <label>:489:                                    ; preds = %475
  br label %563, !dbg !8018

; <label>:490:                                    ; preds = %475
  %491 = load i64, i64* %34, align 8, !dbg !8019
  %492 = icmp eq i64 %491, -1, !dbg !8021
  br i1 %492, label %493, label %494, !dbg !8022

; <label>:493:                                    ; preds = %490
  store i8 0, i8* %31, align 1, !dbg !8023
  br label %563, !dbg !8025

; <label>:494:                                    ; preds = %490
  %495 = load i64, i64* %34, align 8, !dbg !8026
  %496 = icmp eq i64 %495, -2, !dbg !8028
  br i1 %496, label %497, label %519, !dbg !8029

; <label>:497:                                    ; preds = %494
  store i8 0, i8* %31, align 1, !dbg !8030
  br label %498, !dbg !8032

; <label>:498:                                    ; preds = %515, %497
  %499 = load i64, i64* %20, align 8, !dbg !8033
  %500 = load i64, i64* %30, align 8, !dbg !8034
  %501 = add i64 %499, %500, !dbg !8035
  %502 = load i64, i64* %14, align 8, !dbg !8036
  %503 = icmp ult i64 %501, %502, !dbg !8037
  br i1 %503, label %504, label %513, !dbg !8038

; <label>:504:                                    ; preds = %498
  %505 = load i8*, i8** %13, align 8, !dbg !8039
  %506 = load i64, i64* %20, align 8, !dbg !8040
  %507 = load i64, i64* %30, align 8, !dbg !8041
  %508 = add i64 %506, %507, !dbg !8042
  %509 = getelementptr inbounds i8, i8* %505, i64 %508, !dbg !8039
  %510 = load i8, i8* %509, align 1, !dbg !8039
  %511 = sext i8 %510 to i32, !dbg !8039
  %512 = icmp ne i32 %511, 0, !dbg !8038
  br label %513

; <label>:513:                                    ; preds = %504, %498
  %514 = phi i1 [ false, %498 ], [ %512, %504 ]
  br i1 %514, label %515, label %518, !dbg !8032

; <label>:515:                                    ; preds = %513
  %516 = load i64, i64* %30, align 8, !dbg !8043
  %517 = add i64 %516, 1, !dbg !8043
  store i64 %517, i64* %30, align 8, !dbg !8043
  br label %498, !dbg !8032, !llvm.loop !8044

; <label>:518:                                    ; preds = %513
  br label %563, !dbg !8045

; <label>:519:                                    ; preds = %494
  %520 = load i8, i8* %26, align 1, !dbg !8046
  %521 = trunc i8 %520 to i1, !dbg !8046
  br i1 %521, label %522, label %547, !dbg !8049

; <label>:522:                                    ; preds = %519
  %523 = load i32, i32* %15, align 4, !dbg !8050
  %524 = icmp eq i32 %523, 2, !dbg !8051
  br i1 %524, label %525, label %547, !dbg !8052

; <label>:525:                                    ; preds = %522
  call void @llvm.dbg.declare(metadata i64* %35, metadata !8053, metadata !DIExpression()), !dbg !8055
  store i64 1, i64* %35, align 8, !dbg !8056
  br label %526, !dbg !8058

; <label>:526:                                    ; preds = %543, %525
  %527 = load i64, i64* %35, align 8, !dbg !8059
  %528 = load i64, i64* %34, align 8, !dbg !8061
  %529 = icmp ult i64 %527, %528, !dbg !8062
  br i1 %529, label %530, label %546, !dbg !8063

; <label>:530:                                    ; preds = %526
  %531 = load i8*, i8** %13, align 8, !dbg !8064
  %532 = load i64, i64* %20, align 8, !dbg !8065
  %533 = load i64, i64* %30, align 8, !dbg !8066
  %534 = add i64 %532, %533, !dbg !8067
  %535 = load i64, i64* %35, align 8, !dbg !8068
  %536 = add i64 %534, %535, !dbg !8069
  %537 = getelementptr inbounds i8, i8* %531, i64 %536, !dbg !8064
  %538 = load i8, i8* %537, align 1, !dbg !8064
  %539 = sext i8 %538 to i32, !dbg !8064
  switch i32 %539, label %541 [
    i32 91, label %540
    i32 92, label %540
    i32 94, label %540
    i32 96, label %540
    i32 124, label %540
  ], !dbg !8070

; <label>:540:                                    ; preds = %530, %530, %530, %530, %530
  br label %796, !dbg !8071

; <label>:541:                                    ; preds = %530
  br label %542, !dbg !8073

; <label>:542:                                    ; preds = %541
  br label %543, !dbg !8074

; <label>:543:                                    ; preds = %542
  %544 = load i64, i64* %35, align 8, !dbg !8075
  %545 = add i64 %544, 1, !dbg !8075
  store i64 %545, i64* %35, align 8, !dbg !8075
  br label %526, !dbg !8076, !llvm.loop !8077

; <label>:546:                                    ; preds = %526
  br label %547, !dbg !8079

; <label>:547:                                    ; preds = %546, %522, %519
  %548 = load i32, i32* %33, align 4, !dbg !8080
  %549 = call i32 @iswprint(i32 %548) #8, !dbg !8082
  %550 = icmp ne i32 %549, 0, !dbg !8082
  br i1 %550, label %552, label %551, !dbg !8083

; <label>:551:                                    ; preds = %547
  store i8 0, i8* %31, align 1, !dbg !8084
  br label %552, !dbg !8085

; <label>:552:                                    ; preds = %551, %547
  %553 = load i64, i64* %34, align 8, !dbg !8086
  %554 = load i64, i64* %30, align 8, !dbg !8087
  %555 = add i64 %554, %553, !dbg !8087
  store i64 %555, i64* %30, align 8, !dbg !8087
  br label %556

; <label>:556:                                    ; preds = %552
  br label %557

; <label>:557:                                    ; preds = %556
  br label %558

; <label>:558:                                    ; preds = %557
  br label %559, !dbg !8088

; <label>:559:                                    ; preds = %558
  %560 = call i32 @mbsinit(%struct.__mbstate_t* %32) #12, !dbg !8089
  %561 = icmp ne i32 %560, 0, !dbg !8090
  %562 = xor i1 %561, true, !dbg !8090
  br i1 %562, label %475, label %563, !dbg !8088, !llvm.loop !7996

; <label>:563:                                    ; preds = %559, %518, %493, %489
  br label %564

; <label>:564:                                    ; preds = %563, %455
  %565 = load i64, i64* %30, align 8, !dbg !8091
  %566 = icmp ult i64 1, %565, !dbg !8093
  br i1 %566, label %573, label %567, !dbg !8094

; <label>:567:                                    ; preds = %564
  %568 = load i8, i8* %24, align 1, !dbg !8095
  %569 = trunc i8 %568 to i1, !dbg !8095
  br i1 %569, label %570, label %683, !dbg !8096

; <label>:570:                                    ; preds = %567
  %571 = load i8, i8* %31, align 1, !dbg !8097
  %572 = trunc i8 %571 to i1, !dbg !8097
  br i1 %572, label %683, label %573, !dbg !8098

; <label>:573:                                    ; preds = %570, %564
  call void @llvm.dbg.declare(metadata i64* %36, metadata !8099, metadata !DIExpression()), !dbg !8101
  %574 = load i64, i64* %20, align 8, !dbg !8102
  %575 = load i64, i64* %30, align 8, !dbg !8103
  %576 = add i64 %574, %575, !dbg !8104
  store i64 %576, i64* %36, align 8, !dbg !8101
  br label %577, !dbg !8105

; <label>:577:                                    ; preds = %676, %573
  %578 = load i8, i8* %24, align 1, !dbg !8106
  %579 = trunc i8 %578 to i1, !dbg !8106
  br i1 %579, label %580, label %640, !dbg !8111

; <label>:580:                                    ; preds = %577
  %581 = load i8, i8* %31, align 1, !dbg !8112
  %582 = trunc i8 %581 to i1, !dbg !8112
  br i1 %582, label %640, label %583, !dbg !8113

; <label>:583:                                    ; preds = %580
  %584 = load i8, i8* %26, align 1, !dbg !8114
  %585 = trunc i8 %584 to i1, !dbg !8114
  br i1 %585, label %586, label %587, !dbg !8117

; <label>:586:                                    ; preds = %583
  br label %796, !dbg !8118

; <label>:587:                                    ; preds = %583
  br label %588, !dbg !8119, !llvm.loop !8120

; <label>:588:                                    ; preds = %587
  %589 = load i64, i64* %21, align 8, !dbg !8121
  %590 = load i64, i64* %12, align 8, !dbg !8121
  %591 = icmp ult i64 %589, %590, !dbg !8121
  br i1 %591, label %592, label %596, !dbg !8124

; <label>:592:                                    ; preds = %588
  %593 = load i8*, i8** %11, align 8, !dbg !8121
  %594 = load i64, i64* %21, align 8, !dbg !8121
  %595 = getelementptr inbounds i8, i8* %593, i64 %594, !dbg !8121
  store i8 92, i8* %595, align 1, !dbg !8121
  br label %596, !dbg !8121

; <label>:596:                                    ; preds = %592, %588
  %597 = load i64, i64* %21, align 8, !dbg !8124
  %598 = add i64 %597, 1, !dbg !8124
  store i64 %598, i64* %21, align 8, !dbg !8124
  br label %599, !dbg !8124

; <label>:599:                                    ; preds = %596
  br label %600, !dbg !8125, !llvm.loop !8126

; <label>:600:                                    ; preds = %599
  %601 = load i64, i64* %21, align 8, !dbg !8127
  %602 = load i64, i64* %12, align 8, !dbg !8127
  %603 = icmp ult i64 %601, %602, !dbg !8127
  br i1 %603, label %604, label %613, !dbg !8130

; <label>:604:                                    ; preds = %600
  %605 = load i8, i8* %27, align 1, !dbg !8127
  %606 = zext i8 %605 to i32, !dbg !8127
  %607 = ashr i32 %606, 6, !dbg !8127
  %608 = add nsw i32 48, %607, !dbg !8127
  %609 = trunc i32 %608 to i8, !dbg !8127
  %610 = load i8*, i8** %11, align 8, !dbg !8127
  %611 = load i64, i64* %21, align 8, !dbg !8127
  %612 = getelementptr inbounds i8, i8* %610, i64 %611, !dbg !8127
  store i8 %609, i8* %612, align 1, !dbg !8127
  br label %613, !dbg !8127

; <label>:613:                                    ; preds = %604, %600
  %614 = load i64, i64* %21, align 8, !dbg !8130
  %615 = add i64 %614, 1, !dbg !8130
  store i64 %615, i64* %21, align 8, !dbg !8130
  br label %616, !dbg !8130

; <label>:616:                                    ; preds = %613
  br label %617, !dbg !8131, !llvm.loop !8132

; <label>:617:                                    ; preds = %616
  %618 = load i64, i64* %21, align 8, !dbg !8133
  %619 = load i64, i64* %12, align 8, !dbg !8133
  %620 = icmp ult i64 %618, %619, !dbg !8133
  br i1 %620, label %621, label %631, !dbg !8136

; <label>:621:                                    ; preds = %617
  %622 = load i8, i8* %27, align 1, !dbg !8133
  %623 = zext i8 %622 to i32, !dbg !8133
  %624 = ashr i32 %623, 3, !dbg !8133
  %625 = and i32 %624, 7, !dbg !8133
  %626 = add nsw i32 48, %625, !dbg !8133
  %627 = trunc i32 %626 to i8, !dbg !8133
  %628 = load i8*, i8** %11, align 8, !dbg !8133
  %629 = load i64, i64* %21, align 8, !dbg !8133
  %630 = getelementptr inbounds i8, i8* %628, i64 %629, !dbg !8133
  store i8 %627, i8* %630, align 1, !dbg !8133
  br label %631, !dbg !8133

; <label>:631:                                    ; preds = %621, %617
  %632 = load i64, i64* %21, align 8, !dbg !8136
  %633 = add i64 %632, 1, !dbg !8136
  store i64 %633, i64* %21, align 8, !dbg !8136
  br label %634, !dbg !8136

; <label>:634:                                    ; preds = %631
  %635 = load i8, i8* %27, align 1, !dbg !8137
  %636 = zext i8 %635 to i32, !dbg !8137
  %637 = and i32 %636, 7, !dbg !8138
  %638 = add nsw i32 48, %637, !dbg !8139
  %639 = trunc i32 %638 to i8, !dbg !8140
  store i8 %639, i8* %27, align 1, !dbg !8141
  br label %657, !dbg !8142

; <label>:640:                                    ; preds = %580, %577
  %641 = load i8, i8* %29, align 1, !dbg !8143
  %642 = trunc i8 %641 to i1, !dbg !8143
  br i1 %642, label %643, label %656, !dbg !8145

; <label>:643:                                    ; preds = %640
  br label %644, !dbg !8146, !llvm.loop !8148

; <label>:644:                                    ; preds = %643
  %645 = load i64, i64* %21, align 8, !dbg !8149
  %646 = load i64, i64* %12, align 8, !dbg !8149
  %647 = icmp ult i64 %645, %646, !dbg !8149
  br i1 %647, label %648, label %652, !dbg !8152

; <label>:648:                                    ; preds = %644
  %649 = load i8*, i8** %11, align 8, !dbg !8149
  %650 = load i64, i64* %21, align 8, !dbg !8149
  %651 = getelementptr inbounds i8, i8* %649, i64 %650, !dbg !8149
  store i8 92, i8* %651, align 1, !dbg !8149
  br label %652, !dbg !8149

; <label>:652:                                    ; preds = %648, %644
  %653 = load i64, i64* %21, align 8, !dbg !8152
  %654 = add i64 %653, 1, !dbg !8152
  store i64 %654, i64* %21, align 8, !dbg !8152
  br label %655, !dbg !8152

; <label>:655:                                    ; preds = %652
  store i8 0, i8* %29, align 1, !dbg !8153
  br label %656, !dbg !8154

; <label>:656:                                    ; preds = %655, %640
  br label %657

; <label>:657:                                    ; preds = %656, %634
  %658 = load i64, i64* %36, align 8, !dbg !8155
  %659 = load i64, i64* %20, align 8, !dbg !8157
  %660 = add i64 %659, 1, !dbg !8158
  %661 = icmp ule i64 %658, %660, !dbg !8159
  br i1 %661, label %662, label %663, !dbg !8160

; <label>:662:                                    ; preds = %657
  br label %682, !dbg !8161

; <label>:663:                                    ; preds = %657
  br label %664, !dbg !8162, !llvm.loop !8163

; <label>:664:                                    ; preds = %663
  %665 = load i64, i64* %21, align 8, !dbg !8164
  %666 = load i64, i64* %12, align 8, !dbg !8164
  %667 = icmp ult i64 %665, %666, !dbg !8164
  br i1 %667, label %668, label %673, !dbg !8167

; <label>:668:                                    ; preds = %664
  %669 = load i8, i8* %27, align 1, !dbg !8164
  %670 = load i8*, i8** %11, align 8, !dbg !8164
  %671 = load i64, i64* %21, align 8, !dbg !8164
  %672 = getelementptr inbounds i8, i8* %670, i64 %671, !dbg !8164
  store i8 %669, i8* %672, align 1, !dbg !8164
  br label %673, !dbg !8164

; <label>:673:                                    ; preds = %668, %664
  %674 = load i64, i64* %21, align 8, !dbg !8167
  %675 = add i64 %674, 1, !dbg !8167
  store i64 %675, i64* %21, align 8, !dbg !8167
  br label %676, !dbg !8167

; <label>:676:                                    ; preds = %673
  %677 = load i8*, i8** %13, align 8, !dbg !8168
  %678 = load i64, i64* %20, align 8, !dbg !8169
  %679 = add i64 %678, 1, !dbg !8169
  store i64 %679, i64* %20, align 8, !dbg !8169
  %680 = getelementptr inbounds i8, i8* %677, i64 %679, !dbg !8168
  %681 = load i8, i8* %680, align 1, !dbg !8168
  store i8 %681, i8* %27, align 1, !dbg !8170
  br label %577, !dbg !8171, !llvm.loop !8172

; <label>:682:                                    ; preds = %662
  br label %729, !dbg !8175

; <label>:683:                                    ; preds = %570, %567
  br label %684, !dbg !8176

; <label>:684:                                    ; preds = %683, %451, %450, %405, %396, %391, %378, %345, %249
  %685 = load i8, i8* %24, align 1, !dbg !8177
  %686 = trunc i8 %685 to i1, !dbg !8177
  br i1 %686, label %690, label %687, !dbg !8179

; <label>:687:                                    ; preds = %684
  %688 = load i8, i8* %26, align 1, !dbg !8180
  %689 = trunc i8 %688 to i1, !dbg !8180
  br i1 %689, label %690, label %707, !dbg !8181

; <label>:690:                                    ; preds = %687, %684
  %691 = load i32*, i32** %17, align 8, !dbg !8182
  %692 = icmp ne i32* %691, null, !dbg !8182
  br i1 %692, label %693, label %707, !dbg !8183

; <label>:693:                                    ; preds = %690
  %694 = load i32*, i32** %17, align 8, !dbg !8184
  %695 = load i8, i8* %27, align 1, !dbg !8185
  %696 = zext i8 %695 to i64, !dbg !8185
  %697 = udiv i64 %696, 32, !dbg !8186
  %698 = getelementptr inbounds i32, i32* %694, i64 %697, !dbg !8184
  %699 = load i32, i32* %698, align 4, !dbg !8184
  %700 = load i8, i8* %27, align 1, !dbg !8187
  %701 = zext i8 %700 to i64, !dbg !8187
  %702 = urem i64 %701, 32, !dbg !8188
  %703 = trunc i64 %702 to i32, !dbg !8189
  %704 = shl i32 1, %703, !dbg !8189
  %705 = and i32 %699, %704, !dbg !8190
  %706 = icmp ne i32 %705, 0, !dbg !8190
  br i1 %706, label %711, label %707, !dbg !8191

; <label>:707:                                    ; preds = %693, %690, %687
  %708 = load i8, i8* %29, align 1, !dbg !8192
  %709 = trunc i8 %708 to i1, !dbg !8192
  br i1 %709, label %711, label %710, !dbg !8193

; <label>:710:                                    ; preds = %707
  br label %729, !dbg !8194

; <label>:711:                                    ; preds = %707, %693
  br label %712, !dbg !8192

; <label>:712:                                    ; preds = %711, %376
  %713 = load i8, i8* %26, align 1, !dbg !8195
  %714 = trunc i8 %713 to i1, !dbg !8195
  br i1 %714, label %715, label %716, !dbg !8197

; <label>:715:                                    ; preds = %712
  br label %796, !dbg !8198

; <label>:716:                                    ; preds = %712
  br label %717, !dbg !8199, !llvm.loop !8200

; <label>:717:                                    ; preds = %716
  %718 = load i64, i64* %21, align 8, !dbg !8201
  %719 = load i64, i64* %12, align 8, !dbg !8201
  %720 = icmp ult i64 %718, %719, !dbg !8201
  br i1 %720, label %721, label %725, !dbg !8204

; <label>:721:                                    ; preds = %717
  %722 = load i8*, i8** %11, align 8, !dbg !8201
  %723 = load i64, i64* %21, align 8, !dbg !8201
  %724 = getelementptr inbounds i8, i8* %722, i64 %723, !dbg !8201
  store i8 92, i8* %724, align 1, !dbg !8201
  br label %725, !dbg !8201

; <label>:725:                                    ; preds = %721, %717
  %726 = load i64, i64* %21, align 8, !dbg !8204
  %727 = add i64 %726, 1, !dbg !8204
  store i64 %727, i64* %21, align 8, !dbg !8204
  br label %728, !dbg !8204

; <label>:728:                                    ; preds = %725
  br label %729, !dbg !8204

; <label>:729:                                    ; preds = %728, %710, %682, %363
  br label %730, !dbg !8205, !llvm.loop !8206

; <label>:730:                                    ; preds = %729
  %731 = load i64, i64* %21, align 8, !dbg !8207
  %732 = load i64, i64* %12, align 8, !dbg !8207
  %733 = icmp ult i64 %731, %732, !dbg !8207
  br i1 %733, label %734, label %739, !dbg !8210

; <label>:734:                                    ; preds = %730
  %735 = load i8, i8* %27, align 1, !dbg !8207
  %736 = load i8*, i8** %11, align 8, !dbg !8207
  %737 = load i64, i64* %21, align 8, !dbg !8207
  %738 = getelementptr inbounds i8, i8* %736, i64 %737, !dbg !8207
  store i8 %735, i8* %738, align 1, !dbg !8207
  br label %739, !dbg !8207

; <label>:739:                                    ; preds = %734, %730
  %740 = load i64, i64* %21, align 8, !dbg !8210
  %741 = add i64 %740, 1, !dbg !8210
  store i64 %741, i64* %21, align 8, !dbg !8210
  br label %742, !dbg !8210

; <label>:742:                                    ; preds = %739
  br label %743, !dbg !8211

; <label>:743:                                    ; preds = %742, %247
  %744 = load i64, i64* %20, align 8, !dbg !8212
  %745 = add i64 %744, 1, !dbg !8212
  store i64 %745, i64* %20, align 8, !dbg !8212
  br label %125, !dbg !8213, !llvm.loop !8214

; <label>:746:                                    ; preds = %141
  %747 = load i64, i64* %21, align 8, !dbg !8216
  %748 = icmp eq i64 %747, 0, !dbg !8218
  br i1 %748, label %749, label %756, !dbg !8219

; <label>:749:                                    ; preds = %746
  %750 = load i32, i32* %15, align 4, !dbg !8220
  %751 = icmp eq i32 %750, 2, !dbg !8221
  br i1 %751, label %752, label %756, !dbg !8222

; <label>:752:                                    ; preds = %749
  %753 = load i8, i8* %26, align 1, !dbg !8223
  %754 = trunc i8 %753 to i1, !dbg !8223
  br i1 %754, label %755, label %756, !dbg !8224

; <label>:755:                                    ; preds = %752
  br label %796, !dbg !8225

; <label>:756:                                    ; preds = %752, %749, %746
  %757 = load i8*, i8** %22, align 8, !dbg !8226
  %758 = icmp ne i8* %757, null, !dbg !8226
  br i1 %758, label %759, label %786, !dbg !8228

; <label>:759:                                    ; preds = %756
  %760 = load i8, i8* %26, align 1, !dbg !8229
  %761 = trunc i8 %760 to i1, !dbg !8229
  br i1 %761, label %786, label %762, !dbg !8230

; <label>:762:                                    ; preds = %759
  br label %763, !dbg !8231

; <label>:763:                                    ; preds = %782, %762
  %764 = load i8*, i8** %22, align 8, !dbg !8232
  %765 = load i8, i8* %764, align 1, !dbg !8235
  %766 = icmp ne i8 %765, 0, !dbg !8236
  br i1 %766, label %767, label %785, !dbg !8236

; <label>:767:                                    ; preds = %763
  br label %768, !dbg !8237, !llvm.loop !8238

; <label>:768:                                    ; preds = %767
  %769 = load i64, i64* %21, align 8, !dbg !8239
  %770 = load i64, i64* %12, align 8, !dbg !8239
  %771 = icmp ult i64 %769, %770, !dbg !8239
  br i1 %771, label %772, label %778, !dbg !8242

; <label>:772:                                    ; preds = %768
  %773 = load i8*, i8** %22, align 8, !dbg !8239
  %774 = load i8, i8* %773, align 1, !dbg !8239
  %775 = load i8*, i8** %11, align 8, !dbg !8239
  %776 = load i64, i64* %21, align 8, !dbg !8239
  %777 = getelementptr inbounds i8, i8* %775, i64 %776, !dbg !8239
  store i8 %774, i8* %777, align 1, !dbg !8239
  br label %778, !dbg !8239

; <label>:778:                                    ; preds = %772, %768
  %779 = load i64, i64* %21, align 8, !dbg !8242
  %780 = add i64 %779, 1, !dbg !8242
  store i64 %780, i64* %21, align 8, !dbg !8242
  br label %781, !dbg !8242

; <label>:781:                                    ; preds = %778
  br label %782, !dbg !8242

; <label>:782:                                    ; preds = %781
  %783 = load i8*, i8** %22, align 8, !dbg !8243
  %784 = getelementptr inbounds i8, i8* %783, i32 1, !dbg !8243
  store i8* %784, i8** %22, align 8, !dbg !8243
  br label %763, !dbg !8244, !llvm.loop !8245

; <label>:785:                                    ; preds = %763
  br label %786, !dbg !8246

; <label>:786:                                    ; preds = %785, %759, %756
  %787 = load i64, i64* %21, align 8, !dbg !8247
  %788 = load i64, i64* %12, align 8, !dbg !8249
  %789 = icmp ult i64 %787, %788, !dbg !8250
  br i1 %789, label %790, label %794, !dbg !8251

; <label>:790:                                    ; preds = %786
  %791 = load i8*, i8** %11, align 8, !dbg !8252
  %792 = load i64, i64* %21, align 8, !dbg !8253
  %793 = getelementptr inbounds i8, i8* %791, i64 %792, !dbg !8252
  store i8 0, i8* %793, align 1, !dbg !8254
  br label %794, !dbg !8252

; <label>:794:                                    ; preds = %790, %786
  %795 = load i64, i64* %21, align 8, !dbg !8255
  store i64 %795, i64* %10, align 8, !dbg !8256
  br label %807, !dbg !8256

; <label>:796:                                    ; preds = %755, %715, %586, %540, %412, %404, %371, %284, %255, %183, %168
  %797 = load i8*, i8** %11, align 8, !dbg !8257
  %798 = load i64, i64* %12, align 8, !dbg !8258
  %799 = load i8*, i8** %13, align 8, !dbg !8259
  %800 = load i64, i64* %14, align 8, !dbg !8260
  %801 = load i32, i32* %15, align 4, !dbg !8261
  %802 = load i32, i32* %16, align 4, !dbg !8262
  %803 = and i32 %802, -3, !dbg !8263
  %804 = load i8*, i8** %18, align 8, !dbg !8264
  %805 = load i8*, i8** %19, align 8, !dbg !8265
  %806 = call i64 @quotearg_buffer_restyled(i8* %797, i64 %798, i8* %799, i64 %800, i32 %801, i32 %803, i32* null, i8* %804, i8* %805), !dbg !8266
  store i64 %806, i64* %10, align 8, !dbg !8267
  br label %807, !dbg !8267

; <label>:807:                                    ; preds = %796, %794
  %808 = load i64, i64* %10, align 8, !dbg !8268
  ret i64 %808, !dbg !8268
}

; Function Attrs: nounwind
declare i64 @__ctype_get_mb_cur_max() #5

; Function Attrs: noinline nounwind uwtable
define internal i8* @gettext_quote(i8*, i32) #3 !dbg !8269 {
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i8*, align 8
  store i8* %0, i8** %3, align 8
  call void @llvm.dbg.declare(metadata i8** %3, metadata !8272, metadata !DIExpression()), !dbg !8273
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !8274, metadata !DIExpression()), !dbg !8275
  call void @llvm.dbg.declare(metadata i8** %5, metadata !8276, metadata !DIExpression()), !dbg !8277
  %6 = load i8*, i8** %3, align 8, !dbg !8278
  store i8* %6, i8** %5, align 8, !dbg !8277
  %7 = load i8*, i8** %5, align 8, !dbg !8279
  %8 = load i8*, i8** %3, align 8, !dbg !8281
  %9 = icmp eq i8* %7, %8, !dbg !8282
  br i1 %9, label %10, label %14, !dbg !8283

; <label>:10:                                     ; preds = %2
  %11 = load i32, i32* %4, align 4, !dbg !8284
  %12 = icmp eq i32 %11, 7, !dbg !8285
  br i1 %12, label %13, label %14, !dbg !8286

; <label>:13:                                     ; preds = %10
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8.161, i32 0, i32 0), i8** %5, align 8, !dbg !8287
  br label %14, !dbg !8288

; <label>:14:                                     ; preds = %13, %10, %2
  %15 = load i8*, i8** %5, align 8, !dbg !8289
  ret i8* %15, !dbg !8290
}

; Function Attrs: nounwind readonly
declare i32 @memcmp(i8*, i8*, i64) #6

; Function Attrs: nounwind readnone
declare i16** @__ctype_b_loc() #7

; Function Attrs: nounwind
declare i64 @mbrtowc(i32*, i8*, i64, %struct.__mbstate_t*) #5

; Function Attrs: nounwind
declare i32 @iswprint(i32) #5

; Function Attrs: nounwind readonly
declare i32 @mbsinit(%struct.__mbstate_t*) #6

; Function Attrs: noinline nounwind uwtable
define i8* @quotearg_alloc(i8*, i64, %struct.quoting_options*) #3 !dbg !8291 {
  %4 = alloca i8*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %struct.quoting_options*, align 8
  store i8* %0, i8** %4, align 8
  call void @llvm.dbg.declare(metadata i8** %4, metadata !8294, metadata !DIExpression()), !dbg !8295
  store i64 %1, i64* %5, align 8
  call void @llvm.dbg.declare(metadata i64* %5, metadata !8296, metadata !DIExpression()), !dbg !8297
  store %struct.quoting_options* %2, %struct.quoting_options** %6, align 8
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %6, metadata !8298, metadata !DIExpression()), !dbg !8299
  %7 = load i8*, i8** %4, align 8, !dbg !8300
  %8 = load i64, i64* %5, align 8, !dbg !8301
  %9 = load %struct.quoting_options*, %struct.quoting_options** %6, align 8, !dbg !8302
  %10 = call i8* @quotearg_alloc_mem(i8* %7, i64 %8, i64* null, %struct.quoting_options* %9), !dbg !8303
  ret i8* %10, !dbg !8304
}

; Function Attrs: noinline nounwind uwtable
define i8* @quotearg_alloc_mem(i8*, i64, i64*, %struct.quoting_options*) #3 !dbg !8305 {
  %5 = alloca i8*, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64*, align 8
  %8 = alloca %struct.quoting_options*, align 8
  %9 = alloca %struct.quoting_options*, align 8
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i64, align 8
  %13 = alloca i8*, align 8
  store i8* %0, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !8308, metadata !DIExpression()), !dbg !8309
  store i64 %1, i64* %6, align 8
  call void @llvm.dbg.declare(metadata i64* %6, metadata !8310, metadata !DIExpression()), !dbg !8311
  store i64* %2, i64** %7, align 8
  call void @llvm.dbg.declare(metadata i64** %7, metadata !8312, metadata !DIExpression()), !dbg !8313
  store %struct.quoting_options* %3, %struct.quoting_options** %8, align 8
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %8, metadata !8314, metadata !DIExpression()), !dbg !8315
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %9, metadata !8316, metadata !DIExpression()), !dbg !8317
  %14 = load %struct.quoting_options*, %struct.quoting_options** %8, align 8, !dbg !8318
  %15 = icmp ne %struct.quoting_options* %14, null, !dbg !8318
  br i1 %15, label %16, label %18, !dbg !8318

; <label>:16:                                     ; preds = %4
  %17 = load %struct.quoting_options*, %struct.quoting_options** %8, align 8, !dbg !8319
  br label %19, !dbg !8318

; <label>:18:                                     ; preds = %4
  br label %19, !dbg !8318

; <label>:19:                                     ; preds = %18, %16
  %20 = phi %struct.quoting_options* [ %17, %16 ], [ @default_quoting_options, %18 ], !dbg !8318
  store %struct.quoting_options* %20, %struct.quoting_options** %9, align 8, !dbg !8317
  call void @llvm.dbg.declare(metadata i32* %10, metadata !8320, metadata !DIExpression()), !dbg !8321
  %21 = call i32* @__errno_location() #14, !dbg !8322
  %22 = load i32, i32* %21, align 4, !dbg !8322
  store i32 %22, i32* %10, align 4, !dbg !8321
  call void @llvm.dbg.declare(metadata i32* %11, metadata !8323, metadata !DIExpression()), !dbg !8324
  %23 = load %struct.quoting_options*, %struct.quoting_options** %9, align 8, !dbg !8325
  %24 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %23, i32 0, i32 1, !dbg !8326
  %25 = load i32, i32* %24, align 4, !dbg !8326
  %26 = load i64*, i64** %7, align 8, !dbg !8327
  %27 = icmp ne i64* %26, null, !dbg !8327
  %28 = zext i1 %27 to i64, !dbg !8327
  %29 = select i1 %27, i32 0, i32 1, !dbg !8327
  %30 = or i32 %25, %29, !dbg !8328
  store i32 %30, i32* %11, align 4, !dbg !8324
  call void @llvm.dbg.declare(metadata i64* %12, metadata !8329, metadata !DIExpression()), !dbg !8330
  %31 = load i8*, i8** %5, align 8, !dbg !8331
  %32 = load i64, i64* %6, align 8, !dbg !8332
  %33 = load %struct.quoting_options*, %struct.quoting_options** %9, align 8, !dbg !8333
  %34 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %33, i32 0, i32 0, !dbg !8334
  %35 = load i32, i32* %34, align 8, !dbg !8334
  %36 = load i32, i32* %11, align 4, !dbg !8335
  %37 = load %struct.quoting_options*, %struct.quoting_options** %9, align 8, !dbg !8336
  %38 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %37, i32 0, i32 2, !dbg !8337
  %39 = getelementptr inbounds [8 x i32], [8 x i32]* %38, i32 0, i32 0, !dbg !8336
  %40 = load %struct.quoting_options*, %struct.quoting_options** %9, align 8, !dbg !8338
  %41 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %40, i32 0, i32 3, !dbg !8339
  %42 = load i8*, i8** %41, align 8, !dbg !8339
  %43 = load %struct.quoting_options*, %struct.quoting_options** %9, align 8, !dbg !8340
  %44 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %43, i32 0, i32 4, !dbg !8341
  %45 = load i8*, i8** %44, align 8, !dbg !8341
  %46 = call i64 @quotearg_buffer_restyled(i8* null, i64 0, i8* %31, i64 %32, i32 %35, i32 %36, i32* %39, i8* %42, i8* %45), !dbg !8342
  %47 = add i64 %46, 1, !dbg !8343
  store i64 %47, i64* %12, align 8, !dbg !8330
  call void @llvm.dbg.declare(metadata i8** %13, metadata !8344, metadata !DIExpression()), !dbg !8345
  %48 = load i64, i64* %12, align 8, !dbg !8346
  %49 = call noalias i8* @xcharalloc(i64 %48), !dbg !8347
  store i8* %49, i8** %13, align 8, !dbg !8345
  %50 = load i8*, i8** %13, align 8, !dbg !8348
  %51 = load i64, i64* %12, align 8, !dbg !8349
  %52 = load i8*, i8** %5, align 8, !dbg !8350
  %53 = load i64, i64* %6, align 8, !dbg !8351
  %54 = load %struct.quoting_options*, %struct.quoting_options** %9, align 8, !dbg !8352
  %55 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %54, i32 0, i32 0, !dbg !8353
  %56 = load i32, i32* %55, align 8, !dbg !8353
  %57 = load i32, i32* %11, align 4, !dbg !8354
  %58 = load %struct.quoting_options*, %struct.quoting_options** %9, align 8, !dbg !8355
  %59 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %58, i32 0, i32 2, !dbg !8356
  %60 = getelementptr inbounds [8 x i32], [8 x i32]* %59, i32 0, i32 0, !dbg !8355
  %61 = load %struct.quoting_options*, %struct.quoting_options** %9, align 8, !dbg !8357
  %62 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %61, i32 0, i32 3, !dbg !8358
  %63 = load i8*, i8** %62, align 8, !dbg !8358
  %64 = load %struct.quoting_options*, %struct.quoting_options** %9, align 8, !dbg !8359
  %65 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %64, i32 0, i32 4, !dbg !8360
  %66 = load i8*, i8** %65, align 8, !dbg !8360
  %67 = call i64 @quotearg_buffer_restyled(i8* %50, i64 %51, i8* %52, i64 %53, i32 %56, i32 %57, i32* %60, i8* %63, i8* %66), !dbg !8361
  %68 = load i32, i32* %10, align 4, !dbg !8362
  %69 = call i32* @__errno_location() #14, !dbg !8363
  store i32 %68, i32* %69, align 4, !dbg !8364
  %70 = load i64*, i64** %7, align 8, !dbg !8365
  %71 = icmp ne i64* %70, null, !dbg !8365
  br i1 %71, label %72, label %76, !dbg !8367

; <label>:72:                                     ; preds = %19
  %73 = load i64, i64* %12, align 8, !dbg !8368
  %74 = sub i64 %73, 1, !dbg !8369
  %75 = load i64*, i64** %7, align 8, !dbg !8370
  store i64 %74, i64* %75, align 8, !dbg !8371
  br label %76, !dbg !8372

; <label>:76:                                     ; preds = %72, %19
  %77 = load i8*, i8** %13, align 8, !dbg !8373
  ret i8* %77, !dbg !8374
}

; Function Attrs: noinline nounwind uwtable
define void @quotearg_free() #3 !dbg !8375 {
  %1 = alloca %struct.slotvec*, align 8
  %2 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata %struct.slotvec** %1, metadata !8376, metadata !DIExpression()), !dbg !8377
  %3 = load %struct.slotvec*, %struct.slotvec** @slotvec, align 8, !dbg !8378
  store %struct.slotvec* %3, %struct.slotvec** %1, align 8, !dbg !8377
  call void @llvm.dbg.declare(metadata i32* %2, metadata !8379, metadata !DIExpression()), !dbg !8380
  store i32 1, i32* %2, align 4, !dbg !8381
  br label %4, !dbg !8383

; <label>:4:                                      ; preds = %15, %0
  %5 = load i32, i32* %2, align 4, !dbg !8384
  %6 = load i32, i32* @nslots, align 4, !dbg !8386
  %7 = icmp ult i32 %5, %6, !dbg !8387
  br i1 %7, label %8, label %18, !dbg !8388

; <label>:8:                                      ; preds = %4
  %9 = load %struct.slotvec*, %struct.slotvec** %1, align 8, !dbg !8389
  %10 = load i32, i32* %2, align 4, !dbg !8390
  %11 = zext i32 %10 to i64, !dbg !8389
  %12 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %9, i64 %11, !dbg !8389
  %13 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %12, i32 0, i32 1, !dbg !8391
  %14 = load i8*, i8** %13, align 8, !dbg !8391
  call void @free(i8* %14) #8, !dbg !8392
  br label %15, !dbg !8392

; <label>:15:                                     ; preds = %8
  %16 = load i32, i32* %2, align 4, !dbg !8393
  %17 = add i32 %16, 1, !dbg !8393
  store i32 %17, i32* %2, align 4, !dbg !8393
  br label %4, !dbg !8394, !llvm.loop !8395

; <label>:18:                                     ; preds = %4
  %19 = load %struct.slotvec*, %struct.slotvec** %1, align 8, !dbg !8397
  %20 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %19, i64 0, !dbg !8397
  %21 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %20, i32 0, i32 1, !dbg !8399
  %22 = load i8*, i8** %21, align 8, !dbg !8399
  %23 = icmp ne i8* %22, getelementptr inbounds ([256 x i8], [256 x i8]* @slot0, i32 0, i32 0), !dbg !8400
  br i1 %23, label %24, label %29, !dbg !8401

; <label>:24:                                     ; preds = %18
  %25 = load %struct.slotvec*, %struct.slotvec** %1, align 8, !dbg !8402
  %26 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %25, i64 0, !dbg !8402
  %27 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %26, i32 0, i32 1, !dbg !8404
  %28 = load i8*, i8** %27, align 8, !dbg !8404
  call void @free(i8* %28) #8, !dbg !8405
  store i64 256, i64* getelementptr inbounds (%struct.slotvec, %struct.slotvec* @slotvec0, i32 0, i32 0), align 8, !dbg !8406
  store i8* getelementptr inbounds ([256 x i8], [256 x i8]* @slot0, i32 0, i32 0), i8** getelementptr inbounds (%struct.slotvec, %struct.slotvec* @slotvec0, i32 0, i32 1), align 8, !dbg !8407
  br label %29, !dbg !8408

; <label>:29:                                     ; preds = %24, %18
  %30 = load %struct.slotvec*, %struct.slotvec** %1, align 8, !dbg !8409
  %31 = icmp ne %struct.slotvec* %30, @slotvec0, !dbg !8411
  br i1 %31, label %32, label %35, !dbg !8412

; <label>:32:                                     ; preds = %29
  %33 = load %struct.slotvec*, %struct.slotvec** %1, align 8, !dbg !8413
  %34 = bitcast %struct.slotvec* %33 to i8*, !dbg !8413
  call void @free(i8* %34) #8, !dbg !8415
  store %struct.slotvec* @slotvec0, %struct.slotvec** @slotvec, align 8, !dbg !8416
  br label %35, !dbg !8417

; <label>:35:                                     ; preds = %32, %29
  store i32 1, i32* @nslots, align 4, !dbg !8418
  ret void, !dbg !8419
}

; Function Attrs: noinline nounwind uwtable
define i8* @quotearg_n(i32, i8*) #3 !dbg !8420 {
  %3 = alloca i32, align 4
  %4 = alloca i8*, align 8
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !8423, metadata !DIExpression()), !dbg !8424
  store i8* %1, i8** %4, align 8
  call void @llvm.dbg.declare(metadata i8** %4, metadata !8425, metadata !DIExpression()), !dbg !8426
  %5 = load i32, i32* %3, align 4, !dbg !8427
  %6 = load i8*, i8** %4, align 8, !dbg !8428
  %7 = call i8* @quotearg_n_options(i32 %5, i8* %6, i64 -1, %struct.quoting_options* @default_quoting_options), !dbg !8429
  ret i8* %7, !dbg !8430
}

; Function Attrs: noinline nounwind uwtable
define internal i8* @quotearg_n_options(i32, i8*, i64, %struct.quoting_options*) #3 !dbg !8431 {
  %5 = alloca i32, align 4
  %6 = alloca i8*, align 8
  %7 = alloca i64, align 8
  %8 = alloca %struct.quoting_options*, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca %struct.slotvec*, align 8
  %12 = alloca i64, align 8
  %13 = alloca i8, align 1
  %14 = alloca i64, align 8
  %15 = alloca i8*, align 8
  %16 = alloca i32, align 4
  %17 = alloca i64, align 8
  store i32 %0, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !8434, metadata !DIExpression()), !dbg !8435
  store i8* %1, i8** %6, align 8
  call void @llvm.dbg.declare(metadata i8** %6, metadata !8436, metadata !DIExpression()), !dbg !8437
  store i64 %2, i64* %7, align 8
  call void @llvm.dbg.declare(metadata i64* %7, metadata !8438, metadata !DIExpression()), !dbg !8439
  store %struct.quoting_options* %3, %struct.quoting_options** %8, align 8
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %8, metadata !8440, metadata !DIExpression()), !dbg !8441
  call void @llvm.dbg.declare(metadata i32* %9, metadata !8442, metadata !DIExpression()), !dbg !8443
  %18 = call i32* @__errno_location() #14, !dbg !8444
  %19 = load i32, i32* %18, align 4, !dbg !8444
  store i32 %19, i32* %9, align 4, !dbg !8443
  call void @llvm.dbg.declare(metadata i32* %10, metadata !8445, metadata !DIExpression()), !dbg !8446
  %20 = load i32, i32* %5, align 4, !dbg !8447
  store i32 %20, i32* %10, align 4, !dbg !8446
  call void @llvm.dbg.declare(metadata %struct.slotvec** %11, metadata !8448, metadata !DIExpression()), !dbg !8449
  %21 = load %struct.slotvec*, %struct.slotvec** @slotvec, align 8, !dbg !8450
  store %struct.slotvec* %21, %struct.slotvec** %11, align 8, !dbg !8449
  %22 = load i32, i32* %5, align 4, !dbg !8451
  %23 = icmp slt i32 %22, 0, !dbg !8453
  br i1 %23, label %24, label %25, !dbg !8454

; <label>:24:                                     ; preds = %4
  call void @abort() #11, !dbg !8455
  unreachable, !dbg !8455

; <label>:25:                                     ; preds = %4
  %26 = load i32, i32* @nslots, align 4, !dbg !8456
  %27 = load i32, i32* %10, align 4, !dbg !8458
  %28 = icmp ule i32 %26, %27, !dbg !8459
  br i1 %28, label %29, label %70, !dbg !8460

; <label>:29:                                     ; preds = %25
  call void @llvm.dbg.declare(metadata i64* %12, metadata !8461, metadata !DIExpression()), !dbg !8463
  %30 = load i32, i32* %10, align 4, !dbg !8464
  %31 = add i32 %30, 1, !dbg !8465
  %32 = zext i32 %31 to i64, !dbg !8464
  store i64 %32, i64* %12, align 8, !dbg !8463
  call void @llvm.dbg.declare(metadata i8* %13, metadata !8466, metadata !DIExpression()), !dbg !8467
  %33 = load %struct.slotvec*, %struct.slotvec** %11, align 8, !dbg !8468
  %34 = icmp eq %struct.slotvec* %33, @slotvec0, !dbg !8469
  %35 = zext i1 %34 to i8, !dbg !8467
  store i8 %35, i8* %13, align 1, !dbg !8467
  %36 = load i64, i64* %12, align 8, !dbg !8470
  %37 = icmp ult i64 1152921504606846975, %36, !dbg !8470
  br i1 %37, label %38, label %39, !dbg !8472

; <label>:38:                                     ; preds = %29
  call void @xalloc_die() #13, !dbg !8473
  unreachable, !dbg !8473

; <label>:39:                                     ; preds = %29
  %40 = load i8, i8* %13, align 1, !dbg !8474
  %41 = trunc i8 %40 to i1, !dbg !8474
  br i1 %41, label %42, label %43, !dbg !8474

; <label>:42:                                     ; preds = %39
  br label %45, !dbg !8474

; <label>:43:                                     ; preds = %39
  %44 = load %struct.slotvec*, %struct.slotvec** %11, align 8, !dbg !8475
  br label %45, !dbg !8474

; <label>:45:                                     ; preds = %43, %42
  %46 = phi %struct.slotvec* [ null, %42 ], [ %44, %43 ], !dbg !8474
  %47 = bitcast %struct.slotvec* %46 to i8*, !dbg !8474
  %48 = load i64, i64* %12, align 8, !dbg !8476
  %49 = mul i64 %48, 16, !dbg !8477
  %50 = call i8* @xrealloc(i8* %47, i64 %49), !dbg !8478
  %51 = bitcast i8* %50 to %struct.slotvec*, !dbg !8478
  store %struct.slotvec* %51, %struct.slotvec** %11, align 8, !dbg !8479
  store %struct.slotvec* %51, %struct.slotvec** @slotvec, align 8, !dbg !8480
  %52 = load i8, i8* %13, align 1, !dbg !8481
  %53 = trunc i8 %52 to i1, !dbg !8481
  br i1 %53, label %54, label %57, !dbg !8483

; <label>:54:                                     ; preds = %45
  %55 = load %struct.slotvec*, %struct.slotvec** %11, align 8, !dbg !8484
  %56 = bitcast %struct.slotvec* %55 to i8*, !dbg !8485
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %56, i8* bitcast (%struct.slotvec* @slotvec0 to i8*), i64 16, i32 8, i1 false), !dbg !8485
  br label %57, !dbg !8486

; <label>:57:                                     ; preds = %54, %45
  %58 = load %struct.slotvec*, %struct.slotvec** %11, align 8, !dbg !8487
  %59 = load i32, i32* @nslots, align 4, !dbg !8488
  %60 = zext i32 %59 to i64, !dbg !8489
  %61 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %58, i64 %60, !dbg !8489
  %62 = bitcast %struct.slotvec* %61 to i8*, !dbg !8490
  %63 = load i64, i64* %12, align 8, !dbg !8491
  %64 = load i32, i32* @nslots, align 4, !dbg !8492
  %65 = zext i32 %64 to i64, !dbg !8492
  %66 = sub i64 %63, %65, !dbg !8493
  %67 = mul i64 %66, 16, !dbg !8494
  call void @llvm.memset.p0i8.i64(i8* %62, i8 0, i64 %67, i32 8, i1 false), !dbg !8490
  %68 = load i64, i64* %12, align 8, !dbg !8495
  %69 = trunc i64 %68 to i32, !dbg !8495
  store i32 %69, i32* @nslots, align 4, !dbg !8496
  br label %70, !dbg !8497

; <label>:70:                                     ; preds = %57, %25
  call void @llvm.dbg.declare(metadata i64* %14, metadata !8498, metadata !DIExpression()), !dbg !8500
  %71 = load %struct.slotvec*, %struct.slotvec** %11, align 8, !dbg !8501
  %72 = load i32, i32* %5, align 4, !dbg !8502
  %73 = sext i32 %72 to i64, !dbg !8501
  %74 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %71, i64 %73, !dbg !8501
  %75 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %74, i32 0, i32 0, !dbg !8503
  %76 = load i64, i64* %75, align 8, !dbg !8503
  store i64 %76, i64* %14, align 8, !dbg !8500
  call void @llvm.dbg.declare(metadata i8** %15, metadata !8504, metadata !DIExpression()), !dbg !8505
  %77 = load %struct.slotvec*, %struct.slotvec** %11, align 8, !dbg !8506
  %78 = load i32, i32* %5, align 4, !dbg !8507
  %79 = sext i32 %78 to i64, !dbg !8506
  %80 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %77, i64 %79, !dbg !8506
  %81 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %80, i32 0, i32 1, !dbg !8508
  %82 = load i8*, i8** %81, align 8, !dbg !8508
  store i8* %82, i8** %15, align 8, !dbg !8505
  call void @llvm.dbg.declare(metadata i32* %16, metadata !8509, metadata !DIExpression()), !dbg !8510
  %83 = load %struct.quoting_options*, %struct.quoting_options** %8, align 8, !dbg !8511
  %84 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %83, i32 0, i32 1, !dbg !8512
  %85 = load i32, i32* %84, align 4, !dbg !8512
  %86 = or i32 %85, 1, !dbg !8513
  store i32 %86, i32* %16, align 4, !dbg !8510
  call void @llvm.dbg.declare(metadata i64* %17, metadata !8514, metadata !DIExpression()), !dbg !8515
  %87 = load i8*, i8** %15, align 8, !dbg !8516
  %88 = load i64, i64* %14, align 8, !dbg !8517
  %89 = load i8*, i8** %6, align 8, !dbg !8518
  %90 = load i64, i64* %7, align 8, !dbg !8519
  %91 = load %struct.quoting_options*, %struct.quoting_options** %8, align 8, !dbg !8520
  %92 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %91, i32 0, i32 0, !dbg !8521
  %93 = load i32, i32* %92, align 8, !dbg !8521
  %94 = load i32, i32* %16, align 4, !dbg !8522
  %95 = load %struct.quoting_options*, %struct.quoting_options** %8, align 8, !dbg !8523
  %96 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %95, i32 0, i32 2, !dbg !8524
  %97 = getelementptr inbounds [8 x i32], [8 x i32]* %96, i32 0, i32 0, !dbg !8523
  %98 = load %struct.quoting_options*, %struct.quoting_options** %8, align 8, !dbg !8525
  %99 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %98, i32 0, i32 3, !dbg !8526
  %100 = load i8*, i8** %99, align 8, !dbg !8526
  %101 = load %struct.quoting_options*, %struct.quoting_options** %8, align 8, !dbg !8527
  %102 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %101, i32 0, i32 4, !dbg !8528
  %103 = load i8*, i8** %102, align 8, !dbg !8528
  %104 = call i64 @quotearg_buffer_restyled(i8* %87, i64 %88, i8* %89, i64 %90, i32 %93, i32 %94, i32* %97, i8* %100, i8* %103), !dbg !8529
  store i64 %104, i64* %17, align 8, !dbg !8515
  %105 = load i64, i64* %14, align 8, !dbg !8530
  %106 = load i64, i64* %17, align 8, !dbg !8532
  %107 = icmp ule i64 %105, %106, !dbg !8533
  br i1 %107, label %108, label %146, !dbg !8534

; <label>:108:                                    ; preds = %70
  %109 = load i64, i64* %17, align 8, !dbg !8535
  %110 = add i64 %109, 1, !dbg !8537
  store i64 %110, i64* %14, align 8, !dbg !8538
  %111 = load %struct.slotvec*, %struct.slotvec** %11, align 8, !dbg !8539
  %112 = load i32, i32* %5, align 4, !dbg !8540
  %113 = sext i32 %112 to i64, !dbg !8539
  %114 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %111, i64 %113, !dbg !8539
  %115 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %114, i32 0, i32 0, !dbg !8541
  store i64 %110, i64* %115, align 8, !dbg !8542
  %116 = load i8*, i8** %15, align 8, !dbg !8543
  %117 = icmp ne i8* %116, getelementptr inbounds ([256 x i8], [256 x i8]* @slot0, i32 0, i32 0), !dbg !8545
  br i1 %117, label %118, label %120, !dbg !8546

; <label>:118:                                    ; preds = %108
  %119 = load i8*, i8** %15, align 8, !dbg !8547
  call void @free(i8* %119) #8, !dbg !8548
  br label %120, !dbg !8548

; <label>:120:                                    ; preds = %118, %108
  %121 = load i64, i64* %14, align 8, !dbg !8549
  %122 = call noalias i8* @xcharalloc(i64 %121), !dbg !8550
  store i8* %122, i8** %15, align 8, !dbg !8551
  %123 = load %struct.slotvec*, %struct.slotvec** %11, align 8, !dbg !8552
  %124 = load i32, i32* %5, align 4, !dbg !8553
  %125 = sext i32 %124 to i64, !dbg !8552
  %126 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %123, i64 %125, !dbg !8552
  %127 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %126, i32 0, i32 1, !dbg !8554
  store i8* %122, i8** %127, align 8, !dbg !8555
  %128 = load i8*, i8** %15, align 8, !dbg !8556
  %129 = load i64, i64* %14, align 8, !dbg !8557
  %130 = load i8*, i8** %6, align 8, !dbg !8558
  %131 = load i64, i64* %7, align 8, !dbg !8559
  %132 = load %struct.quoting_options*, %struct.quoting_options** %8, align 8, !dbg !8560
  %133 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %132, i32 0, i32 0, !dbg !8561
  %134 = load i32, i32* %133, align 8, !dbg !8561
  %135 = load i32, i32* %16, align 4, !dbg !8562
  %136 = load %struct.quoting_options*, %struct.quoting_options** %8, align 8, !dbg !8563
  %137 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %136, i32 0, i32 2, !dbg !8564
  %138 = getelementptr inbounds [8 x i32], [8 x i32]* %137, i32 0, i32 0, !dbg !8563
  %139 = load %struct.quoting_options*, %struct.quoting_options** %8, align 8, !dbg !8565
  %140 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %139, i32 0, i32 3, !dbg !8566
  %141 = load i8*, i8** %140, align 8, !dbg !8566
  %142 = load %struct.quoting_options*, %struct.quoting_options** %8, align 8, !dbg !8567
  %143 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %142, i32 0, i32 4, !dbg !8568
  %144 = load i8*, i8** %143, align 8, !dbg !8568
  %145 = call i64 @quotearg_buffer_restyled(i8* %128, i64 %129, i8* %130, i64 %131, i32 %134, i32 %135, i32* %138, i8* %141, i8* %144), !dbg !8569
  br label %146, !dbg !8570

; <label>:146:                                    ; preds = %120, %70
  %147 = load i32, i32* %9, align 4, !dbg !8571
  %148 = call i32* @__errno_location() #14, !dbg !8572
  store i32 %147, i32* %148, align 4, !dbg !8573
  %149 = load i8*, i8** %15, align 8, !dbg !8574
  ret i8* %149, !dbg !8575
}

; Function Attrs: noinline nounwind uwtable
define i8* @quotearg_n_mem(i32, i8*, i64) #3 !dbg !8576 {
  %4 = alloca i32, align 4
  %5 = alloca i8*, align 8
  %6 = alloca i64, align 8
  store i32 %0, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !8579, metadata !DIExpression()), !dbg !8580
  store i8* %1, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !8581, metadata !DIExpression()), !dbg !8582
  store i64 %2, i64* %6, align 8
  call void @llvm.dbg.declare(metadata i64* %6, metadata !8583, metadata !DIExpression()), !dbg !8584
  %7 = load i32, i32* %4, align 4, !dbg !8585
  %8 = load i8*, i8** %5, align 8, !dbg !8586
  %9 = load i64, i64* %6, align 8, !dbg !8587
  %10 = call i8* @quotearg_n_options(i32 %7, i8* %8, i64 %9, %struct.quoting_options* @default_quoting_options), !dbg !8588
  ret i8* %10, !dbg !8589
}

; Function Attrs: noinline nounwind uwtable
define i8* @quotearg(i8*) #3 !dbg !8590 {
  %2 = alloca i8*, align 8
  store i8* %0, i8** %2, align 8
  call void @llvm.dbg.declare(metadata i8** %2, metadata !8591, metadata !DIExpression()), !dbg !8592
  %3 = load i8*, i8** %2, align 8, !dbg !8593
  %4 = call i8* @quotearg_n(i32 0, i8* %3), !dbg !8594
  ret i8* %4, !dbg !8595
}

; Function Attrs: noinline nounwind uwtable
define i8* @quotearg_mem(i8*, i64) #3 !dbg !8596 {
  %3 = alloca i8*, align 8
  %4 = alloca i64, align 8
  store i8* %0, i8** %3, align 8
  call void @llvm.dbg.declare(metadata i8** %3, metadata !8599, metadata !DIExpression()), !dbg !8600
  store i64 %1, i64* %4, align 8
  call void @llvm.dbg.declare(metadata i64* %4, metadata !8601, metadata !DIExpression()), !dbg !8602
  %5 = load i8*, i8** %3, align 8, !dbg !8603
  %6 = load i64, i64* %4, align 8, !dbg !8604
  %7 = call i8* @quotearg_n_mem(i32 0, i8* %5, i64 %6), !dbg !8605
  ret i8* %7, !dbg !8606
}

; Function Attrs: noinline nounwind uwtable
define i8* @quotearg_n_style(i32, i32, i8*) #3 !dbg !8607 {
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i8*, align 8
  %7 = alloca %struct.quoting_options, align 8
  store i32 %0, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !8610, metadata !DIExpression()), !dbg !8611
  store i32 %1, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !8612, metadata !DIExpression()), !dbg !8613
  store i8* %2, i8** %6, align 8
  call void @llvm.dbg.declare(metadata i8** %6, metadata !8614, metadata !DIExpression()), !dbg !8615
  call void @llvm.dbg.declare(metadata %struct.quoting_options* %7, metadata !8616, metadata !DIExpression()), !dbg !8617
  %8 = load i32, i32* %5, align 4, !dbg !8618
  call void @quoting_options_from_style(%struct.quoting_options* sret %7, i32 %8), !dbg !8619
  %9 = load i32, i32* %4, align 4, !dbg !8620
  %10 = load i8*, i8** %6, align 8, !dbg !8621
  %11 = call i8* @quotearg_n_options(i32 %9, i8* %10, i64 -1, %struct.quoting_options* %7), !dbg !8622
  ret i8* %11, !dbg !8623
}

; Function Attrs: noinline nounwind uwtable
define internal void @quoting_options_from_style(%struct.quoting_options* noalias sret, i32) #3 !dbg !8624 {
  %3 = alloca i32, align 4
  %4 = alloca %struct.quoting_options, align 8
  store i32 %1, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !8627, metadata !DIExpression()), !dbg !8628
  call void @llvm.dbg.declare(metadata %struct.quoting_options* %4, metadata !8629, metadata !DIExpression()), !dbg !8630
  %5 = load i32, i32* %3, align 4, !dbg !8631
  %6 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %4, i32 0, i32 0, !dbg !8632
  store i32 %5, i32* %6, align 8, !dbg !8633
  %7 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %4, i32 0, i32 1, !dbg !8634
  store i32 0, i32* %7, align 4, !dbg !8635
  %8 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %4, i32 0, i32 2, !dbg !8636
  %9 = getelementptr inbounds [8 x i32], [8 x i32]* %8, i32 0, i32 0, !dbg !8637
  %10 = bitcast i32* %9 to i8*, !dbg !8637
  call void @llvm.memset.p0i8.i64(i8* %10, i8 0, i64 32, i32 8, i1 false), !dbg !8637
  %11 = bitcast %struct.quoting_options* %0 to i8*, !dbg !8638
  %12 = bitcast %struct.quoting_options* %4 to i8*, !dbg !8638
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %11, i8* %12, i64 56, i32 8, i1 false), !dbg !8638
  ret void, !dbg !8639
}

; Function Attrs: noinline nounwind uwtable
define i8* @quotearg_n_style_mem(i32, i32, i8*, i64) #3 !dbg !8640 {
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i8*, align 8
  %8 = alloca i64, align 8
  %9 = alloca %struct.quoting_options, align 8
  store i32 %0, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !8643, metadata !DIExpression()), !dbg !8644
  store i32 %1, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !8645, metadata !DIExpression()), !dbg !8646
  store i8* %2, i8** %7, align 8
  call void @llvm.dbg.declare(metadata i8** %7, metadata !8647, metadata !DIExpression()), !dbg !8648
  store i64 %3, i64* %8, align 8
  call void @llvm.dbg.declare(metadata i64* %8, metadata !8649, metadata !DIExpression()), !dbg !8650
  call void @llvm.dbg.declare(metadata %struct.quoting_options* %9, metadata !8651, metadata !DIExpression()), !dbg !8652
  %10 = load i32, i32* %6, align 4, !dbg !8653
  call void @quoting_options_from_style(%struct.quoting_options* sret %9, i32 %10), !dbg !8654
  %11 = load i32, i32* %5, align 4, !dbg !8655
  %12 = load i8*, i8** %7, align 8, !dbg !8656
  %13 = load i64, i64* %8, align 8, !dbg !8657
  %14 = call i8* @quotearg_n_options(i32 %11, i8* %12, i64 %13, %struct.quoting_options* %9), !dbg !8658
  ret i8* %14, !dbg !8659
}

; Function Attrs: noinline nounwind uwtable
define i8* @quotearg_style(i32, i8*) #3 !dbg !8660 {
  %3 = alloca i32, align 4
  %4 = alloca i8*, align 8
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !8663, metadata !DIExpression()), !dbg !8664
  store i8* %1, i8** %4, align 8
  call void @llvm.dbg.declare(metadata i8** %4, metadata !8665, metadata !DIExpression()), !dbg !8666
  %5 = load i32, i32* %3, align 4, !dbg !8667
  %6 = load i8*, i8** %4, align 8, !dbg !8668
  %7 = call i8* @quotearg_n_style(i32 0, i32 %5, i8* %6), !dbg !8669
  ret i8* %7, !dbg !8670
}

; Function Attrs: noinline nounwind uwtable
define i8* @quotearg_style_mem(i32, i8*, i64) #3 !dbg !8671 {
  %4 = alloca i32, align 4
  %5 = alloca i8*, align 8
  %6 = alloca i64, align 8
  store i32 %0, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !8674, metadata !DIExpression()), !dbg !8675
  store i8* %1, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !8676, metadata !DIExpression()), !dbg !8677
  store i64 %2, i64* %6, align 8
  call void @llvm.dbg.declare(metadata i64* %6, metadata !8678, metadata !DIExpression()), !dbg !8679
  %7 = load i32, i32* %4, align 4, !dbg !8680
  %8 = load i8*, i8** %5, align 8, !dbg !8681
  %9 = load i64, i64* %6, align 8, !dbg !8682
  %10 = call i8* @quotearg_n_style_mem(i32 0, i32 %7, i8* %8, i64 %9), !dbg !8683
  ret i8* %10, !dbg !8684
}

; Function Attrs: noinline nounwind uwtable
define i8* @quotearg_char_mem(i8*, i64, i8 signext) #3 !dbg !8685 {
  %4 = alloca i8*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i8, align 1
  %7 = alloca %struct.quoting_options, align 8
  store i8* %0, i8** %4, align 8
  call void @llvm.dbg.declare(metadata i8** %4, metadata !8688, metadata !DIExpression()), !dbg !8689
  store i64 %1, i64* %5, align 8
  call void @llvm.dbg.declare(metadata i64* %5, metadata !8690, metadata !DIExpression()), !dbg !8691
  store i8 %2, i8* %6, align 1
  call void @llvm.dbg.declare(metadata i8* %6, metadata !8692, metadata !DIExpression()), !dbg !8693
  call void @llvm.dbg.declare(metadata %struct.quoting_options* %7, metadata !8694, metadata !DIExpression()), !dbg !8695
  %8 = bitcast %struct.quoting_options* %7 to i8*, !dbg !8696
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %8, i8* bitcast (%struct.quoting_options* @default_quoting_options to i8*), i64 56, i32 8, i1 false), !dbg !8696
  %9 = load i8, i8* %6, align 1, !dbg !8697
  %10 = call i32 @set_char_quoting(%struct.quoting_options* %7, i8 signext %9, i32 1), !dbg !8698
  %11 = load i8*, i8** %4, align 8, !dbg !8699
  %12 = load i64, i64* %5, align 8, !dbg !8700
  %13 = call i8* @quotearg_n_options(i32 0, i8* %11, i64 %12, %struct.quoting_options* %7), !dbg !8701
  ret i8* %13, !dbg !8702
}

; Function Attrs: noinline nounwind uwtable
define i8* @quotearg_char(i8*, i8 signext) #3 !dbg !8703 {
  %3 = alloca i8*, align 8
  %4 = alloca i8, align 1
  store i8* %0, i8** %3, align 8
  call void @llvm.dbg.declare(metadata i8** %3, metadata !8706, metadata !DIExpression()), !dbg !8707
  store i8 %1, i8* %4, align 1
  call void @llvm.dbg.declare(metadata i8* %4, metadata !8708, metadata !DIExpression()), !dbg !8709
  %5 = load i8*, i8** %3, align 8, !dbg !8710
  %6 = load i8, i8* %4, align 1, !dbg !8711
  %7 = call i8* @quotearg_char_mem(i8* %5, i64 -1, i8 signext %6), !dbg !8712
  ret i8* %7, !dbg !8713
}

; Function Attrs: noinline nounwind uwtable
define i8* @quotearg_colon(i8*) #3 !dbg !8714 {
  %2 = alloca i8*, align 8
  store i8* %0, i8** %2, align 8
  call void @llvm.dbg.declare(metadata i8** %2, metadata !8715, metadata !DIExpression()), !dbg !8716
  %3 = load i8*, i8** %2, align 8, !dbg !8717
  %4 = call i8* @quotearg_char(i8* %3, i8 signext 58), !dbg !8718
  ret i8* %4, !dbg !8719
}

; Function Attrs: noinline nounwind uwtable
define i8* @quotearg_colon_mem(i8*, i64) #3 !dbg !8720 {
  %3 = alloca i8*, align 8
  %4 = alloca i64, align 8
  store i8* %0, i8** %3, align 8
  call void @llvm.dbg.declare(metadata i8** %3, metadata !8721, metadata !DIExpression()), !dbg !8722
  store i64 %1, i64* %4, align 8
  call void @llvm.dbg.declare(metadata i64* %4, metadata !8723, metadata !DIExpression()), !dbg !8724
  %5 = load i8*, i8** %3, align 8, !dbg !8725
  %6 = load i64, i64* %4, align 8, !dbg !8726
  %7 = call i8* @quotearg_char_mem(i8* %5, i64 %6, i8 signext 58), !dbg !8727
  ret i8* %7, !dbg !8728
}

; Function Attrs: noinline nounwind uwtable
define i8* @quotearg_n_custom(i32, i8*, i8*, i8*) #3 !dbg !8729 {
  %5 = alloca i32, align 4
  %6 = alloca i8*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i8*, align 8
  store i32 %0, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !8732, metadata !DIExpression()), !dbg !8733
  store i8* %1, i8** %6, align 8
  call void @llvm.dbg.declare(metadata i8** %6, metadata !8734, metadata !DIExpression()), !dbg !8735
  store i8* %2, i8** %7, align 8
  call void @llvm.dbg.declare(metadata i8** %7, metadata !8736, metadata !DIExpression()), !dbg !8737
  store i8* %3, i8** %8, align 8
  call void @llvm.dbg.declare(metadata i8** %8, metadata !8738, metadata !DIExpression()), !dbg !8739
  %9 = load i32, i32* %5, align 4, !dbg !8740
  %10 = load i8*, i8** %6, align 8, !dbg !8741
  %11 = load i8*, i8** %7, align 8, !dbg !8742
  %12 = load i8*, i8** %8, align 8, !dbg !8743
  %13 = call i8* @quotearg_n_custom_mem(i32 %9, i8* %10, i8* %11, i8* %12, i64 -1), !dbg !8744
  ret i8* %13, !dbg !8745
}

; Function Attrs: noinline nounwind uwtable
define i8* @quotearg_n_custom_mem(i32, i8*, i8*, i8*, i64) #3 !dbg !8746 {
  %6 = alloca i32, align 4
  %7 = alloca i8*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i8*, align 8
  %10 = alloca i64, align 8
  %11 = alloca %struct.quoting_options, align 8
  store i32 %0, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !8749, metadata !DIExpression()), !dbg !8750
  store i8* %1, i8** %7, align 8
  call void @llvm.dbg.declare(metadata i8** %7, metadata !8751, metadata !DIExpression()), !dbg !8752
  store i8* %2, i8** %8, align 8
  call void @llvm.dbg.declare(metadata i8** %8, metadata !8753, metadata !DIExpression()), !dbg !8754
  store i8* %3, i8** %9, align 8
  call void @llvm.dbg.declare(metadata i8** %9, metadata !8755, metadata !DIExpression()), !dbg !8756
  store i64 %4, i64* %10, align 8
  call void @llvm.dbg.declare(metadata i64* %10, metadata !8757, metadata !DIExpression()), !dbg !8758
  call void @llvm.dbg.declare(metadata %struct.quoting_options* %11, metadata !8759, metadata !DIExpression()), !dbg !8760
  %12 = bitcast %struct.quoting_options* %11 to i8*, !dbg !8761
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %12, i8* bitcast (%struct.quoting_options* @default_quoting_options to i8*), i64 56, i32 8, i1 false), !dbg !8761
  %13 = load i8*, i8** %7, align 8, !dbg !8762
  %14 = load i8*, i8** %8, align 8, !dbg !8763
  call void @set_custom_quoting(%struct.quoting_options* %11, i8* %13, i8* %14), !dbg !8764
  %15 = load i32, i32* %6, align 4, !dbg !8765
  %16 = load i8*, i8** %9, align 8, !dbg !8766
  %17 = load i64, i64* %10, align 8, !dbg !8767
  %18 = call i8* @quotearg_n_options(i32 %15, i8* %16, i64 %17, %struct.quoting_options* %11), !dbg !8768
  ret i8* %18, !dbg !8769
}

; Function Attrs: noinline nounwind uwtable
define i8* @quotearg_custom(i8*, i8*, i8*) #3 !dbg !8770 {
  %4 = alloca i8*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  store i8* %0, i8** %4, align 8
  call void @llvm.dbg.declare(metadata i8** %4, metadata !8773, metadata !DIExpression()), !dbg !8774
  store i8* %1, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !8775, metadata !DIExpression()), !dbg !8776
  store i8* %2, i8** %6, align 8
  call void @llvm.dbg.declare(metadata i8** %6, metadata !8777, metadata !DIExpression()), !dbg !8778
  %7 = load i8*, i8** %4, align 8, !dbg !8779
  %8 = load i8*, i8** %5, align 8, !dbg !8780
  %9 = load i8*, i8** %6, align 8, !dbg !8781
  %10 = call i8* @quotearg_n_custom(i32 0, i8* %7, i8* %8, i8* %9), !dbg !8782
  ret i8* %10, !dbg !8783
}

; Function Attrs: noinline nounwind uwtable
define i8* @quotearg_custom_mem(i8*, i8*, i8*, i64) #3 !dbg !8784 {
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i64, align 8
  store i8* %0, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !8787, metadata !DIExpression()), !dbg !8788
  store i8* %1, i8** %6, align 8
  call void @llvm.dbg.declare(metadata i8** %6, metadata !8789, metadata !DIExpression()), !dbg !8790
  store i8* %2, i8** %7, align 8
  call void @llvm.dbg.declare(metadata i8** %7, metadata !8791, metadata !DIExpression()), !dbg !8792
  store i64 %3, i64* %8, align 8
  call void @llvm.dbg.declare(metadata i64* %8, metadata !8793, metadata !DIExpression()), !dbg !8794
  %9 = load i8*, i8** %5, align 8, !dbg !8795
  %10 = load i8*, i8** %6, align 8, !dbg !8796
  %11 = load i8*, i8** %7, align 8, !dbg !8797
  %12 = load i64, i64* %8, align 8, !dbg !8798
  %13 = call i8* @quotearg_n_custom_mem(i32 0, i8* %9, i8* %10, i8* %11, i64 %12), !dbg !8799
  ret i8* %13, !dbg !8800
}

; Function Attrs: noinline nounwind uwtable
define %struct.dev_ino* @get_root_dev_ino(%struct.dev_ino*) #3 !dbg !8801 {
  %2 = alloca %struct.dev_ino*, align 8
  %3 = alloca %struct.dev_ino*, align 8
  %4 = alloca %struct.stat, align 8
  store %struct.dev_ino* %0, %struct.dev_ino** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.dev_ino** %3, metadata !8809, metadata !DIExpression()), !dbg !8810
  call void @llvm.dbg.declare(metadata %struct.stat* %4, metadata !8811, metadata !DIExpression()), !dbg !8833
  %5 = call i32 @lstat(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.170, i32 0, i32 0), %struct.stat* %4) #8, !dbg !8834
  %6 = icmp ne i32 %5, 0, !dbg !8834
  br i1 %6, label %7, label %8, !dbg !8836

; <label>:7:                                      ; preds = %1
  store %struct.dev_ino* null, %struct.dev_ino** %2, align 8, !dbg !8837
  br label %18, !dbg !8837

; <label>:8:                                      ; preds = %1
  %9 = getelementptr inbounds %struct.stat, %struct.stat* %4, i32 0, i32 1, !dbg !8838
  %10 = load i64, i64* %9, align 8, !dbg !8838
  %11 = load %struct.dev_ino*, %struct.dev_ino** %3, align 8, !dbg !8839
  %12 = getelementptr inbounds %struct.dev_ino, %struct.dev_ino* %11, i32 0, i32 0, !dbg !8840
  store i64 %10, i64* %12, align 8, !dbg !8841
  %13 = getelementptr inbounds %struct.stat, %struct.stat* %4, i32 0, i32 0, !dbg !8842
  %14 = load i64, i64* %13, align 8, !dbg !8842
  %15 = load %struct.dev_ino*, %struct.dev_ino** %3, align 8, !dbg !8843
  %16 = getelementptr inbounds %struct.dev_ino, %struct.dev_ino* %15, i32 0, i32 1, !dbg !8844
  store i64 %14, i64* %16, align 8, !dbg !8845
  %17 = load %struct.dev_ino*, %struct.dev_ino** %3, align 8, !dbg !8846
  store %struct.dev_ino* %17, %struct.dev_ino** %2, align 8, !dbg !8847
  br label %18, !dbg !8847

; <label>:18:                                     ; preds = %8, %7
  %19 = load %struct.dev_ino*, %struct.dev_ino** %2, align 8, !dbg !8848
  ret %struct.dev_ino* %19, !dbg !8848
}

; Function Attrs: noinline nounwind uwtable
define i8* @umaxtostr(i64, i8*) #3 !dbg !8849 {
  %3 = alloca i64, align 8
  %4 = alloca i8*, align 8
  %5 = alloca i8*, align 8
  store i64 %0, i64* %3, align 8
  call void @llvm.dbg.declare(metadata i64* %3, metadata !8853, metadata !DIExpression()), !dbg !8854
  store i8* %1, i8** %4, align 8
  call void @llvm.dbg.declare(metadata i8** %4, metadata !8855, metadata !DIExpression()), !dbg !8856
  call void @llvm.dbg.declare(metadata i8** %5, metadata !8857, metadata !DIExpression()), !dbg !8858
  %6 = load i8*, i8** %4, align 8, !dbg !8859
  %7 = getelementptr inbounds i8, i8* %6, i64 20, !dbg !8860
  store i8* %7, i8** %5, align 8, !dbg !8858
  %8 = load i8*, i8** %5, align 8, !dbg !8861
  store i8 0, i8* %8, align 1, !dbg !8862
  br label %9, !dbg !8863, !llvm.loop !8865

; <label>:9:                                      ; preds = %16, %2
  %10 = load i64, i64* %3, align 8, !dbg !8867
  %11 = urem i64 %10, 10, !dbg !8868
  %12 = add i64 48, %11, !dbg !8869
  %13 = trunc i64 %12 to i8, !dbg !8870
  %14 = load i8*, i8** %5, align 8, !dbg !8871
  %15 = getelementptr inbounds i8, i8* %14, i32 -1, !dbg !8871
  store i8* %15, i8** %5, align 8, !dbg !8871
  store i8 %13, i8* %15, align 1, !dbg !8872
  br label %16, !dbg !8873

; <label>:16:                                     ; preds = %9
  %17 = load i64, i64* %3, align 8, !dbg !8874
  %18 = udiv i64 %17, 10, !dbg !8874
  store i64 %18, i64* %3, align 8, !dbg !8874
  %19 = icmp ne i64 %18, 0, !dbg !8875
  br i1 %19, label %9, label %20, !dbg !8873, !llvm.loop !8865

; <label>:20:                                     ; preds = %16
  %21 = load i8*, i8** %5, align 8, !dbg !8876
  ret i8* %21, !dbg !8877
}

; Function Attrs: noinline nounwind uwtable
define i8* @parse_user_spec(i8*, i32*, i32*, i8**, i8**) #3 !dbg !8878 {
  %6 = alloca i8*, align 8
  %7 = alloca i32*, align 8
  %8 = alloca i32*, align 8
  %9 = alloca i8**, align 8
  %10 = alloca i8**, align 8
  %11 = alloca i8*, align 8
  %12 = alloca i8*, align 8
  %13 = alloca i8*, align 8
  store i8* %0, i8** %6, align 8
  call void @llvm.dbg.declare(metadata i8** %6, metadata !8881, metadata !DIExpression()), !dbg !8882
  store i32* %1, i32** %7, align 8
  call void @llvm.dbg.declare(metadata i32** %7, metadata !8883, metadata !DIExpression()), !dbg !8884
  store i32* %2, i32** %8, align 8
  call void @llvm.dbg.declare(metadata i32** %8, metadata !8885, metadata !DIExpression()), !dbg !8886
  store i8** %3, i8*** %9, align 8
  call void @llvm.dbg.declare(metadata i8*** %9, metadata !8887, metadata !DIExpression()), !dbg !8888
  store i8** %4, i8*** %10, align 8
  call void @llvm.dbg.declare(metadata i8*** %10, metadata !8889, metadata !DIExpression()), !dbg !8890
  call void @llvm.dbg.declare(metadata i8** %11, metadata !8891, metadata !DIExpression()), !dbg !8892
  %14 = load i8*, i8** %6, align 8, !dbg !8893
  %15 = call i8* @strchr(i8* %14, i32 58) #12, !dbg !8894
  store i8* %15, i8** %11, align 8, !dbg !8892
  call void @llvm.dbg.declare(metadata i8** %12, metadata !8895, metadata !DIExpression()), !dbg !8896
  %16 = load i8*, i8** %6, align 8, !dbg !8897
  %17 = load i8*, i8** %11, align 8, !dbg !8898
  %18 = load i32*, i32** %7, align 8, !dbg !8899
  %19 = load i32*, i32** %8, align 8, !dbg !8900
  %20 = load i8**, i8*** %9, align 8, !dbg !8901
  %21 = load i8**, i8*** %10, align 8, !dbg !8902
  %22 = call i8* @parse_with_separator(i8* %16, i8* %17, i32* %18, i32* %19, i8** %20, i8** %21), !dbg !8903
  store i8* %22, i8** %12, align 8, !dbg !8896
  %23 = load i8*, i8** %11, align 8, !dbg !8904
  %24 = icmp ne i8* %23, null, !dbg !8904
  br i1 %24, label %44, label %25, !dbg !8906

; <label>:25:                                     ; preds = %5
  %26 = load i8*, i8** %12, align 8, !dbg !8907
  %27 = icmp ne i8* %26, null, !dbg !8907
  br i1 %27, label %28, label %44, !dbg !8908

; <label>:28:                                     ; preds = %25
  call void @llvm.dbg.declare(metadata i8** %13, metadata !8909, metadata !DIExpression()), !dbg !8911
  %29 = load i8*, i8** %6, align 8, !dbg !8912
  %30 = call i8* @strchr(i8* %29, i32 46) #12, !dbg !8913
  store i8* %30, i8** %13, align 8, !dbg !8911
  %31 = load i8*, i8** %13, align 8, !dbg !8914
  %32 = icmp ne i8* %31, null, !dbg !8914
  br i1 %32, label %33, label %43, !dbg !8916

; <label>:33:                                     ; preds = %28
  %34 = load i8*, i8** %6, align 8, !dbg !8917
  %35 = load i8*, i8** %13, align 8, !dbg !8918
  %36 = load i32*, i32** %7, align 8, !dbg !8919
  %37 = load i32*, i32** %8, align 8, !dbg !8920
  %38 = load i8**, i8*** %9, align 8, !dbg !8921
  %39 = load i8**, i8*** %10, align 8, !dbg !8922
  %40 = call i8* @parse_with_separator(i8* %34, i8* %35, i32* %36, i32* %37, i8** %38, i8** %39), !dbg !8923
  %41 = icmp ne i8* %40, null, !dbg !8923
  br i1 %41, label %43, label %42, !dbg !8924

; <label>:42:                                     ; preds = %33
  store i8* null, i8** %12, align 8, !dbg !8925
  br label %43, !dbg !8926

; <label>:43:                                     ; preds = %42, %33, %28
  br label %44, !dbg !8927

; <label>:44:                                     ; preds = %43, %25, %5
  %45 = load i8*, i8** %12, align 8, !dbg !8928
  ret i8* %45, !dbg !8929
}

; Function Attrs: nounwind readonly
declare i8* @strchr(i8*, i32) #6

; Function Attrs: noinline nounwind uwtable
define internal i8* @parse_with_separator(i8*, i8*, i32*, i32*, i8**, i8**) #3 !dbg !184 {
  %7 = alloca i8*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i32*, align 8
  %10 = alloca i32*, align 8
  %11 = alloca i8**, align 8
  %12 = alloca i8**, align 8
  %13 = alloca i8*, align 8
  %14 = alloca %struct.passwd*, align 8
  %15 = alloca %struct.group*, align 8
  %16 = alloca i8*, align 8
  %17 = alloca i8*, align 8
  %18 = alloca i8*, align 8
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca i64, align 8
  %22 = alloca i8, align 1
  %23 = alloca i64, align 8
  %24 = alloca [21 x i8], align 16
  %25 = alloca i64, align 8
  store i8* %0, i8** %7, align 8
  call void @llvm.dbg.declare(metadata i8** %7, metadata !8930, metadata !DIExpression()), !dbg !8931
  store i8* %1, i8** %8, align 8
  call void @llvm.dbg.declare(metadata i8** %8, metadata !8932, metadata !DIExpression()), !dbg !8933
  store i32* %2, i32** %9, align 8
  call void @llvm.dbg.declare(metadata i32** %9, metadata !8934, metadata !DIExpression()), !dbg !8935
  store i32* %3, i32** %10, align 8
  call void @llvm.dbg.declare(metadata i32** %10, metadata !8936, metadata !DIExpression()), !dbg !8937
  store i8** %4, i8*** %11, align 8
  call void @llvm.dbg.declare(metadata i8*** %11, metadata !8938, metadata !DIExpression()), !dbg !8939
  store i8** %5, i8*** %12, align 8
  call void @llvm.dbg.declare(metadata i8*** %12, metadata !8940, metadata !DIExpression()), !dbg !8941
  call void @llvm.dbg.declare(metadata i8** %13, metadata !8942, metadata !DIExpression()), !dbg !8943
  call void @llvm.dbg.declare(metadata %struct.passwd** %14, metadata !8944, metadata !DIExpression()), !dbg !8956
  call void @llvm.dbg.declare(metadata %struct.group** %15, metadata !8957, metadata !DIExpression()), !dbg !8966
  call void @llvm.dbg.declare(metadata i8** %16, metadata !8967, metadata !DIExpression()), !dbg !8968
  call void @llvm.dbg.declare(metadata i8** %17, metadata !8969, metadata !DIExpression()), !dbg !8970
  call void @llvm.dbg.declare(metadata i8** %18, metadata !8971, metadata !DIExpression()), !dbg !8972
  store i8* null, i8** %18, align 8, !dbg !8972
  call void @llvm.dbg.declare(metadata i32* %19, metadata !8973, metadata !DIExpression()), !dbg !8974
  %26 = load i32*, i32** %9, align 8, !dbg !8975
  %27 = load i32, i32* %26, align 4, !dbg !8976
  store i32 %27, i32* %19, align 4, !dbg !8974
  call void @llvm.dbg.declare(metadata i32* %20, metadata !8977, metadata !DIExpression()), !dbg !8978
  %28 = load i32*, i32** %10, align 8, !dbg !8979
  %29 = load i32, i32* %28, align 4, !dbg !8980
  store i32 %29, i32* %20, align 4, !dbg !8978
  store i8* null, i8** %13, align 8, !dbg !8981
  %30 = load i8**, i8*** %12, align 8, !dbg !8982
  store i8* null, i8** %30, align 8, !dbg !8983
  %31 = load i8**, i8*** %11, align 8, !dbg !8984
  store i8* null, i8** %31, align 8, !dbg !8985
  store i8* null, i8** %16, align 8, !dbg !8986
  %32 = load i8*, i8** %8, align 8, !dbg !8987
  %33 = icmp eq i8* %32, null, !dbg !8989
  br i1 %33, label %34, label %42, !dbg !8990

; <label>:34:                                     ; preds = %6
  %35 = load i8*, i8** %7, align 8, !dbg !8991
  %36 = load i8, i8* %35, align 1, !dbg !8994
  %37 = icmp ne i8 %36, 0, !dbg !8994
  br i1 %37, label %38, label %41, !dbg !8995

; <label>:38:                                     ; preds = %34
  %39 = load i8*, i8** %7, align 8, !dbg !8996
  %40 = call noalias i8* @xstrdup(i8* %39), !dbg !8997
  store i8* %40, i8** %16, align 8, !dbg !8998
  br label %41, !dbg !8999

; <label>:41:                                     ; preds = %38, %34
  br label %59, !dbg !9000

; <label>:42:                                     ; preds = %6
  call void @llvm.dbg.declare(metadata i64* %21, metadata !9001, metadata !DIExpression()), !dbg !9003
  %43 = load i8*, i8** %8, align 8, !dbg !9004
  %44 = load i8*, i8** %7, align 8, !dbg !9005
  %45 = ptrtoint i8* %43 to i64, !dbg !9006
  %46 = ptrtoint i8* %44 to i64, !dbg !9006
  %47 = sub i64 %45, %46, !dbg !9006
  store i64 %47, i64* %21, align 8, !dbg !9003
  %48 = load i64, i64* %21, align 8, !dbg !9007
  %49 = icmp ne i64 %48, 0, !dbg !9009
  br i1 %49, label %50, label %58, !dbg !9010

; <label>:50:                                     ; preds = %42
  %51 = load i8*, i8** %7, align 8, !dbg !9011
  %52 = load i64, i64* %21, align 8, !dbg !9013
  %53 = add i64 %52, 1, !dbg !9014
  %54 = call noalias i8* @xmemdup(i8* %51, i64 %53), !dbg !9015
  store i8* %54, i8** %16, align 8, !dbg !9016
  %55 = load i8*, i8** %16, align 8, !dbg !9017
  %56 = load i64, i64* %21, align 8, !dbg !9018
  %57 = getelementptr inbounds i8, i8* %55, i64 %56, !dbg !9017
  store i8 0, i8* %57, align 1, !dbg !9019
  br label %58, !dbg !9020

; <label>:58:                                     ; preds = %50, %42
  br label %59

; <label>:59:                                     ; preds = %58, %41
  %60 = load i8*, i8** %8, align 8, !dbg !9021
  %61 = icmp eq i8* %60, null, !dbg !9022
  br i1 %61, label %68, label %62, !dbg !9023

; <label>:62:                                     ; preds = %59
  %63 = load i8*, i8** %8, align 8, !dbg !9024
  %64 = getelementptr inbounds i8, i8* %63, i64 1, !dbg !9025
  %65 = load i8, i8* %64, align 1, !dbg !9026
  %66 = sext i8 %65 to i32, !dbg !9026
  %67 = icmp eq i32 %66, 0, !dbg !9027
  br i1 %67, label %68, label %69, !dbg !9021

; <label>:68:                                     ; preds = %62, %59
  br label %72, !dbg !9021

; <label>:69:                                     ; preds = %62
  %70 = load i8*, i8** %8, align 8, !dbg !9028
  %71 = getelementptr inbounds i8, i8* %70, i64 1, !dbg !9029
  br label %72, !dbg !9021

; <label>:72:                                     ; preds = %69, %68
  %73 = phi i8* [ null, %68 ], [ %71, %69 ], !dbg !9021
  store i8* %73, i8** %17, align 8, !dbg !9030
  %74 = load i8*, i8** %16, align 8, !dbg !9031
  %75 = icmp ne i8* %74, null, !dbg !9033
  br i1 %75, label %76, label %151, !dbg !9034

; <label>:76:                                     ; preds = %72
  %77 = load i8*, i8** %16, align 8, !dbg !9035
  %78 = load i8, i8* %77, align 1, !dbg !9037
  %79 = sext i8 %78 to i32, !dbg !9037
  %80 = icmp eq i32 %79, 43, !dbg !9038
  br i1 %80, label %81, label %82, !dbg !9037

; <label>:81:                                     ; preds = %76
  br label %85, !dbg !9037

; <label>:82:                                     ; preds = %76
  %83 = load i8*, i8** %16, align 8, !dbg !9039
  %84 = call %struct.passwd* @getpwnam(i8* %83), !dbg !9040
  br label %85, !dbg !9037

; <label>:85:                                     ; preds = %82, %81
  %86 = phi %struct.passwd* [ null, %81 ], [ %84, %82 ], !dbg !9037
  store %struct.passwd* %86, %struct.passwd** %14, align 8, !dbg !9041
  %87 = load %struct.passwd*, %struct.passwd** %14, align 8, !dbg !9042
  %88 = icmp eq %struct.passwd* %87, null, !dbg !9044
  br i1 %88, label %89, label %120, !dbg !9045

; <label>:89:                                     ; preds = %85
  call void @llvm.dbg.declare(metadata i8* %22, metadata !9046, metadata !DIExpression()), !dbg !9048
  %90 = load i8*, i8** %8, align 8, !dbg !9049
  %91 = icmp ne i8* %90, null, !dbg !9050
  br i1 %91, label %92, label %95, !dbg !9051

; <label>:92:                                     ; preds = %89
  %93 = load i8*, i8** %17, align 8, !dbg !9052
  %94 = icmp eq i8* %93, null, !dbg !9053
  br label %95

; <label>:95:                                     ; preds = %92, %89
  %96 = phi i1 [ false, %89 ], [ %94, %92 ]
  %97 = zext i1 %96 to i8, !dbg !9048
  store i8 %97, i8* %22, align 1, !dbg !9048
  %98 = load i8, i8* %22, align 1, !dbg !9054
  %99 = trunc i8 %98 to i1, !dbg !9054
  br i1 %99, label %100, label %102, !dbg !9056

; <label>:100:                                    ; preds = %95
  %101 = load i8*, i8** @parse_with_separator.E_bad_spec, align 8, !dbg !9057
  store i8* %101, i8** %13, align 8, !dbg !9059
  br label %119, !dbg !9060

; <label>:102:                                    ; preds = %95
  call void @llvm.dbg.declare(metadata i64* %23, metadata !9061, metadata !DIExpression()), !dbg !9063
  %103 = load i8*, i8** %16, align 8, !dbg !9064
  %104 = call i32 @xstrtoul(i8* %103, i8** null, i32 10, i64* %23, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3.175, i32 0, i32 0)), !dbg !9066
  %105 = icmp eq i32 %104, 0, !dbg !9067
  br i1 %105, label %106, label %116, !dbg !9068

; <label>:106:                                    ; preds = %102
  %107 = load i64, i64* %23, align 8, !dbg !9069
  %108 = icmp ule i64 %107, 4294967295, !dbg !9070
  br i1 %108, label %109, label %116, !dbg !9071

; <label>:109:                                    ; preds = %106
  %110 = load i64, i64* %23, align 8, !dbg !9072
  %111 = trunc i64 %110 to i32, !dbg !9073
  %112 = icmp ne i32 %111, -1, !dbg !9074
  br i1 %112, label %113, label %116, !dbg !9075

; <label>:113:                                    ; preds = %109
  %114 = load i64, i64* %23, align 8, !dbg !9076
  %115 = trunc i64 %114 to i32, !dbg !9076
  store i32 %115, i32* %19, align 4, !dbg !9077
  br label %118, !dbg !9078

; <label>:116:                                    ; preds = %109, %106, %102
  %117 = load i8*, i8** @parse_with_separator.E_invalid_user, align 8, !dbg !9079
  store i8* %117, i8** %13, align 8, !dbg !9080
  br label %118

; <label>:118:                                    ; preds = %116, %113
  br label %119

; <label>:119:                                    ; preds = %118, %100
  br label %150, !dbg !9081

; <label>:120:                                    ; preds = %85
  %121 = load %struct.passwd*, %struct.passwd** %14, align 8, !dbg !9082
  %122 = getelementptr inbounds %struct.passwd, %struct.passwd* %121, i32 0, i32 2, !dbg !9084
  %123 = load i32, i32* %122, align 8, !dbg !9084
  store i32 %123, i32* %19, align 4, !dbg !9085
  %124 = load i8*, i8** %17, align 8, !dbg !9086
  %125 = icmp eq i8* %124, null, !dbg !9088
  br i1 %125, label %126, label %149, !dbg !9089

; <label>:126:                                    ; preds = %120
  %127 = load i8*, i8** %8, align 8, !dbg !9090
  %128 = icmp ne i8* %127, null, !dbg !9091
  br i1 %128, label %129, label %149, !dbg !9092

; <label>:129:                                    ; preds = %126
  call void @llvm.dbg.declare(metadata [21 x i8]* %24, metadata !9093, metadata !DIExpression()), !dbg !9095
  %130 = load %struct.passwd*, %struct.passwd** %14, align 8, !dbg !9096
  %131 = getelementptr inbounds %struct.passwd, %struct.passwd* %130, i32 0, i32 3, !dbg !9097
  %132 = load i32, i32* %131, align 4, !dbg !9097
  store i32 %132, i32* %20, align 4, !dbg !9098
  %133 = load i32, i32* %20, align 4, !dbg !9099
  %134 = call %struct.group* @getgrgid(i32 %133), !dbg !9100
  store %struct.group* %134, %struct.group** %15, align 8, !dbg !9101
  %135 = load %struct.group*, %struct.group** %15, align 8, !dbg !9102
  %136 = icmp ne %struct.group* %135, null, !dbg !9102
  br i1 %136, label %137, label %141, !dbg !9102

; <label>:137:                                    ; preds = %129
  %138 = load %struct.group*, %struct.group** %15, align 8, !dbg !9103
  %139 = getelementptr inbounds %struct.group, %struct.group* %138, i32 0, i32 0, !dbg !9104
  %140 = load i8*, i8** %139, align 8, !dbg !9104
  br label %146, !dbg !9102

; <label>:141:                                    ; preds = %129
  %142 = load i32, i32* %20, align 4, !dbg !9105
  %143 = zext i32 %142 to i64, !dbg !9105
  %144 = getelementptr inbounds [21 x i8], [21 x i8]* %24, i32 0, i32 0, !dbg !9106
  %145 = call i8* @umaxtostr(i64 %143, i8* %144), !dbg !9107
  br label %146, !dbg !9102

; <label>:146:                                    ; preds = %141, %137
  %147 = phi i8* [ %140, %137 ], [ %145, %141 ], !dbg !9102
  %148 = call noalias i8* @xstrdup(i8* %147), !dbg !9108
  store i8* %148, i8** %18, align 8, !dbg !9109
  call void @endgrent(), !dbg !9110
  br label %149, !dbg !9111

; <label>:149:                                    ; preds = %146, %126, %120
  br label %150

; <label>:150:                                    ; preds = %149, %119
  call void @endpwent(), !dbg !9112
  br label %151, !dbg !9113

; <label>:151:                                    ; preds = %150, %72
  %152 = load i8*, i8** %17, align 8, !dbg !9114
  %153 = icmp ne i8* %152, null, !dbg !9116
  br i1 %153, label %154, label %194, !dbg !9117

; <label>:154:                                    ; preds = %151
  %155 = load i8*, i8** %13, align 8, !dbg !9118
  %156 = icmp eq i8* %155, null, !dbg !9119
  br i1 %156, label %157, label %194, !dbg !9120

; <label>:157:                                    ; preds = %154
  %158 = load i8*, i8** %17, align 8, !dbg !9121
  %159 = load i8, i8* %158, align 1, !dbg !9123
  %160 = sext i8 %159 to i32, !dbg !9123
  %161 = icmp eq i32 %160, 43, !dbg !9124
  br i1 %161, label %162, label %163, !dbg !9123

; <label>:162:                                    ; preds = %157
  br label %166, !dbg !9123

; <label>:163:                                    ; preds = %157
  %164 = load i8*, i8** %17, align 8, !dbg !9125
  %165 = call %struct.group* @getgrnam(i8* %164), !dbg !9126
  br label %166, !dbg !9123

; <label>:166:                                    ; preds = %163, %162
  %167 = phi %struct.group* [ null, %162 ], [ %165, %163 ], !dbg !9123
  store %struct.group* %167, %struct.group** %15, align 8, !dbg !9127
  %168 = load %struct.group*, %struct.group** %15, align 8, !dbg !9128
  %169 = icmp eq %struct.group* %168, null, !dbg !9130
  br i1 %169, label %170, label %187, !dbg !9131

; <label>:170:                                    ; preds = %166
  call void @llvm.dbg.declare(metadata i64* %25, metadata !9132, metadata !DIExpression()), !dbg !9134
  %171 = load i8*, i8** %17, align 8, !dbg !9135
  %172 = call i32 @xstrtoul(i8* %171, i8** null, i32 10, i64* %25, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3.175, i32 0, i32 0)), !dbg !9137
  %173 = icmp eq i32 %172, 0, !dbg !9138
  br i1 %173, label %174, label %184, !dbg !9139

; <label>:174:                                    ; preds = %170
  %175 = load i64, i64* %25, align 8, !dbg !9140
  %176 = icmp ule i64 %175, 4294967295, !dbg !9141
  br i1 %176, label %177, label %184, !dbg !9142

; <label>:177:                                    ; preds = %174
  %178 = load i64, i64* %25, align 8, !dbg !9143
  %179 = trunc i64 %178 to i32, !dbg !9144
  %180 = icmp ne i32 %179, -1, !dbg !9145
  br i1 %180, label %181, label %184, !dbg !9146

; <label>:181:                                    ; preds = %177
  %182 = load i64, i64* %25, align 8, !dbg !9147
  %183 = trunc i64 %182 to i32, !dbg !9147
  store i32 %183, i32* %20, align 4, !dbg !9148
  br label %186, !dbg !9149

; <label>:184:                                    ; preds = %177, %174, %170
  %185 = load i8*, i8** @parse_with_separator.E_invalid_group, align 8, !dbg !9150
  store i8* %185, i8** %13, align 8, !dbg !9151
  br label %186

; <label>:186:                                    ; preds = %184, %181
  br label %191, !dbg !9152

; <label>:187:                                    ; preds = %166
  %188 = load %struct.group*, %struct.group** %15, align 8, !dbg !9153
  %189 = getelementptr inbounds %struct.group, %struct.group* %188, i32 0, i32 2, !dbg !9154
  %190 = load i32, i32* %189, align 8, !dbg !9154
  store i32 %190, i32* %20, align 4, !dbg !9155
  br label %191

; <label>:191:                                    ; preds = %187, %186
  call void @endgrent(), !dbg !9156
  %192 = load i8*, i8** %17, align 8, !dbg !9157
  %193 = call noalias i8* @xstrdup(i8* %192), !dbg !9158
  store i8* %193, i8** %18, align 8, !dbg !9159
  br label %194, !dbg !9160

; <label>:194:                                    ; preds = %191, %154, %151
  %195 = load i8*, i8** %13, align 8, !dbg !9161
  %196 = icmp eq i8* %195, null, !dbg !9163
  br i1 %196, label %197, label %206, !dbg !9164

; <label>:197:                                    ; preds = %194
  %198 = load i32, i32* %19, align 4, !dbg !9165
  %199 = load i32*, i32** %9, align 8, !dbg !9167
  store i32 %198, i32* %199, align 4, !dbg !9168
  %200 = load i32, i32* %20, align 4, !dbg !9169
  %201 = load i32*, i32** %10, align 8, !dbg !9170
  store i32 %200, i32* %201, align 4, !dbg !9171
  %202 = load i8*, i8** %16, align 8, !dbg !9172
  %203 = load i8**, i8*** %11, align 8, !dbg !9173
  store i8* %202, i8** %203, align 8, !dbg !9174
  %204 = load i8*, i8** %18, align 8, !dbg !9175
  %205 = load i8**, i8*** %12, align 8, !dbg !9176
  store i8* %204, i8** %205, align 8, !dbg !9177
  store i8* null, i8** %16, align 8, !dbg !9178
  br label %208, !dbg !9179

; <label>:206:                                    ; preds = %194
  %207 = load i8*, i8** %18, align 8, !dbg !9180
  call void @free(i8* %207) #8, !dbg !9181
  br label %208

; <label>:208:                                    ; preds = %206, %197
  %209 = load i8*, i8** %16, align 8, !dbg !9182
  call void @free(i8* %209) #8, !dbg !9183
  %210 = load i8*, i8** %13, align 8, !dbg !9184
  ret i8* %210, !dbg !9185
}

declare %struct.passwd* @getpwnam(i8*) #2

declare void @endgrent() #2

declare void @endpwent() #2

declare %struct.group* @getgrnam(i8*) #2

; Function Attrs: noinline nounwind uwtable
define noalias i8* @xnmalloc(i64, i64) #3 !dbg !9186 {
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  store i64 %0, i64* %3, align 8
  call void @llvm.dbg.declare(metadata i64* %3, metadata !9189, metadata !DIExpression()), !dbg !9190
  store i64 %1, i64* %4, align 8
  call void @llvm.dbg.declare(metadata i64* %4, metadata !9191, metadata !DIExpression()), !dbg !9192
  %5 = load i64, i64* %4, align 8, !dbg !9193
  %6 = udiv i64 -1, %5, !dbg !9193
  %7 = load i64, i64* %3, align 8, !dbg !9193
  %8 = icmp ult i64 %6, %7, !dbg !9193
  br i1 %8, label %9, label %10, !dbg !9195

; <label>:9:                                      ; preds = %2
  call void @xalloc_die() #13, !dbg !9196
  unreachable, !dbg !9196

; <label>:10:                                     ; preds = %2
  %11 = load i64, i64* %3, align 8, !dbg !9197
  %12 = load i64, i64* %4, align 8, !dbg !9198
  %13 = mul i64 %11, %12, !dbg !9199
  %14 = call noalias i8* @xmalloc(i64 %13), !dbg !9200
  ret i8* %14, !dbg !9201
}

; Function Attrs: noinline nounwind uwtable
define noalias i8* @xmalloc(i64) #3 !dbg !9202 {
  %2 = alloca i64, align 8
  %3 = alloca i8*, align 8
  store i64 %0, i64* %2, align 8
  call void @llvm.dbg.declare(metadata i64* %2, metadata !9205, metadata !DIExpression()), !dbg !9206
  call void @llvm.dbg.declare(metadata i8** %3, metadata !9207, metadata !DIExpression()), !dbg !9208
  %4 = load i64, i64* %2, align 8, !dbg !9209
  %5 = call noalias i8* @malloc(i64 %4) #8, !dbg !9210
  store i8* %5, i8** %3, align 8, !dbg !9208
  %6 = load i8*, i8** %3, align 8, !dbg !9211
  %7 = icmp ne i8* %6, null, !dbg !9211
  br i1 %7, label %12, label %8, !dbg !9213

; <label>:8:                                      ; preds = %1
  %9 = load i64, i64* %2, align 8, !dbg !9214
  %10 = icmp ne i64 %9, 0, !dbg !9215
  br i1 %10, label %11, label %12, !dbg !9216

; <label>:11:                                     ; preds = %8
  call void @xalloc_die() #13, !dbg !9217
  unreachable, !dbg !9217

; <label>:12:                                     ; preds = %8, %1
  %13 = load i8*, i8** %3, align 8, !dbg !9218
  ret i8* %13, !dbg !9219
}

; Function Attrs: noinline nounwind uwtable
define i8* @xnrealloc(i8*, i64, i64) #3 !dbg !9220 {
  %4 = alloca i8*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  store i8* %0, i8** %4, align 8
  call void @llvm.dbg.declare(metadata i8** %4, metadata !9223, metadata !DIExpression()), !dbg !9224
  store i64 %1, i64* %5, align 8
  call void @llvm.dbg.declare(metadata i64* %5, metadata !9225, metadata !DIExpression()), !dbg !9226
  store i64 %2, i64* %6, align 8
  call void @llvm.dbg.declare(metadata i64* %6, metadata !9227, metadata !DIExpression()), !dbg !9228
  %7 = load i64, i64* %6, align 8, !dbg !9229
  %8 = udiv i64 -1, %7, !dbg !9229
  %9 = load i64, i64* %5, align 8, !dbg !9229
  %10 = icmp ult i64 %8, %9, !dbg !9229
  br i1 %10, label %11, label %12, !dbg !9231

; <label>:11:                                     ; preds = %3
  call void @xalloc_die() #13, !dbg !9232
  unreachable, !dbg !9232

; <label>:12:                                     ; preds = %3
  %13 = load i8*, i8** %4, align 8, !dbg !9233
  %14 = load i64, i64* %5, align 8, !dbg !9234
  %15 = load i64, i64* %6, align 8, !dbg !9235
  %16 = mul i64 %14, %15, !dbg !9236
  %17 = call i8* @xrealloc(i8* %13, i64 %16), !dbg !9237
  ret i8* %17, !dbg !9238
}

; Function Attrs: noinline nounwind uwtable
define i8* @xrealloc(i8*, i64) #3 !dbg !9239 {
  %3 = alloca i8*, align 8
  %4 = alloca i64, align 8
  store i8* %0, i8** %3, align 8
  call void @llvm.dbg.declare(metadata i8** %3, metadata !9242, metadata !DIExpression()), !dbg !9243
  store i64 %1, i64* %4, align 8
  call void @llvm.dbg.declare(metadata i64* %4, metadata !9244, metadata !DIExpression()), !dbg !9245
  %5 = load i8*, i8** %3, align 8, !dbg !9246
  %6 = load i64, i64* %4, align 8, !dbg !9247
  %7 = call i8* @realloc(i8* %5, i64 %6) #8, !dbg !9248
  store i8* %7, i8** %3, align 8, !dbg !9249
  %8 = load i8*, i8** %3, align 8, !dbg !9250
  %9 = icmp ne i8* %8, null, !dbg !9250
  br i1 %9, label %14, label %10, !dbg !9252

; <label>:10:                                     ; preds = %2
  %11 = load i64, i64* %4, align 8, !dbg !9253
  %12 = icmp ne i64 %11, 0, !dbg !9254
  br i1 %12, label %13, label %14, !dbg !9255

; <label>:13:                                     ; preds = %10
  call void @xalloc_die() #13, !dbg !9256
  unreachable, !dbg !9256

; <label>:14:                                     ; preds = %10, %2
  %15 = load i8*, i8** %3, align 8, !dbg !9257
  ret i8* %15, !dbg !9258
}

; Function Attrs: noinline nounwind uwtable
define i8* @x2nrealloc(i8*, i64*, i64) #3 !dbg !435 {
  %4 = alloca i8*, align 8
  %5 = alloca i64*, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  store i8* %0, i8** %4, align 8
  call void @llvm.dbg.declare(metadata i8** %4, metadata !9259, metadata !DIExpression()), !dbg !9260
  store i64* %1, i64** %5, align 8
  call void @llvm.dbg.declare(metadata i64** %5, metadata !9261, metadata !DIExpression()), !dbg !9262
  store i64 %2, i64* %6, align 8
  call void @llvm.dbg.declare(metadata i64* %6, metadata !9263, metadata !DIExpression()), !dbg !9264
  call void @llvm.dbg.declare(metadata i64* %7, metadata !9265, metadata !DIExpression()), !dbg !9266
  %8 = load i64*, i64** %5, align 8, !dbg !9267
  %9 = load i64, i64* %8, align 8, !dbg !9268
  store i64 %9, i64* %7, align 8, !dbg !9266
  %10 = load i8*, i8** %4, align 8, !dbg !9269
  %11 = icmp ne i8* %10, null, !dbg !9269
  br i1 %11, label %26, label %12, !dbg !9271

; <label>:12:                                     ; preds = %3
  %13 = load i64, i64* %7, align 8, !dbg !9272
  %14 = icmp ne i64 %13, 0, !dbg !9272
  br i1 %14, label %25, label %15, !dbg !9275

; <label>:15:                                     ; preds = %12
  %16 = load i64, i64* %6, align 8, !dbg !9276
  %17 = udiv i64 64, %16, !dbg !9278
  store i64 %17, i64* %7, align 8, !dbg !9279
  %18 = load i64, i64* %7, align 8, !dbg !9280
  %19 = icmp ne i64 %18, 0, !dbg !9281
  %20 = xor i1 %19, true, !dbg !9281
  %21 = zext i1 %20 to i32, !dbg !9281
  %22 = sext i32 %21 to i64, !dbg !9281
  %23 = load i64, i64* %7, align 8, !dbg !9282
  %24 = add i64 %23, %22, !dbg !9282
  store i64 %24, i64* %7, align 8, !dbg !9282
  br label %25, !dbg !9283

; <label>:25:                                     ; preds = %15, %12
  br label %38, !dbg !9284

; <label>:26:                                     ; preds = %3
  %27 = load i64, i64* %6, align 8, !dbg !9285
  %28 = udiv i64 -6148914691236517206, %27, !dbg !9288
  %29 = load i64, i64* %7, align 8, !dbg !9289
  %30 = icmp ule i64 %28, %29, !dbg !9290
  br i1 %30, label %31, label %32, !dbg !9291

; <label>:31:                                     ; preds = %26
  call void @xalloc_die() #13, !dbg !9292
  unreachable, !dbg !9292

; <label>:32:                                     ; preds = %26
  %33 = load i64, i64* %7, align 8, !dbg !9293
  %34 = add i64 %33, 1, !dbg !9294
  %35 = udiv i64 %34, 2, !dbg !9295
  %36 = load i64, i64* %7, align 8, !dbg !9296
  %37 = add i64 %36, %35, !dbg !9296
  store i64 %37, i64* %7, align 8, !dbg !9296
  br label %38

; <label>:38:                                     ; preds = %32, %25
  %39 = load i64, i64* %7, align 8, !dbg !9297
  %40 = load i64*, i64** %5, align 8, !dbg !9298
  store i64 %39, i64* %40, align 8, !dbg !9299
  %41 = load i8*, i8** %4, align 8, !dbg !9300
  %42 = load i64, i64* %7, align 8, !dbg !9301
  %43 = load i64, i64* %6, align 8, !dbg !9302
  %44 = mul i64 %42, %43, !dbg !9303
  %45 = call i8* @xrealloc(i8* %41, i64 %44), !dbg !9304
  ret i8* %45, !dbg !9305
}

; Function Attrs: noinline nounwind uwtable
define noalias i8* @xcharalloc(i64) #3 !dbg !9306 {
  %2 = alloca i64, align 8
  store i64 %0, i64* %2, align 8
  call void @llvm.dbg.declare(metadata i64* %2, metadata !9309, metadata !DIExpression()), !dbg !9310
  %3 = load i64, i64* %2, align 8, !dbg !9311
  %4 = call noalias i8* @xmalloc(i64 %3), !dbg !9311
  ret i8* %4, !dbg !9312
}

; Function Attrs: noinline nounwind uwtable
define i8* @x2realloc(i8*, i64*) #3 !dbg !9313 {
  %3 = alloca i8*, align 8
  %4 = alloca i64*, align 8
  store i8* %0, i8** %3, align 8
  call void @llvm.dbg.declare(metadata i8** %3, metadata !9316, metadata !DIExpression()), !dbg !9317
  store i64* %1, i64** %4, align 8
  call void @llvm.dbg.declare(metadata i64** %4, metadata !9318, metadata !DIExpression()), !dbg !9319
  %5 = load i8*, i8** %3, align 8, !dbg !9320
  %6 = load i64*, i64** %4, align 8, !dbg !9321
  %7 = call i8* @x2nrealloc(i8* %5, i64* %6, i64 1), !dbg !9322
  ret i8* %7, !dbg !9323
}

; Function Attrs: noinline nounwind uwtable
define noalias i8* @xzalloc(i64) #3 !dbg !9324 {
  %2 = alloca i64, align 8
  store i64 %0, i64* %2, align 8
  call void @llvm.dbg.declare(metadata i64* %2, metadata !9325, metadata !DIExpression()), !dbg !9326
  %3 = load i64, i64* %2, align 8, !dbg !9327
  %4 = call noalias i8* @xmalloc(i64 %3), !dbg !9328
  %5 = load i64, i64* %2, align 8, !dbg !9329
  call void @llvm.memset.p0i8.i64(i8* %4, i8 0, i64 %5, i32 1, i1 false), !dbg !9330
  ret i8* %4, !dbg !9331
}

; Function Attrs: noinline nounwind uwtable
define noalias i8* @xcalloc(i64, i64) #3 !dbg !9332 {
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = alloca i8*, align 8
  store i64 %0, i64* %3, align 8
  call void @llvm.dbg.declare(metadata i64* %3, metadata !9333, metadata !DIExpression()), !dbg !9334
  store i64 %1, i64* %4, align 8
  call void @llvm.dbg.declare(metadata i64* %4, metadata !9335, metadata !DIExpression()), !dbg !9336
  call void @llvm.dbg.declare(metadata i8** %5, metadata !9337, metadata !DIExpression()), !dbg !9338
  %6 = load i64, i64* %3, align 8, !dbg !9339
  %7 = load i64, i64* %4, align 8, !dbg !9341
  %8 = call noalias i8* @calloc(i64 %6, i64 %7) #8, !dbg !9342
  store i8* %8, i8** %5, align 8, !dbg !9343
  %9 = icmp ne i8* %8, null, !dbg !9343
  br i1 %9, label %11, label %10, !dbg !9344

; <label>:10:                                     ; preds = %2
  call void @xalloc_die() #13, !dbg !9345
  unreachable, !dbg !9345

; <label>:11:                                     ; preds = %2
  %12 = load i8*, i8** %5, align 8, !dbg !9346
  ret i8* %12, !dbg !9347
}

; Function Attrs: noinline nounwind uwtable
define noalias i8* @xmemdup(i8*, i64) #3 !dbg !9348 {
  %3 = alloca i8*, align 8
  %4 = alloca i64, align 8
  store i8* %0, i8** %3, align 8
  call void @llvm.dbg.declare(metadata i8** %3, metadata !9351, metadata !DIExpression()), !dbg !9352
  store i64 %1, i64* %4, align 8
  call void @llvm.dbg.declare(metadata i64* %4, metadata !9353, metadata !DIExpression()), !dbg !9354
  %5 = load i64, i64* %4, align 8, !dbg !9355
  %6 = call noalias i8* @xmalloc(i64 %5), !dbg !9356
  %7 = load i8*, i8** %3, align 8, !dbg !9357
  %8 = load i64, i64* %4, align 8, !dbg !9358
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %6, i8* %7, i64 %8, i32 1, i1 false), !dbg !9359
  ret i8* %6, !dbg !9360
}

; Function Attrs: noinline nounwind uwtable
define noalias i8* @xstrdup(i8*) #3 !dbg !9361 {
  %2 = alloca i8*, align 8
  store i8* %0, i8** %2, align 8
  call void @llvm.dbg.declare(metadata i8** %2, metadata !9362, metadata !DIExpression()), !dbg !9363
  %3 = load i8*, i8** %2, align 8, !dbg !9364
  %4 = load i8*, i8** %2, align 8, !dbg !9365
  %5 = call i64 @strlen(i8* %4) #12, !dbg !9366
  %6 = add i64 %5, 1, !dbg !9367
  %7 = call noalias i8* @xmemdup(i8* %3, i64 %6), !dbg !9368
  ret i8* %7, !dbg !9369
}

; Function Attrs: noinline nounwind uwtable
define i32 @xstrtoul(i8*, i8**, i32, i64*, i8*) #3 !dbg !9370 {
  %6 = alloca i32, align 4
  %7 = alloca i8*, align 8
  %8 = alloca i8**, align 8
  %9 = alloca i32, align 4
  %10 = alloca i64*, align 8
  %11 = alloca i8*, align 8
  %12 = alloca i8*, align 8
  %13 = alloca i8**, align 8
  %14 = alloca i64, align 8
  %15 = alloca i32, align 4
  %16 = alloca i8*, align 8
  %17 = alloca i8, align 1
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  store i8* %0, i8** %7, align 8
  call void @llvm.dbg.declare(metadata i8** %7, metadata !9376, metadata !DIExpression()), !dbg !9377
  store i8** %1, i8*** %8, align 8
  call void @llvm.dbg.declare(metadata i8*** %8, metadata !9378, metadata !DIExpression()), !dbg !9379
  store i32 %2, i32* %9, align 4
  call void @llvm.dbg.declare(metadata i32* %9, metadata !9380, metadata !DIExpression()), !dbg !9381
  store i64* %3, i64** %10, align 8
  call void @llvm.dbg.declare(metadata i64** %10, metadata !9382, metadata !DIExpression()), !dbg !9383
  store i8* %4, i8** %11, align 8
  call void @llvm.dbg.declare(metadata i8** %11, metadata !9384, metadata !DIExpression()), !dbg !9385
  call void @llvm.dbg.declare(metadata i8** %12, metadata !9386, metadata !DIExpression()), !dbg !9387
  call void @llvm.dbg.declare(metadata i8*** %13, metadata !9388, metadata !DIExpression()), !dbg !9389
  call void @llvm.dbg.declare(metadata i64* %14, metadata !9390, metadata !DIExpression()), !dbg !9391
  call void @llvm.dbg.declare(metadata i32* %15, metadata !9392, metadata !DIExpression()), !dbg !9393
  store i32 0, i32* %15, align 4, !dbg !9393
  %21 = load i32, i32* %9, align 4, !dbg !9394
  %22 = icmp sle i32 0, %21, !dbg !9394
  br i1 %22, label %23, label %27, !dbg !9394

; <label>:23:                                     ; preds = %5
  %24 = load i32, i32* %9, align 4, !dbg !9394
  %25 = icmp sle i32 %24, 36, !dbg !9394
  br i1 %25, label %26, label %27, !dbg !9397

; <label>:26:                                     ; preds = %23
  br label %28, !dbg !9397

; <label>:27:                                     ; preds = %23, %5
  call void @__assert_fail(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.191, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.1.192, i32 0, i32 0), i32 83, i8* getelementptr inbounds ([81 x i8], [81 x i8]* @__PRETTY_FUNCTION__.xstrtoul, i32 0, i32 0)) #11, !dbg !9394
  unreachable, !dbg !9394

; <label>:28:                                     ; preds = %26
  %29 = load i8**, i8*** %8, align 8, !dbg !9398
  %30 = icmp ne i8** %29, null, !dbg !9398
  br i1 %30, label %31, label %33, !dbg !9398

; <label>:31:                                     ; preds = %28
  %32 = load i8**, i8*** %8, align 8, !dbg !9399
  br label %34, !dbg !9398

; <label>:33:                                     ; preds = %28
  br label %34, !dbg !9398

; <label>:34:                                     ; preds = %33, %31
  %35 = phi i8** [ %32, %31 ], [ %12, %33 ], !dbg !9398
  store i8** %35, i8*** %13, align 8, !dbg !9400
  call void @llvm.dbg.declare(metadata i8** %16, metadata !9401, metadata !DIExpression()), !dbg !9404
  %36 = load i8*, i8** %7, align 8, !dbg !9405
  store i8* %36, i8** %16, align 8, !dbg !9404
  call void @llvm.dbg.declare(metadata i8* %17, metadata !9406, metadata !DIExpression()), !dbg !9407
  %37 = load i8*, i8** %16, align 8, !dbg !9408
  %38 = load i8, i8* %37, align 1, !dbg !9409
  store i8 %38, i8* %17, align 1, !dbg !9407
  br label %39, !dbg !9410

; <label>:39:                                     ; preds = %50, %34
  %40 = call i16** @__ctype_b_loc() #14, !dbg !9411
  %41 = load i16*, i16** %40, align 8, !dbg !9411
  %42 = load i8, i8* %17, align 1, !dbg !9411
  %43 = zext i8 %42 to i32, !dbg !9411
  %44 = sext i32 %43 to i64, !dbg !9411
  %45 = getelementptr inbounds i16, i16* %41, i64 %44, !dbg !9411
  %46 = load i16, i16* %45, align 2, !dbg !9411
  %47 = zext i16 %46 to i32, !dbg !9411
  %48 = and i32 %47, 8192, !dbg !9411
  %49 = icmp ne i32 %48, 0, !dbg !9410
  br i1 %49, label %50, label %54, !dbg !9410

; <label>:50:                                     ; preds = %39
  %51 = load i8*, i8** %16, align 8, !dbg !9412
  %52 = getelementptr inbounds i8, i8* %51, i32 1, !dbg !9412
  store i8* %52, i8** %16, align 8, !dbg !9412
  %53 = load i8, i8* %52, align 1, !dbg !9413
  store i8 %53, i8* %17, align 1, !dbg !9414
  br label %39, !dbg !9410, !llvm.loop !9415

; <label>:54:                                     ; preds = %39
  %55 = load i8, i8* %17, align 1, !dbg !9417
  %56 = zext i8 %55 to i32, !dbg !9417
  %57 = icmp eq i32 %56, 45, !dbg !9419
  br i1 %57, label %58, label %59, !dbg !9420

; <label>:58:                                     ; preds = %54
  store i32 4, i32* %6, align 4, !dbg !9421
  br label %215, !dbg !9421

; <label>:59:                                     ; preds = %54
  %60 = call i32* @__errno_location() #14, !dbg !9422
  store i32 0, i32* %60, align 4, !dbg !9423
  %61 = load i8*, i8** %7, align 8, !dbg !9424
  %62 = load i8**, i8*** %13, align 8, !dbg !9425
  %63 = load i32, i32* %9, align 4, !dbg !9426
  %64 = call i64 @strtoul(i8* %61, i8** %62, i32 %63) #8, !dbg !9427
  store i64 %64, i64* %14, align 8, !dbg !9428
  %65 = load i8**, i8*** %13, align 8, !dbg !9429
  %66 = load i8*, i8** %65, align 8, !dbg !9431
  %67 = load i8*, i8** %7, align 8, !dbg !9432
  %68 = icmp eq i8* %66, %67, !dbg !9433
  br i1 %68, label %69, label %89, !dbg !9434

; <label>:69:                                     ; preds = %59
  %70 = load i8*, i8** %11, align 8, !dbg !9435
  %71 = icmp ne i8* %70, null, !dbg !9435
  br i1 %71, label %72, label %87, !dbg !9438

; <label>:72:                                     ; preds = %69
  %73 = load i8**, i8*** %13, align 8, !dbg !9439
  %74 = load i8*, i8** %73, align 8, !dbg !9440
  %75 = load i8, i8* %74, align 1, !dbg !9441
  %76 = sext i8 %75 to i32, !dbg !9441
  %77 = icmp ne i32 %76, 0, !dbg !9441
  br i1 %77, label %78, label %87, !dbg !9442

; <label>:78:                                     ; preds = %72
  %79 = load i8*, i8** %11, align 8, !dbg !9443
  %80 = load i8**, i8*** %13, align 8, !dbg !9444
  %81 = load i8*, i8** %80, align 8, !dbg !9445
  %82 = load i8, i8* %81, align 1, !dbg !9446
  %83 = sext i8 %82 to i32, !dbg !9446
  %84 = call i8* @strchr(i8* %79, i32 %83) #12, !dbg !9447
  %85 = icmp ne i8* %84, null, !dbg !9447
  br i1 %85, label %86, label %87, !dbg !9448

; <label>:86:                                     ; preds = %78
  store i64 1, i64* %14, align 8, !dbg !9449
  br label %88, !dbg !9450

; <label>:87:                                     ; preds = %78, %72, %69
  store i32 4, i32* %6, align 4, !dbg !9451
  br label %215, !dbg !9451

; <label>:88:                                     ; preds = %86
  br label %100, !dbg !9452

; <label>:89:                                     ; preds = %59
  %90 = call i32* @__errno_location() #14, !dbg !9453
  %91 = load i32, i32* %90, align 4, !dbg !9453
  %92 = icmp ne i32 %91, 0, !dbg !9455
  br i1 %92, label %93, label %99, !dbg !9456

; <label>:93:                                     ; preds = %89
  %94 = call i32* @__errno_location() #14, !dbg !9457
  %95 = load i32, i32* %94, align 4, !dbg !9457
  %96 = icmp ne i32 %95, 34, !dbg !9460
  br i1 %96, label %97, label %98, !dbg !9461

; <label>:97:                                     ; preds = %93
  store i32 4, i32* %6, align 4, !dbg !9462
  br label %215, !dbg !9462

; <label>:98:                                     ; preds = %93
  store i32 1, i32* %15, align 4, !dbg !9463
  br label %99, !dbg !9464

; <label>:99:                                     ; preds = %98, %89
  br label %100

; <label>:100:                                    ; preds = %99, %88
  %101 = load i8*, i8** %11, align 8, !dbg !9465
  %102 = icmp ne i8* %101, null, !dbg !9465
  br i1 %102, label %107, label %103, !dbg !9467

; <label>:103:                                    ; preds = %100
  %104 = load i64, i64* %14, align 8, !dbg !9468
  %105 = load i64*, i64** %10, align 8, !dbg !9470
  store i64 %104, i64* %105, align 8, !dbg !9471
  %106 = load i32, i32* %15, align 4, !dbg !9472
  store i32 %106, i32* %6, align 4, !dbg !9473
  br label %215, !dbg !9473

; <label>:107:                                    ; preds = %100
  %108 = load i8**, i8*** %13, align 8, !dbg !9474
  %109 = load i8*, i8** %108, align 8, !dbg !9476
  %110 = load i8, i8* %109, align 1, !dbg !9477
  %111 = sext i8 %110 to i32, !dbg !9477
  %112 = icmp ne i32 %111, 0, !dbg !9478
  br i1 %112, label %113, label %211, !dbg !9479

; <label>:113:                                    ; preds = %107
  call void @llvm.dbg.declare(metadata i32* %18, metadata !9480, metadata !DIExpression()), !dbg !9482
  store i32 1024, i32* %18, align 4, !dbg !9482
  call void @llvm.dbg.declare(metadata i32* %19, metadata !9483, metadata !DIExpression()), !dbg !9484
  store i32 1, i32* %19, align 4, !dbg !9484
  call void @llvm.dbg.declare(metadata i32* %20, metadata !9485, metadata !DIExpression()), !dbg !9486
  %114 = load i8*, i8** %11, align 8, !dbg !9487
  %115 = load i8**, i8*** %13, align 8, !dbg !9489
  %116 = load i8*, i8** %115, align 8, !dbg !9490
  %117 = load i8, i8* %116, align 1, !dbg !9491
  %118 = sext i8 %117 to i32, !dbg !9491
  %119 = call i8* @strchr(i8* %114, i32 %118) #12, !dbg !9492
  %120 = icmp ne i8* %119, null, !dbg !9492
  br i1 %120, label %126, label %121, !dbg !9493

; <label>:121:                                    ; preds = %113
  %122 = load i64, i64* %14, align 8, !dbg !9494
  %123 = load i64*, i64** %10, align 8, !dbg !9496
  store i64 %122, i64* %123, align 8, !dbg !9497
  %124 = load i32, i32* %15, align 4, !dbg !9498
  %125 = or i32 %124, 2, !dbg !9499
  store i32 %125, i32* %6, align 4, !dbg !9500
  br label %215, !dbg !9500

; <label>:126:                                    ; preds = %113
  %127 = load i8*, i8** %11, align 8, !dbg !9501
  %128 = call i8* @strchr(i8* %127, i32 48) #12, !dbg !9503
  %129 = icmp ne i8* %128, null, !dbg !9503
  br i1 %129, label %130, label %153, !dbg !9504

; <label>:130:                                    ; preds = %126
  %131 = load i8**, i8*** %13, align 8, !dbg !9505
  %132 = getelementptr inbounds i8*, i8** %131, i64 0, !dbg !9505
  %133 = load i8*, i8** %132, align 8, !dbg !9505
  %134 = getelementptr inbounds i8, i8* %133, i64 1, !dbg !9505
  %135 = load i8, i8* %134, align 1, !dbg !9505
  %136 = sext i8 %135 to i32, !dbg !9505
  switch i32 %136, label %152 [
    i32 105, label %137
    i32 66, label %149
    i32 68, label %149
  ], !dbg !9507

; <label>:137:                                    ; preds = %130
  %138 = load i8**, i8*** %13, align 8, !dbg !9508
  %139 = getelementptr inbounds i8*, i8** %138, i64 0, !dbg !9508
  %140 = load i8*, i8** %139, align 8, !dbg !9508
  %141 = getelementptr inbounds i8, i8* %140, i64 2, !dbg !9508
  %142 = load i8, i8* %141, align 1, !dbg !9508
  %143 = sext i8 %142 to i32, !dbg !9508
  %144 = icmp eq i32 %143, 66, !dbg !9511
  br i1 %144, label %145, label %148, !dbg !9512

; <label>:145:                                    ; preds = %137
  %146 = load i32, i32* %19, align 4, !dbg !9513
  %147 = add nsw i32 %146, 2, !dbg !9513
  store i32 %147, i32* %19, align 4, !dbg !9513
  br label %148, !dbg !9514

; <label>:148:                                    ; preds = %145, %137
  br label %152, !dbg !9515

; <label>:149:                                    ; preds = %130, %130
  store i32 1000, i32* %18, align 4, !dbg !9516
  %150 = load i32, i32* %19, align 4, !dbg !9517
  %151 = add nsw i32 %150, 1, !dbg !9517
  store i32 %151, i32* %19, align 4, !dbg !9517
  br label %152, !dbg !9518

; <label>:152:                                    ; preds = %130, %149, %148
  br label %153, !dbg !9519

; <label>:153:                                    ; preds = %152, %126
  %154 = load i8**, i8*** %13, align 8, !dbg !9520
  %155 = load i8*, i8** %154, align 8, !dbg !9521
  %156 = load i8, i8* %155, align 1, !dbg !9522
  %157 = sext i8 %156 to i32, !dbg !9522
  switch i32 %157, label %189 [
    i32 98, label %158
    i32 66, label %160
    i32 99, label %162
    i32 69, label %163
    i32 71, label %166
    i32 103, label %166
    i32 107, label %169
    i32 75, label %169
    i32 77, label %172
    i32 109, label %172
    i32 80, label %175
    i32 84, label %178
    i32 116, label %178
    i32 119, label %181
    i32 89, label %183
    i32 90, label %186
  ], !dbg !9523

; <label>:158:                                    ; preds = %153
  %159 = call i32 @bkm_scale(i64* %14, i32 512), !dbg !9524
  store i32 %159, i32* %20, align 4, !dbg !9526
  br label %194, !dbg !9527

; <label>:160:                                    ; preds = %153
  %161 = call i32 @bkm_scale(i64* %14, i32 1024), !dbg !9528
  store i32 %161, i32* %20, align 4, !dbg !9529
  br label %194, !dbg !9530

; <label>:162:                                    ; preds = %153
  store i32 0, i32* %20, align 4, !dbg !9531
  br label %194, !dbg !9532

; <label>:163:                                    ; preds = %153
  %164 = load i32, i32* %18, align 4, !dbg !9533
  %165 = call i32 @bkm_scale_by_power(i64* %14, i32 %164, i32 6), !dbg !9534
  store i32 %165, i32* %20, align 4, !dbg !9535
  br label %194, !dbg !9536

; <label>:166:                                    ; preds = %153, %153
  %167 = load i32, i32* %18, align 4, !dbg !9537
  %168 = call i32 @bkm_scale_by_power(i64* %14, i32 %167, i32 3), !dbg !9538
  store i32 %168, i32* %20, align 4, !dbg !9539
  br label %194, !dbg !9540

; <label>:169:                                    ; preds = %153, %153
  %170 = load i32, i32* %18, align 4, !dbg !9541
  %171 = call i32 @bkm_scale_by_power(i64* %14, i32 %170, i32 1), !dbg !9542
  store i32 %171, i32* %20, align 4, !dbg !9543
  br label %194, !dbg !9544

; <label>:172:                                    ; preds = %153, %153
  %173 = load i32, i32* %18, align 4, !dbg !9545
  %174 = call i32 @bkm_scale_by_power(i64* %14, i32 %173, i32 2), !dbg !9546
  store i32 %174, i32* %20, align 4, !dbg !9547
  br label %194, !dbg !9548

; <label>:175:                                    ; preds = %153
  %176 = load i32, i32* %18, align 4, !dbg !9549
  %177 = call i32 @bkm_scale_by_power(i64* %14, i32 %176, i32 5), !dbg !9550
  store i32 %177, i32* %20, align 4, !dbg !9551
  br label %194, !dbg !9552

; <label>:178:                                    ; preds = %153, %153
  %179 = load i32, i32* %18, align 4, !dbg !9553
  %180 = call i32 @bkm_scale_by_power(i64* %14, i32 %179, i32 4), !dbg !9554
  store i32 %180, i32* %20, align 4, !dbg !9555
  br label %194, !dbg !9556

; <label>:181:                                    ; preds = %153
  %182 = call i32 @bkm_scale(i64* %14, i32 2), !dbg !9557
  store i32 %182, i32* %20, align 4, !dbg !9558
  br label %194, !dbg !9559

; <label>:183:                                    ; preds = %153
  %184 = load i32, i32* %18, align 4, !dbg !9560
  %185 = call i32 @bkm_scale_by_power(i64* %14, i32 %184, i32 8), !dbg !9561
  store i32 %185, i32* %20, align 4, !dbg !9562
  br label %194, !dbg !9563

; <label>:186:                                    ; preds = %153
  %187 = load i32, i32* %18, align 4, !dbg !9564
  %188 = call i32 @bkm_scale_by_power(i64* %14, i32 %187, i32 7), !dbg !9565
  store i32 %188, i32* %20, align 4, !dbg !9566
  br label %194, !dbg !9567

; <label>:189:                                    ; preds = %153
  %190 = load i64, i64* %14, align 8, !dbg !9568
  %191 = load i64*, i64** %10, align 8, !dbg !9569
  store i64 %190, i64* %191, align 8, !dbg !9570
  %192 = load i32, i32* %15, align 4, !dbg !9571
  %193 = or i32 %192, 2, !dbg !9572
  store i32 %193, i32* %6, align 4, !dbg !9573
  br label %215, !dbg !9573

; <label>:194:                                    ; preds = %186, %183, %181, %178, %175, %172, %169, %166, %163, %162, %160, %158
  %195 = load i32, i32* %20, align 4, !dbg !9574
  %196 = load i32, i32* %15, align 4, !dbg !9575
  %197 = or i32 %196, %195, !dbg !9575
  store i32 %197, i32* %15, align 4, !dbg !9575
  %198 = load i32, i32* %19, align 4, !dbg !9576
  %199 = load i8**, i8*** %13, align 8, !dbg !9577
  %200 = load i8*, i8** %199, align 8, !dbg !9578
  %201 = sext i32 %198 to i64, !dbg !9578
  %202 = getelementptr inbounds i8, i8* %200, i64 %201, !dbg !9578
  store i8* %202, i8** %199, align 8, !dbg !9578
  %203 = load i8**, i8*** %13, align 8, !dbg !9579
  %204 = load i8*, i8** %203, align 8, !dbg !9581
  %205 = load i8, i8* %204, align 1, !dbg !9582
  %206 = icmp ne i8 %205, 0, !dbg !9582
  br i1 %206, label %207, label %210, !dbg !9583

; <label>:207:                                    ; preds = %194
  %208 = load i32, i32* %15, align 4, !dbg !9584
  %209 = or i32 %208, 2, !dbg !9584
  store i32 %209, i32* %15, align 4, !dbg !9584
  br label %210, !dbg !9585

; <label>:210:                                    ; preds = %207, %194
  br label %211, !dbg !9586

; <label>:211:                                    ; preds = %210, %107
  %212 = load i64, i64* %14, align 8, !dbg !9587
  %213 = load i64*, i64** %10, align 8, !dbg !9588
  store i64 %212, i64* %213, align 8, !dbg !9589
  %214 = load i32, i32* %15, align 4, !dbg !9590
  store i32 %214, i32* %6, align 4, !dbg !9591
  br label %215, !dbg !9591

; <label>:215:                                    ; preds = %211, %189, %121, %103, %97, %87, %58
  %216 = load i32, i32* %6, align 4, !dbg !9592
  ret i32 %216, !dbg !9592
}

; Function Attrs: noreturn nounwind
declare void @__assert_fail(i8*, i8*, i32, i8*) #4

; Function Attrs: nounwind
declare i64 @strtoul(i8*, i8**, i32) #5

; Function Attrs: noinline nounwind uwtable
define internal i32 @bkm_scale(i64*, i32) #3 !dbg !9593 {
  %3 = alloca i32, align 4
  %4 = alloca i64*, align 8
  %5 = alloca i32, align 4
  store i64* %0, i64** %4, align 8
  call void @llvm.dbg.declare(metadata i64** %4, metadata !9596, metadata !DIExpression()), !dbg !9597
  store i32 %1, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !9598, metadata !DIExpression()), !dbg !9599
  %6 = load i32, i32* %5, align 4, !dbg !9600
  %7 = sext i32 %6 to i64, !dbg !9600
  %8 = udiv i64 -1, %7, !dbg !9602
  %9 = load i64*, i64** %4, align 8, !dbg !9603
  %10 = load i64, i64* %9, align 8, !dbg !9604
  %11 = icmp ult i64 %8, %10, !dbg !9605
  br i1 %11, label %12, label %14, !dbg !9606

; <label>:12:                                     ; preds = %2
  %13 = load i64*, i64** %4, align 8, !dbg !9607
  store i64 -1, i64* %13, align 8, !dbg !9609
  store i32 1, i32* %3, align 4, !dbg !9610
  br label %20, !dbg !9610

; <label>:14:                                     ; preds = %2
  %15 = load i32, i32* %5, align 4, !dbg !9611
  %16 = sext i32 %15 to i64, !dbg !9611
  %17 = load i64*, i64** %4, align 8, !dbg !9612
  %18 = load i64, i64* %17, align 8, !dbg !9613
  %19 = mul i64 %18, %16, !dbg !9613
  store i64 %19, i64* %17, align 8, !dbg !9613
  store i32 0, i32* %3, align 4, !dbg !9614
  br label %20, !dbg !9614

; <label>:20:                                     ; preds = %14, %12
  %21 = load i32, i32* %3, align 4, !dbg !9615
  ret i32 %21, !dbg !9615
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @bkm_scale_by_power(i64*, i32, i32) #3 !dbg !9616 {
  %4 = alloca i64*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  store i64* %0, i64** %4, align 8
  call void @llvm.dbg.declare(metadata i64** %4, metadata !9619, metadata !DIExpression()), !dbg !9620
  store i32 %1, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !9621, metadata !DIExpression()), !dbg !9622
  store i32 %2, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !9623, metadata !DIExpression()), !dbg !9624
  call void @llvm.dbg.declare(metadata i32* %7, metadata !9625, metadata !DIExpression()), !dbg !9626
  store i32 0, i32* %7, align 4, !dbg !9626
  br label %8, !dbg !9627

; <label>:8:                                      ; preds = %12, %3
  %9 = load i32, i32* %6, align 4, !dbg !9628
  %10 = add nsw i32 %9, -1, !dbg !9628
  store i32 %10, i32* %6, align 4, !dbg !9628
  %11 = icmp ne i32 %9, 0, !dbg !9627
  br i1 %11, label %12, label %18, !dbg !9627

; <label>:12:                                     ; preds = %8
  %13 = load i64*, i64** %4, align 8, !dbg !9629
  %14 = load i32, i32* %5, align 4, !dbg !9630
  %15 = call i32 @bkm_scale(i64* %13, i32 %14), !dbg !9631
  %16 = load i32, i32* %7, align 4, !dbg !9632
  %17 = or i32 %16, %15, !dbg !9632
  store i32 %17, i32* %7, align 4, !dbg !9632
  br label %8, !dbg !9627, !llvm.loop !9633

; <label>:18:                                     ; preds = %8
  %19 = load i32, i32* %7, align 4, !dbg !9635
  ret i32 %19, !dbg !9636
}

; Function Attrs: noinline nounwind uwtable
define %struct.FTS* @xfts_open(i8**, i32, i32 (%struct._ftsent**, %struct._ftsent**)*) #3 !dbg !9637 {
  %4 = alloca i8**, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32 (%struct._ftsent**, %struct._ftsent**)*, align 8
  %7 = alloca %struct.FTS*, align 8
  store i8** %0, i8*** %4, align 8
  call void @llvm.dbg.declare(metadata i8*** %4, metadata !9730, metadata !DIExpression()), !dbg !9731
  store i32 %1, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !9732, metadata !DIExpression()), !dbg !9733
  store i32 (%struct._ftsent**, %struct._ftsent**)* %2, i32 (%struct._ftsent**, %struct._ftsent**)** %6, align 8
  call void @llvm.dbg.declare(metadata i32 (%struct._ftsent**, %struct._ftsent**)** %6, metadata !9734, metadata !DIExpression()), !dbg !9735
  call void @llvm.dbg.declare(metadata %struct.FTS** %7, metadata !9736, metadata !DIExpression()), !dbg !9737
  %8 = load i8**, i8*** %4, align 8, !dbg !9738
  %9 = load i32, i32* %5, align 4, !dbg !9739
  %10 = or i32 %9, 512, !dbg !9740
  %11 = load i32 (%struct._ftsent**, %struct._ftsent**)*, i32 (%struct._ftsent**, %struct._ftsent**)** %6, align 8, !dbg !9741
  %12 = call %struct.FTS* @fts_open(i8** %8, i32 %10, i32 (%struct._ftsent**, %struct._ftsent**)* %11), !dbg !9742
  store %struct.FTS* %12, %struct.FTS** %7, align 8, !dbg !9737
  %13 = load %struct.FTS*, %struct.FTS** %7, align 8, !dbg !9743
  %14 = icmp eq %struct.FTS* %13, null, !dbg !9745
  br i1 %14, label %15, label %22, !dbg !9746

; <label>:15:                                     ; preds = %3
  %16 = call i32* @__errno_location() #14, !dbg !9747
  %17 = load i32, i32* %16, align 4, !dbg !9747
  %18 = icmp ne i32 %17, 22, !dbg !9747
  br i1 %18, label %19, label %20, !dbg !9751

; <label>:19:                                     ; preds = %15
  br label %21, !dbg !9751

; <label>:20:                                     ; preds = %15
  call void @__assert_fail(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.195, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.1.196, i32 0, i32 0), i32 41, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @__PRETTY_FUNCTION__.xfts_open, i32 0, i32 0)) #11, !dbg !9747
  unreachable, !dbg !9747

; <label>:21:                                     ; preds = %19
  call void @xalloc_die() #13, !dbg !9752
  unreachable, !dbg !9752

; <label>:22:                                     ; preds = %3
  %23 = load %struct.FTS*, %struct.FTS** %7, align 8, !dbg !9753
  ret %struct.FTS* %23, !dbg !9754
}

; Function Attrs: noinline nounwind uwtable
define zeroext i1 @cycle_warning_required(%struct.FTS*, %struct._ftsent*) #3 !dbg !9755 {
  %3 = alloca %struct.FTS*, align 8
  %4 = alloca %struct._ftsent*, align 8
  store %struct.FTS* %0, %struct.FTS** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.FTS** %3, metadata !9760, metadata !DIExpression()), !dbg !9761
  store %struct._ftsent* %1, %struct._ftsent** %4, align 8
  call void @llvm.dbg.declare(metadata %struct._ftsent** %4, metadata !9762, metadata !DIExpression()), !dbg !9763
  %5 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !9764
  %6 = getelementptr inbounds %struct.FTS, %struct.FTS* %5, i32 0, i32 10, !dbg !9764
  %7 = load i32, i32* %6, align 8, !dbg !9764
  %8 = and i32 %7, 16, !dbg !9764
  %9 = icmp ne i32 %8, 0, !dbg !9764
  br i1 %9, label %10, label %16, !dbg !9765

; <label>:10:                                     ; preds = %2
  %11 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !9766
  %12 = getelementptr inbounds %struct.FTS, %struct.FTS* %11, i32 0, i32 10, !dbg !9766
  %13 = load i32, i32* %12, align 8, !dbg !9766
  %14 = and i32 %13, 1, !dbg !9766
  %15 = icmp ne i32 %14, 0, !dbg !9766
  br i1 %15, label %16, label %35, !dbg !9767

; <label>:16:                                     ; preds = %10, %2
  %17 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !9768
  %18 = getelementptr inbounds %struct.FTS, %struct.FTS* %17, i32 0, i32 10, !dbg !9768
  %19 = load i32, i32* %18, align 8, !dbg !9768
  %20 = and i32 %19, 16, !dbg !9768
  %21 = icmp ne i32 %20, 0, !dbg !9768
  br i1 %21, label %22, label %33, !dbg !9769

; <label>:22:                                     ; preds = %16
  %23 = load %struct.FTS*, %struct.FTS** %3, align 8, !dbg !9770
  %24 = getelementptr inbounds %struct.FTS, %struct.FTS* %23, i32 0, i32 10, !dbg !9770
  %25 = load i32, i32* %24, align 8, !dbg !9770
  %26 = and i32 %25, 1, !dbg !9770
  %27 = icmp ne i32 %26, 0, !dbg !9770
  br i1 %27, label %28, label %33, !dbg !9771

; <label>:28:                                     ; preds = %22
  %29 = load %struct._ftsent*, %struct._ftsent** %4, align 8, !dbg !9772
  %30 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %29, i32 0, i32 11, !dbg !9773
  %31 = load i64, i64* %30, align 8, !dbg !9773
  %32 = icmp ne i64 %31, 0, !dbg !9774
  br label %33

; <label>:33:                                     ; preds = %28, %22, %16
  %34 = phi i1 [ false, %22 ], [ false, %16 ], [ %32, %28 ]
  br label %35, !dbg !9767

; <label>:35:                                     ; preds = %33, %10
  %36 = phi i1 [ true, %10 ], [ %34, %33 ]
  ret i1 %36, !dbg !9775
}

; Function Attrs: noinline noreturn nounwind uwtable
define void @xalloc_die() #0 !dbg !9776 {
  %1 = load volatile i32, i32* @exit_failure, align 4, !dbg !9777
  call void (i32, i32, i8*, ...) @error(i32 %1, i32 0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.201, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.1.202, i32 0, i32 0)), !dbg !9778
  call void @abort() #11, !dbg !9779
  unreachable, !dbg !9779
                                                  ; No predecessors!
  unreachable, !dbg !9780
}

; Function Attrs: noinline nounwind uwtable
define i32 @set_cloexec_flag(i32, i1 zeroext) #3 !dbg !9781 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8, align 1
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  store i32 %0, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !9784, metadata !DIExpression()), !dbg !9785
  %8 = zext i1 %1 to i8
  store i8 %8, i8* %5, align 1
  call void @llvm.dbg.declare(metadata i8* %5, metadata !9786, metadata !DIExpression()), !dbg !9787
  call void @llvm.dbg.declare(metadata i32* %6, metadata !9788, metadata !DIExpression()), !dbg !9789
  %9 = load i32, i32* %4, align 4, !dbg !9790
  %10 = call i32 (i32, i32, ...) @fcntl(i32 %9, i32 1, i32 0), !dbg !9791
  store i32 %10, i32* %6, align 4, !dbg !9789
  %11 = load i32, i32* %6, align 4, !dbg !9792
  %12 = icmp sle i32 0, %11, !dbg !9794
  br i1 %12, label %13, label %34, !dbg !9795

; <label>:13:                                     ; preds = %2
  call void @llvm.dbg.declare(metadata i32* %7, metadata !9796, metadata !DIExpression()), !dbg !9798
  %14 = load i8, i8* %5, align 1, !dbg !9799
  %15 = trunc i8 %14 to i1, !dbg !9799
  br i1 %15, label %16, label %19, !dbg !9799

; <label>:16:                                     ; preds = %13
  %17 = load i32, i32* %6, align 4, !dbg !9800
  %18 = or i32 %17, 1, !dbg !9801
  br label %22, !dbg !9799

; <label>:19:                                     ; preds = %13
  %20 = load i32, i32* %6, align 4, !dbg !9802
  %21 = and i32 %20, -2, !dbg !9803
  br label %22, !dbg !9799

; <label>:22:                                     ; preds = %19, %16
  %23 = phi i32 [ %18, %16 ], [ %21, %19 ], !dbg !9799
  store i32 %23, i32* %7, align 4, !dbg !9798
  %24 = load i32, i32* %6, align 4, !dbg !9804
  %25 = load i32, i32* %7, align 4, !dbg !9806
  %26 = icmp eq i32 %24, %25, !dbg !9807
  br i1 %26, label %32, label %27, !dbg !9808

; <label>:27:                                     ; preds = %22
  %28 = load i32, i32* %4, align 4, !dbg !9809
  %29 = load i32, i32* %7, align 4, !dbg !9810
  %30 = call i32 (i32, i32, ...) @fcntl(i32 %28, i32 2, i32 %29), !dbg !9811
  %31 = icmp ne i32 %30, -1, !dbg !9812
  br i1 %31, label %32, label %33, !dbg !9813

; <label>:32:                                     ; preds = %27, %22
  store i32 0, i32* %3, align 4, !dbg !9814
  br label %35, !dbg !9814

; <label>:33:                                     ; preds = %27
  br label %34, !dbg !9815

; <label>:34:                                     ; preds = %33, %2
  store i32 -1, i32* %3, align 4, !dbg !9816
  br label %35, !dbg !9816

; <label>:35:                                     ; preds = %34, %32
  %36 = load i32, i32* %3, align 4, !dbg !9817
  ret i32 %36, !dbg !9817
}

declare i32 @fcntl(i32, i32, ...) #2

; Function Attrs: noinline nounwind uwtable
define i32 @dup_cloexec(i32) #3 !dbg !9818 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !9821, metadata !DIExpression()), !dbg !9822
  call void @llvm.dbg.declare(metadata i32* %3, metadata !9823, metadata !DIExpression()), !dbg !9824
  %4 = load i32, i32* %2, align 4, !dbg !9825
  %5 = call i32 (i32, i32, ...) @fcntl(i32 %4, i32 1030, i32 0), !dbg !9826
  store i32 %5, i32* %3, align 4, !dbg !9827
  %6 = load i32, i32* %3, align 4, !dbg !9828
  ret i32 %6, !dbg !9829
}

; Function Attrs: noinline nounwind uwtable
define i32 @close_stream(%struct._IO_FILE*) #3 !dbg !9830 {
  %2 = alloca i32, align 4
  %3 = alloca %struct._IO_FILE*, align 8
  %4 = alloca i8, align 1
  %5 = alloca i8, align 1
  %6 = alloca i8, align 1
  store %struct._IO_FILE* %0, %struct._IO_FILE** %3, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %3, metadata !9873, metadata !DIExpression()), !dbg !9874
  call void @llvm.dbg.declare(metadata i8* %4, metadata !9875, metadata !DIExpression()), !dbg !9876
  %7 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8, !dbg !9877
  %8 = call i64 @__fpending(%struct._IO_FILE* %7) #8, !dbg !9878
  %9 = icmp ne i64 %8, 0, !dbg !9879
  %10 = zext i1 %9 to i8, !dbg !9876
  store i8 %10, i8* %4, align 1, !dbg !9876
  call void @llvm.dbg.declare(metadata i8* %5, metadata !9880, metadata !DIExpression()), !dbg !9881
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8, !dbg !9882
  %12 = call i32 @ferror_unlocked(%struct._IO_FILE* %11) #8, !dbg !9882
  %13 = icmp ne i32 %12, 0, !dbg !9883
  %14 = zext i1 %13 to i8, !dbg !9881
  store i8 %14, i8* %5, align 1, !dbg !9881
  call void @llvm.dbg.declare(metadata i8* %6, metadata !9884, metadata !DIExpression()), !dbg !9885
  %15 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8, !dbg !9886
  %16 = call i32 @fclose(%struct._IO_FILE* %15), !dbg !9887
  %17 = icmp ne i32 %16, 0, !dbg !9888
  %18 = zext i1 %17 to i8, !dbg !9885
  store i8 %18, i8* %6, align 1, !dbg !9885
  %19 = load i8, i8* %5, align 1, !dbg !9889
  %20 = trunc i8 %19 to i1, !dbg !9889
  br i1 %20, label %31, label %21, !dbg !9891

; <label>:21:                                     ; preds = %1
  %22 = load i8, i8* %6, align 1, !dbg !9892
  %23 = trunc i8 %22 to i1, !dbg !9892
  br i1 %23, label %24, label %37, !dbg !9893

; <label>:24:                                     ; preds = %21
  %25 = load i8, i8* %4, align 1, !dbg !9894
  %26 = trunc i8 %25 to i1, !dbg !9894
  br i1 %26, label %31, label %27, !dbg !9895

; <label>:27:                                     ; preds = %24
  %28 = call i32* @__errno_location() #14, !dbg !9896
  %29 = load i32, i32* %28, align 4, !dbg !9896
  %30 = icmp ne i32 %29, 9, !dbg !9897
  br i1 %30, label %31, label %37, !dbg !9898

; <label>:31:                                     ; preds = %27, %24, %1
  %32 = load i8, i8* %6, align 1, !dbg !9899
  %33 = trunc i8 %32 to i1, !dbg !9899
  br i1 %33, label %36, label %34, !dbg !9902

; <label>:34:                                     ; preds = %31
  %35 = call i32* @__errno_location() #14, !dbg !9903
  store i32 0, i32* %35, align 4, !dbg !9904
  br label %36, !dbg !9903

; <label>:36:                                     ; preds = %34, %31
  store i32 -1, i32* %2, align 4, !dbg !9905
  br label %38, !dbg !9905

; <label>:37:                                     ; preds = %27, %21
  store i32 0, i32* %2, align 4, !dbg !9906
  br label %38, !dbg !9906

; <label>:38:                                     ; preds = %37, %36
  %39 = load i32, i32* %2, align 4, !dbg !9907
  ret i32 %39, !dbg !9907
}

; Function Attrs: nounwind
declare i64 @__fpending(%struct._IO_FILE*) #5

; Function Attrs: nounwind
declare i32 @ferror_unlocked(%struct._IO_FILE*) #5

declare i32 @fclose(%struct._IO_FILE*) #2

; Function Attrs: noinline nounwind uwtable
define void @cycle_check_init(%struct.cycle_check_state*) #3 !dbg !9908 {
  %2 = alloca %struct.cycle_check_state*, align 8
  store %struct.cycle_check_state* %0, %struct.cycle_check_state** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.cycle_check_state** %2, metadata !9921, metadata !DIExpression()), !dbg !9922
  %3 = load %struct.cycle_check_state*, %struct.cycle_check_state** %2, align 8, !dbg !9923
  %4 = getelementptr inbounds %struct.cycle_check_state, %struct.cycle_check_state* %3, i32 0, i32 1, !dbg !9924
  store i64 0, i64* %4, align 8, !dbg !9925
  %5 = load %struct.cycle_check_state*, %struct.cycle_check_state** %2, align 8, !dbg !9926
  %6 = getelementptr inbounds %struct.cycle_check_state, %struct.cycle_check_state* %5, i32 0, i32 2, !dbg !9927
  store i32 9827862, i32* %6, align 8, !dbg !9928
  ret void, !dbg !9929
}

; Function Attrs: noinline nounwind uwtable
define zeroext i1 @cycle_check(%struct.cycle_check_state*, %struct.stat*) #3 !dbg !9930 {
  %3 = alloca i1, align 1
  %4 = alloca %struct.cycle_check_state*, align 8
  %5 = alloca %struct.stat*, align 8
  store %struct.cycle_check_state* %0, %struct.cycle_check_state** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.cycle_check_state** %4, metadata !9956, metadata !DIExpression()), !dbg !9957
  store %struct.stat* %1, %struct.stat** %5, align 8
  call void @llvm.dbg.declare(metadata %struct.stat** %5, metadata !9958, metadata !DIExpression()), !dbg !9959
  %6 = load %struct.cycle_check_state*, %struct.cycle_check_state** %4, align 8, !dbg !9960
  %7 = getelementptr inbounds %struct.cycle_check_state, %struct.cycle_check_state* %6, i32 0, i32 2, !dbg !9960
  %8 = load i32, i32* %7, align 8, !dbg !9960
  %9 = icmp eq i32 %8, 9827862, !dbg !9960
  br i1 %9, label %10, label %11, !dbg !9963

; <label>:10:                                     ; preds = %2
  br label %12, !dbg !9963

; <label>:11:                                     ; preds = %2
  call void @__assert_fail(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.211, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.1.212, i32 0, i32 0), i32 60, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @__PRETTY_FUNCTION__.cycle_check, i32 0, i32 0)) #11, !dbg !9960
  unreachable, !dbg !9960

; <label>:12:                                     ; preds = %10
  %13 = load %struct.cycle_check_state*, %struct.cycle_check_state** %4, align 8, !dbg !9964
  %14 = getelementptr inbounds %struct.cycle_check_state, %struct.cycle_check_state* %13, i32 0, i32 1, !dbg !9966
  %15 = load i64, i64* %14, align 8, !dbg !9966
  %16 = icmp ne i64 %15, 0, !dbg !9964
  br i1 %16, label %17, label %36, !dbg !9967

; <label>:17:                                     ; preds = %12
  %18 = load %struct.stat*, %struct.stat** %5, align 8, !dbg !9968
  %19 = getelementptr inbounds %struct.stat, %struct.stat* %18, i32 0, i32 1, !dbg !9968
  %20 = load i64, i64* %19, align 8, !dbg !9968
  %21 = load %struct.cycle_check_state*, %struct.cycle_check_state** %4, align 8, !dbg !9968
  %22 = getelementptr inbounds %struct.cycle_check_state, %struct.cycle_check_state* %21, i32 0, i32 0, !dbg !9968
  %23 = getelementptr inbounds %struct.dev_ino, %struct.dev_ino* %22, i32 0, i32 0, !dbg !9968
  %24 = load i64, i64* %23, align 8, !dbg !9968
  %25 = icmp eq i64 %20, %24, !dbg !9968
  br i1 %25, label %26, label %36, !dbg !9968

; <label>:26:                                     ; preds = %17
  %27 = load %struct.stat*, %struct.stat** %5, align 8, !dbg !9968
  %28 = getelementptr inbounds %struct.stat, %struct.stat* %27, i32 0, i32 0, !dbg !9968
  %29 = load i64, i64* %28, align 8, !dbg !9968
  %30 = load %struct.cycle_check_state*, %struct.cycle_check_state** %4, align 8, !dbg !9968
  %31 = getelementptr inbounds %struct.cycle_check_state, %struct.cycle_check_state* %30, i32 0, i32 0, !dbg !9968
  %32 = getelementptr inbounds %struct.dev_ino, %struct.dev_ino* %31, i32 0, i32 1, !dbg !9968
  %33 = load i64, i64* %32, align 8, !dbg !9968
  %34 = icmp eq i64 %29, %33, !dbg !9968
  br i1 %34, label %35, label %36, !dbg !9969

; <label>:35:                                     ; preds = %26
  store i1 true, i1* %3, align 1, !dbg !9970
  br label %62, !dbg !9970

; <label>:36:                                     ; preds = %26, %17, %12
  %37 = load %struct.cycle_check_state*, %struct.cycle_check_state** %4, align 8, !dbg !9971
  %38 = getelementptr inbounds %struct.cycle_check_state, %struct.cycle_check_state* %37, i32 0, i32 1, !dbg !9973
  %39 = load i64, i64* %38, align 8, !dbg !9974
  %40 = add i64 %39, 1, !dbg !9974
  store i64 %40, i64* %38, align 8, !dbg !9974
  %41 = call zeroext i1 @is_zero_or_power_of_two(i64 %40), !dbg !9975
  br i1 %41, label %42, label %61, !dbg !9976

; <label>:42:                                     ; preds = %36
  %43 = load %struct.cycle_check_state*, %struct.cycle_check_state** %4, align 8, !dbg !9977
  %44 = getelementptr inbounds %struct.cycle_check_state, %struct.cycle_check_state* %43, i32 0, i32 1, !dbg !9980
  %45 = load i64, i64* %44, align 8, !dbg !9980
  %46 = icmp eq i64 %45, 0, !dbg !9981
  br i1 %46, label %47, label %48, !dbg !9982

; <label>:47:                                     ; preds = %42
  store i1 true, i1* %3, align 1, !dbg !9983
  br label %62, !dbg !9983

; <label>:48:                                     ; preds = %42
  %49 = load %struct.stat*, %struct.stat** %5, align 8, !dbg !9984
  %50 = getelementptr inbounds %struct.stat, %struct.stat* %49, i32 0, i32 0, !dbg !9985
  %51 = load i64, i64* %50, align 8, !dbg !9985
  %52 = load %struct.cycle_check_state*, %struct.cycle_check_state** %4, align 8, !dbg !9986
  %53 = getelementptr inbounds %struct.cycle_check_state, %struct.cycle_check_state* %52, i32 0, i32 0, !dbg !9987
  %54 = getelementptr inbounds %struct.dev_ino, %struct.dev_ino* %53, i32 0, i32 1, !dbg !9988
  store i64 %51, i64* %54, align 8, !dbg !9989
  %55 = load %struct.stat*, %struct.stat** %5, align 8, !dbg !9990
  %56 = getelementptr inbounds %struct.stat, %struct.stat* %55, i32 0, i32 1, !dbg !9991
  %57 = load i64, i64* %56, align 8, !dbg !9991
  %58 = load %struct.cycle_check_state*, %struct.cycle_check_state** %4, align 8, !dbg !9992
  %59 = getelementptr inbounds %struct.cycle_check_state, %struct.cycle_check_state* %58, i32 0, i32 0, !dbg !9993
  %60 = getelementptr inbounds %struct.dev_ino, %struct.dev_ino* %59, i32 0, i32 0, !dbg !9994
  store i64 %57, i64* %60, align 8, !dbg !9995
  br label %61, !dbg !9996

; <label>:61:                                     ; preds = %48, %36
  store i1 false, i1* %3, align 1, !dbg !9997
  br label %62, !dbg !9997

; <label>:62:                                     ; preds = %61, %47, %35
  %63 = load i1, i1* %3, align 1, !dbg !9998
  ret i1 %63, !dbg !9998
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i1 @is_zero_or_power_of_two(i64) #3 !dbg !9999 {
  %2 = alloca i64, align 8
  store i64 %0, i64* %2, align 8
  call void @llvm.dbg.declare(metadata i64* %2, metadata !10002, metadata !DIExpression()), !dbg !10003
  %3 = load i64, i64* %2, align 8, !dbg !10004
  %4 = load i64, i64* %2, align 8, !dbg !10005
  %5 = sub i64 %4, 1, !dbg !10006
  %6 = and i64 %3, %5, !dbg !10007
  %7 = icmp eq i64 %6, 0, !dbg !10008
  ret i1 %7, !dbg !10009
}

; Function Attrs: noinline nounwind uwtable
define i32 @dup_safer(i32) #3 !dbg !10010 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !10011, metadata !DIExpression()), !dbg !10012
  %3 = load i32, i32* %2, align 4, !dbg !10013
  %4 = call i32 (i32, i32, ...) @fcntl(i32 %3, i32 0, i32 3), !dbg !10014
  ret i32 %4, !dbg !10015
}

; Function Attrs: noinline nounwind uwtable
define i32 @dup_safer_flag(i32, i32) #3 !dbg !10016 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  store i32 %0, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !10019, metadata !DIExpression()), !dbg !10020
  store i32 %1, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !10021, metadata !DIExpression()), !dbg !10022
  %6 = load i32, i32* %5, align 4, !dbg !10023
  %7 = and i32 %6, 524288, !dbg !10025
  %8 = icmp ne i32 %7, 0, !dbg !10025
  br i1 %8, label %9, label %12, !dbg !10026

; <label>:9:                                      ; preds = %2
  %10 = load i32, i32* %4, align 4, !dbg !10027
  %11 = call i32 (i32, i32, ...) @fcntl(i32 %10, i32 1030, i32 3), !dbg !10029
  store i32 %11, i32* %3, align 4, !dbg !10030
  br label %15, !dbg !10030

; <label>:12:                                     ; preds = %2
  %13 = load i32, i32* %4, align 4, !dbg !10031
  %14 = call i32 @dup_safer(i32 %13), !dbg !10032
  store i32 %14, i32* %3, align 4, !dbg !10033
  br label %15, !dbg !10033

; <label>:15:                                     ; preds = %12, %9
  %16 = load i32, i32* %3, align 4, !dbg !10034
  ret i32 %16, !dbg !10034
}

; Function Attrs: noinline nounwind uwtable
define i32 @fd_safer(i32) #3 !dbg !10035 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !10036, metadata !DIExpression()), !dbg !10037
  %5 = load i32, i32* %2, align 4, !dbg !10038
  %6 = icmp sle i32 0, %5, !dbg !10040
  br i1 %6, label %7, label %20, !dbg !10041

; <label>:7:                                      ; preds = %1
  %8 = load i32, i32* %2, align 4, !dbg !10042
  %9 = icmp sle i32 %8, 2, !dbg !10043
  br i1 %9, label %10, label %20, !dbg !10044

; <label>:10:                                     ; preds = %7
  call void @llvm.dbg.declare(metadata i32* %3, metadata !10045, metadata !DIExpression()), !dbg !10047
  %11 = load i32, i32* %2, align 4, !dbg !10048
  %12 = call i32 @dup_safer(i32 %11), !dbg !10049
  store i32 %12, i32* %3, align 4, !dbg !10047
  call void @llvm.dbg.declare(metadata i32* %4, metadata !10050, metadata !DIExpression()), !dbg !10051
  %13 = call i32* @__errno_location() #14, !dbg !10052
  %14 = load i32, i32* %13, align 4, !dbg !10052
  store i32 %14, i32* %4, align 4, !dbg !10051
  %15 = load i32, i32* %2, align 4, !dbg !10053
  %16 = call i32 @close(i32 %15), !dbg !10054
  %17 = load i32, i32* %4, align 4, !dbg !10055
  %18 = call i32* @__errno_location() #14, !dbg !10056
  store i32 %17, i32* %18, align 4, !dbg !10057
  %19 = load i32, i32* %3, align 4, !dbg !10058
  store i32 %19, i32* %2, align 4, !dbg !10059
  br label %20, !dbg !10060

; <label>:20:                                     ; preds = %10, %7, %1
  %21 = load i32, i32* %2, align 4, !dbg !10061
  ret i32 %21, !dbg !10062
}

; Function Attrs: noinline nounwind uwtable
define i32 @fd_safer_flag(i32, i32) #3 !dbg !10063 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !10064, metadata !DIExpression()), !dbg !10065
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !10066, metadata !DIExpression()), !dbg !10067
  %7 = load i32, i32* %3, align 4, !dbg !10068
  %8 = icmp sle i32 0, %7, !dbg !10070
  br i1 %8, label %9, label %23, !dbg !10071

; <label>:9:                                      ; preds = %2
  %10 = load i32, i32* %3, align 4, !dbg !10072
  %11 = icmp sle i32 %10, 2, !dbg !10073
  br i1 %11, label %12, label %23, !dbg !10074

; <label>:12:                                     ; preds = %9
  call void @llvm.dbg.declare(metadata i32* %5, metadata !10075, metadata !DIExpression()), !dbg !10077
  %13 = load i32, i32* %3, align 4, !dbg !10078
  %14 = load i32, i32* %4, align 4, !dbg !10079
  %15 = call i32 @dup_safer_flag(i32 %13, i32 %14), !dbg !10080
  store i32 %15, i32* %5, align 4, !dbg !10077
  call void @llvm.dbg.declare(metadata i32* %6, metadata !10081, metadata !DIExpression()), !dbg !10082
  %16 = call i32* @__errno_location() #14, !dbg !10083
  %17 = load i32, i32* %16, align 4, !dbg !10083
  store i32 %17, i32* %6, align 4, !dbg !10082
  %18 = load i32, i32* %3, align 4, !dbg !10084
  %19 = call i32 @close(i32 %18), !dbg !10085
  %20 = load i32, i32* %6, align 4, !dbg !10086
  %21 = call i32* @__errno_location() #14, !dbg !10087
  store i32 %20, i32* %21, align 4, !dbg !10088
  %22 = load i32, i32* %5, align 4, !dbg !10089
  store i32 %22, i32* %3, align 4, !dbg !10090
  br label %23, !dbg !10091

; <label>:23:                                     ; preds = %12, %9, %2
  %24 = load i32, i32* %3, align 4, !dbg !10092
  ret i32 %24, !dbg !10093
}

; Function Attrs: noinline nounwind uwtable
define %struct.__dirstream* @rpl_fdopendir(i32) #3 !dbg !10094 {
  %2 = alloca %struct.__dirstream*, align 8
  %3 = alloca i32, align 4
  %4 = alloca %struct.stat, align 8
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !10097, metadata !DIExpression()), !dbg !10098
  call void @llvm.dbg.declare(metadata %struct.stat* %4, metadata !10099, metadata !DIExpression()), !dbg !10121
  %5 = load i32, i32* %3, align 4, !dbg !10122
  %6 = call i32 @fstat(i32 %5, %struct.stat* %4) #8, !dbg !10124
  %7 = icmp ne i32 %6, 0, !dbg !10124
  br i1 %7, label %8, label %9, !dbg !10125

; <label>:8:                                      ; preds = %1
  store %struct.__dirstream* null, %struct.__dirstream** %2, align 8, !dbg !10126
  br label %19, !dbg !10126

; <label>:9:                                      ; preds = %1
  %10 = getelementptr inbounds %struct.stat, %struct.stat* %4, i32 0, i32 3, !dbg !10127
  %11 = load i32, i32* %10, align 8, !dbg !10127
  %12 = and i32 %11, 61440, !dbg !10127
  %13 = icmp eq i32 %12, 16384, !dbg !10127
  br i1 %13, label %16, label %14, !dbg !10129

; <label>:14:                                     ; preds = %9
  %15 = call i32* @__errno_location() #14, !dbg !10130
  store i32 20, i32* %15, align 4, !dbg !10132
  store %struct.__dirstream* null, %struct.__dirstream** %2, align 8, !dbg !10133
  br label %19, !dbg !10133

; <label>:16:                                     ; preds = %9
  %17 = load i32, i32* %3, align 4, !dbg !10134
  %18 = call %struct.__dirstream* @fdopendir(i32 %17), !dbg !10135
  store %struct.__dirstream* %18, %struct.__dirstream** %2, align 8, !dbg !10136
  br label %19, !dbg !10136

; <label>:19:                                     ; preds = %16, %14, %8
  %20 = load %struct.__dirstream*, %struct.__dirstream** %2, align 8, !dbg !10137
  ret %struct.__dirstream* %20, !dbg !10137
}

declare %struct.__dirstream* @fdopendir(i32) #2

attributes #0 = { noinline noreturn nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { argmemonly nounwind }
attributes #11 = { noreturn nounwind }
attributes #12 = { nounwind readonly }
attributes #13 = { noreturn }
attributes #14 = { nounwind readnone }

!llvm.dbg.cu = !{!2, !212, !54, !59, !233, !65, !240, !73, !82, !243, !88, !410, !416, !418, !420, !422, !107, !425, !427, !196, !430, !442, !446, !449, !451, !453, !455, !457, !459, !461}
!llvm.ident = !{!463, !463, !463, !463, !463, !463, !463, !463, !463, !463, !463, !463, !463, !463, !463, !463, !463, !463, !463, !463, !463, !463, !463, !463, !463, !463, !463, !463, !463, !463}
!llvm.module.flags = !{!464, !465, !466}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "long_options", scope: !2, file: !3, line: 54, type: !40, isLocal: true, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 6.0.0 (tags/RELEASE_600/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !11, globals: !17)
!3 = !DIFile(filename: "../../src/chown.c", directory: "/home/ma481/Downloads/Chisel/chisel-bench/benchmark/chown-8.2/original/obj-llvm/src")
!4 = !{!5}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "Verbosity", file: !6, line: 31, size: 32, elements: !7)
!6 = !DIFile(filename: "../../src/chown-core.h", directory: "/home/ma481/Downloads/Chisel/chisel-bench/benchmark/chown-8.2/original/obj-llvm/src")
!7 = !{!8, !9, !10}
!8 = !DIEnumerator(name: "V_high", value: 0)
!9 = !DIEnumerator(name: "V_changes_only", value: 1)
!10 = !DIEnumerator(name: "V_off", value: 2)
!11 = !{!12, !15, !16}
!12 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13, size: 64)
!13 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !14)
!14 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!15 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14, size: 64)
!16 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!17 = !{!18, !38, !0}
!18 = !DIGlobalVariableExpression(var: !19, expr: !DIExpression())
!19 = distinct !DIGlobalVariable(name: "dev_ino_buf", scope: !20, file: !3, line: 315, type: !26, isLocal: true, isDefinition: true)
!20 = distinct !DISubprogram(name: "main", scope: !3, file: !3, line: 155, type: !21, isLocal: false, isDefinition: true, scopeLine: 156, flags: DIFlagPrototyped, isOptimized: false, unit: !2, variables: !25)
!21 = !DISubroutineType(types: !22)
!22 = !{!23, !23, !24}
!23 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!24 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15, size: 64)
!25 = !{}
!26 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_ino", file: !27, line: 7, size: 128, elements: !28)
!27 = !DIFile(filename: "../../lib/dev-ino.h", directory: "/home/ma481/Downloads/Chisel/chisel-bench/benchmark/chown-8.2/original/obj-llvm/src")
!28 = !{!29, !35}
!29 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !26, file: !27, line: 9, baseType: !30, size: 64)
!30 = !DIDerivedType(tag: DW_TAG_typedef, name: "ino_t", file: !31, line: 48, baseType: !32)
!31 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/sys/types.h", directory: "/home/ma481/Downloads/Chisel/chisel-bench/benchmark/chown-8.2/original/obj-llvm/src")
!32 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ino_t", file: !33, line: 136, baseType: !34)
!33 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "/home/ma481/Downloads/Chisel/chisel-bench/benchmark/chown-8.2/original/obj-llvm/src")
!34 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!35 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !26, file: !27, line: 10, baseType: !36, size: 64, offset: 64)
!36 = !DIDerivedType(tag: DW_TAG_typedef, name: "dev_t", file: !31, line: 60, baseType: !37)
!37 = !DIDerivedType(tag: DW_TAG_typedef, name: "__dev_t", file: !33, line: 133, baseType: !34)
!38 = !DIGlobalVariableExpression(var: !39, expr: !DIExpression())
!39 = distinct !DIGlobalVariable(name: "reference_file", scope: !2, file: !3, line: 41, type: !15, isLocal: true, isDefinition: true)
!40 = !DICompositeType(tag: DW_TAG_array_type, baseType: !41, size: 3584, elements: !50)
!41 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !42)
!42 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "option", file: !43, line: 50, size: 256, elements: !44)
!43 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/getopt_ext.h", directory: "/home/ma481/Downloads/Chisel/chisel-bench/benchmark/chown-8.2/original/obj-llvm/src")
!44 = !{!45, !46, !47, !49}
!45 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !42, file: !43, line: 52, baseType: !12, size: 64)
!46 = !DIDerivedType(tag: DW_TAG_member, name: "has_arg", scope: !42, file: !43, line: 55, baseType: !23, size: 32, offset: 64)
!47 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !42, file: !43, line: 56, baseType: !48, size: 64, offset: 128)
!48 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !23, size: 64)
!49 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !42, file: !43, line: 57, baseType: !23, size: 32, offset: 192)
!50 = !{!51}
!51 = !DISubrange(count: 14)
!52 = !DIGlobalVariableExpression(var: !53, expr: !DIExpression())
!53 = distinct !DIGlobalVariable(name: "Version", scope: !54, file: !55, line: 2, type: !12, isLocal: false, isDefinition: true)
!54 = distinct !DICompileUnit(language: DW_LANG_C99, file: !55, producer: "clang version 6.0.0 (tags/RELEASE_600/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !25, globals: !56)
!55 = !DIFile(filename: "version.c", directory: "/home/ma481/Downloads/Chisel/chisel-bench/benchmark/chown-8.2/original/obj-llvm/src")
!56 = !{!52}
!57 = !DIGlobalVariableExpression(var: !58, expr: !DIExpression())
!58 = distinct !DIGlobalVariable(name: "program_name", scope: !59, file: !60, line: 33, type: !12, isLocal: false, isDefinition: true)
!59 = distinct !DICompileUnit(language: DW_LANG_C99, file: !60, producer: "clang version 6.0.0 (tags/RELEASE_600/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !25, retainedTypes: !61, globals: !62)
!60 = !DIFile(filename: "../../lib/progname.c", directory: "/home/ma481/Downloads/Chisel/chisel-bench/benchmark/chown-8.2/original/obj-llvm/lib")
!61 = !{!16, !15}
!62 = !{!57}
!63 = !DIGlobalVariableExpression(var: !64, expr: !DIExpression())
!64 = distinct !DIGlobalVariable(name: "version_etc_copyright", scope: !65, file: !66, line: 26, type: !68, isLocal: false, isDefinition: true)
!65 = distinct !DICompileUnit(language: DW_LANG_C99, file: !66, producer: "clang version 6.0.0 (tags/RELEASE_600/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !25, globals: !67)
!66 = !DIFile(filename: "../../lib/version-etc-fsf.c", directory: "/home/ma481/Downloads/Chisel/chisel-bench/benchmark/chown-8.2/original/obj-llvm/lib")
!67 = !{!63}
!68 = !DICompositeType(tag: DW_TAG_array_type, baseType: !13, size: 376, elements: !69)
!69 = !{!70}
!70 = !DISubrange(count: 47)
!71 = !DIGlobalVariableExpression(var: !72, expr: !DIExpression())
!72 = distinct !DIGlobalVariable(name: "file_name", scope: !73, file: !74, line: 36, type: !12, isLocal: true, isDefinition: true)
!73 = distinct !DICompileUnit(language: DW_LANG_C99, file: !74, producer: "clang version 6.0.0 (tags/RELEASE_600/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !25, retainedTypes: !75, globals: !76)
!74 = !DIFile(filename: "../../lib/closeout.c", directory: "/home/ma481/Downloads/Chisel/chisel-bench/benchmark/chown-8.2/original/obj-llvm/lib")
!75 = !{!12}
!76 = !{!71, !77}
!77 = !DIGlobalVariableExpression(var: !78, expr: !DIExpression())
!78 = distinct !DIGlobalVariable(name: "ignore_EPIPE", scope: !73, file: !74, line: 46, type: !79, isLocal: true, isDefinition: true)
!79 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!80 = !DIGlobalVariableExpression(var: !81, expr: !DIExpression())
!81 = distinct !DIGlobalVariable(name: "exit_failure", scope: !82, file: !83, line: 24, type: !85, isLocal: false, isDefinition: true)
!82 = distinct !DICompileUnit(language: DW_LANG_C99, file: !83, producer: "clang version 6.0.0 (tags/RELEASE_600/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !25, globals: !84)
!83 = !DIFile(filename: "../../lib/exitfail.c", directory: "/home/ma481/Downloads/Chisel/chisel-bench/benchmark/chown-8.2/original/obj-llvm/lib")
!84 = !{!80}
!85 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !23)
!86 = !DIGlobalVariableExpression(var: !87, expr: !DIExpression())
!87 = distinct !DIGlobalVariable(name: "default_tuning", scope: !88, file: !89, line: 131, type: !94, isLocal: true, isDefinition: true)
!88 = distinct !DICompileUnit(language: DW_LANG_C99, file: !89, producer: "clang version 6.0.0 (tags/RELEASE_600/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !25, retainedTypes: !90, globals: !93)
!89 = !DIFile(filename: "../../lib/hash.c", directory: "/home/ma481/Downloads/Chisel/chisel-bench/benchmark/chown-8.2/original/obj-llvm/lib")
!90 = !{!34, !16, !91}
!91 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !92, line: 62, baseType: !34)
!92 = !DIFile(filename: "/home/ma481/Downloads/LLVM_6.0/lib/clang/6.0.0/include/stddef.h", directory: "/home/ma481/Downloads/Chisel/chisel-bench/benchmark/chown-8.2/original/obj-llvm/lib")
!93 = !{!86}
!94 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !95)
!95 = !DIDerivedType(tag: DW_TAG_typedef, name: "Hash_tuning", file: !96, line: 57, baseType: !97)
!96 = !DIFile(filename: "../../lib/hash.h", directory: "/home/ma481/Downloads/Chisel/chisel-bench/benchmark/chown-8.2/original/obj-llvm/lib")
!97 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hash_tuning", file: !96, line: 45, size: 160, elements: !98)
!98 = !{!99, !101, !102, !103, !104}
!99 = !DIDerivedType(tag: DW_TAG_member, name: "shrink_threshold", scope: !97, file: !96, line: 50, baseType: !100, size: 32)
!100 = !DIBasicType(name: "float", size: 32, encoding: DW_ATE_float)
!101 = !DIDerivedType(tag: DW_TAG_member, name: "shrink_factor", scope: !97, file: !96, line: 51, baseType: !100, size: 32, offset: 32)
!102 = !DIDerivedType(tag: DW_TAG_member, name: "growth_threshold", scope: !97, file: !96, line: 52, baseType: !100, size: 32, offset: 64)
!103 = !DIDerivedType(tag: DW_TAG_member, name: "growth_factor", scope: !97, file: !96, line: 53, baseType: !100, size: 32, offset: 96)
!104 = !DIDerivedType(tag: DW_TAG_member, name: "is_n_buckets", scope: !97, file: !96, line: 54, baseType: !79, size: 8, offset: 128)
!105 = !DIGlobalVariableExpression(var: !106, expr: !DIExpression())
!106 = distinct !DIGlobalVariable(name: "quoting_style_args", scope: !107, file: !108, line: 66, type: !178, isLocal: false, isDefinition: true)
!107 = distinct !DICompileUnit(language: DW_LANG_C99, file: !108, producer: "clang version 6.0.0 (tags/RELEASE_600/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !109, retainedTypes: !142, globals: !144)
!108 = !DIFile(filename: "../../lib/quotearg.c", directory: "/home/ma481/Downloads/Chisel/chisel-bench/benchmark/chown-8.2/original/obj-llvm/lib")
!109 = !{!110, !122, !127}
!110 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "quoting_style", file: !111, line: 32, size: 32, elements: !112)
!111 = !DIFile(filename: "../../lib/quotearg.h", directory: "/home/ma481/Downloads/Chisel/chisel-bench/benchmark/chown-8.2/original/obj-llvm/lib")
!112 = !{!113, !114, !115, !116, !117, !118, !119, !120, !121}
!113 = !DIEnumerator(name: "literal_quoting_style", value: 0)
!114 = !DIEnumerator(name: "shell_quoting_style", value: 1)
!115 = !DIEnumerator(name: "shell_always_quoting_style", value: 2)
!116 = !DIEnumerator(name: "c_quoting_style", value: 3)
!117 = !DIEnumerator(name: "c_maybe_quoting_style", value: 4)
!118 = !DIEnumerator(name: "escape_quoting_style", value: 5)
!119 = !DIEnumerator(name: "locale_quoting_style", value: 6)
!120 = !DIEnumerator(name: "clocale_quoting_style", value: 7)
!121 = !DIEnumerator(name: "custom_quoting_style", value: 8)
!122 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "quoting_flags", file: !111, line: 209, size: 32, elements: !123)
!123 = !{!124, !125, !126}
!124 = !DIEnumerator(name: "QA_ELIDE_NULL_BYTES", value: 1)
!125 = !DIEnumerator(name: "QA_ELIDE_OUTER_QUOTES", value: 2)
!126 = !DIEnumerator(name: "QA_SPLIT_TRIGRAPHS", value: 4)
!127 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !128, line: 46, size: 32, elements: !129)
!128 = !DIFile(filename: "/usr/include/ctype.h", directory: "/home/ma481/Downloads/Chisel/chisel-bench/benchmark/chown-8.2/original/obj-llvm/lib")
!129 = !{!130, !131, !132, !133, !134, !135, !136, !137, !138, !139, !140, !141}
!130 = !DIEnumerator(name: "_ISupper", value: 256)
!131 = !DIEnumerator(name: "_ISlower", value: 512)
!132 = !DIEnumerator(name: "_ISalpha", value: 1024)
!133 = !DIEnumerator(name: "_ISdigit", value: 2048)
!134 = !DIEnumerator(name: "_ISxdigit", value: 4096)
!135 = !DIEnumerator(name: "_ISspace", value: 8192)
!136 = !DIEnumerator(name: "_ISprint", value: 16384)
!137 = !DIEnumerator(name: "_ISgraph", value: 32768)
!138 = !DIEnumerator(name: "_ISblank", value: 1)
!139 = !DIEnumerator(name: "_IScntrl", value: 2)
!140 = !DIEnumerator(name: "_ISpunct", value: 4)
!141 = !DIEnumerator(name: "_ISalnum", value: 8)
!142 = !{!91, !23, !143, !12}
!143 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!144 = !{!105, !145, !151, !162, !167, !174, !176}
!145 = !DIGlobalVariableExpression(var: !146, expr: !DIExpression())
!146 = distinct !DIGlobalVariable(name: "quoting_style_vals", scope: !107, file: !108, line: 80, type: !147, isLocal: false, isDefinition: true)
!147 = !DICompositeType(tag: DW_TAG_array_type, baseType: !148, size: 256, elements: !149)
!148 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !110)
!149 = !{!150}
!150 = !DISubrange(count: 8)
!151 = !DIGlobalVariableExpression(var: !152, expr: !DIExpression())
!152 = distinct !DIGlobalVariable(name: "default_quoting_options", scope: !107, file: !108, line: 93, type: !153, isLocal: true, isDefinition: true)
!153 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quoting_options", file: !108, line: 46, size: 448, elements: !154)
!154 = !{!155, !156, !157, !160, !161}
!155 = !DIDerivedType(tag: DW_TAG_member, name: "style", scope: !153, file: !108, line: 49, baseType: !110, size: 32)
!156 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !153, file: !108, line: 52, baseType: !23, size: 32, offset: 32)
!157 = !DIDerivedType(tag: DW_TAG_member, name: "quote_these_too", scope: !153, file: !108, line: 56, baseType: !158, size: 256, offset: 64)
!158 = !DICompositeType(tag: DW_TAG_array_type, baseType: !159, size: 256, elements: !149)
!159 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!160 = !DIDerivedType(tag: DW_TAG_member, name: "left_quote", scope: !153, file: !108, line: 59, baseType: !12, size: 64, offset: 320)
!161 = !DIDerivedType(tag: DW_TAG_member, name: "right_quote", scope: !153, file: !108, line: 62, baseType: !12, size: 64, offset: 384)
!162 = !DIGlobalVariableExpression(var: !163, expr: !DIExpression())
!163 = distinct !DIGlobalVariable(name: "slot0", scope: !107, file: !108, line: 686, type: !164, isLocal: true, isDefinition: true)
!164 = !DICompositeType(tag: DW_TAG_array_type, baseType: !14, size: 2048, elements: !165)
!165 = !{!166}
!166 = !DISubrange(count: 256)
!167 = !DIGlobalVariableExpression(var: !168, expr: !DIExpression())
!168 = distinct !DIGlobalVariable(name: "slotvec", scope: !107, file: !108, line: 689, type: !169, isLocal: true, isDefinition: true)
!169 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !170, size: 64)
!170 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "slotvec", file: !108, line: 678, size: 128, elements: !171)
!171 = !{!172, !173}
!172 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !170, file: !108, line: 680, baseType: !91, size: 64)
!173 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !170, file: !108, line: 681, baseType: !15, size: 64, offset: 64)
!174 = !DIGlobalVariableExpression(var: !175, expr: !DIExpression())
!175 = distinct !DIGlobalVariable(name: "nslots", scope: !107, file: !108, line: 687, type: !159, isLocal: true, isDefinition: true)
!176 = !DIGlobalVariableExpression(var: !177, expr: !DIExpression())
!177 = distinct !DIGlobalVariable(name: "slotvec0", scope: !107, file: !108, line: 688, type: !170, isLocal: true, isDefinition: true)
!178 = !DICompositeType(tag: DW_TAG_array_type, baseType: !179, size: 576, elements: !180)
!179 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12)
!180 = !{!181}
!181 = !DISubrange(count: 9)
!182 = !DIGlobalVariableExpression(var: !183, expr: !DIExpression())
!183 = distinct !DIGlobalVariable(name: "E_bad_spec", scope: !184, file: !185, line: 108, type: !12, isLocal: true, isDefinition: true)
!184 = distinct !DISubprogram(name: "parse_with_separator", scope: !185, file: !185, line: 102, type: !186, isLocal: true, isDefinition: true, scopeLine: 105, flags: DIFlagPrototyped, isOptimized: false, unit: !196, variables: !25)
!185 = !DIFile(filename: "../../lib/userspec.c", directory: "/home/ma481/Downloads/Chisel/chisel-bench/benchmark/chown-8.2/original/obj-llvm/lib")
!186 = !DISubroutineType(types: !187)
!187 = !{!12, !12, !12, !188, !193, !24, !24}
!188 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !189, size: 64)
!189 = !DIDerivedType(tag: DW_TAG_typedef, name: "uid_t", file: !190, line: 80, baseType: !191)
!190 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/sys/types.h", directory: "/home/ma481/Downloads/Chisel/chisel-bench/benchmark/chown-8.2/original/obj-llvm/lib")
!191 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uid_t", file: !192, line: 134, baseType: !159)
!192 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "/home/ma481/Downloads/Chisel/chisel-bench/benchmark/chown-8.2/original/obj-llvm/lib")
!193 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !194, size: 64)
!194 = !DIDerivedType(tag: DW_TAG_typedef, name: "gid_t", file: !190, line: 65, baseType: !195)
!195 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gid_t", file: !192, line: 135, baseType: !159)
!196 = distinct !DICompileUnit(language: DW_LANG_C99, file: !185, producer: "clang version 6.0.0 (tags/RELEASE_600/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !197, retainedTypes: !206, globals: !207)
!197 = !{!198}
!198 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "strtol_error", file: !199, line: 26, size: 32, elements: !200)
!199 = !DIFile(filename: "../../lib/xstrtol.h", directory: "/home/ma481/Downloads/Chisel/chisel-bench/benchmark/chown-8.2/original/obj-llvm/lib")
!200 = !{!201, !202, !203, !204, !205}
!201 = !DIEnumerator(name: "LONGINT_OK", value: 0)
!202 = !DIEnumerator(name: "LONGINT_OVERFLOW", value: 1)
!203 = !DIEnumerator(name: "LONGINT_INVALID_SUFFIX_CHAR", value: 2)
!204 = !DIEnumerator(name: "LONGINT_INVALID_SUFFIX_CHAR_WITH_OVERFLOW", value: 3)
!205 = !DIEnumerator(name: "LONGINT_INVALID", value: 4)
!206 = !{!16, !189, !194, !12}
!207 = !{!208, !210, !182}
!208 = !DIGlobalVariableExpression(var: !209, expr: !DIExpression())
!209 = distinct !DIGlobalVariable(name: "E_invalid_user", scope: !184, file: !185, line: 106, type: !12, isLocal: true, isDefinition: true)
!210 = !DIGlobalVariableExpression(var: !211, expr: !DIExpression())
!211 = distinct !DIGlobalVariable(name: "E_invalid_group", scope: !184, file: !185, line: 107, type: !12, isLocal: true, isDefinition: true)
!212 = distinct !DICompileUnit(language: DW_LANG_C99, file: !213, producer: "clang version 6.0.0 (tags/RELEASE_600/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !214, retainedTypes: !228)
!213 = !DIFile(filename: "../../src/chown-core.c", directory: "/home/ma481/Downloads/Chisel/chisel-bench/benchmark/chown-8.2/original/obj-llvm/src")
!214 = !{!5, !215, !222}
!215 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "RCH_status", file: !213, line: 39, size: 32, elements: !216)
!216 = !{!217, !218, !219, !220, !221}
!217 = !DIEnumerator(name: "RC_ok", value: 2)
!218 = !DIEnumerator(name: "RC_excluded", value: 3)
!219 = !DIEnumerator(name: "RC_inode_changed", value: 4)
!220 = !DIEnumerator(name: "RC_do_ordinary_chown", value: 5)
!221 = !DIEnumerator(name: "RC_error", value: 6)
!222 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "Change_status", file: !6, line: 23, size: 32, elements: !223)
!223 = !{!224, !225, !226, !227}
!224 = !DIEnumerator(name: "CH_NOT_APPLIED", value: 1)
!225 = !DIEnumerator(name: "CH_SUCCEEDED", value: 2)
!226 = !DIEnumerator(name: "CH_FAILED", value: 3)
!227 = !DIEnumerator(name: "CH_NO_CHANGE_REQUESTED", value: 4)
!228 = !{!229, !231, !16, !12}
!229 = !DIDerivedType(tag: DW_TAG_typedef, name: "uid_t", file: !31, line: 80, baseType: !230)
!230 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uid_t", file: !33, line: 134, baseType: !159)
!231 = !DIDerivedType(tag: DW_TAG_typedef, name: "gid_t", file: !31, line: 65, baseType: !232)
!232 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gid_t", file: !33, line: 135, baseType: !159)
!233 = distinct !DICompileUnit(language: DW_LANG_C99, file: !234, producer: "clang version 6.0.0 (tags/RELEASE_600/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !235, retainedTypes: !239)
!234 = !DIFile(filename: "../../lib/version-etc.c", directory: "/home/ma481/Downloads/Chisel/chisel-bench/benchmark/chown-8.2/original/obj-llvm/lib")
!235 = !{!236}
!236 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !234, line: 41, size: 32, elements: !237)
!237 = !{!238}
!238 = !DIEnumerator(name: "COPYRIGHT_YEAR", value: 2009)
!239 = !{!12, !16}
!240 = distinct !DICompileUnit(language: DW_LANG_C99, file: !241, producer: "clang version 6.0.0 (tags/RELEASE_600/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !25, retainedTypes: !242)
!241 = !DIFile(filename: "../../lib/basename-lgpl.c", directory: "/home/ma481/Downloads/Chisel/chisel-bench/benchmark/chown-8.2/original/obj-llvm/lib")
!242 = !{!15}
!243 = distinct !DICompileUnit(language: DW_LANG_C99, file: !244, producer: "clang version 6.0.0 (tags/RELEASE_600/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !245, retainedTypes: !400)
!244 = !DIFile(filename: "../../lib/fts.c", directory: "/home/ma481/Downloads/Chisel/chisel-bench/benchmark/chown-8.2/original/obj-llvm/lib")
!245 = !{!246, !250, !382, !385, !397}
!246 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "Fts_stat", file: !244, line: 148, size: 32, elements: !247)
!247 = !{!248, !249}
!248 = !DIEnumerator(name: "FTS_NO_STAT_REQUIRED", value: 1)
!249 = !DIEnumerator(name: "FTS_STAT_REQUIRED", value: 2)
!250 = !DICompositeType(tag: DW_TAG_enumeration_type, scope: !252, file: !251, line: 54, size: 32, elements: !380)
!251 = !DIFile(filename: "../../lib/fts-cycle.c", directory: "/home/ma481/Downloads/Chisel/chisel-bench/benchmark/chown-8.2/original/obj-llvm/lib")
!252 = distinct !DISubprogram(name: "setup_dir", scope: !251, file: !251, line: 50, type: !253, isLocal: true, isDefinition: true, scopeLine: 51, flags: DIFlagPrototyped, isOptimized: false, unit: !243, variables: !25)
!253 = !DISubroutineType(types: !254)
!254 = !{!79, !255}
!255 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !256, size: 64)
!256 = !DIDerivedType(tag: DW_TAG_typedef, name: "FTS", file: !257, line: 183, baseType: !258)
!257 = !DIFile(filename: "../../lib/fts_.h", directory: "/home/ma481/Downloads/Chisel/chisel-bench/benchmark/chown-8.2/original/obj-llvm/lib")
!258 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !257, line: 68, size: 1024, elements: !259)
!259 = !{!260, !325, !326, !328, !330, !331, !332, !333, !334, !335, !342, !343, !346, !367}
!260 = !DIDerivedType(tag: DW_TAG_member, name: "fts_cur", scope: !258, file: !257, line: 69, baseType: !261, size: 64)
!261 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !262, size: 64)
!262 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ftsent", file: !257, line: 185, size: 2112, elements: !263)
!263 = !{!264, !265, !266, !267, !269, !270, !271, !272, !273, !274, !275, !276, !278, !279, !282, !283, !284, !285, !323}
!264 = !DIDerivedType(tag: DW_TAG_member, name: "fts_cycle", scope: !262, file: !257, line: 186, baseType: !261, size: 64)
!265 = !DIDerivedType(tag: DW_TAG_member, name: "fts_parent", scope: !262, file: !257, line: 187, baseType: !261, size: 64, offset: 64)
!266 = !DIDerivedType(tag: DW_TAG_member, name: "fts_link", scope: !262, file: !257, line: 188, baseType: !261, size: 64, offset: 128)
!267 = !DIDerivedType(tag: DW_TAG_member, name: "fts_number", scope: !262, file: !257, line: 189, baseType: !268, size: 64, offset: 192)
!268 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!269 = !DIDerivedType(tag: DW_TAG_member, name: "fts_pointer", scope: !262, file: !257, line: 190, baseType: !16, size: 64, offset: 256)
!270 = !DIDerivedType(tag: DW_TAG_member, name: "fts_accpath", scope: !262, file: !257, line: 191, baseType: !15, size: 64, offset: 320)
!271 = !DIDerivedType(tag: DW_TAG_member, name: "fts_path", scope: !262, file: !257, line: 192, baseType: !15, size: 64, offset: 384)
!272 = !DIDerivedType(tag: DW_TAG_member, name: "fts_errno", scope: !262, file: !257, line: 193, baseType: !23, size: 32, offset: 448)
!273 = !DIDerivedType(tag: DW_TAG_member, name: "fts_symfd", scope: !262, file: !257, line: 194, baseType: !23, size: 32, offset: 480)
!274 = !DIDerivedType(tag: DW_TAG_member, name: "fts_pathlen", scope: !262, file: !257, line: 195, baseType: !91, size: 64, offset: 512)
!275 = !DIDerivedType(tag: DW_TAG_member, name: "fts_fts", scope: !262, file: !257, line: 197, baseType: !255, size: 64, offset: 576)
!276 = !DIDerivedType(tag: DW_TAG_member, name: "fts_level", scope: !262, file: !257, line: 201, baseType: !277, size: 64, offset: 640)
!277 = !DIDerivedType(tag: DW_TAG_typedef, name: "ptrdiff_t", file: !92, line: 51, baseType: !268)
!278 = !DIDerivedType(tag: DW_TAG_member, name: "fts_namelen", scope: !262, file: !257, line: 203, baseType: !91, size: 64, offset: 704)
!279 = !DIDerivedType(tag: DW_TAG_member, name: "fts_n_dirs_remaining", scope: !262, file: !257, line: 204, baseType: !280, size: 64, offset: 768)
!280 = !DIDerivedType(tag: DW_TAG_typedef, name: "nlink_t", file: !190, line: 75, baseType: !281)
!281 = !DIDerivedType(tag: DW_TAG_typedef, name: "__nlink_t", file: !192, line: 139, baseType: !34)
!282 = !DIDerivedType(tag: DW_TAG_member, name: "fts_info", scope: !262, file: !257, line: 220, baseType: !143, size: 16, offset: 832)
!283 = !DIDerivedType(tag: DW_TAG_member, name: "fts_flags", scope: !262, file: !257, line: 224, baseType: !143, size: 16, offset: 848)
!284 = !DIDerivedType(tag: DW_TAG_member, name: "fts_instr", scope: !262, file: !257, line: 230, baseType: !143, size: 16, offset: 864)
!285 = !DIDerivedType(tag: DW_TAG_member, name: "fts_statp", scope: !262, file: !257, line: 232, baseType: !286, size: 1152, offset: 896)
!286 = !DICompositeType(tag: DW_TAG_array_type, baseType: !287, size: 1152, elements: !321)
!287 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !288, line: 46, size: 1152, elements: !289)
!288 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stat.h", directory: "/home/ma481/Downloads/Chisel/chisel-bench/benchmark/chown-8.2/original/obj-llvm/lib")
!289 = !{!290, !292, !294, !295, !297, !298, !299, !300, !301, !303, !305, !307, !315, !316, !317}
!290 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !287, file: !288, line: 48, baseType: !291, size: 64)
!291 = !DIDerivedType(tag: DW_TAG_typedef, name: "__dev_t", file: !192, line: 133, baseType: !34)
!292 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !287, file: !288, line: 53, baseType: !293, size: 64, offset: 64)
!293 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ino_t", file: !192, line: 136, baseType: !34)
!294 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !287, file: !288, line: 61, baseType: !281, size: 64, offset: 128)
!295 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !287, file: !288, line: 62, baseType: !296, size: 32, offset: 192)
!296 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mode_t", file: !192, line: 138, baseType: !159)
!297 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !287, file: !288, line: 64, baseType: !191, size: 32, offset: 224)
!298 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !287, file: !288, line: 65, baseType: !195, size: 32, offset: 256)
!299 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !287, file: !288, line: 67, baseType: !23, size: 32, offset: 288)
!300 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !287, file: !288, line: 69, baseType: !291, size: 64, offset: 320)
!301 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !287, file: !288, line: 74, baseType: !302, size: 64, offset: 384)
!302 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off_t", file: !192, line: 140, baseType: !268)
!303 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !287, file: !288, line: 78, baseType: !304, size: 64, offset: 448)
!304 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blksize_t", file: !192, line: 162, baseType: !268)
!305 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !287, file: !288, line: 80, baseType: !306, size: 64, offset: 512)
!306 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blkcnt_t", file: !192, line: 167, baseType: !268)
!307 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !287, file: !288, line: 91, baseType: !308, size: 128, offset: 576)
!308 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !309, line: 8, size: 128, elements: !310)
!309 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/struct_timespec.h", directory: "/home/ma481/Downloads/Chisel/chisel-bench/benchmark/chown-8.2/original/obj-llvm/lib")
!310 = !{!311, !313}
!311 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !308, file: !309, line: 10, baseType: !312, size: 64)
!312 = !DIDerivedType(tag: DW_TAG_typedef, name: "__time_t", file: !192, line: 148, baseType: !268)
!313 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !308, file: !309, line: 11, baseType: !314, size: 64, offset: 64)
!314 = !DIDerivedType(tag: DW_TAG_typedef, name: "__syscall_slong_t", file: !192, line: 184, baseType: !268)
!315 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !287, file: !288, line: 92, baseType: !308, size: 128, offset: 704)
!316 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !287, file: !288, line: 93, baseType: !308, size: 128, offset: 832)
!317 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !287, file: !288, line: 106, baseType: !318, size: 192, offset: 960)
!318 = !DICompositeType(tag: DW_TAG_array_type, baseType: !314, size: 192, elements: !319)
!319 = !{!320}
!320 = !DISubrange(count: 3)
!321 = !{!322}
!322 = !DISubrange(count: 1)
!323 = !DIDerivedType(tag: DW_TAG_member, name: "fts_name", scope: !262, file: !257, line: 233, baseType: !324, size: 8, offset: 2048)
!324 = !DICompositeType(tag: DW_TAG_array_type, baseType: !14, size: 8, elements: !321)
!325 = !DIDerivedType(tag: DW_TAG_member, name: "fts_child", scope: !258, file: !257, line: 70, baseType: !261, size: 64, offset: 64)
!326 = !DIDerivedType(tag: DW_TAG_member, name: "fts_array", scope: !258, file: !257, line: 71, baseType: !327, size: 64, offset: 128)
!327 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !261, size: 64)
!328 = !DIDerivedType(tag: DW_TAG_member, name: "fts_dev", scope: !258, file: !257, line: 72, baseType: !329, size: 64, offset: 192)
!329 = !DIDerivedType(tag: DW_TAG_typedef, name: "dev_t", file: !190, line: 60, baseType: !291)
!330 = !DIDerivedType(tag: DW_TAG_member, name: "fts_path", scope: !258, file: !257, line: 73, baseType: !15, size: 64, offset: 256)
!331 = !DIDerivedType(tag: DW_TAG_member, name: "fts_rfd", scope: !258, file: !257, line: 74, baseType: !23, size: 32, offset: 320)
!332 = !DIDerivedType(tag: DW_TAG_member, name: "fts_cwd_fd", scope: !258, file: !257, line: 75, baseType: !23, size: 32, offset: 352)
!333 = !DIDerivedType(tag: DW_TAG_member, name: "fts_pathlen", scope: !258, file: !257, line: 77, baseType: !91, size: 64, offset: 384)
!334 = !DIDerivedType(tag: DW_TAG_member, name: "fts_nitems", scope: !258, file: !257, line: 78, baseType: !91, size: 64, offset: 448)
!335 = !DIDerivedType(tag: DW_TAG_member, name: "fts_compar", scope: !258, file: !257, line: 79, baseType: !336, size: 64, offset: 512)
!336 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !337, size: 64)
!337 = !DISubroutineType(types: !338)
!338 = !{!23, !339, !339}
!339 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !340, size: 64)
!340 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !341, size: 64)
!341 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !262)
!342 = !DIDerivedType(tag: DW_TAG_member, name: "fts_options", scope: !258, file: !257, line: 144, baseType: !23, size: 32, offset: 576)
!343 = !DIDerivedType(tag: DW_TAG_member, name: "fts_leaf_optimization_works_ht", scope: !258, file: !257, line: 154, baseType: !344, size: 64, offset: 640)
!344 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !345, size: 64)
!345 = !DICompositeType(tag: DW_TAG_structure_type, name: "hash_table", file: !257, line: 154, flags: DIFlagFwdDecl)
!346 = !DIDerivedType(tag: DW_TAG_member, name: "fts_cycle", scope: !258, file: !257, line: 176, baseType: !347, size: 64, offset: 704)
!347 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !258, file: !257, line: 156, size: 64, elements: !348)
!348 = !{!349, !350}
!349 = !DIDerivedType(tag: DW_TAG_member, name: "ht", scope: !347, file: !257, line: 169, baseType: !344, size: 64)
!350 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !347, file: !257, line: 175, baseType: !351, size: 64)
!351 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !352, size: 64)
!352 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cycle_check_state", file: !353, line: 28, size: 256, elements: !354)
!353 = !DIFile(filename: "../../lib/cycle-check.h", directory: "/home/ma481/Downloads/Chisel/chisel-bench/benchmark/chown-8.2/original/obj-llvm/lib")
!354 = !{!355, !362, !366}
!355 = !DIDerivedType(tag: DW_TAG_member, name: "dev_ino", scope: !352, file: !353, line: 30, baseType: !356, size: 128)
!356 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_ino", file: !357, line: 7, size: 128, elements: !358)
!357 = !DIFile(filename: "../../lib/dev-ino.h", directory: "/home/ma481/Downloads/Chisel/chisel-bench/benchmark/chown-8.2/original/obj-llvm/lib")
!358 = !{!359, !361}
!359 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !356, file: !357, line: 9, baseType: !360, size: 64)
!360 = !DIDerivedType(tag: DW_TAG_typedef, name: "ino_t", file: !190, line: 48, baseType: !293)
!361 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !356, file: !357, line: 10, baseType: !329, size: 64, offset: 64)
!362 = !DIDerivedType(tag: DW_TAG_member, name: "chdir_counter", scope: !352, file: !353, line: 31, baseType: !363, size: 64, offset: 128)
!363 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !364, line: 112, baseType: !365)
!364 = !DIFile(filename: "/usr/include/stdint.h", directory: "/home/ma481/Downloads/Chisel/chisel-bench/benchmark/chown-8.2/original/obj-llvm/lib")
!365 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uintmax_t", file: !192, line: 62, baseType: !34)
!366 = !DIDerivedType(tag: DW_TAG_member, name: "magic", scope: !352, file: !353, line: 32, baseType: !23, size: 32, offset: 192)
!367 = !DIDerivedType(tag: DW_TAG_member, name: "fts_fd_ring", scope: !258, file: !257, line: 182, baseType: !368, size: 256, offset: 768)
!368 = !DIDerivedType(tag: DW_TAG_typedef, name: "I_ring", file: !369, line: 39, baseType: !370)
!369 = !DIFile(filename: "../../lib/i-ring.h", directory: "/home/ma481/Downloads/Chisel/chisel-bench/benchmark/chown-8.2/original/obj-llvm/lib")
!370 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "I_ring", file: !369, line: 31, size: 256, elements: !371)
!371 = !{!372, !376, !377, !378, !379}
!372 = !DIDerivedType(tag: DW_TAG_member, name: "ir_data", scope: !370, file: !369, line: 33, baseType: !373, size: 128)
!373 = !DICompositeType(tag: DW_TAG_array_type, baseType: !23, size: 128, elements: !374)
!374 = !{!375}
!375 = !DISubrange(count: 4)
!376 = !DIDerivedType(tag: DW_TAG_member, name: "ir_default_val", scope: !370, file: !369, line: 34, baseType: !23, size: 32, offset: 128)
!377 = !DIDerivedType(tag: DW_TAG_member, name: "ir_front", scope: !370, file: !369, line: 35, baseType: !159, size: 32, offset: 160)
!378 = !DIDerivedType(tag: DW_TAG_member, name: "ir_back", scope: !370, file: !369, line: 36, baseType: !159, size: 32, offset: 192)
!379 = !DIDerivedType(tag: DW_TAG_member, name: "ir_empty", scope: !370, file: !369, line: 37, baseType: !79, size: 8, offset: 224)
!380 = !{!381}
!381 = !DIEnumerator(name: "HT_INITIAL_SIZE", value: 31)
!382 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !244, line: 732, size: 32, elements: !383)
!383 = !{!384}
!384 = !DIEnumerator(name: "LCO_HT_INITIAL_SIZE", value: 13)
!385 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !386, line: 97, size: 32, elements: !387)
!386 = !DIFile(filename: "/usr/include/dirent.h", directory: "/home/ma481/Downloads/Chisel/chisel-bench/benchmark/chown-8.2/original/obj-llvm/lib")
!387 = !{!388, !389, !390, !391, !392, !393, !394, !395, !396}
!388 = !DIEnumerator(name: "DT_UNKNOWN", value: 0)
!389 = !DIEnumerator(name: "DT_FIFO", value: 1)
!390 = !DIEnumerator(name: "DT_CHR", value: 2)
!391 = !DIEnumerator(name: "DT_DIR", value: 4)
!392 = !DIEnumerator(name: "DT_BLK", value: 6)
!393 = !DIEnumerator(name: "DT_REG", value: 8)
!394 = !DIEnumerator(name: "DT_LNK", value: 10)
!395 = !DIEnumerator(name: "DT_SOCK", value: 12)
!396 = !DIEnumerator(name: "DT_WHT", value: 14)
!397 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !244, line: 143, size: 32, elements: !398)
!398 = !{!399}
!399 = !DIEnumerator(name: "_FTS_INODE_SORT_DIR_ENTRIES_THRESHOLD", value: 10000)
!400 = !{!16, !363, !15, !268, !401, !406}
!401 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !402, size: 64)
!402 = !DISubroutineType(types: !403)
!403 = !{!23, !404, !404}
!404 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !405, size: 64)
!405 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!406 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !407, size: 64)
!407 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !408, size: 64)
!408 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !409)
!409 = !DIDerivedType(tag: DW_TAG_typedef, name: "FTSENT", file: !257, line: 234, baseType: !262)
!410 = distinct !DICompileUnit(language: DW_LANG_C99, file: !411, producer: "clang version 6.0.0 (tags/RELEASE_600/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !412)
!411 = !DIFile(filename: "../../lib/i-ring.c", directory: "/home/ma481/Downloads/Chisel/chisel-bench/benchmark/chown-8.2/original/obj-llvm/lib")
!412 = !{!413}
!413 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !369, line: 20, size: 32, elements: !414)
!414 = !{!415}
!415 = !DIEnumerator(name: "I_RING_SIZE", value: 4)
!416 = distinct !DICompileUnit(language: DW_LANG_C99, file: !417, producer: "clang version 6.0.0 (tags/RELEASE_600/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !25)
!417 = !DIFile(filename: "../../lib/open-safer.c", directory: "/home/ma481/Downloads/Chisel/chisel-bench/benchmark/chown-8.2/original/obj-llvm/lib")
!418 = distinct !DICompileUnit(language: DW_LANG_C99, file: !419, producer: "clang version 6.0.0 (tags/RELEASE_600/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !25)
!419 = !DIFile(filename: "../../lib/openat-safer.c", directory: "/home/ma481/Downloads/Chisel/chisel-bench/benchmark/chown-8.2/original/obj-llvm/lib")
!420 = distinct !DICompileUnit(language: DW_LANG_C99, file: !421, producer: "clang version 6.0.0 (tags/RELEASE_600/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !25)
!421 = !DIFile(filename: "../../lib/opendir-safer.c", directory: "/home/ma481/Downloads/Chisel/chisel-bench/benchmark/chown-8.2/original/obj-llvm/lib")
!422 = distinct !DICompileUnit(language: DW_LANG_C99, file: !423, producer: "clang version 6.0.0 (tags/RELEASE_600/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !424)
!423 = !DIFile(filename: "../../lib/quote.c", directory: "/home/ma481/Downloads/Chisel/chisel-bench/benchmark/chown-8.2/original/obj-llvm/lib")
!424 = !{!110}
!425 = distinct !DICompileUnit(language: DW_LANG_C99, file: !426, producer: "clang version 6.0.0 (tags/RELEASE_600/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !25)
!426 = !DIFile(filename: "../../lib/root-dev-ino.c", directory: "/home/ma481/Downloads/Chisel/chisel-bench/benchmark/chown-8.2/original/obj-llvm/lib")
!427 = distinct !DICompileUnit(language: DW_LANG_C99, file: !428, producer: "clang version 6.0.0 (tags/RELEASE_600/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !25, retainedTypes: !429)
!428 = !DIFile(filename: "../../lib/umaxtostr.c", directory: "/home/ma481/Downloads/Chisel/chisel-bench/benchmark/chown-8.2/original/obj-llvm/lib")
!429 = !{!363}
!430 = distinct !DICompileUnit(language: DW_LANG_C99, file: !431, producer: "clang version 6.0.0 (tags/RELEASE_600/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !432, retainedTypes: !441)
!431 = !DIFile(filename: "../../lib/xmalloc.c", directory: "/home/ma481/Downloads/Chisel/chisel-bench/benchmark/chown-8.2/original/obj-llvm/lib")
!432 = !{!433}
!433 = !DICompositeType(tag: DW_TAG_enumeration_type, scope: !435, file: !434, line: 207, size: 32, elements: !439)
!434 = !DIFile(filename: "../../lib/xalloc.h", directory: "/home/ma481/Downloads/Chisel/chisel-bench/benchmark/chown-8.2/original/obj-llvm/lib")
!435 = distinct !DISubprogram(name: "x2nrealloc", scope: !434, file: !434, line: 195, type: !436, isLocal: false, isDefinition: true, scopeLine: 196, flags: DIFlagPrototyped, isOptimized: false, unit: !430, variables: !25)
!436 = !DISubroutineType(types: !437)
!437 = !{!16, !16, !438, !91}
!438 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !91, size: 64)
!439 = !{!440}
!440 = !DIEnumerator(name: "DEFAULT_MXFAST", value: 64)
!441 = !{!91, !15}
!442 = distinct !DICompileUnit(language: DW_LANG_C99, file: !443, producer: "clang version 6.0.0 (tags/RELEASE_600/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !444, retainedTypes: !445)
!443 = !DIFile(filename: "../../lib/xstrtoul.c", directory: "/home/ma481/Downloads/Chisel/chisel-bench/benchmark/chown-8.2/original/obj-llvm/lib")
!444 = !{!198, !127}
!445 = !{!23, !143}
!446 = distinct !DICompileUnit(language: DW_LANG_C99, file: !447, producer: "clang version 6.0.0 (tags/RELEASE_600/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !25, retainedTypes: !448)
!447 = !DIFile(filename: "../../lib/xfts.c", directory: "/home/ma481/Downloads/Chisel/chisel-bench/benchmark/chown-8.2/original/obj-llvm/lib")
!448 = !{!16}
!449 = distinct !DICompileUnit(language: DW_LANG_C99, file: !450, producer: "clang version 6.0.0 (tags/RELEASE_600/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !25, retainedTypes: !75)
!450 = !DIFile(filename: "../../lib/xalloc-die.c", directory: "/home/ma481/Downloads/Chisel/chisel-bench/benchmark/chown-8.2/original/obj-llvm/lib")
!451 = distinct !DICompileUnit(language: DW_LANG_C99, file: !452, producer: "clang version 6.0.0 (tags/RELEASE_600/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !25)
!452 = !DIFile(filename: "../../lib/cloexec.c", directory: "/home/ma481/Downloads/Chisel/chisel-bench/benchmark/chown-8.2/original/obj-llvm/lib")
!453 = distinct !DICompileUnit(language: DW_LANG_C99, file: !454, producer: "clang version 6.0.0 (tags/RELEASE_600/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !25)
!454 = !DIFile(filename: "../../lib/close-stream.c", directory: "/home/ma481/Downloads/Chisel/chisel-bench/benchmark/chown-8.2/original/obj-llvm/lib")
!455 = distinct !DICompileUnit(language: DW_LANG_C99, file: !456, producer: "clang version 6.0.0 (tags/RELEASE_600/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !25)
!456 = !DIFile(filename: "../../lib/cycle-check.c", directory: "/home/ma481/Downloads/Chisel/chisel-bench/benchmark/chown-8.2/original/obj-llvm/lib")
!457 = distinct !DICompileUnit(language: DW_LANG_C99, file: !458, producer: "clang version 6.0.0 (tags/RELEASE_600/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !25)
!458 = !DIFile(filename: "../../lib/dup-safer.c", directory: "/home/ma481/Downloads/Chisel/chisel-bench/benchmark/chown-8.2/original/obj-llvm/lib")
!459 = distinct !DICompileUnit(language: DW_LANG_C99, file: !460, producer: "clang version 6.0.0 (tags/RELEASE_600/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !25)
!460 = !DIFile(filename: "../../lib/fd-safer.c", directory: "/home/ma481/Downloads/Chisel/chisel-bench/benchmark/chown-8.2/original/obj-llvm/lib")
!461 = distinct !DICompileUnit(language: DW_LANG_C99, file: !462, producer: "clang version 6.0.0 (tags/RELEASE_600/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !25)
!462 = !DIFile(filename: "../../lib/fdopendir.c", directory: "/home/ma481/Downloads/Chisel/chisel-bench/benchmark/chown-8.2/original/obj-llvm/lib")
!463 = !{!"clang version 6.0.0 (tags/RELEASE_600/final)"}
!464 = !{i32 2, !"Dwarf Version", i32 4}
!465 = !{i32 2, !"Debug Info Version", i32 3}
!466 = !{i32 1, !"wchar_size", i32 4}
!467 = distinct !DISubprogram(name: "usage", scope: !3, file: !3, line: 73, type: !468, isLocal: false, isDefinition: true, scopeLine: 74, flags: DIFlagPrototyped | DIFlagNoReturn, isOptimized: false, unit: !2, variables: !25)
!468 = !DISubroutineType(types: !469)
!469 = !{null, !23}
!470 = !DILocalVariable(name: "status", arg: 1, scope: !467, file: !3, line: 73, type: !23)
!471 = !DILocation(line: 73, column: 12, scope: !467)
!472 = !DILocation(line: 75, column: 7, scope: !473)
!473 = distinct !DILexicalBlock(scope: !467, file: !3, line: 75, column: 7)
!474 = !DILocation(line: 75, column: 14, scope: !473)
!475 = !DILocation(line: 75, column: 7, scope: !467)
!476 = !DILocation(line: 76, column: 14, scope: !473)
!477 = !DILocation(line: 77, column: 14, scope: !473)
!478 = !DILocation(line: 76, column: 5, scope: !473)
!479 = !DILocation(line: 84, column: 15, scope: !480)
!480 = distinct !DILexicalBlock(scope: !473, file: !3, line: 79, column: 5)
!481 = !DILocation(line: 84, column: 29, scope: !480)
!482 = !DILocation(line: 80, column: 7, scope: !480)
!483 = !DILocation(line: 85, column: 7, scope: !480)
!484 = !DILocation(line: 93, column: 7, scope: !480)
!485 = !DILocation(line: 98, column: 7, scope: !480)
!486 = !DILocation(line: 105, column: 7, scope: !480)
!487 = !DILocation(line: 109, column: 7, scope: !480)
!488 = !DILocation(line: 117, column: 7, scope: !480)
!489 = !DILocation(line: 129, column: 7, scope: !480)
!490 = !DILocation(line: 130, column: 7, scope: !480)
!491 = !DILocation(line: 131, column: 7, scope: !480)
!492 = !DILocation(line: 144, column: 15, scope: !480)
!493 = !DILocation(line: 144, column: 29, scope: !480)
!494 = !DILocation(line: 144, column: 43, scope: !480)
!495 = !DILocation(line: 137, column: 7, scope: !480)
!496 = !DILocation(line: 145, column: 7, scope: !480)
!497 = !DILocation(line: 147, column: 9, scope: !467)
!498 = !DILocation(line: 147, column: 3, scope: !467)
!499 = !DILocation(line: 148, column: 1, scope: !467)
!500 = distinct !DISubprogram(name: "emit_ancillary_info", scope: !501, file: !501, line: 586, type: !502, isLocal: true, isDefinition: true, scopeLine: 587, flags: DIFlagPrototyped, isOptimized: false, unit: !2, variables: !25)
!501 = !DIFile(filename: "../../src/system.h", directory: "/home/ma481/Downloads/Chisel/chisel-bench/benchmark/chown-8.2/original/obj-llvm/src")
!502 = !DISubroutineType(types: !503)
!503 = !{null}
!504 = !DILocation(line: 588, column: 58, scope: !500)
!505 = !DILocation(line: 588, column: 42, scope: !500)
!506 = !DILocation(line: 588, column: 3, scope: !500)
!507 = !DILocation(line: 591, column: 3, scope: !500)
!508 = !DILocation(line: 593, column: 3, scope: !500)
!509 = !DILocalVariable(name: "lc_messages", scope: !500, file: !501, line: 597, type: !12)
!510 = !DILocation(line: 597, column: 15, scope: !500)
!511 = !DILocation(line: 597, column: 29, scope: !500)
!512 = !DILocation(line: 598, column: 7, scope: !513)
!513 = distinct !DILexicalBlock(scope: !500, file: !501, line: 598, column: 7)
!514 = !DILocation(line: 598, column: 19, scope: !513)
!515 = !DILocation(line: 598, column: 31, scope: !513)
!516 = !DILocation(line: 598, column: 22, scope: !513)
!517 = !DILocation(line: 598, column: 7, scope: !500)
!518 = !DILocation(line: 606, column: 33, scope: !519)
!519 = distinct !DILexicalBlock(scope: !513, file: !501, line: 599, column: 5)
!520 = !DILocation(line: 606, column: 17, scope: !519)
!521 = !DILocation(line: 604, column: 7, scope: !519)
!522 = !DILocation(line: 607, column: 5, scope: !519)
!523 = !DILocation(line: 609, column: 66, scope: !500)
!524 = !DILocation(line: 609, column: 50, scope: !500)
!525 = !DILocation(line: 608, column: 3, scope: !500)
!526 = !DILocation(line: 610, column: 1, scope: !500)
!527 = distinct !DISubprogram(name: "klee_dump_memory", scope: !3, file: !3, line: 152, type: !502, isLocal: false, isDefinition: true, scopeLine: 152, isOptimized: false, unit: !2, variables: !25)
!528 = !DILocation(line: 152, column: 26, scope: !527)
!529 = !DILocalVariable(name: "argc", arg: 1, scope: !20, file: !3, line: 155, type: !23)
!530 = !DILocation(line: 155, column: 11, scope: !20)
!531 = !DILocalVariable(name: "argv", arg: 2, scope: !20, file: !3, line: 155, type: !24)
!532 = !DILocation(line: 155, column: 24, scope: !20)
!533 = !DILocalVariable(name: "preserve_root", scope: !20, file: !3, line: 157, type: !79)
!534 = !DILocation(line: 157, column: 8, scope: !20)
!535 = !DILocalVariable(name: "uid", scope: !20, file: !3, line: 159, type: !229)
!536 = !DILocation(line: 159, column: 9, scope: !20)
!537 = !DILocalVariable(name: "gid", scope: !20, file: !3, line: 160, type: !231)
!538 = !DILocation(line: 160, column: 9, scope: !20)
!539 = !DILocalVariable(name: "required_uid", scope: !20, file: !3, line: 164, type: !229)
!540 = !DILocation(line: 164, column: 9, scope: !20)
!541 = !DILocalVariable(name: "required_gid", scope: !20, file: !3, line: 165, type: !231)
!542 = !DILocation(line: 165, column: 9, scope: !20)
!543 = !DILocalVariable(name: "bit_flags", scope: !20, file: !3, line: 168, type: !23)
!544 = !DILocation(line: 168, column: 7, scope: !20)
!545 = !DILocalVariable(name: "dereference", scope: !20, file: !3, line: 172, type: !23)
!546 = !DILocation(line: 172, column: 7, scope: !20)
!547 = !DILocalVariable(name: "chopt", scope: !20, file: !3, line: 174, type: !548)
!548 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Chown_option", file: !6, line: 43, size: 320, elements: !549)
!549 = !{!550, !551, !552, !554, !555, !556, !557}
!550 = !DIDerivedType(tag: DW_TAG_member, name: "verbosity", scope: !548, file: !6, line: 46, baseType: !5, size: 32)
!551 = !DIDerivedType(tag: DW_TAG_member, name: "recurse", scope: !548, file: !6, line: 49, baseType: !79, size: 8, offset: 32)
!552 = !DIDerivedType(tag: DW_TAG_member, name: "root_dev_ino", scope: !548, file: !6, line: 53, baseType: !553, size: 64, offset: 64)
!553 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !26, size: 64)
!554 = !DIDerivedType(tag: DW_TAG_member, name: "affect_symlink_referent", scope: !548, file: !6, line: 56, baseType: !79, size: 8, offset: 128)
!555 = !DIDerivedType(tag: DW_TAG_member, name: "force_silent", scope: !548, file: !6, line: 59, baseType: !79, size: 8, offset: 136)
!556 = !DIDerivedType(tag: DW_TAG_member, name: "user_name", scope: !548, file: !6, line: 62, baseType: !15, size: 64, offset: 192)
!557 = !DIDerivedType(tag: DW_TAG_member, name: "group_name", scope: !548, file: !6, line: 65, baseType: !15, size: 64, offset: 256)
!558 = !DILocation(line: 174, column: 23, scope: !20)
!559 = !DILocalVariable(name: "ok", scope: !20, file: !3, line: 175, type: !79)
!560 = !DILocation(line: 175, column: 8, scope: !20)
!561 = !DILocalVariable(name: "optc", scope: !20, file: !3, line: 176, type: !23)
!562 = !DILocation(line: 176, column: 7, scope: !20)
!563 = !DILocation(line: 179, column: 21, scope: !20)
!564 = !DILocation(line: 179, column: 3, scope: !20)
!565 = !DILocation(line: 180, column: 3, scope: !20)
!566 = !DILocation(line: 184, column: 3, scope: !20)
!567 = !DILocation(line: 186, column: 3, scope: !20)
!568 = !DILocation(line: 188, column: 3, scope: !20)
!569 = !DILocation(line: 188, column: 31, scope: !20)
!570 = !DILocation(line: 188, column: 37, scope: !20)
!571 = !DILocation(line: 188, column: 18, scope: !20)
!572 = !DILocation(line: 188, column: 16, scope: !20)
!573 = !DILocation(line: 189, column: 10, scope: !20)
!574 = !DILocation(line: 191, column: 7, scope: !575)
!575 = distinct !DILexicalBlock(scope: !20, file: !3, line: 190, column: 5)
!576 = !DILocation(line: 194, column: 21, scope: !577)
!577 = distinct !DILexicalBlock(scope: !575, file: !3, line: 192, column: 9)
!578 = !DILocation(line: 195, column: 11, scope: !577)
!579 = !DILocation(line: 198, column: 21, scope: !577)
!580 = !DILocation(line: 199, column: 11, scope: !577)
!581 = !DILocation(line: 202, column: 21, scope: !577)
!582 = !DILocation(line: 203, column: 11, scope: !577)
!583 = !DILocation(line: 206, column: 23, scope: !577)
!584 = !DILocation(line: 207, column: 11, scope: !577)
!585 = !DILocation(line: 211, column: 23, scope: !577)
!586 = !DILocation(line: 212, column: 11, scope: !577)
!587 = !DILocation(line: 215, column: 25, scope: !577)
!588 = !DILocation(line: 216, column: 11, scope: !577)
!589 = !DILocation(line: 219, column: 25, scope: !577)
!590 = !DILocation(line: 220, column: 11, scope: !577)
!591 = !DILocation(line: 223, column: 28, scope: !577)
!592 = !DILocation(line: 223, column: 26, scope: !577)
!593 = !DILocation(line: 224, column: 11, scope: !577)
!594 = !DILocalVariable(name: "u_dummy", scope: !595, file: !3, line: 228, type: !15)
!595 = distinct !DILexicalBlock(scope: !577, file: !3, line: 227, column: 11)
!596 = !DILocation(line: 228, column: 19, scope: !595)
!597 = !DILocalVariable(name: "g_dummy", scope: !595, file: !3, line: 228, type: !15)
!598 = !DILocation(line: 228, column: 29, scope: !595)
!599 = !DILocalVariable(name: "e", scope: !595, file: !3, line: 229, type: !12)
!600 = !DILocation(line: 229, column: 25, scope: !595)
!601 = !DILocation(line: 229, column: 46, scope: !595)
!602 = !DILocation(line: 229, column: 29, scope: !595)
!603 = !DILocation(line: 232, column: 17, scope: !604)
!604 = distinct !DILexicalBlock(scope: !595, file: !3, line: 232, column: 17)
!605 = !DILocation(line: 232, column: 17, scope: !595)
!606 = !DILocation(line: 233, column: 49, scope: !604)
!607 = !DILocation(line: 233, column: 59, scope: !604)
!608 = !DILocation(line: 233, column: 52, scope: !604)
!609 = !DILocation(line: 233, column: 15, scope: !604)
!610 = !DILocation(line: 234, column: 13, scope: !595)
!611 = !DILocation(line: 238, column: 17, scope: !577)
!612 = !DILocation(line: 238, column: 25, scope: !577)
!613 = !DILocation(line: 239, column: 11, scope: !577)
!614 = !DILocation(line: 242, column: 17, scope: !577)
!615 = !DILocation(line: 242, column: 27, scope: !577)
!616 = !DILocation(line: 243, column: 11, scope: !577)
!617 = !DILocation(line: 246, column: 17, scope: !577)
!618 = !DILocation(line: 246, column: 30, scope: !577)
!619 = !DILocation(line: 247, column: 11, scope: !577)
!620 = !DILocation(line: 250, column: 17, scope: !577)
!621 = !DILocation(line: 250, column: 27, scope: !577)
!622 = !DILocation(line: 251, column: 11, scope: !577)
!623 = !DILocation(line: 253, column: 9, scope: !577)
!624 = !DILocation(line: 254, column: 9, scope: !577)
!625 = !DILocation(line: 256, column: 11, scope: !577)
!626 = distinct !{!626, !568, !627}
!627 = !DILocation(line: 258, column: 5, scope: !20)
!628 = !DILocation(line: 259, column: 1, scope: !20)
!629 = !DILocation(line: 260, column: 13, scope: !630)
!630 = distinct !DILexicalBlock(scope: !20, file: !3, line: 260, column: 7)
!631 = !DILocation(line: 260, column: 7, scope: !20)
!632 = !DILocation(line: 262, column: 11, scope: !633)
!633 = distinct !DILexicalBlock(scope: !634, file: !3, line: 262, column: 11)
!634 = distinct !DILexicalBlock(scope: !630, file: !3, line: 261, column: 5)
!635 = !DILocation(line: 262, column: 21, scope: !633)
!636 = !DILocation(line: 262, column: 11, scope: !634)
!637 = !DILocation(line: 264, column: 15, scope: !638)
!638 = distinct !DILexicalBlock(scope: !639, file: !3, line: 264, column: 15)
!639 = distinct !DILexicalBlock(scope: !633, file: !3, line: 263, column: 9)
!640 = !DILocation(line: 264, column: 27, scope: !638)
!641 = !DILocation(line: 264, column: 15, scope: !639)
!642 = !DILocation(line: 265, column: 13, scope: !638)
!643 = !DILocation(line: 267, column: 23, scope: !639)
!644 = !DILocation(line: 268, column: 9, scope: !639)
!645 = !DILocation(line: 269, column: 5, scope: !634)
!646 = !DILocation(line: 272, column: 17, scope: !647)
!647 = distinct !DILexicalBlock(scope: !630, file: !3, line: 271, column: 5)
!648 = !DILocation(line: 274, column: 36, scope: !20)
!649 = !DILocation(line: 274, column: 48, scope: !20)
!650 = !DILocation(line: 274, column: 9, scope: !20)
!651 = !DILocation(line: 274, column: 33, scope: !20)
!652 = !DILocation(line: 276, column: 7, scope: !653)
!653 = distinct !DILexicalBlock(scope: !20, file: !3, line: 276, column: 7)
!654 = !DILocation(line: 276, column: 14, scope: !653)
!655 = !DILocation(line: 276, column: 12, scope: !653)
!656 = !DILocation(line: 276, column: 24, scope: !653)
!657 = !DILocation(line: 276, column: 21, scope: !653)
!658 = !DILocation(line: 276, column: 7, scope: !20)
!659 = !DILocation(line: 278, column: 11, scope: !660)
!660 = distinct !DILexicalBlock(scope: !661, file: !3, line: 278, column: 11)
!661 = distinct !DILexicalBlock(scope: !653, file: !3, line: 277, column: 5)
!662 = !DILocation(line: 278, column: 19, scope: !660)
!663 = !DILocation(line: 278, column: 16, scope: !660)
!664 = !DILocation(line: 278, column: 11, scope: !661)
!665 = !DILocation(line: 279, column: 9, scope: !660)
!666 = !DILocation(line: 281, column: 60, scope: !660)
!667 = !DILocation(line: 281, column: 65, scope: !660)
!668 = !DILocation(line: 281, column: 70, scope: !660)
!669 = !DILocation(line: 281, column: 53, scope: !660)
!670 = !DILocation(line: 281, column: 9, scope: !660)
!671 = !DILocation(line: 282, column: 7, scope: !661)
!672 = !DILocation(line: 285, column: 7, scope: !673)
!673 = distinct !DILexicalBlock(scope: !20, file: !3, line: 285, column: 7)
!674 = !DILocation(line: 285, column: 7, scope: !20)
!675 = !DILocalVariable(name: "ref_stats", scope: !676, file: !3, line: 287, type: !677)
!676 = distinct !DILexicalBlock(scope: !673, file: !3, line: 286, column: 5)
!677 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !678, line: 46, size: 1152, elements: !679)
!678 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stat.h", directory: "/home/ma481/Downloads/Chisel/chisel-bench/benchmark/chown-8.2/original/obj-llvm/src")
!679 = !{!680, !681, !682, !684, !686, !687, !688, !689, !690, !692, !694, !696, !704, !705, !706}
!680 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !677, file: !678, line: 48, baseType: !37, size: 64)
!681 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !677, file: !678, line: 53, baseType: !32, size: 64, offset: 64)
!682 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !677, file: !678, line: 61, baseType: !683, size: 64, offset: 128)
!683 = !DIDerivedType(tag: DW_TAG_typedef, name: "__nlink_t", file: !33, line: 139, baseType: !34)
!684 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !677, file: !678, line: 62, baseType: !685, size: 32, offset: 192)
!685 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mode_t", file: !33, line: 138, baseType: !159)
!686 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !677, file: !678, line: 64, baseType: !230, size: 32, offset: 224)
!687 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !677, file: !678, line: 65, baseType: !232, size: 32, offset: 256)
!688 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !677, file: !678, line: 67, baseType: !23, size: 32, offset: 288)
!689 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !677, file: !678, line: 69, baseType: !37, size: 64, offset: 320)
!690 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !677, file: !678, line: 74, baseType: !691, size: 64, offset: 384)
!691 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off_t", file: !33, line: 140, baseType: !268)
!692 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !677, file: !678, line: 78, baseType: !693, size: 64, offset: 448)
!693 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blksize_t", file: !33, line: 162, baseType: !268)
!694 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !677, file: !678, line: 80, baseType: !695, size: 64, offset: 512)
!695 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blkcnt_t", file: !33, line: 167, baseType: !268)
!696 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !677, file: !678, line: 91, baseType: !697, size: 128, offset: 576)
!697 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !698, line: 8, size: 128, elements: !699)
!698 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/struct_timespec.h", directory: "/home/ma481/Downloads/Chisel/chisel-bench/benchmark/chown-8.2/original/obj-llvm/src")
!699 = !{!700, !702}
!700 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !697, file: !698, line: 10, baseType: !701, size: 64)
!701 = !DIDerivedType(tag: DW_TAG_typedef, name: "__time_t", file: !33, line: 148, baseType: !268)
!702 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !697, file: !698, line: 11, baseType: !703, size: 64, offset: 64)
!703 = !DIDerivedType(tag: DW_TAG_typedef, name: "__syscall_slong_t", file: !33, line: 184, baseType: !268)
!704 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !677, file: !678, line: 92, baseType: !697, size: 128, offset: 704)
!705 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !677, file: !678, line: 93, baseType: !697, size: 128, offset: 832)
!706 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !677, file: !678, line: 106, baseType: !707, size: 192, offset: 960)
!707 = !DICompositeType(tag: DW_TAG_array_type, baseType: !703, size: 192, elements: !319)
!708 = !DILocation(line: 287, column: 19, scope: !676)
!709 = !DILocation(line: 288, column: 17, scope: !710)
!710 = distinct !DILexicalBlock(scope: !676, file: !3, line: 288, column: 11)
!711 = !DILocation(line: 288, column: 11, scope: !710)
!712 = !DILocation(line: 288, column: 11, scope: !676)
!713 = !DILocation(line: 289, column: 30, scope: !710)
!714 = !DILocation(line: 290, column: 23, scope: !710)
!715 = !DILocation(line: 290, column: 16, scope: !710)
!716 = !DILocation(line: 289, column: 9, scope: !710)
!717 = !DILocation(line: 292, column: 23, scope: !676)
!718 = !DILocation(line: 292, column: 11, scope: !676)
!719 = !DILocation(line: 293, column: 23, scope: !676)
!720 = !DILocation(line: 293, column: 11, scope: !676)
!721 = !DILocation(line: 294, column: 48, scope: !676)
!722 = !DILocation(line: 294, column: 25, scope: !676)
!723 = !DILocation(line: 294, column: 13, scope: !676)
!724 = !DILocation(line: 294, column: 23, scope: !676)
!725 = !DILocation(line: 295, column: 49, scope: !676)
!726 = !DILocation(line: 295, column: 26, scope: !676)
!727 = !DILocation(line: 295, column: 13, scope: !676)
!728 = !DILocation(line: 295, column: 24, scope: !676)
!729 = !DILocation(line: 296, column: 5, scope: !676)
!730 = !DILocalVariable(name: "e", scope: !731, file: !3, line: 299, type: !12)
!731 = distinct !DILexicalBlock(scope: !673, file: !3, line: 298, column: 5)
!732 = !DILocation(line: 299, column: 19, scope: !731)
!733 = !DILocation(line: 299, column: 40, scope: !731)
!734 = !DILocation(line: 299, column: 45, scope: !731)
!735 = !DILocation(line: 300, column: 47, scope: !731)
!736 = !DILocation(line: 300, column: 65, scope: !731)
!737 = !DILocation(line: 299, column: 23, scope: !731)
!738 = !DILocation(line: 301, column: 11, scope: !739)
!739 = distinct !DILexicalBlock(scope: !731, file: !3, line: 301, column: 11)
!740 = !DILocation(line: 301, column: 11, scope: !731)
!741 = !DILocation(line: 302, column: 43, scope: !739)
!742 = !DILocation(line: 302, column: 53, scope: !739)
!743 = !DILocation(line: 302, column: 58, scope: !739)
!744 = !DILocation(line: 302, column: 46, scope: !739)
!745 = !DILocation(line: 302, column: 9, scope: !739)
!746 = !DILocation(line: 307, column: 18, scope: !747)
!747 = distinct !DILexicalBlock(scope: !731, file: !3, line: 307, column: 11)
!748 = !DILocation(line: 307, column: 12, scope: !747)
!749 = !DILocation(line: 307, column: 28, scope: !747)
!750 = !DILocation(line: 307, column: 37, scope: !747)
!751 = !DILocation(line: 307, column: 31, scope: !747)
!752 = !DILocation(line: 307, column: 11, scope: !731)
!753 = !DILocation(line: 308, column: 27, scope: !747)
!754 = !DILocation(line: 308, column: 15, scope: !747)
!755 = !DILocation(line: 308, column: 25, scope: !747)
!756 = !DILocation(line: 308, column: 9, scope: !747)
!757 = !DILocation(line: 310, column: 13, scope: !731)
!758 = !DILocation(line: 313, column: 13, scope: !759)
!759 = distinct !DILexicalBlock(scope: !20, file: !3, line: 313, column: 7)
!760 = !DILocation(line: 313, column: 21, scope: !759)
!761 = !DILocation(line: 313, column: 24, scope: !759)
!762 = !DILocation(line: 313, column: 7, scope: !20)
!763 = !DILocation(line: 316, column: 28, scope: !764)
!764 = distinct !DILexicalBlock(scope: !759, file: !3, line: 314, column: 5)
!765 = !DILocation(line: 316, column: 13, scope: !764)
!766 = !DILocation(line: 316, column: 26, scope: !764)
!767 = !DILocation(line: 317, column: 17, scope: !768)
!768 = distinct !DILexicalBlock(scope: !764, file: !3, line: 317, column: 11)
!769 = !DILocation(line: 317, column: 30, scope: !768)
!770 = !DILocation(line: 317, column: 11, scope: !764)
!771 = !DILocation(line: 318, column: 30, scope: !768)
!772 = !DILocation(line: 319, column: 16, scope: !768)
!773 = !DILocation(line: 318, column: 9, scope: !768)
!774 = !DILocation(line: 320, column: 5, scope: !764)
!775 = !DILocation(line: 322, column: 13, scope: !20)
!776 = !DILocation(line: 323, column: 21, scope: !20)
!777 = !DILocation(line: 323, column: 28, scope: !20)
!778 = !DILocation(line: 323, column: 26, scope: !20)
!779 = !DILocation(line: 323, column: 36, scope: !20)
!780 = !DILocation(line: 324, column: 21, scope: !20)
!781 = !DILocation(line: 324, column: 26, scope: !20)
!782 = !DILocation(line: 325, column: 21, scope: !20)
!783 = !DILocation(line: 325, column: 35, scope: !20)
!784 = !DILocation(line: 323, column: 8, scope: !20)
!785 = !DILocation(line: 323, column: 6, scope: !20)
!786 = !DILocation(line: 327, column: 3, scope: !20)
!787 = !DILocation(line: 329, column: 9, scope: !20)
!788 = !DILocation(line: 329, column: 3, scope: !20)
!789 = !DILocation(line: 330, column: 1, scope: !20)
!790 = distinct !DISubprogram(name: "bad_cast", scope: !501, file: !501, line: 623, type: !791, isLocal: true, isDefinition: true, scopeLine: 624, flags: DIFlagPrototyped, isOptimized: false, unit: !2, variables: !25)
!791 = !DISubroutineType(types: !792)
!792 = !{!15, !12}
!793 = !DILocalVariable(name: "s", arg: 1, scope: !790, file: !501, line: 623, type: !12)
!794 = !DILocation(line: 623, column: 23, scope: !790)
!795 = !DILocation(line: 625, column: 19, scope: !790)
!796 = !DILocation(line: 625, column: 3, scope: !790)
!797 = distinct !DISubprogram(name: "chopt_init", scope: !213, file: !213, line: 59, type: !798, isLocal: false, isDefinition: true, scopeLine: 60, flags: DIFlagPrototyped, isOptimized: false, unit: !212, variables: !25)
!798 = !DISubroutineType(types: !799)
!799 = !{null, !800}
!800 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !801, size: 64)
!801 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Chown_option", file: !6, line: 43, size: 320, elements: !802)
!802 = !{!803, !804, !805, !811, !812, !813, !814}
!803 = !DIDerivedType(tag: DW_TAG_member, name: "verbosity", scope: !801, file: !6, line: 46, baseType: !5, size: 32)
!804 = !DIDerivedType(tag: DW_TAG_member, name: "recurse", scope: !801, file: !6, line: 49, baseType: !79, size: 8, offset: 32)
!805 = !DIDerivedType(tag: DW_TAG_member, name: "root_dev_ino", scope: !801, file: !6, line: 53, baseType: !806, size: 64, offset: 64)
!806 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !807, size: 64)
!807 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_ino", file: !27, line: 7, size: 128, elements: !808)
!808 = !{!809, !810}
!809 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !807, file: !27, line: 9, baseType: !30, size: 64)
!810 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !807, file: !27, line: 10, baseType: !36, size: 64, offset: 64)
!811 = !DIDerivedType(tag: DW_TAG_member, name: "affect_symlink_referent", scope: !801, file: !6, line: 56, baseType: !79, size: 8, offset: 128)
!812 = !DIDerivedType(tag: DW_TAG_member, name: "force_silent", scope: !801, file: !6, line: 59, baseType: !79, size: 8, offset: 136)
!813 = !DIDerivedType(tag: DW_TAG_member, name: "user_name", scope: !801, file: !6, line: 62, baseType: !15, size: 64, offset: 192)
!814 = !DIDerivedType(tag: DW_TAG_member, name: "group_name", scope: !801, file: !6, line: 65, baseType: !15, size: 64, offset: 256)
!815 = !DILocalVariable(name: "chopt", arg: 1, scope: !797, file: !213, line: 59, type: !800)
!816 = !DILocation(line: 59, column: 34, scope: !797)
!817 = !DILocation(line: 61, column: 3, scope: !797)
!818 = !DILocation(line: 61, column: 10, scope: !797)
!819 = !DILocation(line: 61, column: 20, scope: !797)
!820 = !DILocation(line: 62, column: 3, scope: !797)
!821 = !DILocation(line: 62, column: 10, scope: !797)
!822 = !DILocation(line: 62, column: 23, scope: !797)
!823 = !DILocation(line: 63, column: 3, scope: !797)
!824 = !DILocation(line: 63, column: 10, scope: !797)
!825 = !DILocation(line: 63, column: 34, scope: !797)
!826 = !DILocation(line: 64, column: 3, scope: !797)
!827 = !DILocation(line: 64, column: 10, scope: !797)
!828 = !DILocation(line: 64, column: 18, scope: !797)
!829 = !DILocation(line: 65, column: 3, scope: !797)
!830 = !DILocation(line: 65, column: 10, scope: !797)
!831 = !DILocation(line: 65, column: 23, scope: !797)
!832 = !DILocation(line: 66, column: 3, scope: !797)
!833 = !DILocation(line: 66, column: 10, scope: !797)
!834 = !DILocation(line: 66, column: 20, scope: !797)
!835 = !DILocation(line: 67, column: 3, scope: !797)
!836 = !DILocation(line: 67, column: 10, scope: !797)
!837 = !DILocation(line: 67, column: 21, scope: !797)
!838 = !DILocation(line: 68, column: 1, scope: !797)
!839 = distinct !DISubprogram(name: "chopt_free", scope: !213, file: !213, line: 71, type: !798, isLocal: false, isDefinition: true, scopeLine: 72, flags: DIFlagPrototyped, isOptimized: false, unit: !212, variables: !25)
!840 = !DILocalVariable(name: "chopt", arg: 1, scope: !839, file: !213, line: 71, type: !800)
!841 = !DILocation(line: 71, column: 34, scope: !839)
!842 = !DILocation(line: 75, column: 1, scope: !839)
!843 = distinct !DISubprogram(name: "gid_to_name", scope: !213, file: !213, line: 82, type: !844, isLocal: false, isDefinition: true, scopeLine: 83, flags: DIFlagPrototyped, isOptimized: false, unit: !212, variables: !25)
!844 = !DISubroutineType(types: !845)
!845 = !{!15, !231}
!846 = !DILocalVariable(name: "gid", arg: 1, scope: !843, file: !213, line: 82, type: !231)
!847 = !DILocation(line: 82, column: 20, scope: !843)
!848 = !DILocalVariable(name: "buf", scope: !843, file: !213, line: 84, type: !849)
!849 = !DICompositeType(tag: DW_TAG_array_type, baseType: !14, size: 168, elements: !850)
!850 = !{!851}
!851 = !DISubrange(count: 21)
!852 = !DILocation(line: 84, column: 8, scope: !843)
!853 = !DILocalVariable(name: "grp", scope: !843, file: !213, line: 85, type: !854)
!854 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !855, size: 64)
!855 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "group", file: !856, line: 42, size: 256, elements: !857)
!856 = !DIFile(filename: "/usr/include/grp.h", directory: "/home/ma481/Downloads/Chisel/chisel-bench/benchmark/chown-8.2/original/obj-llvm/src")
!857 = !{!858, !859, !860, !861}
!858 = !DIDerivedType(tag: DW_TAG_member, name: "gr_name", scope: !855, file: !856, line: 44, baseType: !15, size: 64)
!859 = !DIDerivedType(tag: DW_TAG_member, name: "gr_passwd", scope: !855, file: !856, line: 45, baseType: !15, size: 64, offset: 64)
!860 = !DIDerivedType(tag: DW_TAG_member, name: "gr_gid", scope: !855, file: !856, line: 46, baseType: !232, size: 32, offset: 128)
!861 = !DIDerivedType(tag: DW_TAG_member, name: "gr_mem", scope: !855, file: !856, line: 47, baseType: !24, size: 64, offset: 192)
!862 = !DILocation(line: 85, column: 17, scope: !843)
!863 = !DILocation(line: 85, column: 33, scope: !843)
!864 = !DILocation(line: 85, column: 23, scope: !843)
!865 = !DILocation(line: 86, column: 19, scope: !843)
!866 = !DILocation(line: 86, column: 25, scope: !843)
!867 = !DILocation(line: 86, column: 30, scope: !843)
!868 = !DILocation(line: 88, column: 32, scope: !843)
!869 = !DILocation(line: 88, column: 37, scope: !843)
!870 = !DILocation(line: 88, column: 21, scope: !843)
!871 = !DILocation(line: 86, column: 10, scope: !843)
!872 = !DILocation(line: 86, column: 3, scope: !843)
!873 = distinct !DISubprogram(name: "uid_to_name", scope: !213, file: !213, line: 96, type: !874, isLocal: false, isDefinition: true, scopeLine: 97, flags: DIFlagPrototyped, isOptimized: false, unit: !212, variables: !25)
!874 = !DISubroutineType(types: !875)
!875 = !{!15, !229}
!876 = !DILocalVariable(name: "uid", arg: 1, scope: !873, file: !213, line: 96, type: !229)
!877 = !DILocation(line: 96, column: 20, scope: !873)
!878 = !DILocalVariable(name: "buf", scope: !873, file: !213, line: 98, type: !849)
!879 = !DILocation(line: 98, column: 8, scope: !873)
!880 = !DILocalVariable(name: "pwd", scope: !873, file: !213, line: 99, type: !881)
!881 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !882, size: 64)
!882 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "passwd", file: !883, line: 49, size: 384, elements: !884)
!883 = !DIFile(filename: "/usr/include/pwd.h", directory: "/home/ma481/Downloads/Chisel/chisel-bench/benchmark/chown-8.2/original/obj-llvm/src")
!884 = !{!885, !886, !887, !888, !889, !890, !891}
!885 = !DIDerivedType(tag: DW_TAG_member, name: "pw_name", scope: !882, file: !883, line: 51, baseType: !15, size: 64)
!886 = !DIDerivedType(tag: DW_TAG_member, name: "pw_passwd", scope: !882, file: !883, line: 52, baseType: !15, size: 64, offset: 64)
!887 = !DIDerivedType(tag: DW_TAG_member, name: "pw_uid", scope: !882, file: !883, line: 53, baseType: !230, size: 32, offset: 128)
!888 = !DIDerivedType(tag: DW_TAG_member, name: "pw_gid", scope: !882, file: !883, line: 54, baseType: !232, size: 32, offset: 160)
!889 = !DIDerivedType(tag: DW_TAG_member, name: "pw_gecos", scope: !882, file: !883, line: 55, baseType: !15, size: 64, offset: 192)
!890 = !DIDerivedType(tag: DW_TAG_member, name: "pw_dir", scope: !882, file: !883, line: 56, baseType: !15, size: 64, offset: 256)
!891 = !DIDerivedType(tag: DW_TAG_member, name: "pw_shell", scope: !882, file: !883, line: 57, baseType: !15, size: 64, offset: 320)
!892 = !DILocation(line: 99, column: 18, scope: !873)
!893 = !DILocation(line: 99, column: 34, scope: !873)
!894 = !DILocation(line: 99, column: 24, scope: !873)
!895 = !DILocation(line: 100, column: 19, scope: !873)
!896 = !DILocation(line: 100, column: 25, scope: !873)
!897 = !DILocation(line: 100, column: 30, scope: !873)
!898 = !DILocation(line: 102, column: 32, scope: !873)
!899 = !DILocation(line: 102, column: 37, scope: !873)
!900 = !DILocation(line: 102, column: 21, scope: !873)
!901 = !DILocation(line: 100, column: 10, scope: !873)
!902 = !DILocation(line: 100, column: 3, scope: !873)
!903 = distinct !DISubprogram(name: "chown_files", scope: !213, file: !213, line: 483, type: !904, isLocal: false, isDefinition: true, scopeLine: 487, flags: DIFlagPrototyped, isOptimized: false, unit: !212, variables: !25)
!904 = !DISubroutineType(types: !905)
!905 = !{!79, !24, !23, !229, !231, !229, !231, !906}
!906 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !907, size: 64)
!907 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !801)
!908 = !DILocalVariable(name: "files", arg: 1, scope: !903, file: !213, line: 483, type: !24)
!909 = !DILocation(line: 483, column: 21, scope: !903)
!910 = !DILocalVariable(name: "bit_flags", arg: 2, scope: !903, file: !213, line: 483, type: !23)
!911 = !DILocation(line: 483, column: 32, scope: !903)
!912 = !DILocalVariable(name: "uid", arg: 3, scope: !903, file: !213, line: 484, type: !229)
!913 = !DILocation(line: 484, column: 20, scope: !903)
!914 = !DILocalVariable(name: "gid", arg: 4, scope: !903, file: !213, line: 484, type: !231)
!915 = !DILocation(line: 484, column: 31, scope: !903)
!916 = !DILocalVariable(name: "required_uid", arg: 5, scope: !903, file: !213, line: 485, type: !229)
!917 = !DILocation(line: 485, column: 20, scope: !903)
!918 = !DILocalVariable(name: "required_gid", arg: 6, scope: !903, file: !213, line: 485, type: !231)
!919 = !DILocation(line: 485, column: 40, scope: !903)
!920 = !DILocalVariable(name: "chopt", arg: 7, scope: !903, file: !213, line: 486, type: !906)
!921 = !DILocation(line: 486, column: 41, scope: !903)
!922 = !DILocalVariable(name: "ok", scope: !903, file: !213, line: 488, type: !79)
!923 = !DILocation(line: 488, column: 8, scope: !903)
!924 = !DILocalVariable(name: "stat_flags", scope: !903, file: !213, line: 491, type: !23)
!925 = !DILocation(line: 491, column: 7, scope: !903)
!926 = !DILocation(line: 491, column: 22, scope: !903)
!927 = !DILocation(line: 491, column: 35, scope: !903)
!928 = !DILocation(line: 491, column: 49, scope: !903)
!929 = !DILocation(line: 491, column: 52, scope: !903)
!930 = !DILocation(line: 491, column: 65, scope: !903)
!931 = !DILocation(line: 492, column: 22, scope: !903)
!932 = !DILocation(line: 492, column: 25, scope: !903)
!933 = !DILocation(line: 492, column: 32, scope: !903)
!934 = !DILocation(line: 493, column: 22, scope: !903)
!935 = !DILocation(line: 493, column: 25, scope: !903)
!936 = !DILocation(line: 493, column: 32, scope: !903)
!937 = !DILocation(line: 493, column: 42, scope: !903)
!938 = !DILocation(line: 491, column: 21, scope: !903)
!939 = !DILocalVariable(name: "fts", scope: !903, file: !213, line: 497, type: !940)
!940 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !941, size: 64)
!941 = !DIDerivedType(tag: DW_TAG_typedef, name: "FTS", file: !942, line: 183, baseType: !943)
!942 = !DIFile(filename: "../../lib/fts_.h", directory: "/home/ma481/Downloads/Chisel/chisel-bench/benchmark/chown-8.2/original/obj-llvm/src")
!943 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !942, line: 68, size: 1024, elements: !944)
!944 = !{!945, !994, !995, !997, !998, !999, !1000, !1001, !1002, !1003, !1010, !1011, !1014, !1021}
!945 = !DIDerivedType(tag: DW_TAG_member, name: "fts_cur", scope: !943, file: !942, line: 69, baseType: !946, size: 64)
!946 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !947, size: 64)
!947 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ftsent", file: !942, line: 185, size: 2112, elements: !948)
!948 = !{!949, !950, !951, !952, !953, !954, !955, !956, !957, !958, !961, !962, !964, !965, !967, !968, !969, !970, !993}
!949 = !DIDerivedType(tag: DW_TAG_member, name: "fts_cycle", scope: !947, file: !942, line: 186, baseType: !946, size: 64)
!950 = !DIDerivedType(tag: DW_TAG_member, name: "fts_parent", scope: !947, file: !942, line: 187, baseType: !946, size: 64, offset: 64)
!951 = !DIDerivedType(tag: DW_TAG_member, name: "fts_link", scope: !947, file: !942, line: 188, baseType: !946, size: 64, offset: 128)
!952 = !DIDerivedType(tag: DW_TAG_member, name: "fts_number", scope: !947, file: !942, line: 189, baseType: !268, size: 64, offset: 192)
!953 = !DIDerivedType(tag: DW_TAG_member, name: "fts_pointer", scope: !947, file: !942, line: 190, baseType: !16, size: 64, offset: 256)
!954 = !DIDerivedType(tag: DW_TAG_member, name: "fts_accpath", scope: !947, file: !942, line: 191, baseType: !15, size: 64, offset: 320)
!955 = !DIDerivedType(tag: DW_TAG_member, name: "fts_path", scope: !947, file: !942, line: 192, baseType: !15, size: 64, offset: 384)
!956 = !DIDerivedType(tag: DW_TAG_member, name: "fts_errno", scope: !947, file: !942, line: 193, baseType: !23, size: 32, offset: 448)
!957 = !DIDerivedType(tag: DW_TAG_member, name: "fts_symfd", scope: !947, file: !942, line: 194, baseType: !23, size: 32, offset: 480)
!958 = !DIDerivedType(tag: DW_TAG_member, name: "fts_pathlen", scope: !947, file: !942, line: 195, baseType: !959, size: 64, offset: 512)
!959 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !960, line: 62, baseType: !34)
!960 = !DIFile(filename: "/home/ma481/Downloads/LLVM_6.0/lib/clang/6.0.0/include/stddef.h", directory: "/home/ma481/Downloads/Chisel/chisel-bench/benchmark/chown-8.2/original/obj-llvm/src")
!961 = !DIDerivedType(tag: DW_TAG_member, name: "fts_fts", scope: !947, file: !942, line: 197, baseType: !940, size: 64, offset: 576)
!962 = !DIDerivedType(tag: DW_TAG_member, name: "fts_level", scope: !947, file: !942, line: 201, baseType: !963, size: 64, offset: 640)
!963 = !DIDerivedType(tag: DW_TAG_typedef, name: "ptrdiff_t", file: !960, line: 51, baseType: !268)
!964 = !DIDerivedType(tag: DW_TAG_member, name: "fts_namelen", scope: !947, file: !942, line: 203, baseType: !959, size: 64, offset: 704)
!965 = !DIDerivedType(tag: DW_TAG_member, name: "fts_n_dirs_remaining", scope: !947, file: !942, line: 204, baseType: !966, size: 64, offset: 768)
!966 = !DIDerivedType(tag: DW_TAG_typedef, name: "nlink_t", file: !31, line: 75, baseType: !683)
!967 = !DIDerivedType(tag: DW_TAG_member, name: "fts_info", scope: !947, file: !942, line: 220, baseType: !143, size: 16, offset: 832)
!968 = !DIDerivedType(tag: DW_TAG_member, name: "fts_flags", scope: !947, file: !942, line: 224, baseType: !143, size: 16, offset: 848)
!969 = !DIDerivedType(tag: DW_TAG_member, name: "fts_instr", scope: !947, file: !942, line: 230, baseType: !143, size: 16, offset: 864)
!970 = !DIDerivedType(tag: DW_TAG_member, name: "fts_statp", scope: !947, file: !942, line: 232, baseType: !971, size: 1152, offset: 896)
!971 = !DICompositeType(tag: DW_TAG_array_type, baseType: !972, size: 1152, elements: !321)
!972 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !678, line: 46, size: 1152, elements: !973)
!973 = !{!974, !975, !976, !977, !978, !979, !980, !981, !982, !983, !984, !985, !990, !991, !992}
!974 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !972, file: !678, line: 48, baseType: !37, size: 64)
!975 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !972, file: !678, line: 53, baseType: !32, size: 64, offset: 64)
!976 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !972, file: !678, line: 61, baseType: !683, size: 64, offset: 128)
!977 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !972, file: !678, line: 62, baseType: !685, size: 32, offset: 192)
!978 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !972, file: !678, line: 64, baseType: !230, size: 32, offset: 224)
!979 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !972, file: !678, line: 65, baseType: !232, size: 32, offset: 256)
!980 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !972, file: !678, line: 67, baseType: !23, size: 32, offset: 288)
!981 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !972, file: !678, line: 69, baseType: !37, size: 64, offset: 320)
!982 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !972, file: !678, line: 74, baseType: !691, size: 64, offset: 384)
!983 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !972, file: !678, line: 78, baseType: !693, size: 64, offset: 448)
!984 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !972, file: !678, line: 80, baseType: !695, size: 64, offset: 512)
!985 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !972, file: !678, line: 91, baseType: !986, size: 128, offset: 576)
!986 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !698, line: 8, size: 128, elements: !987)
!987 = !{!988, !989}
!988 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !986, file: !698, line: 10, baseType: !701, size: 64)
!989 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !986, file: !698, line: 11, baseType: !703, size: 64, offset: 64)
!990 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !972, file: !678, line: 92, baseType: !986, size: 128, offset: 704)
!991 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !972, file: !678, line: 93, baseType: !986, size: 128, offset: 832)
!992 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !972, file: !678, line: 106, baseType: !707, size: 192, offset: 960)
!993 = !DIDerivedType(tag: DW_TAG_member, name: "fts_name", scope: !947, file: !942, line: 233, baseType: !324, size: 8, offset: 2048)
!994 = !DIDerivedType(tag: DW_TAG_member, name: "fts_child", scope: !943, file: !942, line: 70, baseType: !946, size: 64, offset: 64)
!995 = !DIDerivedType(tag: DW_TAG_member, name: "fts_array", scope: !943, file: !942, line: 71, baseType: !996, size: 64, offset: 128)
!996 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !946, size: 64)
!997 = !DIDerivedType(tag: DW_TAG_member, name: "fts_dev", scope: !943, file: !942, line: 72, baseType: !36, size: 64, offset: 192)
!998 = !DIDerivedType(tag: DW_TAG_member, name: "fts_path", scope: !943, file: !942, line: 73, baseType: !15, size: 64, offset: 256)
!999 = !DIDerivedType(tag: DW_TAG_member, name: "fts_rfd", scope: !943, file: !942, line: 74, baseType: !23, size: 32, offset: 320)
!1000 = !DIDerivedType(tag: DW_TAG_member, name: "fts_cwd_fd", scope: !943, file: !942, line: 75, baseType: !23, size: 32, offset: 352)
!1001 = !DIDerivedType(tag: DW_TAG_member, name: "fts_pathlen", scope: !943, file: !942, line: 77, baseType: !959, size: 64, offset: 384)
!1002 = !DIDerivedType(tag: DW_TAG_member, name: "fts_nitems", scope: !943, file: !942, line: 78, baseType: !959, size: 64, offset: 448)
!1003 = !DIDerivedType(tag: DW_TAG_member, name: "fts_compar", scope: !943, file: !942, line: 79, baseType: !1004, size: 64, offset: 512)
!1004 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1005, size: 64)
!1005 = !DISubroutineType(types: !1006)
!1006 = !{!23, !1007, !1007}
!1007 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1008, size: 64)
!1008 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1009, size: 64)
!1009 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !947)
!1010 = !DIDerivedType(tag: DW_TAG_member, name: "fts_options", scope: !943, file: !942, line: 144, baseType: !23, size: 32, offset: 576)
!1011 = !DIDerivedType(tag: DW_TAG_member, name: "fts_leaf_optimization_works_ht", scope: !943, file: !942, line: 154, baseType: !1012, size: 64, offset: 640)
!1012 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1013, size: 64)
!1013 = !DICompositeType(tag: DW_TAG_structure_type, name: "hash_table", file: !942, line: 154, flags: DIFlagFwdDecl)
!1014 = !DIDerivedType(tag: DW_TAG_member, name: "fts_cycle", scope: !943, file: !942, line: 176, baseType: !1015, size: 64, offset: 704)
!1015 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !943, file: !942, line: 156, size: 64, elements: !1016)
!1016 = !{!1017, !1018}
!1017 = !DIDerivedType(tag: DW_TAG_member, name: "ht", scope: !1015, file: !942, line: 169, baseType: !1012, size: 64)
!1018 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1015, file: !942, line: 175, baseType: !1019, size: 64)
!1019 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1020, size: 64)
!1020 = !DICompositeType(tag: DW_TAG_structure_type, name: "cycle_check_state", file: !942, line: 175, flags: DIFlagFwdDecl)
!1021 = !DIDerivedType(tag: DW_TAG_member, name: "fts_fd_ring", scope: !943, file: !942, line: 182, baseType: !1022, size: 256, offset: 768)
!1022 = !DIDerivedType(tag: DW_TAG_typedef, name: "I_ring", file: !1023, line: 39, baseType: !1024)
!1023 = !DIFile(filename: "../../lib/i-ring.h", directory: "/home/ma481/Downloads/Chisel/chisel-bench/benchmark/chown-8.2/original/obj-llvm/src")
!1024 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "I_ring", file: !1023, line: 31, size: 256, elements: !1025)
!1025 = !{!1026, !1027, !1028, !1029, !1030}
!1026 = !DIDerivedType(tag: DW_TAG_member, name: "ir_data", scope: !1024, file: !1023, line: 33, baseType: !373, size: 128)
!1027 = !DIDerivedType(tag: DW_TAG_member, name: "ir_default_val", scope: !1024, file: !1023, line: 34, baseType: !23, size: 32, offset: 128)
!1028 = !DIDerivedType(tag: DW_TAG_member, name: "ir_front", scope: !1024, file: !1023, line: 35, baseType: !159, size: 32, offset: 160)
!1029 = !DIDerivedType(tag: DW_TAG_member, name: "ir_back", scope: !1024, file: !1023, line: 36, baseType: !159, size: 32, offset: 192)
!1030 = !DIDerivedType(tag: DW_TAG_member, name: "ir_empty", scope: !1024, file: !1023, line: 37, baseType: !79, size: 8, offset: 224)
!1031 = !DILocation(line: 497, column: 8, scope: !903)
!1032 = !DILocation(line: 497, column: 25, scope: !903)
!1033 = !DILocation(line: 497, column: 32, scope: !903)
!1034 = !DILocation(line: 497, column: 44, scope: !903)
!1035 = !DILocation(line: 497, column: 42, scope: !903)
!1036 = !DILocation(line: 497, column: 14, scope: !903)
!1037 = !DILocation(line: 499, column: 3, scope: !903)
!1038 = !DILocalVariable(name: "ent", scope: !1039, file: !213, line: 501, type: !1040)
!1039 = distinct !DILexicalBlock(scope: !903, file: !213, line: 500, column: 5)
!1040 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1041, size: 64)
!1041 = !DIDerivedType(tag: DW_TAG_typedef, name: "FTSENT", file: !942, line: 234, baseType: !947)
!1042 = !DILocation(line: 501, column: 15, scope: !1039)
!1043 = !DILocation(line: 503, column: 23, scope: !1039)
!1044 = !DILocation(line: 503, column: 13, scope: !1039)
!1045 = !DILocation(line: 503, column: 11, scope: !1039)
!1046 = !DILocation(line: 504, column: 11, scope: !1047)
!1047 = distinct !DILexicalBlock(scope: !1039, file: !213, line: 504, column: 11)
!1048 = !DILocation(line: 504, column: 15, scope: !1047)
!1049 = !DILocation(line: 504, column: 11, scope: !1039)
!1050 = !DILocation(line: 506, column: 15, scope: !1051)
!1051 = distinct !DILexicalBlock(scope: !1052, file: !213, line: 506, column: 15)
!1052 = distinct !DILexicalBlock(scope: !1047, file: !213, line: 505, column: 9)
!1053 = !DILocation(line: 506, column: 21, scope: !1051)
!1054 = !DILocation(line: 506, column: 15, scope: !1052)
!1055 = !DILocation(line: 509, column: 21, scope: !1056)
!1056 = distinct !DILexicalBlock(scope: !1057, file: !213, line: 509, column: 19)
!1057 = distinct !DILexicalBlock(scope: !1051, file: !213, line: 507, column: 13)
!1058 = !DILocation(line: 509, column: 28, scope: !1056)
!1059 = !DILocation(line: 509, column: 19, scope: !1057)
!1060 = !DILocation(line: 510, column: 27, scope: !1056)
!1061 = !DILocation(line: 510, column: 17, scope: !1056)
!1062 = !DILocation(line: 511, column: 18, scope: !1057)
!1063 = !DILocation(line: 512, column: 13, scope: !1057)
!1064 = !DILocation(line: 513, column: 11, scope: !1052)
!1065 = !DILocation(line: 516, column: 32, scope: !1039)
!1066 = !DILocation(line: 516, column: 37, scope: !1039)
!1067 = !DILocation(line: 516, column: 42, scope: !1039)
!1068 = !DILocation(line: 516, column: 47, scope: !1039)
!1069 = !DILocation(line: 517, column: 32, scope: !1039)
!1070 = !DILocation(line: 517, column: 46, scope: !1039)
!1071 = !DILocation(line: 517, column: 60, scope: !1039)
!1072 = !DILocation(line: 516, column: 13, scope: !1039)
!1073 = !DILocation(line: 516, column: 10, scope: !1039)
!1074 = distinct !{!1074, !1037, !1075}
!1075 = !DILocation(line: 518, column: 5, scope: !903)
!1076 = !DILocation(line: 520, column: 18, scope: !1077)
!1077 = distinct !DILexicalBlock(scope: !903, file: !213, line: 520, column: 7)
!1078 = !DILocation(line: 520, column: 7, scope: !1077)
!1079 = !DILocation(line: 520, column: 23, scope: !1077)
!1080 = !DILocation(line: 520, column: 7, scope: !903)
!1081 = !DILocation(line: 522, column: 17, scope: !1082)
!1082 = distinct !DILexicalBlock(scope: !1077, file: !213, line: 521, column: 5)
!1083 = !DILocation(line: 522, column: 7, scope: !1082)
!1084 = !DILocation(line: 523, column: 10, scope: !1082)
!1085 = !DILocation(line: 524, column: 5, scope: !1082)
!1086 = !DILocation(line: 526, column: 10, scope: !903)
!1087 = !DILocation(line: 526, column: 3, scope: !903)
!1088 = distinct !DISubprogram(name: "change_file_owner", scope: !213, file: !213, line: 248, type: !1089, isLocal: true, isDefinition: true, scopeLine: 252, flags: DIFlagPrototyped, isOptimized: false, unit: !212, variables: !25)
!1089 = !DISubroutineType(types: !1090)
!1090 = !{!79, !940, !1040, !229, !231, !229, !231, !906}
!1091 = !DILocalVariable(name: "fts", arg: 1, scope: !1088, file: !213, line: 248, type: !940)
!1092 = !DILocation(line: 248, column: 25, scope: !1088)
!1093 = !DILocalVariable(name: "ent", arg: 2, scope: !1088, file: !213, line: 248, type: !1040)
!1094 = !DILocation(line: 248, column: 38, scope: !1088)
!1095 = !DILocalVariable(name: "uid", arg: 3, scope: !1088, file: !213, line: 249, type: !229)
!1096 = !DILocation(line: 249, column: 26, scope: !1088)
!1097 = !DILocalVariable(name: "gid", arg: 4, scope: !1088, file: !213, line: 249, type: !231)
!1098 = !DILocation(line: 249, column: 37, scope: !1088)
!1099 = !DILocalVariable(name: "required_uid", arg: 5, scope: !1088, file: !213, line: 250, type: !229)
!1100 = !DILocation(line: 250, column: 26, scope: !1088)
!1101 = !DILocalVariable(name: "required_gid", arg: 6, scope: !1088, file: !213, line: 250, type: !231)
!1102 = !DILocation(line: 250, column: 46, scope: !1088)
!1103 = !DILocalVariable(name: "chopt", arg: 7, scope: !1088, file: !213, line: 251, type: !906)
!1104 = !DILocation(line: 251, column: 47, scope: !1088)
!1105 = !DILocalVariable(name: "file_full_name", scope: !1088, file: !213, line: 253, type: !12)
!1106 = !DILocation(line: 253, column: 15, scope: !1088)
!1107 = !DILocation(line: 253, column: 32, scope: !1088)
!1108 = !DILocation(line: 253, column: 37, scope: !1088)
!1109 = !DILocalVariable(name: "file", scope: !1088, file: !213, line: 254, type: !12)
!1110 = !DILocation(line: 254, column: 15, scope: !1088)
!1111 = !DILocation(line: 254, column: 22, scope: !1088)
!1112 = !DILocation(line: 254, column: 27, scope: !1088)
!1113 = !DILocalVariable(name: "file_stats", scope: !1088, file: !213, line: 255, type: !1114)
!1114 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1115, size: 64)
!1115 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !972)
!1116 = !DILocation(line: 255, column: 22, scope: !1088)
!1117 = !DILocalVariable(name: "stat_buf", scope: !1088, file: !213, line: 256, type: !972)
!1118 = !DILocation(line: 256, column: 15, scope: !1088)
!1119 = !DILocalVariable(name: "ok", scope: !1088, file: !213, line: 257, type: !79)
!1120 = !DILocation(line: 257, column: 8, scope: !1088)
!1121 = !DILocalVariable(name: "do_chown", scope: !1088, file: !213, line: 258, type: !79)
!1122 = !DILocation(line: 258, column: 8, scope: !1088)
!1123 = !DILocalVariable(name: "symlink_changed", scope: !1088, file: !213, line: 259, type: !79)
!1124 = !DILocation(line: 259, column: 8, scope: !1088)
!1125 = !DILocation(line: 261, column: 11, scope: !1088)
!1126 = !DILocation(line: 261, column: 16, scope: !1088)
!1127 = !DILocation(line: 261, column: 3, scope: !1088)
!1128 = !DILocation(line: 264, column: 11, scope: !1129)
!1129 = distinct !DILexicalBlock(scope: !1130, file: !213, line: 264, column: 11)
!1130 = distinct !DILexicalBlock(scope: !1088, file: !213, line: 262, column: 5)
!1131 = !DILocation(line: 264, column: 18, scope: !1129)
!1132 = !DILocation(line: 264, column: 11, scope: !1130)
!1133 = !DILocation(line: 266, column: 15, scope: !1134)
!1134 = distinct !DILexicalBlock(scope: !1135, file: !213, line: 266, column: 15)
!1135 = distinct !DILexicalBlock(scope: !1129, file: !213, line: 265, column: 9)
!1136 = !DILocation(line: 266, column: 15, scope: !1135)
!1137 = !DILocation(line: 270, column: 15, scope: !1138)
!1138 = distinct !DILexicalBlock(scope: !1134, file: !213, line: 267, column: 13)
!1139 = distinct !{!1139, !1137, !1137}
!1140 = !DILocation(line: 270, column: 15, scope: !1141)
!1141 = distinct !DILexicalBlock(scope: !1142, file: !213, line: 270, column: 15)
!1142 = distinct !DILexicalBlock(scope: !1138, file: !213, line: 270, column: 15)
!1143 = !DILocation(line: 270, column: 15, scope: !1142)
!1144 = !DILocation(line: 272, column: 24, scope: !1138)
!1145 = !DILocation(line: 272, column: 29, scope: !1138)
!1146 = !DILocation(line: 272, column: 15, scope: !1138)
!1147 = !DILocation(line: 274, column: 37, scope: !1138)
!1148 = !DILocation(line: 274, column: 27, scope: !1138)
!1149 = !DILocation(line: 274, column: 15, scope: !1138)
!1150 = !DILocation(line: 275, column: 15, scope: !1138)
!1151 = !DILocation(line: 277, column: 11, scope: !1135)
!1152 = !DILocation(line: 279, column: 7, scope: !1130)
!1153 = !DILocation(line: 282, column: 13, scope: !1154)
!1154 = distinct !DILexicalBlock(scope: !1130, file: !213, line: 282, column: 11)
!1155 = !DILocation(line: 282, column: 20, scope: !1154)
!1156 = !DILocation(line: 282, column: 11, scope: !1130)
!1157 = !DILocation(line: 283, column: 9, scope: !1154)
!1158 = !DILocation(line: 284, column: 7, scope: !1130)
!1159 = !DILocation(line: 294, column: 11, scope: !1160)
!1160 = distinct !DILexicalBlock(scope: !1130, file: !213, line: 294, column: 11)
!1161 = !DILocation(line: 294, column: 16, scope: !1160)
!1162 = !DILocation(line: 294, column: 26, scope: !1160)
!1163 = !DILocation(line: 294, column: 31, scope: !1160)
!1164 = !DILocation(line: 294, column: 34, scope: !1160)
!1165 = !DILocation(line: 294, column: 39, scope: !1160)
!1166 = !DILocation(line: 294, column: 50, scope: !1160)
!1167 = !DILocation(line: 294, column: 11, scope: !1130)
!1168 = !DILocation(line: 296, column: 11, scope: !1169)
!1169 = distinct !DILexicalBlock(scope: !1160, file: !213, line: 295, column: 9)
!1170 = !DILocation(line: 296, column: 16, scope: !1169)
!1171 = !DILocation(line: 296, column: 27, scope: !1169)
!1172 = !DILocation(line: 297, column: 20, scope: !1169)
!1173 = !DILocation(line: 297, column: 25, scope: !1169)
!1174 = !DILocation(line: 297, column: 11, scope: !1169)
!1175 = !DILocation(line: 298, column: 11, scope: !1169)
!1176 = !DILocation(line: 300, column: 13, scope: !1177)
!1177 = distinct !DILexicalBlock(scope: !1130, file: !213, line: 300, column: 11)
!1178 = !DILocation(line: 300, column: 20, scope: !1177)
!1179 = !DILocation(line: 300, column: 11, scope: !1130)
!1180 = !DILocation(line: 301, column: 19, scope: !1177)
!1181 = !DILocation(line: 301, column: 24, scope: !1177)
!1182 = !DILocation(line: 302, column: 23, scope: !1177)
!1183 = !DILocation(line: 302, column: 16, scope: !1177)
!1184 = !DILocation(line: 301, column: 9, scope: !1177)
!1185 = !DILocation(line: 303, column: 10, scope: !1130)
!1186 = !DILocation(line: 304, column: 7, scope: !1130)
!1187 = !DILocation(line: 307, column: 13, scope: !1188)
!1188 = distinct !DILexicalBlock(scope: !1130, file: !213, line: 307, column: 11)
!1189 = !DILocation(line: 307, column: 20, scope: !1188)
!1190 = !DILocation(line: 307, column: 11, scope: !1130)
!1191 = !DILocation(line: 308, column: 19, scope: !1188)
!1192 = !DILocation(line: 308, column: 24, scope: !1188)
!1193 = !DILocation(line: 308, column: 51, scope: !1188)
!1194 = !DILocation(line: 308, column: 44, scope: !1188)
!1195 = !DILocation(line: 308, column: 9, scope: !1188)
!1196 = !DILocation(line: 309, column: 10, scope: !1130)
!1197 = !DILocation(line: 310, column: 7, scope: !1130)
!1198 = !DILocation(line: 313, column: 13, scope: !1199)
!1199 = distinct !DILexicalBlock(scope: !1130, file: !213, line: 313, column: 11)
!1200 = !DILocation(line: 313, column: 20, scope: !1199)
!1201 = !DILocation(line: 313, column: 11, scope: !1130)
!1202 = !DILocation(line: 314, column: 19, scope: !1199)
!1203 = !DILocation(line: 314, column: 24, scope: !1199)
!1204 = !DILocation(line: 315, column: 23, scope: !1199)
!1205 = !DILocation(line: 315, column: 16, scope: !1199)
!1206 = !DILocation(line: 314, column: 9, scope: !1199)
!1207 = !DILocation(line: 316, column: 10, scope: !1130)
!1208 = !DILocation(line: 317, column: 7, scope: !1130)
!1209 = !DILocation(line: 320, column: 35, scope: !1210)
!1210 = distinct !DILexicalBlock(scope: !1130, file: !213, line: 320, column: 11)
!1211 = !DILocation(line: 320, column: 40, scope: !1210)
!1212 = !DILocation(line: 320, column: 11, scope: !1210)
!1213 = !DILocation(line: 320, column: 11, scope: !1130)
!1214 = !DILocation(line: 322, column: 11, scope: !1215)
!1215 = distinct !DILexicalBlock(scope: !1210, file: !213, line: 321, column: 9)
!1216 = distinct !{!1216, !1214, !1214}
!1217 = !DILocation(line: 322, column: 11, scope: !1218)
!1218 = distinct !DILexicalBlock(scope: !1215, file: !213, line: 322, column: 11)
!1219 = !DILocation(line: 323, column: 11, scope: !1215)
!1220 = !DILocation(line: 325, column: 7, scope: !1130)
!1221 = !DILocation(line: 328, column: 7, scope: !1130)
!1222 = !DILocation(line: 331, column: 8, scope: !1223)
!1223 = distinct !DILexicalBlock(scope: !1088, file: !213, line: 331, column: 7)
!1224 = !DILocation(line: 331, column: 7, scope: !1088)
!1225 = !DILocation(line: 333, column: 16, scope: !1226)
!1226 = distinct !DILexicalBlock(scope: !1223, file: !213, line: 332, column: 5)
!1227 = !DILocation(line: 334, column: 18, scope: !1226)
!1228 = !DILocation(line: 335, column: 5, scope: !1226)
!1229 = !DILocation(line: 336, column: 12, scope: !1230)
!1230 = distinct !DILexicalBlock(scope: !1223, file: !213, line: 336, column: 12)
!1231 = !DILocation(line: 336, column: 25, scope: !1230)
!1232 = !DILocation(line: 336, column: 39, scope: !1230)
!1233 = !DILocation(line: 336, column: 42, scope: !1230)
!1234 = !DILocation(line: 336, column: 55, scope: !1230)
!1235 = !DILocation(line: 337, column: 12, scope: !1230)
!1236 = !DILocation(line: 337, column: 15, scope: !1230)
!1237 = !DILocation(line: 337, column: 22, scope: !1230)
!1238 = !DILocation(line: 337, column: 32, scope: !1230)
!1239 = !DILocation(line: 338, column: 12, scope: !1230)
!1240 = !DILocation(line: 338, column: 17, scope: !1230)
!1241 = !DILocation(line: 338, column: 24, scope: !1230)
!1242 = !DILocation(line: 339, column: 12, scope: !1230)
!1243 = !DILocation(line: 339, column: 17, scope: !1230)
!1244 = !DILocation(line: 339, column: 24, scope: !1230)
!1245 = !DILocation(line: 336, column: 12, scope: !1223)
!1246 = !DILocation(line: 341, column: 16, scope: !1247)
!1247 = distinct !DILexicalBlock(scope: !1230, file: !213, line: 340, column: 5)
!1248 = !DILocation(line: 342, column: 20, scope: !1247)
!1249 = !DILocation(line: 342, column: 25, scope: !1247)
!1250 = !DILocation(line: 342, column: 18, scope: !1247)
!1251 = !DILocation(line: 343, column: 5, scope: !1247)
!1252 = !DILocation(line: 346, column: 20, scope: !1253)
!1253 = distinct !DILexicalBlock(scope: !1230, file: !213, line: 345, column: 5)
!1254 = !DILocation(line: 346, column: 25, scope: !1253)
!1255 = !DILocation(line: 346, column: 18, scope: !1253)
!1256 = !DILocation(line: 350, column: 11, scope: !1257)
!1257 = distinct !DILexicalBlock(scope: !1253, file: !213, line: 350, column: 11)
!1258 = !DILocation(line: 350, column: 18, scope: !1257)
!1259 = !DILocation(line: 350, column: 42, scope: !1257)
!1260 = !DILocation(line: 350, column: 45, scope: !1257)
!1261 = !DILocation(line: 350, column: 11, scope: !1253)
!1262 = !DILocation(line: 352, column: 24, scope: !1263)
!1263 = distinct !DILexicalBlock(scope: !1264, file: !213, line: 352, column: 15)
!1264 = distinct !DILexicalBlock(scope: !1257, file: !213, line: 351, column: 9)
!1265 = !DILocation(line: 352, column: 29, scope: !1263)
!1266 = !DILocation(line: 352, column: 41, scope: !1263)
!1267 = !DILocation(line: 352, column: 15, scope: !1263)
!1268 = !DILocation(line: 352, column: 61, scope: !1263)
!1269 = !DILocation(line: 352, column: 15, scope: !1264)
!1270 = !DILocation(line: 354, column: 21, scope: !1271)
!1271 = distinct !DILexicalBlock(scope: !1272, file: !213, line: 354, column: 19)
!1272 = distinct !DILexicalBlock(scope: !1263, file: !213, line: 353, column: 13)
!1273 = !DILocation(line: 354, column: 28, scope: !1271)
!1274 = !DILocation(line: 354, column: 19, scope: !1272)
!1275 = !DILocation(line: 355, column: 27, scope: !1271)
!1276 = !DILocation(line: 356, column: 31, scope: !1271)
!1277 = !DILocation(line: 356, column: 24, scope: !1271)
!1278 = !DILocation(line: 355, column: 17, scope: !1271)
!1279 = !DILocation(line: 357, column: 18, scope: !1272)
!1280 = !DILocation(line: 358, column: 13, scope: !1272)
!1281 = !DILocation(line: 360, column: 22, scope: !1264)
!1282 = !DILocation(line: 361, column: 9, scope: !1264)
!1283 = !DILocation(line: 363, column: 19, scope: !1253)
!1284 = !DILocation(line: 364, column: 19, scope: !1253)
!1285 = !DILocation(line: 364, column: 23, scope: !1253)
!1286 = !DILocation(line: 364, column: 36, scope: !1253)
!1287 = !DILocation(line: 365, column: 23, scope: !1253)
!1288 = !DILocation(line: 365, column: 26, scope: !1253)
!1289 = !DILocation(line: 365, column: 42, scope: !1253)
!1290 = !DILocation(line: 365, column: 54, scope: !1253)
!1291 = !DILocation(line: 365, column: 39, scope: !1253)
!1292 = !DILocation(line: 366, column: 19, scope: !1253)
!1293 = !DILocation(line: 366, column: 23, scope: !1253)
!1294 = !DILocation(line: 366, column: 36, scope: !1253)
!1295 = !DILocation(line: 367, column: 23, scope: !1253)
!1296 = !DILocation(line: 367, column: 26, scope: !1253)
!1297 = !DILocation(line: 367, column: 42, scope: !1253)
!1298 = !DILocation(line: 367, column: 54, scope: !1253)
!1299 = !DILocation(line: 367, column: 39, scope: !1253)
!1300 = !DILocation(line: 363, column: 16, scope: !1253)
!1301 = !DILocation(line: 371, column: 7, scope: !1302)
!1302 = distinct !DILexicalBlock(scope: !1088, file: !213, line: 371, column: 7)
!1303 = !DILocation(line: 372, column: 7, scope: !1302)
!1304 = !DILocation(line: 372, column: 10, scope: !1302)
!1305 = !DILocation(line: 373, column: 7, scope: !1302)
!1306 = !DILocation(line: 373, column: 10, scope: !1302)
!1307 = !DILocation(line: 371, column: 7, scope: !1088)
!1308 = !DILocation(line: 375, column: 7, scope: !1309)
!1309 = distinct !DILexicalBlock(scope: !1302, file: !213, line: 374, column: 5)
!1310 = distinct !{!1310, !1308, !1308}
!1311 = !DILocation(line: 375, column: 7, scope: !1312)
!1312 = distinct !DILexicalBlock(scope: !1313, file: !213, line: 375, column: 7)
!1313 = distinct !DILexicalBlock(scope: !1309, file: !213, line: 375, column: 7)
!1314 = !DILocation(line: 375, column: 7, scope: !1313)
!1315 = !DILocation(line: 376, column: 7, scope: !1309)
!1316 = !DILocation(line: 379, column: 7, scope: !1317)
!1317 = distinct !DILexicalBlock(scope: !1088, file: !213, line: 379, column: 7)
!1318 = !DILocation(line: 379, column: 7, scope: !1088)
!1319 = !DILocation(line: 381, column: 14, scope: !1320)
!1320 = distinct !DILexicalBlock(scope: !1321, file: !213, line: 381, column: 12)
!1321 = distinct !DILexicalBlock(scope: !1317, file: !213, line: 380, column: 5)
!1322 = !DILocation(line: 381, column: 21, scope: !1320)
!1323 = !DILocation(line: 381, column: 12, scope: !1321)
!1324 = !DILocation(line: 383, column: 27, scope: !1325)
!1325 = distinct !DILexicalBlock(scope: !1320, file: !213, line: 382, column: 9)
!1326 = !DILocation(line: 383, column: 32, scope: !1325)
!1327 = !DILocation(line: 383, column: 44, scope: !1325)
!1328 = !DILocation(line: 383, column: 50, scope: !1325)
!1329 = !DILocation(line: 383, column: 55, scope: !1325)
!1330 = !DILocation(line: 383, column: 17, scope: !1325)
!1331 = !DILocation(line: 383, column: 60, scope: !1325)
!1332 = !DILocation(line: 383, column: 14, scope: !1325)
!1333 = !DILocation(line: 388, column: 16, scope: !1334)
!1334 = distinct !DILexicalBlock(scope: !1325, file: !213, line: 388, column: 15)
!1335 = !DILocation(line: 388, column: 19, scope: !1334)
!1336 = !DILocation(line: 388, column: 22, scope: !1334)
!1337 = !DILocation(line: 388, column: 28, scope: !1334)
!1338 = !DILocation(line: 388, column: 15, scope: !1325)
!1339 = !DILocation(line: 390, column: 18, scope: !1340)
!1340 = distinct !DILexicalBlock(scope: !1334, file: !213, line: 389, column: 13)
!1341 = !DILocation(line: 391, column: 31, scope: !1340)
!1342 = !DILocation(line: 392, column: 13, scope: !1340)
!1343 = !DILocation(line: 393, column: 9, scope: !1325)
!1344 = !DILocalVariable(name: "err", scope: !1345, file: !213, line: 406, type: !215)
!1345 = distinct !DILexicalBlock(scope: !1320, file: !213, line: 395, column: 9)
!1346 = !DILocation(line: 406, column: 27, scope: !1345)
!1347 = !DILocation(line: 407, column: 33, scope: !1345)
!1348 = !DILocation(line: 407, column: 38, scope: !1345)
!1349 = !DILocation(line: 407, column: 50, scope: !1345)
!1350 = !DILocation(line: 407, column: 56, scope: !1345)
!1351 = !DILocation(line: 407, column: 68, scope: !1345)
!1352 = !DILocation(line: 407, column: 73, scope: !1345)
!1353 = !DILocation(line: 408, column: 33, scope: !1345)
!1354 = !DILocation(line: 408, column: 47, scope: !1345)
!1355 = !DILocation(line: 407, column: 15, scope: !1345)
!1356 = !DILocation(line: 409, column: 19, scope: !1345)
!1357 = !DILocation(line: 409, column: 11, scope: !1345)
!1358 = !DILocation(line: 412, column: 15, scope: !1359)
!1359 = distinct !DILexicalBlock(scope: !1345, file: !213, line: 410, column: 13)
!1360 = !DILocation(line: 415, column: 30, scope: !1359)
!1361 = !DILocation(line: 415, column: 35, scope: !1359)
!1362 = !DILocation(line: 415, column: 47, scope: !1359)
!1363 = !DILocation(line: 415, column: 53, scope: !1359)
!1364 = !DILocation(line: 415, column: 58, scope: !1359)
!1365 = !DILocation(line: 415, column: 21, scope: !1359)
!1366 = !DILocation(line: 415, column: 63, scope: !1359)
!1367 = !DILocation(line: 415, column: 18, scope: !1359)
!1368 = !DILocation(line: 416, column: 15, scope: !1359)
!1369 = !DILocation(line: 419, column: 18, scope: !1359)
!1370 = !DILocation(line: 420, column: 15, scope: !1359)
!1371 = !DILocation(line: 425, column: 24, scope: !1359)
!1372 = !DILocation(line: 426, column: 18, scope: !1359)
!1373 = !DILocation(line: 427, column: 15, scope: !1359)
!1374 = !DILocation(line: 430, column: 15, scope: !1359)
!1375 = !DILocation(line: 441, column: 11, scope: !1376)
!1376 = distinct !DILexicalBlock(scope: !1321, file: !213, line: 441, column: 11)
!1377 = !DILocation(line: 441, column: 20, scope: !1376)
!1378 = !DILocation(line: 441, column: 24, scope: !1376)
!1379 = !DILocation(line: 441, column: 27, scope: !1376)
!1380 = !DILocation(line: 441, column: 32, scope: !1376)
!1381 = !DILocation(line: 441, column: 39, scope: !1376)
!1382 = !DILocation(line: 441, column: 11, scope: !1321)
!1383 = !DILocation(line: 442, column: 19, scope: !1376)
!1384 = !DILocation(line: 442, column: 27, scope: !1376)
!1385 = !DILocation(line: 442, column: 31, scope: !1376)
!1386 = !DILocation(line: 445, column: 23, scope: !1376)
!1387 = !DILocation(line: 445, column: 16, scope: !1376)
!1388 = !DILocation(line: 442, column: 9, scope: !1376)
!1389 = !DILocation(line: 446, column: 5, scope: !1321)
!1390 = !DILocation(line: 448, column: 7, scope: !1391)
!1391 = distinct !DILexicalBlock(scope: !1088, file: !213, line: 448, column: 7)
!1392 = !DILocation(line: 448, column: 14, scope: !1391)
!1393 = !DILocation(line: 448, column: 24, scope: !1391)
!1394 = !DILocation(line: 448, column: 7, scope: !1088)
!1395 = !DILocalVariable(name: "changed", scope: !1396, file: !213, line: 450, type: !79)
!1396 = distinct !DILexicalBlock(scope: !1391, file: !213, line: 449, column: 5)
!1397 = !DILocation(line: 450, column: 12, scope: !1396)
!1398 = !DILocation(line: 451, column: 11, scope: !1396)
!1399 = !DILocation(line: 451, column: 20, scope: !1396)
!1400 = !DILocation(line: 451, column: 23, scope: !1396)
!1401 = !DILocation(line: 451, column: 26, scope: !1396)
!1402 = !DILocation(line: 451, column: 29, scope: !1396)
!1403 = !DILocation(line: 452, column: 10, scope: !1396)
!1404 = !DILocation(line: 452, column: 17, scope: !1396)
!1405 = !DILocation(line: 452, column: 21, scope: !1396)
!1406 = !DILocation(line: 452, column: 35, scope: !1396)
!1407 = !DILocation(line: 452, column: 38, scope: !1396)
!1408 = !DILocation(line: 452, column: 45, scope: !1396)
!1409 = !DILocation(line: 452, column: 57, scope: !1396)
!1410 = !DILocation(line: 452, column: 42, scope: !1396)
!1411 = !DILocation(line: 453, column: 16, scope: !1396)
!1412 = !DILocation(line: 453, column: 20, scope: !1396)
!1413 = !DILocation(line: 453, column: 24, scope: !1396)
!1414 = !DILocation(line: 453, column: 38, scope: !1396)
!1415 = !DILocation(line: 453, column: 41, scope: !1396)
!1416 = !DILocation(line: 453, column: 48, scope: !1396)
!1417 = !DILocation(line: 453, column: 60, scope: !1396)
!1418 = !DILocation(line: 453, column: 45, scope: !1396)
!1419 = !DILocation(line: 452, column: 13, scope: !1396)
!1420 = !DILocation(line: 455, column: 11, scope: !1421)
!1421 = distinct !DILexicalBlock(scope: !1396, file: !213, line: 455, column: 11)
!1422 = !DILocation(line: 455, column: 19, scope: !1421)
!1423 = !DILocation(line: 455, column: 22, scope: !1421)
!1424 = !DILocation(line: 455, column: 29, scope: !1421)
!1425 = !DILocation(line: 455, column: 39, scope: !1421)
!1426 = !DILocation(line: 455, column: 11, scope: !1396)
!1427 = !DILocalVariable(name: "ch_status", scope: !1428, file: !213, line: 457, type: !222)
!1428 = distinct !DILexicalBlock(scope: !1421, file: !213, line: 456, column: 9)
!1429 = !DILocation(line: 457, column: 30, scope: !1428)
!1430 = !DILocation(line: 458, column: 15, scope: !1428)
!1431 = !DILocation(line: 458, column: 14, scope: !1428)
!1432 = !DILocation(line: 459, column: 17, scope: !1428)
!1433 = !DILocation(line: 459, column: 16, scope: !1428)
!1434 = !DILocation(line: 460, column: 17, scope: !1428)
!1435 = !DILocation(line: 460, column: 16, scope: !1428)
!1436 = !DILocation(line: 462, column: 28, scope: !1428)
!1437 = !DILocation(line: 462, column: 44, scope: !1428)
!1438 = !DILocation(line: 463, column: 28, scope: !1428)
!1439 = !DILocation(line: 463, column: 35, scope: !1428)
!1440 = !DILocation(line: 463, column: 46, scope: !1428)
!1441 = !DILocation(line: 463, column: 53, scope: !1428)
!1442 = !DILocation(line: 462, column: 11, scope: !1428)
!1443 = !DILocation(line: 464, column: 9, scope: !1428)
!1444 = !DILocation(line: 465, column: 5, scope: !1396)
!1445 = !DILocation(line: 467, column: 10, scope: !1446)
!1446 = distinct !DILexicalBlock(scope: !1088, file: !213, line: 467, column: 8)
!1447 = !DILocation(line: 467, column: 17, scope: !1446)
!1448 = !DILocation(line: 467, column: 8, scope: !1088)
!1449 = !DILocation(line: 468, column: 14, scope: !1446)
!1450 = !DILocation(line: 468, column: 19, scope: !1446)
!1451 = !DILocation(line: 468, column: 5, scope: !1446)
!1452 = !DILocation(line: 470, column: 10, scope: !1088)
!1453 = !DILocation(line: 470, column: 3, scope: !1088)
!1454 = !DILocation(line: 471, column: 1, scope: !1088)
!1455 = distinct !DISubprogram(name: "ignore_ptr", scope: !1456, file: !1456, line: 36, type: !1457, isLocal: true, isDefinition: true, scopeLine: 36, flags: DIFlagPrototyped, isOptimized: false, unit: !212, variables: !25)
!1456 = !DIFile(filename: "../../lib/ignore-value.h", directory: "/home/ma481/Downloads/Chisel/chisel-bench/benchmark/chown-8.2/original/obj-llvm/src")
!1457 = !DISubroutineType(types: !1458)
!1458 = !{null, !16}
!1459 = !DILocalVariable(name: "p", arg: 1, scope: !1455, file: !1456, line: 36, type: !16)
!1460 = !DILocation(line: 36, column: 38, scope: !1455)
!1461 = !DILocation(line: 36, column: 50, scope: !1455)
!1462 = !DILocation(line: 36, column: 53, scope: !1455)
!1463 = distinct !DISubprogram(name: "lchownat", scope: !1464, file: !1464, line: 67, type: !1465, isLocal: true, isDefinition: true, scopeLine: 68, flags: DIFlagPrototyped, isOptimized: false, unit: !212, variables: !25)
!1464 = !DIFile(filename: "../../lib/openat.h", directory: "/home/ma481/Downloads/Chisel/chisel-bench/benchmark/chown-8.2/original/obj-llvm/src")
!1465 = !DISubroutineType(types: !1466)
!1466 = !{!23, !23, !12, !229, !231}
!1467 = !DILocalVariable(name: "fd", arg: 1, scope: !1463, file: !1464, line: 67, type: !23)
!1468 = !DILocation(line: 67, column: 15, scope: !1463)
!1469 = !DILocalVariable(name: "file", arg: 2, scope: !1463, file: !1464, line: 67, type: !12)
!1470 = !DILocation(line: 67, column: 31, scope: !1463)
!1471 = !DILocalVariable(name: "owner", arg: 3, scope: !1463, file: !1464, line: 67, type: !229)
!1472 = !DILocation(line: 67, column: 43, scope: !1463)
!1473 = !DILocalVariable(name: "group", arg: 4, scope: !1463, file: !1464, line: 67, type: !231)
!1474 = !DILocation(line: 67, column: 56, scope: !1463)
!1475 = !DILocation(line: 69, column: 20, scope: !1463)
!1476 = !DILocation(line: 69, column: 24, scope: !1463)
!1477 = !DILocation(line: 69, column: 30, scope: !1463)
!1478 = !DILocation(line: 69, column: 37, scope: !1463)
!1479 = !DILocation(line: 69, column: 10, scope: !1463)
!1480 = !DILocation(line: 69, column: 3, scope: !1463)
!1481 = distinct !DISubprogram(name: "restricted_chown", scope: !213, file: !213, line: 187, type: !1482, isLocal: true, isDefinition: true, scopeLine: 191, flags: DIFlagPrototyped, isOptimized: false, unit: !212, variables: !25)
!1482 = !DISubroutineType(types: !1483)
!1483 = !{!215, !23, !12, !1114, !229, !231, !229, !231}
!1484 = !DILocalVariable(name: "cwd_fd", arg: 1, scope: !1481, file: !213, line: 187, type: !23)
!1485 = !DILocation(line: 187, column: 23, scope: !1481)
!1486 = !DILocalVariable(name: "file", arg: 2, scope: !1481, file: !213, line: 187, type: !12)
!1487 = !DILocation(line: 187, column: 43, scope: !1481)
!1488 = !DILocalVariable(name: "orig_st", arg: 3, scope: !1481, file: !213, line: 188, type: !1114)
!1489 = !DILocation(line: 188, column: 38, scope: !1481)
!1490 = !DILocalVariable(name: "uid", arg: 4, scope: !1481, file: !213, line: 189, type: !229)
!1491 = !DILocation(line: 189, column: 25, scope: !1481)
!1492 = !DILocalVariable(name: "gid", arg: 5, scope: !1481, file: !213, line: 189, type: !231)
!1493 = !DILocation(line: 189, column: 36, scope: !1481)
!1494 = !DILocalVariable(name: "required_uid", arg: 6, scope: !1481, file: !213, line: 190, type: !229)
!1495 = !DILocation(line: 190, column: 25, scope: !1481)
!1496 = !DILocalVariable(name: "required_gid", arg: 7, scope: !1481, file: !213, line: 190, type: !231)
!1497 = !DILocation(line: 190, column: 45, scope: !1481)
!1498 = !DILocalVariable(name: "status", scope: !1481, file: !213, line: 192, type: !215)
!1499 = !DILocation(line: 192, column: 19, scope: !1481)
!1500 = !DILocalVariable(name: "st", scope: !1481, file: !213, line: 193, type: !972)
!1501 = !DILocation(line: 193, column: 15, scope: !1481)
!1502 = !DILocalVariable(name: "open_flags", scope: !1481, file: !213, line: 194, type: !23)
!1503 = !DILocation(line: 194, column: 7, scope: !1481)
!1504 = !DILocalVariable(name: "fd", scope: !1481, file: !213, line: 195, type: !23)
!1505 = !DILocation(line: 195, column: 7, scope: !1481)
!1506 = !DILocation(line: 197, column: 7, scope: !1507)
!1507 = distinct !DILexicalBlock(scope: !1481, file: !213, line: 197, column: 7)
!1508 = !DILocation(line: 197, column: 20, scope: !1507)
!1509 = !DILocation(line: 197, column: 34, scope: !1507)
!1510 = !DILocation(line: 197, column: 37, scope: !1507)
!1511 = !DILocation(line: 197, column: 50, scope: !1507)
!1512 = !DILocation(line: 197, column: 7, scope: !1481)
!1513 = !DILocation(line: 198, column: 5, scope: !1507)
!1514 = !DILocation(line: 200, column: 9, scope: !1515)
!1515 = distinct !DILexicalBlock(scope: !1481, file: !213, line: 200, column: 7)
!1516 = !DILocation(line: 200, column: 7, scope: !1481)
!1517 = !DILocation(line: 202, column: 11, scope: !1518)
!1518 = distinct !DILexicalBlock(scope: !1519, file: !213, line: 202, column: 11)
!1519 = distinct !DILexicalBlock(scope: !1515, file: !213, line: 201, column: 5)
!1520 = !DILocation(line: 202, column: 11, scope: !1519)
!1521 = !DILocation(line: 203, column: 20, scope: !1518)
!1522 = !DILocation(line: 203, column: 9, scope: !1518)
!1523 = !DILocation(line: 205, column: 9, scope: !1518)
!1524 = !DILocation(line: 206, column: 5, scope: !1519)
!1525 = !DILocation(line: 208, column: 16, scope: !1481)
!1526 = !DILocation(line: 208, column: 24, scope: !1481)
!1527 = !DILocation(line: 208, column: 41, scope: !1481)
!1528 = !DILocation(line: 208, column: 39, scope: !1481)
!1529 = !DILocation(line: 208, column: 8, scope: !1481)
!1530 = !DILocation(line: 208, column: 6, scope: !1481)
!1531 = !DILocation(line: 209, column: 15, scope: !1532)
!1532 = distinct !DILexicalBlock(scope: !1481, file: !213, line: 209, column: 7)
!1533 = !DILocation(line: 209, column: 12, scope: !1532)
!1534 = !DILocation(line: 210, column: 10, scope: !1532)
!1535 = !DILocation(line: 210, column: 14, scope: !1532)
!1536 = !DILocation(line: 210, column: 20, scope: !1532)
!1537 = !DILocation(line: 210, column: 30, scope: !1532)
!1538 = !DILocation(line: 210, column: 33, scope: !1532)
!1539 = !DILocation(line: 211, column: 14, scope: !1532)
!1540 = !DILocation(line: 211, column: 36, scope: !1532)
!1541 = !DILocation(line: 211, column: 44, scope: !1532)
!1542 = !DILocation(line: 211, column: 61, scope: !1532)
!1543 = !DILocation(line: 211, column: 59, scope: !1532)
!1544 = !DILocation(line: 211, column: 28, scope: !1532)
!1545 = !DILocation(line: 211, column: 26, scope: !1532)
!1546 = !DILocation(line: 211, column: 19, scope: !1532)
!1547 = !DILocation(line: 209, column: 7, scope: !1481)
!1548 = !DILocation(line: 212, column: 13, scope: !1532)
!1549 = !DILocation(line: 212, column: 19, scope: !1532)
!1550 = !DILocation(line: 212, column: 5, scope: !1532)
!1551 = !DILocation(line: 214, column: 14, scope: !1552)
!1552 = distinct !DILexicalBlock(scope: !1481, file: !213, line: 214, column: 7)
!1553 = !DILocation(line: 214, column: 7, scope: !1552)
!1554 = !DILocation(line: 214, column: 23, scope: !1552)
!1555 = !DILocation(line: 214, column: 7, scope: !1481)
!1556 = !DILocation(line: 215, column: 12, scope: !1552)
!1557 = !DILocation(line: 215, column: 5, scope: !1552)
!1558 = !DILocation(line: 216, column: 14, scope: !1559)
!1559 = distinct !DILexicalBlock(scope: !1552, file: !213, line: 216, column: 12)
!1560 = !DILocation(line: 216, column: 12, scope: !1552)
!1561 = !DILocation(line: 217, column: 12, scope: !1559)
!1562 = !DILocation(line: 217, column: 5, scope: !1559)
!1563 = !DILocation(line: 218, column: 13, scope: !1564)
!1564 = distinct !DILexicalBlock(scope: !1559, file: !213, line: 218, column: 12)
!1565 = !DILocation(line: 218, column: 26, scope: !1564)
!1566 = !DILocation(line: 218, column: 40, scope: !1564)
!1567 = !DILocation(line: 218, column: 43, scope: !1564)
!1568 = !DILocation(line: 218, column: 62, scope: !1564)
!1569 = !DILocation(line: 218, column: 56, scope: !1564)
!1570 = !DILocation(line: 219, column: 12, scope: !1564)
!1571 = !DILocation(line: 219, column: 16, scope: !1564)
!1572 = !DILocation(line: 219, column: 29, scope: !1564)
!1573 = !DILocation(line: 219, column: 43, scope: !1564)
!1574 = !DILocation(line: 219, column: 46, scope: !1564)
!1575 = !DILocation(line: 219, column: 65, scope: !1564)
!1576 = !DILocation(line: 219, column: 59, scope: !1564)
!1577 = !DILocation(line: 218, column: 12, scope: !1559)
!1578 = !DILocation(line: 221, column: 19, scope: !1579)
!1579 = distinct !DILexicalBlock(scope: !1580, file: !213, line: 221, column: 11)
!1580 = distinct !DILexicalBlock(scope: !1564, file: !213, line: 220, column: 5)
!1581 = !DILocation(line: 221, column: 23, scope: !1579)
!1582 = !DILocation(line: 221, column: 28, scope: !1579)
!1583 = !DILocation(line: 221, column: 11, scope: !1579)
!1584 = !DILocation(line: 221, column: 33, scope: !1579)
!1585 = !DILocation(line: 221, column: 11, scope: !1580)
!1586 = !DILocation(line: 223, column: 28, scope: !1587)
!1587 = distinct !DILexicalBlock(scope: !1579, file: !213, line: 222, column: 9)
!1588 = !DILocation(line: 223, column: 21, scope: !1587)
!1589 = !DILocation(line: 223, column: 32, scope: !1587)
!1590 = !DILocation(line: 223, column: 18, scope: !1587)
!1591 = !DILocation(line: 225, column: 18, scope: !1587)
!1592 = !DILocation(line: 225, column: 11, scope: !1587)
!1593 = !DILocation(line: 229, column: 18, scope: !1594)
!1594 = distinct !DILexicalBlock(scope: !1579, file: !213, line: 228, column: 9)
!1595 = !DILocation(line: 231, column: 5, scope: !1580)
!1596 = !DILocalVariable(name: "saved_errno", scope: !1597, file: !213, line: 234, type: !23)
!1597 = distinct !DILexicalBlock(scope: !1481, file: !213, line: 233, column: 3)
!1598 = !DILocation(line: 234, column: 9, scope: !1597)
!1599 = !DILocation(line: 234, column: 23, scope: !1597)
!1600 = !DILocation(line: 235, column: 12, scope: !1597)
!1601 = !DILocation(line: 235, column: 5, scope: !1597)
!1602 = !DILocation(line: 236, column: 13, scope: !1597)
!1603 = !DILocation(line: 236, column: 5, scope: !1597)
!1604 = !DILocation(line: 236, column: 11, scope: !1597)
!1605 = !DILocation(line: 237, column: 12, scope: !1597)
!1606 = !DILocation(line: 237, column: 5, scope: !1597)
!1607 = !DILocation(line: 239, column: 1, scope: !1481)
!1608 = distinct !DISubprogram(name: "chownat", scope: !1464, file: !1464, line: 61, type: !1465, isLocal: true, isDefinition: true, scopeLine: 62, flags: DIFlagPrototyped, isOptimized: false, unit: !212, variables: !25)
!1609 = !DILocalVariable(name: "fd", arg: 1, scope: !1608, file: !1464, line: 61, type: !23)
!1610 = !DILocation(line: 61, column: 14, scope: !1608)
!1611 = !DILocalVariable(name: "file", arg: 2, scope: !1608, file: !1464, line: 61, type: !12)
!1612 = !DILocation(line: 61, column: 30, scope: !1608)
!1613 = !DILocalVariable(name: "owner", arg: 3, scope: !1608, file: !1464, line: 61, type: !229)
!1614 = !DILocation(line: 61, column: 42, scope: !1608)
!1615 = !DILocalVariable(name: "group", arg: 4, scope: !1608, file: !1464, line: 61, type: !231)
!1616 = !DILocation(line: 61, column: 55, scope: !1608)
!1617 = !DILocation(line: 63, column: 20, scope: !1608)
!1618 = !DILocation(line: 63, column: 24, scope: !1608)
!1619 = !DILocation(line: 63, column: 30, scope: !1608)
!1620 = !DILocation(line: 63, column: 37, scope: !1608)
!1621 = !DILocation(line: 63, column: 10, scope: !1608)
!1622 = !DILocation(line: 63, column: 3, scope: !1608)
!1623 = distinct !DISubprogram(name: "describe_change", scope: !213, file: !213, line: 110, type: !1624, isLocal: true, isDefinition: true, scopeLine: 112, flags: DIFlagPrototyped, isOptimized: false, unit: !212, variables: !25)
!1624 = !DISubroutineType(types: !1625)
!1625 = !{null, !12, !222, !12, !12}
!1626 = !DILocalVariable(name: "file", arg: 1, scope: !1623, file: !213, line: 110, type: !12)
!1627 = !DILocation(line: 110, column: 30, scope: !1623)
!1628 = !DILocalVariable(name: "changed", arg: 2, scope: !1623, file: !213, line: 110, type: !222)
!1629 = !DILocation(line: 110, column: 55, scope: !1623)
!1630 = !DILocalVariable(name: "user", arg: 3, scope: !1623, file: !213, line: 111, type: !12)
!1631 = !DILocation(line: 111, column: 30, scope: !1623)
!1632 = !DILocalVariable(name: "group", arg: 4, scope: !1623, file: !213, line: 111, type: !12)
!1633 = !DILocation(line: 111, column: 48, scope: !1623)
!1634 = !DILocalVariable(name: "fmt", scope: !1623, file: !213, line: 113, type: !12)
!1635 = !DILocation(line: 113, column: 15, scope: !1623)
!1636 = !DILocalVariable(name: "spec", scope: !1623, file: !213, line: 114, type: !12)
!1637 = !DILocation(line: 114, column: 15, scope: !1623)
!1638 = !DILocalVariable(name: "spec_allocated", scope: !1623, file: !213, line: 115, type: !15)
!1639 = !DILocation(line: 115, column: 9, scope: !1623)
!1640 = !DILocation(line: 117, column: 7, scope: !1641)
!1641 = distinct !DILexicalBlock(scope: !1623, file: !213, line: 117, column: 7)
!1642 = !DILocation(line: 117, column: 15, scope: !1641)
!1643 = !DILocation(line: 117, column: 7, scope: !1623)
!1644 = !DILocation(line: 120, column: 22, scope: !1645)
!1645 = distinct !DILexicalBlock(scope: !1641, file: !213, line: 118, column: 5)
!1646 = !DILocation(line: 120, column: 15, scope: !1645)
!1647 = !DILocation(line: 119, column: 7, scope: !1645)
!1648 = !DILocation(line: 121, column: 7, scope: !1645)
!1649 = !DILocation(line: 124, column: 7, scope: !1650)
!1650 = distinct !DILexicalBlock(scope: !1623, file: !213, line: 124, column: 7)
!1651 = !DILocation(line: 124, column: 7, scope: !1623)
!1652 = !DILocation(line: 126, column: 11, scope: !1653)
!1653 = distinct !DILexicalBlock(scope: !1654, file: !213, line: 126, column: 11)
!1654 = distinct !DILexicalBlock(scope: !1650, file: !213, line: 125, column: 5)
!1655 = !DILocation(line: 126, column: 11, scope: !1654)
!1656 = !DILocation(line: 128, column: 45, scope: !1657)
!1657 = distinct !DILexicalBlock(scope: !1653, file: !213, line: 127, column: 9)
!1658 = !DILocation(line: 128, column: 37, scope: !1657)
!1659 = !DILocation(line: 128, column: 51, scope: !1657)
!1660 = !DILocation(line: 128, column: 65, scope: !1657)
!1661 = !DILocation(line: 128, column: 57, scope: !1657)
!1662 = !DILocation(line: 128, column: 55, scope: !1657)
!1663 = !DILocation(line: 128, column: 72, scope: !1657)
!1664 = !DILocation(line: 128, column: 28, scope: !1657)
!1665 = !DILocation(line: 128, column: 26, scope: !1657)
!1666 = !DILocation(line: 129, column: 35, scope: !1657)
!1667 = !DILocation(line: 129, column: 51, scope: !1657)
!1668 = !DILocation(line: 129, column: 27, scope: !1657)
!1669 = !DILocation(line: 129, column: 19, scope: !1657)
!1670 = !DILocation(line: 129, column: 64, scope: !1657)
!1671 = !DILocation(line: 129, column: 11, scope: !1657)
!1672 = !DILocation(line: 130, column: 18, scope: !1657)
!1673 = !DILocation(line: 130, column: 16, scope: !1657)
!1674 = !DILocation(line: 131, column: 9, scope: !1657)
!1675 = !DILocation(line: 134, column: 18, scope: !1676)
!1676 = distinct !DILexicalBlock(scope: !1653, file: !213, line: 133, column: 9)
!1677 = !DILocation(line: 134, column: 16, scope: !1676)
!1678 = !DILocation(line: 136, column: 5, scope: !1654)
!1679 = !DILocation(line: 139, column: 14, scope: !1680)
!1680 = distinct !DILexicalBlock(scope: !1650, file: !213, line: 138, column: 5)
!1681 = !DILocation(line: 139, column: 12, scope: !1680)
!1682 = !DILocation(line: 142, column: 11, scope: !1623)
!1683 = !DILocation(line: 142, column: 3, scope: !1623)
!1684 = !DILocation(line: 145, column: 14, scope: !1685)
!1685 = distinct !DILexicalBlock(scope: !1623, file: !213, line: 143, column: 5)
!1686 = !DILocation(line: 146, column: 16, scope: !1685)
!1687 = !DILocation(line: 145, column: 11, scope: !1685)
!1688 = !DILocation(line: 148, column: 7, scope: !1685)
!1689 = !DILocation(line: 150, column: 14, scope: !1685)
!1690 = !DILocation(line: 151, column: 16, scope: !1685)
!1691 = !DILocation(line: 150, column: 11, scope: !1685)
!1692 = !DILocation(line: 153, column: 7, scope: !1685)
!1693 = !DILocation(line: 155, column: 14, scope: !1685)
!1694 = !DILocation(line: 156, column: 16, scope: !1685)
!1695 = !DILocation(line: 155, column: 11, scope: !1685)
!1696 = !DILocation(line: 158, column: 7, scope: !1685)
!1697 = !DILocation(line: 160, column: 7, scope: !1685)
!1698 = !DILocation(line: 163, column: 11, scope: !1623)
!1699 = !DILocation(line: 163, column: 23, scope: !1623)
!1700 = !DILocation(line: 163, column: 16, scope: !1623)
!1701 = !DILocation(line: 163, column: 30, scope: !1623)
!1702 = !DILocation(line: 163, column: 3, scope: !1623)
!1703 = !DILocation(line: 165, column: 9, scope: !1623)
!1704 = !DILocation(line: 165, column: 3, scope: !1623)
!1705 = !DILocation(line: 166, column: 1, scope: !1623)
!1706 = distinct !DISubprogram(name: "set_program_name", scope: !60, file: !60, line: 39, type: !1707, isLocal: false, isDefinition: true, scopeLine: 40, flags: DIFlagPrototyped, isOptimized: false, unit: !59, variables: !25)
!1707 = !DISubroutineType(types: !1708)
!1708 = !{null, !12}
!1709 = !DILocalVariable(name: "argv0", arg: 1, scope: !1706, file: !60, line: 39, type: !12)
!1710 = !DILocation(line: 39, column: 31, scope: !1706)
!1711 = !DILocalVariable(name: "slash", scope: !1706, file: !60, line: 46, type: !12)
!1712 = !DILocation(line: 46, column: 15, scope: !1706)
!1713 = !DILocalVariable(name: "base", scope: !1706, file: !60, line: 47, type: !12)
!1714 = !DILocation(line: 47, column: 15, scope: !1706)
!1715 = !DILocation(line: 51, column: 7, scope: !1716)
!1716 = distinct !DILexicalBlock(scope: !1706, file: !60, line: 51, column: 7)
!1717 = !DILocation(line: 51, column: 13, scope: !1716)
!1718 = !DILocation(line: 51, column: 7, scope: !1706)
!1719 = !DILocation(line: 55, column: 7, scope: !1720)
!1720 = distinct !DILexicalBlock(scope: !1716, file: !60, line: 52, column: 5)
!1721 = !DILocation(line: 54, column: 7, scope: !1720)
!1722 = !DILocation(line: 56, column: 7, scope: !1720)
!1723 = !DILocation(line: 59, column: 20, scope: !1706)
!1724 = !DILocation(line: 59, column: 11, scope: !1706)
!1725 = !DILocation(line: 59, column: 9, scope: !1706)
!1726 = !DILocation(line: 60, column: 11, scope: !1706)
!1727 = !DILocation(line: 60, column: 17, scope: !1706)
!1728 = !DILocation(line: 60, column: 27, scope: !1706)
!1729 = !DILocation(line: 60, column: 33, scope: !1706)
!1730 = !DILocation(line: 60, column: 39, scope: !1706)
!1731 = !DILocation(line: 60, column: 8, scope: !1706)
!1732 = !DILocation(line: 61, column: 7, scope: !1733)
!1733 = distinct !DILexicalBlock(scope: !1706, file: !60, line: 61, column: 7)
!1734 = !DILocation(line: 61, column: 14, scope: !1733)
!1735 = !DILocation(line: 61, column: 12, scope: !1733)
!1736 = !DILocation(line: 61, column: 20, scope: !1733)
!1737 = !DILocation(line: 61, column: 25, scope: !1733)
!1738 = !DILocation(line: 61, column: 37, scope: !1733)
!1739 = !DILocation(line: 61, column: 42, scope: !1733)
!1740 = !DILocation(line: 61, column: 28, scope: !1733)
!1741 = !DILocation(line: 61, column: 61, scope: !1733)
!1742 = !DILocation(line: 61, column: 7, scope: !1706)
!1743 = !DILocation(line: 63, column: 15, scope: !1744)
!1744 = distinct !DILexicalBlock(scope: !1733, file: !60, line: 62, column: 5)
!1745 = !DILocation(line: 63, column: 13, scope: !1744)
!1746 = !DILocation(line: 64, column: 20, scope: !1747)
!1747 = distinct !DILexicalBlock(scope: !1744, file: !60, line: 64, column: 11)
!1748 = !DILocation(line: 64, column: 11, scope: !1747)
!1749 = !DILocation(line: 64, column: 36, scope: !1747)
!1750 = !DILocation(line: 64, column: 11, scope: !1744)
!1751 = !DILocation(line: 66, column: 12, scope: !1752)
!1752 = distinct !DILexicalBlock(scope: !1747, file: !60, line: 65, column: 2)
!1753 = !DILocation(line: 66, column: 17, scope: !1752)
!1754 = !DILocation(line: 66, column: 10, scope: !1752)
!1755 = !DILocation(line: 70, column: 45, scope: !1752)
!1756 = !DILocation(line: 70, column: 34, scope: !1752)
!1757 = !DILocation(line: 72, column: 2, scope: !1752)
!1758 = !DILocation(line: 73, column: 5, scope: !1744)
!1759 = !DILocation(line: 84, column: 18, scope: !1706)
!1760 = !DILocation(line: 84, column: 16, scope: !1706)
!1761 = !DILocation(line: 90, column: 38, scope: !1706)
!1762 = !DILocation(line: 90, column: 27, scope: !1706)
!1763 = !DILocation(line: 92, column: 1, scope: !1706)
!1764 = distinct !DISubprogram(name: "version_etc_arn", scope: !234, file: !234, line: 62, type: !1765, isLocal: false, isDefinition: true, scopeLine: 66, flags: DIFlagPrototyped, isOptimized: false, unit: !233, variables: !25)
!1765 = !DISubroutineType(types: !1766)
!1766 = !{null, !1767, !12, !12, !12, !1816, !91}
!1767 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1768, size: 64)
!1768 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !1769, line: 7, baseType: !1770)
!1769 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/FILE.h", directory: "/home/ma481/Downloads/Chisel/chisel-bench/benchmark/chown-8.2/original/obj-llvm/lib")
!1770 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !1771, line: 245, size: 1728, elements: !1772)
!1771 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/libio.h", directory: "/home/ma481/Downloads/Chisel/chisel-bench/benchmark/chown-8.2/original/obj-llvm/lib")
!1772 = !{!1773, !1774, !1775, !1776, !1777, !1778, !1779, !1780, !1781, !1782, !1783, !1784, !1785, !1793, !1794, !1795, !1796, !1797, !1798, !1800, !1801, !1804, !1806, !1807, !1808, !1809, !1810, !1811, !1812}
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !1770, file: !1771, line: 246, baseType: !23, size: 32)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !1770, file: !1771, line: 251, baseType: !15, size: 64, offset: 64)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !1770, file: !1771, line: 252, baseType: !15, size: 64, offset: 128)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !1770, file: !1771, line: 253, baseType: !15, size: 64, offset: 192)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !1770, file: !1771, line: 254, baseType: !15, size: 64, offset: 256)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !1770, file: !1771, line: 255, baseType: !15, size: 64, offset: 320)
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !1770, file: !1771, line: 256, baseType: !15, size: 64, offset: 384)
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !1770, file: !1771, line: 257, baseType: !15, size: 64, offset: 448)
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !1770, file: !1771, line: 258, baseType: !15, size: 64, offset: 512)
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !1770, file: !1771, line: 260, baseType: !15, size: 64, offset: 576)
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !1770, file: !1771, line: 261, baseType: !15, size: 64, offset: 640)
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !1770, file: !1771, line: 262, baseType: !15, size: 64, offset: 704)
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !1770, file: !1771, line: 264, baseType: !1786, size: 64, offset: 768)
!1786 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1787, size: 64)
!1787 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !1771, line: 160, size: 192, elements: !1788)
!1788 = !{!1789, !1790, !1792}
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !1787, file: !1771, line: 161, baseType: !1786, size: 64)
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "_sbuf", scope: !1787, file: !1771, line: 162, baseType: !1791, size: 64, offset: 64)
!1791 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1770, size: 64)
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "_pos", scope: !1787, file: !1771, line: 166, baseType: !23, size: 32, offset: 128)
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !1770, file: !1771, line: 266, baseType: !1791, size: 64, offset: 832)
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !1770, file: !1771, line: 268, baseType: !23, size: 32, offset: 896)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !1770, file: !1771, line: 272, baseType: !23, size: 32, offset: 928)
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !1770, file: !1771, line: 274, baseType: !302, size: 64, offset: 960)
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !1770, file: !1771, line: 278, baseType: !143, size: 16, offset: 1024)
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !1770, file: !1771, line: 279, baseType: !1799, size: 8, offset: 1040)
!1799 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !1770, file: !1771, line: 280, baseType: !324, size: 8, offset: 1048)
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !1770, file: !1771, line: 284, baseType: !1802, size: 64, offset: 1088)
!1802 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1803, size: 64)
!1803 = !DIDerivedType(tag: DW_TAG_typedef, name: "_IO_lock_t", file: !1771, line: 154, baseType: null)
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !1770, file: !1771, line: 293, baseType: !1805, size: 64, offset: 1152)
!1805 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off64_t", file: !192, line: 141, baseType: !268)
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "__pad1", scope: !1770, file: !1771, line: 301, baseType: !16, size: 64, offset: 1216)
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "__pad2", scope: !1770, file: !1771, line: 302, baseType: !16, size: 64, offset: 1280)
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "__pad3", scope: !1770, file: !1771, line: 303, baseType: !16, size: 64, offset: 1344)
!1809 = !DIDerivedType(tag: DW_TAG_member, name: "__pad4", scope: !1770, file: !1771, line: 304, baseType: !16, size: 64, offset: 1408)
!1810 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !1770, file: !1771, line: 306, baseType: !91, size: 64, offset: 1472)
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !1770, file: !1771, line: 307, baseType: !23, size: 32, offset: 1536)
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !1770, file: !1771, line: 309, baseType: !1813, size: 160, offset: 1568)
!1813 = !DICompositeType(tag: DW_TAG_array_type, baseType: !14, size: 160, elements: !1814)
!1814 = !{!1815}
!1815 = !DISubrange(count: 20)
!1816 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !179, size: 64)
!1817 = !DILocalVariable(name: "stream", arg: 1, scope: !1764, file: !234, line: 62, type: !1767)
!1818 = !DILocation(line: 62, column: 24, scope: !1764)
!1819 = !DILocalVariable(name: "command_name", arg: 2, scope: !1764, file: !234, line: 63, type: !12)
!1820 = !DILocation(line: 63, column: 16, scope: !1764)
!1821 = !DILocalVariable(name: "package", arg: 3, scope: !1764, file: !234, line: 63, type: !12)
!1822 = !DILocation(line: 63, column: 42, scope: !1764)
!1823 = !DILocalVariable(name: "version", arg: 4, scope: !1764, file: !234, line: 64, type: !12)
!1824 = !DILocation(line: 64, column: 16, scope: !1764)
!1825 = !DILocalVariable(name: "authors", arg: 5, scope: !1764, file: !234, line: 65, type: !1816)
!1826 = !DILocation(line: 65, column: 25, scope: !1764)
!1827 = !DILocalVariable(name: "n_authors", arg: 6, scope: !1764, file: !234, line: 65, type: !91)
!1828 = !DILocation(line: 65, column: 41, scope: !1764)
!1829 = !DILocation(line: 67, column: 7, scope: !1830)
!1830 = distinct !DILexicalBlock(scope: !1764, file: !234, line: 67, column: 7)
!1831 = !DILocation(line: 67, column: 7, scope: !1764)
!1832 = !DILocation(line: 68, column: 14, scope: !1830)
!1833 = !DILocation(line: 68, column: 38, scope: !1830)
!1834 = !DILocation(line: 68, column: 52, scope: !1830)
!1835 = !DILocation(line: 68, column: 61, scope: !1830)
!1836 = !DILocation(line: 68, column: 5, scope: !1830)
!1837 = !DILocation(line: 70, column: 14, scope: !1830)
!1838 = !DILocation(line: 70, column: 33, scope: !1830)
!1839 = !DILocation(line: 70, column: 42, scope: !1830)
!1840 = !DILocation(line: 70, column: 5, scope: !1830)
!1841 = !DILocation(line: 84, column: 12, scope: !1764)
!1842 = !DILocation(line: 84, column: 3, scope: !1764)
!1843 = !DILocation(line: 86, column: 3, scope: !1764)
!1844 = !DILocation(line: 95, column: 11, scope: !1764)
!1845 = !DILocation(line: 95, column: 3, scope: !1764)
!1846 = !DILocation(line: 99, column: 7, scope: !1847)
!1847 = distinct !DILexicalBlock(scope: !1764, file: !234, line: 96, column: 5)
!1848 = !DILocation(line: 102, column: 16, scope: !1847)
!1849 = !DILocation(line: 102, column: 47, scope: !1847)
!1850 = !DILocation(line: 102, column: 7, scope: !1847)
!1851 = !DILocation(line: 103, column: 7, scope: !1847)
!1852 = !DILocation(line: 106, column: 16, scope: !1847)
!1853 = !DILocation(line: 106, column: 54, scope: !1847)
!1854 = !DILocation(line: 106, column: 66, scope: !1847)
!1855 = !DILocation(line: 106, column: 7, scope: !1847)
!1856 = !DILocation(line: 107, column: 7, scope: !1847)
!1857 = !DILocation(line: 110, column: 16, scope: !1847)
!1858 = !DILocation(line: 111, column: 9, scope: !1847)
!1859 = !DILocation(line: 111, column: 21, scope: !1847)
!1860 = !DILocation(line: 111, column: 33, scope: !1847)
!1861 = !DILocation(line: 110, column: 7, scope: !1847)
!1862 = !DILocation(line: 112, column: 7, scope: !1847)
!1863 = !DILocation(line: 117, column: 16, scope: !1847)
!1864 = !DILocation(line: 118, column: 9, scope: !1847)
!1865 = !DILocation(line: 118, column: 21, scope: !1847)
!1866 = !DILocation(line: 118, column: 33, scope: !1847)
!1867 = !DILocation(line: 118, column: 45, scope: !1847)
!1868 = !DILocation(line: 117, column: 7, scope: !1847)
!1869 = !DILocation(line: 119, column: 7, scope: !1847)
!1870 = !DILocation(line: 124, column: 16, scope: !1847)
!1871 = !DILocation(line: 125, column: 9, scope: !1847)
!1872 = !DILocation(line: 125, column: 21, scope: !1847)
!1873 = !DILocation(line: 125, column: 33, scope: !1847)
!1874 = !DILocation(line: 125, column: 45, scope: !1847)
!1875 = !DILocation(line: 125, column: 57, scope: !1847)
!1876 = !DILocation(line: 124, column: 7, scope: !1847)
!1877 = !DILocation(line: 126, column: 7, scope: !1847)
!1878 = !DILocation(line: 131, column: 16, scope: !1847)
!1879 = !DILocation(line: 132, column: 9, scope: !1847)
!1880 = !DILocation(line: 132, column: 21, scope: !1847)
!1881 = !DILocation(line: 132, column: 33, scope: !1847)
!1882 = !DILocation(line: 132, column: 45, scope: !1847)
!1883 = !DILocation(line: 132, column: 57, scope: !1847)
!1884 = !DILocation(line: 133, column: 9, scope: !1847)
!1885 = !DILocation(line: 131, column: 7, scope: !1847)
!1886 = !DILocation(line: 134, column: 7, scope: !1847)
!1887 = !DILocation(line: 139, column: 16, scope: !1847)
!1888 = !DILocation(line: 140, column: 9, scope: !1847)
!1889 = !DILocation(line: 140, column: 21, scope: !1847)
!1890 = !DILocation(line: 140, column: 33, scope: !1847)
!1891 = !DILocation(line: 140, column: 45, scope: !1847)
!1892 = !DILocation(line: 140, column: 57, scope: !1847)
!1893 = !DILocation(line: 141, column: 9, scope: !1847)
!1894 = !DILocation(line: 141, column: 21, scope: !1847)
!1895 = !DILocation(line: 139, column: 7, scope: !1847)
!1896 = !DILocation(line: 142, column: 7, scope: !1847)
!1897 = !DILocation(line: 147, column: 16, scope: !1847)
!1898 = !DILocation(line: 149, column: 3, scope: !1847)
!1899 = !DILocation(line: 149, column: 15, scope: !1847)
!1900 = !DILocation(line: 149, column: 27, scope: !1847)
!1901 = !DILocation(line: 149, column: 39, scope: !1847)
!1902 = !DILocation(line: 149, column: 51, scope: !1847)
!1903 = !DILocation(line: 150, column: 3, scope: !1847)
!1904 = !DILocation(line: 150, column: 15, scope: !1847)
!1905 = !DILocation(line: 150, column: 27, scope: !1847)
!1906 = !DILocation(line: 147, column: 7, scope: !1847)
!1907 = !DILocation(line: 151, column: 7, scope: !1847)
!1908 = !DILocation(line: 156, column: 16, scope: !1847)
!1909 = !DILocation(line: 158, column: 9, scope: !1847)
!1910 = !DILocation(line: 158, column: 21, scope: !1847)
!1911 = !DILocation(line: 158, column: 33, scope: !1847)
!1912 = !DILocation(line: 158, column: 45, scope: !1847)
!1913 = !DILocation(line: 158, column: 57, scope: !1847)
!1914 = !DILocation(line: 159, column: 9, scope: !1847)
!1915 = !DILocation(line: 159, column: 21, scope: !1847)
!1916 = !DILocation(line: 159, column: 33, scope: !1847)
!1917 = !DILocation(line: 159, column: 45, scope: !1847)
!1918 = !DILocation(line: 156, column: 7, scope: !1847)
!1919 = !DILocation(line: 160, column: 7, scope: !1847)
!1920 = !DILocation(line: 167, column: 16, scope: !1847)
!1921 = !DILocation(line: 169, column: 3, scope: !1847)
!1922 = !DILocation(line: 169, column: 15, scope: !1847)
!1923 = !DILocation(line: 169, column: 27, scope: !1847)
!1924 = !DILocation(line: 169, column: 39, scope: !1847)
!1925 = !DILocation(line: 169, column: 51, scope: !1847)
!1926 = !DILocation(line: 170, column: 3, scope: !1847)
!1927 = !DILocation(line: 170, column: 15, scope: !1847)
!1928 = !DILocation(line: 170, column: 27, scope: !1847)
!1929 = !DILocation(line: 170, column: 39, scope: !1847)
!1930 = !DILocation(line: 167, column: 7, scope: !1847)
!1931 = !DILocation(line: 171, column: 7, scope: !1847)
!1932 = !DILocation(line: 173, column: 1, scope: !1764)
!1933 = distinct !DISubprogram(name: "version_etc_ar", scope: !234, file: !234, line: 180, type: !1934, isLocal: false, isDefinition: true, scopeLine: 183, flags: DIFlagPrototyped, isOptimized: false, unit: !233, variables: !25)
!1934 = !DISubroutineType(types: !1935)
!1935 = !{null, !1767, !12, !12, !12, !1816}
!1936 = !DILocalVariable(name: "stream", arg: 1, scope: !1933, file: !234, line: 180, type: !1767)
!1937 = !DILocation(line: 180, column: 23, scope: !1933)
!1938 = !DILocalVariable(name: "command_name", arg: 2, scope: !1933, file: !234, line: 181, type: !12)
!1939 = !DILocation(line: 181, column: 15, scope: !1933)
!1940 = !DILocalVariable(name: "package", arg: 3, scope: !1933, file: !234, line: 181, type: !12)
!1941 = !DILocation(line: 181, column: 41, scope: !1933)
!1942 = !DILocalVariable(name: "version", arg: 4, scope: !1933, file: !234, line: 182, type: !12)
!1943 = !DILocation(line: 182, column: 15, scope: !1933)
!1944 = !DILocalVariable(name: "authors", arg: 5, scope: !1933, file: !234, line: 182, type: !1816)
!1945 = !DILocation(line: 182, column: 45, scope: !1933)
!1946 = !DILocalVariable(name: "n_authors", scope: !1933, file: !234, line: 184, type: !91)
!1947 = !DILocation(line: 184, column: 10, scope: !1933)
!1948 = !DILocation(line: 186, column: 18, scope: !1949)
!1949 = distinct !DILexicalBlock(scope: !1933, file: !234, line: 186, column: 3)
!1950 = !DILocation(line: 186, column: 8, scope: !1949)
!1951 = !DILocation(line: 186, column: 23, scope: !1952)
!1952 = distinct !DILexicalBlock(scope: !1949, file: !234, line: 186, column: 3)
!1953 = !DILocation(line: 186, column: 31, scope: !1952)
!1954 = !DILocation(line: 186, column: 3, scope: !1949)
!1955 = !DILocation(line: 186, column: 52, scope: !1952)
!1956 = !DILocation(line: 186, column: 3, scope: !1952)
!1957 = distinct !{!1957, !1954, !1958}
!1958 = !DILocation(line: 187, column: 5, scope: !1949)
!1959 = !DILocation(line: 188, column: 20, scope: !1933)
!1960 = !DILocation(line: 188, column: 28, scope: !1933)
!1961 = !DILocation(line: 188, column: 42, scope: !1933)
!1962 = !DILocation(line: 188, column: 51, scope: !1933)
!1963 = !DILocation(line: 188, column: 60, scope: !1933)
!1964 = !DILocation(line: 188, column: 69, scope: !1933)
!1965 = !DILocation(line: 188, column: 3, scope: !1933)
!1966 = !DILocation(line: 189, column: 1, scope: !1933)
!1967 = distinct !DISubprogram(name: "version_etc_va", scope: !234, file: !234, line: 196, type: !1968, isLocal: false, isDefinition: true, scopeLine: 199, flags: DIFlagPrototyped, isOptimized: false, unit: !233, variables: !25)
!1968 = !DISubroutineType(types: !1969)
!1969 = !{null, !1767, !12, !12, !12, !1970}
!1970 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1971, size: 64)
!1971 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", file: !234, line: 189, size: 192, elements: !1972)
!1972 = !{!1973, !1974, !1975, !1976}
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !1971, file: !234, line: 189, baseType: !159, size: 32)
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !1971, file: !234, line: 189, baseType: !159, size: 32, offset: 32)
!1975 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !1971, file: !234, line: 189, baseType: !16, size: 64, offset: 64)
!1976 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !1971, file: !234, line: 189, baseType: !16, size: 64, offset: 128)
!1977 = !DILocalVariable(name: "stream", arg: 1, scope: !1967, file: !234, line: 196, type: !1767)
!1978 = !DILocation(line: 196, column: 23, scope: !1967)
!1979 = !DILocalVariable(name: "command_name", arg: 2, scope: !1967, file: !234, line: 197, type: !12)
!1980 = !DILocation(line: 197, column: 15, scope: !1967)
!1981 = !DILocalVariable(name: "package", arg: 3, scope: !1967, file: !234, line: 197, type: !12)
!1982 = !DILocation(line: 197, column: 41, scope: !1967)
!1983 = !DILocalVariable(name: "version", arg: 4, scope: !1967, file: !234, line: 198, type: !12)
!1984 = !DILocation(line: 198, column: 15, scope: !1967)
!1985 = !DILocalVariable(name: "authors", arg: 5, scope: !1967, file: !234, line: 198, type: !1970)
!1986 = !DILocation(line: 198, column: 32, scope: !1967)
!1987 = !DILocalVariable(name: "n_authors", scope: !1967, file: !234, line: 200, type: !91)
!1988 = !DILocation(line: 200, column: 10, scope: !1967)
!1989 = !DILocalVariable(name: "authtab", scope: !1967, file: !234, line: 201, type: !1990)
!1990 = !DICompositeType(tag: DW_TAG_array_type, baseType: !12, size: 640, elements: !1991)
!1991 = !{!1992}
!1992 = !DISubrange(count: 10)
!1993 = !DILocation(line: 201, column: 15, scope: !1967)
!1994 = !DILocation(line: 203, column: 18, scope: !1995)
!1995 = distinct !DILexicalBlock(scope: !1967, file: !234, line: 203, column: 3)
!1996 = !DILocation(line: 203, column: 8, scope: !1995)
!1997 = !DILocation(line: 204, column: 8, scope: !1998)
!1998 = distinct !DILexicalBlock(scope: !1995, file: !234, line: 203, column: 3)
!1999 = !DILocation(line: 204, column: 18, scope: !1998)
!2000 = !DILocation(line: 205, column: 3, scope: !1998)
!2001 = !DILocation(line: 205, column: 28, scope: !1998)
!2002 = !DILocation(line: 205, column: 15, scope: !1998)
!2003 = !DILocation(line: 205, column: 7, scope: !1998)
!2004 = !DILocation(line: 205, column: 26, scope: !1998)
!2005 = !DILocation(line: 205, column: 60, scope: !1998)
!2006 = !DILocation(line: 203, column: 3, scope: !1995)
!2007 = !DILocation(line: 206, column: 17, scope: !1998)
!2008 = !DILocation(line: 203, column: 3, scope: !1998)
!2009 = distinct !{!2009, !2006, !2010}
!2010 = !DILocation(line: 207, column: 5, scope: !1995)
!2011 = !DILocation(line: 208, column: 20, scope: !1967)
!2012 = !DILocation(line: 208, column: 28, scope: !1967)
!2013 = !DILocation(line: 208, column: 42, scope: !1967)
!2014 = !DILocation(line: 208, column: 51, scope: !1967)
!2015 = !DILocation(line: 209, column: 6, scope: !1967)
!2016 = !DILocation(line: 209, column: 15, scope: !1967)
!2017 = !DILocation(line: 208, column: 3, scope: !1967)
!2018 = !DILocation(line: 210, column: 1, scope: !1967)
!2019 = distinct !DISubprogram(name: "version_etc", scope: !234, file: !234, line: 227, type: !2020, isLocal: false, isDefinition: true, scopeLine: 230, flags: DIFlagPrototyped, isOptimized: false, unit: !233, variables: !25)
!2020 = !DISubroutineType(types: !2021)
!2021 = !{null, !1767, !12, !12, !12, null}
!2022 = !DILocalVariable(name: "stream", arg: 1, scope: !2019, file: !234, line: 227, type: !1767)
!2023 = !DILocation(line: 227, column: 20, scope: !2019)
!2024 = !DILocalVariable(name: "command_name", arg: 2, scope: !2019, file: !234, line: 228, type: !12)
!2025 = !DILocation(line: 228, column: 19, scope: !2019)
!2026 = !DILocalVariable(name: "package", arg: 3, scope: !2019, file: !234, line: 228, type: !12)
!2027 = !DILocation(line: 228, column: 45, scope: !2019)
!2028 = !DILocalVariable(name: "version", arg: 4, scope: !2019, file: !234, line: 229, type: !12)
!2029 = !DILocation(line: 229, column: 19, scope: !2019)
!2030 = !DILocalVariable(name: "authors", scope: !2019, file: !234, line: 231, type: !2031)
!2031 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !2032, line: 46, baseType: !2033)
!2032 = !DIFile(filename: "/usr/include/stdio.h", directory: "/home/ma481/Downloads/Chisel/chisel-bench/benchmark/chown-8.2/original/obj-llvm/lib")
!2033 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !2034, line: 48, baseType: !2035)
!2034 = !DIFile(filename: "/home/ma481/Downloads/LLVM_6.0/lib/clang/6.0.0/include/stdarg.h", directory: "/home/ma481/Downloads/Chisel/chisel-bench/benchmark/chown-8.2/original/obj-llvm/lib")
!2035 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !234, line: 231, baseType: !2036)
!2036 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1971, size: 192, elements: !321)
!2037 = !DILocation(line: 231, column: 11, scope: !2019)
!2038 = !DILocation(line: 233, column: 3, scope: !2019)
!2039 = !DILocation(line: 234, column: 19, scope: !2019)
!2040 = !DILocation(line: 234, column: 27, scope: !2019)
!2041 = !DILocation(line: 234, column: 41, scope: !2019)
!2042 = !DILocation(line: 234, column: 50, scope: !2019)
!2043 = !DILocation(line: 234, column: 59, scope: !2019)
!2044 = !DILocation(line: 234, column: 3, scope: !2019)
!2045 = !DILocation(line: 235, column: 3, scope: !2019)
!2046 = !DILocation(line: 236, column: 1, scope: !2019)
!2047 = distinct !DISubprogram(name: "emit_bug_reporting_address", scope: !234, file: !234, line: 239, type: !502, isLocal: false, isDefinition: true, scopeLine: 240, flags: DIFlagPrototyped, isOptimized: false, unit: !233, variables: !25)
!2048 = !DILocation(line: 245, column: 3, scope: !2047)
!2049 = !DILocation(line: 251, column: 3, scope: !2047)
!2050 = !DILocation(line: 256, column: 3, scope: !2047)
!2051 = !DILocation(line: 258, column: 1, scope: !2047)
!2052 = distinct !DISubprogram(name: "last_component", scope: !241, file: !241, line: 30, type: !791, isLocal: false, isDefinition: true, scopeLine: 31, flags: DIFlagPrototyped, isOptimized: false, unit: !240, variables: !25)
!2053 = !DILocalVariable(name: "name", arg: 1, scope: !2052, file: !241, line: 30, type: !12)
!2054 = !DILocation(line: 30, column: 29, scope: !2052)
!2055 = !DILocalVariable(name: "base", scope: !2052, file: !241, line: 32, type: !12)
!2056 = !DILocation(line: 32, column: 15, scope: !2052)
!2057 = !DILocation(line: 32, column: 22, scope: !2052)
!2058 = !DILocation(line: 32, column: 27, scope: !2052)
!2059 = !DILocalVariable(name: "p", scope: !2052, file: !241, line: 33, type: !12)
!2060 = !DILocation(line: 33, column: 15, scope: !2052)
!2061 = !DILocalVariable(name: "saw_slash", scope: !2052, file: !241, line: 34, type: !79)
!2062 = !DILocation(line: 34, column: 8, scope: !2052)
!2063 = !DILocation(line: 36, column: 3, scope: !2052)
!2064 = !DILocation(line: 36, column: 10, scope: !2052)
!2065 = !DILocation(line: 37, column: 9, scope: !2052)
!2066 = distinct !{!2066, !2063, !2065}
!2067 = !DILocation(line: 39, column: 12, scope: !2068)
!2068 = distinct !DILexicalBlock(scope: !2052, file: !241, line: 39, column: 3)
!2069 = !DILocation(line: 39, column: 10, scope: !2068)
!2070 = !DILocation(line: 39, column: 8, scope: !2068)
!2071 = !DILocation(line: 39, column: 19, scope: !2072)
!2072 = distinct !DILexicalBlock(scope: !2068, file: !241, line: 39, column: 3)
!2073 = !DILocation(line: 39, column: 18, scope: !2072)
!2074 = !DILocation(line: 39, column: 3, scope: !2068)
!2075 = !DILocation(line: 41, column: 11, scope: !2076)
!2076 = distinct !DILexicalBlock(scope: !2077, file: !241, line: 41, column: 11)
!2077 = distinct !DILexicalBlock(scope: !2072, file: !241, line: 40, column: 5)
!2078 = !DILocation(line: 41, column: 11, scope: !2077)
!2079 = !DILocation(line: 42, column: 19, scope: !2076)
!2080 = !DILocation(line: 42, column: 9, scope: !2076)
!2081 = !DILocation(line: 43, column: 16, scope: !2082)
!2082 = distinct !DILexicalBlock(scope: !2076, file: !241, line: 43, column: 16)
!2083 = !DILocation(line: 43, column: 16, scope: !2076)
!2084 = !DILocation(line: 45, column: 18, scope: !2085)
!2085 = distinct !DILexicalBlock(scope: !2082, file: !241, line: 44, column: 9)
!2086 = !DILocation(line: 45, column: 16, scope: !2085)
!2087 = !DILocation(line: 46, column: 21, scope: !2085)
!2088 = !DILocation(line: 47, column: 9, scope: !2085)
!2089 = !DILocation(line: 48, column: 5, scope: !2077)
!2090 = !DILocation(line: 39, column: 23, scope: !2072)
!2091 = !DILocation(line: 39, column: 3, scope: !2072)
!2092 = distinct !{!2092, !2074, !2093}
!2093 = !DILocation(line: 48, column: 5, scope: !2068)
!2094 = !DILocation(line: 50, column: 19, scope: !2052)
!2095 = !DILocation(line: 50, column: 3, scope: !2052)
!2096 = distinct !DISubprogram(name: "base_len", scope: !241, file: !241, line: 58, type: !2097, isLocal: false, isDefinition: true, scopeLine: 59, flags: DIFlagPrototyped, isOptimized: false, unit: !240, variables: !25)
!2097 = !DISubroutineType(types: !2098)
!2098 = !{!91, !12}
!2099 = !DILocalVariable(name: "name", arg: 1, scope: !2096, file: !241, line: 58, type: !12)
!2100 = !DILocation(line: 58, column: 23, scope: !2096)
!2101 = !DILocalVariable(name: "len", scope: !2096, file: !241, line: 60, type: !91)
!2102 = !DILocation(line: 60, column: 10, scope: !2096)
!2103 = !DILocalVariable(name: "prefix_len", scope: !2096, file: !241, line: 61, type: !91)
!2104 = !DILocation(line: 61, column: 10, scope: !2096)
!2105 = !DILocation(line: 63, column: 22, scope: !2106)
!2106 = distinct !DILexicalBlock(scope: !2096, file: !241, line: 63, column: 3)
!2107 = !DILocation(line: 63, column: 14, scope: !2106)
!2108 = !DILocation(line: 63, column: 12, scope: !2106)
!2109 = !DILocation(line: 63, column: 8, scope: !2106)
!2110 = !DILocation(line: 63, column: 34, scope: !2111)
!2111 = distinct !DILexicalBlock(scope: !2106, file: !241, line: 63, column: 3)
!2112 = !DILocation(line: 63, column: 32, scope: !2111)
!2113 = !DILocation(line: 63, column: 38, scope: !2111)
!2114 = !DILocation(line: 63, column: 41, scope: !2111)
!2115 = !DILocation(line: 63, column: 3, scope: !2106)
!2116 = !DILocation(line: 64, column: 5, scope: !2111)
!2117 = !DILocation(line: 63, column: 70, scope: !2111)
!2118 = !DILocation(line: 63, column: 3, scope: !2111)
!2119 = distinct !{!2119, !2115, !2120}
!2120 = !DILocation(line: 64, column: 5, scope: !2106)
!2121 = !DILocation(line: 74, column: 10, scope: !2096)
!2122 = !DILocation(line: 74, column: 3, scope: !2096)
!2123 = distinct !DISubprogram(name: "close_stdout_set_file_name", scope: !74, file: !74, line: 41, type: !1707, isLocal: false, isDefinition: true, scopeLine: 42, flags: DIFlagPrototyped, isOptimized: false, unit: !73, variables: !25)
!2124 = !DILocalVariable(name: "file", arg: 1, scope: !2123, file: !74, line: 41, type: !12)
!2125 = !DILocation(line: 41, column: 41, scope: !2123)
!2126 = !DILocation(line: 43, column: 15, scope: !2123)
!2127 = !DILocation(line: 43, column: 13, scope: !2123)
!2128 = !DILocation(line: 44, column: 1, scope: !2123)
!2129 = distinct !DISubprogram(name: "close_stdout_set_ignore_EPIPE", scope: !74, file: !74, line: 78, type: !2130, isLocal: false, isDefinition: true, scopeLine: 79, flags: DIFlagPrototyped, isOptimized: false, unit: !73, variables: !25)
!2130 = !DISubroutineType(types: !2131)
!2131 = !{null, !79}
!2132 = !DILocalVariable(name: "ignore", arg: 1, scope: !2129, file: !74, line: 78, type: !79)
!2133 = !DILocation(line: 78, column: 37, scope: !2129)
!2134 = !DILocation(line: 80, column: 18, scope: !2129)
!2135 = !DILocation(line: 80, column: 16, scope: !2129)
!2136 = !DILocation(line: 81, column: 1, scope: !2129)
!2137 = distinct !DISubprogram(name: "close_stdout", scope: !74, file: !74, line: 107, type: !502, isLocal: false, isDefinition: true, scopeLine: 108, flags: DIFlagPrototyped, isOptimized: false, unit: !73, variables: !25)
!2138 = !DILocation(line: 109, column: 21, scope: !2139)
!2139 = distinct !DILexicalBlock(scope: !2137, file: !74, line: 109, column: 7)
!2140 = !DILocation(line: 109, column: 7, scope: !2139)
!2141 = !DILocation(line: 109, column: 29, scope: !2139)
!2142 = !DILocation(line: 110, column: 7, scope: !2139)
!2143 = !DILocation(line: 110, column: 12, scope: !2139)
!2144 = !DILocation(line: 110, column: 25, scope: !2139)
!2145 = !DILocation(line: 110, column: 28, scope: !2139)
!2146 = !DILocation(line: 110, column: 34, scope: !2139)
!2147 = !DILocation(line: 109, column: 7, scope: !2137)
!2148 = !DILocalVariable(name: "write_error", scope: !2149, file: !74, line: 112, type: !12)
!2149 = distinct !DILexicalBlock(scope: !2139, file: !74, line: 111, column: 5)
!2150 = !DILocation(line: 112, column: 19, scope: !2149)
!2151 = !DILocation(line: 113, column: 11, scope: !2152)
!2152 = distinct !DILexicalBlock(scope: !2149, file: !74, line: 113, column: 11)
!2153 = !DILocation(line: 113, column: 11, scope: !2149)
!2154 = !DILocation(line: 114, column: 12, scope: !2152)
!2155 = !DILocation(line: 114, column: 45, scope: !2152)
!2156 = !DILocation(line: 114, column: 29, scope: !2152)
!2157 = !DILocation(line: 115, column: 9, scope: !2152)
!2158 = !DILocation(line: 114, column: 2, scope: !2152)
!2159 = !DILocation(line: 117, column: 12, scope: !2152)
!2160 = !DILocation(line: 117, column: 25, scope: !2152)
!2161 = !DILocation(line: 117, column: 2, scope: !2152)
!2162 = !DILocation(line: 119, column: 14, scope: !2149)
!2163 = !DILocation(line: 119, column: 7, scope: !2149)
!2164 = !DILocation(line: 122, column: 22, scope: !2165)
!2165 = distinct !DILexicalBlock(scope: !2137, file: !74, line: 122, column: 8)
!2166 = !DILocation(line: 122, column: 8, scope: !2165)
!2167 = !DILocation(line: 122, column: 30, scope: !2165)
!2168 = !DILocation(line: 122, column: 8, scope: !2137)
!2169 = !DILocation(line: 123, column: 13, scope: !2165)
!2170 = !DILocation(line: 123, column: 6, scope: !2165)
!2171 = !DILocation(line: 124, column: 1, scope: !2137)
!2172 = distinct !DISubprogram(name: "fts_open", scope: !244, file: !244, line: 369, type: !2173, isLocal: false, isDefinition: true, scopeLine: 372, flags: DIFlagPrototyped, isOptimized: false, unit: !243, variables: !25)
!2173 = !DISubroutineType(types: !2174)
!2174 = !{!255, !2175, !23, !2177}
!2175 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2176, size: 64)
!2176 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !15)
!2177 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2178, size: 64)
!2178 = !DISubroutineType(types: !2179)
!2179 = !{!23, !406, !406}
!2180 = !DILocalVariable(name: "argv", arg: 1, scope: !2172, file: !244, line: 369, type: !2175)
!2181 = !DILocation(line: 369, column: 25, scope: !2172)
!2182 = !DILocalVariable(name: "options", arg: 2, scope: !2172, file: !244, line: 370, type: !23)
!2183 = !DILocation(line: 370, column: 17, scope: !2172)
!2184 = !DILocalVariable(name: "compar", arg: 3, scope: !2172, file: !244, line: 371, type: !2177)
!2185 = !DILocation(line: 371, column: 10, scope: !2172)
!2186 = !DILocalVariable(name: "sp", scope: !2172, file: !244, line: 373, type: !255)
!2187 = !DILocation(line: 373, column: 16, scope: !2172)
!2188 = !DILocalVariable(name: "p", scope: !2172, file: !244, line: 374, type: !2189)
!2189 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !409, size: 64)
!2190 = !DILocation(line: 374, column: 19, scope: !2172)
!2191 = !DILocalVariable(name: "root", scope: !2172, file: !244, line: 374, type: !2189)
!2192 = !DILocation(line: 374, column: 23, scope: !2172)
!2193 = !DILocalVariable(name: "nitems", scope: !2172, file: !244, line: 375, type: !91)
!2194 = !DILocation(line: 375, column: 18, scope: !2172)
!2195 = !DILocalVariable(name: "parent", scope: !2172, file: !244, line: 376, type: !2189)
!2196 = !DILocation(line: 376, column: 10, scope: !2172)
!2197 = !DILocalVariable(name: "tmp", scope: !2172, file: !244, line: 377, type: !2189)
!2198 = !DILocation(line: 377, column: 10, scope: !2172)
!2199 = !DILocalVariable(name: "defer_stat", scope: !2172, file: !244, line: 378, type: !79)
!2200 = !DILocation(line: 378, column: 7, scope: !2172)
!2201 = !DILocation(line: 381, column: 6, scope: !2202)
!2202 = distinct !DILexicalBlock(scope: !2172, file: !244, line: 381, column: 6)
!2203 = !DILocation(line: 381, column: 14, scope: !2202)
!2204 = !DILocation(line: 381, column: 6, scope: !2172)
!2205 = !DILocation(line: 382, column: 3, scope: !2206)
!2206 = distinct !DILexicalBlock(scope: !2202, file: !244, line: 381, column: 33)
!2207 = !DILocation(line: 383, column: 3, scope: !2206)
!2208 = !DILocation(line: 385, column: 7, scope: !2209)
!2209 = distinct !DILexicalBlock(scope: !2172, file: !244, line: 385, column: 6)
!2210 = !DILocation(line: 385, column: 15, scope: !2209)
!2211 = !DILocation(line: 385, column: 30, scope: !2209)
!2212 = !DILocation(line: 385, column: 34, scope: !2209)
!2213 = !DILocation(line: 385, column: 42, scope: !2209)
!2214 = !DILocation(line: 385, column: 6, scope: !2172)
!2215 = !DILocation(line: 386, column: 3, scope: !2216)
!2216 = distinct !DILexicalBlock(scope: !2209, file: !244, line: 385, column: 56)
!2217 = !DILocation(line: 387, column: 3, scope: !2216)
!2218 = !DILocation(line: 389, column: 10, scope: !2219)
!2219 = distinct !DILexicalBlock(scope: !2172, file: !244, line: 389, column: 7)
!2220 = !DILocation(line: 389, column: 18, scope: !2219)
!2221 = !DILocation(line: 389, column: 7, scope: !2172)
!2222 = !DILocation(line: 390, column: 3, scope: !2223)
!2223 = distinct !DILexicalBlock(scope: !2219, file: !244, line: 389, column: 51)
!2224 = !DILocation(line: 391, column: 3, scope: !2223)
!2225 = !DILocation(line: 395, column: 12, scope: !2226)
!2226 = distinct !DILexicalBlock(scope: !2172, file: !244, line: 395, column: 6)
!2227 = !DILocation(line: 395, column: 10, scope: !2226)
!2228 = !DILocation(line: 395, column: 33, scope: !2226)
!2229 = !DILocation(line: 395, column: 6, scope: !2172)
!2230 = !DILocation(line: 396, column: 3, scope: !2226)
!2231 = !DILocation(line: 397, column: 9, scope: !2172)
!2232 = !DILocation(line: 397, column: 2, scope: !2172)
!2233 = !DILocation(line: 398, column: 19, scope: !2172)
!2234 = !DILocation(line: 398, column: 2, scope: !2172)
!2235 = !DILocation(line: 398, column: 6, scope: !2172)
!2236 = !DILocation(line: 398, column: 17, scope: !2172)
!2237 = !DILocation(line: 399, column: 20, scope: !2172)
!2238 = !DILocation(line: 399, column: 2, scope: !2172)
!2239 = !DILocation(line: 399, column: 6, scope: !2172)
!2240 = !DILocation(line: 399, column: 18, scope: !2172)
!2241 = !DILocation(line: 402, column: 6, scope: !2242)
!2242 = distinct !DILexicalBlock(scope: !2172, file: !244, line: 402, column: 6)
!2243 = !DILocation(line: 402, column: 6, scope: !2172)
!2244 = !DILocation(line: 403, column: 3, scope: !2245)
!2245 = distinct !DILexicalBlock(scope: !2242, file: !244, line: 402, column: 26)
!2246 = !DILocation(line: 404, column: 3, scope: !2245)
!2247 = !DILocation(line: 405, column: 2, scope: !2245)
!2248 = !DILocation(line: 408, column: 2, scope: !2172)
!2249 = !DILocation(line: 408, column: 6, scope: !2172)
!2250 = !DILocation(line: 408, column: 17, scope: !2172)
!2251 = !DILocation(line: 409, column: 7, scope: !2252)
!2252 = distinct !DILexicalBlock(scope: !2172, file: !244, line: 409, column: 7)
!2253 = !DILocation(line: 409, column: 24, scope: !2252)
!2254 = !DILocation(line: 409, column: 7, scope: !2172)
!2255 = !DILocalVariable(name: "fd", scope: !2256, file: !244, line: 415, type: !23)
!2256 = distinct !DILexicalBlock(scope: !2252, file: !244, line: 410, column: 4)
!2257 = !DILocation(line: 415, column: 10, scope: !2256)
!2258 = !DILocation(line: 415, column: 15, scope: !2256)
!2259 = !DILocation(line: 416, column: 10, scope: !2260)
!2260 = distinct !DILexicalBlock(scope: !2256, file: !244, line: 416, column: 10)
!2261 = !DILocation(line: 416, column: 13, scope: !2260)
!2262 = !DILocation(line: 416, column: 10, scope: !2256)
!2263 = !DILocation(line: 434, column: 8, scope: !2264)
!2264 = distinct !DILexicalBlock(scope: !2260, file: !244, line: 417, column: 8)
!2265 = !DILocation(line: 437, column: 10, scope: !2266)
!2266 = distinct !DILexicalBlock(scope: !2260, file: !244, line: 436, column: 8)
!2267 = !DILocation(line: 437, column: 3, scope: !2266)
!2268 = !DILocation(line: 439, column: 4, scope: !2256)
!2269 = !DILocalVariable(name: "maxarglen", scope: !2270, file: !244, line: 449, type: !91)
!2270 = distinct !DILexicalBlock(scope: !2172, file: !244, line: 448, column: 2)
!2271 = !DILocation(line: 449, column: 11, scope: !2270)
!2272 = !DILocation(line: 449, column: 37, scope: !2270)
!2273 = !DILocation(line: 449, column: 23, scope: !2270)
!2274 = !DILocation(line: 450, column: 21, scope: !2275)
!2275 = distinct !DILexicalBlock(scope: !2270, file: !244, line: 450, column: 8)
!2276 = !DILocation(line: 450, column: 25, scope: !2275)
!2277 = !DILocation(line: 450, column: 10, scope: !2275)
!2278 = !DILocation(line: 450, column: 8, scope: !2270)
!2279 = !DILocation(line: 451, column: 5, scope: !2275)
!2280 = !DILocation(line: 455, column: 7, scope: !2281)
!2281 = distinct !DILexicalBlock(scope: !2172, file: !244, line: 455, column: 6)
!2282 = !DILocation(line: 455, column: 6, scope: !2281)
!2283 = !DILocation(line: 455, column: 12, scope: !2281)
!2284 = !DILocation(line: 455, column: 6, scope: !2172)
!2285 = !DILocation(line: 456, column: 27, scope: !2286)
!2286 = distinct !DILexicalBlock(scope: !2287, file: !244, line: 456, column: 7)
!2287 = distinct !DILexicalBlock(scope: !2281, file: !244, line: 455, column: 21)
!2288 = !DILocation(line: 456, column: 17, scope: !2286)
!2289 = !DILocation(line: 456, column: 15, scope: !2286)
!2290 = !DILocation(line: 456, column: 39, scope: !2286)
!2291 = !DILocation(line: 456, column: 7, scope: !2287)
!2292 = !DILocation(line: 457, column: 4, scope: !2286)
!2293 = !DILocation(line: 458, column: 3, scope: !2287)
!2294 = !DILocation(line: 458, column: 11, scope: !2287)
!2295 = !DILocation(line: 458, column: 21, scope: !2287)
!2296 = !DILocation(line: 459, column: 4, scope: !2287)
!2297 = !DILocation(line: 472, column: 16, scope: !2172)
!2298 = !DILocation(line: 472, column: 23, scope: !2172)
!2299 = !DILocation(line: 472, column: 31, scope: !2172)
!2300 = !DILocation(line: 472, column: 34, scope: !2172)
!2301 = !DILocation(line: 472, column: 13, scope: !2172)
!2302 = !DILocation(line: 475, column: 12, scope: !2303)
!2303 = distinct !DILexicalBlock(scope: !2172, file: !244, line: 475, column: 2)
!2304 = !DILocation(line: 475, column: 27, scope: !2303)
!2305 = !DILocation(line: 475, column: 7, scope: !2303)
!2306 = !DILocation(line: 475, column: 33, scope: !2307)
!2307 = distinct !DILexicalBlock(scope: !2303, file: !244, line: 475, column: 2)
!2308 = !DILocation(line: 475, column: 32, scope: !2307)
!2309 = !DILocation(line: 475, column: 38, scope: !2307)
!2310 = !DILocation(line: 475, column: 2, scope: !2303)
!2311 = !DILocalVariable(name: "len", scope: !2312, file: !244, line: 477, type: !91)
!2312 = distinct !DILexicalBlock(scope: !2307, file: !244, line: 475, column: 65)
!2313 = !DILocation(line: 477, column: 10, scope: !2312)
!2314 = !DILocation(line: 477, column: 24, scope: !2312)
!2315 = !DILocation(line: 477, column: 23, scope: !2312)
!2316 = !DILocation(line: 477, column: 16, scope: !2312)
!2317 = !DILocation(line: 478, column: 22, scope: !2318)
!2318 = distinct !DILexicalBlock(scope: !2312, file: !244, line: 478, column: 7)
!2319 = !DILocation(line: 478, column: 27, scope: !2318)
!2320 = !DILocation(line: 478, column: 26, scope: !2318)
!2321 = !DILocation(line: 478, column: 33, scope: !2318)
!2322 = !DILocation(line: 478, column: 12, scope: !2318)
!2323 = !DILocation(line: 478, column: 10, scope: !2318)
!2324 = !DILocation(line: 478, column: 39, scope: !2318)
!2325 = !DILocation(line: 478, column: 7, scope: !2312)
!2326 = !DILocation(line: 479, column: 4, scope: !2318)
!2327 = !DILocation(line: 480, column: 3, scope: !2312)
!2328 = !DILocation(line: 480, column: 6, scope: !2312)
!2329 = !DILocation(line: 480, column: 16, scope: !2312)
!2330 = !DILocation(line: 481, column: 19, scope: !2312)
!2331 = !DILocation(line: 481, column: 3, scope: !2312)
!2332 = !DILocation(line: 481, column: 6, scope: !2312)
!2333 = !DILocation(line: 481, column: 17, scope: !2312)
!2334 = !DILocation(line: 482, column: 20, scope: !2312)
!2335 = !DILocation(line: 482, column: 23, scope: !2312)
!2336 = !DILocation(line: 482, column: 3, scope: !2312)
!2337 = !DILocation(line: 482, column: 6, scope: !2312)
!2338 = !DILocation(line: 482, column: 18, scope: !2312)
!2339 = !DILocation(line: 486, column: 7, scope: !2340)
!2340 = distinct !DILexicalBlock(scope: !2312, file: !244, line: 486, column: 7)
!2341 = !DILocation(line: 486, column: 18, scope: !2340)
!2342 = !DILocation(line: 486, column: 21, scope: !2340)
!2343 = !DILocation(line: 486, column: 26, scope: !2340)
!2344 = !DILocation(line: 486, column: 7, scope: !2312)
!2345 = !DILocation(line: 487, column: 4, scope: !2346)
!2346 = distinct !DILexicalBlock(scope: !2340, file: !244, line: 486, column: 35)
!2347 = !DILocation(line: 487, column: 7, scope: !2346)
!2348 = !DILocation(line: 487, column: 16, scope: !2346)
!2349 = !DILocation(line: 488, column: 26, scope: !2346)
!2350 = !DILocation(line: 488, column: 4, scope: !2346)
!2351 = !DILocation(line: 489, column: 3, scope: !2346)
!2352 = !DILocation(line: 490, column: 27, scope: !2353)
!2353 = distinct !DILexicalBlock(scope: !2340, file: !244, line: 489, column: 10)
!2354 = !DILocation(line: 490, column: 31, scope: !2353)
!2355 = !DILocation(line: 490, column: 18, scope: !2353)
!2356 = !DILocation(line: 490, column: 4, scope: !2353)
!2357 = !DILocation(line: 490, column: 7, scope: !2353)
!2358 = !DILocation(line: 490, column: 16, scope: !2353)
!2359 = !DILocation(line: 497, column: 7, scope: !2360)
!2360 = distinct !DILexicalBlock(scope: !2312, file: !244, line: 497, column: 7)
!2361 = !DILocation(line: 497, column: 7, scope: !2312)
!2362 = !DILocation(line: 498, column: 18, scope: !2363)
!2363 = distinct !DILexicalBlock(scope: !2360, file: !244, line: 497, column: 15)
!2364 = !DILocation(line: 498, column: 4, scope: !2363)
!2365 = !DILocation(line: 498, column: 7, scope: !2363)
!2366 = !DILocation(line: 498, column: 16, scope: !2363)
!2367 = !DILocation(line: 499, column: 11, scope: !2363)
!2368 = !DILocation(line: 499, column: 9, scope: !2363)
!2369 = !DILocation(line: 500, column: 3, scope: !2363)
!2370 = !DILocation(line: 501, column: 4, scope: !2371)
!2371 = distinct !DILexicalBlock(scope: !2360, file: !244, line: 500, column: 10)
!2372 = !DILocation(line: 501, column: 7, scope: !2371)
!2373 = !DILocation(line: 501, column: 16, scope: !2371)
!2374 = !DILocation(line: 502, column: 8, scope: !2375)
!2375 = distinct !DILexicalBlock(scope: !2371, file: !244, line: 502, column: 8)
!2376 = !DILocation(line: 502, column: 13, scope: !2375)
!2377 = !DILocation(line: 502, column: 8, scope: !2371)
!2378 = !DILocation(line: 503, column: 18, scope: !2375)
!2379 = !DILocation(line: 503, column: 16, scope: !2375)
!2380 = !DILocation(line: 503, column: 9, scope: !2375)
!2381 = !DILocation(line: 503, column: 5, scope: !2375)
!2382 = !DILocation(line: 505, column: 21, scope: !2383)
!2383 = distinct !DILexicalBlock(scope: !2375, file: !244, line: 504, column: 9)
!2384 = !DILocation(line: 505, column: 5, scope: !2383)
!2385 = !DILocation(line: 505, column: 10, scope: !2383)
!2386 = !DILocation(line: 505, column: 19, scope: !2383)
!2387 = !DILocation(line: 506, column: 11, scope: !2383)
!2388 = !DILocation(line: 506, column: 9, scope: !2383)
!2389 = !DILocation(line: 509, column: 2, scope: !2312)
!2390 = !DILocation(line: 475, column: 47, scope: !2307)
!2391 = !DILocation(line: 475, column: 55, scope: !2307)
!2392 = !DILocation(line: 475, column: 2, scope: !2307)
!2393 = distinct !{!2393, !2310, !2394}
!2394 = !DILocation(line: 509, column: 2, scope: !2303)
!2395 = !DILocation(line: 510, column: 6, scope: !2396)
!2396 = distinct !DILexicalBlock(scope: !2172, file: !244, line: 510, column: 6)
!2397 = !DILocation(line: 510, column: 13, scope: !2396)
!2398 = !DILocation(line: 510, column: 16, scope: !2396)
!2399 = !DILocation(line: 510, column: 23, scope: !2396)
!2400 = !DILocation(line: 510, column: 6, scope: !2172)
!2401 = !DILocation(line: 511, column: 19, scope: !2396)
!2402 = !DILocation(line: 511, column: 23, scope: !2396)
!2403 = !DILocation(line: 511, column: 29, scope: !2396)
!2404 = !DILocation(line: 511, column: 10, scope: !2396)
!2405 = !DILocation(line: 511, column: 8, scope: !2396)
!2406 = !DILocation(line: 511, column: 3, scope: !2396)
!2407 = !DILocation(line: 518, column: 31, scope: !2408)
!2408 = distinct !DILexicalBlock(scope: !2172, file: !244, line: 518, column: 6)
!2409 = !DILocation(line: 518, column: 21, scope: !2408)
!2410 = !DILocation(line: 518, column: 7, scope: !2408)
!2411 = !DILocation(line: 518, column: 11, scope: !2408)
!2412 = !DILocation(line: 518, column: 19, scope: !2408)
!2413 = !DILocation(line: 518, column: 43, scope: !2408)
!2414 = !DILocation(line: 518, column: 6, scope: !2172)
!2415 = !DILocation(line: 519, column: 3, scope: !2408)
!2416 = !DILocation(line: 520, column: 26, scope: !2172)
!2417 = !DILocation(line: 520, column: 2, scope: !2172)
!2418 = !DILocation(line: 520, column: 6, scope: !2172)
!2419 = !DILocation(line: 520, column: 15, scope: !2172)
!2420 = !DILocation(line: 520, column: 24, scope: !2172)
!2421 = !DILocation(line: 521, column: 2, scope: !2172)
!2422 = !DILocation(line: 521, column: 6, scope: !2172)
!2423 = !DILocation(line: 521, column: 15, scope: !2172)
!2424 = !DILocation(line: 521, column: 24, scope: !2172)
!2425 = !DILocation(line: 522, column: 19, scope: !2426)
!2426 = distinct !DILexicalBlock(scope: !2172, file: !244, line: 522, column: 6)
!2427 = !DILocation(line: 522, column: 8, scope: !2426)
!2428 = !DILocation(line: 522, column: 6, scope: !2172)
!2429 = !DILocation(line: 523, column: 3, scope: !2426)
!2430 = !DILocation(line: 532, column: 7, scope: !2431)
!2431 = distinct !DILexicalBlock(scope: !2172, file: !244, line: 532, column: 6)
!2432 = !DILocation(line: 532, column: 26, scope: !2431)
!2433 = !DILocation(line: 532, column: 30, scope: !2431)
!2434 = !DILocation(line: 533, column: 6, scope: !2431)
!2435 = !DILocation(line: 533, column: 33, scope: !2431)
!2436 = !DILocation(line: 533, column: 24, scope: !2431)
!2437 = !DILocation(line: 533, column: 10, scope: !2431)
!2438 = !DILocation(line: 533, column: 14, scope: !2431)
!2439 = !DILocation(line: 533, column: 22, scope: !2431)
!2440 = !DILocation(line: 533, column: 43, scope: !2431)
!2441 = !DILocation(line: 532, column: 6, scope: !2172)
!2442 = !DILocation(line: 534, column: 3, scope: !2431)
!2443 = !DILocation(line: 536, column: 16, scope: !2172)
!2444 = !DILocation(line: 536, column: 20, scope: !2172)
!2445 = !DILocation(line: 536, column: 2, scope: !2172)
!2446 = !DILocation(line: 537, column: 10, scope: !2172)
!2447 = !DILocation(line: 537, column: 2, scope: !2172)
!2448 = !DILocation(line: 539, column: 17, scope: !2172)
!2449 = !DILocation(line: 539, column: 7, scope: !2172)
!2450 = !DILocation(line: 540, column: 7, scope: !2172)
!2451 = !DILocation(line: 540, column: 2, scope: !2172)
!2452 = !DILocation(line: 541, column: 12, scope: !2172)
!2453 = !DILocation(line: 541, column: 16, scope: !2172)
!2454 = !DILocation(line: 541, column: 7, scope: !2172)
!2455 = !DILocation(line: 542, column: 12, scope: !2172)
!2456 = !DILocation(line: 542, column: 7, scope: !2172)
!2457 = !DILocation(line: 543, column: 2, scope: !2172)
!2458 = !DILocation(line: 544, column: 1, scope: !2172)
!2459 = distinct !DISubprogram(name: "fts_maxarglen", scope: !244, file: !244, line: 1935, type: !2460, isLocal: true, isDefinition: true, scopeLine: 1936, flags: DIFlagPrototyped, isOptimized: false, unit: !243, variables: !25)
!2460 = !DISubroutineType(types: !2461)
!2461 = !{!91, !2175}
!2462 = !DILocalVariable(name: "argv", arg: 1, scope: !2459, file: !244, line: 1935, type: !2175)
!2463 = !DILocation(line: 1935, column: 30, scope: !2459)
!2464 = !DILocalVariable(name: "len", scope: !2459, file: !244, line: 1937, type: !91)
!2465 = !DILocation(line: 1937, column: 9, scope: !2459)
!2466 = !DILocalVariable(name: "max", scope: !2459, file: !244, line: 1937, type: !91)
!2467 = !DILocation(line: 1937, column: 14, scope: !2459)
!2468 = !DILocation(line: 1939, column: 11, scope: !2469)
!2469 = distinct !DILexicalBlock(scope: !2459, file: !244, line: 1939, column: 2)
!2470 = !DILocation(line: 1939, column: 7, scope: !2469)
!2471 = !DILocation(line: 1939, column: 17, scope: !2472)
!2472 = distinct !DILexicalBlock(scope: !2469, file: !244, line: 1939, column: 2)
!2473 = !DILocation(line: 1939, column: 16, scope: !2472)
!2474 = !DILocation(line: 1939, column: 2, scope: !2469)
!2475 = !DILocation(line: 1940, column: 22, scope: !2476)
!2476 = distinct !DILexicalBlock(scope: !2472, file: !244, line: 1940, column: 7)
!2477 = !DILocation(line: 1940, column: 21, scope: !2476)
!2478 = !DILocation(line: 1940, column: 14, scope: !2476)
!2479 = !DILocation(line: 1940, column: 12, scope: !2476)
!2480 = !DILocation(line: 1940, column: 31, scope: !2476)
!2481 = !DILocation(line: 1940, column: 29, scope: !2476)
!2482 = !DILocation(line: 1940, column: 7, scope: !2472)
!2483 = !DILocation(line: 1941, column: 10, scope: !2476)
!2484 = !DILocation(line: 1941, column: 8, scope: !2476)
!2485 = !DILocation(line: 1941, column: 4, scope: !2476)
!2486 = !DILocation(line: 1939, column: 23, scope: !2472)
!2487 = !DILocation(line: 1939, column: 2, scope: !2472)
!2488 = distinct !{!2488, !2474, !2489}
!2489 = !DILocation(line: 1941, column: 10, scope: !2469)
!2490 = !DILocation(line: 1942, column: 10, scope: !2459)
!2491 = !DILocation(line: 1942, column: 14, scope: !2459)
!2492 = !DILocation(line: 1942, column: 2, scope: !2459)
!2493 = distinct !DISubprogram(name: "fts_palloc", scope: !244, file: !244, line: 1879, type: !2494, isLocal: true, isDefinition: true, scopeLine: 1880, flags: DIFlagPrototyped, isOptimized: false, unit: !243, variables: !25)
!2494 = !DISubroutineType(types: !2495)
!2495 = !{!79, !255, !91}
!2496 = !DILocalVariable(name: "sp", arg: 1, scope: !2493, file: !244, line: 1879, type: !255)
!2497 = !DILocation(line: 1879, column: 18, scope: !2493)
!2498 = !DILocalVariable(name: "more", arg: 2, scope: !2493, file: !244, line: 1879, type: !91)
!2499 = !DILocation(line: 1879, column: 29, scope: !2493)
!2500 = !DILocalVariable(name: "p", scope: !2493, file: !244, line: 1881, type: !15)
!2501 = !DILocation(line: 1881, column: 8, scope: !2493)
!2502 = !DILocalVariable(name: "new_len", scope: !2493, file: !244, line: 1882, type: !91)
!2503 = !DILocation(line: 1882, column: 9, scope: !2493)
!2504 = !DILocation(line: 1882, column: 19, scope: !2493)
!2505 = !DILocation(line: 1882, column: 23, scope: !2493)
!2506 = !DILocation(line: 1882, column: 37, scope: !2493)
!2507 = !DILocation(line: 1882, column: 35, scope: !2493)
!2508 = !DILocation(line: 1882, column: 42, scope: !2493)
!2509 = !DILocation(line: 1887, column: 6, scope: !2510)
!2510 = distinct !DILexicalBlock(scope: !2493, file: !244, line: 1887, column: 6)
!2511 = !DILocation(line: 1887, column: 16, scope: !2510)
!2512 = !DILocation(line: 1887, column: 20, scope: !2510)
!2513 = !DILocation(line: 1887, column: 14, scope: !2510)
!2514 = !DILocation(line: 1887, column: 6, scope: !2493)
!2515 = !DILocation(line: 1888, column: 8, scope: !2516)
!2516 = distinct !DILexicalBlock(scope: !2510, file: !244, line: 1887, column: 33)
!2517 = !DILocation(line: 1888, column: 12, scope: !2516)
!2518 = !DILocation(line: 1888, column: 3, scope: !2516)
!2519 = !DILocation(line: 1889, column: 3, scope: !2516)
!2520 = !DILocation(line: 1889, column: 7, scope: !2516)
!2521 = !DILocation(line: 1889, column: 16, scope: !2516)
!2522 = !DILocation(line: 1890, column: 3, scope: !2516)
!2523 = !DILocation(line: 1891, column: 3, scope: !2516)
!2524 = !DILocation(line: 1893, column: 20, scope: !2493)
!2525 = !DILocation(line: 1893, column: 2, scope: !2493)
!2526 = !DILocation(line: 1893, column: 6, scope: !2493)
!2527 = !DILocation(line: 1893, column: 18, scope: !2493)
!2528 = !DILocation(line: 1894, column: 14, scope: !2493)
!2529 = !DILocation(line: 1894, column: 18, scope: !2493)
!2530 = !DILocation(line: 1894, column: 28, scope: !2493)
!2531 = !DILocation(line: 1894, column: 32, scope: !2493)
!2532 = !DILocation(line: 1894, column: 6, scope: !2493)
!2533 = !DILocation(line: 1894, column: 4, scope: !2493)
!2534 = !DILocation(line: 1895, column: 6, scope: !2535)
!2535 = distinct !DILexicalBlock(scope: !2493, file: !244, line: 1895, column: 6)
!2536 = !DILocation(line: 1895, column: 8, scope: !2535)
!2537 = !DILocation(line: 1895, column: 6, scope: !2493)
!2538 = !DILocation(line: 1896, column: 8, scope: !2539)
!2539 = distinct !DILexicalBlock(scope: !2535, file: !244, line: 1895, column: 17)
!2540 = !DILocation(line: 1896, column: 12, scope: !2539)
!2541 = !DILocation(line: 1896, column: 3, scope: !2539)
!2542 = !DILocation(line: 1897, column: 3, scope: !2539)
!2543 = !DILocation(line: 1897, column: 7, scope: !2539)
!2544 = !DILocation(line: 1897, column: 16, scope: !2539)
!2545 = !DILocation(line: 1898, column: 3, scope: !2539)
!2546 = !DILocation(line: 1900, column: 17, scope: !2493)
!2547 = !DILocation(line: 1900, column: 2, scope: !2493)
!2548 = !DILocation(line: 1900, column: 6, scope: !2493)
!2549 = !DILocation(line: 1900, column: 15, scope: !2493)
!2550 = !DILocation(line: 1901, column: 2, scope: !2493)
!2551 = !DILocation(line: 1902, column: 1, scope: !2493)
!2552 = distinct !DISubprogram(name: "fts_alloc", scope: !244, file: !244, line: 1829, type: !2553, isLocal: true, isDefinition: true, scopeLine: 1830, flags: DIFlagPrototyped, isOptimized: false, unit: !243, variables: !25)
!2553 = !DISubroutineType(types: !2554)
!2554 = !{!2189, !255, !12, !91}
!2555 = !DILocalVariable(name: "sp", arg: 1, scope: !2552, file: !244, line: 1829, type: !255)
!2556 = !DILocation(line: 1829, column: 17, scope: !2552)
!2557 = !DILocalVariable(name: "name", arg: 2, scope: !2552, file: !244, line: 1829, type: !12)
!2558 = !DILocation(line: 1829, column: 33, scope: !2552)
!2559 = !DILocalVariable(name: "namelen", arg: 3, scope: !2552, file: !244, line: 1829, type: !91)
!2560 = !DILocation(line: 1829, column: 55, scope: !2552)
!2561 = !DILocalVariable(name: "p", scope: !2552, file: !244, line: 1831, type: !2189)
!2562 = !DILocation(line: 1831, column: 19, scope: !2552)
!2563 = !DILocalVariable(name: "len", scope: !2552, file: !244, line: 1832, type: !91)
!2564 = !DILocation(line: 1832, column: 9, scope: !2552)
!2565 = !DILocation(line: 1838, column: 25, scope: !2552)
!2566 = !DILocation(line: 1838, column: 23, scope: !2552)
!2567 = !DILocation(line: 1838, column: 6, scope: !2552)
!2568 = !DILocation(line: 1839, column: 18, scope: !2569)
!2569 = distinct !DILexicalBlock(scope: !2552, file: !244, line: 1839, column: 6)
!2570 = !DILocation(line: 1839, column: 11, scope: !2569)
!2571 = !DILocation(line: 1839, column: 9, scope: !2569)
!2572 = !DILocation(line: 1839, column: 24, scope: !2569)
!2573 = !DILocation(line: 1839, column: 6, scope: !2552)
!2574 = !DILocation(line: 1840, column: 3, scope: !2569)
!2575 = !DILocation(line: 1843, column: 10, scope: !2552)
!2576 = !DILocation(line: 1843, column: 13, scope: !2552)
!2577 = !DILocation(line: 1843, column: 2, scope: !2552)
!2578 = !DILocation(line: 1843, column: 23, scope: !2552)
!2579 = !DILocation(line: 1843, column: 29, scope: !2552)
!2580 = !DILocation(line: 1844, column: 2, scope: !2552)
!2581 = !DILocation(line: 1844, column: 5, scope: !2552)
!2582 = !DILocation(line: 1844, column: 14, scope: !2552)
!2583 = !DILocation(line: 1844, column: 23, scope: !2552)
!2584 = !DILocation(line: 1846, column: 19, scope: !2552)
!2585 = !DILocation(line: 1846, column: 2, scope: !2552)
!2586 = !DILocation(line: 1846, column: 5, scope: !2552)
!2587 = !DILocation(line: 1846, column: 17, scope: !2552)
!2588 = !DILocation(line: 1847, column: 15, scope: !2552)
!2589 = !DILocation(line: 1847, column: 2, scope: !2552)
!2590 = !DILocation(line: 1847, column: 5, scope: !2552)
!2591 = !DILocation(line: 1847, column: 13, scope: !2552)
!2592 = !DILocation(line: 1848, column: 16, scope: !2552)
!2593 = !DILocation(line: 1848, column: 20, scope: !2552)
!2594 = !DILocation(line: 1848, column: 2, scope: !2552)
!2595 = !DILocation(line: 1848, column: 5, scope: !2552)
!2596 = !DILocation(line: 1848, column: 14, scope: !2552)
!2597 = !DILocation(line: 1849, column: 2, scope: !2552)
!2598 = !DILocation(line: 1849, column: 5, scope: !2552)
!2599 = !DILocation(line: 1849, column: 15, scope: !2552)
!2600 = !DILocation(line: 1850, column: 2, scope: !2552)
!2601 = !DILocation(line: 1850, column: 5, scope: !2552)
!2602 = !DILocation(line: 1850, column: 15, scope: !2552)
!2603 = !DILocation(line: 1851, column: 2, scope: !2552)
!2604 = !DILocation(line: 1851, column: 5, scope: !2552)
!2605 = !DILocation(line: 1851, column: 15, scope: !2552)
!2606 = !DILocation(line: 1852, column: 2, scope: !2552)
!2607 = !DILocation(line: 1852, column: 5, scope: !2552)
!2608 = !DILocation(line: 1852, column: 16, scope: !2552)
!2609 = !DILocation(line: 1853, column: 2, scope: !2552)
!2610 = !DILocation(line: 1853, column: 5, scope: !2552)
!2611 = !DILocation(line: 1853, column: 17, scope: !2552)
!2612 = !DILocation(line: 1854, column: 10, scope: !2552)
!2613 = !DILocation(line: 1854, column: 2, scope: !2552)
!2614 = !DILocation(line: 1855, column: 1, scope: !2552)
!2615 = distinct !DISubprogram(name: "fts_set_stat_required", scope: !244, file: !244, line: 288, type: !2616, isLocal: true, isDefinition: true, scopeLine: 289, flags: DIFlagPrototyped, isOptimized: false, unit: !243, variables: !25)
!2616 = !DISubroutineType(types: !2617)
!2617 = !{null, !2189, !79}
!2618 = !DILocalVariable(name: "p", arg: 1, scope: !2615, file: !244, line: 288, type: !2189)
!2619 = !DILocation(line: 288, column: 32, scope: !2615)
!2620 = !DILocalVariable(name: "required", arg: 2, scope: !2615, file: !244, line: 288, type: !79)
!2621 = !DILocation(line: 288, column: 40, scope: !2615)
!2622 = !DILocation(line: 290, column: 3, scope: !2615)
!2623 = distinct !{!2623, !2622, !2622}
!2624 = !DILocation(line: 290, column: 3, scope: !2625)
!2625 = distinct !DILexicalBlock(scope: !2626, file: !244, line: 290, column: 3)
!2626 = distinct !DILexicalBlock(scope: !2615, file: !244, line: 290, column: 3)
!2627 = !DILocation(line: 290, column: 3, scope: !2626)
!2628 = !DILocation(line: 291, column: 28, scope: !2615)
!2629 = !DILocation(line: 291, column: 27, scope: !2615)
!2630 = !DILocation(line: 291, column: 3, scope: !2615)
!2631 = !DILocation(line: 291, column: 6, scope: !2615)
!2632 = !DILocation(line: 291, column: 17, scope: !2615)
!2633 = !DILocation(line: 291, column: 25, scope: !2615)
!2634 = !DILocation(line: 294, column: 1, scope: !2615)
!2635 = distinct !DISubprogram(name: "fts_stat", scope: !244, file: !244, line: 1686, type: !2636, isLocal: true, isDefinition: true, scopeLine: 1687, flags: DIFlagPrototyped, isOptimized: false, unit: !243, variables: !25)
!2636 = !DISubroutineType(types: !2637)
!2637 = !{!143, !255, !2189, !79}
!2638 = !DILocalVariable(name: "sp", arg: 1, scope: !2635, file: !244, line: 1686, type: !255)
!2639 = !DILocation(line: 1686, column: 15, scope: !2635)
!2640 = !DILocalVariable(name: "p", arg: 2, scope: !2635, file: !244, line: 1686, type: !2189)
!2641 = !DILocation(line: 1686, column: 36, scope: !2635)
!2642 = !DILocalVariable(name: "follow", arg: 3, scope: !2635, file: !244, line: 1686, type: !79)
!2643 = !DILocation(line: 1686, column: 44, scope: !2635)
!2644 = !DILocalVariable(name: "sbp", scope: !2635, file: !244, line: 1688, type: !2645)
!2645 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !287, size: 64)
!2646 = !DILocation(line: 1688, column: 15, scope: !2635)
!2647 = !DILocation(line: 1688, column: 21, scope: !2635)
!2648 = !DILocation(line: 1688, column: 24, scope: !2635)
!2649 = !DILocalVariable(name: "saved_errno", scope: !2635, file: !244, line: 1689, type: !23)
!2650 = !DILocation(line: 1689, column: 6, scope: !2635)
!2651 = !DILocation(line: 1691, column: 6, scope: !2652)
!2652 = distinct !DILexicalBlock(scope: !2635, file: !244, line: 1691, column: 6)
!2653 = !DILocation(line: 1691, column: 9, scope: !2652)
!2654 = !DILocation(line: 1691, column: 19, scope: !2652)
!2655 = !DILocation(line: 1691, column: 36, scope: !2652)
!2656 = !DILocation(line: 1691, column: 39, scope: !2652)
!2657 = !DILocation(line: 1691, column: 6, scope: !2635)
!2658 = !DILocation(line: 1692, column: 10, scope: !2652)
!2659 = !DILocation(line: 1692, column: 3, scope: !2652)
!2660 = !DILocation(line: 1708, column: 6, scope: !2661)
!2661 = distinct !DILexicalBlock(scope: !2635, file: !244, line: 1708, column: 6)
!2662 = !DILocation(line: 1708, column: 25, scope: !2661)
!2663 = !DILocation(line: 1708, column: 28, scope: !2661)
!2664 = !DILocation(line: 1708, column: 6, scope: !2635)
!2665 = !DILocation(line: 1709, column: 12, scope: !2666)
!2666 = distinct !DILexicalBlock(scope: !2667, file: !244, line: 1709, column: 7)
!2667 = distinct !DILexicalBlock(scope: !2661, file: !244, line: 1708, column: 36)
!2668 = !DILocation(line: 1709, column: 15, scope: !2666)
!2669 = !DILocation(line: 1709, column: 28, scope: !2666)
!2670 = !DILocation(line: 1709, column: 7, scope: !2666)
!2671 = !DILocation(line: 1709, column: 7, scope: !2667)
!2672 = !DILocation(line: 1710, column: 18, scope: !2673)
!2673 = distinct !DILexicalBlock(scope: !2666, file: !244, line: 1709, column: 34)
!2674 = !DILocation(line: 1710, column: 16, scope: !2673)
!2675 = !DILocation(line: 1711, column: 8, scope: !2676)
!2676 = distinct !DILexicalBlock(scope: !2673, file: !244, line: 1711, column: 8)
!2677 = !DILocation(line: 1711, column: 14, scope: !2676)
!2678 = !DILocation(line: 1712, column: 8, scope: !2676)
!2679 = !DILocation(line: 1712, column: 17, scope: !2676)
!2680 = !DILocation(line: 1712, column: 20, scope: !2676)
!2681 = !DILocation(line: 1712, column: 33, scope: !2676)
!2682 = !DILocation(line: 1712, column: 11, scope: !2676)
!2683 = !DILocation(line: 1712, column: 38, scope: !2676)
!2684 = !DILocation(line: 1711, column: 8, scope: !2673)
!2685 = !DILocation(line: 1713, column: 5, scope: !2686)
!2686 = distinct !DILexicalBlock(scope: !2676, file: !244, line: 1712, column: 44)
!2687 = !DILocation(line: 1714, column: 5, scope: !2686)
!2688 = !DILocation(line: 1716, column: 19, scope: !2673)
!2689 = !DILocation(line: 1716, column: 4, scope: !2673)
!2690 = !DILocation(line: 1716, column: 7, scope: !2673)
!2691 = !DILocation(line: 1716, column: 17, scope: !2673)
!2692 = !DILocation(line: 1717, column: 4, scope: !2673)
!2693 = !DILocation(line: 1719, column: 2, scope: !2667)
!2694 = !DILocation(line: 1719, column: 21, scope: !2695)
!2695 = distinct !DILexicalBlock(scope: !2661, file: !244, line: 1719, column: 13)
!2696 = !DILocation(line: 1719, column: 25, scope: !2695)
!2697 = !DILocation(line: 1719, column: 37, scope: !2695)
!2698 = !DILocation(line: 1719, column: 40, scope: !2695)
!2699 = !DILocation(line: 1719, column: 53, scope: !2695)
!2700 = !DILocation(line: 1719, column: 13, scope: !2695)
!2701 = !DILocation(line: 1719, column: 13, scope: !2661)
!2702 = !DILocation(line: 1721, column: 18, scope: !2703)
!2703 = distinct !DILexicalBlock(scope: !2695, file: !244, line: 1720, column: 29)
!2704 = !DILocation(line: 1721, column: 3, scope: !2703)
!2705 = !DILocation(line: 1721, column: 6, scope: !2703)
!2706 = !DILocation(line: 1721, column: 16, scope: !2703)
!2707 = !DILocation(line: 1722, column: 14, scope: !2703)
!2708 = !DILocation(line: 1722, column: 7, scope: !2703)
!2709 = !DILocation(line: 1723, column: 3, scope: !2703)
!2710 = !DILocation(line: 1726, column: 6, scope: !2711)
!2711 = distinct !DILexicalBlock(scope: !2635, file: !244, line: 1726, column: 6)
!2712 = !DILocation(line: 1726, column: 6, scope: !2635)
!2713 = !DILocation(line: 1727, column: 30, scope: !2714)
!2714 = distinct !DILexicalBlock(scope: !2711, file: !244, line: 1726, column: 29)
!2715 = !DILocation(line: 1727, column: 35, scope: !2714)
!2716 = !DILocation(line: 1728, column: 12, scope: !2714)
!2717 = !DILocation(line: 1728, column: 11, scope: !2714)
!2718 = !DILocation(line: 1728, column: 9, scope: !2714)
!2719 = !DILocation(line: 1727, column: 3, scope: !2714)
!2720 = !DILocation(line: 1727, column: 6, scope: !2714)
!2721 = !DILocation(line: 1727, column: 27, scope: !2714)
!2722 = !DILocation(line: 1729, column: 7, scope: !2723)
!2723 = distinct !DILexicalBlock(scope: !2714, file: !244, line: 1729, column: 7)
!2724 = !DILocation(line: 1729, column: 7, scope: !2714)
!2725 = !DILocation(line: 1731, column: 12, scope: !2726)
!2726 = distinct !DILexicalBlock(scope: !2723, file: !244, line: 1729, column: 27)
!2727 = !DILocation(line: 1731, column: 15, scope: !2726)
!2728 = !DILocation(line: 1731, column: 25, scope: !2726)
!2729 = !DILocation(line: 1731, column: 11, scope: !2726)
!2730 = !DILocation(line: 1731, column: 4, scope: !2726)
!2731 = !DILocation(line: 1755, column: 3, scope: !2714)
!2732 = !DILocation(line: 1757, column: 6, scope: !2733)
!2733 = distinct !DILexicalBlock(scope: !2635, file: !244, line: 1757, column: 6)
!2734 = !DILocation(line: 1757, column: 6, scope: !2635)
!2735 = !DILocation(line: 1758, column: 3, scope: !2733)
!2736 = !DILocation(line: 1759, column: 6, scope: !2737)
!2737 = distinct !DILexicalBlock(scope: !2635, file: !244, line: 1759, column: 6)
!2738 = !DILocation(line: 1759, column: 6, scope: !2635)
!2739 = !DILocation(line: 1760, column: 3, scope: !2737)
!2740 = !DILocation(line: 1761, column: 2, scope: !2635)
!2741 = !DILocation(line: 1762, column: 1, scope: !2635)
!2742 = distinct !DISubprogram(name: "fts_sort", scope: !244, file: !244, line: 1779, type: !2743, isLocal: true, isDefinition: true, scopeLine: 1780, flags: DIFlagPrototyped, isOptimized: false, unit: !243, variables: !25)
!2743 = !DISubroutineType(types: !2744)
!2744 = !{!2189, !255, !2189, !91}
!2745 = !DILocalVariable(name: "sp", arg: 1, scope: !2742, file: !244, line: 1779, type: !255)
!2746 = !DILocation(line: 1779, column: 16, scope: !2742)
!2747 = !DILocalVariable(name: "head", arg: 2, scope: !2742, file: !244, line: 1779, type: !2189)
!2748 = !DILocation(line: 1779, column: 28, scope: !2742)
!2749 = !DILocalVariable(name: "nitems", arg: 3, scope: !2742, file: !244, line: 1779, type: !91)
!2750 = !DILocation(line: 1779, column: 50, scope: !2742)
!2751 = !DILocalVariable(name: "ap", scope: !2742, file: !244, line: 1781, type: !2752)
!2752 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2189, size: 64)
!2753 = !DILocation(line: 1781, column: 20, scope: !2742)
!2754 = !DILocalVariable(name: "p", scope: !2742, file: !244, line: 1781, type: !2189)
!2755 = !DILocation(line: 1781, column: 25, scope: !2742)
!2756 = !DILocalVariable(name: "dummy", scope: !2742, file: !244, line: 1790, type: !2189)
!2757 = !DILocation(line: 1790, column: 10, scope: !2742)
!2758 = !DILocalVariable(name: "compare", scope: !2742, file: !244, line: 1791, type: !401)
!2759 = !DILocation(line: 1791, column: 8, scope: !2742)
!2760 = !DILocation(line: 1793, column: 9, scope: !2742)
!2761 = !DILocation(line: 1793, column: 41, scope: !2742)
!2762 = !DILocation(line: 1793, column: 30, scope: !2742)
!2763 = !DILocation(line: 1793, column: 27, scope: !2742)
!2764 = !DILocation(line: 1792, column: 5, scope: !2742)
!2765 = !DILocation(line: 1794, column: 46, scope: !2742)
!2766 = !DILocation(line: 1794, column: 50, scope: !2742)
!2767 = !DILocation(line: 1794, column: 7, scope: !2742)
!2768 = !DILocation(line: 1804, column: 6, scope: !2769)
!2769 = distinct !DILexicalBlock(scope: !2742, file: !244, line: 1804, column: 6)
!2770 = !DILocation(line: 1804, column: 15, scope: !2769)
!2771 = !DILocation(line: 1804, column: 19, scope: !2769)
!2772 = !DILocation(line: 1804, column: 13, scope: !2769)
!2773 = !DILocation(line: 1804, column: 6, scope: !2742)
!2774 = !DILocalVariable(name: "a", scope: !2775, file: !244, line: 1805, type: !2752)
!2775 = distinct !DILexicalBlock(scope: !2769, file: !244, line: 1804, column: 31)
!2776 = !DILocation(line: 1805, column: 12, scope: !2775)
!2777 = !DILocation(line: 1807, column: 20, scope: !2775)
!2778 = !DILocation(line: 1807, column: 27, scope: !2775)
!2779 = !DILocation(line: 1807, column: 3, scope: !2775)
!2780 = !DILocation(line: 1807, column: 7, scope: !2775)
!2781 = !DILocation(line: 1807, column: 18, scope: !2775)
!2782 = !DILocation(line: 1808, column: 30, scope: !2783)
!2783 = distinct !DILexicalBlock(scope: !2775, file: !244, line: 1808, column: 7)
!2784 = !DILocation(line: 1808, column: 34, scope: !2783)
!2785 = !DILocation(line: 1808, column: 28, scope: !2783)
!2786 = !DILocation(line: 1809, column: 7, scope: !2783)
!2787 = !DILocation(line: 1809, column: 26, scope: !2783)
!2788 = !DILocation(line: 1809, column: 30, scope: !2783)
!2789 = !DILocation(line: 1810, column: 12, scope: !2783)
!2790 = !DILocation(line: 1810, column: 16, scope: !2783)
!2791 = !DILocation(line: 1810, column: 27, scope: !2783)
!2792 = !DILocation(line: 1809, column: 17, scope: !2783)
!2793 = !DILocation(line: 1809, column: 15, scope: !2783)
!2794 = !DILocation(line: 1808, column: 7, scope: !2775)
!2795 = !DILocation(line: 1811, column: 9, scope: !2796)
!2796 = distinct !DILexicalBlock(scope: !2783, file: !244, line: 1810, column: 42)
!2797 = !DILocation(line: 1811, column: 13, scope: !2796)
!2798 = !DILocation(line: 1811, column: 4, scope: !2796)
!2799 = !DILocation(line: 1812, column: 4, scope: !2796)
!2800 = !DILocation(line: 1812, column: 8, scope: !2796)
!2801 = !DILocation(line: 1812, column: 18, scope: !2796)
!2802 = !DILocation(line: 1813, column: 4, scope: !2796)
!2803 = !DILocation(line: 1813, column: 8, scope: !2796)
!2804 = !DILocation(line: 1813, column: 19, scope: !2796)
!2805 = !DILocation(line: 1814, column: 12, scope: !2796)
!2806 = !DILocation(line: 1814, column: 4, scope: !2796)
!2807 = !DILocation(line: 1816, column: 19, scope: !2775)
!2808 = !DILocation(line: 1816, column: 3, scope: !2775)
!2809 = !DILocation(line: 1816, column: 7, scope: !2775)
!2810 = !DILocation(line: 1816, column: 17, scope: !2775)
!2811 = !DILocation(line: 1817, column: 2, scope: !2775)
!2812 = !DILocation(line: 1818, column: 12, scope: !2813)
!2813 = distinct !DILexicalBlock(scope: !2742, file: !244, line: 1818, column: 2)
!2814 = !DILocation(line: 1818, column: 16, scope: !2813)
!2815 = !DILocation(line: 1818, column: 10, scope: !2813)
!2816 = !DILocation(line: 1818, column: 31, scope: !2813)
!2817 = !DILocation(line: 1818, column: 29, scope: !2813)
!2818 = !DILocation(line: 1818, column: 7, scope: !2813)
!2819 = !DILocation(line: 1818, column: 37, scope: !2820)
!2820 = distinct !DILexicalBlock(scope: !2813, file: !244, line: 1818, column: 2)
!2821 = !DILocation(line: 1818, column: 2, scope: !2813)
!2822 = !DILocation(line: 1819, column: 11, scope: !2820)
!2823 = !DILocation(line: 1819, column: 6, scope: !2820)
!2824 = !DILocation(line: 1819, column: 9, scope: !2820)
!2825 = !DILocation(line: 1819, column: 3, scope: !2820)
!2826 = !DILocation(line: 1818, column: 44, scope: !2820)
!2827 = !DILocation(line: 1818, column: 47, scope: !2820)
!2828 = !DILocation(line: 1818, column: 42, scope: !2820)
!2829 = !DILocation(line: 1818, column: 2, scope: !2820)
!2830 = distinct !{!2830, !2821, !2831}
!2831 = !DILocation(line: 1819, column: 11, scope: !2813)
!2832 = !DILocation(line: 1820, column: 16, scope: !2742)
!2833 = !DILocation(line: 1820, column: 20, scope: !2742)
!2834 = !DILocation(line: 1820, column: 8, scope: !2742)
!2835 = !DILocation(line: 1820, column: 31, scope: !2742)
!2836 = !DILocation(line: 1820, column: 57, scope: !2742)
!2837 = !DILocation(line: 1820, column: 2, scope: !2742)
!2838 = !DILocation(line: 1821, column: 21, scope: !2839)
!2839 = distinct !DILexicalBlock(scope: !2742, file: !244, line: 1821, column: 2)
!2840 = !DILocation(line: 1821, column: 25, scope: !2839)
!2841 = !DILocation(line: 1821, column: 19, scope: !2839)
!2842 = !DILocation(line: 1821, column: 14, scope: !2839)
!2843 = !DILocation(line: 1821, column: 12, scope: !2839)
!2844 = !DILocation(line: 1821, column: 7, scope: !2839)
!2845 = !DILocation(line: 1821, column: 37, scope: !2846)
!2846 = distinct !DILexicalBlock(scope: !2839, file: !244, line: 1821, column: 2)
!2847 = !DILocation(line: 1821, column: 2, scope: !2839)
!2848 = !DILocation(line: 1822, column: 21, scope: !2846)
!2849 = !DILocation(line: 1822, column: 3, scope: !2846)
!2850 = !DILocation(line: 1822, column: 10, scope: !2846)
!2851 = !DILocation(line: 1822, column: 19, scope: !2846)
!2852 = !DILocation(line: 1821, column: 47, scope: !2846)
!2853 = !DILocation(line: 1821, column: 2, scope: !2846)
!2854 = distinct !{!2854, !2847, !2855}
!2855 = !DILocation(line: 1822, column: 25, scope: !2839)
!2856 = !DILocation(line: 1823, column: 2, scope: !2742)
!2857 = !DILocation(line: 1823, column: 9, scope: !2742)
!2858 = !DILocation(line: 1823, column: 18, scope: !2742)
!2859 = !DILocation(line: 1824, column: 10, scope: !2742)
!2860 = !DILocation(line: 1824, column: 2, scope: !2742)
!2861 = !DILocation(line: 1825, column: 1, scope: !2742)
!2862 = !DILocalVariable(name: "fts", arg: 1, scope: !252, file: !251, line: 50, type: !255)
!2863 = !DILocation(line: 50, column: 17, scope: !252)
!2864 = !DILocation(line: 52, column: 7, scope: !2865)
!2865 = distinct !DILexicalBlock(scope: !252, file: !251, line: 52, column: 7)
!2866 = !DILocation(line: 52, column: 12, scope: !2865)
!2867 = !DILocation(line: 52, column: 24, scope: !2865)
!2868 = !DILocation(line: 52, column: 7, scope: !252)
!2869 = !DILocation(line: 55, column: 27, scope: !2870)
!2870 = distinct !DILexicalBlock(scope: !2865, file: !251, line: 53, column: 5)
!2871 = !DILocation(line: 55, column: 7, scope: !2870)
!2872 = !DILocation(line: 55, column: 12, scope: !2870)
!2873 = !DILocation(line: 55, column: 22, scope: !2870)
!2874 = !DILocation(line: 55, column: 25, scope: !2870)
!2875 = !DILocation(line: 57, column: 13, scope: !2876)
!2876 = distinct !DILexicalBlock(scope: !2870, file: !251, line: 57, column: 11)
!2877 = !DILocation(line: 57, column: 18, scope: !2876)
!2878 = !DILocation(line: 57, column: 28, scope: !2876)
!2879 = !DILocation(line: 57, column: 11, scope: !2870)
!2880 = !DILocation(line: 58, column: 2, scope: !2876)
!2881 = !DILocation(line: 59, column: 5, scope: !2870)
!2882 = !DILocation(line: 62, column: 30, scope: !2883)
!2883 = distinct !DILexicalBlock(scope: !2865, file: !251, line: 61, column: 5)
!2884 = !DILocation(line: 62, column: 7, scope: !2883)
!2885 = !DILocation(line: 62, column: 12, scope: !2883)
!2886 = !DILocation(line: 62, column: 22, scope: !2883)
!2887 = !DILocation(line: 62, column: 28, scope: !2883)
!2888 = !DILocation(line: 63, column: 13, scope: !2889)
!2889 = distinct !DILexicalBlock(scope: !2883, file: !251, line: 63, column: 11)
!2890 = !DILocation(line: 63, column: 18, scope: !2889)
!2891 = !DILocation(line: 63, column: 28, scope: !2889)
!2892 = !DILocation(line: 63, column: 11, scope: !2883)
!2893 = !DILocation(line: 64, column: 2, scope: !2889)
!2894 = !DILocation(line: 65, column: 25, scope: !2883)
!2895 = !DILocation(line: 65, column: 30, scope: !2883)
!2896 = !DILocation(line: 65, column: 40, scope: !2883)
!2897 = !DILocation(line: 65, column: 7, scope: !2883)
!2898 = !DILocation(line: 68, column: 3, scope: !252)
!2899 = !DILocation(line: 69, column: 1, scope: !252)
!2900 = distinct !DISubprogram(name: "diropen", scope: !244, file: !244, line: 355, type: !2901, isLocal: true, isDefinition: true, scopeLine: 356, flags: DIFlagPrototyped, isOptimized: false, unit: !243, variables: !25)
!2901 = !DISubroutineType(types: !2902)
!2902 = !{!23, !2903, !12}
!2903 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2904, size: 64)
!2904 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !256)
!2905 = !DILocalVariable(name: "sp", arg: 1, scope: !2900, file: !244, line: 355, type: !2903)
!2906 = !DILocation(line: 355, column: 21, scope: !2900)
!2907 = !DILocalVariable(name: "dir", arg: 2, scope: !2900, file: !244, line: 355, type: !12)
!2908 = !DILocation(line: 355, column: 37, scope: !2900)
!2909 = !DILocalVariable(name: "open_flags", scope: !2900, file: !244, line: 357, type: !23)
!2910 = !DILocation(line: 357, column: 7, scope: !2900)
!2911 = !DILocation(line: 358, column: 10, scope: !2900)
!2912 = !DILocation(line: 358, column: 7, scope: !2900)
!2913 = !DILocalVariable(name: "fd", scope: !2900, file: !244, line: 360, type: !23)
!2914 = !DILocation(line: 360, column: 7, scope: !2900)
!2915 = !DILocation(line: 360, column: 13, scope: !2900)
!2916 = !DILocation(line: 361, column: 23, scope: !2900)
!2917 = !DILocation(line: 361, column: 27, scope: !2900)
!2918 = !DILocation(line: 361, column: 39, scope: !2900)
!2919 = !DILocation(line: 361, column: 44, scope: !2900)
!2920 = !DILocation(line: 361, column: 15, scope: !2900)
!2921 = !DILocation(line: 362, column: 21, scope: !2900)
!2922 = !DILocation(line: 362, column: 26, scope: !2900)
!2923 = !DILocation(line: 362, column: 15, scope: !2900)
!2924 = !DILocation(line: 363, column: 12, scope: !2925)
!2925 = distinct !DILexicalBlock(scope: !2900, file: !244, line: 363, column: 7)
!2926 = !DILocation(line: 363, column: 9, scope: !2925)
!2927 = !DILocation(line: 363, column: 7, scope: !2900)
!2928 = !DILocation(line: 364, column: 23, scope: !2925)
!2929 = !DILocation(line: 364, column: 5, scope: !2925)
!2930 = !DILocation(line: 365, column: 10, scope: !2900)
!2931 = !DILocation(line: 365, column: 3, scope: !2900)
!2932 = distinct !DISubprogram(name: "fts_lfree", scope: !244, file: !244, line: 1859, type: !2933, isLocal: true, isDefinition: true, scopeLine: 1860, flags: DIFlagPrototyped, isOptimized: false, unit: !243, variables: !25)
!2933 = !DISubroutineType(types: !2934)
!2934 = !{null, !2189}
!2935 = !DILocalVariable(name: "head", arg: 1, scope: !2932, file: !244, line: 1859, type: !2189)
!2936 = !DILocation(line: 1859, column: 29, scope: !2932)
!2937 = !DILocalVariable(name: "p", scope: !2932, file: !244, line: 1861, type: !2189)
!2938 = !DILocation(line: 1861, column: 19, scope: !2932)
!2939 = !DILocation(line: 1864, column: 2, scope: !2932)
!2940 = !DILocation(line: 1864, column: 14, scope: !2932)
!2941 = !DILocation(line: 1864, column: 12, scope: !2932)
!2942 = !DILocation(line: 1865, column: 10, scope: !2943)
!2943 = distinct !DILexicalBlock(scope: !2932, file: !244, line: 1864, column: 21)
!2944 = !DILocation(line: 1865, column: 16, scope: !2943)
!2945 = !DILocation(line: 1865, column: 8, scope: !2943)
!2946 = !DILocation(line: 1866, column: 8, scope: !2943)
!2947 = !DILocation(line: 1866, column: 3, scope: !2943)
!2948 = distinct !{!2948, !2939, !2949}
!2949 = !DILocation(line: 1867, column: 2, scope: !2932)
!2950 = !DILocation(line: 1868, column: 1, scope: !2932)
!2951 = distinct !DISubprogram(name: "AD_hash", scope: !251, file: !251, line: 41, type: !2952, isLocal: true, isDefinition: true, scopeLine: 42, flags: DIFlagPrototyped, isOptimized: false, unit: !243, variables: !25)
!2952 = !DISubroutineType(types: !2953)
!2953 = !{!91, !404, !91}
!2954 = !DILocalVariable(name: "x", arg: 1, scope: !2951, file: !251, line: 41, type: !404)
!2955 = !DILocation(line: 41, column: 22, scope: !2951)
!2956 = !DILocalVariable(name: "table_size", arg: 2, scope: !2951, file: !251, line: 41, type: !91)
!2957 = !DILocation(line: 41, column: 32, scope: !2951)
!2958 = !DILocalVariable(name: "ax", scope: !2951, file: !251, line: 43, type: !2959)
!2959 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2960, size: 64)
!2960 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2961)
!2961 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Active_dir", file: !251, line: 24, size: 192, elements: !2962)
!2962 = !{!2963, !2964, !2965}
!2963 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2961, file: !251, line: 26, baseType: !329, size: 64)
!2964 = !DIDerivedType(tag: DW_TAG_member, name: "ino", scope: !2961, file: !251, line: 27, baseType: !360, size: 64, offset: 64)
!2965 = !DIDerivedType(tag: DW_TAG_member, name: "fts_ent", scope: !2961, file: !251, line: 28, baseType: !2189, size: 64, offset: 128)
!2966 = !DILocation(line: 43, column: 28, scope: !2951)
!2967 = !DILocation(line: 43, column: 33, scope: !2951)
!2968 = !DILocation(line: 44, column: 22, scope: !2951)
!2969 = !DILocation(line: 44, column: 26, scope: !2951)
!2970 = !DILocation(line: 44, column: 32, scope: !2951)
!2971 = !DILocation(line: 44, column: 30, scope: !2951)
!2972 = !DILocation(line: 44, column: 3, scope: !2951)
!2973 = distinct !DISubprogram(name: "AD_compare", scope: !251, file: !251, line: 32, type: !2974, isLocal: true, isDefinition: true, scopeLine: 33, flags: DIFlagPrototyped, isOptimized: false, unit: !243, variables: !25)
!2974 = !DISubroutineType(types: !2975)
!2975 = !{!79, !404, !404}
!2976 = !DILocalVariable(name: "x", arg: 1, scope: !2973, file: !251, line: 32, type: !404)
!2977 = !DILocation(line: 32, column: 25, scope: !2973)
!2978 = !DILocalVariable(name: "y", arg: 2, scope: !2973, file: !251, line: 32, type: !404)
!2979 = !DILocation(line: 32, column: 40, scope: !2973)
!2980 = !DILocalVariable(name: "ax", scope: !2973, file: !251, line: 34, type: !2959)
!2981 = !DILocation(line: 34, column: 28, scope: !2973)
!2982 = !DILocation(line: 34, column: 33, scope: !2973)
!2983 = !DILocalVariable(name: "ay", scope: !2973, file: !251, line: 35, type: !2959)
!2984 = !DILocation(line: 35, column: 28, scope: !2973)
!2985 = !DILocation(line: 35, column: 33, scope: !2973)
!2986 = !DILocation(line: 36, column: 10, scope: !2973)
!2987 = !DILocation(line: 36, column: 14, scope: !2973)
!2988 = !DILocation(line: 36, column: 21, scope: !2973)
!2989 = !DILocation(line: 36, column: 25, scope: !2973)
!2990 = !DILocation(line: 36, column: 18, scope: !2973)
!2991 = !DILocation(line: 37, column: 7, scope: !2973)
!2992 = !DILocation(line: 37, column: 10, scope: !2973)
!2993 = !DILocation(line: 37, column: 14, scope: !2973)
!2994 = !DILocation(line: 37, column: 21, scope: !2973)
!2995 = !DILocation(line: 37, column: 25, scope: !2973)
!2996 = !DILocation(line: 37, column: 18, scope: !2973)
!2997 = !DILocation(line: 36, column: 3, scope: !2973)
!2998 = distinct !DISubprogram(name: "fts_compar", scope: !244, file: !244, line: 1765, type: !402, isLocal: true, isDefinition: true, scopeLine: 1766, flags: DIFlagPrototyped, isOptimized: false, unit: !243, variables: !25)
!2999 = !DILocalVariable(name: "a", arg: 1, scope: !2998, file: !244, line: 1765, type: !404)
!3000 = !DILocation(line: 1765, column: 25, scope: !2998)
!3001 = !DILocalVariable(name: "b", arg: 2, scope: !2998, file: !244, line: 1765, type: !404)
!3002 = !DILocation(line: 1765, column: 40, scope: !2998)
!3003 = !DILocalVariable(name: "pa", scope: !2998, file: !244, line: 1772, type: !406)
!3004 = !DILocation(line: 1772, column: 18, scope: !2998)
!3005 = !DILocation(line: 1772, column: 41, scope: !2998)
!3006 = !DILocation(line: 1772, column: 23, scope: !2998)
!3007 = !DILocalVariable(name: "pb", scope: !2998, file: !244, line: 1773, type: !406)
!3008 = !DILocation(line: 1773, column: 18, scope: !2998)
!3009 = !DILocation(line: 1773, column: 41, scope: !2998)
!3010 = !DILocation(line: 1773, column: 23, scope: !2998)
!3011 = !DILocation(line: 1774, column: 10, scope: !2998)
!3012 = !DILocation(line: 1774, column: 17, scope: !2998)
!3013 = !DILocation(line: 1774, column: 26, scope: !2998)
!3014 = !DILocation(line: 1774, column: 38, scope: !2998)
!3015 = !DILocation(line: 1774, column: 42, scope: !2998)
!3016 = !DILocation(line: 1774, column: 3, scope: !2998)
!3017 = distinct !DISubprogram(name: "fts_close", scope: !244, file: !244, line: 571, type: !3018, isLocal: false, isDefinition: true, scopeLine: 572, flags: DIFlagPrototyped, isOptimized: false, unit: !243, variables: !25)
!3018 = !DISubroutineType(types: !3019)
!3019 = !{!23, !255}
!3020 = !DILocalVariable(name: "sp", arg: 1, scope: !3017, file: !244, line: 571, type: !255)
!3021 = !DILocation(line: 571, column: 17, scope: !3017)
!3022 = !DILocalVariable(name: "freep", scope: !3017, file: !244, line: 573, type: !2189)
!3023 = !DILocation(line: 573, column: 19, scope: !3017)
!3024 = !DILocalVariable(name: "p", scope: !3017, file: !244, line: 573, type: !2189)
!3025 = !DILocation(line: 573, column: 27, scope: !3017)
!3026 = !DILocalVariable(name: "saved_errno", scope: !3017, file: !244, line: 574, type: !23)
!3027 = !DILocation(line: 574, column: 6, scope: !3017)
!3028 = !DILocation(line: 581, column: 6, scope: !3029)
!3029 = distinct !DILexicalBlock(scope: !3017, file: !244, line: 581, column: 6)
!3030 = !DILocation(line: 581, column: 10, scope: !3029)
!3031 = !DILocation(line: 581, column: 6, scope: !3017)
!3032 = !DILocation(line: 582, column: 12, scope: !3033)
!3033 = distinct !DILexicalBlock(scope: !3034, file: !244, line: 582, column: 3)
!3034 = distinct !DILexicalBlock(scope: !3029, file: !244, line: 581, column: 19)
!3035 = !DILocation(line: 582, column: 16, scope: !3033)
!3036 = !DILocation(line: 582, column: 10, scope: !3033)
!3037 = !DILocation(line: 582, column: 8, scope: !3033)
!3038 = !DILocation(line: 582, column: 25, scope: !3039)
!3039 = distinct !DILexicalBlock(scope: !3033, file: !244, line: 582, column: 3)
!3040 = !DILocation(line: 582, column: 28, scope: !3039)
!3041 = !DILocation(line: 582, column: 38, scope: !3039)
!3042 = !DILocation(line: 582, column: 3, scope: !3033)
!3043 = !DILocation(line: 583, column: 12, scope: !3044)
!3044 = distinct !DILexicalBlock(scope: !3039, file: !244, line: 582, column: 57)
!3045 = !DILocation(line: 583, column: 10, scope: !3044)
!3046 = !DILocation(line: 584, column: 8, scope: !3044)
!3047 = !DILocation(line: 584, column: 11, scope: !3044)
!3048 = !DILocation(line: 584, column: 20, scope: !3044)
!3049 = !DILocation(line: 584, column: 30, scope: !3044)
!3050 = !DILocation(line: 584, column: 33, scope: !3044)
!3051 = !DILocation(line: 584, column: 44, scope: !3044)
!3052 = !DILocation(line: 584, column: 47, scope: !3044)
!3053 = !DILocation(line: 584, column: 6, scope: !3044)
!3054 = !DILocation(line: 585, column: 9, scope: !3044)
!3055 = !DILocation(line: 585, column: 4, scope: !3044)
!3056 = !DILocation(line: 582, column: 3, scope: !3039)
!3057 = distinct !{!3057, !3042, !3058}
!3058 = !DILocation(line: 586, column: 3, scope: !3033)
!3059 = !DILocation(line: 587, column: 8, scope: !3034)
!3060 = !DILocation(line: 587, column: 3, scope: !3034)
!3061 = !DILocation(line: 588, column: 2, scope: !3034)
!3062 = !DILocation(line: 591, column: 6, scope: !3063)
!3063 = distinct !DILexicalBlock(scope: !3017, file: !244, line: 591, column: 6)
!3064 = !DILocation(line: 591, column: 10, scope: !3063)
!3065 = !DILocation(line: 591, column: 6, scope: !3017)
!3066 = !DILocation(line: 592, column: 13, scope: !3063)
!3067 = !DILocation(line: 592, column: 17, scope: !3063)
!3068 = !DILocation(line: 592, column: 3, scope: !3063)
!3069 = !DILocation(line: 593, column: 7, scope: !3017)
!3070 = !DILocation(line: 593, column: 11, scope: !3017)
!3071 = !DILocation(line: 593, column: 2, scope: !3017)
!3072 = !DILocation(line: 594, column: 7, scope: !3017)
!3073 = !DILocation(line: 594, column: 11, scope: !3017)
!3074 = !DILocation(line: 594, column: 2, scope: !3017)
!3075 = !DILocation(line: 596, column: 6, scope: !3076)
!3076 = distinct !DILexicalBlock(scope: !3017, file: !244, line: 596, column: 6)
!3077 = !DILocation(line: 596, column: 6, scope: !3017)
!3078 = !DILocation(line: 598, column: 15, scope: !3079)
!3079 = distinct !DILexicalBlock(scope: !3080, file: !244, line: 598, column: 10)
!3080 = distinct !DILexicalBlock(scope: !3076, file: !244, line: 597, column: 4)
!3081 = !DILocation(line: 598, column: 19, scope: !3079)
!3082 = !DILocation(line: 598, column: 12, scope: !3079)
!3083 = !DILocation(line: 598, column: 10, scope: !3080)
!3084 = !DILocation(line: 599, column: 19, scope: !3085)
!3085 = distinct !DILexicalBlock(scope: !3079, file: !244, line: 599, column: 12)
!3086 = !DILocation(line: 599, column: 23, scope: !3085)
!3087 = !DILocation(line: 599, column: 12, scope: !3085)
!3088 = !DILocation(line: 599, column: 12, scope: !3079)
!3089 = !DILocation(line: 600, column: 17, scope: !3085)
!3090 = !DILocation(line: 600, column: 15, scope: !3085)
!3091 = !DILocation(line: 600, column: 3, scope: !3085)
!3092 = !DILocation(line: 599, column: 33, scope: !3085)
!3093 = !DILocation(line: 601, column: 4, scope: !3080)
!3094 = !DILocation(line: 602, column: 12, scope: !3095)
!3095 = distinct !DILexicalBlock(scope: !3076, file: !244, line: 602, column: 11)
!3096 = !DILocation(line: 602, column: 11, scope: !3076)
!3097 = !DILocation(line: 605, column: 17, scope: !3098)
!3098 = distinct !DILexicalBlock(scope: !3099, file: !244, line: 605, column: 10)
!3099 = distinct !DILexicalBlock(scope: !3095, file: !244, line: 603, column: 4)
!3100 = !DILocation(line: 605, column: 21, scope: !3098)
!3101 = !DILocation(line: 605, column: 10, scope: !3098)
!3102 = !DILocation(line: 605, column: 10, scope: !3099)
!3103 = !DILocation(line: 606, column: 22, scope: !3098)
!3104 = !DILocation(line: 606, column: 20, scope: !3098)
!3105 = !DILocation(line: 606, column: 8, scope: !3098)
!3106 = !DILocation(line: 610, column: 17, scope: !3107)
!3107 = distinct !DILexicalBlock(scope: !3099, file: !244, line: 610, column: 10)
!3108 = !DILocation(line: 610, column: 21, scope: !3107)
!3109 = !DILocation(line: 610, column: 10, scope: !3107)
!3110 = !DILocation(line: 610, column: 10, scope: !3099)
!3111 = !DILocation(line: 611, column: 12, scope: !3112)
!3112 = distinct !DILexicalBlock(scope: !3107, file: !244, line: 611, column: 12)
!3113 = !DILocation(line: 611, column: 24, scope: !3112)
!3114 = !DILocation(line: 611, column: 12, scope: !3107)
!3115 = !DILocation(line: 612, column: 17, scope: !3112)
!3116 = !DILocation(line: 612, column: 15, scope: !3112)
!3117 = !DILocation(line: 612, column: 3, scope: !3112)
!3118 = !DILocation(line: 611, column: 27, scope: !3112)
!3119 = !DILocation(line: 613, column: 4, scope: !3099)
!3120 = !DILocation(line: 615, column: 18, scope: !3017)
!3121 = !DILocation(line: 615, column: 22, scope: !3017)
!3122 = !DILocation(line: 615, column: 2, scope: !3017)
!3123 = !DILocation(line: 618, column: 6, scope: !3124)
!3124 = distinct !DILexicalBlock(scope: !3017, file: !244, line: 618, column: 6)
!3125 = !DILocation(line: 618, column: 10, scope: !3124)
!3126 = !DILocation(line: 618, column: 6, scope: !3017)
!3127 = !DILocation(line: 619, column: 15, scope: !3124)
!3128 = !DILocation(line: 619, column: 19, scope: !3124)
!3129 = !DILocation(line: 619, column: 4, scope: !3124)
!3130 = !DILocation(line: 622, column: 12, scope: !3017)
!3131 = !DILocation(line: 622, column: 2, scope: !3017)
!3132 = !DILocation(line: 625, column: 7, scope: !3017)
!3133 = !DILocation(line: 625, column: 2, scope: !3017)
!3134 = !DILocation(line: 628, column: 6, scope: !3135)
!3135 = distinct !DILexicalBlock(scope: !3017, file: !244, line: 628, column: 6)
!3136 = !DILocation(line: 628, column: 6, scope: !3017)
!3137 = !DILocation(line: 629, column: 3, scope: !3138)
!3138 = distinct !DILexicalBlock(scope: !3135, file: !244, line: 628, column: 19)
!3139 = !DILocation(line: 630, column: 3, scope: !3138)
!3140 = !DILocation(line: 633, column: 2, scope: !3017)
!3141 = !DILocation(line: 634, column: 1, scope: !3017)
!3142 = distinct !DISubprogram(name: "fd_ring_clear", scope: !244, file: !244, line: 274, type: !3143, isLocal: true, isDefinition: true, scopeLine: 275, flags: DIFlagPrototyped, isOptimized: false, unit: !243, variables: !25)
!3143 = !DISubroutineType(types: !3144)
!3144 = !{null, !3145}
!3145 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !368, size: 64)
!3146 = !DILocalVariable(name: "fd_ring", arg: 1, scope: !3142, file: !244, line: 274, type: !3145)
!3147 = !DILocation(line: 274, column: 24, scope: !3142)
!3148 = !DILocation(line: 276, column: 3, scope: !3142)
!3149 = !DILocation(line: 276, column: 27, scope: !3142)
!3150 = !DILocation(line: 276, column: 13, scope: !3142)
!3151 = !DILocation(line: 276, column: 11, scope: !3142)
!3152 = !DILocalVariable(name: "fd", scope: !3153, file: !244, line: 278, type: !23)
!3153 = distinct !DILexicalBlock(scope: !3142, file: !244, line: 277, column: 5)
!3154 = !DILocation(line: 278, column: 11, scope: !3153)
!3155 = !DILocation(line: 278, column: 28, scope: !3153)
!3156 = !DILocation(line: 278, column: 16, scope: !3153)
!3157 = !DILocation(line: 279, column: 16, scope: !3158)
!3158 = distinct !DILexicalBlock(scope: !3153, file: !244, line: 279, column: 11)
!3159 = !DILocation(line: 279, column: 13, scope: !3158)
!3160 = !DILocation(line: 279, column: 11, scope: !3153)
!3161 = !DILocation(line: 280, column: 9, scope: !3158)
!3162 = !DILocation(line: 280, column: 2, scope: !3158)
!3163 = distinct !{!3163, !3148, !3164}
!3164 = !DILocation(line: 281, column: 5, scope: !3142)
!3165 = !DILocation(line: 282, column: 1, scope: !3142)
!3166 = distinct !DISubprogram(name: "free_dir", scope: !251, file: !251, line: 151, type: !3167, isLocal: true, isDefinition: true, scopeLine: 152, flags: DIFlagPrototyped, isOptimized: false, unit: !243, variables: !25)
!3167 = !DISubroutineType(types: !3168)
!3168 = !{null, !255}
!3169 = !DILocalVariable(name: "sp", arg: 1, scope: !3166, file: !251, line: 151, type: !255)
!3170 = !DILocation(line: 151, column: 16, scope: !3166)
!3171 = !DILocation(line: 153, column: 7, scope: !3172)
!3172 = distinct !DILexicalBlock(scope: !3166, file: !251, line: 153, column: 7)
!3173 = !DILocation(line: 153, column: 11, scope: !3172)
!3174 = !DILocation(line: 153, column: 23, scope: !3172)
!3175 = !DILocation(line: 153, column: 7, scope: !3166)
!3176 = !DILocation(line: 155, column: 11, scope: !3177)
!3177 = distinct !DILexicalBlock(scope: !3178, file: !251, line: 155, column: 11)
!3178 = distinct !DILexicalBlock(scope: !3172, file: !251, line: 154, column: 5)
!3179 = !DILocation(line: 155, column: 15, scope: !3177)
!3180 = !DILocation(line: 155, column: 25, scope: !3177)
!3181 = !DILocation(line: 155, column: 11, scope: !3178)
!3182 = !DILocation(line: 156, column: 13, scope: !3177)
!3183 = !DILocation(line: 156, column: 17, scope: !3177)
!3184 = !DILocation(line: 156, column: 27, scope: !3177)
!3185 = !DILocation(line: 156, column: 2, scope: !3177)
!3186 = !DILocation(line: 157, column: 5, scope: !3178)
!3187 = !DILocation(line: 159, column: 11, scope: !3172)
!3188 = !DILocation(line: 159, column: 15, scope: !3172)
!3189 = !DILocation(line: 159, column: 25, scope: !3172)
!3190 = !DILocation(line: 159, column: 5, scope: !3172)
!3191 = !DILocation(line: 160, column: 1, scope: !3166)
!3192 = distinct !DISubprogram(name: "fts_read", scope: !244, file: !244, line: 813, type: !3193, isLocal: false, isDefinition: true, scopeLine: 814, flags: DIFlagPrototyped, isOptimized: false, unit: !243, variables: !25)
!3193 = !DISubroutineType(types: !3194)
!3194 = !{!2189, !255}
!3195 = !DILocalVariable(name: "sp", arg: 1, scope: !3192, file: !244, line: 813, type: !255)
!3196 = !DILocation(line: 813, column: 25, scope: !3192)
!3197 = !DILocalVariable(name: "p", scope: !3192, file: !244, line: 815, type: !2189)
!3198 = !DILocation(line: 815, column: 19, scope: !3192)
!3199 = !DILocalVariable(name: "tmp", scope: !3192, file: !244, line: 815, type: !2189)
!3200 = !DILocation(line: 815, column: 23, scope: !3192)
!3201 = !DILocalVariable(name: "instr", scope: !3192, file: !244, line: 816, type: !143)
!3202 = !DILocation(line: 816, column: 30, scope: !3192)
!3203 = !DILocalVariable(name: "t", scope: !3192, file: !244, line: 817, type: !15)
!3204 = !DILocation(line: 817, column: 17, scope: !3192)
!3205 = !DILocation(line: 820, column: 6, scope: !3206)
!3206 = distinct !DILexicalBlock(scope: !3192, file: !244, line: 820, column: 6)
!3207 = !DILocation(line: 820, column: 10, scope: !3206)
!3208 = !DILocation(line: 820, column: 18, scope: !3206)
!3209 = !DILocation(line: 820, column: 26, scope: !3206)
!3210 = !DILocation(line: 820, column: 29, scope: !3206)
!3211 = !DILocation(line: 820, column: 6, scope: !3192)
!3212 = !DILocation(line: 821, column: 3, scope: !3206)
!3213 = !DILocation(line: 824, column: 6, scope: !3192)
!3214 = !DILocation(line: 824, column: 10, scope: !3192)
!3215 = !DILocation(line: 824, column: 4, scope: !3192)
!3216 = !DILocation(line: 827, column: 10, scope: !3192)
!3217 = !DILocation(line: 827, column: 13, scope: !3192)
!3218 = !DILocation(line: 827, column: 8, scope: !3192)
!3219 = !DILocation(line: 828, column: 2, scope: !3192)
!3220 = !DILocation(line: 828, column: 5, scope: !3192)
!3221 = !DILocation(line: 828, column: 15, scope: !3192)
!3222 = !DILocation(line: 831, column: 6, scope: !3223)
!3223 = distinct !DILexicalBlock(scope: !3192, file: !244, line: 831, column: 6)
!3224 = !DILocation(line: 831, column: 12, scope: !3223)
!3225 = !DILocation(line: 831, column: 6, scope: !3192)
!3226 = !DILocation(line: 832, column: 26, scope: !3227)
!3227 = distinct !DILexicalBlock(scope: !3223, file: !244, line: 831, column: 26)
!3228 = !DILocation(line: 832, column: 30, scope: !3227)
!3229 = !DILocation(line: 832, column: 17, scope: !3227)
!3230 = !DILocation(line: 832, column: 3, scope: !3227)
!3231 = !DILocation(line: 832, column: 6, scope: !3227)
!3232 = !DILocation(line: 832, column: 15, scope: !3227)
!3233 = !DILocation(line: 833, column: 11, scope: !3227)
!3234 = !DILocation(line: 833, column: 3, scope: !3227)
!3235 = !DILocation(line: 844, column: 6, scope: !3236)
!3236 = distinct !DILexicalBlock(scope: !3192, file: !244, line: 844, column: 6)
!3237 = !DILocation(line: 844, column: 12, scope: !3236)
!3238 = !DILocation(line: 844, column: 26, scope: !3236)
!3239 = !DILocation(line: 845, column: 7, scope: !3236)
!3240 = !DILocation(line: 845, column: 10, scope: !3236)
!3241 = !DILocation(line: 845, column: 19, scope: !3236)
!3242 = !DILocation(line: 845, column: 29, scope: !3236)
!3243 = !DILocation(line: 845, column: 32, scope: !3236)
!3244 = !DILocation(line: 845, column: 35, scope: !3236)
!3245 = !DILocation(line: 845, column: 44, scope: !3236)
!3246 = !DILocation(line: 844, column: 6, scope: !3192)
!3247 = !DILocation(line: 846, column: 26, scope: !3248)
!3248 = distinct !DILexicalBlock(scope: !3236, file: !244, line: 845, column: 60)
!3249 = !DILocation(line: 846, column: 30, scope: !3248)
!3250 = !DILocation(line: 846, column: 17, scope: !3248)
!3251 = !DILocation(line: 846, column: 3, scope: !3248)
!3252 = !DILocation(line: 846, column: 6, scope: !3248)
!3253 = !DILocation(line: 846, column: 15, scope: !3248)
!3254 = !DILocation(line: 847, column: 7, scope: !3255)
!3255 = distinct !DILexicalBlock(scope: !3248, file: !244, line: 847, column: 7)
!3256 = !DILocation(line: 847, column: 10, scope: !3255)
!3257 = !DILocation(line: 847, column: 19, scope: !3255)
!3258 = !DILocation(line: 847, column: 28, scope: !3255)
!3259 = !DILocation(line: 847, column: 32, scope: !3255)
!3260 = !DILocation(line: 847, column: 7, scope: !3248)
!3261 = !DILocation(line: 848, column: 33, scope: !3262)
!3262 = distinct !DILexicalBlock(scope: !3263, file: !244, line: 848, column: 8)
!3263 = distinct !DILexicalBlock(scope: !3255, file: !244, line: 847, column: 52)
!3264 = !DILocation(line: 848, column: 24, scope: !3262)
!3265 = !DILocation(line: 848, column: 9, scope: !3262)
!3266 = !DILocation(line: 848, column: 12, scope: !3262)
!3267 = !DILocation(line: 848, column: 22, scope: !3262)
!3268 = !DILocation(line: 848, column: 43, scope: !3262)
!3269 = !DILocation(line: 848, column: 8, scope: !3263)
!3270 = !DILocation(line: 849, column: 20, scope: !3271)
!3271 = distinct !DILexicalBlock(scope: !3262, file: !244, line: 848, column: 48)
!3272 = !DILocation(line: 849, column: 5, scope: !3271)
!3273 = !DILocation(line: 849, column: 8, scope: !3271)
!3274 = !DILocation(line: 849, column: 18, scope: !3271)
!3275 = !DILocation(line: 850, column: 5, scope: !3271)
!3276 = !DILocation(line: 850, column: 8, scope: !3271)
!3277 = !DILocation(line: 850, column: 17, scope: !3271)
!3278 = !DILocation(line: 851, column: 4, scope: !3271)
!3279 = !DILocation(line: 852, column: 5, scope: !3262)
!3280 = !DILocation(line: 852, column: 8, scope: !3262)
!3281 = !DILocation(line: 852, column: 18, scope: !3262)
!3282 = !DILocation(line: 853, column: 3, scope: !3263)
!3283 = !DILocation(line: 854, column: 3, scope: !3248)
!3284 = !DILocation(line: 858, column: 6, scope: !3285)
!3285 = distinct !DILexicalBlock(scope: !3192, file: !244, line: 858, column: 6)
!3286 = !DILocation(line: 858, column: 9, scope: !3285)
!3287 = !DILocation(line: 858, column: 18, scope: !3285)
!3288 = !DILocation(line: 858, column: 6, scope: !3192)
!3289 = !DILocation(line: 860, column: 7, scope: !3290)
!3290 = distinct !DILexicalBlock(scope: !3291, file: !244, line: 860, column: 7)
!3291 = distinct !DILexicalBlock(scope: !3285, file: !244, line: 858, column: 28)
!3292 = !DILocation(line: 860, column: 13, scope: !3290)
!3293 = !DILocation(line: 860, column: 25, scope: !3290)
!3294 = !DILocation(line: 861, column: 8, scope: !3290)
!3295 = !DILocation(line: 861, column: 24, scope: !3290)
!3296 = !DILocation(line: 861, column: 27, scope: !3290)
!3297 = !DILocation(line: 861, column: 30, scope: !3290)
!3298 = !DILocation(line: 861, column: 41, scope: !3290)
!3299 = !DILocation(line: 861, column: 51, scope: !3290)
!3300 = !DILocation(line: 861, column: 55, scope: !3290)
!3301 = !DILocation(line: 861, column: 48, scope: !3290)
!3302 = !DILocation(line: 860, column: 7, scope: !3291)
!3303 = !DILocation(line: 862, column: 8, scope: !3304)
!3304 = distinct !DILexicalBlock(scope: !3305, file: !244, line: 862, column: 8)
!3305 = distinct !DILexicalBlock(scope: !3290, file: !244, line: 861, column: 65)
!3306 = !DILocation(line: 862, column: 11, scope: !3304)
!3307 = !DILocation(line: 862, column: 21, scope: !3304)
!3308 = !DILocation(line: 862, column: 8, scope: !3305)
!3309 = !DILocation(line: 863, column: 17, scope: !3304)
!3310 = !DILocation(line: 863, column: 20, scope: !3304)
!3311 = !DILocation(line: 863, column: 11, scope: !3304)
!3312 = !DILocation(line: 863, column: 5, scope: !3304)
!3313 = !DILocation(line: 864, column: 8, scope: !3314)
!3314 = distinct !DILexicalBlock(scope: !3305, file: !244, line: 864, column: 8)
!3315 = !DILocation(line: 864, column: 12, scope: !3314)
!3316 = !DILocation(line: 864, column: 8, scope: !3305)
!3317 = !DILocation(line: 865, column: 15, scope: !3318)
!3318 = distinct !DILexicalBlock(scope: !3314, file: !244, line: 864, column: 23)
!3319 = !DILocation(line: 865, column: 19, scope: !3318)
!3320 = !DILocation(line: 865, column: 5, scope: !3318)
!3321 = !DILocation(line: 866, column: 5, scope: !3318)
!3322 = !DILocation(line: 866, column: 9, scope: !3318)
!3323 = !DILocation(line: 866, column: 19, scope: !3318)
!3324 = !DILocation(line: 867, column: 4, scope: !3318)
!3325 = !DILocation(line: 868, column: 4, scope: !3305)
!3326 = !DILocation(line: 868, column: 7, scope: !3305)
!3327 = !DILocation(line: 868, column: 16, scope: !3305)
!3328 = !DILocation(line: 869, column: 4, scope: !3305)
!3329 = distinct !{!3329, !3328, !3328}
!3330 = !DILocation(line: 869, column: 4, scope: !3331)
!3331 = distinct !DILexicalBlock(scope: !3305, file: !244, line: 869, column: 4)
!3332 = !DILocation(line: 870, column: 12, scope: !3305)
!3333 = !DILocation(line: 870, column: 4, scope: !3305)
!3334 = !DILocation(line: 874, column: 7, scope: !3335)
!3335 = distinct !DILexicalBlock(scope: !3291, file: !244, line: 874, column: 7)
!3336 = !DILocation(line: 874, column: 11, scope: !3335)
!3337 = !DILocation(line: 874, column: 21, scope: !3335)
!3338 = !DILocation(line: 874, column: 29, scope: !3335)
!3339 = !DILocation(line: 874, column: 32, scope: !3335)
!3340 = !DILocation(line: 874, column: 7, scope: !3291)
!3341 = !DILocation(line: 875, column: 4, scope: !3342)
!3342 = distinct !DILexicalBlock(scope: !3335, file: !244, line: 874, column: 53)
!3343 = !DILocation(line: 876, column: 14, scope: !3342)
!3344 = !DILocation(line: 876, column: 18, scope: !3342)
!3345 = !DILocation(line: 876, column: 4, scope: !3342)
!3346 = !DILocation(line: 877, column: 4, scope: !3342)
!3347 = !DILocation(line: 877, column: 8, scope: !3342)
!3348 = !DILocation(line: 877, column: 18, scope: !3342)
!3349 = !DILocation(line: 878, column: 3, scope: !3342)
!3350 = !DILocation(line: 892, column: 7, scope: !3351)
!3351 = distinct !DILexicalBlock(scope: !3291, file: !244, line: 892, column: 7)
!3352 = !DILocation(line: 892, column: 11, scope: !3351)
!3353 = !DILocation(line: 892, column: 21, scope: !3351)
!3354 = !DILocation(line: 892, column: 7, scope: !3291)
!3355 = !DILocation(line: 893, column: 27, scope: !3356)
!3356 = distinct !DILexicalBlock(scope: !3357, file: !244, line: 893, column: 8)
!3357 = distinct !DILexicalBlock(scope: !3351, file: !244, line: 892, column: 30)
!3358 = !DILocation(line: 893, column: 31, scope: !3356)
!3359 = !DILocation(line: 893, column: 38, scope: !3356)
!3360 = !DILocation(line: 893, column: 41, scope: !3356)
!3361 = !DILocation(line: 893, column: 8, scope: !3356)
!3362 = !DILocation(line: 893, column: 8, scope: !3357)
!3363 = !DILocation(line: 894, column: 20, scope: !3364)
!3364 = distinct !DILexicalBlock(scope: !3356, file: !244, line: 893, column: 55)
!3365 = !DILocation(line: 894, column: 5, scope: !3364)
!3366 = !DILocation(line: 894, column: 8, scope: !3364)
!3367 = !DILocation(line: 894, column: 18, scope: !3364)
!3368 = !DILocation(line: 895, column: 5, scope: !3364)
!3369 = !DILocation(line: 895, column: 8, scope: !3364)
!3370 = !DILocation(line: 895, column: 18, scope: !3364)
!3371 = !DILocation(line: 896, column: 14, scope: !3372)
!3372 = distinct !DILexicalBlock(scope: !3364, file: !244, line: 896, column: 5)
!3373 = !DILocation(line: 896, column: 18, scope: !3372)
!3374 = !DILocation(line: 896, column: 12, scope: !3372)
!3375 = !DILocation(line: 896, column: 10, scope: !3372)
!3376 = !DILocation(line: 896, column: 29, scope: !3377)
!3377 = distinct !DILexicalBlock(scope: !3372, file: !244, line: 896, column: 5)
!3378 = !DILocation(line: 896, column: 31, scope: !3377)
!3379 = !DILocation(line: 896, column: 5, scope: !3372)
!3380 = !DILocation(line: 899, column: 10, scope: !3377)
!3381 = !DILocation(line: 899, column: 13, scope: !3377)
!3382 = !DILocation(line: 899, column: 25, scope: !3377)
!3383 = !DILocation(line: 898, column: 6, scope: !3377)
!3384 = !DILocation(line: 898, column: 9, scope: !3377)
!3385 = !DILocation(line: 898, column: 21, scope: !3377)
!3386 = !DILocation(line: 897, column: 14, scope: !3377)
!3387 = !DILocation(line: 897, column: 17, scope: !3377)
!3388 = !DILocation(line: 897, column: 12, scope: !3377)
!3389 = !DILocation(line: 896, column: 5, scope: !3377)
!3390 = distinct !{!3390, !3379, !3391}
!3391 = !DILocation(line: 899, column: 25, scope: !3372)
!3392 = !DILocation(line: 900, column: 4, scope: !3364)
!3393 = !DILocation(line: 901, column: 3, scope: !3357)
!3394 = !DILocation(line: 901, column: 41, scope: !3395)
!3395 = distinct !DILexicalBlock(scope: !3351, file: !244, line: 901, column: 14)
!3396 = !DILocation(line: 901, column: 31, scope: !3395)
!3397 = !DILocation(line: 901, column: 15, scope: !3395)
!3398 = !DILocation(line: 901, column: 19, scope: !3395)
!3399 = !DILocation(line: 901, column: 29, scope: !3395)
!3400 = !DILocation(line: 901, column: 53, scope: !3395)
!3401 = !DILocation(line: 901, column: 14, scope: !3351)
!3402 = !DILocation(line: 902, column: 8, scope: !3403)
!3403 = distinct !DILexicalBlock(scope: !3404, file: !244, line: 902, column: 8)
!3404 = distinct !DILexicalBlock(scope: !3395, file: !244, line: 901, column: 62)
!3405 = !DILocation(line: 902, column: 8, scope: !3404)
!3406 = !DILocation(line: 903, column: 5, scope: !3403)
!3407 = !DILocation(line: 907, column: 8, scope: !3408)
!3408 = distinct !DILexicalBlock(scope: !3404, file: !244, line: 907, column: 8)
!3409 = !DILocation(line: 907, column: 11, scope: !3408)
!3410 = !DILocation(line: 907, column: 21, scope: !3408)
!3411 = !DILocation(line: 907, column: 24, scope: !3408)
!3412 = !DILocation(line: 907, column: 27, scope: !3408)
!3413 = !DILocation(line: 907, column: 36, scope: !3408)
!3414 = !DILocation(line: 907, column: 8, scope: !3404)
!3415 = !DILocation(line: 908, column: 5, scope: !3408)
!3416 = !DILocation(line: 908, column: 8, scope: !3408)
!3417 = !DILocation(line: 908, column: 17, scope: !3408)
!3418 = !DILocation(line: 909, column: 4, scope: !3404)
!3419 = distinct !{!3419, !3418, !3418}
!3420 = !DILocation(line: 909, column: 4, scope: !3421)
!3421 = distinct !DILexicalBlock(scope: !3404, file: !244, line: 909, column: 4)
!3422 = !DILocation(line: 910, column: 12, scope: !3404)
!3423 = !DILocation(line: 910, column: 4, scope: !3404)
!3424 = !DILocation(line: 912, column: 7, scope: !3291)
!3425 = !DILocation(line: 912, column: 11, scope: !3291)
!3426 = !DILocation(line: 912, column: 5, scope: !3291)
!3427 = !DILocation(line: 913, column: 3, scope: !3291)
!3428 = !DILocation(line: 913, column: 7, scope: !3291)
!3429 = !DILocation(line: 913, column: 17, scope: !3291)
!3430 = !DILocation(line: 914, column: 3, scope: !3291)
!3431 = !DILocation(line: 858, column: 21, scope: !3285)
!3432 = !DILocation(line: 918, column: 13, scope: !3192)
!3433 = !DILocation(line: 918, column: 11, scope: !3192)
!3434 = !DILocation(line: 919, column: 11, scope: !3435)
!3435 = distinct !DILexicalBlock(scope: !3192, file: !244, line: 919, column: 6)
!3436 = !DILocation(line: 919, column: 14, scope: !3435)
!3437 = !DILocation(line: 919, column: 9, scope: !3435)
!3438 = !DILocation(line: 919, column: 24, scope: !3435)
!3439 = !DILocation(line: 919, column: 6, scope: !3192)
!3440 = !DILocation(line: 920, column: 17, scope: !3441)
!3441 = distinct !DILexicalBlock(scope: !3435, file: !244, line: 919, column: 33)
!3442 = !DILocation(line: 920, column: 3, scope: !3441)
!3443 = !DILocation(line: 920, column: 7, scope: !3441)
!3444 = !DILocation(line: 920, column: 15, scope: !3441)
!3445 = !DILocation(line: 921, column: 8, scope: !3441)
!3446 = !DILocation(line: 921, column: 3, scope: !3441)
!3447 = !DILocation(line: 928, column: 7, scope: !3448)
!3448 = distinct !DILexicalBlock(scope: !3441, file: !244, line: 928, column: 7)
!3449 = !DILocation(line: 928, column: 10, scope: !3448)
!3450 = !DILocation(line: 928, column: 20, scope: !3448)
!3451 = !DILocation(line: 928, column: 7, scope: !3441)
!3452 = !DILocation(line: 929, column: 8, scope: !3453)
!3453 = distinct !DILexicalBlock(scope: !3454, file: !244, line: 929, column: 8)
!3454 = distinct !DILexicalBlock(scope: !3448, file: !244, line: 928, column: 38)
!3455 = !DILocation(line: 929, column: 8, scope: !3454)
!3456 = !DILocation(line: 930, column: 5, scope: !3457)
!3457 = distinct !DILexicalBlock(scope: !3453, file: !244, line: 929, column: 33)
!3458 = !DILocation(line: 931, column: 5, scope: !3457)
!3459 = !DILocation(line: 933, column: 13, scope: !3454)
!3460 = !DILocation(line: 933, column: 4, scope: !3454)
!3461 = !DILocation(line: 934, column: 13, scope: !3454)
!3462 = !DILocation(line: 934, column: 17, scope: !3454)
!3463 = !DILocation(line: 934, column: 4, scope: !3454)
!3464 = !DILocation(line: 935, column: 14, scope: !3454)
!3465 = !DILocation(line: 935, column: 4, scope: !3454)
!3466 = !DILocation(line: 936, column: 4, scope: !3454)
!3467 = !DILocation(line: 944, column: 7, scope: !3468)
!3468 = distinct !DILexicalBlock(scope: !3441, file: !244, line: 944, column: 7)
!3469 = !DILocation(line: 944, column: 10, scope: !3468)
!3470 = !DILocation(line: 944, column: 20, scope: !3468)
!3471 = !DILocation(line: 944, column: 7, scope: !3441)
!3472 = !DILocation(line: 945, column: 4, scope: !3468)
!3473 = !DILocation(line: 946, column: 7, scope: !3474)
!3474 = distinct !DILexicalBlock(scope: !3441, file: !244, line: 946, column: 7)
!3475 = !DILocation(line: 946, column: 10, scope: !3474)
!3476 = !DILocation(line: 946, column: 20, scope: !3474)
!3477 = !DILocation(line: 946, column: 7, scope: !3441)
!3478 = !DILocation(line: 947, column: 27, scope: !3479)
!3479 = distinct !DILexicalBlock(scope: !3474, file: !244, line: 946, column: 35)
!3480 = !DILocation(line: 947, column: 31, scope: !3479)
!3481 = !DILocation(line: 947, column: 18, scope: !3479)
!3482 = !DILocation(line: 947, column: 4, scope: !3479)
!3483 = !DILocation(line: 947, column: 7, scope: !3479)
!3484 = !DILocation(line: 947, column: 16, scope: !3479)
!3485 = !DILocation(line: 948, column: 8, scope: !3486)
!3486 = distinct !DILexicalBlock(scope: !3479, file: !244, line: 948, column: 8)
!3487 = !DILocation(line: 948, column: 11, scope: !3486)
!3488 = !DILocation(line: 948, column: 20, scope: !3486)
!3489 = !DILocation(line: 948, column: 29, scope: !3486)
!3490 = !DILocation(line: 948, column: 33, scope: !3486)
!3491 = !DILocation(line: 948, column: 8, scope: !3479)
!3492 = !DILocation(line: 949, column: 34, scope: !3493)
!3493 = distinct !DILexicalBlock(scope: !3494, file: !244, line: 949, column: 9)
!3494 = distinct !DILexicalBlock(scope: !3486, file: !244, line: 948, column: 53)
!3495 = !DILocation(line: 949, column: 25, scope: !3493)
!3496 = !DILocation(line: 949, column: 10, scope: !3493)
!3497 = !DILocation(line: 949, column: 13, scope: !3493)
!3498 = !DILocation(line: 949, column: 23, scope: !3493)
!3499 = !DILocation(line: 949, column: 44, scope: !3493)
!3500 = !DILocation(line: 949, column: 9, scope: !3494)
!3501 = !DILocation(line: 950, column: 21, scope: !3502)
!3502 = distinct !DILexicalBlock(scope: !3493, file: !244, line: 949, column: 49)
!3503 = !DILocation(line: 950, column: 6, scope: !3502)
!3504 = !DILocation(line: 950, column: 9, scope: !3502)
!3505 = !DILocation(line: 950, column: 19, scope: !3502)
!3506 = !DILocation(line: 951, column: 6, scope: !3502)
!3507 = !DILocation(line: 951, column: 9, scope: !3502)
!3508 = !DILocation(line: 951, column: 18, scope: !3502)
!3509 = !DILocation(line: 952, column: 5, scope: !3502)
!3510 = !DILocation(line: 953, column: 6, scope: !3493)
!3511 = !DILocation(line: 953, column: 9, scope: !3493)
!3512 = !DILocation(line: 953, column: 19, scope: !3493)
!3513 = !DILocation(line: 954, column: 4, scope: !3494)
!3514 = !DILocation(line: 955, column: 4, scope: !3479)
!3515 = !DILocation(line: 955, column: 7, scope: !3479)
!3516 = !DILocation(line: 955, column: 17, scope: !3479)
!3517 = !DILocation(line: 956, column: 3, scope: !3479)
!3518 = !DILocation(line: 946, column: 23, scope: !3474)
!3519 = !DILocation(line: 958, column: 12, scope: !3441)
!3520 = !DILocation(line: 958, column: 16, scope: !3441)
!3521 = !DILocation(line: 958, column: 27, scope: !3441)
!3522 = !DILocation(line: 958, column: 25, scope: !3441)
!3523 = !DILocation(line: 958, column: 10, scope: !3441)
!3524 = !DILocation(line: 959, column: 5, scope: !3441)
!3525 = !DILocation(line: 959, column: 8, scope: !3441)
!3526 = !DILocation(line: 960, column: 11, scope: !3441)
!3527 = !DILocation(line: 960, column: 14, scope: !3441)
!3528 = !DILocation(line: 960, column: 17, scope: !3441)
!3529 = !DILocation(line: 960, column: 3, scope: !3441)
!3530 = !DILocation(line: 960, column: 27, scope: !3441)
!3531 = !DILocation(line: 960, column: 30, scope: !3441)
!3532 = !DILocation(line: 960, column: 42, scope: !3441)
!3533 = !DILocation(line: 962, column: 17, scope: !3441)
!3534 = !DILocation(line: 962, column: 3, scope: !3441)
!3535 = !DILocation(line: 962, column: 7, scope: !3441)
!3536 = !DILocation(line: 962, column: 15, scope: !3441)
!3537 = !DILocation(line: 963, column: 7, scope: !3538)
!3538 = distinct !DILexicalBlock(scope: !3441, file: !244, line: 963, column: 7)
!3539 = !DILocation(line: 963, column: 10, scope: !3538)
!3540 = !DILocation(line: 963, column: 19, scope: !3538)
!3541 = !DILocation(line: 963, column: 7, scope: !3441)
!3542 = !DILocation(line: 965, column: 11, scope: !3543)
!3543 = distinct !DILexicalBlock(scope: !3544, file: !244, line: 965, column: 11)
!3544 = distinct !DILexicalBlock(scope: !3538, file: !244, line: 964, column: 5)
!3545 = !DILocation(line: 965, column: 14, scope: !3543)
!3546 = !DILocation(line: 965, column: 25, scope: !3543)
!3547 = !DILocation(line: 965, column: 33, scope: !3543)
!3548 = !DILocation(line: 965, column: 11, scope: !3544)
!3549 = !DILocalVariable(name: "parent", scope: !3550, file: !244, line: 967, type: !2189)
!3550 = distinct !DILexicalBlock(scope: !3543, file: !244, line: 966, column: 9)
!3551 = !DILocation(line: 967, column: 12, scope: !3550)
!3552 = !DILocation(line: 967, column: 21, scope: !3550)
!3553 = !DILocation(line: 967, column: 24, scope: !3550)
!3554 = !DILocation(line: 968, column: 24, scope: !3555)
!3555 = distinct !DILexicalBlock(scope: !3550, file: !244, line: 968, column: 8)
!3556 = !DILocation(line: 968, column: 27, scope: !3555)
!3557 = !DILocation(line: 968, column: 22, scope: !3555)
!3558 = !DILocation(line: 971, column: 8, scope: !3555)
!3559 = !DILocation(line: 971, column: 11, scope: !3555)
!3560 = !DILocation(line: 971, column: 19, scope: !3555)
!3561 = !DILocation(line: 971, column: 40, scope: !3555)
!3562 = !DILocation(line: 972, column: 8, scope: !3555)
!3563 = !DILocation(line: 972, column: 11, scope: !3555)
!3564 = !DILocation(line: 973, column: 8, scope: !3555)
!3565 = !DILocation(line: 973, column: 11, scope: !3555)
!3566 = !DILocation(line: 974, column: 8, scope: !3555)
!3567 = !DILocation(line: 974, column: 35, scope: !3555)
!3568 = !DILocation(line: 974, column: 11, scope: !3555)
!3569 = !DILocation(line: 968, column: 8, scope: !3550)
!3570 = !DILocation(line: 977, column: 6, scope: !3571)
!3571 = distinct !DILexicalBlock(scope: !3555, file: !244, line: 975, column: 6)
!3572 = !DILocation(line: 980, column: 31, scope: !3573)
!3573 = distinct !DILexicalBlock(scope: !3555, file: !244, line: 979, column: 6)
!3574 = !DILocation(line: 980, column: 35, scope: !3573)
!3575 = !DILocation(line: 980, column: 22, scope: !3573)
!3576 = !DILocation(line: 980, column: 8, scope: !3573)
!3577 = !DILocation(line: 980, column: 11, scope: !3573)
!3578 = !DILocation(line: 980, column: 20, scope: !3573)
!3579 = !DILocation(line: 981, column: 12, scope: !3580)
!3580 = distinct !DILexicalBlock(scope: !3573, file: !244, line: 981, column: 12)
!3581 = !DILocation(line: 982, column: 5, scope: !3580)
!3582 = !DILocation(line: 982, column: 8, scope: !3580)
!3583 = !DILocation(line: 982, column: 11, scope: !3580)
!3584 = !DILocation(line: 982, column: 21, scope: !3580)
!3585 = !DILocation(line: 983, column: 5, scope: !3580)
!3586 = !DILocation(line: 983, column: 8, scope: !3580)
!3587 = !DILocation(line: 983, column: 16, scope: !3580)
!3588 = !DILocation(line: 981, column: 12, scope: !3573)
!3589 = !DILocation(line: 984, column: 7, scope: !3580)
!3590 = !DILocation(line: 984, column: 15, scope: !3580)
!3591 = !DILocation(line: 984, column: 35, scope: !3580)
!3592 = !DILocation(line: 986, column: 9, scope: !3550)
!3593 = !DILocation(line: 988, column: 9, scope: !3543)
!3594 = distinct !{!3594, !3593, !3593}
!3595 = !DILocation(line: 988, column: 9, scope: !3596)
!3596 = distinct !DILexicalBlock(scope: !3597, file: !244, line: 988, column: 9)
!3597 = distinct !DILexicalBlock(scope: !3543, file: !244, line: 988, column: 9)
!3598 = !DILocation(line: 988, column: 9, scope: !3597)
!3599 = !DILocation(line: 989, column: 5, scope: !3544)
!3600 = !DILocation(line: 991, column: 7, scope: !3601)
!3601 = distinct !DILexicalBlock(scope: !3441, file: !244, line: 991, column: 7)
!3602 = !DILocation(line: 991, column: 10, scope: !3601)
!3603 = !DILocation(line: 991, column: 19, scope: !3601)
!3604 = !DILocation(line: 991, column: 7, scope: !3441)
!3605 = !DILocation(line: 996, column: 11, scope: !3606)
!3606 = distinct !DILexicalBlock(scope: !3607, file: !244, line: 996, column: 11)
!3607 = distinct !DILexicalBlock(scope: !3601, file: !244, line: 992, column: 5)
!3608 = !DILocation(line: 996, column: 14, scope: !3606)
!3609 = !DILocation(line: 996, column: 24, scope: !3606)
!3610 = !DILocation(line: 996, column: 11, scope: !3607)
!3611 = !DILocation(line: 997, column: 23, scope: !3606)
!3612 = !DILocation(line: 997, column: 26, scope: !3606)
!3613 = !DILocation(line: 997, column: 37, scope: !3606)
!3614 = !DILocation(line: 997, column: 9, scope: !3606)
!3615 = !DILocation(line: 997, column: 13, scope: !3606)
!3616 = !DILocation(line: 997, column: 21, scope: !3606)
!3617 = !DILocation(line: 999, column: 24, scope: !3618)
!3618 = distinct !DILexicalBlock(scope: !3607, file: !244, line: 999, column: 11)
!3619 = !DILocation(line: 999, column: 28, scope: !3618)
!3620 = !DILocation(line: 999, column: 13, scope: !3618)
!3621 = !DILocation(line: 999, column: 11, scope: !3607)
!3622 = !DILocation(line: 1001, column: 4, scope: !3623)
!3623 = distinct !DILexicalBlock(scope: !3618, file: !244, line: 1000, column: 9)
!3624 = !DILocation(line: 1002, column: 4, scope: !3623)
!3625 = !DILocation(line: 1004, column: 5, scope: !3607)
!3626 = !DILocation(line: 1005, column: 10, scope: !3441)
!3627 = !DILocation(line: 1005, column: 3, scope: !3441)
!3628 = !DILocation(line: 1009, column: 6, scope: !3192)
!3629 = !DILocation(line: 1009, column: 11, scope: !3192)
!3630 = !DILocation(line: 1009, column: 4, scope: !3192)
!3631 = !DILocation(line: 1010, column: 16, scope: !3192)
!3632 = !DILocation(line: 1010, column: 2, scope: !3192)
!3633 = !DILocation(line: 1010, column: 6, scope: !3192)
!3634 = !DILocation(line: 1010, column: 14, scope: !3192)
!3635 = !DILocation(line: 1011, column: 7, scope: !3192)
!3636 = !DILocation(line: 1011, column: 2, scope: !3192)
!3637 = !DILocation(line: 1013, column: 6, scope: !3638)
!3638 = distinct !DILexicalBlock(scope: !3192, file: !244, line: 1013, column: 6)
!3639 = !DILocation(line: 1013, column: 9, scope: !3638)
!3640 = !DILocation(line: 1013, column: 19, scope: !3638)
!3641 = !DILocation(line: 1013, column: 6, scope: !3192)
!3642 = !DILocation(line: 1018, column: 8, scope: !3643)
!3643 = distinct !DILexicalBlock(scope: !3638, file: !244, line: 1013, column: 43)
!3644 = !DILocation(line: 1018, column: 3, scope: !3643)
!3645 = !DILocation(line: 1019, column: 3, scope: !3643)
!3646 = !DILocation(line: 1020, column: 11, scope: !3643)
!3647 = !DILocation(line: 1020, column: 15, scope: !3643)
!3648 = !DILocation(line: 1020, column: 23, scope: !3643)
!3649 = !DILocation(line: 1020, column: 3, scope: !3643)
!3650 = !DILocation(line: 1023, column: 2, scope: !3192)
!3651 = distinct !{!3651, !3650, !3650}
!3652 = !DILocation(line: 1023, column: 2, scope: !3653)
!3653 = distinct !DILexicalBlock(scope: !3654, file: !244, line: 1023, column: 2)
!3654 = distinct !DILexicalBlock(scope: !3192, file: !244, line: 1023, column: 2)
!3655 = !DILocation(line: 1023, column: 2, scope: !3654)
!3656 = !DILocation(line: 1026, column: 2, scope: !3192)
!3657 = !DILocation(line: 1026, column: 6, scope: !3192)
!3658 = !DILocation(line: 1026, column: 15, scope: !3192)
!3659 = !DILocation(line: 1026, column: 18, scope: !3192)
!3660 = !DILocation(line: 1026, column: 31, scope: !3192)
!3661 = !DILocation(line: 1034, column: 6, scope: !3662)
!3662 = distinct !DILexicalBlock(scope: !3192, file: !244, line: 1034, column: 6)
!3663 = !DILocation(line: 1034, column: 9, scope: !3662)
!3664 = !DILocation(line: 1034, column: 19, scope: !3662)
!3665 = !DILocation(line: 1034, column: 6, scope: !3192)
!3666 = !DILocation(line: 1035, column: 7, scope: !3667)
!3667 = distinct !DILexicalBlock(scope: !3668, file: !244, line: 1035, column: 7)
!3668 = distinct !DILexicalBlock(scope: !3662, file: !244, line: 1034, column: 37)
!3669 = !DILocation(line: 1035, column: 7, scope: !3668)
!3670 = !DILocation(line: 1036, column: 19, scope: !3671)
!3671 = distinct !DILexicalBlock(scope: !3667, file: !244, line: 1035, column: 32)
!3672 = !DILocation(line: 1036, column: 4, scope: !3671)
!3673 = !DILocation(line: 1036, column: 7, scope: !3671)
!3674 = !DILocation(line: 1036, column: 17, scope: !3671)
!3675 = !DILocation(line: 1037, column: 4, scope: !3671)
!3676 = !DILocation(line: 1038, column: 3, scope: !3671)
!3677 = !DILocation(line: 1039, column: 2, scope: !3668)
!3678 = !DILocation(line: 1039, column: 13, scope: !3679)
!3679 = distinct !DILexicalBlock(scope: !3662, file: !244, line: 1039, column: 13)
!3680 = !DILocation(line: 1039, column: 16, scope: !3679)
!3681 = !DILocation(line: 1039, column: 26, scope: !3679)
!3682 = !DILocation(line: 1039, column: 13, scope: !3662)
!3683 = !DILocation(line: 1040, column: 7, scope: !3684)
!3684 = distinct !DILexicalBlock(scope: !3685, file: !244, line: 1040, column: 7)
!3685 = distinct !DILexicalBlock(scope: !3679, file: !244, line: 1039, column: 43)
!3686 = !DILocation(line: 1040, column: 7, scope: !3685)
!3687 = !DILocalVariable(name: "saved_errno", scope: !3688, file: !244, line: 1041, type: !23)
!3688 = distinct !DILexicalBlock(scope: !3684, file: !244, line: 1040, column: 33)
!3689 = !DILocation(line: 1041, column: 8, scope: !3688)
!3690 = !DILocation(line: 1041, column: 22, scope: !3688)
!3691 = !DILocation(line: 1042, column: 16, scope: !3688)
!3692 = !DILocation(line: 1042, column: 19, scope: !3688)
!3693 = !DILocation(line: 1042, column: 10, scope: !3688)
!3694 = !DILocation(line: 1043, column: 4, scope: !3688)
!3695 = !DILocation(line: 1044, column: 19, scope: !3688)
!3696 = !DILocation(line: 1044, column: 4, scope: !3688)
!3697 = !DILocation(line: 1044, column: 7, scope: !3688)
!3698 = !DILocation(line: 1044, column: 17, scope: !3688)
!3699 = !DILocation(line: 1045, column: 4, scope: !3688)
!3700 = !DILocation(line: 1046, column: 3, scope: !3688)
!3701 = !DILocation(line: 1047, column: 15, scope: !3685)
!3702 = !DILocation(line: 1047, column: 18, scope: !3685)
!3703 = !DILocation(line: 1047, column: 9, scope: !3685)
!3704 = !DILocation(line: 1048, column: 2, scope: !3685)
!3705 = !DILocation(line: 1048, column: 15, scope: !3706)
!3706 = distinct !DILexicalBlock(scope: !3679, file: !244, line: 1048, column: 13)
!3707 = !DILocation(line: 1048, column: 18, scope: !3706)
!3708 = !DILocation(line: 1048, column: 28, scope: !3706)
!3709 = !DILocation(line: 1048, column: 45, scope: !3706)
!3710 = !DILocation(line: 1049, column: 25, scope: !3706)
!3711 = !DILocation(line: 1049, column: 29, scope: !3706)
!3712 = !DILocation(line: 1049, column: 32, scope: !3706)
!3713 = !DILocation(line: 1049, column: 6, scope: !3706)
!3714 = !DILocation(line: 1048, column: 13, scope: !3679)
!3715 = !DILocation(line: 1050, column: 18, scope: !3716)
!3716 = distinct !DILexicalBlock(scope: !3706, file: !244, line: 1049, column: 55)
!3717 = !DILocation(line: 1050, column: 3, scope: !3716)
!3718 = !DILocation(line: 1050, column: 6, scope: !3716)
!3719 = !DILocation(line: 1050, column: 16, scope: !3716)
!3720 = !DILocation(line: 1051, column: 3, scope: !3716)
!3721 = !DILocation(line: 1052, column: 2, scope: !3716)
!3722 = !DILocation(line: 1053, column: 16, scope: !3192)
!3723 = !DILocation(line: 1053, column: 19, scope: !3192)
!3724 = !DILocation(line: 1053, column: 2, scope: !3192)
!3725 = !DILocation(line: 1053, column: 5, scope: !3192)
!3726 = !DILocation(line: 1053, column: 14, scope: !3192)
!3727 = !DILocation(line: 1054, column: 6, scope: !3728)
!3728 = distinct !DILexicalBlock(scope: !3192, file: !244, line: 1054, column: 6)
!3729 = !DILocation(line: 1054, column: 9, scope: !3728)
!3730 = !DILocation(line: 1054, column: 19, scope: !3728)
!3731 = !DILocation(line: 1054, column: 6, scope: !3192)
!3732 = !DILocation(line: 1055, column: 3, scope: !3728)
!3733 = distinct !{!3733, !3732, !3732}
!3734 = !DILocation(line: 1055, column: 3, scope: !3735)
!3735 = distinct !DILexicalBlock(scope: !3728, file: !244, line: 1055, column: 3)
!3736 = !DILocation(line: 1056, column: 9, scope: !3192)
!3737 = !DILocation(line: 1056, column: 34, scope: !3192)
!3738 = !DILocation(line: 1056, column: 2, scope: !3192)
!3739 = !DILocation(line: 1057, column: 1, scope: !3192)
!3740 = distinct !DISubprogram(name: "leave_dir", scope: !251, file: !251, line: 125, type: !3741, isLocal: true, isDefinition: true, scopeLine: 126, flags: DIFlagPrototyped, isOptimized: false, unit: !243, variables: !25)
!3741 = !DISubroutineType(types: !3742)
!3742 = !{null, !255, !2189}
!3743 = !DILocalVariable(name: "fts", arg: 1, scope: !3740, file: !251, line: 125, type: !255)
!3744 = !DILocation(line: 125, column: 17, scope: !3740)
!3745 = !DILocalVariable(name: "ent", arg: 2, scope: !3740, file: !251, line: 125, type: !2189)
!3746 = !DILocation(line: 125, column: 30, scope: !3740)
!3747 = !DILocalVariable(name: "st", scope: !3740, file: !251, line: 127, type: !3748)
!3748 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3749, size: 64)
!3749 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !287)
!3750 = !DILocation(line: 127, column: 22, scope: !3740)
!3751 = !DILocation(line: 127, column: 27, scope: !3740)
!3752 = !DILocation(line: 127, column: 32, scope: !3740)
!3753 = !DILocation(line: 128, column: 7, scope: !3754)
!3754 = distinct !DILexicalBlock(scope: !3740, file: !251, line: 128, column: 7)
!3755 = !DILocation(line: 128, column: 12, scope: !3754)
!3756 = !DILocation(line: 128, column: 24, scope: !3754)
!3757 = !DILocation(line: 128, column: 7, scope: !3740)
!3758 = !DILocalVariable(name: "obj", scope: !3759, file: !251, line: 130, type: !2961)
!3759 = distinct !DILexicalBlock(scope: !3754, file: !251, line: 129, column: 5)
!3760 = !DILocation(line: 130, column: 25, scope: !3759)
!3761 = !DILocalVariable(name: "found", scope: !3759, file: !251, line: 131, type: !16)
!3762 = !DILocation(line: 131, column: 13, scope: !3759)
!3763 = !DILocation(line: 132, column: 17, scope: !3759)
!3764 = !DILocation(line: 132, column: 21, scope: !3759)
!3765 = !DILocation(line: 132, column: 11, scope: !3759)
!3766 = !DILocation(line: 132, column: 15, scope: !3759)
!3767 = !DILocation(line: 133, column: 17, scope: !3759)
!3768 = !DILocation(line: 133, column: 21, scope: !3759)
!3769 = !DILocation(line: 133, column: 11, scope: !3759)
!3770 = !DILocation(line: 133, column: 15, scope: !3759)
!3771 = !DILocation(line: 134, column: 28, scope: !3759)
!3772 = !DILocation(line: 134, column: 33, scope: !3759)
!3773 = !DILocation(line: 134, column: 43, scope: !3759)
!3774 = !DILocation(line: 134, column: 47, scope: !3759)
!3775 = !DILocation(line: 134, column: 15, scope: !3759)
!3776 = !DILocation(line: 134, column: 13, scope: !3759)
!3777 = !DILocation(line: 135, column: 12, scope: !3778)
!3778 = distinct !DILexicalBlock(scope: !3759, file: !251, line: 135, column: 11)
!3779 = !DILocation(line: 135, column: 11, scope: !3759)
!3780 = !DILocation(line: 136, column: 2, scope: !3778)
!3781 = !DILocation(line: 137, column: 13, scope: !3759)
!3782 = !DILocation(line: 137, column: 7, scope: !3759)
!3783 = !DILocation(line: 138, column: 5, scope: !3759)
!3784 = !DILocalVariable(name: "parent", scope: !3785, file: !251, line: 141, type: !2189)
!3785 = distinct !DILexicalBlock(scope: !3754, file: !251, line: 140, column: 5)
!3786 = !DILocation(line: 141, column: 15, scope: !3785)
!3787 = !DILocation(line: 141, column: 24, scope: !3785)
!3788 = !DILocation(line: 141, column: 29, scope: !3785)
!3789 = !DILocation(line: 142, column: 11, scope: !3790)
!3790 = distinct !DILexicalBlock(scope: !3785, file: !251, line: 142, column: 11)
!3791 = !DILocation(line: 142, column: 18, scope: !3790)
!3792 = !DILocation(line: 142, column: 26, scope: !3790)
!3793 = !DILocation(line: 142, column: 34, scope: !3790)
!3794 = !DILocation(line: 142, column: 42, scope: !3790)
!3795 = !DILocation(line: 142, column: 31, scope: !3790)
!3796 = !DILocation(line: 142, column: 11, scope: !3785)
!3797 = !DILocation(line: 143, column: 2, scope: !3790)
!3798 = distinct !{!3798, !3797, !3797}
!3799 = !DILocation(line: 143, column: 2, scope: !3800)
!3800 = distinct !DILexicalBlock(scope: !3801, file: !251, line: 143, column: 2)
!3801 = distinct !DILexicalBlock(scope: !3790, file: !251, line: 143, column: 2)
!3802 = !DILocation(line: 143, column: 2, scope: !3801)
!3803 = !DILocation(line: 143, column: 2, scope: !3804)
!3804 = distinct !DILexicalBlock(scope: !3801, file: !251, line: 143, column: 2)
!3805 = !DILocation(line: 143, column: 2, scope: !3806)
!3806 = distinct !DILexicalBlock(scope: !3804, file: !251, line: 143, column: 2)
!3807 = !DILocation(line: 146, column: 1, scope: !3740)
!3808 = distinct !DISubprogram(name: "fts_safe_changedir", scope: !244, file: !244, line: 1956, type: !3809, isLocal: true, isDefinition: true, scopeLine: 1957, flags: DIFlagPrototyped, isOptimized: false, unit: !243, variables: !25)
!3809 = !DISubroutineType(types: !3810)
!3810 = !{!23, !255, !2189, !23, !12}
!3811 = !DILocalVariable(name: "sp", arg: 1, scope: !3808, file: !244, line: 1956, type: !255)
!3812 = !DILocation(line: 1956, column: 26, scope: !3808)
!3813 = !DILocalVariable(name: "p", arg: 2, scope: !3808, file: !244, line: 1956, type: !2189)
!3814 = !DILocation(line: 1956, column: 38, scope: !3808)
!3815 = !DILocalVariable(name: "fd", arg: 3, scope: !3808, file: !244, line: 1956, type: !23)
!3816 = !DILocation(line: 1956, column: 45, scope: !3808)
!3817 = !DILocalVariable(name: "dir", arg: 4, scope: !3808, file: !244, line: 1956, type: !12)
!3818 = !DILocation(line: 1956, column: 61, scope: !3808)
!3819 = !DILocalVariable(name: "ret", scope: !3808, file: !244, line: 1958, type: !23)
!3820 = !DILocation(line: 1958, column: 6, scope: !3808)
!3821 = !DILocalVariable(name: "is_dotdot", scope: !3808, file: !244, line: 1959, type: !79)
!3822 = !DILocation(line: 1959, column: 7, scope: !3808)
!3823 = !DILocation(line: 1959, column: 19, scope: !3808)
!3824 = !DILocation(line: 1959, column: 23, scope: !3808)
!3825 = !DILocation(line: 1959, column: 26, scope: !3808)
!3826 = !DILocalVariable(name: "newfd", scope: !3808, file: !244, line: 1960, type: !23)
!3827 = !DILocation(line: 1960, column: 6, scope: !3808)
!3828 = !DILocation(line: 1966, column: 6, scope: !3829)
!3829 = distinct !DILexicalBlock(scope: !3808, file: !244, line: 1966, column: 6)
!3830 = !DILocation(line: 1966, column: 6, scope: !3808)
!3831 = !DILocation(line: 1968, column: 10, scope: !3832)
!3832 = distinct !DILexicalBlock(scope: !3833, file: !244, line: 1968, column: 10)
!3833 = distinct !DILexicalBlock(scope: !3829, file: !244, line: 1967, column: 4)
!3834 = !DILocation(line: 1968, column: 28, scope: !3832)
!3835 = !DILocation(line: 1968, column: 36, scope: !3832)
!3836 = !DILocation(line: 1968, column: 33, scope: !3832)
!3837 = !DILocation(line: 1968, column: 10, scope: !3833)
!3838 = !DILocation(line: 1969, column: 15, scope: !3832)
!3839 = !DILocation(line: 1969, column: 8, scope: !3832)
!3840 = !DILocation(line: 1970, column: 6, scope: !3833)
!3841 = !DILocation(line: 1973, column: 6, scope: !3842)
!3842 = distinct !DILexicalBlock(scope: !3808, file: !244, line: 1973, column: 6)
!3843 = !DILocation(line: 1973, column: 9, scope: !3842)
!3844 = !DILocation(line: 1973, column: 13, scope: !3842)
!3845 = !DILocation(line: 1973, column: 16, scope: !3842)
!3846 = !DILocation(line: 1973, column: 26, scope: !3842)
!3847 = !DILocation(line: 1973, column: 29, scope: !3842)
!3848 = !DILocation(line: 1973, column: 6, scope: !3808)
!3849 = !DILocation(line: 1980, column: 28, scope: !3850)
!3850 = distinct !DILexicalBlock(scope: !3851, file: !244, line: 1980, column: 11)
!3851 = distinct !DILexicalBlock(scope: !3842, file: !244, line: 1974, column: 4)
!3852 = !DILocation(line: 1980, column: 32, scope: !3850)
!3853 = !DILocation(line: 1980, column: 13, scope: !3850)
!3854 = !DILocation(line: 1980, column: 11, scope: !3851)
!3855 = !DILocalVariable(name: "parent_fd", scope: !3856, file: !244, line: 1982, type: !23)
!3856 = distinct !DILexicalBlock(scope: !3850, file: !244, line: 1981, column: 8)
!3857 = !DILocation(line: 1982, column: 7, scope: !3856)
!3858 = !DILocation(line: 1984, column: 28, scope: !3856)
!3859 = !DILocation(line: 1984, column: 32, scope: !3856)
!3860 = !DILocation(line: 1984, column: 15, scope: !3856)
!3861 = !DILocation(line: 1984, column: 13, scope: !3856)
!3862 = !DILocation(line: 1985, column: 13, scope: !3856)
!3863 = !DILocation(line: 1986, column: 12, scope: !3864)
!3864 = distinct !DILexicalBlock(scope: !3856, file: !244, line: 1986, column: 7)
!3865 = !DILocation(line: 1986, column: 9, scope: !3864)
!3866 = !DILocation(line: 1986, column: 7, scope: !3856)
!3867 = !DILocation(line: 1988, column: 12, scope: !3868)
!3868 = distinct !DILexicalBlock(scope: !3864, file: !244, line: 1987, column: 5)
!3869 = !DILocation(line: 1988, column: 10, scope: !3868)
!3870 = !DILocation(line: 1989, column: 11, scope: !3868)
!3871 = !DILocation(line: 1990, column: 5, scope: !3868)
!3872 = !DILocation(line: 1991, column: 8, scope: !3856)
!3873 = !DILocation(line: 1992, column: 4, scope: !3851)
!3874 = !DILocation(line: 1994, column: 10, scope: !3808)
!3875 = !DILocation(line: 1994, column: 8, scope: !3808)
!3876 = !DILocation(line: 1995, column: 6, scope: !3877)
!3877 = distinct !DILexicalBlock(scope: !3808, file: !244, line: 1995, column: 6)
!3878 = !DILocation(line: 1995, column: 9, scope: !3877)
!3879 = !DILocation(line: 1995, column: 13, scope: !3877)
!3880 = !DILocation(line: 1995, column: 34, scope: !3877)
!3881 = !DILocation(line: 1995, column: 38, scope: !3877)
!3882 = !DILocation(line: 1995, column: 25, scope: !3877)
!3883 = !DILocation(line: 1995, column: 23, scope: !3877)
!3884 = !DILocation(line: 1995, column: 44, scope: !3877)
!3885 = !DILocation(line: 1995, column: 6, scope: !3808)
!3886 = !DILocation(line: 1996, column: 4, scope: !3877)
!3887 = !DILocation(line: 2005, column: 6, scope: !3888)
!3888 = distinct !DILexicalBlock(scope: !3808, file: !244, line: 2005, column: 6)
!3889 = !DILocation(line: 2006, column: 6, scope: !3888)
!3890 = !DILocation(line: 2006, column: 10, scope: !3888)
!3891 = !DILocation(line: 2006, column: 14, scope: !3888)
!3892 = !DILocation(line: 2006, column: 17, scope: !3888)
!3893 = !DILocation(line: 2005, column: 6, scope: !3808)
!3894 = !DILocalVariable(name: "sb", scope: !3895, file: !244, line: 2008, type: !287)
!3895 = distinct !DILexicalBlock(scope: !3888, file: !244, line: 2007, column: 4)
!3896 = !DILocation(line: 2008, column: 18, scope: !3895)
!3897 = !DILocation(line: 2009, column: 16, scope: !3898)
!3898 = distinct !DILexicalBlock(scope: !3895, file: !244, line: 2009, column: 10)
!3899 = !DILocation(line: 2009, column: 10, scope: !3898)
!3900 = !DILocation(line: 2009, column: 10, scope: !3895)
!3901 = !DILocation(line: 2011, column: 7, scope: !3902)
!3902 = distinct !DILexicalBlock(scope: !3898, file: !244, line: 2010, column: 8)
!3903 = !DILocation(line: 2012, column: 3, scope: !3902)
!3904 = !DILocation(line: 2014, column: 10, scope: !3905)
!3905 = distinct !DILexicalBlock(scope: !3895, file: !244, line: 2014, column: 10)
!3906 = !DILocation(line: 2014, column: 13, scope: !3905)
!3907 = !DILocation(line: 2014, column: 24, scope: !3905)
!3908 = !DILocation(line: 2014, column: 37, scope: !3905)
!3909 = !DILocation(line: 2014, column: 31, scope: !3905)
!3910 = !DILocation(line: 2015, column: 3, scope: !3905)
!3911 = !DILocation(line: 2015, column: 6, scope: !3905)
!3912 = !DILocation(line: 2015, column: 9, scope: !3905)
!3913 = !DILocation(line: 2015, column: 20, scope: !3905)
!3914 = !DILocation(line: 2015, column: 33, scope: !3905)
!3915 = !DILocation(line: 2015, column: 27, scope: !3905)
!3916 = !DILocation(line: 2014, column: 10, scope: !3895)
!3917 = !DILocation(line: 2017, column: 3, scope: !3918)
!3918 = distinct !DILexicalBlock(scope: !3905, file: !244, line: 2016, column: 8)
!3919 = !DILocation(line: 2018, column: 7, scope: !3918)
!3920 = !DILocation(line: 2019, column: 3, scope: !3918)
!3921 = !DILocation(line: 2021, column: 4, scope: !3895)
!3922 = !DILocation(line: 2023, column: 6, scope: !3923)
!3923 = distinct !DILexicalBlock(scope: !3808, file: !244, line: 2023, column: 6)
!3924 = !DILocation(line: 2023, column: 6, scope: !3808)
!3925 = !DILocation(line: 2025, column: 22, scope: !3926)
!3926 = distinct !DILexicalBlock(scope: !3923, file: !244, line: 2024, column: 4)
!3927 = !DILocation(line: 2025, column: 26, scope: !3926)
!3928 = !DILocation(line: 2025, column: 35, scope: !3926)
!3929 = !DILocation(line: 2025, column: 33, scope: !3926)
!3930 = !DILocation(line: 2025, column: 6, scope: !3926)
!3931 = !DILocation(line: 2026, column: 6, scope: !3926)
!3932 = !DILocation(line: 2029, column: 15, scope: !3808)
!3933 = !DILocation(line: 2029, column: 8, scope: !3808)
!3934 = !DILocation(line: 2029, column: 6, scope: !3808)
!3935 = !DILocation(line: 2029, column: 2, scope: !3808)
!3936 = !DILocation(line: 2031, column: 6, scope: !3937)
!3937 = distinct !DILexicalBlock(scope: !3808, file: !244, line: 2031, column: 6)
!3938 = !DILocation(line: 2031, column: 9, scope: !3937)
!3939 = !DILocation(line: 2031, column: 6, scope: !3808)
!3940 = !DILocalVariable(name: "oerrno", scope: !3941, file: !244, line: 2033, type: !23)
!3941 = distinct !DILexicalBlock(scope: !3937, file: !244, line: 2032, column: 4)
!3942 = !DILocation(line: 2033, column: 10, scope: !3941)
!3943 = !DILocation(line: 2033, column: 19, scope: !3941)
!3944 = !DILocation(line: 2034, column: 18, scope: !3941)
!3945 = !DILocation(line: 2034, column: 12, scope: !3941)
!3946 = !DILocation(line: 2035, column: 6, scope: !3941)
!3947 = !DILocation(line: 2036, column: 4, scope: !3941)
!3948 = !DILocation(line: 2037, column: 9, scope: !3808)
!3949 = !DILocation(line: 2037, column: 2, scope: !3808)
!3950 = !DILocation(line: 2038, column: 1, scope: !3808)
!3951 = distinct !DISubprogram(name: "fts_build", scope: !244, file: !244, line: 1219, type: !3952, isLocal: true, isDefinition: true, scopeLine: 1220, flags: DIFlagPrototyped, isOptimized: false, unit: !243, variables: !25)
!3952 = !DISubroutineType(types: !3953)
!3953 = !{!2189, !255, !23}
!3954 = !DILocalVariable(name: "sp", arg: 1, scope: !3951, file: !244, line: 1219, type: !255)
!3955 = !DILocation(line: 1219, column: 26, scope: !3951)
!3956 = !DILocalVariable(name: "type", arg: 2, scope: !3951, file: !244, line: 1219, type: !23)
!3957 = !DILocation(line: 1219, column: 34, scope: !3951)
!3958 = !DILocalVariable(name: "dp", scope: !3951, file: !244, line: 1221, type: !3959)
!3959 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3960, size: 64)
!3960 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dirent", file: !3961, line: 22, size: 2240, elements: !3962)
!3961 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/dirent.h", directory: "/home/ma481/Downloads/Chisel/chisel-bench/benchmark/chown-8.2/original/obj-llvm/lib")
!3962 = !{!3963, !3964, !3965, !3966, !3968}
!3963 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino", scope: !3960, file: !3961, line: 25, baseType: !293, size: 64)
!3964 = !DIDerivedType(tag: DW_TAG_member, name: "d_off", scope: !3960, file: !3961, line: 26, baseType: !302, size: 64, offset: 64)
!3965 = !DIDerivedType(tag: DW_TAG_member, name: "d_reclen", scope: !3960, file: !3961, line: 31, baseType: !143, size: 16, offset: 128)
!3966 = !DIDerivedType(tag: DW_TAG_member, name: "d_type", scope: !3960, file: !3961, line: 32, baseType: !3967, size: 8, offset: 144)
!3967 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!3968 = !DIDerivedType(tag: DW_TAG_member, name: "d_name", scope: !3960, file: !3961, line: 33, baseType: !164, size: 2048, offset: 152)
!3969 = !DILocation(line: 1221, column: 26, scope: !3951)
!3970 = !DILocalVariable(name: "p", scope: !3951, file: !244, line: 1222, type: !2189)
!3971 = !DILocation(line: 1222, column: 19, scope: !3951)
!3972 = !DILocalVariable(name: "head", scope: !3951, file: !244, line: 1222, type: !2189)
!3973 = !DILocation(line: 1222, column: 23, scope: !3951)
!3974 = !DILocalVariable(name: "nitems", scope: !3951, file: !244, line: 1223, type: !91)
!3975 = !DILocation(line: 1223, column: 18, scope: !3951)
!3976 = !DILocalVariable(name: "cur", scope: !3951, file: !244, line: 1224, type: !2189)
!3977 = !DILocation(line: 1224, column: 10, scope: !3951)
!3978 = !DILocalVariable(name: "tail", scope: !3951, file: !244, line: 1224, type: !2189)
!3979 = !DILocation(line: 1224, column: 16, scope: !3951)
!3980 = !DILocalVariable(name: "dirp", scope: !3951, file: !244, line: 1225, type: !3981)
!3981 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3982, size: 64)
!3982 = !DIDerivedType(tag: DW_TAG_typedef, name: "DIR", file: !386, line: 127, baseType: !3983)
!3983 = !DICompositeType(tag: DW_TAG_structure_type, name: "__dirstream", file: !386, line: 127, flags: DIFlagFwdDecl)
!3984 = !DILocation(line: 1225, column: 7, scope: !3951)
!3985 = !DILocalVariable(name: "oldaddr", scope: !3951, file: !244, line: 1226, type: !16)
!3986 = !DILocation(line: 1226, column: 8, scope: !3951)
!3987 = !DILocalVariable(name: "saved_errno", scope: !3951, file: !244, line: 1227, type: !23)
!3988 = !DILocation(line: 1227, column: 6, scope: !3951)
!3989 = !DILocalVariable(name: "descend", scope: !3951, file: !244, line: 1228, type: !79)
!3990 = !DILocation(line: 1228, column: 7, scope: !3951)
!3991 = !DILocalVariable(name: "doadjust", scope: !3951, file: !244, line: 1229, type: !79)
!3992 = !DILocation(line: 1229, column: 7, scope: !3951)
!3993 = !DILocalVariable(name: "level", scope: !3951, file: !244, line: 1230, type: !277)
!3994 = !DILocation(line: 1230, column: 12, scope: !3951)
!3995 = !DILocalVariable(name: "nlinks", scope: !3951, file: !244, line: 1231, type: !280)
!3996 = !DILocation(line: 1231, column: 10, scope: !3951)
!3997 = !DILocalVariable(name: "nostat", scope: !3951, file: !244, line: 1232, type: !79)
!3998 = !DILocation(line: 1232, column: 7, scope: !3951)
!3999 = !DILocalVariable(name: "len", scope: !3951, file: !244, line: 1233, type: !91)
!4000 = !DILocation(line: 1233, column: 9, scope: !3951)
!4001 = !DILocalVariable(name: "maxlen", scope: !3951, file: !244, line: 1233, type: !91)
!4002 = !DILocation(line: 1233, column: 14, scope: !3951)
!4003 = !DILocalVariable(name: "new_len", scope: !3951, file: !244, line: 1233, type: !91)
!4004 = !DILocation(line: 1233, column: 22, scope: !3951)
!4005 = !DILocalVariable(name: "cp", scope: !3951, file: !244, line: 1234, type: !15)
!4006 = !DILocation(line: 1234, column: 8, scope: !3951)
!4007 = !DILocation(line: 1237, column: 8, scope: !3951)
!4008 = !DILocation(line: 1237, column: 12, scope: !3951)
!4009 = !DILocation(line: 1237, column: 6, scope: !3951)
!4010 = !DILocation(line: 1254, column: 20, scope: !4011)
!4011 = distinct !DILexicalBlock(scope: !3951, file: !244, line: 1254, column: 12)
!4012 = !DILocation(line: 1254, column: 18, scope: !4011)
!4013 = !DILocation(line: 1254, column: 57, scope: !4011)
!4014 = !DILocation(line: 1254, column: 12, scope: !3951)
!4015 = !DILocation(line: 1255, column: 7, scope: !4016)
!4016 = distinct !DILexicalBlock(scope: !4017, file: !244, line: 1255, column: 7)
!4017 = distinct !DILexicalBlock(scope: !4011, file: !244, line: 1254, column: 66)
!4018 = !DILocation(line: 1255, column: 12, scope: !4016)
!4019 = !DILocation(line: 1255, column: 7, scope: !4017)
!4020 = !DILocation(line: 1256, column: 4, scope: !4021)
!4021 = distinct !DILexicalBlock(scope: !4016, file: !244, line: 1255, column: 22)
!4022 = !DILocation(line: 1256, column: 9, scope: !4021)
!4023 = !DILocation(line: 1256, column: 18, scope: !4021)
!4024 = !DILocation(line: 1257, column: 21, scope: !4021)
!4025 = !DILocation(line: 1257, column: 4, scope: !4021)
!4026 = !DILocation(line: 1257, column: 9, scope: !4021)
!4027 = !DILocation(line: 1257, column: 19, scope: !4021)
!4028 = !DILocation(line: 1258, column: 3, scope: !4021)
!4029 = !DILocation(line: 1259, column: 3, scope: !4017)
!4030 = !DILocation(line: 1264, column: 12, scope: !4031)
!4031 = distinct !DILexicalBlock(scope: !3951, file: !244, line: 1264, column: 12)
!4032 = !DILocation(line: 1264, column: 17, scope: !4031)
!4033 = !DILocation(line: 1264, column: 26, scope: !4031)
!4034 = !DILocation(line: 1264, column: 12, scope: !3951)
!4035 = !DILocation(line: 1265, column: 28, scope: !4031)
!4036 = !DILocation(line: 1265, column: 32, scope: !4031)
!4037 = !DILocation(line: 1265, column: 19, scope: !4031)
!4038 = !DILocation(line: 1265, column: 3, scope: !4031)
!4039 = !DILocation(line: 1265, column: 8, scope: !4031)
!4040 = !DILocation(line: 1265, column: 17, scope: !4031)
!4041 = !DILocation(line: 1266, column: 17, scope: !4042)
!4042 = distinct !DILexicalBlock(scope: !4031, file: !244, line: 1266, column: 17)
!4043 = !DILocation(line: 1266, column: 21, scope: !4042)
!4044 = !DILocation(line: 1266, column: 33, scope: !4042)
!4045 = !DILocation(line: 1266, column: 17, scope: !4031)
!4046 = !DILocation(line: 1273, column: 3, scope: !4047)
!4047 = distinct !DILexicalBlock(scope: !4042, file: !244, line: 1266, column: 58)
!4048 = distinct !{!4048, !4046, !4046}
!4049 = !DILocation(line: 1273, column: 3, scope: !4050)
!4050 = distinct !DILexicalBlock(scope: !4047, file: !244, line: 1273, column: 3)
!4051 = !DILocation(line: 1274, column: 13, scope: !4047)
!4052 = !DILocation(line: 1274, column: 17, scope: !4047)
!4053 = !DILocation(line: 1274, column: 3, scope: !4047)
!4054 = !DILocation(line: 1275, column: 20, scope: !4055)
!4055 = distinct !DILexicalBlock(scope: !4047, file: !244, line: 1275, column: 7)
!4056 = !DILocation(line: 1275, column: 24, scope: !4055)
!4057 = !DILocation(line: 1275, column: 9, scope: !4055)
!4058 = !DILocation(line: 1275, column: 7, scope: !4047)
!4059 = !DILocation(line: 1276, column: 5, scope: !4060)
!4060 = distinct !DILexicalBlock(scope: !4055, file: !244, line: 1275, column: 30)
!4061 = !DILocation(line: 1277, column: 5, scope: !4060)
!4062 = !DILocation(line: 1279, column: 2, scope: !4047)
!4063 = !DILocation(line: 1286, column: 6, scope: !4064)
!4064 = distinct !DILexicalBlock(scope: !3951, file: !244, line: 1286, column: 6)
!4065 = !DILocation(line: 1286, column: 11, scope: !4064)
!4066 = !DILocation(line: 1286, column: 6, scope: !3951)
!4067 = !DILocation(line: 1287, column: 10, scope: !4068)
!4068 = distinct !DILexicalBlock(scope: !4064, file: !244, line: 1286, column: 22)
!4069 = !DILocation(line: 1289, column: 10, scope: !4068)
!4070 = !DILocation(line: 1290, column: 2, scope: !4068)
!4071 = !DILocation(line: 1290, column: 13, scope: !4072)
!4072 = distinct !DILexicalBlock(scope: !4064, file: !244, line: 1290, column: 13)
!4073 = !DILocation(line: 1290, column: 31, scope: !4072)
!4074 = !DILocation(line: 1290, column: 34, scope: !4072)
!4075 = !DILocation(line: 1290, column: 13, scope: !4064)
!4076 = !DILocation(line: 1291, column: 13, scope: !4077)
!4077 = distinct !DILexicalBlock(scope: !4072, file: !244, line: 1290, column: 55)
!4078 = !DILocation(line: 1291, column: 18, scope: !4077)
!4079 = !DILocation(line: 1291, column: 29, scope: !4077)
!4080 = !DILocation(line: 1292, column: 9, scope: !4077)
!4081 = !DILocation(line: 1292, column: 8, scope: !4077)
!4082 = !DILocation(line: 1292, column: 6, scope: !4077)
!4083 = !DILocation(line: 1291, column: 10, scope: !4077)
!4084 = !DILocation(line: 1293, column: 10, scope: !4077)
!4085 = !DILocation(line: 1294, column: 2, scope: !4077)
!4086 = !DILocation(line: 1295, column: 10, scope: !4087)
!4087 = distinct !DILexicalBlock(scope: !4072, file: !244, line: 1294, column: 9)
!4088 = !DILocation(line: 1296, column: 10, scope: !4087)
!4089 = !DILocation(line: 1314, column: 6, scope: !4090)
!4090 = distinct !DILexicalBlock(scope: !3951, file: !244, line: 1314, column: 6)
!4091 = !DILocation(line: 1314, column: 13, scope: !4090)
!4092 = !DILocation(line: 1314, column: 16, scope: !4090)
!4093 = !DILocation(line: 1314, column: 21, scope: !4090)
!4094 = !DILocation(line: 1314, column: 6, scope: !3951)
!4095 = !DILocalVariable(name: "dir_fd", scope: !4096, file: !244, line: 1315, type: !23)
!4096 = distinct !DILexicalBlock(scope: !4090, file: !244, line: 1314, column: 31)
!4097 = !DILocation(line: 1315, column: 7, scope: !4096)
!4098 = !DILocation(line: 1315, column: 22, scope: !4096)
!4099 = !DILocation(line: 1315, column: 16, scope: !4096)
!4100 = !DILocation(line: 1316, column: 7, scope: !4101)
!4101 = distinct !DILexicalBlock(scope: !4096, file: !244, line: 1316, column: 7)
!4102 = !DILocation(line: 1316, column: 24, scope: !4101)
!4103 = !DILocation(line: 1316, column: 32, scope: !4101)
!4104 = !DILocation(line: 1316, column: 29, scope: !4101)
!4105 = !DILocation(line: 1316, column: 7, scope: !4096)
!4106 = !DILocation(line: 1318, column: 21, scope: !4107)
!4107 = distinct !DILexicalBlock(scope: !4101, file: !244, line: 1317, column: 5)
!4108 = !DILocation(line: 1318, column: 16, scope: !4107)
!4109 = !DILocation(line: 1318, column: 14, scope: !4107)
!4110 = !DILocation(line: 1319, column: 25, scope: !4107)
!4111 = !DILocation(line: 1319, column: 7, scope: !4107)
!4112 = !DILocation(line: 1320, column: 5, scope: !4107)
!4113 = !DILocation(line: 1321, column: 7, scope: !4114)
!4114 = distinct !DILexicalBlock(scope: !4096, file: !244, line: 1321, column: 7)
!4115 = !DILocation(line: 1321, column: 14, scope: !4114)
!4116 = !DILocation(line: 1321, column: 18, scope: !4114)
!4117 = !DILocation(line: 1321, column: 40, scope: !4114)
!4118 = !DILocation(line: 1321, column: 44, scope: !4114)
!4119 = !DILocation(line: 1321, column: 49, scope: !4114)
!4120 = !DILocation(line: 1321, column: 21, scope: !4114)
!4121 = !DILocation(line: 1321, column: 7, scope: !4096)
!4122 = !DILocation(line: 1322, column: 8, scope: !4123)
!4123 = distinct !DILexicalBlock(scope: !4124, file: !244, line: 1322, column: 8)
!4124 = distinct !DILexicalBlock(scope: !4114, file: !244, line: 1321, column: 64)
!4125 = !DILocation(line: 1322, column: 15, scope: !4123)
!4126 = !DILocation(line: 1322, column: 18, scope: !4123)
!4127 = !DILocation(line: 1322, column: 23, scope: !4123)
!4128 = !DILocation(line: 1322, column: 8, scope: !4124)
!4129 = !DILocation(line: 1323, column: 22, scope: !4123)
!4130 = !DILocation(line: 1323, column: 5, scope: !4123)
!4131 = !DILocation(line: 1323, column: 10, scope: !4123)
!4132 = !DILocation(line: 1323, column: 20, scope: !4123)
!4133 = !DILocation(line: 1324, column: 4, scope: !4124)
!4134 = !DILocation(line: 1324, column: 9, scope: !4124)
!4135 = !DILocation(line: 1324, column: 19, scope: !4124)
!4136 = !DILocation(line: 1325, column: 12, scope: !4124)
!4137 = !DILocation(line: 1326, column: 13, scope: !4124)
!4138 = !DILocation(line: 1326, column: 4, scope: !4124)
!4139 = !DILocation(line: 1327, column: 8, scope: !4140)
!4140 = distinct !DILexicalBlock(scope: !4124, file: !244, line: 1327, column: 8)
!4141 = !DILocation(line: 1327, column: 25, scope: !4140)
!4142 = !DILocation(line: 1327, column: 33, scope: !4140)
!4143 = !DILocation(line: 1327, column: 30, scope: !4140)
!4144 = !DILocation(line: 1327, column: 8, scope: !4124)
!4145 = !DILocation(line: 1328, column: 12, scope: !4140)
!4146 = !DILocation(line: 1328, column: 5, scope: !4140)
!4147 = !DILocation(line: 1329, column: 9, scope: !4124)
!4148 = !DILocation(line: 1330, column: 3, scope: !4124)
!4149 = !DILocation(line: 1331, column: 12, scope: !4114)
!4150 = !DILocation(line: 1332, column: 2, scope: !4096)
!4151 = !DILocation(line: 1333, column: 11, scope: !4090)
!4152 = !DILocation(line: 1345, column: 8, scope: !3951)
!4153 = !DILocation(line: 1345, column: 6, scope: !3951)
!4154 = !DILocation(line: 1346, column: 6, scope: !4155)
!4155 = distinct !DILexicalBlock(scope: !3951, file: !244, line: 1346, column: 6)
!4156 = !DILocation(line: 1346, column: 6, scope: !3951)
!4157 = !DILocation(line: 1347, column: 8, scope: !4158)
!4158 = distinct !DILexicalBlock(scope: !4155, file: !244, line: 1346, column: 26)
!4159 = !DILocation(line: 1347, column: 12, scope: !4158)
!4160 = !DILocation(line: 1347, column: 23, scope: !4158)
!4161 = !DILocation(line: 1347, column: 21, scope: !4158)
!4162 = !DILocation(line: 1347, column: 6, scope: !4158)
!4163 = !DILocation(line: 1348, column: 6, scope: !4158)
!4164 = !DILocation(line: 1348, column: 9, scope: !4158)
!4165 = !DILocation(line: 1349, column: 2, scope: !4158)
!4166 = !DILocation(line: 1351, column: 6, scope: !4167)
!4167 = distinct !DILexicalBlock(scope: !4155, file: !244, line: 1349, column: 9)
!4168 = !DILocation(line: 1353, column: 5, scope: !3951)
!4169 = !DILocation(line: 1354, column: 11, scope: !3951)
!4170 = !DILocation(line: 1354, column: 15, scope: !3951)
!4171 = !DILocation(line: 1354, column: 29, scope: !3951)
!4172 = !DILocation(line: 1354, column: 27, scope: !3951)
!4173 = !DILocation(line: 1354, column: 9, scope: !3951)
!4174 = !DILocation(line: 1356, column: 10, scope: !3951)
!4175 = !DILocation(line: 1356, column: 15, scope: !3951)
!4176 = !DILocation(line: 1356, column: 25, scope: !3951)
!4177 = !DILocation(line: 1356, column: 8, scope: !3951)
!4178 = !DILocation(line: 1359, column: 11, scope: !3951)
!4179 = !DILocation(line: 1360, column: 19, scope: !4180)
!4180 = distinct !DILexicalBlock(scope: !3951, file: !244, line: 1360, column: 2)
!4181 = !DILocation(line: 1360, column: 12, scope: !4180)
!4182 = !DILocation(line: 1360, column: 34, scope: !4180)
!4183 = !DILocation(line: 1360, column: 7, scope: !4180)
!4184 = !DILocation(line: 1360, column: 39, scope: !4185)
!4185 = distinct !DILexicalBlock(scope: !4180, file: !244, line: 1360, column: 2)
!4186 = !DILocation(line: 1360, column: 44, scope: !4185)
!4187 = !DILocation(line: 1360, column: 61, scope: !4185)
!4188 = !DILocation(line: 1360, column: 53, scope: !4185)
!4189 = !DILocation(line: 1360, column: 51, scope: !4185)
!4190 = !DILocation(line: 1360, column: 2, scope: !4180)
!4191 = !DILocalVariable(name: "is_dir", scope: !4192, file: !244, line: 1361, type: !79)
!4192 = distinct !DILexicalBlock(scope: !4185, file: !244, line: 1360, column: 70)
!4193 = !DILocation(line: 1361, column: 8, scope: !4192)
!4194 = !DILocation(line: 1363, column: 8, scope: !4195)
!4195 = distinct !DILexicalBlock(scope: !4192, file: !244, line: 1363, column: 7)
!4196 = !DILocation(line: 1363, column: 26, scope: !4195)
!4197 = !DILocation(line: 1363, column: 29, scope: !4195)
!4198 = !DILocation(line: 1363, column: 7, scope: !4192)
!4199 = !DILocation(line: 1364, column: 4, scope: !4195)
!4200 = distinct !{!4200, !4190, !4201}
!4201 = !DILocation(line: 1475, column: 2, scope: !4180)
!4202 = !DILocation(line: 1366, column: 23, scope: !4203)
!4203 = distinct !DILexicalBlock(scope: !4192, file: !244, line: 1366, column: 7)
!4204 = !DILocation(line: 1366, column: 27, scope: !4203)
!4205 = !DILocation(line: 1366, column: 31, scope: !4203)
!4206 = !DILocation(line: 1367, column: 9, scope: !4203)
!4207 = !DILocation(line: 1366, column: 12, scope: !4203)
!4208 = !DILocation(line: 1366, column: 10, scope: !4203)
!4209 = !DILocation(line: 1367, column: 32, scope: !4203)
!4210 = !DILocation(line: 1366, column: 7, scope: !4192)
!4211 = !DILocation(line: 1368, column: 4, scope: !4203)
!4212 = !DILocation(line: 1369, column: 7, scope: !4213)
!4213 = distinct !DILexicalBlock(scope: !4192, file: !244, line: 1369, column: 7)
!4214 = !DILocation(line: 1369, column: 31, scope: !4213)
!4215 = !DILocation(line: 1369, column: 28, scope: !4213)
!4216 = !DILocation(line: 1369, column: 7, scope: !4192)
!4217 = !DILocation(line: 1371, column: 14, scope: !4218)
!4218 = distinct !DILexicalBlock(scope: !4213, file: !244, line: 1369, column: 39)
!4219 = !DILocation(line: 1371, column: 18, scope: !4218)
!4220 = !DILocation(line: 1371, column: 12, scope: !4218)
!4221 = !DILocation(line: 1372, column: 21, scope: !4222)
!4222 = distinct !DILexicalBlock(scope: !4218, file: !244, line: 1372, column: 8)
!4223 = !DILocation(line: 1372, column: 25, scope: !4222)
!4224 = !DILocation(line: 1372, column: 48, scope: !4222)
!4225 = !DILocation(line: 1372, column: 46, scope: !4222)
!4226 = !DILocation(line: 1372, column: 52, scope: !4222)
!4227 = !DILocation(line: 1372, column: 10, scope: !4222)
!4228 = !DILocation(line: 1372, column: 8, scope: !4218)
!4229 = !DILocation(line: 1372, column: 58, scope: !4222)
!4230 = !DILocation(line: 1378, column: 24, scope: !4231)
!4231 = distinct !DILexicalBlock(scope: !4222, file: !244, line: 1372, column: 58)
!4232 = !DILocation(line: 1378, column: 22, scope: !4231)
!4233 = !DILocation(line: 1379, column: 10, scope: !4231)
!4234 = !DILocation(line: 1379, column: 5, scope: !4231)
!4235 = !DILocation(line: 1380, column: 15, scope: !4231)
!4236 = !DILocation(line: 1380, column: 5, scope: !4231)
!4237 = !DILocation(line: 1381, column: 14, scope: !4231)
!4238 = !DILocation(line: 1381, column: 5, scope: !4231)
!4239 = !DILocation(line: 1382, column: 5, scope: !4231)
!4240 = !DILocation(line: 1382, column: 10, scope: !4231)
!4241 = !DILocation(line: 1382, column: 19, scope: !4231)
!4242 = !DILocation(line: 1383, column: 5, scope: !4231)
!4243 = !DILocation(line: 1384, column: 5, scope: !4231)
!4244 = !DILocation(line: 1385, column: 5, scope: !4231)
!4245 = !DILocation(line: 1388, column: 8, scope: !4246)
!4246 = distinct !DILexicalBlock(scope: !4218, file: !244, line: 1388, column: 8)
!4247 = !DILocation(line: 1388, column: 19, scope: !4246)
!4248 = !DILocation(line: 1388, column: 23, scope: !4246)
!4249 = !DILocation(line: 1388, column: 16, scope: !4246)
!4250 = !DILocation(line: 1388, column: 8, scope: !4218)
!4251 = !DILocation(line: 1389, column: 14, scope: !4252)
!4252 = distinct !DILexicalBlock(scope: !4246, file: !244, line: 1388, column: 33)
!4253 = !DILocation(line: 1390, column: 9, scope: !4254)
!4254 = distinct !DILexicalBlock(scope: !4252, file: !244, line: 1390, column: 9)
!4255 = !DILocation(line: 1390, column: 9, scope: !4252)
!4256 = !DILocation(line: 1391, column: 11, scope: !4254)
!4257 = !DILocation(line: 1391, column: 15, scope: !4254)
!4258 = !DILocation(line: 1391, column: 26, scope: !4254)
!4259 = !DILocation(line: 1391, column: 24, scope: !4254)
!4260 = !DILocation(line: 1391, column: 9, scope: !4254)
!4261 = !DILocation(line: 1391, column: 6, scope: !4254)
!4262 = !DILocation(line: 1392, column: 4, scope: !4252)
!4263 = !DILocation(line: 1393, column: 13, scope: !4218)
!4264 = !DILocation(line: 1393, column: 17, scope: !4218)
!4265 = !DILocation(line: 1393, column: 31, scope: !4218)
!4266 = !DILocation(line: 1393, column: 29, scope: !4218)
!4267 = !DILocation(line: 1393, column: 11, scope: !4218)
!4268 = !DILocation(line: 1394, column: 3, scope: !4218)
!4269 = !DILocation(line: 1396, column: 13, scope: !4192)
!4270 = !DILocation(line: 1396, column: 19, scope: !4192)
!4271 = !DILocation(line: 1396, column: 17, scope: !4192)
!4272 = !DILocation(line: 1396, column: 11, scope: !4192)
!4273 = !DILocation(line: 1397, column: 7, scope: !4274)
!4274 = distinct !DILexicalBlock(scope: !4192, file: !244, line: 1397, column: 7)
!4275 = !DILocation(line: 1397, column: 17, scope: !4274)
!4276 = !DILocation(line: 1397, column: 15, scope: !4274)
!4277 = !DILocation(line: 1397, column: 7, scope: !4192)
!4278 = !DILocation(line: 1404, column: 9, scope: !4279)
!4279 = distinct !DILexicalBlock(scope: !4274, file: !244, line: 1397, column: 22)
!4280 = !DILocation(line: 1404, column: 4, scope: !4279)
!4281 = !DILocation(line: 1405, column: 14, scope: !4279)
!4282 = !DILocation(line: 1405, column: 4, scope: !4279)
!4283 = !DILocation(line: 1406, column: 13, scope: !4279)
!4284 = !DILocation(line: 1406, column: 4, scope: !4279)
!4285 = !DILocation(line: 1407, column: 4, scope: !4279)
!4286 = !DILocation(line: 1407, column: 9, scope: !4279)
!4287 = !DILocation(line: 1407, column: 18, scope: !4279)
!4288 = !DILocation(line: 1408, column: 4, scope: !4279)
!4289 = !DILocation(line: 1409, column: 4, scope: !4279)
!4290 = !DILocation(line: 1410, column: 4, scope: !4279)
!4291 = !DILocation(line: 1412, column: 18, scope: !4192)
!4292 = !DILocation(line: 1412, column: 3, scope: !4192)
!4293 = !DILocation(line: 1412, column: 6, scope: !4192)
!4294 = !DILocation(line: 1412, column: 16, scope: !4192)
!4295 = !DILocation(line: 1413, column: 19, scope: !4192)
!4296 = !DILocation(line: 1413, column: 23, scope: !4192)
!4297 = !DILocation(line: 1413, column: 3, scope: !4192)
!4298 = !DILocation(line: 1413, column: 6, scope: !4192)
!4299 = !DILocation(line: 1413, column: 17, scope: !4192)
!4300 = !DILocation(line: 1414, column: 20, scope: !4192)
!4301 = !DILocation(line: 1414, column: 3, scope: !4192)
!4302 = !DILocation(line: 1414, column: 6, scope: !4192)
!4303 = !DILocation(line: 1414, column: 18, scope: !4192)
!4304 = !DILocation(line: 1422, column: 26, scope: !4192)
!4305 = !DILocation(line: 1422, column: 3, scope: !4192)
!4306 = !DILocation(line: 1422, column: 6, scope: !4192)
!4307 = !DILocation(line: 1422, column: 17, scope: !4192)
!4308 = !DILocation(line: 1422, column: 24, scope: !4192)
!4309 = !DILocation(line: 1425, column: 7, scope: !4310)
!4310 = distinct !DILexicalBlock(scope: !4192, file: !244, line: 1425, column: 7)
!4311 = !DILocation(line: 1425, column: 7, scope: !4192)
!4312 = !DILocation(line: 1426, column: 21, scope: !4313)
!4313 = distinct !DILexicalBlock(scope: !4310, file: !244, line: 1425, column: 27)
!4314 = !DILocation(line: 1426, column: 24, scope: !4313)
!4315 = !DILocation(line: 1426, column: 4, scope: !4313)
!4316 = !DILocation(line: 1426, column: 7, scope: !4313)
!4317 = !DILocation(line: 1426, column: 19, scope: !4313)
!4318 = !DILocation(line: 1427, column: 12, scope: !4313)
!4319 = !DILocation(line: 1427, column: 16, scope: !4313)
!4320 = !DILocation(line: 1427, column: 19, scope: !4313)
!4321 = !DILocation(line: 1427, column: 4, scope: !4313)
!4322 = !DILocation(line: 1427, column: 29, scope: !4313)
!4323 = !DILocation(line: 1427, column: 32, scope: !4313)
!4324 = !DILocation(line: 1427, column: 44, scope: !4313)
!4325 = !DILocation(line: 1428, column: 3, scope: !4313)
!4326 = !DILocation(line: 1429, column: 21, scope: !4310)
!4327 = !DILocation(line: 1429, column: 24, scope: !4310)
!4328 = !DILocation(line: 1429, column: 4, scope: !4310)
!4329 = !DILocation(line: 1429, column: 7, scope: !4310)
!4330 = !DILocation(line: 1429, column: 19, scope: !4310)
!4331 = !DILocation(line: 1431, column: 7, scope: !4332)
!4332 = distinct !DILexicalBlock(scope: !4192, file: !244, line: 1431, column: 7)
!4333 = !DILocation(line: 1431, column: 11, scope: !4332)
!4334 = !DILocation(line: 1431, column: 22, scope: !4332)
!4335 = !DILocation(line: 1431, column: 30, scope: !4332)
!4336 = !DILocation(line: 1431, column: 33, scope: !4332)
!4337 = !DILocation(line: 1431, column: 7, scope: !4192)
!4338 = !DILocalVariable(name: "skip_stat", scope: !4339, file: !244, line: 1444, type: !79)
!4339 = distinct !DILexicalBlock(scope: !4332, file: !244, line: 1431, column: 56)
!4340 = !DILocation(line: 1444, column: 9, scope: !4339)
!4341 = !DILocation(line: 1444, column: 22, scope: !4339)
!4342 = !DILocation(line: 1445, column: 8, scope: !4339)
!4343 = !DILocation(line: 1445, column: 11, scope: !4339)
!4344 = !DILocation(line: 1446, column: 8, scope: !4339)
!4345 = !DILocation(line: 1446, column: 11, scope: !4339)
!4346 = !DILocation(line: 1447, column: 8, scope: !4339)
!4347 = !DILocation(line: 1447, column: 13, scope: !4339)
!4348 = !DILocation(line: 1447, column: 11, scope: !4339)
!4349 = !DILocation(line: 1448, column: 4, scope: !4339)
!4350 = !DILocation(line: 1448, column: 7, scope: !4339)
!4351 = !DILocation(line: 1448, column: 16, scope: !4339)
!4352 = !DILocation(line: 1451, column: 19, scope: !4339)
!4353 = !DILocation(line: 1451, column: 22, scope: !4339)
!4354 = !DILocation(line: 1451, column: 33, scope: !4339)
!4355 = !DILocation(line: 1451, column: 4, scope: !4339)
!4356 = !DILocation(line: 1452, column: 26, scope: !4339)
!4357 = !DILocation(line: 1452, column: 30, scope: !4339)
!4358 = !DILocation(line: 1452, column: 29, scope: !4339)
!4359 = !DILocation(line: 1452, column: 4, scope: !4339)
!4360 = !DILocation(line: 1453, column: 14, scope: !4339)
!4361 = !DILocation(line: 1454, column: 7, scope: !4339)
!4362 = !DILocation(line: 1454, column: 10, scope: !4339)
!4363 = !DILocation(line: 1453, column: 11, scope: !4339)
!4364 = !DILocation(line: 1455, column: 3, scope: !4339)
!4365 = !DILocation(line: 1456, column: 27, scope: !4366)
!4366 = distinct !DILexicalBlock(scope: !4332, file: !244, line: 1455, column: 10)
!4367 = !DILocation(line: 1456, column: 31, scope: !4366)
!4368 = !DILocation(line: 1456, column: 18, scope: !4366)
!4369 = !DILocation(line: 1456, column: 4, scope: !4366)
!4370 = !DILocation(line: 1456, column: 7, scope: !4366)
!4371 = !DILocation(line: 1456, column: 16, scope: !4366)
!4372 = !DILocation(line: 1457, column: 14, scope: !4366)
!4373 = !DILocation(line: 1457, column: 17, scope: !4366)
!4374 = !DILocation(line: 1457, column: 26, scope: !4366)
!4375 = !DILocation(line: 1458, column: 7, scope: !4366)
!4376 = !DILocation(line: 1458, column: 10, scope: !4366)
!4377 = !DILocation(line: 1458, column: 13, scope: !4366)
!4378 = !DILocation(line: 1458, column: 22, scope: !4366)
!4379 = !DILocation(line: 1459, column: 7, scope: !4366)
!4380 = !DILocation(line: 1459, column: 10, scope: !4366)
!4381 = !DILocation(line: 1459, column: 13, scope: !4366)
!4382 = !DILocation(line: 1459, column: 22, scope: !4366)
!4383 = !DILocation(line: 1457, column: 11, scope: !4366)
!4384 = !DILocation(line: 1463, column: 7, scope: !4385)
!4385 = distinct !DILexicalBlock(scope: !4192, file: !244, line: 1463, column: 7)
!4386 = !DILocation(line: 1463, column: 14, scope: !4385)
!4387 = !DILocation(line: 1463, column: 18, scope: !4385)
!4388 = !DILocation(line: 1463, column: 21, scope: !4385)
!4389 = !DILocation(line: 1463, column: 7, scope: !4192)
!4390 = !DILocation(line: 1464, column: 14, scope: !4385)
!4391 = !DILocation(line: 1464, column: 11, scope: !4385)
!4392 = !DILocation(line: 1464, column: 4, scope: !4385)
!4393 = !DILocation(line: 1467, column: 3, scope: !4192)
!4394 = !DILocation(line: 1467, column: 6, scope: !4192)
!4395 = !DILocation(line: 1467, column: 15, scope: !4192)
!4396 = !DILocation(line: 1468, column: 7, scope: !4397)
!4397 = distinct !DILexicalBlock(scope: !4192, file: !244, line: 1468, column: 7)
!4398 = !DILocation(line: 1468, column: 12, scope: !4397)
!4399 = !DILocation(line: 1468, column: 7, scope: !4192)
!4400 = !DILocation(line: 1469, column: 18, scope: !4397)
!4401 = !DILocation(line: 1469, column: 16, scope: !4397)
!4402 = !DILocation(line: 1469, column: 9, scope: !4397)
!4403 = !DILocation(line: 1469, column: 4, scope: !4397)
!4404 = !DILocation(line: 1471, column: 21, scope: !4405)
!4405 = distinct !DILexicalBlock(scope: !4397, file: !244, line: 1470, column: 8)
!4406 = !DILocation(line: 1471, column: 4, scope: !4405)
!4407 = !DILocation(line: 1471, column: 10, scope: !4405)
!4408 = !DILocation(line: 1471, column: 19, scope: !4405)
!4409 = !DILocation(line: 1472, column: 11, scope: !4405)
!4410 = !DILocation(line: 1472, column: 9, scope: !4405)
!4411 = !DILocation(line: 1474, column: 3, scope: !4192)
!4412 = !DILocation(line: 1360, column: 2, scope: !4185)
!4413 = !DILocation(line: 1476, column: 6, scope: !4414)
!4414 = distinct !DILexicalBlock(scope: !3951, file: !244, line: 1476, column: 6)
!4415 = !DILocation(line: 1476, column: 6, scope: !3951)
!4416 = !DILocation(line: 1477, column: 12, scope: !4414)
!4417 = !DILocation(line: 1477, column: 3, scope: !4414)
!4418 = !DILocation(line: 1483, column: 6, scope: !4419)
!4419 = distinct !DILexicalBlock(scope: !3951, file: !244, line: 1483, column: 6)
!4420 = !DILocation(line: 1483, column: 6, scope: !3951)
!4421 = !DILocation(line: 1484, column: 15, scope: !4419)
!4422 = !DILocation(line: 1484, column: 19, scope: !4419)
!4423 = !DILocation(line: 1484, column: 3, scope: !4419)
!4424 = !DILocation(line: 1490, column: 6, scope: !4425)
!4425 = distinct !DILexicalBlock(scope: !3951, file: !244, line: 1490, column: 6)
!4426 = !DILocation(line: 1490, column: 6, scope: !3951)
!4427 = !DILocation(line: 1491, column: 7, scope: !4428)
!4428 = distinct !DILexicalBlock(scope: !4429, file: !244, line: 1491, column: 7)
!4429 = distinct !DILexicalBlock(scope: !4425, file: !244, line: 1490, column: 26)
!4430 = !DILocation(line: 1491, column: 14, scope: !4428)
!4431 = !DILocation(line: 1491, column: 18, scope: !4428)
!4432 = !DILocation(line: 1491, column: 11, scope: !4428)
!4433 = !DILocation(line: 1491, column: 30, scope: !4428)
!4434 = !DILocation(line: 1491, column: 33, scope: !4428)
!4435 = !DILocation(line: 1491, column: 40, scope: !4428)
!4436 = !DILocation(line: 1491, column: 7, scope: !4429)
!4437 = !DILocation(line: 1492, column: 4, scope: !4428)
!4438 = !DILocation(line: 1493, column: 4, scope: !4429)
!4439 = !DILocation(line: 1493, column: 7, scope: !4429)
!4440 = !DILocation(line: 1494, column: 2, scope: !4429)
!4441 = !DILocation(line: 1503, column: 6, scope: !4442)
!4442 = distinct !DILexicalBlock(scope: !3951, file: !244, line: 1503, column: 6)
!4443 = !DILocation(line: 1503, column: 14, scope: !4442)
!4444 = !DILocation(line: 1503, column: 18, scope: !4442)
!4445 = !DILocation(line: 1503, column: 23, scope: !4442)
!4446 = !DILocation(line: 1503, column: 33, scope: !4442)
!4447 = !DILocation(line: 1503, column: 37, scope: !4442)
!4448 = !DILocation(line: 1503, column: 45, scope: !4442)
!4449 = !DILocation(line: 1504, column: 7, scope: !4442)
!4450 = !DILocation(line: 1504, column: 12, scope: !4442)
!4451 = !DILocation(line: 1504, column: 22, scope: !4442)
!4452 = !DILocation(line: 1503, column: 6, scope: !3951)
!4453 = !DILocation(line: 1505, column: 9, scope: !4442)
!4454 = !DILocation(line: 1506, column: 28, scope: !4442)
!4455 = !DILocation(line: 1506, column: 32, scope: !4442)
!4456 = !DILocation(line: 1506, column: 37, scope: !4442)
!4457 = !DILocation(line: 1506, column: 9, scope: !4442)
!4458 = !DILocation(line: 1507, column: 3, scope: !4459)
!4459 = distinct !DILexicalBlock(scope: !4442, file: !244, line: 1506, column: 61)
!4460 = !DILocation(line: 1507, column: 8, scope: !4459)
!4461 = !DILocation(line: 1507, column: 17, scope: !4459)
!4462 = !DILocation(line: 1508, column: 3, scope: !4459)
!4463 = !DILocation(line: 1509, column: 13, scope: !4459)
!4464 = !DILocation(line: 1509, column: 3, scope: !4459)
!4465 = !DILocation(line: 1510, column: 3, scope: !4459)
!4466 = !DILocation(line: 1514, column: 7, scope: !4467)
!4467 = distinct !DILexicalBlock(scope: !3951, file: !244, line: 1514, column: 6)
!4468 = !DILocation(line: 1514, column: 6, scope: !3951)
!4469 = !DILocation(line: 1515, column: 7, scope: !4470)
!4470 = distinct !DILexicalBlock(scope: !4471, file: !244, line: 1515, column: 7)
!4471 = distinct !DILexicalBlock(scope: !4467, file: !244, line: 1514, column: 15)
!4472 = !DILocation(line: 1515, column: 12, scope: !4470)
!4473 = !DILocation(line: 1515, column: 7, scope: !4471)
!4474 = !DILocation(line: 1516, column: 4, scope: !4470)
!4475 = !DILocation(line: 1516, column: 9, scope: !4470)
!4476 = !DILocation(line: 1516, column: 18, scope: !4470)
!4477 = !DILocation(line: 1517, column: 13, scope: !4471)
!4478 = !DILocation(line: 1517, column: 3, scope: !4471)
!4479 = !DILocation(line: 1518, column: 3, scope: !4471)
!4480 = !DILocation(line: 1525, column: 6, scope: !4481)
!4481 = distinct !DILexicalBlock(scope: !3951, file: !244, line: 1525, column: 6)
!4482 = !DILocation(line: 1525, column: 13, scope: !4481)
!4483 = !DILocation(line: 1526, column: 6, scope: !4481)
!4484 = !DILocation(line: 1526, column: 10, scope: !4481)
!4485 = !DILocation(line: 1526, column: 14, scope: !4481)
!4486 = !DILocation(line: 1527, column: 6, scope: !4481)
!4487 = !DILocation(line: 1527, column: 9, scope: !4481)
!4488 = !DILocation(line: 1528, column: 6, scope: !4481)
!4489 = !DILocation(line: 1528, column: 42, scope: !4481)
!4490 = !DILocation(line: 1528, column: 46, scope: !4481)
!4491 = !DILocation(line: 1528, column: 9, scope: !4481)
!4492 = !DILocation(line: 1525, column: 6, scope: !3951)
!4493 = !DILocation(line: 1529, column: 3, scope: !4494)
!4494 = distinct !DILexicalBlock(scope: !4481, file: !244, line: 1528, column: 59)
!4495 = !DILocation(line: 1529, column: 7, scope: !4494)
!4496 = !DILocation(line: 1529, column: 18, scope: !4494)
!4497 = !DILocation(line: 1530, column: 20, scope: !4494)
!4498 = !DILocation(line: 1530, column: 24, scope: !4494)
!4499 = !DILocation(line: 1530, column: 30, scope: !4494)
!4500 = !DILocation(line: 1530, column: 10, scope: !4494)
!4501 = !DILocation(line: 1530, column: 8, scope: !4494)
!4502 = !DILocation(line: 1531, column: 3, scope: !4494)
!4503 = !DILocation(line: 1531, column: 7, scope: !4494)
!4504 = !DILocation(line: 1531, column: 18, scope: !4494)
!4505 = !DILocation(line: 1532, column: 2, scope: !4494)
!4506 = !DILocation(line: 1535, column: 6, scope: !4507)
!4507 = distinct !DILexicalBlock(scope: !3951, file: !244, line: 1535, column: 6)
!4508 = !DILocation(line: 1535, column: 10, scope: !4507)
!4509 = !DILocation(line: 1535, column: 21, scope: !4507)
!4510 = !DILocation(line: 1535, column: 24, scope: !4507)
!4511 = !DILocation(line: 1535, column: 31, scope: !4507)
!4512 = !DILocation(line: 1535, column: 6, scope: !3951)
!4513 = !DILocation(line: 1536, column: 19, scope: !4507)
!4514 = !DILocation(line: 1536, column: 23, scope: !4507)
!4515 = !DILocation(line: 1536, column: 29, scope: !4507)
!4516 = !DILocation(line: 1536, column: 10, scope: !4507)
!4517 = !DILocation(line: 1536, column: 8, scope: !4507)
!4518 = !DILocation(line: 1536, column: 3, scope: !4507)
!4519 = !DILocation(line: 1537, column: 10, scope: !3951)
!4520 = !DILocation(line: 1537, column: 2, scope: !3951)
!4521 = !DILocation(line: 1538, column: 1, scope: !3951)
!4522 = distinct !DISubprogram(name: "cwd_advance_fd", scope: !244, file: !244, line: 326, type: !4523, isLocal: true, isDefinition: true, scopeLine: 327, flags: DIFlagPrototyped, isOptimized: false, unit: !243, variables: !25)
!4523 = !DISubroutineType(types: !4524)
!4524 = !{null, !255, !23, !79}
!4525 = !DILocalVariable(name: "sp", arg: 1, scope: !4522, file: !244, line: 326, type: !255)
!4526 = !DILocation(line: 326, column: 22, scope: !4522)
!4527 = !DILocalVariable(name: "fd", arg: 2, scope: !4522, file: !244, line: 326, type: !23)
!4528 = !DILocation(line: 326, column: 30, scope: !4522)
!4529 = !DILocalVariable(name: "chdir_down_one", arg: 3, scope: !4522, file: !244, line: 326, type: !79)
!4530 = !DILocation(line: 326, column: 39, scope: !4522)
!4531 = !DILocalVariable(name: "old", scope: !4522, file: !244, line: 328, type: !23)
!4532 = !DILocation(line: 328, column: 7, scope: !4522)
!4533 = !DILocation(line: 328, column: 13, scope: !4522)
!4534 = !DILocation(line: 328, column: 17, scope: !4522)
!4535 = !DILocation(line: 329, column: 3, scope: !4522)
!4536 = distinct !{!4536, !4535, !4535}
!4537 = !DILocation(line: 329, column: 3, scope: !4538)
!4538 = distinct !DILexicalBlock(scope: !4539, file: !244, line: 329, column: 3)
!4539 = distinct !DILexicalBlock(scope: !4522, file: !244, line: 329, column: 3)
!4540 = !DILocation(line: 329, column: 3, scope: !4539)
!4541 = !DILocation(line: 331, column: 7, scope: !4542)
!4542 = distinct !DILexicalBlock(scope: !4522, file: !244, line: 331, column: 7)
!4543 = !DILocation(line: 331, column: 7, scope: !4522)
!4544 = !DILocalVariable(name: "prev_fd_in_slot", scope: !4545, file: !244, line: 335, type: !23)
!4545 = distinct !DILexicalBlock(scope: !4542, file: !244, line: 332, column: 5)
!4546 = !DILocation(line: 335, column: 11, scope: !4545)
!4547 = !DILocation(line: 335, column: 43, scope: !4545)
!4548 = !DILocation(line: 335, column: 47, scope: !4545)
!4549 = !DILocation(line: 335, column: 60, scope: !4545)
!4550 = !DILocation(line: 335, column: 29, scope: !4545)
!4551 = !DILocation(line: 337, column: 16, scope: !4552)
!4552 = distinct !DILexicalBlock(scope: !4545, file: !244, line: 337, column: 11)
!4553 = !DILocation(line: 337, column: 13, scope: !4552)
!4554 = !DILocation(line: 337, column: 11, scope: !4545)
!4555 = !DILocation(line: 338, column: 9, scope: !4552)
!4556 = !DILocation(line: 338, column: 2, scope: !4552)
!4557 = !DILocation(line: 339, column: 5, scope: !4545)
!4558 = !DILocation(line: 340, column: 15, scope: !4559)
!4559 = distinct !DILexicalBlock(scope: !4542, file: !244, line: 340, column: 13)
!4560 = !DILocation(line: 340, column: 13, scope: !4542)
!4561 = !DILocation(line: 342, column: 16, scope: !4562)
!4562 = distinct !DILexicalBlock(scope: !4563, file: !244, line: 342, column: 11)
!4563 = distinct !DILexicalBlock(scope: !4559, file: !244, line: 341, column: 5)
!4564 = !DILocation(line: 342, column: 13, scope: !4562)
!4565 = !DILocation(line: 342, column: 11, scope: !4563)
!4566 = !DILocation(line: 343, column: 9, scope: !4562)
!4567 = !DILocation(line: 343, column: 2, scope: !4562)
!4568 = !DILocation(line: 344, column: 5, scope: !4563)
!4569 = !DILocation(line: 346, column: 20, scope: !4522)
!4570 = !DILocation(line: 346, column: 3, scope: !4522)
!4571 = !DILocation(line: 346, column: 7, scope: !4522)
!4572 = !DILocation(line: 346, column: 18, scope: !4522)
!4573 = !DILocation(line: 347, column: 1, scope: !4522)
!4574 = distinct !DISubprogram(name: "fts_load", scope: !244, file: !244, line: 548, type: !3741, isLocal: true, isDefinition: true, scopeLine: 549, flags: DIFlagPrototyped, isOptimized: false, unit: !243, variables: !25)
!4575 = !DILocalVariable(name: "sp", arg: 1, scope: !4574, file: !244, line: 548, type: !255)
!4576 = !DILocation(line: 548, column: 16, scope: !4574)
!4577 = !DILocalVariable(name: "p", arg: 2, scope: !4574, file: !244, line: 548, type: !2189)
!4578 = !DILocation(line: 548, column: 37, scope: !4574)
!4579 = !DILocalVariable(name: "len", scope: !4574, file: !244, line: 550, type: !91)
!4580 = !DILocation(line: 550, column: 18, scope: !4574)
!4581 = !DILocalVariable(name: "cp", scope: !4574, file: !244, line: 551, type: !15)
!4582 = !DILocation(line: 551, column: 17, scope: !4574)
!4583 = !DILocation(line: 560, column: 25, scope: !4574)
!4584 = !DILocation(line: 560, column: 28, scope: !4574)
!4585 = !DILocation(line: 560, column: 8, scope: !4574)
!4586 = !DILocation(line: 560, column: 11, scope: !4574)
!4587 = !DILocation(line: 560, column: 23, scope: !4574)
!4588 = !DILocation(line: 560, column: 6, scope: !4574)
!4589 = !DILocation(line: 561, column: 10, scope: !4574)
!4590 = !DILocation(line: 561, column: 14, scope: !4574)
!4591 = !DILocation(line: 561, column: 24, scope: !4574)
!4592 = !DILocation(line: 561, column: 27, scope: !4574)
!4593 = !DILocation(line: 561, column: 2, scope: !4574)
!4594 = !DILocation(line: 561, column: 37, scope: !4574)
!4595 = !DILocation(line: 561, column: 41, scope: !4574)
!4596 = !DILocation(line: 562, column: 20, scope: !4597)
!4597 = distinct !DILexicalBlock(scope: !4574, file: !244, line: 562, column: 6)
!4598 = !DILocation(line: 562, column: 23, scope: !4597)
!4599 = !DILocation(line: 562, column: 12, scope: !4597)
!4600 = !DILocation(line: 562, column: 10, scope: !4597)
!4601 = !DILocation(line: 562, column: 39, scope: !4597)
!4602 = !DILocation(line: 562, column: 43, scope: !4597)
!4603 = !DILocation(line: 562, column: 49, scope: !4597)
!4604 = !DILocation(line: 562, column: 52, scope: !4597)
!4605 = !DILocation(line: 562, column: 46, scope: !4597)
!4606 = !DILocation(line: 562, column: 61, scope: !4597)
!4607 = !DILocation(line: 562, column: 64, scope: !4597)
!4608 = !DILocation(line: 562, column: 6, scope: !4574)
!4609 = !DILocation(line: 563, column: 16, scope: !4610)
!4610 = distinct !DILexicalBlock(scope: !4597, file: !244, line: 562, column: 72)
!4611 = !DILocation(line: 563, column: 9, scope: !4610)
!4612 = !DILocation(line: 563, column: 7, scope: !4610)
!4613 = !DILocation(line: 564, column: 11, scope: !4610)
!4614 = !DILocation(line: 564, column: 14, scope: !4610)
!4615 = !DILocation(line: 564, column: 3, scope: !4610)
!4616 = !DILocation(line: 564, column: 24, scope: !4610)
!4617 = !DILocation(line: 564, column: 28, scope: !4610)
!4618 = !DILocation(line: 564, column: 32, scope: !4610)
!4619 = !DILocation(line: 565, column: 20, scope: !4610)
!4620 = !DILocation(line: 565, column: 3, scope: !4610)
!4621 = !DILocation(line: 565, column: 6, scope: !4610)
!4622 = !DILocation(line: 565, column: 18, scope: !4610)
!4623 = !DILocation(line: 566, column: 2, scope: !4610)
!4624 = !DILocation(line: 567, column: 33, scope: !4574)
!4625 = !DILocation(line: 567, column: 37, scope: !4574)
!4626 = !DILocation(line: 567, column: 19, scope: !4574)
!4627 = !DILocation(line: 567, column: 22, scope: !4574)
!4628 = !DILocation(line: 567, column: 31, scope: !4574)
!4629 = !DILocation(line: 567, column: 2, scope: !4574)
!4630 = !DILocation(line: 567, column: 5, scope: !4574)
!4631 = !DILocation(line: 567, column: 17, scope: !4574)
!4632 = !DILocation(line: 568, column: 1, scope: !4574)
!4633 = distinct !DISubprogram(name: "link_count_optimize_ok", scope: !244, file: !244, line: 753, type: !4634, isLocal: true, isDefinition: true, scopeLine: 754, flags: DIFlagPrototyped, isOptimized: false, unit: !243, variables: !25)
!4634 = !DISubroutineType(types: !4635)
!4635 = !{!79, !407}
!4636 = !DILocalVariable(name: "p", arg: 1, scope: !4633, file: !244, line: 753, type: !407)
!4637 = !DILocation(line: 753, column: 39, scope: !4633)
!4638 = !DILocalVariable(name: "sp", scope: !4633, file: !244, line: 755, type: !255)
!4639 = !DILocation(line: 755, column: 8, scope: !4633)
!4640 = !DILocation(line: 755, column: 13, scope: !4633)
!4641 = !DILocation(line: 755, column: 16, scope: !4633)
!4642 = !DILocalVariable(name: "h", scope: !4633, file: !244, line: 756, type: !4643)
!4643 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4644, size: 64)
!4644 = !DIDerivedType(tag: DW_TAG_typedef, name: "Hash_table", file: !96, line: 61, baseType: !345)
!4645 = !DILocation(line: 756, column: 15, scope: !4633)
!4646 = !DILocation(line: 756, column: 19, scope: !4633)
!4647 = !DILocation(line: 756, column: 23, scope: !4633)
!4648 = !DILocalVariable(name: "tmp", scope: !4633, file: !244, line: 757, type: !4649)
!4649 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "LCO_ent", file: !244, line: 723, size: 128, elements: !4650)
!4650 = !{!4651, !4652}
!4651 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !4649, file: !244, line: 725, baseType: !329, size: 64)
!4652 = !DIDerivedType(tag: DW_TAG_member, name: "opt_ok", scope: !4649, file: !244, line: 726, baseType: !79, size: 8, offset: 64)
!4653 = !DILocation(line: 757, column: 18, scope: !4633)
!4654 = !DILocalVariable(name: "ent", scope: !4633, file: !244, line: 758, type: !4655)
!4655 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4649, size: 64)
!4656 = !DILocation(line: 758, column: 19, scope: !4633)
!4657 = !DILocalVariable(name: "opt_ok", scope: !4633, file: !244, line: 759, type: !79)
!4658 = !DILocation(line: 759, column: 8, scope: !4633)
!4659 = !DILocalVariable(name: "t2", scope: !4633, file: !244, line: 760, type: !4655)
!4660 = !DILocation(line: 760, column: 19, scope: !4633)
!4661 = !DILocation(line: 764, column: 8, scope: !4662)
!4662 = distinct !DILexicalBlock(scope: !4633, file: !244, line: 764, column: 7)
!4663 = !DILocation(line: 764, column: 7, scope: !4633)
!4664 = !DILocation(line: 765, column: 5, scope: !4662)
!4665 = !DILocation(line: 768, column: 7, scope: !4666)
!4666 = distinct !DILexicalBlock(scope: !4633, file: !244, line: 768, column: 7)
!4667 = !DILocation(line: 768, column: 9, scope: !4666)
!4668 = !DILocation(line: 768, column: 7, scope: !4633)
!4669 = !DILocation(line: 771, column: 4, scope: !4670)
!4670 = distinct !DILexicalBlock(scope: !4666, file: !244, line: 769, column: 5)
!4671 = !DILocation(line: 770, column: 11, scope: !4670)
!4672 = !DILocation(line: 770, column: 15, scope: !4670)
!4673 = !DILocation(line: 771, column: 2, scope: !4670)
!4674 = !DILocation(line: 770, column: 9, scope: !4670)
!4675 = !DILocation(line: 773, column: 11, scope: !4676)
!4676 = distinct !DILexicalBlock(scope: !4670, file: !244, line: 773, column: 11)
!4677 = !DILocation(line: 773, column: 13, scope: !4676)
!4678 = !DILocation(line: 773, column: 11, scope: !4670)
!4679 = !DILocation(line: 774, column: 2, scope: !4676)
!4680 = !DILocation(line: 775, column: 5, scope: !4670)
!4681 = !DILocation(line: 776, column: 16, scope: !4633)
!4682 = !DILocation(line: 776, column: 19, scope: !4633)
!4683 = !DILocation(line: 776, column: 30, scope: !4633)
!4684 = !DILocation(line: 776, column: 7, scope: !4633)
!4685 = !DILocation(line: 776, column: 14, scope: !4633)
!4686 = !DILocation(line: 777, column: 22, scope: !4633)
!4687 = !DILocation(line: 777, column: 25, scope: !4633)
!4688 = !DILocation(line: 777, column: 9, scope: !4633)
!4689 = !DILocation(line: 777, column: 7, scope: !4633)
!4690 = !DILocation(line: 778, column: 7, scope: !4691)
!4691 = distinct !DILexicalBlock(scope: !4633, file: !244, line: 778, column: 7)
!4692 = !DILocation(line: 778, column: 7, scope: !4633)
!4693 = !DILocation(line: 779, column: 12, scope: !4691)
!4694 = !DILocation(line: 779, column: 17, scope: !4691)
!4695 = !DILocation(line: 779, column: 5, scope: !4691)
!4696 = !DILocation(line: 782, column: 8, scope: !4633)
!4697 = !DILocation(line: 782, column: 6, scope: !4633)
!4698 = !DILocation(line: 783, column: 7, scope: !4699)
!4699 = distinct !DILexicalBlock(scope: !4633, file: !244, line: 783, column: 7)
!4700 = !DILocation(line: 783, column: 10, scope: !4699)
!4701 = !DILocation(line: 783, column: 7, scope: !4633)
!4702 = !DILocation(line: 784, column: 5, scope: !4699)
!4703 = !DILocation(line: 787, column: 39, scope: !4633)
!4704 = !DILocation(line: 787, column: 43, scope: !4633)
!4705 = !DILocation(line: 787, column: 12, scope: !4633)
!4706 = !DILocation(line: 787, column: 10, scope: !4633)
!4707 = !DILocation(line: 788, column: 16, scope: !4633)
!4708 = !DILocation(line: 788, column: 3, scope: !4633)
!4709 = !DILocation(line: 788, column: 7, scope: !4633)
!4710 = !DILocation(line: 788, column: 14, scope: !4633)
!4711 = !DILocation(line: 789, column: 16, scope: !4633)
!4712 = !DILocation(line: 789, column: 19, scope: !4633)
!4713 = !DILocation(line: 789, column: 30, scope: !4633)
!4714 = !DILocation(line: 789, column: 3, scope: !4633)
!4715 = !DILocation(line: 789, column: 7, scope: !4633)
!4716 = !DILocation(line: 789, column: 14, scope: !4633)
!4717 = !DILocation(line: 791, column: 22, scope: !4633)
!4718 = !DILocation(line: 791, column: 25, scope: !4633)
!4719 = !DILocation(line: 791, column: 9, scope: !4633)
!4720 = !DILocation(line: 791, column: 7, scope: !4633)
!4721 = !DILocation(line: 792, column: 7, scope: !4722)
!4722 = distinct !DILexicalBlock(scope: !4633, file: !244, line: 792, column: 7)
!4723 = !DILocation(line: 792, column: 11, scope: !4722)
!4724 = !DILocation(line: 792, column: 7, scope: !4633)
!4725 = !DILocation(line: 795, column: 13, scope: !4726)
!4726 = distinct !DILexicalBlock(scope: !4722, file: !244, line: 793, column: 5)
!4727 = !DILocation(line: 795, column: 7, scope: !4726)
!4728 = !DILocation(line: 796, column: 7, scope: !4726)
!4729 = !DILocation(line: 798, column: 3, scope: !4633)
!4730 = distinct !{!4730, !4729, !4729}
!4731 = !DILocation(line: 798, column: 3, scope: !4732)
!4732 = distinct !DILexicalBlock(scope: !4733, file: !244, line: 798, column: 3)
!4733 = distinct !DILexicalBlock(scope: !4633, file: !244, line: 798, column: 3)
!4734 = !DILocation(line: 798, column: 3, scope: !4733)
!4735 = !DILocation(line: 800, column: 10, scope: !4633)
!4736 = !DILocation(line: 800, column: 3, scope: !4633)
!4737 = !DILocation(line: 801, column: 1, scope: !4633)
!4738 = distinct !DISubprogram(name: "enter_dir", scope: !251, file: !251, line: 74, type: !4739, isLocal: true, isDefinition: true, scopeLine: 75, flags: DIFlagPrototyped, isOptimized: false, unit: !243, variables: !25)
!4739 = !DISubroutineType(types: !4740)
!4740 = !{!79, !255, !2189}
!4741 = !DILocalVariable(name: "fts", arg: 1, scope: !4738, file: !251, line: 74, type: !255)
!4742 = !DILocation(line: 74, column: 17, scope: !4738)
!4743 = !DILocalVariable(name: "ent", arg: 2, scope: !4738, file: !251, line: 74, type: !2189)
!4744 = !DILocation(line: 74, column: 30, scope: !4738)
!4745 = !DILocation(line: 76, column: 7, scope: !4746)
!4746 = distinct !DILexicalBlock(scope: !4738, file: !251, line: 76, column: 7)
!4747 = !DILocation(line: 76, column: 12, scope: !4746)
!4748 = !DILocation(line: 76, column: 24, scope: !4746)
!4749 = !DILocation(line: 76, column: 7, scope: !4738)
!4750 = !DILocalVariable(name: "st", scope: !4751, file: !251, line: 78, type: !3748)
!4751 = distinct !DILexicalBlock(scope: !4746, file: !251, line: 77, column: 5)
!4752 = !DILocation(line: 78, column: 26, scope: !4751)
!4753 = !DILocation(line: 78, column: 31, scope: !4751)
!4754 = !DILocation(line: 78, column: 36, scope: !4751)
!4755 = !DILocalVariable(name: "ad", scope: !4751, file: !251, line: 79, type: !4756)
!4756 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2961, size: 64)
!4757 = !DILocation(line: 79, column: 26, scope: !4751)
!4758 = !DILocation(line: 79, column: 31, scope: !4751)
!4759 = !DILocalVariable(name: "ad_from_table", scope: !4751, file: !251, line: 80, type: !4756)
!4760 = !DILocation(line: 80, column: 26, scope: !4751)
!4761 = !DILocation(line: 82, column: 12, scope: !4762)
!4762 = distinct !DILexicalBlock(scope: !4751, file: !251, line: 82, column: 11)
!4763 = !DILocation(line: 82, column: 11, scope: !4751)
!4764 = !DILocation(line: 83, column: 2, scope: !4762)
!4765 = !DILocation(line: 85, column: 17, scope: !4751)
!4766 = !DILocation(line: 85, column: 21, scope: !4751)
!4767 = !DILocation(line: 85, column: 7, scope: !4751)
!4768 = !DILocation(line: 85, column: 11, scope: !4751)
!4769 = !DILocation(line: 85, column: 15, scope: !4751)
!4770 = !DILocation(line: 86, column: 17, scope: !4751)
!4771 = !DILocation(line: 86, column: 21, scope: !4751)
!4772 = !DILocation(line: 86, column: 7, scope: !4751)
!4773 = !DILocation(line: 86, column: 11, scope: !4751)
!4774 = !DILocation(line: 86, column: 15, scope: !4751)
!4775 = !DILocation(line: 87, column: 21, scope: !4751)
!4776 = !DILocation(line: 87, column: 7, scope: !4751)
!4777 = !DILocation(line: 87, column: 11, scope: !4751)
!4778 = !DILocation(line: 87, column: 19, scope: !4751)
!4779 = !DILocation(line: 92, column: 36, scope: !4751)
!4780 = !DILocation(line: 92, column: 41, scope: !4751)
!4781 = !DILocation(line: 92, column: 51, scope: !4751)
!4782 = !DILocation(line: 92, column: 55, scope: !4751)
!4783 = !DILocation(line: 92, column: 23, scope: !4751)
!4784 = !DILocation(line: 92, column: 21, scope: !4751)
!4785 = !DILocation(line: 94, column: 11, scope: !4786)
!4786 = distinct !DILexicalBlock(scope: !4751, file: !251, line: 94, column: 11)
!4787 = !DILocation(line: 94, column: 28, scope: !4786)
!4788 = !DILocation(line: 94, column: 25, scope: !4786)
!4789 = !DILocation(line: 94, column: 11, scope: !4751)
!4790 = !DILocation(line: 96, column: 10, scope: !4791)
!4791 = distinct !DILexicalBlock(scope: !4786, file: !251, line: 95, column: 2)
!4792 = !DILocation(line: 96, column: 4, scope: !4791)
!4793 = !DILocation(line: 97, column: 9, scope: !4794)
!4794 = distinct !DILexicalBlock(scope: !4791, file: !251, line: 97, column: 8)
!4795 = !DILocation(line: 97, column: 8, scope: !4791)
!4796 = !DILocation(line: 98, column: 6, scope: !4794)
!4797 = !DILocation(line: 102, column: 21, scope: !4791)
!4798 = !DILocation(line: 102, column: 36, scope: !4791)
!4799 = !DILocation(line: 102, column: 4, scope: !4791)
!4800 = !DILocation(line: 102, column: 9, scope: !4791)
!4801 = !DILocation(line: 102, column: 19, scope: !4791)
!4802 = !DILocation(line: 103, column: 4, scope: !4791)
!4803 = !DILocation(line: 103, column: 9, scope: !4791)
!4804 = !DILocation(line: 103, column: 18, scope: !4791)
!4805 = !DILocation(line: 104, column: 2, scope: !4791)
!4806 = !DILocation(line: 105, column: 5, scope: !4751)
!4807 = !DILocation(line: 108, column: 24, scope: !4808)
!4808 = distinct !DILexicalBlock(scope: !4809, file: !251, line: 108, column: 11)
!4809 = distinct !DILexicalBlock(scope: !4746, file: !251, line: 107, column: 5)
!4810 = !DILocation(line: 108, column: 29, scope: !4808)
!4811 = !DILocation(line: 108, column: 39, scope: !4808)
!4812 = !DILocation(line: 108, column: 46, scope: !4808)
!4813 = !DILocation(line: 108, column: 51, scope: !4808)
!4814 = !DILocation(line: 108, column: 11, scope: !4808)
!4815 = !DILocation(line: 108, column: 11, scope: !4809)
!4816 = !DILocation(line: 114, column: 21, scope: !4817)
!4817 = distinct !DILexicalBlock(scope: !4808, file: !251, line: 109, column: 2)
!4818 = !DILocation(line: 114, column: 4, scope: !4817)
!4819 = !DILocation(line: 114, column: 9, scope: !4817)
!4820 = !DILocation(line: 114, column: 19, scope: !4817)
!4821 = !DILocation(line: 115, column: 4, scope: !4817)
!4822 = !DILocation(line: 115, column: 9, scope: !4817)
!4823 = !DILocation(line: 115, column: 18, scope: !4817)
!4824 = !DILocation(line: 116, column: 2, scope: !4817)
!4825 = !DILocation(line: 119, column: 3, scope: !4738)
!4826 = !DILocation(line: 120, column: 1, scope: !4738)
!4827 = distinct !DISubprogram(name: "LCO_hash", scope: !244, file: !244, line: 735, type: !2952, isLocal: true, isDefinition: true, scopeLine: 736, flags: DIFlagPrototyped, isOptimized: false, unit: !243, variables: !25)
!4828 = !DILocalVariable(name: "x", arg: 1, scope: !4827, file: !244, line: 735, type: !404)
!4829 = !DILocation(line: 735, column: 23, scope: !4827)
!4830 = !DILocalVariable(name: "table_size", arg: 2, scope: !4827, file: !244, line: 735, type: !91)
!4831 = !DILocation(line: 735, column: 33, scope: !4827)
!4832 = !DILocalVariable(name: "ax", scope: !4827, file: !244, line: 737, type: !4833)
!4833 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4834, size: 64)
!4834 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4649)
!4835 = !DILocation(line: 737, column: 25, scope: !4827)
!4836 = !DILocation(line: 737, column: 30, scope: !4827)
!4837 = !DILocation(line: 738, column: 22, scope: !4827)
!4838 = !DILocation(line: 738, column: 26, scope: !4827)
!4839 = !DILocation(line: 738, column: 35, scope: !4827)
!4840 = !DILocation(line: 738, column: 33, scope: !4827)
!4841 = !DILocation(line: 738, column: 3, scope: !4827)
!4842 = distinct !DISubprogram(name: "LCO_compare", scope: !244, file: !244, line: 742, type: !2974, isLocal: true, isDefinition: true, scopeLine: 743, flags: DIFlagPrototyped, isOptimized: false, unit: !243, variables: !25)
!4843 = !DILocalVariable(name: "x", arg: 1, scope: !4842, file: !244, line: 742, type: !404)
!4844 = !DILocation(line: 742, column: 26, scope: !4842)
!4845 = !DILocalVariable(name: "y", arg: 2, scope: !4842, file: !244, line: 742, type: !404)
!4846 = !DILocation(line: 742, column: 41, scope: !4842)
!4847 = !DILocalVariable(name: "ax", scope: !4842, file: !244, line: 744, type: !4833)
!4848 = !DILocation(line: 744, column: 25, scope: !4842)
!4849 = !DILocation(line: 744, column: 30, scope: !4842)
!4850 = !DILocalVariable(name: "ay", scope: !4842, file: !244, line: 745, type: !4833)
!4851 = !DILocation(line: 745, column: 25, scope: !4842)
!4852 = !DILocation(line: 745, column: 30, scope: !4842)
!4853 = !DILocation(line: 746, column: 10, scope: !4842)
!4854 = !DILocation(line: 746, column: 14, scope: !4842)
!4855 = !DILocation(line: 746, column: 24, scope: !4842)
!4856 = !DILocation(line: 746, column: 28, scope: !4842)
!4857 = !DILocation(line: 746, column: 21, scope: !4842)
!4858 = !DILocation(line: 746, column: 3, scope: !4842)
!4859 = distinct !DISubprogram(name: "leaf_optimization_applies", scope: !244, file: !244, line: 684, type: !4860, isLocal: true, isDefinition: true, scopeLine: 685, flags: DIFlagPrototyped, isOptimized: false, unit: !243, variables: !25)
!4860 = !DISubroutineType(types: !4861)
!4861 = !{!79, !23}
!4862 = !DILocalVariable(name: "dir_fd", arg: 1, scope: !4859, file: !244, line: 684, type: !23)
!4863 = !DILocation(line: 684, column: 32, scope: !4859)
!4864 = !DILocalVariable(name: "fs_buf", scope: !4859, file: !244, line: 686, type: !4865)
!4865 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "statfs", file: !4866, line: 24, size: 960, elements: !4867)
!4866 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/statfs.h", directory: "/home/ma481/Downloads/Chisel/chisel-bench/benchmark/chown-8.2/original/obj-llvm/lib")
!4867 = !{!4868, !4870, !4871, !4873, !4874, !4875, !4877, !4878, !4886, !4887, !4888, !4889}
!4868 = !DIDerivedType(tag: DW_TAG_member, name: "f_type", scope: !4865, file: !4866, line: 26, baseType: !4869, size: 64)
!4869 = !DIDerivedType(tag: DW_TAG_typedef, name: "__fsword_t", file: !192, line: 179, baseType: !268)
!4870 = !DIDerivedType(tag: DW_TAG_member, name: "f_bsize", scope: !4865, file: !4866, line: 27, baseType: !4869, size: 64, offset: 64)
!4871 = !DIDerivedType(tag: DW_TAG_member, name: "f_blocks", scope: !4865, file: !4866, line: 29, baseType: !4872, size: 64, offset: 128)
!4872 = !DIDerivedType(tag: DW_TAG_typedef, name: "__fsblkcnt_t", file: !192, line: 171, baseType: !34)
!4873 = !DIDerivedType(tag: DW_TAG_member, name: "f_bfree", scope: !4865, file: !4866, line: 30, baseType: !4872, size: 64, offset: 192)
!4874 = !DIDerivedType(tag: DW_TAG_member, name: "f_bavail", scope: !4865, file: !4866, line: 31, baseType: !4872, size: 64, offset: 256)
!4875 = !DIDerivedType(tag: DW_TAG_member, name: "f_files", scope: !4865, file: !4866, line: 32, baseType: !4876, size: 64, offset: 320)
!4876 = !DIDerivedType(tag: DW_TAG_typedef, name: "__fsfilcnt_t", file: !192, line: 175, baseType: !34)
!4877 = !DIDerivedType(tag: DW_TAG_member, name: "f_ffree", scope: !4865, file: !4866, line: 33, baseType: !4876, size: 64, offset: 384)
!4878 = !DIDerivedType(tag: DW_TAG_member, name: "f_fsid", scope: !4865, file: !4866, line: 41, baseType: !4879, size: 64, offset: 448)
!4879 = !DIDerivedType(tag: DW_TAG_typedef, name: "__fsid_t", file: !192, line: 143, baseType: !4880)
!4880 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !192, line: 143, size: 64, elements: !4881)
!4881 = !{!4882}
!4882 = !DIDerivedType(tag: DW_TAG_member, name: "__val", scope: !4880, file: !192, line: 143, baseType: !4883, size: 64)
!4883 = !DICompositeType(tag: DW_TAG_array_type, baseType: !23, size: 64, elements: !4884)
!4884 = !{!4885}
!4885 = !DISubrange(count: 2)
!4886 = !DIDerivedType(tag: DW_TAG_member, name: "f_namelen", scope: !4865, file: !4866, line: 42, baseType: !4869, size: 64, offset: 512)
!4887 = !DIDerivedType(tag: DW_TAG_member, name: "f_frsize", scope: !4865, file: !4866, line: 43, baseType: !4869, size: 64, offset: 576)
!4888 = !DIDerivedType(tag: DW_TAG_member, name: "f_flags", scope: !4865, file: !4866, line: 44, baseType: !4869, size: 64, offset: 640)
!4889 = !DIDerivedType(tag: DW_TAG_member, name: "f_spare", scope: !4865, file: !4866, line: 45, baseType: !4890, size: 256, offset: 704)
!4890 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4869, size: 256, elements: !374)
!4891 = !DILocation(line: 686, column: 17, scope: !4859)
!4892 = !DILocation(line: 689, column: 16, scope: !4893)
!4893 = distinct !DILexicalBlock(scope: !4859, file: !244, line: 689, column: 7)
!4894 = !DILocation(line: 689, column: 7, scope: !4893)
!4895 = !DILocation(line: 689, column: 33, scope: !4893)
!4896 = !DILocation(line: 689, column: 7, scope: !4859)
!4897 = !DILocation(line: 690, column: 5, scope: !4893)
!4898 = !DILocation(line: 695, column: 18, scope: !4859)
!4899 = !DILocation(line: 695, column: 3, scope: !4859)
!4900 = !DILocation(line: 700, column: 7, scope: !4901)
!4901 = distinct !DILexicalBlock(scope: !4859, file: !244, line: 696, column: 5)
!4902 = !DILocation(line: 709, column: 7, scope: !4901)
!4903 = !DILocation(line: 711, column: 1, scope: !4859)
!4904 = distinct !DISubprogram(name: "opendirat", scope: !244, file: !244, line: 300, type: !4905, isLocal: true, isDefinition: true, scopeLine: 301, flags: DIFlagPrototyped, isOptimized: false, unit: !243, variables: !25)
!4905 = !DISubroutineType(types: !4906)
!4906 = !{!3981, !23, !12}
!4907 = !DILocalVariable(name: "fd", arg: 1, scope: !4904, file: !244, line: 300, type: !23)
!4908 = !DILocation(line: 300, column: 16, scope: !4904)
!4909 = !DILocalVariable(name: "dir", arg: 2, scope: !4904, file: !244, line: 300, type: !12)
!4910 = !DILocation(line: 300, column: 32, scope: !4904)
!4911 = !DILocalVariable(name: "new_fd", scope: !4904, file: !244, line: 302, type: !23)
!4912 = !DILocation(line: 302, column: 7, scope: !4904)
!4913 = !DILocation(line: 302, column: 24, scope: !4904)
!4914 = !DILocation(line: 302, column: 28, scope: !4904)
!4915 = !DILocation(line: 302, column: 16, scope: !4904)
!4916 = !DILocalVariable(name: "dirp", scope: !4904, file: !244, line: 304, type: !3981)
!4917 = !DILocation(line: 304, column: 8, scope: !4904)
!4918 = !DILocation(line: 306, column: 7, scope: !4919)
!4919 = distinct !DILexicalBlock(scope: !4904, file: !244, line: 306, column: 7)
!4920 = !DILocation(line: 306, column: 14, scope: !4919)
!4921 = !DILocation(line: 306, column: 7, scope: !4904)
!4922 = !DILocation(line: 307, column: 5, scope: !4919)
!4923 = !DILocation(line: 308, column: 21, scope: !4904)
!4924 = !DILocation(line: 308, column: 3, scope: !4904)
!4925 = !DILocation(line: 309, column: 21, scope: !4904)
!4926 = !DILocation(line: 309, column: 10, scope: !4904)
!4927 = !DILocation(line: 309, column: 8, scope: !4904)
!4928 = !DILocation(line: 310, column: 7, scope: !4929)
!4929 = distinct !DILexicalBlock(scope: !4904, file: !244, line: 310, column: 7)
!4930 = !DILocation(line: 310, column: 12, scope: !4929)
!4931 = !DILocation(line: 310, column: 7, scope: !4904)
!4932 = !DILocalVariable(name: "saved_errno", scope: !4933, file: !244, line: 312, type: !23)
!4933 = distinct !DILexicalBlock(scope: !4929, file: !244, line: 311, column: 5)
!4934 = !DILocation(line: 312, column: 11, scope: !4933)
!4935 = !DILocation(line: 312, column: 25, scope: !4933)
!4936 = !DILocation(line: 313, column: 14, scope: !4933)
!4937 = !DILocation(line: 313, column: 7, scope: !4933)
!4938 = !DILocation(line: 314, column: 15, scope: !4933)
!4939 = !DILocation(line: 314, column: 7, scope: !4933)
!4940 = !DILocation(line: 314, column: 13, scope: !4933)
!4941 = !DILocation(line: 315, column: 5, scope: !4933)
!4942 = !DILocation(line: 316, column: 10, scope: !4904)
!4943 = !DILocation(line: 316, column: 3, scope: !4904)
!4944 = !DILocation(line: 317, column: 1, scope: !4904)
!4945 = distinct !DISubprogram(name: "set_stat_type", scope: !244, file: !244, line: 1171, type: !4946, isLocal: true, isDefinition: true, scopeLine: 1172, flags: DIFlagPrototyped, isOptimized: false, unit: !243, variables: !25)
!4946 = !DISubroutineType(types: !4947)
!4947 = !{null, !2645, !159}
!4948 = !DILocalVariable(name: "st", arg: 1, scope: !4945, file: !244, line: 1171, type: !2645)
!4949 = !DILocation(line: 1171, column: 29, scope: !4945)
!4950 = !DILocalVariable(name: "dtype", arg: 2, scope: !4945, file: !244, line: 1171, type: !159)
!4951 = !DILocation(line: 1171, column: 46, scope: !4945)
!4952 = !DILocalVariable(name: "type", scope: !4945, file: !244, line: 1173, type: !4953)
!4953 = !DIDerivedType(tag: DW_TAG_typedef, name: "mode_t", file: !190, line: 70, baseType: !296)
!4954 = !DILocation(line: 1173, column: 10, scope: !4945)
!4955 = !DILocation(line: 1174, column: 11, scope: !4945)
!4956 = !DILocation(line: 1174, column: 3, scope: !4945)
!4957 = !DILocation(line: 1177, column: 12, scope: !4958)
!4958 = distinct !DILexicalBlock(scope: !4945, file: !244, line: 1175, column: 5)
!4959 = !DILocation(line: 1178, column: 7, scope: !4958)
!4960 = !DILocation(line: 1180, column: 12, scope: !4958)
!4961 = !DILocation(line: 1181, column: 7, scope: !4958)
!4962 = !DILocation(line: 1183, column: 12, scope: !4958)
!4963 = !DILocation(line: 1184, column: 7, scope: !4958)
!4964 = !DILocation(line: 1186, column: 12, scope: !4958)
!4965 = !DILocation(line: 1187, column: 7, scope: !4958)
!4966 = !DILocation(line: 1189, column: 12, scope: !4958)
!4967 = !DILocation(line: 1190, column: 7, scope: !4958)
!4968 = !DILocation(line: 1192, column: 12, scope: !4958)
!4969 = !DILocation(line: 1193, column: 7, scope: !4958)
!4970 = !DILocation(line: 1195, column: 12, scope: !4958)
!4971 = !DILocation(line: 1196, column: 7, scope: !4958)
!4972 = !DILocation(line: 1198, column: 12, scope: !4958)
!4973 = !DILocation(line: 1199, column: 5, scope: !4958)
!4974 = !DILocation(line: 1200, column: 17, scope: !4945)
!4975 = !DILocation(line: 1200, column: 3, scope: !4945)
!4976 = !DILocation(line: 1200, column: 7, scope: !4945)
!4977 = !DILocation(line: 1200, column: 15, scope: !4945)
!4978 = !DILocation(line: 1201, column: 1, scope: !4945)
!4979 = distinct !DISubprogram(name: "fts_padjust", scope: !244, file: !244, line: 1910, type: !3741, isLocal: true, isDefinition: true, scopeLine: 1911, flags: DIFlagPrototyped, isOptimized: false, unit: !243, variables: !25)
!4980 = !DILocalVariable(name: "sp", arg: 1, scope: !4979, file: !244, line: 1910, type: !255)
!4981 = !DILocation(line: 1910, column: 19, scope: !4979)
!4982 = !DILocalVariable(name: "head", arg: 2, scope: !4979, file: !244, line: 1910, type: !2189)
!4983 = !DILocation(line: 1910, column: 31, scope: !4979)
!4984 = !DILocalVariable(name: "p", scope: !4979, file: !244, line: 1912, type: !2189)
!4985 = !DILocation(line: 1912, column: 10, scope: !4979)
!4986 = !DILocalVariable(name: "addr", scope: !4979, file: !244, line: 1913, type: !15)
!4987 = !DILocation(line: 1913, column: 8, scope: !4979)
!4988 = !DILocation(line: 1913, column: 15, scope: !4979)
!4989 = !DILocation(line: 1913, column: 19, scope: !4979)
!4990 = !DILocation(line: 1923, column: 11, scope: !4991)
!4991 = distinct !DILexicalBlock(scope: !4979, file: !244, line: 1923, column: 2)
!4992 = !DILocation(line: 1923, column: 15, scope: !4991)
!4993 = !DILocation(line: 1923, column: 9, scope: !4991)
!4994 = !DILocation(line: 1923, column: 7, scope: !4991)
!4995 = !DILocation(line: 1923, column: 26, scope: !4996)
!4996 = distinct !DILexicalBlock(scope: !4991, file: !244, line: 1923, column: 2)
!4997 = !DILocation(line: 1923, column: 2, scope: !4991)
!4998 = !DILocation(line: 1924, column: 3, scope: !4996)
!4999 = distinct !{!4999, !4998, !4998}
!5000 = !DILocation(line: 1924, column: 3, scope: !5001)
!5001 = distinct !DILexicalBlock(scope: !5002, file: !244, line: 1924, column: 3)
!5002 = distinct !DILexicalBlock(scope: !4996, file: !244, line: 1924, column: 3)
!5003 = !DILocation(line: 1924, column: 3, scope: !5002)
!5004 = !DILocation(line: 1924, column: 3, scope: !5005)
!5005 = distinct !DILexicalBlock(scope: !5001, file: !244, line: 1924, column: 3)
!5006 = !DILocation(line: 1923, column: 33, scope: !4996)
!5007 = !DILocation(line: 1923, column: 36, scope: !4996)
!5008 = !DILocation(line: 1923, column: 31, scope: !4996)
!5009 = !DILocation(line: 1923, column: 2, scope: !4996)
!5010 = distinct !{!5010, !4997, !5011}
!5011 = !DILocation(line: 1924, column: 3, scope: !4991)
!5012 = !DILocation(line: 1927, column: 11, scope: !5013)
!5013 = distinct !DILexicalBlock(scope: !4979, file: !244, line: 1927, column: 2)
!5014 = !DILocation(line: 1927, column: 9, scope: !5013)
!5015 = !DILocation(line: 1927, column: 7, scope: !5013)
!5016 = !DILocation(line: 1927, column: 17, scope: !5017)
!5017 = distinct !DILexicalBlock(scope: !5013, file: !244, line: 1927, column: 2)
!5018 = !DILocation(line: 1927, column: 20, scope: !5017)
!5019 = !DILocation(line: 1927, column: 30, scope: !5017)
!5020 = !DILocation(line: 1927, column: 2, scope: !5013)
!5021 = !DILocation(line: 1928, column: 3, scope: !5022)
!5022 = distinct !DILexicalBlock(scope: !5017, file: !244, line: 1927, column: 49)
!5023 = distinct !{!5023, !5021, !5021}
!5024 = !DILocation(line: 1928, column: 3, scope: !5025)
!5025 = distinct !DILexicalBlock(scope: !5026, file: !244, line: 1928, column: 3)
!5026 = distinct !DILexicalBlock(scope: !5022, file: !244, line: 1928, column: 3)
!5027 = !DILocation(line: 1928, column: 3, scope: !5026)
!5028 = !DILocation(line: 1928, column: 3, scope: !5029)
!5029 = distinct !DILexicalBlock(scope: !5025, file: !244, line: 1928, column: 3)
!5030 = !DILocation(line: 1929, column: 7, scope: !5022)
!5031 = !DILocation(line: 1929, column: 10, scope: !5022)
!5032 = !DILocation(line: 1929, column: 21, scope: !5022)
!5033 = !DILocation(line: 1929, column: 24, scope: !5022)
!5034 = !DILocation(line: 1929, column: 35, scope: !5022)
!5035 = !DILocation(line: 1929, column: 38, scope: !5022)
!5036 = !DILocation(line: 1929, column: 5, scope: !5022)
!5037 = !DILocation(line: 1927, column: 2, scope: !5017)
!5038 = distinct !{!5038, !5020, !5039}
!5039 = !DILocation(line: 1930, column: 2, scope: !5013)
!5040 = !DILocation(line: 1931, column: 1, scope: !4979)
!5041 = distinct !DISubprogram(name: "dirent_inode_sort_may_be_useful", scope: !244, file: !244, line: 652, type: !4860, isLocal: true, isDefinition: true, scopeLine: 653, flags: DIFlagPrototyped, isOptimized: false, unit: !243, variables: !25)
!5042 = !DILocalVariable(name: "dir_fd", arg: 1, scope: !5041, file: !244, line: 652, type: !23)
!5043 = !DILocation(line: 652, column: 38, scope: !5041)
!5044 = !DILocalVariable(name: "fs_buf", scope: !5041, file: !244, line: 659, type: !4865)
!5045 = !DILocation(line: 659, column: 17, scope: !5041)
!5046 = !DILocation(line: 662, column: 16, scope: !5047)
!5047 = distinct !DILexicalBlock(scope: !5041, file: !244, line: 662, column: 7)
!5048 = !DILocation(line: 662, column: 7, scope: !5047)
!5049 = !DILocation(line: 662, column: 33, scope: !5047)
!5050 = !DILocation(line: 662, column: 7, scope: !5041)
!5051 = !DILocation(line: 663, column: 5, scope: !5047)
!5052 = !DILocation(line: 667, column: 18, scope: !5041)
!5053 = !DILocation(line: 667, column: 3, scope: !5041)
!5054 = !DILocation(line: 673, column: 7, scope: !5055)
!5055 = distinct !DILexicalBlock(scope: !5041, file: !244, line: 668, column: 5)
!5056 = !DILocation(line: 676, column: 7, scope: !5055)
!5057 = !DILocation(line: 678, column: 1, scope: !5041)
!5058 = distinct !DISubprogram(name: "fts_compare_ino", scope: !244, file: !244, line: 1162, type: !337, isLocal: true, isDefinition: true, scopeLine: 1163, flags: DIFlagPrototyped, isOptimized: false, unit: !243, variables: !25)
!5059 = !DILocalVariable(name: "a", arg: 1, scope: !5058, file: !244, line: 1162, type: !339)
!5060 = !DILocation(line: 1162, column: 41, scope: !5058)
!5061 = !DILocalVariable(name: "b", arg: 2, scope: !5058, file: !244, line: 1162, type: !339)
!5062 = !DILocation(line: 1162, column: 67, scope: !5058)
!5063 = !DILocation(line: 1164, column: 11, scope: !5058)
!5064 = !DILocation(line: 1164, column: 17, scope: !5058)
!5065 = !DILocation(line: 1164, column: 28, scope: !5058)
!5066 = !DILocation(line: 1164, column: 37, scope: !5058)
!5067 = !DILocation(line: 1164, column: 43, scope: !5058)
!5068 = !DILocation(line: 1164, column: 54, scope: !5058)
!5069 = !DILocation(line: 1164, column: 35, scope: !5058)
!5070 = !DILocation(line: 1165, column: 6, scope: !5058)
!5071 = !DILocation(line: 1165, column: 12, scope: !5058)
!5072 = !DILocation(line: 1165, column: 23, scope: !5058)
!5073 = !DILocation(line: 1165, column: 32, scope: !5058)
!5074 = !DILocation(line: 1165, column: 38, scope: !5058)
!5075 = !DILocation(line: 1165, column: 49, scope: !5058)
!5076 = !DILocation(line: 1165, column: 30, scope: !5058)
!5077 = !DILocation(line: 1164, column: 3, scope: !5058)
!5078 = distinct !DISubprogram(name: "fts_set", scope: !244, file: !244, line: 1067, type: !5079, isLocal: false, isDefinition: true, scopeLine: 1068, flags: DIFlagPrototyped, isOptimized: false, unit: !243, variables: !25)
!5079 = !DISubroutineType(types: !5080)
!5080 = !{!23, !255, !2189, !23}
!5081 = !DILocalVariable(name: "sp", arg: 1, scope: !5078, file: !244, line: 1067, type: !255)
!5082 = !DILocation(line: 1067, column: 14, scope: !5078)
!5083 = !DILocalVariable(name: "p", arg: 2, scope: !5078, file: !244, line: 1067, type: !2189)
!5084 = !DILocation(line: 1067, column: 45, scope: !5078)
!5085 = !DILocalVariable(name: "instr", arg: 3, scope: !5078, file: !244, line: 1067, type: !23)
!5086 = !DILocation(line: 1067, column: 52, scope: !5078)
!5087 = !DILocation(line: 1069, column: 6, scope: !5088)
!5088 = distinct !DILexicalBlock(scope: !5078, file: !244, line: 1069, column: 6)
!5089 = !DILocation(line: 1069, column: 12, scope: !5088)
!5090 = !DILocation(line: 1069, column: 17, scope: !5088)
!5091 = !DILocation(line: 1069, column: 20, scope: !5088)
!5092 = !DILocation(line: 1069, column: 26, scope: !5088)
!5093 = !DILocation(line: 1069, column: 39, scope: !5088)
!5094 = !DILocation(line: 1069, column: 42, scope: !5088)
!5095 = !DILocation(line: 1069, column: 48, scope: !5088)
!5096 = !DILocation(line: 1069, column: 62, scope: !5088)
!5097 = !DILocation(line: 1070, column: 6, scope: !5088)
!5098 = !DILocation(line: 1070, column: 12, scope: !5088)
!5099 = !DILocation(line: 1070, column: 27, scope: !5088)
!5100 = !DILocation(line: 1070, column: 30, scope: !5088)
!5101 = !DILocation(line: 1070, column: 36, scope: !5088)
!5102 = !DILocation(line: 1069, column: 6, scope: !5078)
!5103 = !DILocation(line: 1071, column: 3, scope: !5104)
!5104 = distinct !DILexicalBlock(scope: !5088, file: !244, line: 1070, column: 49)
!5105 = !DILocation(line: 1072, column: 3, scope: !5104)
!5106 = !DILocation(line: 1074, column: 17, scope: !5078)
!5107 = !DILocation(line: 1074, column: 2, scope: !5078)
!5108 = !DILocation(line: 1074, column: 5, scope: !5078)
!5109 = !DILocation(line: 1074, column: 15, scope: !5078)
!5110 = !DILocation(line: 1075, column: 2, scope: !5078)
!5111 = !DILocation(line: 1076, column: 1, scope: !5078)
!5112 = distinct !DISubprogram(name: "fts_children", scope: !244, file: !244, line: 1079, type: !3952, isLocal: false, isDefinition: true, scopeLine: 1080, flags: DIFlagPrototyped, isOptimized: false, unit: !243, variables: !25)
!5113 = !DILocalVariable(name: "sp", arg: 1, scope: !5112, file: !244, line: 1079, type: !255)
!5114 = !DILocation(line: 1079, column: 29, scope: !5112)
!5115 = !DILocalVariable(name: "instr", arg: 2, scope: !5112, file: !244, line: 1079, type: !23)
!5116 = !DILocation(line: 1079, column: 37, scope: !5112)
!5117 = !DILocalVariable(name: "p", scope: !5112, file: !244, line: 1081, type: !2189)
!5118 = !DILocation(line: 1081, column: 19, scope: !5112)
!5119 = !DILocalVariable(name: "fd", scope: !5112, file: !244, line: 1082, type: !23)
!5120 = !DILocation(line: 1082, column: 6, scope: !5112)
!5121 = !DILocation(line: 1084, column: 6, scope: !5122)
!5122 = distinct !DILexicalBlock(scope: !5112, file: !244, line: 1084, column: 6)
!5123 = !DILocation(line: 1084, column: 12, scope: !5122)
!5124 = !DILocation(line: 1084, column: 17, scope: !5122)
!5125 = !DILocation(line: 1084, column: 20, scope: !5122)
!5126 = !DILocation(line: 1084, column: 26, scope: !5122)
!5127 = !DILocation(line: 1084, column: 6, scope: !5112)
!5128 = !DILocation(line: 1085, column: 3, scope: !5129)
!5129 = distinct !DILexicalBlock(scope: !5122, file: !244, line: 1084, column: 43)
!5130 = !DILocation(line: 1086, column: 3, scope: !5129)
!5131 = !DILocation(line: 1090, column: 6, scope: !5112)
!5132 = !DILocation(line: 1090, column: 10, scope: !5112)
!5133 = !DILocation(line: 1090, column: 4, scope: !5112)
!5134 = !DILocation(line: 1096, column: 2, scope: !5112)
!5135 = !DILocation(line: 1099, column: 6, scope: !5136)
!5136 = distinct !DILexicalBlock(scope: !5112, file: !244, line: 1099, column: 6)
!5137 = !DILocation(line: 1099, column: 6, scope: !5112)
!5138 = !DILocation(line: 1100, column: 3, scope: !5136)
!5139 = !DILocation(line: 1103, column: 6, scope: !5140)
!5140 = distinct !DILexicalBlock(scope: !5112, file: !244, line: 1103, column: 6)
!5141 = !DILocation(line: 1103, column: 9, scope: !5140)
!5142 = !DILocation(line: 1103, column: 18, scope: !5140)
!5143 = !DILocation(line: 1103, column: 6, scope: !5112)
!5144 = !DILocation(line: 1104, column: 11, scope: !5140)
!5145 = !DILocation(line: 1104, column: 14, scope: !5140)
!5146 = !DILocation(line: 1104, column: 3, scope: !5140)
!5147 = !DILocation(line: 1111, column: 6, scope: !5148)
!5148 = distinct !DILexicalBlock(scope: !5112, file: !244, line: 1111, column: 6)
!5149 = !DILocation(line: 1111, column: 9, scope: !5148)
!5150 = !DILocation(line: 1111, column: 18, scope: !5148)
!5151 = !DILocation(line: 1111, column: 6, scope: !5112)
!5152 = !DILocation(line: 1112, column: 3, scope: !5148)
!5153 = !DILocation(line: 1115, column: 6, scope: !5154)
!5154 = distinct !DILexicalBlock(scope: !5112, file: !244, line: 1115, column: 6)
!5155 = !DILocation(line: 1115, column: 10, scope: !5154)
!5156 = !DILocation(line: 1115, column: 20, scope: !5154)
!5157 = !DILocation(line: 1115, column: 6, scope: !5112)
!5158 = !DILocation(line: 1116, column: 13, scope: !5154)
!5159 = !DILocation(line: 1116, column: 17, scope: !5154)
!5160 = !DILocation(line: 1116, column: 3, scope: !5154)
!5161 = !DILocation(line: 1118, column: 6, scope: !5162)
!5162 = distinct !DILexicalBlock(scope: !5112, file: !244, line: 1118, column: 6)
!5163 = !DILocation(line: 1118, column: 12, scope: !5162)
!5164 = !DILocation(line: 1118, column: 6, scope: !5112)
!5165 = !DILocation(line: 1119, column: 3, scope: !5166)
!5166 = distinct !DILexicalBlock(scope: !5162, file: !244, line: 1118, column: 29)
!5167 = !DILocation(line: 1120, column: 9, scope: !5166)
!5168 = !DILocation(line: 1121, column: 2, scope: !5166)
!5169 = !DILocation(line: 1122, column: 9, scope: !5162)
!5170 = !DILocation(line: 1131, column: 6, scope: !5171)
!5171 = distinct !DILexicalBlock(scope: !5112, file: !244, line: 1131, column: 6)
!5172 = !DILocation(line: 1131, column: 9, scope: !5171)
!5173 = !DILocation(line: 1131, column: 19, scope: !5171)
!5174 = !DILocation(line: 1131, column: 36, scope: !5171)
!5175 = !DILocation(line: 1131, column: 39, scope: !5171)
!5176 = !DILocation(line: 1131, column: 42, scope: !5171)
!5177 = !DILocation(line: 1131, column: 57, scope: !5171)
!5178 = !DILocation(line: 1131, column: 64, scope: !5171)
!5179 = !DILocation(line: 1132, column: 6, scope: !5171)
!5180 = !DILocation(line: 1131, column: 6, scope: !5112)
!5181 = !DILocation(line: 1133, column: 37, scope: !5171)
!5182 = !DILocation(line: 1133, column: 41, scope: !5171)
!5183 = !DILocation(line: 1133, column: 27, scope: !5171)
!5184 = !DILocation(line: 1133, column: 11, scope: !5171)
!5185 = !DILocation(line: 1133, column: 15, scope: !5171)
!5186 = !DILocation(line: 1133, column: 25, scope: !5171)
!5187 = !DILocation(line: 1133, column: 3, scope: !5171)
!5188 = !DILocation(line: 1135, column: 21, scope: !5189)
!5189 = distinct !DILexicalBlock(scope: !5112, file: !244, line: 1135, column: 6)
!5190 = !DILocation(line: 1135, column: 12, scope: !5189)
!5191 = !DILocation(line: 1135, column: 10, scope: !5189)
!5192 = !DILocation(line: 1135, column: 31, scope: !5189)
!5193 = !DILocation(line: 1135, column: 6, scope: !5112)
!5194 = !DILocation(line: 1136, column: 11, scope: !5189)
!5195 = !DILocation(line: 1136, column: 15, scope: !5189)
!5196 = !DILocation(line: 1136, column: 25, scope: !5189)
!5197 = !DILocation(line: 1136, column: 3, scope: !5189)
!5198 = !DILocation(line: 1137, column: 28, scope: !5112)
!5199 = !DILocation(line: 1137, column: 32, scope: !5112)
!5200 = !DILocation(line: 1137, column: 18, scope: !5112)
!5201 = !DILocation(line: 1137, column: 2, scope: !5112)
!5202 = !DILocation(line: 1137, column: 6, scope: !5112)
!5203 = !DILocation(line: 1137, column: 16, scope: !5112)
!5204 = !DILocation(line: 1138, column: 6, scope: !5205)
!5205 = distinct !DILexicalBlock(scope: !5112, file: !244, line: 1138, column: 6)
!5206 = !DILocation(line: 1138, column: 6, scope: !5112)
!5207 = !DILocation(line: 1140, column: 22, scope: !5208)
!5208 = distinct !DILexicalBlock(scope: !5205, file: !244, line: 1139, column: 4)
!5209 = !DILocation(line: 1140, column: 26, scope: !5208)
!5210 = !DILocation(line: 1140, column: 6, scope: !5208)
!5211 = !DILocation(line: 1141, column: 4, scope: !5208)
!5212 = !DILocation(line: 1144, column: 17, scope: !5213)
!5213 = distinct !DILexicalBlock(scope: !5214, file: !244, line: 1144, column: 10)
!5214 = distinct !DILexicalBlock(scope: !5205, file: !244, line: 1143, column: 4)
!5215 = !DILocation(line: 1144, column: 10, scope: !5213)
!5216 = !DILocation(line: 1144, column: 10, scope: !5214)
!5217 = !DILocalVariable(name: "saved_errno", scope: !5218, file: !244, line: 1146, type: !23)
!5218 = distinct !DILexicalBlock(scope: !5213, file: !244, line: 1145, column: 8)
!5219 = !DILocation(line: 1146, column: 7, scope: !5218)
!5220 = !DILocation(line: 1146, column: 21, scope: !5218)
!5221 = !DILocation(line: 1147, column: 10, scope: !5218)
!5222 = !DILocation(line: 1147, column: 3, scope: !5218)
!5223 = !DILocation(line: 1148, column: 3, scope: !5218)
!5224 = !DILocation(line: 1149, column: 3, scope: !5218)
!5225 = !DILocation(line: 1151, column: 13, scope: !5214)
!5226 = !DILocation(line: 1151, column: 6, scope: !5214)
!5227 = !DILocation(line: 1153, column: 10, scope: !5112)
!5228 = !DILocation(line: 1153, column: 14, scope: !5112)
!5229 = !DILocation(line: 1153, column: 2, scope: !5112)
!5230 = !DILocation(line: 1154, column: 1, scope: !5112)
!5231 = distinct !DISubprogram(name: "hash_get_n_buckets", scope: !89, file: !89, line: 151, type: !5232, isLocal: false, isDefinition: true, scopeLine: 152, flags: DIFlagPrototyped, isOptimized: false, unit: !88, variables: !25)
!5232 = !DISubroutineType(types: !5233)
!5233 = !{!91, !5234}
!5234 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5235, size: 64)
!5235 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5236)
!5236 = !DIDerivedType(tag: DW_TAG_typedef, name: "Hash_table", file: !96, line: 61, baseType: !5237)
!5237 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hash_table", file: !89, line: 53, size: 640, elements: !5238)
!5238 = !{!5239, !5245, !5248, !5249, !5250, !5251, !5253, !5256, !5259, !5262}
!5239 = !DIDerivedType(tag: DW_TAG_member, name: "bucket", scope: !5237, file: !89, line: 58, baseType: !5240, size: 64)
!5240 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5241, size: 64)
!5241 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hash_entry", file: !89, line: 47, size: 128, elements: !5242)
!5242 = !{!5243, !5244}
!5243 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !5241, file: !89, line: 49, baseType: !16, size: 64)
!5244 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !5241, file: !89, line: 50, baseType: !5240, size: 64, offset: 64)
!5245 = !DIDerivedType(tag: DW_TAG_member, name: "bucket_limit", scope: !5237, file: !89, line: 59, baseType: !5246, size: 64, offset: 64)
!5246 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5247, size: 64)
!5247 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5241)
!5248 = !DIDerivedType(tag: DW_TAG_member, name: "n_buckets", scope: !5237, file: !89, line: 60, baseType: !91, size: 64, offset: 128)
!5249 = !DIDerivedType(tag: DW_TAG_member, name: "n_buckets_used", scope: !5237, file: !89, line: 61, baseType: !91, size: 64, offset: 192)
!5250 = !DIDerivedType(tag: DW_TAG_member, name: "n_entries", scope: !5237, file: !89, line: 62, baseType: !91, size: 64, offset: 256)
!5251 = !DIDerivedType(tag: DW_TAG_member, name: "tuning", scope: !5237, file: !89, line: 65, baseType: !5252, size: 64, offset: 320)
!5252 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !94, size: 64)
!5253 = !DIDerivedType(tag: DW_TAG_member, name: "hasher", scope: !5237, file: !89, line: 72, baseType: !5254, size: 64, offset: 384)
!5254 = !DIDerivedType(tag: DW_TAG_typedef, name: "Hash_hasher", file: !96, line: 40, baseType: !5255)
!5255 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2952, size: 64)
!5256 = !DIDerivedType(tag: DW_TAG_member, name: "comparator", scope: !5237, file: !89, line: 73, baseType: !5257, size: 64, offset: 448)
!5257 = !DIDerivedType(tag: DW_TAG_typedef, name: "Hash_comparator", file: !96, line: 41, baseType: !5258)
!5258 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2974, size: 64)
!5259 = !DIDerivedType(tag: DW_TAG_member, name: "data_freer", scope: !5237, file: !89, line: 74, baseType: !5260, size: 64, offset: 512)
!5260 = !DIDerivedType(tag: DW_TAG_typedef, name: "Hash_data_freer", file: !96, line: 42, baseType: !5261)
!5261 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1457, size: 64)
!5262 = !DIDerivedType(tag: DW_TAG_member, name: "free_entry_list", scope: !5237, file: !89, line: 77, baseType: !5240, size: 64, offset: 576)
!5263 = !DILocalVariable(name: "table", arg: 1, scope: !5231, file: !89, line: 151, type: !5234)
!5264 = !DILocation(line: 151, column: 39, scope: !5231)
!5265 = !DILocation(line: 153, column: 10, scope: !5231)
!5266 = !DILocation(line: 153, column: 17, scope: !5231)
!5267 = !DILocation(line: 153, column: 3, scope: !5231)
!5268 = distinct !DISubprogram(name: "hash_get_n_buckets_used", scope: !89, file: !89, line: 159, type: !5232, isLocal: false, isDefinition: true, scopeLine: 160, flags: DIFlagPrototyped, isOptimized: false, unit: !88, variables: !25)
!5269 = !DILocalVariable(name: "table", arg: 1, scope: !5268, file: !89, line: 159, type: !5234)
!5270 = !DILocation(line: 159, column: 44, scope: !5268)
!5271 = !DILocation(line: 161, column: 10, scope: !5268)
!5272 = !DILocation(line: 161, column: 17, scope: !5268)
!5273 = !DILocation(line: 161, column: 3, scope: !5268)
!5274 = distinct !DISubprogram(name: "hash_get_n_entries", scope: !89, file: !89, line: 167, type: !5232, isLocal: false, isDefinition: true, scopeLine: 168, flags: DIFlagPrototyped, isOptimized: false, unit: !88, variables: !25)
!5275 = !DILocalVariable(name: "table", arg: 1, scope: !5274, file: !89, line: 167, type: !5234)
!5276 = !DILocation(line: 167, column: 39, scope: !5274)
!5277 = !DILocation(line: 169, column: 10, scope: !5274)
!5278 = !DILocation(line: 169, column: 17, scope: !5274)
!5279 = !DILocation(line: 169, column: 3, scope: !5274)
!5280 = distinct !DISubprogram(name: "hash_get_max_bucket_length", scope: !89, file: !89, line: 175, type: !5232, isLocal: false, isDefinition: true, scopeLine: 176, flags: DIFlagPrototyped, isOptimized: false, unit: !88, variables: !25)
!5281 = !DILocalVariable(name: "table", arg: 1, scope: !5280, file: !89, line: 175, type: !5234)
!5282 = !DILocation(line: 175, column: 47, scope: !5280)
!5283 = !DILocalVariable(name: "bucket", scope: !5280, file: !89, line: 177, type: !5246)
!5284 = !DILocation(line: 177, column: 28, scope: !5280)
!5285 = !DILocalVariable(name: "max_bucket_length", scope: !5280, file: !89, line: 178, type: !91)
!5286 = !DILocation(line: 178, column: 10, scope: !5280)
!5287 = !DILocation(line: 180, column: 17, scope: !5288)
!5288 = distinct !DILexicalBlock(scope: !5280, file: !89, line: 180, column: 3)
!5289 = !DILocation(line: 180, column: 24, scope: !5288)
!5290 = !DILocation(line: 180, column: 15, scope: !5288)
!5291 = !DILocation(line: 180, column: 8, scope: !5288)
!5292 = !DILocation(line: 180, column: 32, scope: !5293)
!5293 = distinct !DILexicalBlock(scope: !5288, file: !89, line: 180, column: 3)
!5294 = !DILocation(line: 180, column: 41, scope: !5293)
!5295 = !DILocation(line: 180, column: 48, scope: !5293)
!5296 = !DILocation(line: 180, column: 39, scope: !5293)
!5297 = !DILocation(line: 180, column: 3, scope: !5288)
!5298 = !DILocation(line: 182, column: 11, scope: !5299)
!5299 = distinct !DILexicalBlock(scope: !5300, file: !89, line: 182, column: 11)
!5300 = distinct !DILexicalBlock(scope: !5293, file: !89, line: 181, column: 5)
!5301 = !DILocation(line: 182, column: 19, scope: !5299)
!5302 = !DILocation(line: 182, column: 11, scope: !5300)
!5303 = !DILocalVariable(name: "cursor", scope: !5304, file: !89, line: 184, type: !5246)
!5304 = distinct !DILexicalBlock(scope: !5299, file: !89, line: 183, column: 2)
!5305 = !DILocation(line: 184, column: 29, scope: !5304)
!5306 = !DILocation(line: 184, column: 38, scope: !5304)
!5307 = !DILocalVariable(name: "bucket_length", scope: !5304, file: !89, line: 185, type: !91)
!5308 = !DILocation(line: 185, column: 11, scope: !5304)
!5309 = !DILocation(line: 187, column: 4, scope: !5304)
!5310 = !DILocation(line: 187, column: 20, scope: !5304)
!5311 = !DILocation(line: 187, column: 28, scope: !5304)
!5312 = !DILocation(line: 187, column: 18, scope: !5304)
!5313 = !DILocation(line: 187, column: 34, scope: !5304)
!5314 = !DILocation(line: 188, column: 19, scope: !5304)
!5315 = distinct !{!5315, !5309, !5314}
!5316 = !DILocation(line: 190, column: 8, scope: !5317)
!5317 = distinct !DILexicalBlock(scope: !5304, file: !89, line: 190, column: 8)
!5318 = !DILocation(line: 190, column: 24, scope: !5317)
!5319 = !DILocation(line: 190, column: 22, scope: !5317)
!5320 = !DILocation(line: 190, column: 8, scope: !5304)
!5321 = !DILocation(line: 191, column: 26, scope: !5317)
!5322 = !DILocation(line: 191, column: 24, scope: !5317)
!5323 = !DILocation(line: 191, column: 6, scope: !5317)
!5324 = !DILocation(line: 192, column: 2, scope: !5304)
!5325 = !DILocation(line: 193, column: 5, scope: !5300)
!5326 = !DILocation(line: 180, column: 68, scope: !5293)
!5327 = !DILocation(line: 180, column: 3, scope: !5293)
!5328 = distinct !{!5328, !5297, !5329}
!5329 = !DILocation(line: 193, column: 5, scope: !5288)
!5330 = !DILocation(line: 195, column: 10, scope: !5280)
!5331 = !DILocation(line: 195, column: 3, scope: !5280)
!5332 = distinct !DISubprogram(name: "hash_table_ok", scope: !89, file: !89, line: 202, type: !5333, isLocal: false, isDefinition: true, scopeLine: 203, flags: DIFlagPrototyped, isOptimized: false, unit: !88, variables: !25)
!5333 = !DISubroutineType(types: !5334)
!5334 = !{!79, !5234}
!5335 = !DILocalVariable(name: "table", arg: 1, scope: !5332, file: !89, line: 202, type: !5234)
!5336 = !DILocation(line: 202, column: 34, scope: !5332)
!5337 = !DILocalVariable(name: "bucket", scope: !5332, file: !89, line: 204, type: !5246)
!5338 = !DILocation(line: 204, column: 28, scope: !5332)
!5339 = !DILocalVariable(name: "n_buckets_used", scope: !5332, file: !89, line: 205, type: !91)
!5340 = !DILocation(line: 205, column: 10, scope: !5332)
!5341 = !DILocalVariable(name: "n_entries", scope: !5332, file: !89, line: 206, type: !91)
!5342 = !DILocation(line: 206, column: 10, scope: !5332)
!5343 = !DILocation(line: 208, column: 17, scope: !5344)
!5344 = distinct !DILexicalBlock(scope: !5332, file: !89, line: 208, column: 3)
!5345 = !DILocation(line: 208, column: 24, scope: !5344)
!5346 = !DILocation(line: 208, column: 15, scope: !5344)
!5347 = !DILocation(line: 208, column: 8, scope: !5344)
!5348 = !DILocation(line: 208, column: 32, scope: !5349)
!5349 = distinct !DILexicalBlock(scope: !5344, file: !89, line: 208, column: 3)
!5350 = !DILocation(line: 208, column: 41, scope: !5349)
!5351 = !DILocation(line: 208, column: 48, scope: !5349)
!5352 = !DILocation(line: 208, column: 39, scope: !5349)
!5353 = !DILocation(line: 208, column: 3, scope: !5344)
!5354 = !DILocation(line: 210, column: 11, scope: !5355)
!5355 = distinct !DILexicalBlock(scope: !5356, file: !89, line: 210, column: 11)
!5356 = distinct !DILexicalBlock(scope: !5349, file: !89, line: 209, column: 5)
!5357 = !DILocation(line: 210, column: 19, scope: !5355)
!5358 = !DILocation(line: 210, column: 11, scope: !5356)
!5359 = !DILocalVariable(name: "cursor", scope: !5360, file: !89, line: 212, type: !5246)
!5360 = distinct !DILexicalBlock(scope: !5355, file: !89, line: 211, column: 2)
!5361 = !DILocation(line: 212, column: 29, scope: !5360)
!5362 = !DILocation(line: 212, column: 38, scope: !5360)
!5363 = !DILocation(line: 215, column: 18, scope: !5360)
!5364 = !DILocation(line: 216, column: 13, scope: !5360)
!5365 = !DILocation(line: 219, column: 4, scope: !5360)
!5366 = !DILocation(line: 219, column: 20, scope: !5360)
!5367 = !DILocation(line: 219, column: 28, scope: !5360)
!5368 = !DILocation(line: 219, column: 18, scope: !5360)
!5369 = !DILocation(line: 219, column: 34, scope: !5360)
!5370 = !DILocation(line: 220, column: 15, scope: !5360)
!5371 = distinct !{!5371, !5365, !5370}
!5372 = !DILocation(line: 221, column: 2, scope: !5360)
!5373 = !DILocation(line: 222, column: 5, scope: !5356)
!5374 = !DILocation(line: 208, column: 68, scope: !5349)
!5375 = !DILocation(line: 208, column: 3, scope: !5349)
!5376 = distinct !{!5376, !5353, !5377}
!5377 = !DILocation(line: 222, column: 5, scope: !5344)
!5378 = !DILocation(line: 224, column: 7, scope: !5379)
!5379 = distinct !DILexicalBlock(scope: !5332, file: !89, line: 224, column: 7)
!5380 = !DILocation(line: 224, column: 25, scope: !5379)
!5381 = !DILocation(line: 224, column: 32, scope: !5379)
!5382 = !DILocation(line: 224, column: 22, scope: !5379)
!5383 = !DILocation(line: 224, column: 47, scope: !5379)
!5384 = !DILocation(line: 224, column: 50, scope: !5379)
!5385 = !DILocation(line: 224, column: 63, scope: !5379)
!5386 = !DILocation(line: 224, column: 70, scope: !5379)
!5387 = !DILocation(line: 224, column: 60, scope: !5379)
!5388 = !DILocation(line: 224, column: 7, scope: !5332)
!5389 = !DILocation(line: 225, column: 5, scope: !5379)
!5390 = !DILocation(line: 227, column: 3, scope: !5332)
!5391 = !DILocation(line: 228, column: 1, scope: !5332)
!5392 = distinct !DISubprogram(name: "hash_print_statistics", scope: !89, file: !89, line: 231, type: !5393, isLocal: false, isDefinition: true, scopeLine: 232, flags: DIFlagPrototyped, isOptimized: false, unit: !88, variables: !25)
!5393 = !DISubroutineType(types: !5394)
!5394 = !{null, !5234, !5395}
!5395 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5396, size: 64)
!5396 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !1769, line: 7, baseType: !5397)
!5397 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !1771, line: 245, size: 1728, elements: !5398)
!5398 = !{!5399, !5400, !5401, !5402, !5403, !5404, !5405, !5406, !5407, !5408, !5409, !5410, !5411, !5419, !5420, !5421, !5422, !5423, !5424, !5425, !5426, !5427, !5428, !5429, !5430, !5431, !5432, !5433, !5434}
!5399 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !5397, file: !1771, line: 246, baseType: !23, size: 32)
!5400 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !5397, file: !1771, line: 251, baseType: !15, size: 64, offset: 64)
!5401 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !5397, file: !1771, line: 252, baseType: !15, size: 64, offset: 128)
!5402 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !5397, file: !1771, line: 253, baseType: !15, size: 64, offset: 192)
!5403 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !5397, file: !1771, line: 254, baseType: !15, size: 64, offset: 256)
!5404 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !5397, file: !1771, line: 255, baseType: !15, size: 64, offset: 320)
!5405 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !5397, file: !1771, line: 256, baseType: !15, size: 64, offset: 384)
!5406 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !5397, file: !1771, line: 257, baseType: !15, size: 64, offset: 448)
!5407 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !5397, file: !1771, line: 258, baseType: !15, size: 64, offset: 512)
!5408 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !5397, file: !1771, line: 260, baseType: !15, size: 64, offset: 576)
!5409 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !5397, file: !1771, line: 261, baseType: !15, size: 64, offset: 640)
!5410 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !5397, file: !1771, line: 262, baseType: !15, size: 64, offset: 704)
!5411 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !5397, file: !1771, line: 264, baseType: !5412, size: 64, offset: 768)
!5412 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5413, size: 64)
!5413 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !1771, line: 160, size: 192, elements: !5414)
!5414 = !{!5415, !5416, !5418}
!5415 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !5413, file: !1771, line: 161, baseType: !5412, size: 64)
!5416 = !DIDerivedType(tag: DW_TAG_member, name: "_sbuf", scope: !5413, file: !1771, line: 162, baseType: !5417, size: 64, offset: 64)
!5417 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5397, size: 64)
!5418 = !DIDerivedType(tag: DW_TAG_member, name: "_pos", scope: !5413, file: !1771, line: 166, baseType: !23, size: 32, offset: 128)
!5419 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !5397, file: !1771, line: 266, baseType: !5417, size: 64, offset: 832)
!5420 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !5397, file: !1771, line: 268, baseType: !23, size: 32, offset: 896)
!5421 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !5397, file: !1771, line: 272, baseType: !23, size: 32, offset: 928)
!5422 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !5397, file: !1771, line: 274, baseType: !302, size: 64, offset: 960)
!5423 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !5397, file: !1771, line: 278, baseType: !143, size: 16, offset: 1024)
!5424 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !5397, file: !1771, line: 279, baseType: !1799, size: 8, offset: 1040)
!5425 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !5397, file: !1771, line: 280, baseType: !324, size: 8, offset: 1048)
!5426 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !5397, file: !1771, line: 284, baseType: !1802, size: 64, offset: 1088)
!5427 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !5397, file: !1771, line: 293, baseType: !1805, size: 64, offset: 1152)
!5428 = !DIDerivedType(tag: DW_TAG_member, name: "__pad1", scope: !5397, file: !1771, line: 301, baseType: !16, size: 64, offset: 1216)
!5429 = !DIDerivedType(tag: DW_TAG_member, name: "__pad2", scope: !5397, file: !1771, line: 302, baseType: !16, size: 64, offset: 1280)
!5430 = !DIDerivedType(tag: DW_TAG_member, name: "__pad3", scope: !5397, file: !1771, line: 303, baseType: !16, size: 64, offset: 1344)
!5431 = !DIDerivedType(tag: DW_TAG_member, name: "__pad4", scope: !5397, file: !1771, line: 304, baseType: !16, size: 64, offset: 1408)
!5432 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !5397, file: !1771, line: 306, baseType: !91, size: 64, offset: 1472)
!5433 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !5397, file: !1771, line: 307, baseType: !23, size: 32, offset: 1536)
!5434 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !5397, file: !1771, line: 309, baseType: !1813, size: 160, offset: 1568)
!5435 = !DILocalVariable(name: "table", arg: 1, scope: !5392, file: !89, line: 231, type: !5234)
!5436 = !DILocation(line: 231, column: 42, scope: !5392)
!5437 = !DILocalVariable(name: "stream", arg: 2, scope: !5392, file: !89, line: 231, type: !5395)
!5438 = !DILocation(line: 231, column: 55, scope: !5392)
!5439 = !DILocalVariable(name: "n_entries", scope: !5392, file: !89, line: 233, type: !91)
!5440 = !DILocation(line: 233, column: 10, scope: !5392)
!5441 = !DILocation(line: 233, column: 42, scope: !5392)
!5442 = !DILocation(line: 233, column: 22, scope: !5392)
!5443 = !DILocalVariable(name: "n_buckets", scope: !5392, file: !89, line: 234, type: !91)
!5444 = !DILocation(line: 234, column: 10, scope: !5392)
!5445 = !DILocation(line: 234, column: 42, scope: !5392)
!5446 = !DILocation(line: 234, column: 22, scope: !5392)
!5447 = !DILocalVariable(name: "n_buckets_used", scope: !5392, file: !89, line: 235, type: !91)
!5448 = !DILocation(line: 235, column: 10, scope: !5392)
!5449 = !DILocation(line: 235, column: 52, scope: !5392)
!5450 = !DILocation(line: 235, column: 27, scope: !5392)
!5451 = !DILocalVariable(name: "max_bucket_length", scope: !5392, file: !89, line: 236, type: !91)
!5452 = !DILocation(line: 236, column: 10, scope: !5392)
!5453 = !DILocation(line: 236, column: 58, scope: !5392)
!5454 = !DILocation(line: 236, column: 30, scope: !5392)
!5455 = !DILocation(line: 238, column: 12, scope: !5392)
!5456 = !DILocation(line: 238, column: 68, scope: !5392)
!5457 = !DILocation(line: 238, column: 3, scope: !5392)
!5458 = !DILocation(line: 239, column: 12, scope: !5392)
!5459 = !DILocation(line: 239, column: 68, scope: !5392)
!5460 = !DILocation(line: 239, column: 3, scope: !5392)
!5461 = !DILocation(line: 240, column: 12, scope: !5392)
!5462 = !DILocation(line: 241, column: 25, scope: !5392)
!5463 = !DILocation(line: 242, column: 14, scope: !5392)
!5464 = !DILocation(line: 242, column: 12, scope: !5392)
!5465 = !DILocation(line: 242, column: 32, scope: !5392)
!5466 = !DILocation(line: 242, column: 30, scope: !5392)
!5467 = !DILocation(line: 240, column: 3, scope: !5392)
!5468 = !DILocation(line: 243, column: 12, scope: !5392)
!5469 = !DILocation(line: 244, column: 25, scope: !5392)
!5470 = !DILocation(line: 243, column: 3, scope: !5392)
!5471 = !DILocation(line: 245, column: 1, scope: !5392)
!5472 = distinct !DISubprogram(name: "hash_lookup", scope: !89, file: !89, line: 251, type: !5473, isLocal: false, isDefinition: true, scopeLine: 252, flags: DIFlagPrototyped, isOptimized: false, unit: !88, variables: !25)
!5473 = !DISubroutineType(types: !5474)
!5474 = !{!16, !5234, !404}
!5475 = !DILocalVariable(name: "table", arg: 1, scope: !5472, file: !89, line: 251, type: !5234)
!5476 = !DILocation(line: 251, column: 32, scope: !5472)
!5477 = !DILocalVariable(name: "entry", arg: 2, scope: !5472, file: !89, line: 251, type: !404)
!5478 = !DILocation(line: 251, column: 51, scope: !5472)
!5479 = !DILocalVariable(name: "bucket", scope: !5472, file: !89, line: 253, type: !5246)
!5480 = !DILocation(line: 253, column: 28, scope: !5472)
!5481 = !DILocation(line: 254, column: 7, scope: !5472)
!5482 = !DILocation(line: 254, column: 14, scope: !5472)
!5483 = !DILocation(line: 254, column: 23, scope: !5472)
!5484 = !DILocation(line: 254, column: 30, scope: !5472)
!5485 = !DILocation(line: 254, column: 38, scope: !5472)
!5486 = !DILocation(line: 254, column: 45, scope: !5472)
!5487 = !DILocation(line: 254, column: 52, scope: !5472)
!5488 = !DILocation(line: 254, column: 21, scope: !5472)
!5489 = !DILocalVariable(name: "cursor", scope: !5472, file: !89, line: 255, type: !5246)
!5490 = !DILocation(line: 255, column: 28, scope: !5472)
!5491 = !DILocation(line: 257, column: 10, scope: !5492)
!5492 = distinct !DILexicalBlock(scope: !5472, file: !89, line: 257, column: 7)
!5493 = !DILocation(line: 257, column: 19, scope: !5492)
!5494 = !DILocation(line: 257, column: 26, scope: !5492)
!5495 = !DILocation(line: 257, column: 17, scope: !5492)
!5496 = !DILocation(line: 257, column: 7, scope: !5472)
!5497 = !DILocation(line: 258, column: 5, scope: !5492)
!5498 = !DILocation(line: 260, column: 7, scope: !5499)
!5499 = distinct !DILexicalBlock(scope: !5472, file: !89, line: 260, column: 7)
!5500 = !DILocation(line: 260, column: 15, scope: !5499)
!5501 = !DILocation(line: 260, column: 20, scope: !5499)
!5502 = !DILocation(line: 260, column: 7, scope: !5472)
!5503 = !DILocation(line: 261, column: 5, scope: !5499)
!5504 = !DILocation(line: 263, column: 17, scope: !5505)
!5505 = distinct !DILexicalBlock(scope: !5472, file: !89, line: 263, column: 3)
!5506 = !DILocation(line: 263, column: 15, scope: !5505)
!5507 = !DILocation(line: 263, column: 8, scope: !5505)
!5508 = !DILocation(line: 263, column: 25, scope: !5509)
!5509 = distinct !DILexicalBlock(scope: !5505, file: !89, line: 263, column: 3)
!5510 = !DILocation(line: 263, column: 3, scope: !5505)
!5511 = !DILocation(line: 264, column: 9, scope: !5512)
!5512 = distinct !DILexicalBlock(scope: !5509, file: !89, line: 264, column: 9)
!5513 = !DILocation(line: 264, column: 18, scope: !5512)
!5514 = !DILocation(line: 264, column: 26, scope: !5512)
!5515 = !DILocation(line: 264, column: 15, scope: !5512)
!5516 = !DILocation(line: 264, column: 31, scope: !5512)
!5517 = !DILocation(line: 264, column: 34, scope: !5512)
!5518 = !DILocation(line: 264, column: 41, scope: !5512)
!5519 = !DILocation(line: 264, column: 53, scope: !5512)
!5520 = !DILocation(line: 264, column: 60, scope: !5512)
!5521 = !DILocation(line: 264, column: 68, scope: !5512)
!5522 = !DILocation(line: 264, column: 9, scope: !5509)
!5523 = !DILocation(line: 265, column: 14, scope: !5512)
!5524 = !DILocation(line: 265, column: 22, scope: !5512)
!5525 = !DILocation(line: 265, column: 7, scope: !5512)
!5526 = !DILocation(line: 264, column: 72, scope: !5512)
!5527 = !DILocation(line: 263, column: 42, scope: !5509)
!5528 = !DILocation(line: 263, column: 50, scope: !5509)
!5529 = !DILocation(line: 263, column: 40, scope: !5509)
!5530 = !DILocation(line: 263, column: 3, scope: !5509)
!5531 = distinct !{!5531, !5510, !5532}
!5532 = !DILocation(line: 265, column: 22, scope: !5505)
!5533 = !DILocation(line: 267, column: 3, scope: !5472)
!5534 = !DILocation(line: 268, column: 1, scope: !5472)
!5535 = distinct !DISubprogram(name: "hash_get_first", scope: !89, file: !89, line: 282, type: !5536, isLocal: false, isDefinition: true, scopeLine: 283, flags: DIFlagPrototyped, isOptimized: false, unit: !88, variables: !25)
!5536 = !DISubroutineType(types: !5537)
!5537 = !{!16, !5234}
!5538 = !DILocalVariable(name: "table", arg: 1, scope: !5535, file: !89, line: 282, type: !5234)
!5539 = !DILocation(line: 282, column: 35, scope: !5535)
!5540 = !DILocalVariable(name: "bucket", scope: !5535, file: !89, line: 284, type: !5246)
!5541 = !DILocation(line: 284, column: 28, scope: !5535)
!5542 = !DILocation(line: 286, column: 7, scope: !5543)
!5543 = distinct !DILexicalBlock(scope: !5535, file: !89, line: 286, column: 7)
!5544 = !DILocation(line: 286, column: 14, scope: !5543)
!5545 = !DILocation(line: 286, column: 24, scope: !5543)
!5546 = !DILocation(line: 286, column: 7, scope: !5535)
!5547 = !DILocation(line: 287, column: 5, scope: !5543)
!5548 = !DILocation(line: 289, column: 17, scope: !5549)
!5549 = distinct !DILexicalBlock(scope: !5535, file: !89, line: 289, column: 3)
!5550 = !DILocation(line: 289, column: 24, scope: !5549)
!5551 = !DILocation(line: 289, column: 15, scope: !5549)
!5552 = !DILocation(line: 289, column: 8, scope: !5549)
!5553 = !DILocation(line: 290, column: 12, scope: !5554)
!5554 = distinct !DILexicalBlock(scope: !5555, file: !89, line: 290, column: 9)
!5555 = distinct !DILexicalBlock(scope: !5549, file: !89, line: 289, column: 3)
!5556 = !DILocation(line: 290, column: 21, scope: !5554)
!5557 = !DILocation(line: 290, column: 28, scope: !5554)
!5558 = !DILocation(line: 290, column: 19, scope: !5554)
!5559 = !DILocation(line: 290, column: 9, scope: !5555)
!5560 = !DILocation(line: 291, column: 7, scope: !5554)
!5561 = !DILocation(line: 292, column: 14, scope: !5562)
!5562 = distinct !DILexicalBlock(scope: !5554, file: !89, line: 292, column: 14)
!5563 = !DILocation(line: 292, column: 22, scope: !5562)
!5564 = !DILocation(line: 292, column: 14, scope: !5554)
!5565 = !DILocation(line: 293, column: 14, scope: !5562)
!5566 = !DILocation(line: 293, column: 22, scope: !5562)
!5567 = !DILocation(line: 293, column: 7, scope: !5562)
!5568 = !DILocation(line: 290, column: 40, scope: !5554)
!5569 = !DILocation(line: 289, column: 40, scope: !5555)
!5570 = !DILocation(line: 289, column: 3, scope: !5555)
!5571 = distinct !{!5571, !5572, !5573}
!5572 = !DILocation(line: 289, column: 3, scope: !5549)
!5573 = !DILocation(line: 293, column: 22, scope: !5549)
!5574 = !DILocation(line: 294, column: 1, scope: !5535)
!5575 = distinct !DISubprogram(name: "hash_get_next", scope: !89, file: !89, line: 301, type: !5473, isLocal: false, isDefinition: true, scopeLine: 302, flags: DIFlagPrototyped, isOptimized: false, unit: !88, variables: !25)
!5576 = !DILocalVariable(name: "table", arg: 1, scope: !5575, file: !89, line: 301, type: !5234)
!5577 = !DILocation(line: 301, column: 34, scope: !5575)
!5578 = !DILocalVariable(name: "entry", arg: 2, scope: !5575, file: !89, line: 301, type: !404)
!5579 = !DILocation(line: 301, column: 53, scope: !5575)
!5580 = !DILocalVariable(name: "bucket", scope: !5575, file: !89, line: 303, type: !5246)
!5581 = !DILocation(line: 303, column: 28, scope: !5575)
!5582 = !DILocation(line: 304, column: 7, scope: !5575)
!5583 = !DILocation(line: 304, column: 14, scope: !5575)
!5584 = !DILocation(line: 304, column: 23, scope: !5575)
!5585 = !DILocation(line: 304, column: 30, scope: !5575)
!5586 = !DILocation(line: 304, column: 38, scope: !5575)
!5587 = !DILocation(line: 304, column: 45, scope: !5575)
!5588 = !DILocation(line: 304, column: 52, scope: !5575)
!5589 = !DILocation(line: 304, column: 21, scope: !5575)
!5590 = !DILocalVariable(name: "cursor", scope: !5575, file: !89, line: 305, type: !5246)
!5591 = !DILocation(line: 305, column: 28, scope: !5575)
!5592 = !DILocation(line: 307, column: 10, scope: !5593)
!5593 = distinct !DILexicalBlock(scope: !5575, file: !89, line: 307, column: 7)
!5594 = !DILocation(line: 307, column: 19, scope: !5593)
!5595 = !DILocation(line: 307, column: 26, scope: !5593)
!5596 = !DILocation(line: 307, column: 17, scope: !5593)
!5597 = !DILocation(line: 307, column: 7, scope: !5575)
!5598 = !DILocation(line: 308, column: 5, scope: !5593)
!5599 = !DILocation(line: 311, column: 17, scope: !5600)
!5600 = distinct !DILexicalBlock(scope: !5575, file: !89, line: 311, column: 3)
!5601 = !DILocation(line: 311, column: 15, scope: !5600)
!5602 = !DILocation(line: 311, column: 8, scope: !5600)
!5603 = !DILocation(line: 311, column: 25, scope: !5604)
!5604 = distinct !DILexicalBlock(scope: !5600, file: !89, line: 311, column: 3)
!5605 = !DILocation(line: 311, column: 3, scope: !5600)
!5606 = !DILocation(line: 312, column: 9, scope: !5607)
!5607 = distinct !DILexicalBlock(scope: !5604, file: !89, line: 312, column: 9)
!5608 = !DILocation(line: 312, column: 17, scope: !5607)
!5609 = !DILocation(line: 312, column: 25, scope: !5607)
!5610 = !DILocation(line: 312, column: 22, scope: !5607)
!5611 = !DILocation(line: 312, column: 31, scope: !5607)
!5612 = !DILocation(line: 312, column: 34, scope: !5607)
!5613 = !DILocation(line: 312, column: 42, scope: !5607)
!5614 = !DILocation(line: 312, column: 9, scope: !5604)
!5615 = !DILocation(line: 313, column: 14, scope: !5607)
!5616 = !DILocation(line: 313, column: 22, scope: !5607)
!5617 = !DILocation(line: 313, column: 28, scope: !5607)
!5618 = !DILocation(line: 313, column: 7, scope: !5607)
!5619 = !DILocation(line: 311, column: 42, scope: !5604)
!5620 = !DILocation(line: 311, column: 50, scope: !5604)
!5621 = !DILocation(line: 311, column: 40, scope: !5604)
!5622 = !DILocation(line: 311, column: 3, scope: !5604)
!5623 = distinct !{!5623, !5605, !5624}
!5624 = !DILocation(line: 313, column: 28, scope: !5600)
!5625 = !DILocation(line: 316, column: 3, scope: !5575)
!5626 = !DILocation(line: 316, column: 10, scope: !5575)
!5627 = !DILocation(line: 316, column: 21, scope: !5575)
!5628 = !DILocation(line: 316, column: 28, scope: !5575)
!5629 = !DILocation(line: 316, column: 19, scope: !5575)
!5630 = !DILocation(line: 317, column: 9, scope: !5631)
!5631 = distinct !DILexicalBlock(scope: !5575, file: !89, line: 317, column: 9)
!5632 = !DILocation(line: 317, column: 17, scope: !5631)
!5633 = !DILocation(line: 317, column: 9, scope: !5575)
!5634 = !DILocation(line: 318, column: 14, scope: !5631)
!5635 = !DILocation(line: 318, column: 22, scope: !5631)
!5636 = !DILocation(line: 318, column: 7, scope: !5631)
!5637 = distinct !{!5637, !5625, !5638}
!5638 = !DILocation(line: 318, column: 22, scope: !5575)
!5639 = !DILocation(line: 321, column: 3, scope: !5575)
!5640 = !DILocation(line: 322, column: 1, scope: !5575)
!5641 = distinct !DISubprogram(name: "hash_get_entries", scope: !89, file: !89, line: 329, type: !5642, isLocal: false, isDefinition: true, scopeLine: 331, flags: DIFlagPrototyped, isOptimized: false, unit: !88, variables: !25)
!5642 = !DISubroutineType(types: !5643)
!5643 = !{!91, !5234, !5644, !91}
!5644 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16, size: 64)
!5645 = !DILocalVariable(name: "table", arg: 1, scope: !5641, file: !89, line: 329, type: !5234)
!5646 = !DILocation(line: 329, column: 37, scope: !5641)
!5647 = !DILocalVariable(name: "buffer", arg: 2, scope: !5641, file: !89, line: 329, type: !5644)
!5648 = !DILocation(line: 329, column: 51, scope: !5641)
!5649 = !DILocalVariable(name: "buffer_size", arg: 3, scope: !5641, file: !89, line: 330, type: !91)
!5650 = !DILocation(line: 330, column: 12, scope: !5641)
!5651 = !DILocalVariable(name: "counter", scope: !5641, file: !89, line: 332, type: !91)
!5652 = !DILocation(line: 332, column: 10, scope: !5641)
!5653 = !DILocalVariable(name: "bucket", scope: !5641, file: !89, line: 333, type: !5246)
!5654 = !DILocation(line: 333, column: 28, scope: !5641)
!5655 = !DILocalVariable(name: "cursor", scope: !5641, file: !89, line: 334, type: !5246)
!5656 = !DILocation(line: 334, column: 28, scope: !5641)
!5657 = !DILocation(line: 336, column: 17, scope: !5658)
!5658 = distinct !DILexicalBlock(scope: !5641, file: !89, line: 336, column: 3)
!5659 = !DILocation(line: 336, column: 24, scope: !5658)
!5660 = !DILocation(line: 336, column: 15, scope: !5658)
!5661 = !DILocation(line: 336, column: 8, scope: !5658)
!5662 = !DILocation(line: 336, column: 32, scope: !5663)
!5663 = distinct !DILexicalBlock(scope: !5658, file: !89, line: 336, column: 3)
!5664 = !DILocation(line: 336, column: 41, scope: !5663)
!5665 = !DILocation(line: 336, column: 48, scope: !5663)
!5666 = !DILocation(line: 336, column: 39, scope: !5663)
!5667 = !DILocation(line: 336, column: 3, scope: !5658)
!5668 = !DILocation(line: 338, column: 11, scope: !5669)
!5669 = distinct !DILexicalBlock(scope: !5670, file: !89, line: 338, column: 11)
!5670 = distinct !DILexicalBlock(scope: !5663, file: !89, line: 337, column: 5)
!5671 = !DILocation(line: 338, column: 19, scope: !5669)
!5672 = !DILocation(line: 338, column: 11, scope: !5670)
!5673 = !DILocation(line: 340, column: 18, scope: !5674)
!5674 = distinct !DILexicalBlock(scope: !5675, file: !89, line: 340, column: 4)
!5675 = distinct !DILexicalBlock(scope: !5669, file: !89, line: 339, column: 2)
!5676 = !DILocation(line: 340, column: 16, scope: !5674)
!5677 = !DILocation(line: 340, column: 9, scope: !5674)
!5678 = !DILocation(line: 340, column: 26, scope: !5679)
!5679 = distinct !DILexicalBlock(scope: !5674, file: !89, line: 340, column: 4)
!5680 = !DILocation(line: 340, column: 4, scope: !5674)
!5681 = !DILocation(line: 342, column: 12, scope: !5682)
!5682 = distinct !DILexicalBlock(scope: !5683, file: !89, line: 342, column: 12)
!5683 = distinct !DILexicalBlock(scope: !5679, file: !89, line: 341, column: 6)
!5684 = !DILocation(line: 342, column: 23, scope: !5682)
!5685 = !DILocation(line: 342, column: 20, scope: !5682)
!5686 = !DILocation(line: 342, column: 12, scope: !5683)
!5687 = !DILocation(line: 343, column: 10, scope: !5682)
!5688 = !DILocation(line: 343, column: 3, scope: !5682)
!5689 = !DILocation(line: 344, column: 28, scope: !5683)
!5690 = !DILocation(line: 344, column: 36, scope: !5683)
!5691 = !DILocation(line: 344, column: 8, scope: !5683)
!5692 = !DILocation(line: 344, column: 22, scope: !5683)
!5693 = !DILocation(line: 344, column: 26, scope: !5683)
!5694 = !DILocation(line: 345, column: 6, scope: !5683)
!5695 = !DILocation(line: 340, column: 43, scope: !5679)
!5696 = !DILocation(line: 340, column: 51, scope: !5679)
!5697 = !DILocation(line: 340, column: 41, scope: !5679)
!5698 = !DILocation(line: 340, column: 4, scope: !5679)
!5699 = distinct !{!5699, !5680, !5700}
!5700 = !DILocation(line: 345, column: 6, scope: !5674)
!5701 = !DILocation(line: 346, column: 2, scope: !5675)
!5702 = !DILocation(line: 347, column: 5, scope: !5670)
!5703 = !DILocation(line: 336, column: 68, scope: !5663)
!5704 = !DILocation(line: 336, column: 3, scope: !5663)
!5705 = distinct !{!5705, !5667, !5706}
!5706 = !DILocation(line: 347, column: 5, scope: !5658)
!5707 = !DILocation(line: 349, column: 10, scope: !5641)
!5708 = !DILocation(line: 349, column: 3, scope: !5641)
!5709 = !DILocation(line: 350, column: 1, scope: !5641)
!5710 = distinct !DISubprogram(name: "hash_do_for_each", scope: !89, file: !89, line: 361, type: !5711, isLocal: false, isDefinition: true, scopeLine: 363, flags: DIFlagPrototyped, isOptimized: false, unit: !88, variables: !25)
!5711 = !DISubroutineType(types: !5712)
!5712 = !{!91, !5234, !5713, !16}
!5713 = !DIDerivedType(tag: DW_TAG_typedef, name: "Hash_processor", file: !96, line: 43, baseType: !5714)
!5714 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5715, size: 64)
!5715 = !DISubroutineType(types: !5716)
!5716 = !{!79, !16, !16}
!5717 = !DILocalVariable(name: "table", arg: 1, scope: !5710, file: !89, line: 361, type: !5234)
!5718 = !DILocation(line: 361, column: 37, scope: !5710)
!5719 = !DILocalVariable(name: "processor", arg: 2, scope: !5710, file: !89, line: 361, type: !5713)
!5720 = !DILocation(line: 361, column: 59, scope: !5710)
!5721 = !DILocalVariable(name: "processor_data", arg: 3, scope: !5710, file: !89, line: 362, type: !16)
!5722 = !DILocation(line: 362, column: 11, scope: !5710)
!5723 = !DILocalVariable(name: "counter", scope: !5710, file: !89, line: 364, type: !91)
!5724 = !DILocation(line: 364, column: 10, scope: !5710)
!5725 = !DILocalVariable(name: "bucket", scope: !5710, file: !89, line: 365, type: !5246)
!5726 = !DILocation(line: 365, column: 28, scope: !5710)
!5727 = !DILocalVariable(name: "cursor", scope: !5710, file: !89, line: 366, type: !5246)
!5728 = !DILocation(line: 366, column: 28, scope: !5710)
!5729 = !DILocation(line: 368, column: 17, scope: !5730)
!5730 = distinct !DILexicalBlock(scope: !5710, file: !89, line: 368, column: 3)
!5731 = !DILocation(line: 368, column: 24, scope: !5730)
!5732 = !DILocation(line: 368, column: 15, scope: !5730)
!5733 = !DILocation(line: 368, column: 8, scope: !5730)
!5734 = !DILocation(line: 368, column: 32, scope: !5735)
!5735 = distinct !DILexicalBlock(scope: !5730, file: !89, line: 368, column: 3)
!5736 = !DILocation(line: 368, column: 41, scope: !5735)
!5737 = !DILocation(line: 368, column: 48, scope: !5735)
!5738 = !DILocation(line: 368, column: 39, scope: !5735)
!5739 = !DILocation(line: 368, column: 3, scope: !5730)
!5740 = !DILocation(line: 370, column: 11, scope: !5741)
!5741 = distinct !DILexicalBlock(scope: !5742, file: !89, line: 370, column: 11)
!5742 = distinct !DILexicalBlock(scope: !5735, file: !89, line: 369, column: 5)
!5743 = !DILocation(line: 370, column: 19, scope: !5741)
!5744 = !DILocation(line: 370, column: 11, scope: !5742)
!5745 = !DILocation(line: 372, column: 18, scope: !5746)
!5746 = distinct !DILexicalBlock(scope: !5747, file: !89, line: 372, column: 4)
!5747 = distinct !DILexicalBlock(scope: !5741, file: !89, line: 371, column: 2)
!5748 = !DILocation(line: 372, column: 16, scope: !5746)
!5749 = !DILocation(line: 372, column: 9, scope: !5746)
!5750 = !DILocation(line: 372, column: 26, scope: !5751)
!5751 = distinct !DILexicalBlock(scope: !5746, file: !89, line: 372, column: 4)
!5752 = !DILocation(line: 372, column: 4, scope: !5746)
!5753 = !DILocation(line: 374, column: 14, scope: !5754)
!5754 = distinct !DILexicalBlock(scope: !5755, file: !89, line: 374, column: 12)
!5755 = distinct !DILexicalBlock(scope: !5751, file: !89, line: 373, column: 6)
!5756 = !DILocation(line: 374, column: 25, scope: !5754)
!5757 = !DILocation(line: 374, column: 33, scope: !5754)
!5758 = !DILocation(line: 374, column: 39, scope: !5754)
!5759 = !DILocation(line: 374, column: 12, scope: !5755)
!5760 = !DILocation(line: 375, column: 10, scope: !5754)
!5761 = !DILocation(line: 375, column: 3, scope: !5754)
!5762 = !DILocation(line: 376, column: 15, scope: !5755)
!5763 = !DILocation(line: 377, column: 6, scope: !5755)
!5764 = !DILocation(line: 372, column: 43, scope: !5751)
!5765 = !DILocation(line: 372, column: 51, scope: !5751)
!5766 = !DILocation(line: 372, column: 41, scope: !5751)
!5767 = !DILocation(line: 372, column: 4, scope: !5751)
!5768 = distinct !{!5768, !5752, !5769}
!5769 = !DILocation(line: 377, column: 6, scope: !5746)
!5770 = !DILocation(line: 378, column: 2, scope: !5747)
!5771 = !DILocation(line: 379, column: 5, scope: !5742)
!5772 = !DILocation(line: 368, column: 68, scope: !5735)
!5773 = !DILocation(line: 368, column: 3, scope: !5735)
!5774 = distinct !{!5774, !5739, !5775}
!5775 = !DILocation(line: 379, column: 5, scope: !5730)
!5776 = !DILocation(line: 381, column: 10, scope: !5710)
!5777 = !DILocation(line: 381, column: 3, scope: !5710)
!5778 = !DILocation(line: 382, column: 1, scope: !5710)
!5779 = distinct !DISubprogram(name: "hash_string", scope: !89, file: !89, line: 421, type: !5780, isLocal: false, isDefinition: true, scopeLine: 422, flags: DIFlagPrototyped, isOptimized: false, unit: !88, variables: !25)
!5780 = !DISubroutineType(types: !5781)
!5781 = !{!91, !12, !91}
!5782 = !DILocalVariable(name: "string", arg: 1, scope: !5779, file: !89, line: 421, type: !12)
!5783 = !DILocation(line: 421, column: 26, scope: !5779)
!5784 = !DILocalVariable(name: "n_buckets", arg: 2, scope: !5779, file: !89, line: 421, type: !91)
!5785 = !DILocation(line: 421, column: 41, scope: !5779)
!5786 = !DILocalVariable(name: "value", scope: !5779, file: !89, line: 423, type: !91)
!5787 = !DILocation(line: 423, column: 10, scope: !5779)
!5788 = !DILocalVariable(name: "ch", scope: !5779, file: !89, line: 424, type: !3967)
!5789 = !DILocation(line: 424, column: 17, scope: !5779)
!5790 = !DILocation(line: 426, column: 3, scope: !5779)
!5791 = !DILocation(line: 426, column: 17, scope: !5792)
!5792 = distinct !DILexicalBlock(scope: !5793, file: !89, line: 426, column: 3)
!5793 = distinct !DILexicalBlock(scope: !5779, file: !89, line: 426, column: 3)
!5794 = !DILocation(line: 426, column: 16, scope: !5792)
!5795 = !DILocation(line: 426, column: 14, scope: !5792)
!5796 = !DILocation(line: 426, column: 3, scope: !5793)
!5797 = !DILocation(line: 427, column: 14, scope: !5792)
!5798 = !DILocation(line: 427, column: 20, scope: !5792)
!5799 = !DILocation(line: 427, column: 27, scope: !5792)
!5800 = !DILocation(line: 427, column: 25, scope: !5792)
!5801 = !DILocation(line: 427, column: 33, scope: !5792)
!5802 = !DILocation(line: 427, column: 31, scope: !5792)
!5803 = !DILocation(line: 427, column: 11, scope: !5792)
!5804 = !DILocation(line: 427, column: 5, scope: !5792)
!5805 = !DILocation(line: 426, column: 32, scope: !5792)
!5806 = !DILocation(line: 426, column: 3, scope: !5792)
!5807 = distinct !{!5807, !5796, !5808}
!5808 = !DILocation(line: 427, column: 33, scope: !5793)
!5809 = !DILocation(line: 428, column: 10, scope: !5779)
!5810 = !DILocation(line: 428, column: 3, scope: !5779)
!5811 = distinct !DISubprogram(name: "hash_reset_tuning", scope: !89, file: !89, line: 472, type: !5812, isLocal: false, isDefinition: true, scopeLine: 473, flags: DIFlagPrototyped, isOptimized: false, unit: !88, variables: !25)
!5812 = !DISubroutineType(types: !5813)
!5813 = !{null, !5814}
!5814 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !95, size: 64)
!5815 = !DILocalVariable(name: "tuning", arg: 1, scope: !5811, file: !89, line: 472, type: !5814)
!5816 = !DILocation(line: 472, column: 33, scope: !5811)
!5817 = !DILocation(line: 474, column: 4, scope: !5811)
!5818 = !DILocation(line: 474, column: 13, scope: !5811)
!5819 = !DILocation(line: 475, column: 1, scope: !5811)
!5820 = distinct !DISubprogram(name: "hash_initialize", scope: !89, file: !89, line: 587, type: !5821, isLocal: false, isDefinition: true, scopeLine: 590, flags: DIFlagPrototyped, isOptimized: false, unit: !88, variables: !25)
!5821 = !DISubroutineType(types: !5822)
!5822 = !{!5823, !91, !5252, !5254, !5257, !5260}
!5823 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5236, size: 64)
!5824 = !DILocalVariable(name: "candidate", arg: 1, scope: !5820, file: !89, line: 587, type: !91)
!5825 = !DILocation(line: 587, column: 25, scope: !5820)
!5826 = !DILocalVariable(name: "tuning", arg: 2, scope: !5820, file: !89, line: 587, type: !5252)
!5827 = !DILocation(line: 587, column: 55, scope: !5820)
!5828 = !DILocalVariable(name: "hasher", arg: 3, scope: !5820, file: !89, line: 588, type: !5254)
!5829 = !DILocation(line: 588, column: 16, scope: !5820)
!5830 = !DILocalVariable(name: "comparator", arg: 4, scope: !5820, file: !89, line: 588, type: !5257)
!5831 = !DILocation(line: 588, column: 40, scope: !5820)
!5832 = !DILocalVariable(name: "data_freer", arg: 5, scope: !5820, file: !89, line: 589, type: !5260)
!5833 = !DILocation(line: 589, column: 20, scope: !5820)
!5834 = !DILocalVariable(name: "table", scope: !5820, file: !89, line: 591, type: !5823)
!5835 = !DILocation(line: 591, column: 15, scope: !5820)
!5836 = !DILocation(line: 593, column: 7, scope: !5837)
!5837 = distinct !DILexicalBlock(scope: !5820, file: !89, line: 593, column: 7)
!5838 = !DILocation(line: 593, column: 14, scope: !5837)
!5839 = !DILocation(line: 593, column: 7, scope: !5820)
!5840 = !DILocation(line: 594, column: 12, scope: !5837)
!5841 = !DILocation(line: 594, column: 5, scope: !5837)
!5842 = !DILocation(line: 595, column: 7, scope: !5843)
!5843 = distinct !DILexicalBlock(scope: !5820, file: !89, line: 595, column: 7)
!5844 = !DILocation(line: 595, column: 18, scope: !5843)
!5845 = !DILocation(line: 595, column: 7, scope: !5820)
!5846 = !DILocation(line: 596, column: 16, scope: !5843)
!5847 = !DILocation(line: 596, column: 5, scope: !5843)
!5848 = !DILocation(line: 598, column: 11, scope: !5820)
!5849 = !DILocation(line: 598, column: 9, scope: !5820)
!5850 = !DILocation(line: 599, column: 7, scope: !5851)
!5851 = distinct !DILexicalBlock(scope: !5820, file: !89, line: 599, column: 7)
!5852 = !DILocation(line: 599, column: 13, scope: !5851)
!5853 = !DILocation(line: 599, column: 7, scope: !5820)
!5854 = !DILocation(line: 600, column: 5, scope: !5851)
!5855 = !DILocation(line: 602, column: 8, scope: !5856)
!5856 = distinct !DILexicalBlock(scope: !5820, file: !89, line: 602, column: 7)
!5857 = !DILocation(line: 602, column: 7, scope: !5820)
!5858 = !DILocation(line: 603, column: 12, scope: !5856)
!5859 = !DILocation(line: 603, column: 5, scope: !5856)
!5860 = !DILocation(line: 604, column: 19, scope: !5820)
!5861 = !DILocation(line: 604, column: 3, scope: !5820)
!5862 = !DILocation(line: 604, column: 10, scope: !5820)
!5863 = !DILocation(line: 604, column: 17, scope: !5820)
!5864 = !DILocation(line: 605, column: 22, scope: !5865)
!5865 = distinct !DILexicalBlock(scope: !5820, file: !89, line: 605, column: 7)
!5866 = !DILocation(line: 605, column: 8, scope: !5865)
!5867 = !DILocation(line: 605, column: 7, scope: !5820)
!5868 = !DILocation(line: 612, column: 7, scope: !5869)
!5869 = distinct !DILexicalBlock(scope: !5865, file: !89, line: 606, column: 5)
!5870 = !DILocation(line: 615, column: 43, scope: !5820)
!5871 = !DILocation(line: 615, column: 54, scope: !5820)
!5872 = !DILocation(line: 615, column: 22, scope: !5820)
!5873 = !DILocation(line: 615, column: 3, scope: !5820)
!5874 = !DILocation(line: 615, column: 10, scope: !5820)
!5875 = !DILocation(line: 615, column: 20, scope: !5820)
!5876 = !DILocation(line: 616, column: 8, scope: !5877)
!5877 = distinct !DILexicalBlock(scope: !5820, file: !89, line: 616, column: 7)
!5878 = !DILocation(line: 616, column: 15, scope: !5877)
!5879 = !DILocation(line: 616, column: 7, scope: !5820)
!5880 = !DILocation(line: 617, column: 5, scope: !5877)
!5881 = !DILocation(line: 619, column: 27, scope: !5820)
!5882 = !DILocation(line: 619, column: 34, scope: !5820)
!5883 = !DILocation(line: 619, column: 19, scope: !5820)
!5884 = !DILocation(line: 619, column: 3, scope: !5820)
!5885 = !DILocation(line: 619, column: 10, scope: !5820)
!5886 = !DILocation(line: 619, column: 17, scope: !5820)
!5887 = !DILocation(line: 620, column: 7, scope: !5888)
!5888 = distinct !DILexicalBlock(scope: !5820, file: !89, line: 620, column: 7)
!5889 = !DILocation(line: 620, column: 14, scope: !5888)
!5890 = !DILocation(line: 620, column: 21, scope: !5888)
!5891 = !DILocation(line: 620, column: 7, scope: !5820)
!5892 = !DILocation(line: 621, column: 5, scope: !5888)
!5893 = !DILocation(line: 622, column: 25, scope: !5820)
!5894 = !DILocation(line: 622, column: 32, scope: !5820)
!5895 = !DILocation(line: 622, column: 41, scope: !5820)
!5896 = !DILocation(line: 622, column: 48, scope: !5820)
!5897 = !DILocation(line: 622, column: 39, scope: !5820)
!5898 = !DILocation(line: 622, column: 3, scope: !5820)
!5899 = !DILocation(line: 622, column: 10, scope: !5820)
!5900 = !DILocation(line: 622, column: 23, scope: !5820)
!5901 = !DILocation(line: 623, column: 3, scope: !5820)
!5902 = !DILocation(line: 623, column: 10, scope: !5820)
!5903 = !DILocation(line: 623, column: 25, scope: !5820)
!5904 = !DILocation(line: 624, column: 3, scope: !5820)
!5905 = !DILocation(line: 624, column: 10, scope: !5820)
!5906 = !DILocation(line: 624, column: 20, scope: !5820)
!5907 = !DILocation(line: 626, column: 19, scope: !5820)
!5908 = !DILocation(line: 626, column: 3, scope: !5820)
!5909 = !DILocation(line: 626, column: 10, scope: !5820)
!5910 = !DILocation(line: 626, column: 17, scope: !5820)
!5911 = !DILocation(line: 627, column: 23, scope: !5820)
!5912 = !DILocation(line: 627, column: 3, scope: !5820)
!5913 = !DILocation(line: 627, column: 10, scope: !5820)
!5914 = !DILocation(line: 627, column: 21, scope: !5820)
!5915 = !DILocation(line: 628, column: 23, scope: !5820)
!5916 = !DILocation(line: 628, column: 3, scope: !5820)
!5917 = !DILocation(line: 628, column: 10, scope: !5820)
!5918 = !DILocation(line: 628, column: 21, scope: !5820)
!5919 = !DILocation(line: 630, column: 3, scope: !5820)
!5920 = !DILocation(line: 630, column: 10, scope: !5820)
!5921 = !DILocation(line: 630, column: 26, scope: !5820)
!5922 = !DILocation(line: 634, column: 10, scope: !5820)
!5923 = !DILocation(line: 634, column: 3, scope: !5820)
!5924 = !DILocation(line: 637, column: 9, scope: !5820)
!5925 = !DILocation(line: 637, column: 3, scope: !5820)
!5926 = !DILocation(line: 638, column: 3, scope: !5820)
!5927 = !DILocation(line: 639, column: 1, scope: !5820)
!5928 = distinct !DISubprogram(name: "raw_hasher", scope: !89, file: !89, line: 479, type: !2952, isLocal: true, isDefinition: true, scopeLine: 480, flags: DIFlagPrototyped, isOptimized: false, unit: !88, variables: !25)
!5929 = !DILocalVariable(name: "data", arg: 1, scope: !5928, file: !89, line: 479, type: !404)
!5930 = !DILocation(line: 479, column: 25, scope: !5928)
!5931 = !DILocalVariable(name: "n", arg: 2, scope: !5928, file: !89, line: 479, type: !91)
!5932 = !DILocation(line: 479, column: 38, scope: !5928)
!5933 = !DILocalVariable(name: "val", scope: !5928, file: !89, line: 486, type: !91)
!5934 = !DILocation(line: 486, column: 10, scope: !5928)
!5935 = !DILocation(line: 486, column: 34, scope: !5928)
!5936 = !DILocation(line: 486, column: 25, scope: !5928)
!5937 = !DILocation(line: 486, column: 16, scope: !5928)
!5938 = !DILocation(line: 487, column: 10, scope: !5928)
!5939 = !DILocation(line: 487, column: 16, scope: !5928)
!5940 = !DILocation(line: 487, column: 14, scope: !5928)
!5941 = !DILocation(line: 487, column: 3, scope: !5928)
!5942 = distinct !DISubprogram(name: "raw_comparator", scope: !89, file: !89, line: 492, type: !2974, isLocal: true, isDefinition: true, scopeLine: 493, flags: DIFlagPrototyped, isOptimized: false, unit: !88, variables: !25)
!5943 = !DILocalVariable(name: "a", arg: 1, scope: !5942, file: !89, line: 492, type: !404)
!5944 = !DILocation(line: 492, column: 29, scope: !5942)
!5945 = !DILocalVariable(name: "b", arg: 2, scope: !5942, file: !89, line: 492, type: !404)
!5946 = !DILocation(line: 492, column: 44, scope: !5942)
!5947 = !DILocation(line: 494, column: 10, scope: !5942)
!5948 = !DILocation(line: 494, column: 15, scope: !5942)
!5949 = !DILocation(line: 494, column: 12, scope: !5942)
!5950 = !DILocation(line: 494, column: 3, scope: !5942)
!5951 = distinct !DISubprogram(name: "check_tuning", scope: !89, file: !89, line: 505, type: !5952, isLocal: true, isDefinition: true, scopeLine: 506, flags: DIFlagPrototyped, isOptimized: false, unit: !88, variables: !25)
!5952 = !DISubroutineType(types: !5953)
!5953 = !{!79, !5823}
!5954 = !DILocalVariable(name: "table", arg: 1, scope: !5951, file: !89, line: 505, type: !5823)
!5955 = !DILocation(line: 505, column: 27, scope: !5951)
!5956 = !DILocalVariable(name: "tuning", scope: !5951, file: !89, line: 507, type: !5252)
!5957 = !DILocation(line: 507, column: 22, scope: !5951)
!5958 = !DILocation(line: 507, column: 31, scope: !5951)
!5959 = !DILocation(line: 507, column: 38, scope: !5951)
!5960 = !DILocalVariable(name: "epsilon", scope: !5951, file: !89, line: 508, type: !100)
!5961 = !DILocation(line: 508, column: 9, scope: !5951)
!5962 = !DILocation(line: 509, column: 7, scope: !5963)
!5963 = distinct !DILexicalBlock(scope: !5951, file: !89, line: 509, column: 7)
!5964 = !DILocation(line: 509, column: 14, scope: !5963)
!5965 = !DILocation(line: 509, column: 7, scope: !5951)
!5966 = !DILocation(line: 510, column: 5, scope: !5963)
!5967 = !DILocation(line: 517, column: 11, scope: !5951)
!5968 = !DILocation(line: 519, column: 7, scope: !5969)
!5969 = distinct !DILexicalBlock(scope: !5951, file: !89, line: 519, column: 7)
!5970 = !DILocation(line: 519, column: 17, scope: !5969)
!5971 = !DILocation(line: 519, column: 25, scope: !5969)
!5972 = !DILocation(line: 519, column: 15, scope: !5969)
!5973 = !DILocation(line: 520, column: 7, scope: !5969)
!5974 = !DILocation(line: 520, column: 10, scope: !5969)
!5975 = !DILocation(line: 520, column: 18, scope: !5969)
!5976 = !DILocation(line: 520, column: 41, scope: !5969)
!5977 = !DILocation(line: 520, column: 39, scope: !5969)
!5978 = !DILocation(line: 520, column: 35, scope: !5969)
!5979 = !DILocation(line: 521, column: 7, scope: !5969)
!5980 = !DILocation(line: 521, column: 14, scope: !5969)
!5981 = !DILocation(line: 521, column: 12, scope: !5969)
!5982 = !DILocation(line: 521, column: 24, scope: !5969)
!5983 = !DILocation(line: 521, column: 32, scope: !5969)
!5984 = !DILocation(line: 521, column: 22, scope: !5969)
!5985 = !DILocation(line: 522, column: 7, scope: !5969)
!5986 = !DILocation(line: 522, column: 15, scope: !5969)
!5987 = !DILocation(line: 522, column: 23, scope: !5969)
!5988 = !DILocation(line: 522, column: 12, scope: !5969)
!5989 = !DILocation(line: 523, column: 7, scope: !5969)
!5990 = !DILocation(line: 523, column: 10, scope: !5969)
!5991 = !DILocation(line: 523, column: 18, scope: !5969)
!5992 = !DILocation(line: 523, column: 37, scope: !5969)
!5993 = !DILocation(line: 523, column: 35, scope: !5969)
!5994 = !DILocation(line: 523, column: 47, scope: !5969)
!5995 = !DILocation(line: 523, column: 55, scope: !5969)
!5996 = !DILocation(line: 523, column: 45, scope: !5969)
!5997 = !DILocation(line: 524, column: 7, scope: !5969)
!5998 = !DILocation(line: 524, column: 10, scope: !5969)
!5999 = !DILocation(line: 524, column: 18, scope: !5969)
!6000 = !DILocation(line: 524, column: 32, scope: !5969)
!6001 = !DILocation(line: 525, column: 7, scope: !5969)
!6002 = !DILocation(line: 525, column: 10, scope: !5969)
!6003 = !DILocation(line: 525, column: 18, scope: !5969)
!6004 = !DILocation(line: 525, column: 37, scope: !5969)
!6005 = !DILocation(line: 525, column: 35, scope: !5969)
!6006 = !DILocation(line: 525, column: 47, scope: !5969)
!6007 = !DILocation(line: 525, column: 55, scope: !5969)
!6008 = !DILocation(line: 525, column: 45, scope: !5969)
!6009 = !DILocation(line: 519, column: 7, scope: !5951)
!6010 = !DILocation(line: 526, column: 5, scope: !5969)
!6011 = !DILocation(line: 528, column: 3, scope: !5951)
!6012 = !DILocation(line: 528, column: 10, scope: !5951)
!6013 = !DILocation(line: 528, column: 17, scope: !5951)
!6014 = !DILocation(line: 529, column: 3, scope: !5951)
!6015 = !DILocation(line: 530, column: 1, scope: !5951)
!6016 = distinct !DISubprogram(name: "compute_bucket_size", scope: !89, file: !89, line: 537, type: !6017, isLocal: true, isDefinition: true, scopeLine: 538, flags: DIFlagPrototyped, isOptimized: false, unit: !88, variables: !25)
!6017 = !DISubroutineType(types: !6018)
!6018 = !{!91, !91, !5252}
!6019 = !DILocalVariable(name: "candidate", arg: 1, scope: !6016, file: !89, line: 537, type: !91)
!6020 = !DILocation(line: 537, column: 29, scope: !6016)
!6021 = !DILocalVariable(name: "tuning", arg: 2, scope: !6016, file: !89, line: 537, type: !5252)
!6022 = !DILocation(line: 537, column: 59, scope: !6016)
!6023 = !DILocation(line: 539, column: 8, scope: !6024)
!6024 = distinct !DILexicalBlock(scope: !6016, file: !89, line: 539, column: 7)
!6025 = !DILocation(line: 539, column: 16, scope: !6024)
!6026 = !DILocation(line: 539, column: 7, scope: !6016)
!6027 = !DILocalVariable(name: "new_candidate", scope: !6028, file: !89, line: 541, type: !100)
!6028 = distinct !DILexicalBlock(scope: !6024, file: !89, line: 540, column: 5)
!6029 = !DILocation(line: 541, column: 13, scope: !6028)
!6030 = !DILocation(line: 541, column: 29, scope: !6028)
!6031 = !DILocation(line: 541, column: 41, scope: !6028)
!6032 = !DILocation(line: 541, column: 49, scope: !6028)
!6033 = !DILocation(line: 541, column: 39, scope: !6028)
!6034 = !DILocation(line: 542, column: 23, scope: !6035)
!6035 = distinct !DILexicalBlock(scope: !6028, file: !89, line: 542, column: 11)
!6036 = !DILocation(line: 542, column: 20, scope: !6035)
!6037 = !DILocation(line: 542, column: 11, scope: !6028)
!6038 = !DILocation(line: 543, column: 2, scope: !6035)
!6039 = !DILocation(line: 544, column: 19, scope: !6028)
!6040 = !DILocation(line: 544, column: 17, scope: !6028)
!6041 = !DILocation(line: 545, column: 5, scope: !6028)
!6042 = !DILocation(line: 546, column: 27, scope: !6016)
!6043 = !DILocation(line: 546, column: 15, scope: !6016)
!6044 = !DILocation(line: 546, column: 13, scope: !6016)
!6045 = !DILocation(line: 547, column: 7, scope: !6046)
!6046 = distinct !DILexicalBlock(scope: !6016, file: !89, line: 547, column: 7)
!6047 = !DILocation(line: 547, column: 7, scope: !6016)
!6048 = !DILocation(line: 548, column: 5, scope: !6046)
!6049 = !DILocation(line: 549, column: 10, scope: !6016)
!6050 = !DILocation(line: 549, column: 3, scope: !6016)
!6051 = !DILocation(line: 550, column: 1, scope: !6016)
!6052 = distinct !DISubprogram(name: "next_prime", scope: !89, file: !89, line: 456, type: !6053, isLocal: true, isDefinition: true, scopeLine: 457, flags: DIFlagPrototyped, isOptimized: false, unit: !88, variables: !25)
!6053 = !DISubroutineType(types: !6054)
!6054 = !{!91, !91}
!6055 = !DILocalVariable(name: "candidate", arg: 1, scope: !6052, file: !89, line: 456, type: !91)
!6056 = !DILocation(line: 456, column: 20, scope: !6052)
!6057 = !DILocation(line: 459, column: 7, scope: !6058)
!6058 = distinct !DILexicalBlock(scope: !6052, file: !89, line: 459, column: 7)
!6059 = !DILocation(line: 459, column: 17, scope: !6058)
!6060 = !DILocation(line: 459, column: 7, scope: !6052)
!6061 = !DILocation(line: 460, column: 15, scope: !6058)
!6062 = !DILocation(line: 460, column: 5, scope: !6058)
!6063 = !DILocation(line: 463, column: 13, scope: !6052)
!6064 = !DILocation(line: 465, column: 3, scope: !6052)
!6065 = !DILocation(line: 465, column: 22, scope: !6052)
!6066 = !DILocation(line: 465, column: 19, scope: !6052)
!6067 = !DILocation(line: 465, column: 32, scope: !6052)
!6068 = !DILocation(line: 465, column: 46, scope: !6052)
!6069 = !DILocation(line: 465, column: 36, scope: !6052)
!6070 = !DILocation(line: 465, column: 35, scope: !6052)
!6071 = !DILocation(line: 466, column: 15, scope: !6052)
!6072 = distinct !{!6072, !6064, !6073}
!6073 = !DILocation(line: 466, column: 18, scope: !6052)
!6074 = !DILocation(line: 468, column: 10, scope: !6052)
!6075 = !DILocation(line: 468, column: 3, scope: !6052)
!6076 = distinct !DISubprogram(name: "is_prime", scope: !89, file: !89, line: 437, type: !6077, isLocal: true, isDefinition: true, scopeLine: 438, flags: DIFlagPrototyped, isOptimized: false, unit: !88, variables: !25)
!6077 = !DISubroutineType(types: !6078)
!6078 = !{!79, !91}
!6079 = !DILocalVariable(name: "candidate", arg: 1, scope: !6076, file: !89, line: 437, type: !91)
!6080 = !DILocation(line: 437, column: 18, scope: !6076)
!6081 = !DILocalVariable(name: "divisor", scope: !6076, file: !89, line: 439, type: !91)
!6082 = !DILocation(line: 439, column: 10, scope: !6076)
!6083 = !DILocalVariable(name: "square", scope: !6076, file: !89, line: 440, type: !91)
!6084 = !DILocation(line: 440, column: 10, scope: !6076)
!6085 = !DILocation(line: 440, column: 19, scope: !6076)
!6086 = !DILocation(line: 440, column: 29, scope: !6076)
!6087 = !DILocation(line: 440, column: 27, scope: !6076)
!6088 = !DILocation(line: 442, column: 3, scope: !6076)
!6089 = !DILocation(line: 442, column: 10, scope: !6076)
!6090 = !DILocation(line: 442, column: 19, scope: !6076)
!6091 = !DILocation(line: 442, column: 17, scope: !6076)
!6092 = !DILocation(line: 442, column: 29, scope: !6076)
!6093 = !DILocation(line: 442, column: 33, scope: !6076)
!6094 = !DILocation(line: 442, column: 45, scope: !6076)
!6095 = !DILocation(line: 442, column: 43, scope: !6076)
!6096 = !DILocation(line: 444, column: 14, scope: !6097)
!6097 = distinct !DILexicalBlock(scope: !6076, file: !89, line: 443, column: 5)
!6098 = !DILocation(line: 445, column: 21, scope: !6097)
!6099 = !DILocation(line: 445, column: 19, scope: !6097)
!6100 = !DILocation(line: 445, column: 14, scope: !6097)
!6101 = !DILocation(line: 446, column: 14, scope: !6097)
!6102 = distinct !{!6102, !6088, !6103}
!6103 = !DILocation(line: 447, column: 5, scope: !6076)
!6104 = !DILocation(line: 449, column: 11, scope: !6076)
!6105 = !DILocation(line: 449, column: 23, scope: !6076)
!6106 = !DILocation(line: 449, column: 21, scope: !6076)
!6107 = !DILocation(line: 449, column: 10, scope: !6076)
!6108 = !DILocation(line: 449, column: 3, scope: !6076)
!6109 = distinct !DISubprogram(name: "rotr_sz", scope: !6110, file: !6110, line: 77, type: !6111, isLocal: true, isDefinition: true, scopeLine: 78, flags: DIFlagPrototyped, isOptimized: false, unit: !88, variables: !25)
!6110 = !DIFile(filename: "../../lib/bitrotate.h", directory: "/home/ma481/Downloads/Chisel/chisel-bench/benchmark/chown-8.2/original/obj-llvm/lib")
!6111 = !DISubroutineType(types: !6112)
!6112 = !{!91, !91, !23}
!6113 = !DILocalVariable(name: "x", arg: 1, scope: !6109, file: !6110, line: 77, type: !91)
!6114 = !DILocation(line: 77, column: 17, scope: !6109)
!6115 = !DILocalVariable(name: "n", arg: 2, scope: !6109, file: !6110, line: 77, type: !23)
!6116 = !DILocation(line: 77, column: 24, scope: !6109)
!6117 = !DILocation(line: 79, column: 12, scope: !6109)
!6118 = !DILocation(line: 79, column: 17, scope: !6109)
!6119 = !DILocation(line: 79, column: 14, scope: !6109)
!6120 = !DILocation(line: 79, column: 23, scope: !6109)
!6121 = !DILocation(line: 79, column: 53, scope: !6109)
!6122 = !DILocation(line: 79, column: 51, scope: !6109)
!6123 = !DILocation(line: 79, column: 25, scope: !6109)
!6124 = !DILocation(line: 79, column: 20, scope: !6109)
!6125 = !DILocation(line: 79, column: 3, scope: !6109)
!6126 = distinct !DISubprogram(name: "hash_clear", scope: !89, file: !89, line: 646, type: !6127, isLocal: false, isDefinition: true, scopeLine: 647, flags: DIFlagPrototyped, isOptimized: false, unit: !88, variables: !25)
!6127 = !DISubroutineType(types: !6128)
!6128 = !{null, !5823}
!6129 = !DILocalVariable(name: "table", arg: 1, scope: !6126, file: !89, line: 646, type: !5823)
!6130 = !DILocation(line: 646, column: 25, scope: !6126)
!6131 = !DILocalVariable(name: "bucket", scope: !6126, file: !89, line: 648, type: !5240)
!6132 = !DILocation(line: 648, column: 22, scope: !6126)
!6133 = !DILocation(line: 650, column: 17, scope: !6134)
!6134 = distinct !DILexicalBlock(scope: !6126, file: !89, line: 650, column: 3)
!6135 = !DILocation(line: 650, column: 24, scope: !6134)
!6136 = !DILocation(line: 650, column: 15, scope: !6134)
!6137 = !DILocation(line: 650, column: 8, scope: !6134)
!6138 = !DILocation(line: 650, column: 32, scope: !6139)
!6139 = distinct !DILexicalBlock(scope: !6134, file: !89, line: 650, column: 3)
!6140 = !DILocation(line: 650, column: 41, scope: !6139)
!6141 = !DILocation(line: 650, column: 48, scope: !6139)
!6142 = !DILocation(line: 650, column: 39, scope: !6139)
!6143 = !DILocation(line: 650, column: 3, scope: !6134)
!6144 = !DILocation(line: 652, column: 11, scope: !6145)
!6145 = distinct !DILexicalBlock(scope: !6146, file: !89, line: 652, column: 11)
!6146 = distinct !DILexicalBlock(scope: !6139, file: !89, line: 651, column: 5)
!6147 = !DILocation(line: 652, column: 19, scope: !6145)
!6148 = !DILocation(line: 652, column: 11, scope: !6146)
!6149 = !DILocalVariable(name: "cursor", scope: !6150, file: !89, line: 654, type: !5240)
!6150 = distinct !DILexicalBlock(scope: !6145, file: !89, line: 653, column: 2)
!6151 = !DILocation(line: 654, column: 23, scope: !6150)
!6152 = !DILocalVariable(name: "next", scope: !6150, file: !89, line: 655, type: !5240)
!6153 = !DILocation(line: 655, column: 23, scope: !6150)
!6154 = !DILocation(line: 658, column: 18, scope: !6155)
!6155 = distinct !DILexicalBlock(scope: !6150, file: !89, line: 658, column: 4)
!6156 = !DILocation(line: 658, column: 26, scope: !6155)
!6157 = !DILocation(line: 658, column: 16, scope: !6155)
!6158 = !DILocation(line: 658, column: 9, scope: !6155)
!6159 = !DILocation(line: 658, column: 32, scope: !6160)
!6160 = distinct !DILexicalBlock(scope: !6155, file: !89, line: 658, column: 4)
!6161 = !DILocation(line: 658, column: 4, scope: !6155)
!6162 = !DILocation(line: 660, column: 12, scope: !6163)
!6163 = distinct !DILexicalBlock(scope: !6164, file: !89, line: 660, column: 12)
!6164 = distinct !DILexicalBlock(scope: !6160, file: !89, line: 659, column: 6)
!6165 = !DILocation(line: 660, column: 19, scope: !6163)
!6166 = !DILocation(line: 660, column: 12, scope: !6164)
!6167 = !DILocation(line: 661, column: 3, scope: !6163)
!6168 = !DILocation(line: 661, column: 10, scope: !6163)
!6169 = !DILocation(line: 661, column: 22, scope: !6163)
!6170 = !DILocation(line: 661, column: 30, scope: !6163)
!6171 = !DILocation(line: 662, column: 8, scope: !6164)
!6172 = !DILocation(line: 662, column: 16, scope: !6164)
!6173 = !DILocation(line: 662, column: 21, scope: !6164)
!6174 = !DILocation(line: 664, column: 15, scope: !6164)
!6175 = !DILocation(line: 664, column: 23, scope: !6164)
!6176 = !DILocation(line: 664, column: 13, scope: !6164)
!6177 = !DILocation(line: 667, column: 23, scope: !6164)
!6178 = !DILocation(line: 667, column: 30, scope: !6164)
!6179 = !DILocation(line: 667, column: 8, scope: !6164)
!6180 = !DILocation(line: 667, column: 16, scope: !6164)
!6181 = !DILocation(line: 667, column: 21, scope: !6164)
!6182 = !DILocation(line: 668, column: 33, scope: !6164)
!6183 = !DILocation(line: 668, column: 8, scope: !6164)
!6184 = !DILocation(line: 668, column: 15, scope: !6164)
!6185 = !DILocation(line: 668, column: 31, scope: !6164)
!6186 = !DILocation(line: 669, column: 6, scope: !6164)
!6187 = !DILocation(line: 658, column: 49, scope: !6160)
!6188 = !DILocation(line: 658, column: 47, scope: !6160)
!6189 = !DILocation(line: 658, column: 4, scope: !6160)
!6190 = distinct !{!6190, !6161, !6191}
!6191 = !DILocation(line: 669, column: 6, scope: !6155)
!6192 = !DILocation(line: 672, column: 8, scope: !6193)
!6193 = distinct !DILexicalBlock(scope: !6150, file: !89, line: 672, column: 8)
!6194 = !DILocation(line: 672, column: 15, scope: !6193)
!6195 = !DILocation(line: 672, column: 8, scope: !6150)
!6196 = !DILocation(line: 673, column: 6, scope: !6193)
!6197 = !DILocation(line: 673, column: 13, scope: !6193)
!6198 = !DILocation(line: 673, column: 25, scope: !6193)
!6199 = !DILocation(line: 673, column: 33, scope: !6193)
!6200 = !DILocation(line: 674, column: 4, scope: !6150)
!6201 = !DILocation(line: 674, column: 12, scope: !6150)
!6202 = !DILocation(line: 674, column: 17, scope: !6150)
!6203 = !DILocation(line: 675, column: 4, scope: !6150)
!6204 = !DILocation(line: 675, column: 12, scope: !6150)
!6205 = !DILocation(line: 675, column: 17, scope: !6150)
!6206 = !DILocation(line: 676, column: 2, scope: !6150)
!6207 = !DILocation(line: 677, column: 5, scope: !6146)
!6208 = !DILocation(line: 650, column: 68, scope: !6139)
!6209 = !DILocation(line: 650, column: 3, scope: !6139)
!6210 = distinct !{!6210, !6143, !6211}
!6211 = !DILocation(line: 677, column: 5, scope: !6134)
!6212 = !DILocation(line: 679, column: 3, scope: !6126)
!6213 = !DILocation(line: 679, column: 10, scope: !6126)
!6214 = !DILocation(line: 679, column: 25, scope: !6126)
!6215 = !DILocation(line: 680, column: 3, scope: !6126)
!6216 = !DILocation(line: 680, column: 10, scope: !6126)
!6217 = !DILocation(line: 680, column: 20, scope: !6126)
!6218 = !DILocation(line: 681, column: 1, scope: !6126)
!6219 = distinct !DISubprogram(name: "hash_free", scope: !89, file: !89, line: 689, type: !6127, isLocal: false, isDefinition: true, scopeLine: 690, flags: DIFlagPrototyped, isOptimized: false, unit: !88, variables: !25)
!6220 = !DILocalVariable(name: "table", arg: 1, scope: !6219, file: !89, line: 689, type: !5823)
!6221 = !DILocation(line: 689, column: 24, scope: !6219)
!6222 = !DILocalVariable(name: "bucket", scope: !6219, file: !89, line: 691, type: !5240)
!6223 = !DILocation(line: 691, column: 22, scope: !6219)
!6224 = !DILocalVariable(name: "cursor", scope: !6219, file: !89, line: 692, type: !5240)
!6225 = !DILocation(line: 692, column: 22, scope: !6219)
!6226 = !DILocalVariable(name: "next", scope: !6219, file: !89, line: 693, type: !5240)
!6227 = !DILocation(line: 693, column: 22, scope: !6219)
!6228 = !DILocation(line: 696, column: 7, scope: !6229)
!6229 = distinct !DILexicalBlock(scope: !6219, file: !89, line: 696, column: 7)
!6230 = !DILocation(line: 696, column: 14, scope: !6229)
!6231 = !DILocation(line: 696, column: 25, scope: !6229)
!6232 = !DILocation(line: 696, column: 28, scope: !6229)
!6233 = !DILocation(line: 696, column: 35, scope: !6229)
!6234 = !DILocation(line: 696, column: 7, scope: !6219)
!6235 = !DILocation(line: 698, column: 21, scope: !6236)
!6236 = distinct !DILexicalBlock(scope: !6237, file: !89, line: 698, column: 7)
!6237 = distinct !DILexicalBlock(scope: !6229, file: !89, line: 697, column: 5)
!6238 = !DILocation(line: 698, column: 28, scope: !6236)
!6239 = !DILocation(line: 698, column: 19, scope: !6236)
!6240 = !DILocation(line: 698, column: 12, scope: !6236)
!6241 = !DILocation(line: 698, column: 36, scope: !6242)
!6242 = distinct !DILexicalBlock(scope: !6236, file: !89, line: 698, column: 7)
!6243 = !DILocation(line: 698, column: 45, scope: !6242)
!6244 = !DILocation(line: 698, column: 52, scope: !6242)
!6245 = !DILocation(line: 698, column: 43, scope: !6242)
!6246 = !DILocation(line: 698, column: 7, scope: !6236)
!6247 = !DILocation(line: 700, column: 8, scope: !6248)
!6248 = distinct !DILexicalBlock(scope: !6249, file: !89, line: 700, column: 8)
!6249 = distinct !DILexicalBlock(scope: !6242, file: !89, line: 699, column: 2)
!6250 = !DILocation(line: 700, column: 16, scope: !6248)
!6251 = !DILocation(line: 700, column: 8, scope: !6249)
!6252 = !DILocation(line: 702, column: 22, scope: !6253)
!6253 = distinct !DILexicalBlock(scope: !6254, file: !89, line: 702, column: 8)
!6254 = distinct !DILexicalBlock(scope: !6248, file: !89, line: 701, column: 6)
!6255 = !DILocation(line: 702, column: 20, scope: !6253)
!6256 = !DILocation(line: 702, column: 13, scope: !6253)
!6257 = !DILocation(line: 702, column: 30, scope: !6258)
!6258 = distinct !DILexicalBlock(scope: !6253, file: !89, line: 702, column: 8)
!6259 = !DILocation(line: 702, column: 8, scope: !6253)
!6260 = !DILocation(line: 703, column: 3, scope: !6258)
!6261 = !DILocation(line: 703, column: 10, scope: !6258)
!6262 = !DILocation(line: 703, column: 22, scope: !6258)
!6263 = !DILocation(line: 703, column: 30, scope: !6258)
!6264 = !DILocation(line: 702, column: 47, scope: !6258)
!6265 = !DILocation(line: 702, column: 55, scope: !6258)
!6266 = !DILocation(line: 702, column: 45, scope: !6258)
!6267 = !DILocation(line: 702, column: 8, scope: !6258)
!6268 = distinct !{!6268, !6259, !6269}
!6269 = !DILocation(line: 703, column: 34, scope: !6253)
!6270 = !DILocation(line: 704, column: 6, scope: !6254)
!6271 = !DILocation(line: 705, column: 2, scope: !6249)
!6272 = !DILocation(line: 698, column: 72, scope: !6242)
!6273 = !DILocation(line: 698, column: 7, scope: !6242)
!6274 = distinct !{!6274, !6246, !6275}
!6275 = !DILocation(line: 705, column: 2, scope: !6236)
!6276 = !DILocation(line: 706, column: 5, scope: !6237)
!6277 = !DILocation(line: 715, column: 17, scope: !6278)
!6278 = distinct !DILexicalBlock(scope: !6219, file: !89, line: 715, column: 3)
!6279 = !DILocation(line: 715, column: 24, scope: !6278)
!6280 = !DILocation(line: 715, column: 15, scope: !6278)
!6281 = !DILocation(line: 715, column: 8, scope: !6278)
!6282 = !DILocation(line: 715, column: 32, scope: !6283)
!6283 = distinct !DILexicalBlock(scope: !6278, file: !89, line: 715, column: 3)
!6284 = !DILocation(line: 715, column: 41, scope: !6283)
!6285 = !DILocation(line: 715, column: 48, scope: !6283)
!6286 = !DILocation(line: 715, column: 39, scope: !6283)
!6287 = !DILocation(line: 715, column: 3, scope: !6278)
!6288 = !DILocation(line: 717, column: 21, scope: !6289)
!6289 = distinct !DILexicalBlock(scope: !6290, file: !89, line: 717, column: 7)
!6290 = distinct !DILexicalBlock(scope: !6283, file: !89, line: 716, column: 5)
!6291 = !DILocation(line: 717, column: 29, scope: !6289)
!6292 = !DILocation(line: 717, column: 19, scope: !6289)
!6293 = !DILocation(line: 717, column: 12, scope: !6289)
!6294 = !DILocation(line: 717, column: 35, scope: !6295)
!6295 = distinct !DILexicalBlock(scope: !6289, file: !89, line: 717, column: 7)
!6296 = !DILocation(line: 717, column: 7, scope: !6289)
!6297 = !DILocation(line: 719, column: 11, scope: !6298)
!6298 = distinct !DILexicalBlock(scope: !6295, file: !89, line: 718, column: 2)
!6299 = !DILocation(line: 719, column: 19, scope: !6298)
!6300 = !DILocation(line: 719, column: 9, scope: !6298)
!6301 = !DILocation(line: 720, column: 10, scope: !6298)
!6302 = !DILocation(line: 720, column: 4, scope: !6298)
!6303 = !DILocation(line: 721, column: 2, scope: !6298)
!6304 = !DILocation(line: 717, column: 52, scope: !6295)
!6305 = !DILocation(line: 717, column: 50, scope: !6295)
!6306 = !DILocation(line: 717, column: 7, scope: !6295)
!6307 = distinct !{!6307, !6296, !6308}
!6308 = !DILocation(line: 721, column: 2, scope: !6289)
!6309 = !DILocation(line: 722, column: 5, scope: !6290)
!6310 = !DILocation(line: 715, column: 68, scope: !6283)
!6311 = !DILocation(line: 715, column: 3, scope: !6283)
!6312 = distinct !{!6312, !6287, !6313}
!6313 = !DILocation(line: 722, column: 5, scope: !6278)
!6314 = !DILocation(line: 725, column: 17, scope: !6315)
!6315 = distinct !DILexicalBlock(scope: !6219, file: !89, line: 725, column: 3)
!6316 = !DILocation(line: 725, column: 24, scope: !6315)
!6317 = !DILocation(line: 725, column: 15, scope: !6315)
!6318 = !DILocation(line: 725, column: 8, scope: !6315)
!6319 = !DILocation(line: 725, column: 41, scope: !6320)
!6320 = distinct !DILexicalBlock(scope: !6315, file: !89, line: 725, column: 3)
!6321 = !DILocation(line: 725, column: 3, scope: !6315)
!6322 = !DILocation(line: 727, column: 14, scope: !6323)
!6323 = distinct !DILexicalBlock(scope: !6320, file: !89, line: 726, column: 5)
!6324 = !DILocation(line: 727, column: 22, scope: !6323)
!6325 = !DILocation(line: 727, column: 12, scope: !6323)
!6326 = !DILocation(line: 728, column: 13, scope: !6323)
!6327 = !DILocation(line: 728, column: 7, scope: !6323)
!6328 = !DILocation(line: 729, column: 5, scope: !6323)
!6329 = !DILocation(line: 725, column: 58, scope: !6320)
!6330 = !DILocation(line: 725, column: 56, scope: !6320)
!6331 = !DILocation(line: 725, column: 3, scope: !6320)
!6332 = distinct !{!6332, !6321, !6333}
!6333 = !DILocation(line: 729, column: 5, scope: !6315)
!6334 = !DILocation(line: 734, column: 9, scope: !6219)
!6335 = !DILocation(line: 734, column: 16, scope: !6219)
!6336 = !DILocation(line: 734, column: 3, scope: !6219)
!6337 = !DILocation(line: 735, column: 9, scope: !6219)
!6338 = !DILocation(line: 735, column: 3, scope: !6219)
!6339 = !DILocation(line: 736, column: 1, scope: !6219)
!6340 = distinct !DISubprogram(name: "hash_rehash", scope: !89, file: !89, line: 946, type: !6341, isLocal: false, isDefinition: true, scopeLine: 947, flags: DIFlagPrototyped, isOptimized: false, unit: !88, variables: !25)
!6341 = !DISubroutineType(types: !6342)
!6342 = !{!79, !5823, !91}
!6343 = !DILocalVariable(name: "table", arg: 1, scope: !6340, file: !89, line: 946, type: !5823)
!6344 = !DILocation(line: 946, column: 26, scope: !6340)
!6345 = !DILocalVariable(name: "candidate", arg: 2, scope: !6340, file: !89, line: 946, type: !91)
!6346 = !DILocation(line: 946, column: 40, scope: !6340)
!6347 = !DILocalVariable(name: "storage", scope: !6340, file: !89, line: 948, type: !5236)
!6348 = !DILocation(line: 948, column: 14, scope: !6340)
!6349 = !DILocalVariable(name: "new_table", scope: !6340, file: !89, line: 949, type: !5823)
!6350 = !DILocation(line: 949, column: 15, scope: !6340)
!6351 = !DILocalVariable(name: "new_size", scope: !6340, file: !89, line: 950, type: !91)
!6352 = !DILocation(line: 950, column: 10, scope: !6340)
!6353 = !DILocation(line: 950, column: 42, scope: !6340)
!6354 = !DILocation(line: 950, column: 53, scope: !6340)
!6355 = !DILocation(line: 950, column: 60, scope: !6340)
!6356 = !DILocation(line: 950, column: 21, scope: !6340)
!6357 = !DILocation(line: 952, column: 8, scope: !6358)
!6358 = distinct !DILexicalBlock(scope: !6340, file: !89, line: 952, column: 7)
!6359 = !DILocation(line: 952, column: 7, scope: !6340)
!6360 = !DILocation(line: 953, column: 5, scope: !6358)
!6361 = !DILocation(line: 954, column: 7, scope: !6362)
!6362 = distinct !DILexicalBlock(scope: !6340, file: !89, line: 954, column: 7)
!6363 = !DILocation(line: 954, column: 19, scope: !6362)
!6364 = !DILocation(line: 954, column: 26, scope: !6362)
!6365 = !DILocation(line: 954, column: 16, scope: !6362)
!6366 = !DILocation(line: 954, column: 7, scope: !6340)
!6367 = !DILocation(line: 955, column: 5, scope: !6362)
!6368 = !DILocation(line: 956, column: 13, scope: !6340)
!6369 = !DILocation(line: 957, column: 31, scope: !6340)
!6370 = !DILocation(line: 957, column: 23, scope: !6340)
!6371 = !DILocation(line: 957, column: 3, scope: !6340)
!6372 = !DILocation(line: 957, column: 14, scope: !6340)
!6373 = !DILocation(line: 957, column: 21, scope: !6340)
!6374 = !DILocation(line: 958, column: 7, scope: !6375)
!6375 = distinct !DILexicalBlock(scope: !6340, file: !89, line: 958, column: 7)
!6376 = !DILocation(line: 958, column: 18, scope: !6375)
!6377 = !DILocation(line: 958, column: 25, scope: !6375)
!6378 = !DILocation(line: 958, column: 7, scope: !6340)
!6379 = !DILocation(line: 959, column: 5, scope: !6375)
!6380 = !DILocation(line: 960, column: 26, scope: !6340)
!6381 = !DILocation(line: 960, column: 3, scope: !6340)
!6382 = !DILocation(line: 960, column: 14, scope: !6340)
!6383 = !DILocation(line: 960, column: 24, scope: !6340)
!6384 = !DILocation(line: 961, column: 29, scope: !6340)
!6385 = !DILocation(line: 961, column: 40, scope: !6340)
!6386 = !DILocation(line: 961, column: 49, scope: !6340)
!6387 = !DILocation(line: 961, column: 47, scope: !6340)
!6388 = !DILocation(line: 961, column: 3, scope: !6340)
!6389 = !DILocation(line: 961, column: 14, scope: !6340)
!6390 = !DILocation(line: 961, column: 27, scope: !6340)
!6391 = !DILocation(line: 962, column: 3, scope: !6340)
!6392 = !DILocation(line: 962, column: 14, scope: !6340)
!6393 = !DILocation(line: 962, column: 29, scope: !6340)
!6394 = !DILocation(line: 963, column: 3, scope: !6340)
!6395 = !DILocation(line: 963, column: 14, scope: !6340)
!6396 = !DILocation(line: 963, column: 24, scope: !6340)
!6397 = !DILocation(line: 964, column: 23, scope: !6340)
!6398 = !DILocation(line: 964, column: 30, scope: !6340)
!6399 = !DILocation(line: 964, column: 3, scope: !6340)
!6400 = !DILocation(line: 964, column: 14, scope: !6340)
!6401 = !DILocation(line: 964, column: 21, scope: !6340)
!6402 = !DILocation(line: 965, column: 23, scope: !6340)
!6403 = !DILocation(line: 965, column: 30, scope: !6340)
!6404 = !DILocation(line: 965, column: 3, scope: !6340)
!6405 = !DILocation(line: 965, column: 14, scope: !6340)
!6406 = !DILocation(line: 965, column: 21, scope: !6340)
!6407 = !DILocation(line: 966, column: 27, scope: !6340)
!6408 = !DILocation(line: 966, column: 34, scope: !6340)
!6409 = !DILocation(line: 966, column: 3, scope: !6340)
!6410 = !DILocation(line: 966, column: 14, scope: !6340)
!6411 = !DILocation(line: 966, column: 25, scope: !6340)
!6412 = !DILocation(line: 967, column: 27, scope: !6340)
!6413 = !DILocation(line: 967, column: 34, scope: !6340)
!6414 = !DILocation(line: 967, column: 3, scope: !6340)
!6415 = !DILocation(line: 967, column: 14, scope: !6340)
!6416 = !DILocation(line: 967, column: 25, scope: !6340)
!6417 = !DILocation(line: 987, column: 32, scope: !6340)
!6418 = !DILocation(line: 987, column: 39, scope: !6340)
!6419 = !DILocation(line: 987, column: 3, scope: !6340)
!6420 = !DILocation(line: 987, column: 14, scope: !6340)
!6421 = !DILocation(line: 987, column: 30, scope: !6340)
!6422 = !DILocation(line: 989, column: 25, scope: !6423)
!6423 = distinct !DILexicalBlock(scope: !6340, file: !89, line: 989, column: 7)
!6424 = !DILocation(line: 989, column: 36, scope: !6423)
!6425 = !DILocation(line: 989, column: 7, scope: !6423)
!6426 = !DILocation(line: 989, column: 7, scope: !6340)
!6427 = !DILocation(line: 992, column: 13, scope: !6428)
!6428 = distinct !DILexicalBlock(scope: !6423, file: !89, line: 990, column: 5)
!6429 = !DILocation(line: 992, column: 20, scope: !6428)
!6430 = !DILocation(line: 992, column: 7, scope: !6428)
!6431 = !DILocation(line: 993, column: 23, scope: !6428)
!6432 = !DILocation(line: 993, column: 34, scope: !6428)
!6433 = !DILocation(line: 993, column: 7, scope: !6428)
!6434 = !DILocation(line: 993, column: 14, scope: !6428)
!6435 = !DILocation(line: 993, column: 21, scope: !6428)
!6436 = !DILocation(line: 994, column: 29, scope: !6428)
!6437 = !DILocation(line: 994, column: 40, scope: !6428)
!6438 = !DILocation(line: 994, column: 7, scope: !6428)
!6439 = !DILocation(line: 994, column: 14, scope: !6428)
!6440 = !DILocation(line: 994, column: 27, scope: !6428)
!6441 = !DILocation(line: 995, column: 26, scope: !6428)
!6442 = !DILocation(line: 995, column: 37, scope: !6428)
!6443 = !DILocation(line: 995, column: 7, scope: !6428)
!6444 = !DILocation(line: 995, column: 14, scope: !6428)
!6445 = !DILocation(line: 995, column: 24, scope: !6428)
!6446 = !DILocation(line: 996, column: 31, scope: !6428)
!6447 = !DILocation(line: 996, column: 42, scope: !6428)
!6448 = !DILocation(line: 996, column: 7, scope: !6428)
!6449 = !DILocation(line: 996, column: 14, scope: !6428)
!6450 = !DILocation(line: 996, column: 29, scope: !6428)
!6451 = !DILocation(line: 997, column: 32, scope: !6428)
!6452 = !DILocation(line: 997, column: 43, scope: !6428)
!6453 = !DILocation(line: 997, column: 7, scope: !6428)
!6454 = !DILocation(line: 997, column: 14, scope: !6428)
!6455 = !DILocation(line: 997, column: 30, scope: !6428)
!6456 = !DILocation(line: 999, column: 7, scope: !6428)
!6457 = !DILocation(line: 1015, column: 28, scope: !6340)
!6458 = !DILocation(line: 1015, column: 39, scope: !6340)
!6459 = !DILocation(line: 1015, column: 3, scope: !6340)
!6460 = !DILocation(line: 1015, column: 10, scope: !6340)
!6461 = !DILocation(line: 1015, column: 26, scope: !6340)
!6462 = !DILocation(line: 1016, column: 28, scope: !6463)
!6463 = distinct !DILexicalBlock(scope: !6340, file: !89, line: 1016, column: 7)
!6464 = !DILocation(line: 1016, column: 35, scope: !6463)
!6465 = !DILocation(line: 1016, column: 10, scope: !6463)
!6466 = !DILocation(line: 1017, column: 3, scope: !6463)
!6467 = !DILocation(line: 1017, column: 24, scope: !6463)
!6468 = !DILocation(line: 1017, column: 31, scope: !6463)
!6469 = !DILocation(line: 1017, column: 6, scope: !6463)
!6470 = !DILocation(line: 1016, column: 7, scope: !6340)
!6471 = !DILocation(line: 1018, column: 5, scope: !6463)
!6472 = !DILocation(line: 1020, column: 9, scope: !6340)
!6473 = !DILocation(line: 1020, column: 20, scope: !6340)
!6474 = !DILocation(line: 1020, column: 3, scope: !6340)
!6475 = !DILocation(line: 1021, column: 3, scope: !6340)
!6476 = !DILocation(line: 1022, column: 1, scope: !6340)
!6477 = distinct !DISubprogram(name: "transfer_entries", scope: !89, file: !89, line: 857, type: !6478, isLocal: true, isDefinition: true, scopeLine: 858, flags: DIFlagPrototyped, isOptimized: false, unit: !88, variables: !25)
!6478 = !DISubroutineType(types: !6479)
!6479 = !{!79, !5823, !5823, !79}
!6480 = !DILocalVariable(name: "dst", arg: 1, scope: !6477, file: !89, line: 857, type: !5823)
!6481 = !DILocation(line: 857, column: 31, scope: !6477)
!6482 = !DILocalVariable(name: "src", arg: 2, scope: !6477, file: !89, line: 857, type: !5823)
!6483 = !DILocation(line: 857, column: 48, scope: !6477)
!6484 = !DILocalVariable(name: "safe", arg: 3, scope: !6477, file: !89, line: 857, type: !79)
!6485 = !DILocation(line: 857, column: 58, scope: !6477)
!6486 = !DILocalVariable(name: "bucket", scope: !6477, file: !89, line: 859, type: !5240)
!6487 = !DILocation(line: 859, column: 22, scope: !6477)
!6488 = !DILocalVariable(name: "cursor", scope: !6477, file: !89, line: 860, type: !5240)
!6489 = !DILocation(line: 860, column: 22, scope: !6477)
!6490 = !DILocalVariable(name: "next", scope: !6477, file: !89, line: 861, type: !5240)
!6491 = !DILocation(line: 861, column: 22, scope: !6477)
!6492 = !DILocation(line: 862, column: 17, scope: !6493)
!6493 = distinct !DILexicalBlock(scope: !6477, file: !89, line: 862, column: 3)
!6494 = !DILocation(line: 862, column: 22, scope: !6493)
!6495 = !DILocation(line: 862, column: 15, scope: !6493)
!6496 = !DILocation(line: 862, column: 8, scope: !6493)
!6497 = !DILocation(line: 862, column: 30, scope: !6498)
!6498 = distinct !DILexicalBlock(scope: !6493, file: !89, line: 862, column: 3)
!6499 = !DILocation(line: 862, column: 39, scope: !6498)
!6500 = !DILocation(line: 862, column: 44, scope: !6498)
!6501 = !DILocation(line: 862, column: 37, scope: !6498)
!6502 = !DILocation(line: 862, column: 3, scope: !6493)
!6503 = !DILocation(line: 863, column: 9, scope: !6504)
!6504 = distinct !DILexicalBlock(scope: !6498, file: !89, line: 863, column: 9)
!6505 = !DILocation(line: 863, column: 17, scope: !6504)
!6506 = !DILocation(line: 863, column: 9, scope: !6498)
!6507 = !DILocalVariable(name: "data", scope: !6508, file: !89, line: 865, type: !16)
!6508 = distinct !DILexicalBlock(scope: !6504, file: !89, line: 864, column: 7)
!6509 = !DILocation(line: 865, column: 8, scope: !6508)
!6510 = !DILocalVariable(name: "new_bucket", scope: !6508, file: !89, line: 866, type: !5240)
!6511 = !DILocation(line: 866, column: 21, scope: !6508)
!6512 = !DILocation(line: 874, column: 16, scope: !6513)
!6513 = distinct !DILexicalBlock(scope: !6508, file: !89, line: 874, column: 2)
!6514 = !DILocation(line: 874, column: 24, scope: !6513)
!6515 = !DILocation(line: 874, column: 14, scope: !6513)
!6516 = !DILocation(line: 874, column: 7, scope: !6513)
!6517 = !DILocation(line: 874, column: 30, scope: !6518)
!6518 = distinct !DILexicalBlock(scope: !6513, file: !89, line: 874, column: 2)
!6519 = !DILocation(line: 874, column: 2, scope: !6513)
!6520 = !DILocation(line: 876, column: 13, scope: !6521)
!6521 = distinct !DILexicalBlock(scope: !6518, file: !89, line: 875, column: 4)
!6522 = !DILocation(line: 876, column: 21, scope: !6521)
!6523 = !DILocation(line: 876, column: 11, scope: !6521)
!6524 = !DILocation(line: 877, column: 20, scope: !6521)
!6525 = !DILocation(line: 877, column: 25, scope: !6521)
!6526 = !DILocation(line: 877, column: 34, scope: !6521)
!6527 = !DILocation(line: 877, column: 39, scope: !6521)
!6528 = !DILocation(line: 877, column: 47, scope: !6521)
!6529 = !DILocation(line: 877, column: 53, scope: !6521)
!6530 = !DILocation(line: 877, column: 58, scope: !6521)
!6531 = !DILocation(line: 877, column: 32, scope: !6521)
!6532 = !DILocation(line: 877, column: 17, scope: !6521)
!6533 = !DILocation(line: 879, column: 13, scope: !6534)
!6534 = distinct !DILexicalBlock(scope: !6521, file: !89, line: 879, column: 10)
!6535 = !DILocation(line: 879, column: 26, scope: !6534)
!6536 = !DILocation(line: 879, column: 31, scope: !6534)
!6537 = !DILocation(line: 879, column: 24, scope: !6534)
!6538 = !DILocation(line: 879, column: 10, scope: !6521)
!6539 = !DILocation(line: 880, column: 8, scope: !6534)
!6540 = !DILocation(line: 882, column: 13, scope: !6521)
!6541 = !DILocation(line: 882, column: 21, scope: !6521)
!6542 = !DILocation(line: 882, column: 11, scope: !6521)
!6543 = !DILocation(line: 884, column: 10, scope: !6544)
!6544 = distinct !DILexicalBlock(scope: !6521, file: !89, line: 884, column: 10)
!6545 = !DILocation(line: 884, column: 22, scope: !6544)
!6546 = !DILocation(line: 884, column: 10, scope: !6521)
!6547 = !DILocation(line: 888, column: 18, scope: !6548)
!6548 = distinct !DILexicalBlock(scope: !6544, file: !89, line: 885, column: 8)
!6549 = !DILocation(line: 888, column: 30, scope: !6548)
!6550 = !DILocation(line: 888, column: 3, scope: !6548)
!6551 = !DILocation(line: 888, column: 11, scope: !6548)
!6552 = !DILocation(line: 888, column: 16, scope: !6548)
!6553 = !DILocation(line: 889, column: 22, scope: !6548)
!6554 = !DILocation(line: 889, column: 3, scope: !6548)
!6555 = !DILocation(line: 889, column: 15, scope: !6548)
!6556 = !DILocation(line: 889, column: 20, scope: !6548)
!6557 = !DILocation(line: 890, column: 8, scope: !6548)
!6558 = !DILocation(line: 895, column: 22, scope: !6559)
!6559 = distinct !DILexicalBlock(scope: !6544, file: !89, line: 892, column: 8)
!6560 = !DILocation(line: 895, column: 3, scope: !6559)
!6561 = !DILocation(line: 895, column: 15, scope: !6559)
!6562 = !DILocation(line: 895, column: 20, scope: !6559)
!6563 = !DILocation(line: 896, column: 3, scope: !6559)
!6564 = !DILocation(line: 896, column: 8, scope: !6559)
!6565 = !DILocation(line: 896, column: 22, scope: !6559)
!6566 = !DILocation(line: 897, column: 15, scope: !6559)
!6567 = !DILocation(line: 897, column: 20, scope: !6559)
!6568 = !DILocation(line: 897, column: 3, scope: !6559)
!6569 = !DILocation(line: 899, column: 4, scope: !6521)
!6570 = !DILocation(line: 874, column: 47, scope: !6518)
!6571 = !DILocation(line: 874, column: 45, scope: !6518)
!6572 = !DILocation(line: 874, column: 2, scope: !6518)
!6573 = distinct !{!6573, !6519, !6574}
!6574 = !DILocation(line: 899, column: 4, scope: !6513)
!6575 = !DILocation(line: 903, column: 9, scope: !6508)
!6576 = !DILocation(line: 903, column: 17, scope: !6508)
!6577 = !DILocation(line: 903, column: 7, scope: !6508)
!6578 = !DILocation(line: 904, column: 2, scope: !6508)
!6579 = !DILocation(line: 904, column: 10, scope: !6508)
!6580 = !DILocation(line: 904, column: 15, scope: !6508)
!6581 = !DILocation(line: 905, column: 6, scope: !6582)
!6582 = distinct !DILexicalBlock(scope: !6508, file: !89, line: 905, column: 6)
!6583 = !DILocation(line: 905, column: 6, scope: !6508)
!6584 = !DILocation(line: 906, column: 4, scope: !6582)
!6585 = !DILocation(line: 907, column: 16, scope: !6508)
!6586 = !DILocation(line: 907, column: 21, scope: !6508)
!6587 = !DILocation(line: 907, column: 30, scope: !6508)
!6588 = !DILocation(line: 907, column: 35, scope: !6508)
!6589 = !DILocation(line: 907, column: 43, scope: !6508)
!6590 = !DILocation(line: 907, column: 49, scope: !6508)
!6591 = !DILocation(line: 907, column: 54, scope: !6508)
!6592 = !DILocation(line: 907, column: 28, scope: !6508)
!6593 = !DILocation(line: 907, column: 13, scope: !6508)
!6594 = !DILocation(line: 909, column: 9, scope: !6595)
!6595 = distinct !DILexicalBlock(scope: !6508, file: !89, line: 909, column: 6)
!6596 = !DILocation(line: 909, column: 22, scope: !6595)
!6597 = !DILocation(line: 909, column: 27, scope: !6595)
!6598 = !DILocation(line: 909, column: 20, scope: !6595)
!6599 = !DILocation(line: 909, column: 6, scope: !6508)
!6600 = !DILocation(line: 910, column: 4, scope: !6595)
!6601 = !DILocation(line: 912, column: 6, scope: !6602)
!6602 = distinct !DILexicalBlock(scope: !6508, file: !89, line: 912, column: 6)
!6603 = !DILocation(line: 912, column: 18, scope: !6602)
!6604 = !DILocation(line: 912, column: 6, scope: !6508)
!6605 = !DILocalVariable(name: "new_entry", scope: !6606, file: !89, line: 916, type: !5240)
!6606 = distinct !DILexicalBlock(scope: !6602, file: !89, line: 913, column: 4)
!6607 = !DILocation(line: 916, column: 25, scope: !6606)
!6608 = !DILocation(line: 916, column: 53, scope: !6606)
!6609 = !DILocation(line: 916, column: 37, scope: !6606)
!6610 = !DILocation(line: 918, column: 10, scope: !6611)
!6611 = distinct !DILexicalBlock(scope: !6606, file: !89, line: 918, column: 10)
!6612 = !DILocation(line: 918, column: 20, scope: !6611)
!6613 = !DILocation(line: 918, column: 10, scope: !6606)
!6614 = !DILocation(line: 919, column: 8, scope: !6611)
!6615 = !DILocation(line: 921, column: 24, scope: !6606)
!6616 = !DILocation(line: 921, column: 6, scope: !6606)
!6617 = !DILocation(line: 921, column: 17, scope: !6606)
!6618 = !DILocation(line: 921, column: 22, scope: !6606)
!6619 = !DILocation(line: 922, column: 24, scope: !6606)
!6620 = !DILocation(line: 922, column: 36, scope: !6606)
!6621 = !DILocation(line: 922, column: 6, scope: !6606)
!6622 = !DILocation(line: 922, column: 17, scope: !6606)
!6623 = !DILocation(line: 922, column: 22, scope: !6606)
!6624 = !DILocation(line: 923, column: 25, scope: !6606)
!6625 = !DILocation(line: 923, column: 6, scope: !6606)
!6626 = !DILocation(line: 923, column: 18, scope: !6606)
!6627 = !DILocation(line: 923, column: 23, scope: !6606)
!6628 = !DILocation(line: 924, column: 4, scope: !6606)
!6629 = !DILocation(line: 928, column: 25, scope: !6630)
!6630 = distinct !DILexicalBlock(scope: !6602, file: !89, line: 926, column: 4)
!6631 = !DILocation(line: 928, column: 6, scope: !6630)
!6632 = !DILocation(line: 928, column: 18, scope: !6630)
!6633 = !DILocation(line: 928, column: 23, scope: !6630)
!6634 = !DILocation(line: 929, column: 6, scope: !6630)
!6635 = !DILocation(line: 929, column: 11, scope: !6630)
!6636 = !DILocation(line: 929, column: 25, scope: !6630)
!6637 = !DILocation(line: 931, column: 2, scope: !6508)
!6638 = !DILocation(line: 931, column: 10, scope: !6508)
!6639 = !DILocation(line: 931, column: 15, scope: !6508)
!6640 = !DILocation(line: 932, column: 2, scope: !6508)
!6641 = !DILocation(line: 932, column: 7, scope: !6508)
!6642 = !DILocation(line: 932, column: 21, scope: !6508)
!6643 = !DILocation(line: 933, column: 7, scope: !6508)
!6644 = !DILocation(line: 862, column: 64, scope: !6498)
!6645 = !DILocation(line: 862, column: 3, scope: !6498)
!6646 = distinct !{!6646, !6502, !6647}
!6647 = !DILocation(line: 933, column: 7, scope: !6493)
!6648 = !DILocation(line: 934, column: 3, scope: !6477)
!6649 = !DILocation(line: 935, column: 1, scope: !6477)
!6650 = distinct !DISubprogram(name: "free_entry", scope: !89, file: !89, line: 769, type: !6651, isLocal: true, isDefinition: true, scopeLine: 770, flags: DIFlagPrototyped, isOptimized: false, unit: !88, variables: !25)
!6651 = !DISubroutineType(types: !6652)
!6652 = !{null, !5823, !5240}
!6653 = !DILocalVariable(name: "table", arg: 1, scope: !6650, file: !89, line: 769, type: !5823)
!6654 = !DILocation(line: 769, column: 25, scope: !6650)
!6655 = !DILocalVariable(name: "entry", arg: 2, scope: !6650, file: !89, line: 769, type: !5240)
!6656 = !DILocation(line: 769, column: 51, scope: !6650)
!6657 = !DILocation(line: 771, column: 3, scope: !6650)
!6658 = !DILocation(line: 771, column: 10, scope: !6650)
!6659 = !DILocation(line: 771, column: 15, scope: !6650)
!6660 = !DILocation(line: 772, column: 17, scope: !6650)
!6661 = !DILocation(line: 772, column: 24, scope: !6650)
!6662 = !DILocation(line: 772, column: 3, scope: !6650)
!6663 = !DILocation(line: 772, column: 10, scope: !6650)
!6664 = !DILocation(line: 772, column: 15, scope: !6650)
!6665 = !DILocation(line: 773, column: 28, scope: !6650)
!6666 = !DILocation(line: 773, column: 3, scope: !6650)
!6667 = !DILocation(line: 773, column: 10, scope: !6650)
!6668 = !DILocation(line: 773, column: 26, scope: !6650)
!6669 = !DILocation(line: 774, column: 1, scope: !6650)
!6670 = distinct !DISubprogram(name: "allocate_entry", scope: !89, file: !89, line: 744, type: !6671, isLocal: true, isDefinition: true, scopeLine: 745, flags: DIFlagPrototyped, isOptimized: false, unit: !88, variables: !25)
!6671 = !DISubroutineType(types: !6672)
!6672 = !{!5240, !5823}
!6673 = !DILocalVariable(name: "table", arg: 1, scope: !6670, file: !89, line: 744, type: !5823)
!6674 = !DILocation(line: 744, column: 29, scope: !6670)
!6675 = !DILocalVariable(name: "new", scope: !6670, file: !89, line: 746, type: !5240)
!6676 = !DILocation(line: 746, column: 22, scope: !6670)
!6677 = !DILocation(line: 748, column: 7, scope: !6678)
!6678 = distinct !DILexicalBlock(scope: !6670, file: !89, line: 748, column: 7)
!6679 = !DILocation(line: 748, column: 14, scope: !6678)
!6680 = !DILocation(line: 748, column: 7, scope: !6670)
!6681 = !DILocation(line: 750, column: 13, scope: !6682)
!6682 = distinct !DILexicalBlock(scope: !6678, file: !89, line: 749, column: 5)
!6683 = !DILocation(line: 750, column: 20, scope: !6682)
!6684 = !DILocation(line: 750, column: 11, scope: !6682)
!6685 = !DILocation(line: 751, column: 32, scope: !6682)
!6686 = !DILocation(line: 751, column: 37, scope: !6682)
!6687 = !DILocation(line: 751, column: 7, scope: !6682)
!6688 = !DILocation(line: 751, column: 14, scope: !6682)
!6689 = !DILocation(line: 751, column: 30, scope: !6682)
!6690 = !DILocation(line: 752, column: 5, scope: !6682)
!6691 = !DILocation(line: 758, column: 13, scope: !6692)
!6692 = distinct !DILexicalBlock(scope: !6678, file: !89, line: 754, column: 5)
!6693 = !DILocation(line: 758, column: 11, scope: !6692)
!6694 = !DILocation(line: 762, column: 10, scope: !6670)
!6695 = !DILocation(line: 762, column: 3, scope: !6670)
!6696 = distinct !DISubprogram(name: "hash_insert", scope: !89, file: !89, line: 1031, type: !6697, isLocal: false, isDefinition: true, scopeLine: 1032, flags: DIFlagPrototyped, isOptimized: false, unit: !88, variables: !25)
!6697 = !DISubroutineType(types: !6698)
!6698 = !{!16, !5823, !404}
!6699 = !DILocalVariable(name: "table", arg: 1, scope: !6696, file: !89, line: 1031, type: !5823)
!6700 = !DILocation(line: 1031, column: 26, scope: !6696)
!6701 = !DILocalVariable(name: "entry", arg: 2, scope: !6696, file: !89, line: 1031, type: !404)
!6702 = !DILocation(line: 1031, column: 45, scope: !6696)
!6703 = !DILocalVariable(name: "data", scope: !6696, file: !89, line: 1033, type: !16)
!6704 = !DILocation(line: 1033, column: 9, scope: !6696)
!6705 = !DILocalVariable(name: "bucket", scope: !6696, file: !89, line: 1034, type: !5240)
!6706 = !DILocation(line: 1034, column: 22, scope: !6696)
!6707 = !DILocation(line: 1037, column: 9, scope: !6708)
!6708 = distinct !DILexicalBlock(scope: !6696, file: !89, line: 1037, column: 7)
!6709 = !DILocation(line: 1037, column: 7, scope: !6696)
!6710 = !DILocation(line: 1038, column: 5, scope: !6708)
!6711 = !DILocation(line: 1041, column: 32, scope: !6712)
!6712 = distinct !DILexicalBlock(scope: !6696, file: !89, line: 1041, column: 7)
!6713 = !DILocation(line: 1041, column: 39, scope: !6712)
!6714 = !DILocation(line: 1041, column: 15, scope: !6712)
!6715 = !DILocation(line: 1041, column: 13, scope: !6712)
!6716 = !DILocation(line: 1041, column: 63, scope: !6712)
!6717 = !DILocation(line: 1041, column: 7, scope: !6696)
!6718 = !DILocation(line: 1042, column: 12, scope: !6712)
!6719 = !DILocation(line: 1042, column: 5, scope: !6712)
!6720 = !DILocation(line: 1049, column: 7, scope: !6721)
!6721 = distinct !DILexicalBlock(scope: !6696, file: !89, line: 1049, column: 7)
!6722 = !DILocation(line: 1049, column: 14, scope: !6721)
!6723 = !DILocation(line: 1050, column: 9, scope: !6721)
!6724 = !DILocation(line: 1050, column: 16, scope: !6721)
!6725 = !DILocation(line: 1050, column: 24, scope: !6721)
!6726 = !DILocation(line: 1050, column: 43, scope: !6721)
!6727 = !DILocation(line: 1050, column: 50, scope: !6721)
!6728 = !DILocation(line: 1050, column: 41, scope: !6721)
!6729 = !DILocation(line: 1050, column: 7, scope: !6721)
!6730 = !DILocation(line: 1049, column: 7, scope: !6696)
!6731 = !DILocation(line: 1054, column: 21, scope: !6732)
!6732 = distinct !DILexicalBlock(scope: !6721, file: !89, line: 1051, column: 5)
!6733 = !DILocation(line: 1054, column: 7, scope: !6732)
!6734 = !DILocation(line: 1055, column: 11, scope: !6735)
!6735 = distinct !DILexicalBlock(scope: !6732, file: !89, line: 1055, column: 11)
!6736 = !DILocation(line: 1055, column: 18, scope: !6735)
!6737 = !DILocation(line: 1056, column: 6, scope: !6735)
!6738 = !DILocation(line: 1056, column: 13, scope: !6735)
!6739 = !DILocation(line: 1056, column: 21, scope: !6735)
!6740 = !DILocation(line: 1056, column: 40, scope: !6735)
!6741 = !DILocation(line: 1056, column: 47, scope: !6735)
!6742 = !DILocation(line: 1056, column: 38, scope: !6735)
!6743 = !DILocation(line: 1056, column: 4, scope: !6735)
!6744 = !DILocation(line: 1055, column: 11, scope: !6732)
!6745 = !DILocalVariable(name: "tuning", scope: !6746, file: !89, line: 1058, type: !5252)
!6746 = distinct !DILexicalBlock(scope: !6735, file: !89, line: 1057, column: 2)
!6747 = !DILocation(line: 1058, column: 23, scope: !6746)
!6748 = !DILocation(line: 1058, column: 32, scope: !6746)
!6749 = !DILocation(line: 1058, column: 39, scope: !6746)
!6750 = !DILocalVariable(name: "candidate", scope: !6746, file: !89, line: 1059, type: !100)
!6751 = !DILocation(line: 1059, column: 10, scope: !6746)
!6752 = !DILocation(line: 1060, column: 7, scope: !6746)
!6753 = !DILocation(line: 1060, column: 15, scope: !6746)
!6754 = !DILocation(line: 1061, column: 10, scope: !6746)
!6755 = !DILocation(line: 1061, column: 17, scope: !6746)
!6756 = !DILocation(line: 1061, column: 29, scope: !6746)
!6757 = !DILocation(line: 1061, column: 37, scope: !6746)
!6758 = !DILocation(line: 1061, column: 27, scope: !6746)
!6759 = !DILocation(line: 1062, column: 10, scope: !6746)
!6760 = !DILocation(line: 1062, column: 17, scope: !6746)
!6761 = !DILocation(line: 1062, column: 29, scope: !6746)
!6762 = !DILocation(line: 1062, column: 37, scope: !6746)
!6763 = !DILocation(line: 1062, column: 27, scope: !6746)
!6764 = !DILocation(line: 1063, column: 5, scope: !6746)
!6765 = !DILocation(line: 1063, column: 13, scope: !6746)
!6766 = !DILocation(line: 1063, column: 3, scope: !6746)
!6767 = !DILocation(line: 1065, column: 20, scope: !6768)
!6768 = distinct !DILexicalBlock(scope: !6746, file: !89, line: 1065, column: 8)
!6769 = !DILocation(line: 1065, column: 17, scope: !6768)
!6770 = !DILocation(line: 1065, column: 8, scope: !6746)
!6771 = !DILocation(line: 1066, column: 6, scope: !6768)
!6772 = !DILocation(line: 1069, column: 22, scope: !6773)
!6773 = distinct !DILexicalBlock(scope: !6746, file: !89, line: 1069, column: 8)
!6774 = !DILocation(line: 1069, column: 29, scope: !6773)
!6775 = !DILocation(line: 1069, column: 9, scope: !6773)
!6776 = !DILocation(line: 1069, column: 8, scope: !6746)
!6777 = !DILocation(line: 1070, column: 6, scope: !6773)
!6778 = !DILocation(line: 1073, column: 25, scope: !6779)
!6779 = distinct !DILexicalBlock(scope: !6746, file: !89, line: 1073, column: 8)
!6780 = !DILocation(line: 1073, column: 32, scope: !6779)
!6781 = !DILocation(line: 1073, column: 8, scope: !6779)
!6782 = !DILocation(line: 1073, column: 55, scope: !6779)
!6783 = !DILocation(line: 1073, column: 8, scope: !6746)
!6784 = !DILocation(line: 1074, column: 6, scope: !6779)
!6785 = !DILocation(line: 1075, column: 2, scope: !6746)
!6786 = !DILocation(line: 1076, column: 5, scope: !6732)
!6787 = !DILocation(line: 1080, column: 7, scope: !6788)
!6788 = distinct !DILexicalBlock(scope: !6696, file: !89, line: 1080, column: 7)
!6789 = !DILocation(line: 1080, column: 15, scope: !6788)
!6790 = !DILocation(line: 1080, column: 7, scope: !6696)
!6791 = !DILocalVariable(name: "new_entry", scope: !6792, file: !89, line: 1082, type: !5240)
!6792 = distinct !DILexicalBlock(scope: !6788, file: !89, line: 1081, column: 5)
!6793 = !DILocation(line: 1082, column: 26, scope: !6792)
!6794 = !DILocation(line: 1082, column: 54, scope: !6792)
!6795 = !DILocation(line: 1082, column: 38, scope: !6792)
!6796 = !DILocation(line: 1084, column: 11, scope: !6797)
!6797 = distinct !DILexicalBlock(scope: !6792, file: !89, line: 1084, column: 11)
!6798 = !DILocation(line: 1084, column: 21, scope: !6797)
!6799 = !DILocation(line: 1084, column: 11, scope: !6792)
!6800 = !DILocation(line: 1085, column: 2, scope: !6797)
!6801 = !DILocation(line: 1089, column: 34, scope: !6792)
!6802 = !DILocation(line: 1089, column: 7, scope: !6792)
!6803 = !DILocation(line: 1089, column: 18, scope: !6792)
!6804 = !DILocation(line: 1089, column: 23, scope: !6792)
!6805 = !DILocation(line: 1090, column: 25, scope: !6792)
!6806 = !DILocation(line: 1090, column: 33, scope: !6792)
!6807 = !DILocation(line: 1090, column: 7, scope: !6792)
!6808 = !DILocation(line: 1090, column: 18, scope: !6792)
!6809 = !DILocation(line: 1090, column: 23, scope: !6792)
!6810 = !DILocation(line: 1091, column: 22, scope: !6792)
!6811 = !DILocation(line: 1091, column: 7, scope: !6792)
!6812 = !DILocation(line: 1091, column: 15, scope: !6792)
!6813 = !DILocation(line: 1091, column: 20, scope: !6792)
!6814 = !DILocation(line: 1092, column: 7, scope: !6792)
!6815 = !DILocation(line: 1092, column: 14, scope: !6792)
!6816 = !DILocation(line: 1092, column: 23, scope: !6792)
!6817 = !DILocation(line: 1093, column: 23, scope: !6792)
!6818 = !DILocation(line: 1093, column: 7, scope: !6792)
!6819 = !DILocation(line: 1098, column: 27, scope: !6696)
!6820 = !DILocation(line: 1098, column: 3, scope: !6696)
!6821 = !DILocation(line: 1098, column: 11, scope: !6696)
!6822 = !DILocation(line: 1098, column: 16, scope: !6696)
!6823 = !DILocation(line: 1099, column: 3, scope: !6696)
!6824 = !DILocation(line: 1099, column: 10, scope: !6696)
!6825 = !DILocation(line: 1099, column: 19, scope: !6696)
!6826 = !DILocation(line: 1100, column: 3, scope: !6696)
!6827 = !DILocation(line: 1100, column: 10, scope: !6696)
!6828 = !DILocation(line: 1100, column: 24, scope: !6696)
!6829 = !DILocation(line: 1102, column: 19, scope: !6696)
!6830 = !DILocation(line: 1102, column: 3, scope: !6696)
!6831 = !DILocation(line: 1103, column: 1, scope: !6696)
!6832 = distinct !DISubprogram(name: "hash_find_entry", scope: !89, file: !89, line: 783, type: !6833, isLocal: true, isDefinition: true, scopeLine: 785, flags: DIFlagPrototyped, isOptimized: false, unit: !88, variables: !25)
!6833 = !DISubroutineType(types: !6834)
!6834 = !{!16, !5823, !404, !6835, !79}
!6835 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5240, size: 64)
!6836 = !DILocalVariable(name: "table", arg: 1, scope: !6832, file: !89, line: 783, type: !5823)
!6837 = !DILocation(line: 783, column: 30, scope: !6832)
!6838 = !DILocalVariable(name: "entry", arg: 2, scope: !6832, file: !89, line: 783, type: !404)
!6839 = !DILocation(line: 783, column: 49, scope: !6832)
!6840 = !DILocalVariable(name: "bucket_head", arg: 3, scope: !6832, file: !89, line: 784, type: !6835)
!6841 = !DILocation(line: 784, column: 24, scope: !6832)
!6842 = !DILocalVariable(name: "delete", arg: 4, scope: !6832, file: !89, line: 784, type: !79)
!6843 = !DILocation(line: 784, column: 42, scope: !6832)
!6844 = !DILocalVariable(name: "bucket", scope: !6832, file: !89, line: 786, type: !5240)
!6845 = !DILocation(line: 786, column: 22, scope: !6832)
!6846 = !DILocation(line: 787, column: 7, scope: !6832)
!6847 = !DILocation(line: 787, column: 14, scope: !6832)
!6848 = !DILocation(line: 787, column: 23, scope: !6832)
!6849 = !DILocation(line: 787, column: 30, scope: !6832)
!6850 = !DILocation(line: 787, column: 38, scope: !6832)
!6851 = !DILocation(line: 787, column: 45, scope: !6832)
!6852 = !DILocation(line: 787, column: 52, scope: !6832)
!6853 = !DILocation(line: 787, column: 21, scope: !6832)
!6854 = !DILocalVariable(name: "cursor", scope: !6832, file: !89, line: 788, type: !5240)
!6855 = !DILocation(line: 788, column: 22, scope: !6832)
!6856 = !DILocation(line: 790, column: 10, scope: !6857)
!6857 = distinct !DILexicalBlock(scope: !6832, file: !89, line: 790, column: 7)
!6858 = !DILocation(line: 790, column: 19, scope: !6857)
!6859 = !DILocation(line: 790, column: 26, scope: !6857)
!6860 = !DILocation(line: 790, column: 17, scope: !6857)
!6861 = !DILocation(line: 790, column: 7, scope: !6832)
!6862 = !DILocation(line: 791, column: 5, scope: !6857)
!6863 = !DILocation(line: 793, column: 18, scope: !6832)
!6864 = !DILocation(line: 793, column: 4, scope: !6832)
!6865 = !DILocation(line: 793, column: 16, scope: !6832)
!6866 = !DILocation(line: 796, column: 7, scope: !6867)
!6867 = distinct !DILexicalBlock(scope: !6832, file: !89, line: 796, column: 7)
!6868 = !DILocation(line: 796, column: 15, scope: !6867)
!6869 = !DILocation(line: 796, column: 20, scope: !6867)
!6870 = !DILocation(line: 796, column: 7, scope: !6832)
!6871 = !DILocation(line: 797, column: 5, scope: !6867)
!6872 = !DILocation(line: 800, column: 7, scope: !6873)
!6873 = distinct !DILexicalBlock(scope: !6832, file: !89, line: 800, column: 7)
!6874 = !DILocation(line: 800, column: 16, scope: !6873)
!6875 = !DILocation(line: 800, column: 24, scope: !6873)
!6876 = !DILocation(line: 800, column: 13, scope: !6873)
!6877 = !DILocation(line: 800, column: 29, scope: !6873)
!6878 = !DILocation(line: 800, column: 32, scope: !6873)
!6879 = !DILocation(line: 800, column: 39, scope: !6873)
!6880 = !DILocation(line: 800, column: 51, scope: !6873)
!6881 = !DILocation(line: 800, column: 58, scope: !6873)
!6882 = !DILocation(line: 800, column: 66, scope: !6873)
!6883 = !DILocation(line: 800, column: 7, scope: !6832)
!6884 = !DILocalVariable(name: "data", scope: !6885, file: !89, line: 802, type: !16)
!6885 = distinct !DILexicalBlock(scope: !6873, file: !89, line: 801, column: 5)
!6886 = !DILocation(line: 802, column: 13, scope: !6885)
!6887 = !DILocation(line: 802, column: 20, scope: !6885)
!6888 = !DILocation(line: 802, column: 28, scope: !6885)
!6889 = !DILocation(line: 804, column: 11, scope: !6890)
!6890 = distinct !DILexicalBlock(scope: !6885, file: !89, line: 804, column: 11)
!6891 = !DILocation(line: 804, column: 11, scope: !6885)
!6892 = !DILocation(line: 806, column: 8, scope: !6893)
!6893 = distinct !DILexicalBlock(scope: !6894, file: !89, line: 806, column: 8)
!6894 = distinct !DILexicalBlock(scope: !6890, file: !89, line: 805, column: 2)
!6895 = !DILocation(line: 806, column: 16, scope: !6893)
!6896 = !DILocation(line: 806, column: 8, scope: !6894)
!6897 = !DILocalVariable(name: "next", scope: !6898, file: !89, line: 808, type: !5240)
!6898 = distinct !DILexicalBlock(scope: !6893, file: !89, line: 807, column: 6)
!6899 = !DILocation(line: 808, column: 27, scope: !6898)
!6900 = !DILocation(line: 808, column: 34, scope: !6898)
!6901 = !DILocation(line: 808, column: 42, scope: !6898)
!6902 = !DILocation(line: 812, column: 9, scope: !6898)
!6903 = !DILocation(line: 812, column: 19, scope: !6898)
!6904 = !DILocation(line: 812, column: 18, scope: !6898)
!6905 = !DILocation(line: 813, column: 20, scope: !6898)
!6906 = !DILocation(line: 813, column: 27, scope: !6898)
!6907 = !DILocation(line: 813, column: 8, scope: !6898)
!6908 = !DILocation(line: 814, column: 6, scope: !6898)
!6909 = !DILocation(line: 817, column: 8, scope: !6910)
!6910 = distinct !DILexicalBlock(scope: !6893, file: !89, line: 816, column: 6)
!6911 = !DILocation(line: 817, column: 16, scope: !6910)
!6912 = !DILocation(line: 817, column: 21, scope: !6910)
!6913 = !DILocation(line: 819, column: 2, scope: !6894)
!6914 = !DILocation(line: 821, column: 14, scope: !6885)
!6915 = !DILocation(line: 821, column: 7, scope: !6885)
!6916 = !DILocation(line: 825, column: 17, scope: !6917)
!6917 = distinct !DILexicalBlock(scope: !6832, file: !89, line: 825, column: 3)
!6918 = !DILocation(line: 825, column: 15, scope: !6917)
!6919 = !DILocation(line: 825, column: 8, scope: !6917)
!6920 = !DILocation(line: 825, column: 25, scope: !6921)
!6921 = distinct !DILexicalBlock(scope: !6917, file: !89, line: 825, column: 3)
!6922 = !DILocation(line: 825, column: 33, scope: !6921)
!6923 = !DILocation(line: 825, column: 3, scope: !6917)
!6924 = !DILocation(line: 827, column: 11, scope: !6925)
!6925 = distinct !DILexicalBlock(scope: !6926, file: !89, line: 827, column: 11)
!6926 = distinct !DILexicalBlock(scope: !6921, file: !89, line: 826, column: 5)
!6927 = !DILocation(line: 827, column: 20, scope: !6925)
!6928 = !DILocation(line: 827, column: 28, scope: !6925)
!6929 = !DILocation(line: 827, column: 34, scope: !6925)
!6930 = !DILocation(line: 827, column: 17, scope: !6925)
!6931 = !DILocation(line: 828, column: 4, scope: !6925)
!6932 = !DILocation(line: 828, column: 7, scope: !6925)
!6933 = !DILocation(line: 828, column: 14, scope: !6925)
!6934 = !DILocation(line: 828, column: 26, scope: !6925)
!6935 = !DILocation(line: 828, column: 33, scope: !6925)
!6936 = !DILocation(line: 828, column: 41, scope: !6925)
!6937 = !DILocation(line: 828, column: 47, scope: !6925)
!6938 = !DILocation(line: 827, column: 11, scope: !6926)
!6939 = !DILocalVariable(name: "data", scope: !6940, file: !89, line: 830, type: !16)
!6940 = distinct !DILexicalBlock(scope: !6925, file: !89, line: 829, column: 2)
!6941 = !DILocation(line: 830, column: 10, scope: !6940)
!6942 = !DILocation(line: 830, column: 17, scope: !6940)
!6943 = !DILocation(line: 830, column: 25, scope: !6940)
!6944 = !DILocation(line: 830, column: 31, scope: !6940)
!6945 = !DILocation(line: 832, column: 8, scope: !6946)
!6946 = distinct !DILexicalBlock(scope: !6940, file: !89, line: 832, column: 8)
!6947 = !DILocation(line: 832, column: 8, scope: !6940)
!6948 = !DILocalVariable(name: "next", scope: !6949, file: !89, line: 834, type: !5240)
!6949 = distinct !DILexicalBlock(scope: !6946, file: !89, line: 833, column: 6)
!6950 = !DILocation(line: 834, column: 27, scope: !6949)
!6951 = !DILocation(line: 834, column: 34, scope: !6949)
!6952 = !DILocation(line: 834, column: 42, scope: !6949)
!6953 = !DILocation(line: 838, column: 23, scope: !6949)
!6954 = !DILocation(line: 838, column: 29, scope: !6949)
!6955 = !DILocation(line: 838, column: 8, scope: !6949)
!6956 = !DILocation(line: 838, column: 16, scope: !6949)
!6957 = !DILocation(line: 838, column: 21, scope: !6949)
!6958 = !DILocation(line: 839, column: 20, scope: !6949)
!6959 = !DILocation(line: 839, column: 27, scope: !6949)
!6960 = !DILocation(line: 839, column: 8, scope: !6949)
!6961 = !DILocation(line: 840, column: 6, scope: !6949)
!6962 = !DILocation(line: 842, column: 11, scope: !6940)
!6963 = !DILocation(line: 842, column: 4, scope: !6940)
!6964 = !DILocation(line: 844, column: 5, scope: !6926)
!6965 = !DILocation(line: 825, column: 48, scope: !6921)
!6966 = !DILocation(line: 825, column: 56, scope: !6921)
!6967 = !DILocation(line: 825, column: 46, scope: !6921)
!6968 = !DILocation(line: 825, column: 3, scope: !6921)
!6969 = distinct !{!6969, !6923, !6970}
!6970 = !DILocation(line: 844, column: 5, scope: !6917)
!6971 = !DILocation(line: 847, column: 3, scope: !6832)
!6972 = !DILocation(line: 848, column: 1, scope: !6832)
!6973 = distinct !DISubprogram(name: "hash_delete", scope: !89, file: !89, line: 1110, type: !6697, isLocal: false, isDefinition: true, scopeLine: 1111, flags: DIFlagPrototyped, isOptimized: false, unit: !88, variables: !25)
!6974 = !DILocalVariable(name: "table", arg: 1, scope: !6973, file: !89, line: 1110, type: !5823)
!6975 = !DILocation(line: 1110, column: 26, scope: !6973)
!6976 = !DILocalVariable(name: "entry", arg: 2, scope: !6973, file: !89, line: 1110, type: !404)
!6977 = !DILocation(line: 1110, column: 45, scope: !6973)
!6978 = !DILocalVariable(name: "data", scope: !6973, file: !89, line: 1112, type: !16)
!6979 = !DILocation(line: 1112, column: 9, scope: !6973)
!6980 = !DILocalVariable(name: "bucket", scope: !6973, file: !89, line: 1113, type: !5240)
!6981 = !DILocation(line: 1113, column: 22, scope: !6973)
!6982 = !DILocation(line: 1115, column: 27, scope: !6973)
!6983 = !DILocation(line: 1115, column: 34, scope: !6973)
!6984 = !DILocation(line: 1115, column: 10, scope: !6973)
!6985 = !DILocation(line: 1115, column: 8, scope: !6973)
!6986 = !DILocation(line: 1116, column: 8, scope: !6987)
!6987 = distinct !DILexicalBlock(scope: !6973, file: !89, line: 1116, column: 7)
!6988 = !DILocation(line: 1116, column: 7, scope: !6973)
!6989 = !DILocation(line: 1117, column: 5, scope: !6987)
!6990 = !DILocation(line: 1119, column: 3, scope: !6973)
!6991 = !DILocation(line: 1119, column: 10, scope: !6973)
!6992 = !DILocation(line: 1119, column: 19, scope: !6973)
!6993 = !DILocation(line: 1120, column: 8, scope: !6994)
!6994 = distinct !DILexicalBlock(scope: !6973, file: !89, line: 1120, column: 7)
!6995 = !DILocation(line: 1120, column: 16, scope: !6994)
!6996 = !DILocation(line: 1120, column: 7, scope: !6973)
!6997 = !DILocation(line: 1122, column: 7, scope: !6998)
!6998 = distinct !DILexicalBlock(scope: !6994, file: !89, line: 1121, column: 5)
!6999 = !DILocation(line: 1122, column: 14, scope: !6998)
!7000 = !DILocation(line: 1122, column: 28, scope: !6998)
!7001 = !DILocation(line: 1127, column: 11, scope: !7002)
!7002 = distinct !DILexicalBlock(scope: !6998, file: !89, line: 1127, column: 11)
!7003 = !DILocation(line: 1127, column: 18, scope: !7002)
!7004 = !DILocation(line: 1128, column: 6, scope: !7002)
!7005 = !DILocation(line: 1128, column: 13, scope: !7002)
!7006 = !DILocation(line: 1128, column: 21, scope: !7002)
!7007 = !DILocation(line: 1128, column: 40, scope: !7002)
!7008 = !DILocation(line: 1128, column: 47, scope: !7002)
!7009 = !DILocation(line: 1128, column: 38, scope: !7002)
!7010 = !DILocation(line: 1128, column: 4, scope: !7002)
!7011 = !DILocation(line: 1127, column: 11, scope: !6998)
!7012 = !DILocation(line: 1132, column: 18, scope: !7013)
!7013 = distinct !DILexicalBlock(scope: !7002, file: !89, line: 1129, column: 2)
!7014 = !DILocation(line: 1132, column: 4, scope: !7013)
!7015 = !DILocation(line: 1133, column: 8, scope: !7016)
!7016 = distinct !DILexicalBlock(scope: !7013, file: !89, line: 1133, column: 8)
!7017 = !DILocation(line: 1133, column: 15, scope: !7016)
!7018 = !DILocation(line: 1134, column: 10, scope: !7016)
!7019 = !DILocation(line: 1134, column: 17, scope: !7016)
!7020 = !DILocation(line: 1134, column: 25, scope: !7016)
!7021 = !DILocation(line: 1134, column: 44, scope: !7016)
!7022 = !DILocation(line: 1134, column: 51, scope: !7016)
!7023 = !DILocation(line: 1134, column: 42, scope: !7016)
!7024 = !DILocation(line: 1134, column: 8, scope: !7016)
!7025 = !DILocation(line: 1133, column: 8, scope: !7013)
!7026 = !DILocalVariable(name: "tuning", scope: !7027, file: !89, line: 1136, type: !5252)
!7027 = distinct !DILexicalBlock(scope: !7016, file: !89, line: 1135, column: 6)
!7028 = !DILocation(line: 1136, column: 27, scope: !7027)
!7029 = !DILocation(line: 1136, column: 36, scope: !7027)
!7030 = !DILocation(line: 1136, column: 43, scope: !7027)
!7031 = !DILocalVariable(name: "candidate", scope: !7027, file: !89, line: 1137, type: !91)
!7032 = !DILocation(line: 1137, column: 15, scope: !7027)
!7033 = !DILocation(line: 1138, column: 4, scope: !7027)
!7034 = !DILocation(line: 1138, column: 12, scope: !7027)
!7035 = !DILocation(line: 1139, column: 6, scope: !7027)
!7036 = !DILocation(line: 1139, column: 13, scope: !7027)
!7037 = !DILocation(line: 1139, column: 25, scope: !7027)
!7038 = !DILocation(line: 1139, column: 33, scope: !7027)
!7039 = !DILocation(line: 1139, column: 23, scope: !7027)
!7040 = !DILocation(line: 1140, column: 7, scope: !7027)
!7041 = !DILocation(line: 1140, column: 14, scope: !7027)
!7042 = !DILocation(line: 1140, column: 26, scope: !7027)
!7043 = !DILocation(line: 1140, column: 34, scope: !7027)
!7044 = !DILocation(line: 1140, column: 24, scope: !7027)
!7045 = !DILocation(line: 1141, column: 9, scope: !7027)
!7046 = !DILocation(line: 1141, column: 17, scope: !7027)
!7047 = !DILocation(line: 1141, column: 7, scope: !7027)
!7048 = !DILocation(line: 1138, column: 3, scope: !7027)
!7049 = !DILocation(line: 1143, column: 26, scope: !7050)
!7050 = distinct !DILexicalBlock(scope: !7027, file: !89, line: 1143, column: 12)
!7051 = !DILocation(line: 1143, column: 33, scope: !7050)
!7052 = !DILocation(line: 1143, column: 13, scope: !7050)
!7053 = !DILocation(line: 1143, column: 12, scope: !7027)
!7054 = !DILocalVariable(name: "cursor", scope: !7055, file: !89, line: 1151, type: !5240)
!7055 = distinct !DILexicalBlock(scope: !7050, file: !89, line: 1144, column: 3)
!7056 = !DILocation(line: 1151, column: 24, scope: !7055)
!7057 = !DILocation(line: 1151, column: 33, scope: !7055)
!7058 = !DILocation(line: 1151, column: 40, scope: !7055)
!7059 = !DILocalVariable(name: "next", scope: !7055, file: !89, line: 1152, type: !5240)
!7060 = !DILocation(line: 1152, column: 24, scope: !7055)
!7061 = !DILocation(line: 1153, column: 5, scope: !7055)
!7062 = !DILocation(line: 1153, column: 12, scope: !7055)
!7063 = !DILocation(line: 1155, column: 16, scope: !7064)
!7064 = distinct !DILexicalBlock(scope: !7055, file: !89, line: 1154, column: 7)
!7065 = !DILocation(line: 1155, column: 24, scope: !7064)
!7066 = !DILocation(line: 1155, column: 14, scope: !7064)
!7067 = !DILocation(line: 1156, column: 15, scope: !7064)
!7068 = !DILocation(line: 1156, column: 9, scope: !7064)
!7069 = !DILocation(line: 1157, column: 18, scope: !7064)
!7070 = !DILocation(line: 1157, column: 16, scope: !7064)
!7071 = distinct !{!7071, !7061, !7072}
!7072 = !DILocation(line: 1158, column: 7, scope: !7055)
!7073 = !DILocation(line: 1159, column: 5, scope: !7055)
!7074 = !DILocation(line: 1159, column: 12, scope: !7055)
!7075 = !DILocation(line: 1159, column: 28, scope: !7055)
!7076 = !DILocation(line: 1161, column: 3, scope: !7055)
!7077 = !DILocation(line: 1162, column: 6, scope: !7027)
!7078 = !DILocation(line: 1163, column: 2, scope: !7013)
!7079 = !DILocation(line: 1164, column: 5, scope: !6998)
!7080 = !DILocation(line: 1166, column: 10, scope: !6973)
!7081 = !DILocation(line: 1166, column: 3, scope: !6973)
!7082 = !DILocation(line: 1167, column: 1, scope: !6973)
!7083 = distinct !DISubprogram(name: "i_ring_init", scope: !411, file: !411, line: 25, type: !7084, isLocal: false, isDefinition: true, scopeLine: 26, flags: DIFlagPrototyped, isOptimized: false, unit: !410, variables: !25)
!7084 = !DISubroutineType(types: !7085)
!7085 = !{null, !7086, !23}
!7086 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7087, size: 64)
!7087 = !DIDerivedType(tag: DW_TAG_typedef, name: "I_ring", file: !369, line: 39, baseType: !7088)
!7088 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "I_ring", file: !369, line: 31, size: 256, elements: !7089)
!7089 = !{!7090, !7091, !7092, !7093, !7094}
!7090 = !DIDerivedType(tag: DW_TAG_member, name: "ir_data", scope: !7088, file: !369, line: 33, baseType: !373, size: 128)
!7091 = !DIDerivedType(tag: DW_TAG_member, name: "ir_default_val", scope: !7088, file: !369, line: 34, baseType: !23, size: 32, offset: 128)
!7092 = !DIDerivedType(tag: DW_TAG_member, name: "ir_front", scope: !7088, file: !369, line: 35, baseType: !159, size: 32, offset: 160)
!7093 = !DIDerivedType(tag: DW_TAG_member, name: "ir_back", scope: !7088, file: !369, line: 36, baseType: !159, size: 32, offset: 192)
!7094 = !DIDerivedType(tag: DW_TAG_member, name: "ir_empty", scope: !7088, file: !369, line: 37, baseType: !79, size: 8, offset: 224)
!7095 = !DILocalVariable(name: "ir", arg: 1, scope: !7083, file: !411, line: 25, type: !7086)
!7096 = !DILocation(line: 25, column: 22, scope: !7083)
!7097 = !DILocalVariable(name: "default_val", arg: 2, scope: !7083, file: !411, line: 25, type: !23)
!7098 = !DILocation(line: 25, column: 30, scope: !7083)
!7099 = !DILocalVariable(name: "i", scope: !7083, file: !411, line: 27, type: !23)
!7100 = !DILocation(line: 27, column: 7, scope: !7083)
!7101 = !DILocation(line: 28, column: 3, scope: !7083)
!7102 = !DILocation(line: 28, column: 7, scope: !7083)
!7103 = !DILocation(line: 28, column: 16, scope: !7083)
!7104 = !DILocation(line: 29, column: 3, scope: !7083)
!7105 = !DILocation(line: 29, column: 7, scope: !7083)
!7106 = !DILocation(line: 29, column: 16, scope: !7083)
!7107 = !DILocation(line: 30, column: 3, scope: !7083)
!7108 = !DILocation(line: 30, column: 7, scope: !7083)
!7109 = !DILocation(line: 30, column: 15, scope: !7083)
!7110 = !DILocation(line: 31, column: 10, scope: !7111)
!7111 = distinct !DILexicalBlock(scope: !7083, file: !411, line: 31, column: 3)
!7112 = !DILocation(line: 31, column: 8, scope: !7111)
!7113 = !DILocation(line: 31, column: 15, scope: !7114)
!7114 = distinct !DILexicalBlock(scope: !7111, file: !411, line: 31, column: 3)
!7115 = !DILocation(line: 31, column: 17, scope: !7114)
!7116 = !DILocation(line: 31, column: 3, scope: !7111)
!7117 = !DILocation(line: 32, column: 22, scope: !7114)
!7118 = !DILocation(line: 32, column: 5, scope: !7114)
!7119 = !DILocation(line: 32, column: 9, scope: !7114)
!7120 = !DILocation(line: 32, column: 17, scope: !7114)
!7121 = !DILocation(line: 32, column: 20, scope: !7114)
!7122 = !DILocation(line: 31, column: 33, scope: !7114)
!7123 = !DILocation(line: 31, column: 3, scope: !7114)
!7124 = distinct !{!7124, !7116, !7125}
!7125 = !DILocation(line: 32, column: 22, scope: !7111)
!7126 = !DILocation(line: 33, column: 24, scope: !7083)
!7127 = !DILocation(line: 33, column: 3, scope: !7083)
!7128 = !DILocation(line: 33, column: 7, scope: !7083)
!7129 = !DILocation(line: 33, column: 22, scope: !7083)
!7130 = !DILocation(line: 34, column: 1, scope: !7083)
!7131 = distinct !DISubprogram(name: "i_ring_empty", scope: !411, file: !411, line: 37, type: !7132, isLocal: false, isDefinition: true, scopeLine: 38, flags: DIFlagPrototyped, isOptimized: false, unit: !410, variables: !25)
!7132 = !DISubroutineType(types: !7133)
!7133 = !{!79, !7134}
!7134 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7135, size: 64)
!7135 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7087)
!7136 = !DILocalVariable(name: "ir", arg: 1, scope: !7131, file: !411, line: 37, type: !7134)
!7137 = !DILocation(line: 37, column: 29, scope: !7131)
!7138 = !DILocation(line: 39, column: 10, scope: !7131)
!7139 = !DILocation(line: 39, column: 14, scope: !7131)
!7140 = !DILocation(line: 39, column: 3, scope: !7131)
!7141 = distinct !DISubprogram(name: "i_ring_push", scope: !411, file: !411, line: 43, type: !7142, isLocal: false, isDefinition: true, scopeLine: 44, flags: DIFlagPrototyped, isOptimized: false, unit: !410, variables: !25)
!7142 = !DISubroutineType(types: !7143)
!7143 = !{!23, !7086, !23}
!7144 = !DILocalVariable(name: "ir", arg: 1, scope: !7141, file: !411, line: 43, type: !7086)
!7145 = !DILocation(line: 43, column: 22, scope: !7141)
!7146 = !DILocalVariable(name: "val", arg: 2, scope: !7141, file: !411, line: 43, type: !23)
!7147 = !DILocation(line: 43, column: 30, scope: !7141)
!7148 = !DILocalVariable(name: "dest_idx", scope: !7141, file: !411, line: 45, type: !159)
!7149 = !DILocation(line: 45, column: 16, scope: !7141)
!7150 = !DILocation(line: 45, column: 28, scope: !7141)
!7151 = !DILocation(line: 45, column: 32, scope: !7141)
!7152 = !DILocation(line: 45, column: 44, scope: !7141)
!7153 = !DILocation(line: 45, column: 48, scope: !7141)
!7154 = !DILocation(line: 45, column: 43, scope: !7141)
!7155 = !DILocation(line: 45, column: 41, scope: !7141)
!7156 = !DILocation(line: 45, column: 58, scope: !7141)
!7157 = !DILocalVariable(name: "old_val", scope: !7141, file: !411, line: 46, type: !23)
!7158 = !DILocation(line: 46, column: 7, scope: !7141)
!7159 = !DILocation(line: 46, column: 17, scope: !7141)
!7160 = !DILocation(line: 46, column: 21, scope: !7141)
!7161 = !DILocation(line: 46, column: 29, scope: !7141)
!7162 = !DILocation(line: 47, column: 27, scope: !7141)
!7163 = !DILocation(line: 47, column: 3, scope: !7141)
!7164 = !DILocation(line: 47, column: 7, scope: !7141)
!7165 = !DILocation(line: 47, column: 15, scope: !7141)
!7166 = !DILocation(line: 47, column: 25, scope: !7141)
!7167 = !DILocation(line: 48, column: 18, scope: !7141)
!7168 = !DILocation(line: 48, column: 3, scope: !7141)
!7169 = !DILocation(line: 48, column: 7, scope: !7141)
!7170 = !DILocation(line: 48, column: 16, scope: !7141)
!7171 = !DILocation(line: 49, column: 7, scope: !7172)
!7172 = distinct !DILexicalBlock(scope: !7141, file: !411, line: 49, column: 7)
!7173 = !DILocation(line: 49, column: 19, scope: !7172)
!7174 = !DILocation(line: 49, column: 23, scope: !7172)
!7175 = !DILocation(line: 49, column: 16, scope: !7172)
!7176 = !DILocation(line: 49, column: 7, scope: !7141)
!7177 = !DILocation(line: 50, column: 20, scope: !7172)
!7178 = !DILocation(line: 50, column: 24, scope: !7172)
!7179 = !DILocation(line: 50, column: 35, scope: !7172)
!7180 = !DILocation(line: 50, column: 39, scope: !7172)
!7181 = !DILocation(line: 50, column: 34, scope: !7172)
!7182 = !DILocation(line: 50, column: 32, scope: !7172)
!7183 = !DILocation(line: 50, column: 49, scope: !7172)
!7184 = !DILocation(line: 50, column: 5, scope: !7172)
!7185 = !DILocation(line: 50, column: 9, scope: !7172)
!7186 = !DILocation(line: 50, column: 17, scope: !7172)
!7187 = !DILocation(line: 51, column: 3, scope: !7141)
!7188 = !DILocation(line: 51, column: 7, scope: !7141)
!7189 = !DILocation(line: 51, column: 16, scope: !7141)
!7190 = !DILocation(line: 52, column: 10, scope: !7141)
!7191 = !DILocation(line: 52, column: 3, scope: !7141)
!7192 = distinct !DISubprogram(name: "i_ring_pop", scope: !411, file: !411, line: 56, type: !7193, isLocal: false, isDefinition: true, scopeLine: 57, flags: DIFlagPrototyped, isOptimized: false, unit: !410, variables: !25)
!7193 = !DISubroutineType(types: !7194)
!7194 = !{!23, !7086}
!7195 = !DILocalVariable(name: "ir", arg: 1, scope: !7192, file: !411, line: 56, type: !7086)
!7196 = !DILocation(line: 56, column: 21, scope: !7192)
!7197 = !DILocalVariable(name: "top_val", scope: !7192, file: !411, line: 58, type: !23)
!7198 = !DILocation(line: 58, column: 7, scope: !7192)
!7199 = !DILocation(line: 59, column: 21, scope: !7200)
!7200 = distinct !DILexicalBlock(scope: !7192, file: !411, line: 59, column: 7)
!7201 = !DILocation(line: 59, column: 7, scope: !7200)
!7202 = !DILocation(line: 59, column: 7, scope: !7192)
!7203 = !DILocation(line: 60, column: 5, scope: !7200)
!7204 = !DILocation(line: 61, column: 13, scope: !7192)
!7205 = !DILocation(line: 61, column: 17, scope: !7192)
!7206 = !DILocation(line: 61, column: 25, scope: !7192)
!7207 = !DILocation(line: 61, column: 29, scope: !7192)
!7208 = !DILocation(line: 61, column: 11, scope: !7192)
!7209 = !DILocation(line: 62, column: 31, scope: !7192)
!7210 = !DILocation(line: 62, column: 35, scope: !7192)
!7211 = !DILocation(line: 62, column: 3, scope: !7192)
!7212 = !DILocation(line: 62, column: 7, scope: !7192)
!7213 = !DILocation(line: 62, column: 15, scope: !7192)
!7214 = !DILocation(line: 62, column: 19, scope: !7192)
!7215 = !DILocation(line: 62, column: 29, scope: !7192)
!7216 = !DILocation(line: 63, column: 7, scope: !7217)
!7217 = distinct !DILexicalBlock(scope: !7192, file: !411, line: 63, column: 7)
!7218 = !DILocation(line: 63, column: 11, scope: !7217)
!7219 = !DILocation(line: 63, column: 23, scope: !7217)
!7220 = !DILocation(line: 63, column: 27, scope: !7217)
!7221 = !DILocation(line: 63, column: 20, scope: !7217)
!7222 = !DILocation(line: 63, column: 7, scope: !7192)
!7223 = !DILocation(line: 64, column: 5, scope: !7217)
!7224 = !DILocation(line: 64, column: 9, scope: !7217)
!7225 = !DILocation(line: 64, column: 18, scope: !7217)
!7226 = !DILocation(line: 66, column: 22, scope: !7217)
!7227 = !DILocation(line: 66, column: 26, scope: !7217)
!7228 = !DILocation(line: 66, column: 35, scope: !7217)
!7229 = !DILocation(line: 66, column: 49, scope: !7217)
!7230 = !DILocation(line: 66, column: 54, scope: !7217)
!7231 = !DILocation(line: 66, column: 5, scope: !7217)
!7232 = !DILocation(line: 66, column: 9, scope: !7217)
!7233 = !DILocation(line: 66, column: 18, scope: !7217)
!7234 = !DILocation(line: 67, column: 10, scope: !7192)
!7235 = !DILocation(line: 67, column: 3, scope: !7192)
!7236 = distinct !DISubprogram(name: "open_safer", scope: !417, file: !417, line: 29, type: !7237, isLocal: false, isDefinition: true, scopeLine: 30, flags: DIFlagPrototyped, isOptimized: false, unit: !416, variables: !25)
!7237 = !DISubroutineType(types: !7238)
!7238 = !{!23, !12, !23, null}
!7239 = !DILocalVariable(name: "file", arg: 1, scope: !7236, file: !417, line: 29, type: !12)
!7240 = !DILocation(line: 29, column: 25, scope: !7236)
!7241 = !DILocalVariable(name: "flags", arg: 2, scope: !7236, file: !417, line: 29, type: !23)
!7242 = !DILocation(line: 29, column: 35, scope: !7236)
!7243 = !DILocalVariable(name: "mode", scope: !7236, file: !417, line: 31, type: !4953)
!7244 = !DILocation(line: 31, column: 10, scope: !7236)
!7245 = !DILocation(line: 33, column: 7, scope: !7246)
!7246 = distinct !DILexicalBlock(scope: !7236, file: !417, line: 33, column: 7)
!7247 = !DILocation(line: 33, column: 13, scope: !7246)
!7248 = !DILocation(line: 33, column: 7, scope: !7236)
!7249 = !DILocalVariable(name: "ap", scope: !7250, file: !417, line: 35, type: !7251)
!7250 = distinct !DILexicalBlock(scope: !7246, file: !417, line: 34, column: 5)
!7251 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !2034, line: 30, baseType: !7252)
!7252 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !417, line: 35, baseType: !7253)
!7253 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7254, size: 192, elements: !321)
!7254 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", file: !417, line: 35, size: 192, elements: !7255)
!7255 = !{!7256, !7257, !7258, !7259}
!7256 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !7254, file: !417, line: 35, baseType: !159, size: 32)
!7257 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !7254, file: !417, line: 35, baseType: !159, size: 32, offset: 32)
!7258 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !7254, file: !417, line: 35, baseType: !16, size: 64, offset: 64)
!7259 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !7254, file: !417, line: 35, baseType: !16, size: 64, offset: 128)
!7260 = !DILocation(line: 35, column: 15, scope: !7250)
!7261 = !DILocation(line: 36, column: 7, scope: !7250)
!7262 = !DILocation(line: 40, column: 14, scope: !7250)
!7263 = !DILocation(line: 40, column: 12, scope: !7250)
!7264 = !DILocation(line: 42, column: 7, scope: !7250)
!7265 = !DILocation(line: 43, column: 5, scope: !7250)
!7266 = !DILocation(line: 45, column: 26, scope: !7236)
!7267 = !DILocation(line: 45, column: 32, scope: !7236)
!7268 = !DILocation(line: 45, column: 39, scope: !7236)
!7269 = !DILocation(line: 45, column: 20, scope: !7236)
!7270 = !DILocation(line: 45, column: 10, scope: !7236)
!7271 = !DILocation(line: 45, column: 3, scope: !7236)
!7272 = distinct !DISubprogram(name: "openat_safer", scope: !419, file: !419, line: 29, type: !7273, isLocal: false, isDefinition: true, scopeLine: 30, flags: DIFlagPrototyped, isOptimized: false, unit: !418, variables: !25)
!7273 = !DISubroutineType(types: !7274)
!7274 = !{!23, !23, !12, !23, null}
!7275 = !DILocalVariable(name: "fd", arg: 1, scope: !7272, file: !419, line: 29, type: !23)
!7276 = !DILocation(line: 29, column: 19, scope: !7272)
!7277 = !DILocalVariable(name: "file", arg: 2, scope: !7272, file: !419, line: 29, type: !12)
!7278 = !DILocation(line: 29, column: 35, scope: !7272)
!7279 = !DILocalVariable(name: "flags", arg: 3, scope: !7272, file: !419, line: 29, type: !23)
!7280 = !DILocation(line: 29, column: 45, scope: !7272)
!7281 = !DILocalVariable(name: "mode", scope: !7272, file: !419, line: 31, type: !4953)
!7282 = !DILocation(line: 31, column: 10, scope: !7272)
!7283 = !DILocation(line: 33, column: 7, scope: !7284)
!7284 = distinct !DILexicalBlock(scope: !7272, file: !419, line: 33, column: 7)
!7285 = !DILocation(line: 33, column: 13, scope: !7284)
!7286 = !DILocation(line: 33, column: 7, scope: !7272)
!7287 = !DILocalVariable(name: "ap", scope: !7288, file: !419, line: 35, type: !7289)
!7288 = distinct !DILexicalBlock(scope: !7284, file: !419, line: 34, column: 5)
!7289 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !2034, line: 30, baseType: !7290)
!7290 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !419, line: 35, baseType: !7291)
!7291 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7292, size: 192, elements: !321)
!7292 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", file: !419, line: 35, size: 192, elements: !7293)
!7293 = !{!7294, !7295, !7296, !7297}
!7294 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !7292, file: !419, line: 35, baseType: !159, size: 32)
!7295 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !7292, file: !419, line: 35, baseType: !159, size: 32, offset: 32)
!7296 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !7292, file: !419, line: 35, baseType: !16, size: 64, offset: 64)
!7297 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !7292, file: !419, line: 35, baseType: !16, size: 64, offset: 128)
!7298 = !DILocation(line: 35, column: 15, scope: !7288)
!7299 = !DILocation(line: 36, column: 7, scope: !7288)
!7300 = !DILocation(line: 40, column: 14, scope: !7288)
!7301 = !DILocation(line: 40, column: 12, scope: !7288)
!7302 = !DILocation(line: 42, column: 7, scope: !7288)
!7303 = !DILocation(line: 43, column: 5, scope: !7288)
!7304 = !DILocation(line: 45, column: 28, scope: !7272)
!7305 = !DILocation(line: 45, column: 32, scope: !7272)
!7306 = !DILocation(line: 45, column: 38, scope: !7272)
!7307 = !DILocation(line: 45, column: 45, scope: !7272)
!7308 = !DILocation(line: 45, column: 20, scope: !7272)
!7309 = !DILocation(line: 45, column: 10, scope: !7272)
!7310 = !DILocation(line: 45, column: 3, scope: !7272)
!7311 = distinct !DISubprogram(name: "opendir_safer", scope: !421, file: !421, line: 31, type: !7312, isLocal: false, isDefinition: true, scopeLine: 32, flags: DIFlagPrototyped, isOptimized: false, unit: !420, variables: !25)
!7312 = !DISubroutineType(types: !7313)
!7313 = !{!3981, !12}
!7314 = !DILocalVariable(name: "name", arg: 1, scope: !7311, file: !421, line: 31, type: !12)
!7315 = !DILocation(line: 31, column: 28, scope: !7311)
!7316 = !DILocalVariable(name: "dp", scope: !7311, file: !421, line: 33, type: !3981)
!7317 = !DILocation(line: 33, column: 8, scope: !7311)
!7318 = !DILocation(line: 33, column: 22, scope: !7311)
!7319 = !DILocation(line: 33, column: 13, scope: !7311)
!7320 = !DILocation(line: 35, column: 7, scope: !7321)
!7321 = distinct !DILexicalBlock(scope: !7311, file: !421, line: 35, column: 7)
!7322 = !DILocation(line: 35, column: 7, scope: !7311)
!7323 = !DILocalVariable(name: "fd", scope: !7324, file: !421, line: 37, type: !23)
!7324 = distinct !DILexicalBlock(scope: !7321, file: !421, line: 36, column: 5)
!7325 = !DILocation(line: 37, column: 11, scope: !7324)
!7326 = !DILocation(line: 37, column: 23, scope: !7324)
!7327 = !DILocation(line: 37, column: 16, scope: !7324)
!7328 = !DILocation(line: 39, column: 16, scope: !7329)
!7329 = distinct !DILexicalBlock(scope: !7324, file: !421, line: 39, column: 11)
!7330 = !DILocation(line: 39, column: 13, scope: !7329)
!7331 = !DILocation(line: 39, column: 19, scope: !7329)
!7332 = !DILocation(line: 39, column: 22, scope: !7329)
!7333 = !DILocation(line: 39, column: 25, scope: !7329)
!7334 = !DILocation(line: 39, column: 11, scope: !7324)
!7335 = !DILocalVariable(name: "newdp", scope: !7336, file: !421, line: 49, type: !3981)
!7336 = distinct !DILexicalBlock(scope: !7329, file: !421, line: 40, column: 9)
!7337 = !DILocation(line: 49, column: 16, scope: !7336)
!7338 = !DILocalVariable(name: "e", scope: !7336, file: !421, line: 50, type: !23)
!7339 = !DILocation(line: 50, column: 15, scope: !7336)
!7340 = !DILocalVariable(name: "f", scope: !7336, file: !421, line: 52, type: !23)
!7341 = !DILocation(line: 52, column: 15, scope: !7336)
!7342 = !DILocation(line: 52, column: 30, scope: !7336)
!7343 = !DILocation(line: 52, column: 19, scope: !7336)
!7344 = !DILocation(line: 53, column: 30, scope: !7336)
!7345 = !DILocation(line: 53, column: 19, scope: !7336)
!7346 = !DILocation(line: 53, column: 17, scope: !7336)
!7347 = !DILocation(line: 54, column: 15, scope: !7336)
!7348 = !DILocation(line: 54, column: 13, scope: !7336)
!7349 = !DILocation(line: 55, column: 17, scope: !7350)
!7350 = distinct !DILexicalBlock(scope: !7336, file: !421, line: 55, column: 15)
!7351 = !DILocation(line: 55, column: 15, scope: !7336)
!7352 = !DILocation(line: 56, column: 20, scope: !7350)
!7353 = !DILocation(line: 56, column: 13, scope: !7350)
!7354 = !DILocation(line: 61, column: 21, scope: !7336)
!7355 = !DILocation(line: 61, column: 11, scope: !7336)
!7356 = !DILocation(line: 62, column: 19, scope: !7336)
!7357 = !DILocation(line: 62, column: 11, scope: !7336)
!7358 = !DILocation(line: 62, column: 17, scope: !7336)
!7359 = !DILocation(line: 63, column: 16, scope: !7336)
!7360 = !DILocation(line: 63, column: 14, scope: !7336)
!7361 = !DILocation(line: 64, column: 9, scope: !7336)
!7362 = !DILocation(line: 65, column: 5, scope: !7324)
!7363 = !DILocation(line: 67, column: 10, scope: !7311)
!7364 = !DILocation(line: 67, column: 3, scope: !7311)
!7365 = distinct !DISubprogram(name: "quote_n", scope: !423, file: !423, line: 29, type: !7366, isLocal: false, isDefinition: true, scopeLine: 30, flags: DIFlagPrototyped, isOptimized: false, unit: !422, variables: !25)
!7366 = !DISubroutineType(types: !7367)
!7367 = !{!12, !23, !12}
!7368 = !DILocalVariable(name: "n", arg: 1, scope: !7365, file: !423, line: 29, type: !23)
!7369 = !DILocation(line: 29, column: 14, scope: !7365)
!7370 = !DILocalVariable(name: "name", arg: 2, scope: !7365, file: !423, line: 29, type: !12)
!7371 = !DILocation(line: 29, column: 29, scope: !7365)
!7372 = !DILocation(line: 31, column: 28, scope: !7365)
!7373 = !DILocation(line: 31, column: 53, scope: !7365)
!7374 = !DILocation(line: 31, column: 10, scope: !7365)
!7375 = !DILocation(line: 31, column: 3, scope: !7365)
!7376 = distinct !DISubprogram(name: "quote", scope: !423, file: !423, line: 37, type: !7377, isLocal: false, isDefinition: true, scopeLine: 38, flags: DIFlagPrototyped, isOptimized: false, unit: !422, variables: !25)
!7377 = !DISubroutineType(types: !7378)
!7378 = !{!12, !12}
!7379 = !DILocalVariable(name: "name", arg: 1, scope: !7376, file: !423, line: 37, type: !12)
!7380 = !DILocation(line: 37, column: 20, scope: !7376)
!7381 = !DILocation(line: 39, column: 22, scope: !7376)
!7382 = !DILocation(line: 39, column: 10, scope: !7376)
!7383 = !DILocation(line: 39, column: 3, scope: !7376)
!7384 = distinct !DISubprogram(name: "clone_quoting_options", scope: !108, file: !108, line: 99, type: !7385, isLocal: false, isDefinition: true, scopeLine: 100, flags: DIFlagPrototyped, isOptimized: false, unit: !107, variables: !25)
!7385 = !DISubroutineType(types: !7386)
!7386 = !{!7387, !7387}
!7387 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !153, size: 64)
!7388 = !DILocalVariable(name: "o", arg: 1, scope: !7384, file: !108, line: 99, type: !7387)
!7389 = !DILocation(line: 99, column: 48, scope: !7384)
!7390 = !DILocalVariable(name: "e", scope: !7384, file: !108, line: 101, type: !23)
!7391 = !DILocation(line: 101, column: 7, scope: !7384)
!7392 = !DILocation(line: 101, column: 11, scope: !7384)
!7393 = !DILocalVariable(name: "p", scope: !7384, file: !108, line: 102, type: !7387)
!7394 = !DILocation(line: 102, column: 27, scope: !7384)
!7395 = !DILocation(line: 102, column: 40, scope: !7384)
!7396 = !DILocation(line: 102, column: 44, scope: !7384)
!7397 = !DILocation(line: 102, column: 31, scope: !7384)
!7398 = !DILocation(line: 104, column: 11, scope: !7384)
!7399 = !DILocation(line: 104, column: 3, scope: !7384)
!7400 = !DILocation(line: 104, column: 9, scope: !7384)
!7401 = !DILocation(line: 105, column: 10, scope: !7384)
!7402 = !DILocation(line: 105, column: 3, scope: !7384)
!7403 = distinct !DISubprogram(name: "get_quoting_style", scope: !108, file: !108, line: 110, type: !7404, isLocal: false, isDefinition: true, scopeLine: 111, flags: DIFlagPrototyped, isOptimized: false, unit: !107, variables: !25)
!7404 = !DISubroutineType(types: !7405)
!7405 = !{!110, !7387}
!7406 = !DILocalVariable(name: "o", arg: 1, scope: !7403, file: !108, line: 110, type: !7387)
!7407 = !DILocation(line: 110, column: 44, scope: !7403)
!7408 = !DILocation(line: 112, column: 11, scope: !7403)
!7409 = !DILocation(line: 112, column: 15, scope: !7403)
!7410 = !DILocation(line: 112, column: 46, scope: !7403)
!7411 = !DILocation(line: 112, column: 3, scope: !7403)
!7412 = distinct !DISubprogram(name: "set_quoting_style", scope: !108, file: !108, line: 118, type: !7413, isLocal: false, isDefinition: true, scopeLine: 119, flags: DIFlagPrototyped, isOptimized: false, unit: !107, variables: !25)
!7413 = !DISubroutineType(types: !7414)
!7414 = !{null, !7387, !110}
!7415 = !DILocalVariable(name: "o", arg: 1, scope: !7412, file: !108, line: 118, type: !7387)
!7416 = !DILocation(line: 118, column: 44, scope: !7412)
!7417 = !DILocalVariable(name: "s", arg: 2, scope: !7412, file: !108, line: 118, type: !110)
!7418 = !DILocation(line: 118, column: 66, scope: !7412)
!7419 = !DILocation(line: 120, column: 47, scope: !7412)
!7420 = !DILocation(line: 120, column: 4, scope: !7412)
!7421 = !DILocation(line: 120, column: 8, scope: !7412)
!7422 = !DILocation(line: 120, column: 39, scope: !7412)
!7423 = !DILocation(line: 120, column: 45, scope: !7412)
!7424 = !DILocation(line: 121, column: 1, scope: !7412)
!7425 = distinct !DISubprogram(name: "set_char_quoting", scope: !108, file: !108, line: 129, type: !7426, isLocal: false, isDefinition: true, scopeLine: 130, flags: DIFlagPrototyped, isOptimized: false, unit: !107, variables: !25)
!7426 = !DISubroutineType(types: !7427)
!7427 = !{!23, !7387, !14, !23}
!7428 = !DILocalVariable(name: "o", arg: 1, scope: !7425, file: !108, line: 129, type: !7387)
!7429 = !DILocation(line: 129, column: 43, scope: !7425)
!7430 = !DILocalVariable(name: "c", arg: 2, scope: !7425, file: !108, line: 129, type: !14)
!7431 = !DILocation(line: 129, column: 51, scope: !7425)
!7432 = !DILocalVariable(name: "i", arg: 3, scope: !7425, file: !108, line: 129, type: !23)
!7433 = !DILocation(line: 129, column: 58, scope: !7425)
!7434 = !DILocalVariable(name: "uc", scope: !7425, file: !108, line: 131, type: !3967)
!7435 = !DILocation(line: 131, column: 17, scope: !7425)
!7436 = !DILocation(line: 131, column: 22, scope: !7425)
!7437 = !DILocalVariable(name: "p", scope: !7425, file: !108, line: 132, type: !7438)
!7438 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !159, size: 64)
!7439 = !DILocation(line: 132, column: 17, scope: !7425)
!7440 = !DILocation(line: 133, column: 6, scope: !7425)
!7441 = !DILocation(line: 133, column: 10, scope: !7425)
!7442 = !DILocation(line: 133, column: 41, scope: !7425)
!7443 = !DILocation(line: 133, column: 5, scope: !7425)
!7444 = !DILocation(line: 133, column: 59, scope: !7425)
!7445 = !DILocation(line: 133, column: 62, scope: !7425)
!7446 = !DILocation(line: 133, column: 57, scope: !7425)
!7447 = !DILocalVariable(name: "shift", scope: !7425, file: !108, line: 134, type: !23)
!7448 = !DILocation(line: 134, column: 7, scope: !7425)
!7449 = !DILocation(line: 134, column: 15, scope: !7425)
!7450 = !DILocation(line: 134, column: 18, scope: !7425)
!7451 = !DILocalVariable(name: "r", scope: !7425, file: !108, line: 135, type: !23)
!7452 = !DILocation(line: 135, column: 7, scope: !7425)
!7453 = !DILocation(line: 135, column: 13, scope: !7425)
!7454 = !DILocation(line: 135, column: 12, scope: !7425)
!7455 = !DILocation(line: 135, column: 18, scope: !7425)
!7456 = !DILocation(line: 135, column: 15, scope: !7425)
!7457 = !DILocation(line: 135, column: 25, scope: !7425)
!7458 = !DILocation(line: 136, column: 11, scope: !7425)
!7459 = !DILocation(line: 136, column: 13, scope: !7425)
!7460 = !DILocation(line: 136, column: 20, scope: !7425)
!7461 = !DILocation(line: 136, column: 18, scope: !7425)
!7462 = !DILocation(line: 136, column: 26, scope: !7425)
!7463 = !DILocation(line: 136, column: 23, scope: !7425)
!7464 = !DILocation(line: 136, column: 4, scope: !7425)
!7465 = !DILocation(line: 136, column: 6, scope: !7425)
!7466 = !DILocation(line: 137, column: 10, scope: !7425)
!7467 = !DILocation(line: 137, column: 3, scope: !7425)
!7468 = distinct !DISubprogram(name: "set_quoting_flags", scope: !108, file: !108, line: 145, type: !7469, isLocal: false, isDefinition: true, scopeLine: 146, flags: DIFlagPrototyped, isOptimized: false, unit: !107, variables: !25)
!7469 = !DISubroutineType(types: !7470)
!7470 = !{!23, !7387, !23}
!7471 = !DILocalVariable(name: "o", arg: 1, scope: !7468, file: !108, line: 145, type: !7387)
!7472 = !DILocation(line: 145, column: 44, scope: !7468)
!7473 = !DILocalVariable(name: "i", arg: 2, scope: !7468, file: !108, line: 145, type: !23)
!7474 = !DILocation(line: 145, column: 51, scope: !7468)
!7475 = !DILocalVariable(name: "r", scope: !7468, file: !108, line: 147, type: !23)
!7476 = !DILocation(line: 147, column: 7, scope: !7468)
!7477 = !DILocation(line: 148, column: 8, scope: !7478)
!7478 = distinct !DILexicalBlock(scope: !7468, file: !108, line: 148, column: 7)
!7479 = !DILocation(line: 148, column: 7, scope: !7468)
!7480 = !DILocation(line: 149, column: 7, scope: !7478)
!7481 = !DILocation(line: 149, column: 5, scope: !7478)
!7482 = !DILocation(line: 150, column: 7, scope: !7468)
!7483 = !DILocation(line: 150, column: 10, scope: !7468)
!7484 = !DILocation(line: 150, column: 5, scope: !7468)
!7485 = !DILocation(line: 151, column: 14, scope: !7468)
!7486 = !DILocation(line: 151, column: 3, scope: !7468)
!7487 = !DILocation(line: 151, column: 6, scope: !7468)
!7488 = !DILocation(line: 151, column: 12, scope: !7468)
!7489 = !DILocation(line: 152, column: 10, scope: !7468)
!7490 = !DILocation(line: 152, column: 3, scope: !7468)
!7491 = distinct !DISubprogram(name: "set_custom_quoting", scope: !108, file: !108, line: 156, type: !7492, isLocal: false, isDefinition: true, scopeLine: 158, flags: DIFlagPrototyped, isOptimized: false, unit: !107, variables: !25)
!7492 = !DISubroutineType(types: !7493)
!7493 = !{null, !7387, !12, !12}
!7494 = !DILocalVariable(name: "o", arg: 1, scope: !7491, file: !108, line: 156, type: !7387)
!7495 = !DILocation(line: 156, column: 45, scope: !7491)
!7496 = !DILocalVariable(name: "left_quote", arg: 2, scope: !7491, file: !108, line: 157, type: !12)
!7497 = !DILocation(line: 157, column: 33, scope: !7491)
!7498 = !DILocalVariable(name: "right_quote", arg: 3, scope: !7491, file: !108, line: 157, type: !12)
!7499 = !DILocation(line: 157, column: 57, scope: !7491)
!7500 = !DILocation(line: 159, column: 8, scope: !7501)
!7501 = distinct !DILexicalBlock(scope: !7491, file: !108, line: 159, column: 7)
!7502 = !DILocation(line: 159, column: 7, scope: !7491)
!7503 = !DILocation(line: 160, column: 7, scope: !7501)
!7504 = !DILocation(line: 160, column: 5, scope: !7501)
!7505 = !DILocation(line: 161, column: 3, scope: !7491)
!7506 = !DILocation(line: 161, column: 6, scope: !7491)
!7507 = !DILocation(line: 161, column: 12, scope: !7491)
!7508 = !DILocation(line: 162, column: 8, scope: !7509)
!7509 = distinct !DILexicalBlock(scope: !7491, file: !108, line: 162, column: 7)
!7510 = !DILocation(line: 162, column: 19, scope: !7509)
!7511 = !DILocation(line: 162, column: 23, scope: !7509)
!7512 = !DILocation(line: 162, column: 7, scope: !7491)
!7513 = !DILocation(line: 163, column: 5, scope: !7509)
!7514 = !DILocation(line: 164, column: 19, scope: !7491)
!7515 = !DILocation(line: 164, column: 3, scope: !7491)
!7516 = !DILocation(line: 164, column: 6, scope: !7491)
!7517 = !DILocation(line: 164, column: 17, scope: !7491)
!7518 = !DILocation(line: 165, column: 20, scope: !7491)
!7519 = !DILocation(line: 165, column: 3, scope: !7491)
!7520 = !DILocation(line: 165, column: 6, scope: !7491)
!7521 = !DILocation(line: 165, column: 18, scope: !7491)
!7522 = !DILocation(line: 166, column: 1, scope: !7491)
!7523 = distinct !DISubprogram(name: "quotearg_buffer", scope: !108, file: !108, line: 628, type: !7524, isLocal: false, isDefinition: true, scopeLine: 631, flags: DIFlagPrototyped, isOptimized: false, unit: !107, variables: !25)
!7524 = !DISubroutineType(types: !7525)
!7525 = !{!91, !15, !91, !12, !91, !7526}
!7526 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7527, size: 64)
!7527 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !153)
!7528 = !DILocalVariable(name: "buffer", arg: 1, scope: !7523, file: !108, line: 628, type: !15)
!7529 = !DILocation(line: 628, column: 24, scope: !7523)
!7530 = !DILocalVariable(name: "buffersize", arg: 2, scope: !7523, file: !108, line: 628, type: !91)
!7531 = !DILocation(line: 628, column: 39, scope: !7523)
!7532 = !DILocalVariable(name: "arg", arg: 3, scope: !7523, file: !108, line: 629, type: !12)
!7533 = !DILocation(line: 629, column: 16, scope: !7523)
!7534 = !DILocalVariable(name: "argsize", arg: 4, scope: !7523, file: !108, line: 629, type: !91)
!7535 = !DILocation(line: 629, column: 28, scope: !7523)
!7536 = !DILocalVariable(name: "o", arg: 5, scope: !7523, file: !108, line: 630, type: !7526)
!7537 = !DILocation(line: 630, column: 34, scope: !7523)
!7538 = !DILocalVariable(name: "p", scope: !7523, file: !108, line: 632, type: !7526)
!7539 = !DILocation(line: 632, column: 33, scope: !7523)
!7540 = !DILocation(line: 632, column: 37, scope: !7523)
!7541 = !DILocation(line: 632, column: 41, scope: !7523)
!7542 = !DILocalVariable(name: "e", scope: !7523, file: !108, line: 633, type: !23)
!7543 = !DILocation(line: 633, column: 7, scope: !7523)
!7544 = !DILocation(line: 633, column: 11, scope: !7523)
!7545 = !DILocalVariable(name: "r", scope: !7523, file: !108, line: 634, type: !91)
!7546 = !DILocation(line: 634, column: 10, scope: !7523)
!7547 = !DILocation(line: 634, column: 40, scope: !7523)
!7548 = !DILocation(line: 634, column: 48, scope: !7523)
!7549 = !DILocation(line: 634, column: 60, scope: !7523)
!7550 = !DILocation(line: 634, column: 65, scope: !7523)
!7551 = !DILocation(line: 635, column: 12, scope: !7523)
!7552 = !DILocation(line: 635, column: 15, scope: !7523)
!7553 = !DILocation(line: 635, column: 22, scope: !7523)
!7554 = !DILocation(line: 635, column: 25, scope: !7523)
!7555 = !DILocation(line: 635, column: 32, scope: !7523)
!7556 = !DILocation(line: 635, column: 35, scope: !7523)
!7557 = !DILocation(line: 636, column: 12, scope: !7523)
!7558 = !DILocation(line: 636, column: 15, scope: !7523)
!7559 = !DILocation(line: 636, column: 27, scope: !7523)
!7560 = !DILocation(line: 636, column: 30, scope: !7523)
!7561 = !DILocation(line: 634, column: 14, scope: !7523)
!7562 = !DILocation(line: 637, column: 11, scope: !7523)
!7563 = !DILocation(line: 637, column: 3, scope: !7523)
!7564 = !DILocation(line: 637, column: 9, scope: !7523)
!7565 = !DILocation(line: 638, column: 10, scope: !7523)
!7566 = !DILocation(line: 638, column: 3, scope: !7523)
!7567 = distinct !DISubprogram(name: "quotearg_buffer_restyled", scope: !108, file: !108, line: 204, type: !7568, isLocal: true, isDefinition: true, scopeLine: 210, flags: DIFlagPrototyped, isOptimized: false, unit: !107, variables: !25)
!7568 = !DISubroutineType(types: !7569)
!7569 = !{!91, !15, !91, !12, !91, !110, !23, !7570, !12, !12}
!7570 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7571, size: 64)
!7571 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !159)
!7572 = !DILocalVariable(name: "buffer", arg: 1, scope: !7567, file: !108, line: 204, type: !15)
!7573 = !DILocation(line: 204, column: 33, scope: !7567)
!7574 = !DILocalVariable(name: "buffersize", arg: 2, scope: !7567, file: !108, line: 204, type: !91)
!7575 = !DILocation(line: 204, column: 48, scope: !7567)
!7576 = !DILocalVariable(name: "arg", arg: 3, scope: !7567, file: !108, line: 205, type: !12)
!7577 = !DILocation(line: 205, column: 18, scope: !7567)
!7578 = !DILocalVariable(name: "argsize", arg: 4, scope: !7567, file: !108, line: 205, type: !91)
!7579 = !DILocation(line: 205, column: 30, scope: !7567)
!7580 = !DILocalVariable(name: "quoting_style", arg: 5, scope: !7567, file: !108, line: 206, type: !110)
!7581 = !DILocation(line: 206, column: 25, scope: !7567)
!7582 = !DILocalVariable(name: "flags", arg: 6, scope: !7567, file: !108, line: 206, type: !23)
!7583 = !DILocation(line: 206, column: 44, scope: !7567)
!7584 = !DILocalVariable(name: "quote_these_too", arg: 7, scope: !7567, file: !108, line: 207, type: !7570)
!7585 = !DILocation(line: 207, column: 26, scope: !7567)
!7586 = !DILocalVariable(name: "left_quote", arg: 8, scope: !7567, file: !108, line: 208, type: !12)
!7587 = !DILocation(line: 208, column: 18, scope: !7567)
!7588 = !DILocalVariable(name: "right_quote", arg: 9, scope: !7567, file: !108, line: 209, type: !12)
!7589 = !DILocation(line: 209, column: 18, scope: !7567)
!7590 = !DILocalVariable(name: "i", scope: !7567, file: !108, line: 211, type: !91)
!7591 = !DILocation(line: 211, column: 10, scope: !7567)
!7592 = !DILocalVariable(name: "len", scope: !7567, file: !108, line: 212, type: !91)
!7593 = !DILocation(line: 212, column: 10, scope: !7567)
!7594 = !DILocalVariable(name: "quote_string", scope: !7567, file: !108, line: 213, type: !12)
!7595 = !DILocation(line: 213, column: 15, scope: !7567)
!7596 = !DILocalVariable(name: "quote_string_len", scope: !7567, file: !108, line: 214, type: !91)
!7597 = !DILocation(line: 214, column: 10, scope: !7567)
!7598 = !DILocalVariable(name: "backslash_escapes", scope: !7567, file: !108, line: 215, type: !79)
!7599 = !DILocation(line: 215, column: 8, scope: !7567)
!7600 = !DILocalVariable(name: "unibyte_locale", scope: !7567, file: !108, line: 216, type: !79)
!7601 = !DILocation(line: 216, column: 8, scope: !7567)
!7602 = !DILocation(line: 216, column: 25, scope: !7567)
!7603 = !DILocation(line: 216, column: 36, scope: !7567)
!7604 = !DILocalVariable(name: "elide_outer_quotes", scope: !7567, file: !108, line: 217, type: !79)
!7605 = !DILocation(line: 217, column: 8, scope: !7567)
!7606 = !DILocation(line: 217, column: 30, scope: !7567)
!7607 = !DILocation(line: 217, column: 36, scope: !7567)
!7608 = !DILocation(line: 217, column: 61, scope: !7567)
!7609 = !DILocation(line: 228, column: 11, scope: !7567)
!7610 = !DILocation(line: 228, column: 3, scope: !7567)
!7611 = !DILocation(line: 231, column: 21, scope: !7612)
!7612 = distinct !DILexicalBlock(scope: !7567, file: !108, line: 229, column: 5)
!7613 = !DILocation(line: 232, column: 26, scope: !7612)
!7614 = !DILocation(line: 232, column: 7, scope: !7612)
!7615 = !DILocation(line: 235, column: 12, scope: !7616)
!7616 = distinct !DILexicalBlock(scope: !7612, file: !108, line: 235, column: 11)
!7617 = !DILocation(line: 235, column: 11, scope: !7612)
!7618 = !DILocation(line: 236, column: 2, scope: !7616)
!7619 = distinct !{!7619, !7618, !7618}
!7620 = !DILocation(line: 236, column: 2, scope: !7621)
!7621 = distinct !DILexicalBlock(scope: !7622, file: !108, line: 236, column: 2)
!7622 = distinct !DILexicalBlock(scope: !7616, file: !108, line: 236, column: 2)
!7623 = !DILocation(line: 236, column: 2, scope: !7622)
!7624 = !DILocation(line: 237, column: 25, scope: !7612)
!7625 = !DILocation(line: 238, column: 20, scope: !7612)
!7626 = !DILocation(line: 239, column: 24, scope: !7612)
!7627 = !DILocation(line: 240, column: 7, scope: !7612)
!7628 = !DILocation(line: 243, column: 25, scope: !7612)
!7629 = !DILocation(line: 244, column: 26, scope: !7612)
!7630 = !DILocation(line: 245, column: 7, scope: !7612)
!7631 = !DILocation(line: 251, column: 6, scope: !7632)
!7632 = distinct !DILexicalBlock(scope: !7633, file: !108, line: 251, column: 6)
!7633 = distinct !DILexicalBlock(scope: !7612, file: !108, line: 250, column: 7)
!7634 = !DILocation(line: 251, column: 20, scope: !7632)
!7635 = !DILocation(line: 251, column: 6, scope: !7633)
!7636 = !DILocation(line: 272, column: 43, scope: !7637)
!7637 = distinct !DILexicalBlock(scope: !7632, file: !108, line: 252, column: 4)
!7638 = !DILocation(line: 272, column: 19, scope: !7637)
!7639 = !DILocation(line: 272, column: 17, scope: !7637)
!7640 = !DILocation(line: 273, column: 44, scope: !7637)
!7641 = !DILocation(line: 273, column: 20, scope: !7637)
!7642 = !DILocation(line: 273, column: 18, scope: !7637)
!7643 = !DILocation(line: 274, column: 4, scope: !7637)
!7644 = !DILocation(line: 275, column: 7, scope: !7645)
!7645 = distinct !DILexicalBlock(scope: !7633, file: !108, line: 275, column: 6)
!7646 = !DILocation(line: 275, column: 6, scope: !7633)
!7647 = !DILocation(line: 276, column: 24, scope: !7648)
!7648 = distinct !DILexicalBlock(scope: !7645, file: !108, line: 276, column: 4)
!7649 = !DILocation(line: 276, column: 22, scope: !7648)
!7650 = !DILocation(line: 276, column: 9, scope: !7648)
!7651 = !DILocation(line: 276, column: 37, scope: !7652)
!7652 = distinct !DILexicalBlock(scope: !7648, file: !108, line: 276, column: 4)
!7653 = !DILocation(line: 276, column: 36, scope: !7652)
!7654 = !DILocation(line: 276, column: 4, scope: !7648)
!7655 = !DILocation(line: 277, column: 6, scope: !7652)
!7656 = distinct !{!7656, !7655, !7655}
!7657 = !DILocation(line: 277, column: 6, scope: !7658)
!7658 = distinct !DILexicalBlock(scope: !7659, file: !108, line: 277, column: 6)
!7659 = distinct !DILexicalBlock(scope: !7652, file: !108, line: 277, column: 6)
!7660 = !DILocation(line: 277, column: 6, scope: !7659)
!7661 = !DILocation(line: 276, column: 63, scope: !7652)
!7662 = !DILocation(line: 276, column: 4, scope: !7652)
!7663 = distinct !{!7663, !7654, !7664}
!7664 = !DILocation(line: 277, column: 6, scope: !7648)
!7665 = !DILocation(line: 278, column: 20, scope: !7633)
!7666 = !DILocation(line: 279, column: 17, scope: !7633)
!7667 = !DILocation(line: 279, column: 15, scope: !7633)
!7668 = !DILocation(line: 280, column: 29, scope: !7633)
!7669 = !DILocation(line: 280, column: 21, scope: !7633)
!7670 = !DILocation(line: 280, column: 19, scope: !7633)
!7671 = !DILocation(line: 282, column: 7, scope: !7612)
!7672 = !DILocation(line: 285, column: 21, scope: !7612)
!7673 = !DILocation(line: 286, column: 26, scope: !7612)
!7674 = !DILocation(line: 286, column: 7, scope: !7612)
!7675 = !DILocation(line: 289, column: 12, scope: !7676)
!7676 = distinct !DILexicalBlock(scope: !7612, file: !108, line: 289, column: 11)
!7677 = !DILocation(line: 289, column: 11, scope: !7612)
!7678 = !DILocation(line: 290, column: 2, scope: !7676)
!7679 = distinct !{!7679, !7678, !7678}
!7680 = !DILocation(line: 290, column: 2, scope: !7681)
!7681 = distinct !DILexicalBlock(scope: !7682, file: !108, line: 290, column: 2)
!7682 = distinct !DILexicalBlock(scope: !7676, file: !108, line: 290, column: 2)
!7683 = !DILocation(line: 290, column: 2, scope: !7682)
!7684 = !DILocation(line: 291, column: 20, scope: !7612)
!7685 = !DILocation(line: 292, column: 24, scope: !7612)
!7686 = !DILocation(line: 293, column: 7, scope: !7612)
!7687 = !DILocation(line: 296, column: 26, scope: !7612)
!7688 = !DILocation(line: 297, column: 7, scope: !7612)
!7689 = !DILocation(line: 300, column: 7, scope: !7612)
!7690 = !DILocation(line: 303, column: 10, scope: !7691)
!7691 = distinct !DILexicalBlock(scope: !7567, file: !108, line: 303, column: 3)
!7692 = !DILocation(line: 303, column: 8, scope: !7691)
!7693 = !DILocation(line: 303, column: 19, scope: !7694)
!7694 = distinct !DILexicalBlock(scope: !7691, file: !108, line: 303, column: 3)
!7695 = !DILocation(line: 303, column: 27, scope: !7694)
!7696 = !DILocation(line: 303, column: 41, scope: !7694)
!7697 = !DILocation(line: 303, column: 45, scope: !7694)
!7698 = !DILocation(line: 303, column: 48, scope: !7694)
!7699 = !DILocation(line: 303, column: 58, scope: !7694)
!7700 = !DILocation(line: 303, column: 63, scope: !7694)
!7701 = !DILocation(line: 303, column: 60, scope: !7694)
!7702 = !DILocation(line: 303, column: 16, scope: !7694)
!7703 = !DILocation(line: 303, column: 3, scope: !7691)
!7704 = !DILocalVariable(name: "c", scope: !7705, file: !108, line: 305, type: !3967)
!7705 = distinct !DILexicalBlock(scope: !7694, file: !108, line: 304, column: 5)
!7706 = !DILocation(line: 305, column: 21, scope: !7705)
!7707 = !DILocalVariable(name: "esc", scope: !7705, file: !108, line: 306, type: !3967)
!7708 = !DILocation(line: 306, column: 21, scope: !7705)
!7709 = !DILocalVariable(name: "is_right_quote", scope: !7705, file: !108, line: 307, type: !79)
!7710 = !DILocation(line: 307, column: 12, scope: !7705)
!7711 = !DILocation(line: 309, column: 11, scope: !7712)
!7712 = distinct !DILexicalBlock(scope: !7705, file: !108, line: 309, column: 11)
!7713 = !DILocation(line: 310, column: 4, scope: !7712)
!7714 = !DILocation(line: 310, column: 7, scope: !7712)
!7715 = !DILocation(line: 311, column: 4, scope: !7712)
!7716 = !DILocation(line: 311, column: 7, scope: !7712)
!7717 = !DILocation(line: 311, column: 11, scope: !7712)
!7718 = !DILocation(line: 311, column: 9, scope: !7712)
!7719 = !DILocation(line: 311, column: 31, scope: !7712)
!7720 = !DILocation(line: 311, column: 28, scope: !7712)
!7721 = !DILocation(line: 312, column: 4, scope: !7712)
!7722 = !DILocation(line: 312, column: 15, scope: !7712)
!7723 = !DILocation(line: 312, column: 21, scope: !7712)
!7724 = !DILocation(line: 312, column: 19, scope: !7712)
!7725 = !DILocation(line: 312, column: 24, scope: !7712)
!7726 = !DILocation(line: 312, column: 38, scope: !7712)
!7727 = !DILocation(line: 312, column: 7, scope: !7712)
!7728 = !DILocation(line: 312, column: 56, scope: !7712)
!7729 = !DILocation(line: 309, column: 11, scope: !7705)
!7730 = !DILocation(line: 314, column: 8, scope: !7731)
!7731 = distinct !DILexicalBlock(scope: !7732, file: !108, line: 314, column: 8)
!7732 = distinct !DILexicalBlock(scope: !7712, file: !108, line: 313, column: 2)
!7733 = !DILocation(line: 314, column: 8, scope: !7732)
!7734 = !DILocation(line: 315, column: 6, scope: !7731)
!7735 = !DILocation(line: 316, column: 19, scope: !7732)
!7736 = !DILocation(line: 317, column: 2, scope: !7732)
!7737 = !DILocation(line: 319, column: 11, scope: !7705)
!7738 = !DILocation(line: 319, column: 15, scope: !7705)
!7739 = !DILocation(line: 319, column: 9, scope: !7705)
!7740 = !DILocation(line: 320, column: 15, scope: !7705)
!7741 = !DILocation(line: 320, column: 7, scope: !7705)
!7742 = !DILocation(line: 323, column: 8, scope: !7743)
!7743 = distinct !DILexicalBlock(scope: !7744, file: !108, line: 323, column: 8)
!7744 = distinct !DILexicalBlock(scope: !7705, file: !108, line: 321, column: 2)
!7745 = !DILocation(line: 323, column: 8, scope: !7744)
!7746 = !DILocation(line: 325, column: 12, scope: !7747)
!7747 = distinct !DILexicalBlock(scope: !7748, file: !108, line: 325, column: 12)
!7748 = distinct !DILexicalBlock(scope: !7743, file: !108, line: 324, column: 6)
!7749 = !DILocation(line: 325, column: 12, scope: !7748)
!7750 = !DILocation(line: 326, column: 3, scope: !7747)
!7751 = !DILocation(line: 327, column: 8, scope: !7748)
!7752 = distinct !{!7752, !7751, !7751}
!7753 = !DILocation(line: 327, column: 8, scope: !7754)
!7754 = distinct !DILexicalBlock(scope: !7755, file: !108, line: 327, column: 8)
!7755 = distinct !DILexicalBlock(scope: !7748, file: !108, line: 327, column: 8)
!7756 = !DILocation(line: 327, column: 8, scope: !7755)
!7757 = !DILocation(line: 333, column: 12, scope: !7758)
!7758 = distinct !DILexicalBlock(scope: !7748, file: !108, line: 333, column: 12)
!7759 = !DILocation(line: 333, column: 14, scope: !7758)
!7760 = !DILocation(line: 333, column: 20, scope: !7758)
!7761 = !DILocation(line: 333, column: 18, scope: !7758)
!7762 = !DILocation(line: 333, column: 28, scope: !7758)
!7763 = !DILocation(line: 333, column: 38, scope: !7758)
!7764 = !DILocation(line: 333, column: 42, scope: !7758)
!7765 = !DILocation(line: 333, column: 44, scope: !7758)
!7766 = !DILocation(line: 333, column: 35, scope: !7758)
!7767 = !DILocation(line: 333, column: 49, scope: !7758)
!7768 = !DILocation(line: 333, column: 52, scope: !7758)
!7769 = !DILocation(line: 333, column: 56, scope: !7758)
!7770 = !DILocation(line: 333, column: 58, scope: !7758)
!7771 = !DILocation(line: 333, column: 63, scope: !7758)
!7772 = !DILocation(line: 333, column: 12, scope: !7748)
!7773 = !DILocation(line: 335, column: 5, scope: !7774)
!7774 = distinct !DILexicalBlock(scope: !7758, file: !108, line: 334, column: 3)
!7775 = distinct !{!7775, !7773, !7773}
!7776 = !DILocation(line: 335, column: 5, scope: !7777)
!7777 = distinct !DILexicalBlock(scope: !7778, file: !108, line: 335, column: 5)
!7778 = distinct !DILexicalBlock(scope: !7774, file: !108, line: 335, column: 5)
!7779 = !DILocation(line: 335, column: 5, scope: !7778)
!7780 = !DILocation(line: 336, column: 5, scope: !7774)
!7781 = distinct !{!7781, !7780, !7780}
!7782 = !DILocation(line: 336, column: 5, scope: !7783)
!7783 = distinct !DILexicalBlock(scope: !7784, file: !108, line: 336, column: 5)
!7784 = distinct !DILexicalBlock(scope: !7774, file: !108, line: 336, column: 5)
!7785 = !DILocation(line: 336, column: 5, scope: !7784)
!7786 = !DILocation(line: 337, column: 3, scope: !7774)
!7787 = !DILocation(line: 338, column: 10, scope: !7748)
!7788 = !DILocation(line: 343, column: 6, scope: !7748)
!7789 = !DILocation(line: 344, column: 13, scope: !7790)
!7790 = distinct !DILexicalBlock(scope: !7743, file: !108, line: 344, column: 13)
!7791 = !DILocation(line: 344, column: 19, scope: !7790)
!7792 = !DILocation(line: 344, column: 13, scope: !7743)
!7793 = !DILocation(line: 345, column: 6, scope: !7790)
!7794 = !DILocation(line: 346, column: 4, scope: !7744)
!7795 = !DILocation(line: 349, column: 12, scope: !7744)
!7796 = !DILocation(line: 349, column: 4, scope: !7744)
!7797 = !DILocation(line: 352, column: 12, scope: !7798)
!7798 = distinct !DILexicalBlock(scope: !7799, file: !108, line: 352, column: 12)
!7799 = distinct !DILexicalBlock(scope: !7744, file: !108, line: 350, column: 6)
!7800 = !DILocation(line: 352, column: 12, scope: !7799)
!7801 = !DILocation(line: 353, column: 3, scope: !7798)
!7802 = !DILocation(line: 354, column: 8, scope: !7799)
!7803 = !DILocation(line: 357, column: 13, scope: !7804)
!7804 = distinct !DILexicalBlock(scope: !7799, file: !108, line: 357, column: 12)
!7805 = !DILocation(line: 357, column: 19, scope: !7804)
!7806 = !DILocation(line: 358, column: 5, scope: !7804)
!7807 = !DILocation(line: 358, column: 8, scope: !7804)
!7808 = !DILocation(line: 358, column: 10, scope: !7804)
!7809 = !DILocation(line: 358, column: 16, scope: !7804)
!7810 = !DILocation(line: 358, column: 14, scope: !7804)
!7811 = !DILocation(line: 358, column: 24, scope: !7804)
!7812 = !DILocation(line: 358, column: 27, scope: !7804)
!7813 = !DILocation(line: 358, column: 31, scope: !7804)
!7814 = !DILocation(line: 358, column: 33, scope: !7804)
!7815 = !DILocation(line: 358, column: 38, scope: !7804)
!7816 = !DILocation(line: 357, column: 12, scope: !7799)
!7817 = !DILocation(line: 359, column: 11, scope: !7804)
!7818 = !DILocation(line: 359, column: 15, scope: !7804)
!7819 = !DILocation(line: 359, column: 17, scope: !7804)
!7820 = !DILocation(line: 359, column: 3, scope: !7804)
!7821 = !DILocation(line: 366, column: 11, scope: !7822)
!7822 = distinct !DILexicalBlock(scope: !7823, file: !108, line: 366, column: 11)
!7823 = distinct !DILexicalBlock(scope: !7804, file: !108, line: 360, column: 5)
!7824 = !DILocation(line: 366, column: 11, scope: !7823)
!7825 = !DILocation(line: 367, column: 9, scope: !7822)
!7826 = !DILocation(line: 368, column: 11, scope: !7823)
!7827 = !DILocation(line: 368, column: 15, scope: !7823)
!7828 = !DILocation(line: 368, column: 17, scope: !7823)
!7829 = !DILocation(line: 368, column: 9, scope: !7823)
!7830 = !DILocation(line: 369, column: 9, scope: !7823)
!7831 = !DILocation(line: 370, column: 7, scope: !7823)
!7832 = distinct !{!7832, !7831, !7831}
!7833 = !DILocation(line: 370, column: 7, scope: !7834)
!7834 = distinct !DILexicalBlock(scope: !7835, file: !108, line: 370, column: 7)
!7835 = distinct !DILexicalBlock(scope: !7823, file: !108, line: 370, column: 7)
!7836 = !DILocation(line: 370, column: 7, scope: !7835)
!7837 = !DILocation(line: 371, column: 7, scope: !7823)
!7838 = distinct !{!7838, !7837, !7837}
!7839 = !DILocation(line: 371, column: 7, scope: !7840)
!7840 = distinct !DILexicalBlock(scope: !7841, file: !108, line: 371, column: 7)
!7841 = distinct !DILexicalBlock(scope: !7823, file: !108, line: 371, column: 7)
!7842 = !DILocation(line: 371, column: 7, scope: !7841)
!7843 = !DILocation(line: 372, column: 7, scope: !7823)
!7844 = distinct !{!7844, !7843, !7843}
!7845 = !DILocation(line: 372, column: 7, scope: !7846)
!7846 = distinct !DILexicalBlock(scope: !7847, file: !108, line: 372, column: 7)
!7847 = distinct !DILexicalBlock(scope: !7823, file: !108, line: 372, column: 7)
!7848 = !DILocation(line: 372, column: 7, scope: !7847)
!7849 = !DILocation(line: 373, column: 7, scope: !7823)
!7850 = distinct !{!7850, !7849, !7849}
!7851 = !DILocation(line: 373, column: 7, scope: !7852)
!7852 = distinct !DILexicalBlock(scope: !7853, file: !108, line: 373, column: 7)
!7853 = distinct !DILexicalBlock(scope: !7823, file: !108, line: 373, column: 7)
!7854 = !DILocation(line: 373, column: 7, scope: !7853)
!7855 = !DILocation(line: 374, column: 7, scope: !7823)
!7856 = !DILocation(line: 377, column: 7, scope: !7823)
!7857 = !DILocation(line: 378, column: 5, scope: !7823)
!7858 = !DILocation(line: 379, column: 8, scope: !7799)
!7859 = !DILocation(line: 382, column: 8, scope: !7799)
!7860 = !DILocation(line: 384, column: 4, scope: !7744)
!7861 = !DILocation(line: 386, column: 17, scope: !7744)
!7862 = !DILocation(line: 386, column: 24, scope: !7744)
!7863 = !DILocation(line: 387, column: 17, scope: !7744)
!7864 = !DILocation(line: 387, column: 24, scope: !7744)
!7865 = !DILocation(line: 388, column: 17, scope: !7744)
!7866 = !DILocation(line: 388, column: 24, scope: !7744)
!7867 = !DILocation(line: 389, column: 17, scope: !7744)
!7868 = !DILocation(line: 389, column: 24, scope: !7744)
!7869 = !DILocation(line: 390, column: 17, scope: !7744)
!7870 = !DILocation(line: 390, column: 24, scope: !7744)
!7871 = !DILocation(line: 391, column: 17, scope: !7744)
!7872 = !DILocation(line: 391, column: 24, scope: !7744)
!7873 = !DILocation(line: 392, column: 17, scope: !7744)
!7874 = !DILocation(line: 392, column: 24, scope: !7744)
!7875 = !DILocation(line: 393, column: 19, scope: !7744)
!7876 = !DILocation(line: 393, column: 17, scope: !7744)
!7877 = !DILocation(line: 396, column: 8, scope: !7878)
!7878 = distinct !DILexicalBlock(scope: !7744, file: !108, line: 396, column: 8)
!7879 = !DILocation(line: 396, column: 26, scope: !7878)
!7880 = !DILocation(line: 396, column: 29, scope: !7878)
!7881 = !DILocation(line: 396, column: 48, scope: !7878)
!7882 = !DILocation(line: 396, column: 51, scope: !7878)
!7883 = !DILocation(line: 396, column: 8, scope: !7744)
!7884 = !DILocation(line: 397, column: 6, scope: !7878)
!7885 = !DILocation(line: 400, column: 8, scope: !7886)
!7886 = distinct !DILexicalBlock(scope: !7744, file: !108, line: 400, column: 8)
!7887 = !DILocation(line: 400, column: 22, scope: !7886)
!7888 = !DILocation(line: 401, column: 8, scope: !7886)
!7889 = !DILocation(line: 401, column: 11, scope: !7886)
!7890 = !DILocation(line: 400, column: 8, scope: !7744)
!7891 = !DILocation(line: 402, column: 6, scope: !7886)
!7892 = !DILocation(line: 405, column: 8, scope: !7893)
!7893 = distinct !DILexicalBlock(scope: !7744, file: !108, line: 405, column: 8)
!7894 = !DILocation(line: 405, column: 8, scope: !7744)
!7895 = !DILocation(line: 407, column: 12, scope: !7896)
!7896 = distinct !DILexicalBlock(scope: !7893, file: !108, line: 406, column: 6)
!7897 = !DILocation(line: 407, column: 10, scope: !7896)
!7898 = !DILocation(line: 408, column: 8, scope: !7896)
!7899 = !DILocation(line: 410, column: 4, scope: !7744)
!7900 = !DILocation(line: 413, column: 11, scope: !7901)
!7901 = distinct !DILexicalBlock(scope: !7744, file: !108, line: 413, column: 8)
!7902 = !DILocation(line: 413, column: 19, scope: !7901)
!7903 = !DILocation(line: 413, column: 8, scope: !7744)
!7904 = !DILocation(line: 413, column: 33, scope: !7901)
!7905 = !DILocation(line: 413, column: 40, scope: !7901)
!7906 = !DILocation(line: 413, column: 50, scope: !7901)
!7907 = !DILocation(line: 413, column: 58, scope: !7901)
!7908 = !DILocation(line: 414, column: 6, scope: !7901)
!7909 = !DILocation(line: 413, column: 62, scope: !7901)
!7910 = !DILocation(line: 417, column: 8, scope: !7911)
!7911 = distinct !DILexicalBlock(scope: !7744, file: !108, line: 417, column: 8)
!7912 = !DILocation(line: 417, column: 10, scope: !7911)
!7913 = !DILocation(line: 417, column: 8, scope: !7744)
!7914 = !DILocation(line: 418, column: 6, scope: !7911)
!7915 = !DILocation(line: 417, column: 13, scope: !7911)
!7916 = !DILocation(line: 433, column: 8, scope: !7917)
!7917 = distinct !DILexicalBlock(scope: !7744, file: !108, line: 433, column: 8)
!7918 = !DILocation(line: 433, column: 22, scope: !7917)
!7919 = !DILocation(line: 434, column: 8, scope: !7917)
!7920 = !DILocation(line: 434, column: 11, scope: !7917)
!7921 = !DILocation(line: 433, column: 8, scope: !7744)
!7922 = !DILocation(line: 435, column: 6, scope: !7917)
!7923 = !DILocation(line: 436, column: 4, scope: !7744)
!7924 = !DILocation(line: 439, column: 8, scope: !7925)
!7925 = distinct !DILexicalBlock(scope: !7744, file: !108, line: 439, column: 8)
!7926 = !DILocation(line: 439, column: 22, scope: !7925)
!7927 = !DILocation(line: 439, column: 8, scope: !7744)
!7928 = !DILocation(line: 441, column: 12, scope: !7929)
!7929 = distinct !DILexicalBlock(scope: !7930, file: !108, line: 441, column: 12)
!7930 = distinct !DILexicalBlock(scope: !7925, file: !108, line: 440, column: 6)
!7931 = !DILocation(line: 441, column: 12, scope: !7930)
!7932 = !DILocation(line: 442, column: 3, scope: !7929)
!7933 = !DILocation(line: 443, column: 8, scope: !7930)
!7934 = distinct !{!7934, !7933, !7933}
!7935 = !DILocation(line: 443, column: 8, scope: !7936)
!7936 = distinct !DILexicalBlock(scope: !7937, file: !108, line: 443, column: 8)
!7937 = distinct !DILexicalBlock(scope: !7930, file: !108, line: 443, column: 8)
!7938 = !DILocation(line: 443, column: 8, scope: !7937)
!7939 = !DILocation(line: 444, column: 8, scope: !7930)
!7940 = distinct !{!7940, !7939, !7939}
!7941 = !DILocation(line: 444, column: 8, scope: !7942)
!7942 = distinct !DILexicalBlock(scope: !7943, file: !108, line: 444, column: 8)
!7943 = distinct !DILexicalBlock(scope: !7930, file: !108, line: 444, column: 8)
!7944 = !DILocation(line: 444, column: 8, scope: !7943)
!7945 = !DILocation(line: 445, column: 8, scope: !7930)
!7946 = distinct !{!7946, !7945, !7945}
!7947 = !DILocation(line: 445, column: 8, scope: !7948)
!7948 = distinct !DILexicalBlock(scope: !7949, file: !108, line: 445, column: 8)
!7949 = distinct !DILexicalBlock(scope: !7930, file: !108, line: 445, column: 8)
!7950 = !DILocation(line: 445, column: 8, scope: !7949)
!7951 = !DILocation(line: 446, column: 6, scope: !7930)
!7952 = !DILocation(line: 447, column: 4, scope: !7744)
!7953 = !DILocation(line: 471, column: 4, scope: !7744)
!7954 = !DILocalVariable(name: "m", scope: !7955, file: !108, line: 481, type: !91)
!7955 = distinct !DILexicalBlock(scope: !7744, file: !108, line: 479, column: 4)
!7956 = !DILocation(line: 481, column: 13, scope: !7955)
!7957 = !DILocalVariable(name: "printable", scope: !7955, file: !108, line: 483, type: !79)
!7958 = !DILocation(line: 483, column: 11, scope: !7955)
!7959 = !DILocation(line: 485, column: 10, scope: !7960)
!7960 = distinct !DILexicalBlock(scope: !7955, file: !108, line: 485, column: 10)
!7961 = !DILocation(line: 485, column: 10, scope: !7955)
!7962 = !DILocation(line: 487, column: 5, scope: !7963)
!7963 = distinct !DILexicalBlock(scope: !7960, file: !108, line: 486, column: 8)
!7964 = !DILocation(line: 488, column: 15, scope: !7963)
!7965 = !DILocation(line: 488, column: 27, scope: !7963)
!7966 = !DILocation(line: 488, column: 13, scope: !7963)
!7967 = !DILocation(line: 489, column: 8, scope: !7963)
!7968 = !DILocalVariable(name: "mbstate", scope: !7969, file: !108, line: 492, type: !7970)
!7969 = distinct !DILexicalBlock(scope: !7960, file: !108, line: 491, column: 8)
!7970 = !DIDerivedType(tag: DW_TAG_typedef, name: "mbstate_t", file: !7971, line: 6, baseType: !7972)
!7971 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/mbstate_t.h", directory: "/home/ma481/Downloads/Chisel/chisel-bench/benchmark/chown-8.2/original/obj-llvm/lib")
!7972 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mbstate_t", file: !7973, line: 21, baseType: !7974)
!7973 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/__mbstate_t.h", directory: "/home/ma481/Downloads/Chisel/chisel-bench/benchmark/chown-8.2/original/obj-llvm/lib")
!7974 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !7973, line: 13, size: 64, elements: !7975)
!7975 = !{!7976, !7977}
!7976 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !7974, file: !7973, line: 15, baseType: !23, size: 32)
!7977 = !DIDerivedType(tag: DW_TAG_member, name: "__value", scope: !7974, file: !7973, line: 20, baseType: !7978, size: 32, offset: 32)
!7978 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7974, file: !7973, line: 16, size: 32, elements: !7979)
!7979 = !{!7980, !7981}
!7980 = !DIDerivedType(tag: DW_TAG_member, name: "__wch", scope: !7978, file: !7973, line: 18, baseType: !159, size: 32)
!7981 = !DIDerivedType(tag: DW_TAG_member, name: "__wchb", scope: !7978, file: !7973, line: 19, baseType: !7982, size: 32)
!7982 = !DICompositeType(tag: DW_TAG_array_type, baseType: !14, size: 32, elements: !374)
!7983 = !DILocation(line: 492, column: 13, scope: !7969)
!7984 = !DILocation(line: 493, column: 3, scope: !7969)
!7985 = !DILocation(line: 495, column: 5, scope: !7969)
!7986 = !DILocation(line: 496, column: 13, scope: !7969)
!7987 = !DILocation(line: 497, column: 7, scope: !7988)
!7988 = distinct !DILexicalBlock(scope: !7969, file: !108, line: 497, column: 7)
!7989 = !DILocation(line: 497, column: 15, scope: !7988)
!7990 = !DILocation(line: 497, column: 7, scope: !7969)
!7991 = !DILocation(line: 498, column: 23, scope: !7988)
!7992 = !DILocation(line: 498, column: 15, scope: !7988)
!7993 = !DILocation(line: 498, column: 13, scope: !7988)
!7994 = !DILocation(line: 498, column: 5, scope: !7988)
!7995 = !DILocation(line: 500, column: 3, scope: !7969)
!7996 = distinct !{!7996, !7995, !7997}
!7997 = !DILocation(line: 546, column: 30, scope: !7969)
!7998 = !DILocalVariable(name: "w", scope: !7999, file: !108, line: 502, type: !8000)
!7999 = distinct !DILexicalBlock(scope: !7969, file: !108, line: 501, column: 5)
!8000 = !DIDerivedType(tag: DW_TAG_typedef, name: "wchar_t", file: !92, line: 90, baseType: !23)
!8001 = !DILocation(line: 502, column: 15, scope: !7999)
!8002 = !DILocalVariable(name: "bytes", scope: !7999, file: !108, line: 503, type: !91)
!8003 = !DILocation(line: 503, column: 14, scope: !7999)
!8004 = !DILocation(line: 503, column: 36, scope: !7999)
!8005 = !DILocation(line: 503, column: 40, scope: !7999)
!8006 = !DILocation(line: 503, column: 44, scope: !7999)
!8007 = !DILocation(line: 503, column: 42, scope: !7999)
!8008 = !DILocation(line: 504, column: 10, scope: !7999)
!8009 = !DILocation(line: 504, column: 21, scope: !7999)
!8010 = !DILocation(line: 504, column: 25, scope: !7999)
!8011 = !DILocation(line: 504, column: 23, scope: !7999)
!8012 = !DILocation(line: 504, column: 18, scope: !7999)
!8013 = !DILocation(line: 503, column: 22, scope: !7999)
!8014 = !DILocation(line: 505, column: 11, scope: !8015)
!8015 = distinct !DILexicalBlock(scope: !7999, file: !108, line: 505, column: 11)
!8016 = !DILocation(line: 505, column: 17, scope: !8015)
!8017 = !DILocation(line: 505, column: 11, scope: !7999)
!8018 = !DILocation(line: 506, column: 9, scope: !8015)
!8019 = !DILocation(line: 507, column: 16, scope: !8020)
!8020 = distinct !DILexicalBlock(scope: !8015, file: !108, line: 507, column: 16)
!8021 = !DILocation(line: 507, column: 22, scope: !8020)
!8022 = !DILocation(line: 507, column: 16, scope: !8015)
!8023 = !DILocation(line: 509, column: 14, scope: !8024)
!8024 = distinct !DILexicalBlock(scope: !8020, file: !108, line: 508, column: 9)
!8025 = !DILocation(line: 510, column: 4, scope: !8024)
!8026 = !DILocation(line: 512, column: 16, scope: !8027)
!8027 = distinct !DILexicalBlock(scope: !8020, file: !108, line: 512, column: 16)
!8028 = !DILocation(line: 512, column: 22, scope: !8027)
!8029 = !DILocation(line: 512, column: 16, scope: !8020)
!8030 = !DILocation(line: 514, column: 14, scope: !8031)
!8031 = distinct !DILexicalBlock(scope: !8027, file: !108, line: 513, column: 9)
!8032 = !DILocation(line: 515, column: 4, scope: !8031)
!8033 = !DILocation(line: 515, column: 11, scope: !8031)
!8034 = !DILocation(line: 515, column: 15, scope: !8031)
!8035 = !DILocation(line: 515, column: 13, scope: !8031)
!8036 = !DILocation(line: 515, column: 19, scope: !8031)
!8037 = !DILocation(line: 515, column: 17, scope: !8031)
!8038 = !DILocation(line: 515, column: 27, scope: !8031)
!8039 = !DILocation(line: 515, column: 30, scope: !8031)
!8040 = !DILocation(line: 515, column: 34, scope: !8031)
!8041 = !DILocation(line: 515, column: 38, scope: !8031)
!8042 = !DILocation(line: 515, column: 36, scope: !8031)
!8043 = !DILocation(line: 516, column: 7, scope: !8031)
!8044 = distinct !{!8044, !8032, !8043}
!8045 = !DILocation(line: 517, column: 4, scope: !8031)
!8046 = !DILocation(line: 525, column: 23, scope: !8047)
!8047 = distinct !DILexicalBlock(scope: !8048, file: !108, line: 525, column: 8)
!8048 = distinct !DILexicalBlock(scope: !8027, file: !108, line: 520, column: 9)
!8049 = !DILocation(line: 526, column: 8, scope: !8047)
!8050 = !DILocation(line: 526, column: 11, scope: !8047)
!8051 = !DILocation(line: 526, column: 25, scope: !8047)
!8052 = !DILocation(line: 525, column: 8, scope: !8048)
!8053 = !DILocalVariable(name: "j", scope: !8054, file: !108, line: 528, type: !91)
!8054 = distinct !DILexicalBlock(scope: !8047, file: !108, line: 527, column: 6)
!8055 = !DILocation(line: 528, column: 15, scope: !8054)
!8056 = !DILocation(line: 529, column: 15, scope: !8057)
!8057 = distinct !DILexicalBlock(scope: !8054, file: !108, line: 529, column: 8)
!8058 = !DILocation(line: 529, column: 13, scope: !8057)
!8059 = !DILocation(line: 529, column: 20, scope: !8060)
!8060 = distinct !DILexicalBlock(scope: !8057, file: !108, line: 529, column: 8)
!8061 = !DILocation(line: 529, column: 24, scope: !8060)
!8062 = !DILocation(line: 529, column: 22, scope: !8060)
!8063 = !DILocation(line: 529, column: 8, scope: !8057)
!8064 = !DILocation(line: 530, column: 18, scope: !8060)
!8065 = !DILocation(line: 530, column: 22, scope: !8060)
!8066 = !DILocation(line: 530, column: 26, scope: !8060)
!8067 = !DILocation(line: 530, column: 24, scope: !8060)
!8068 = !DILocation(line: 530, column: 30, scope: !8060)
!8069 = !DILocation(line: 530, column: 28, scope: !8060)
!8070 = !DILocation(line: 530, column: 10, scope: !8060)
!8071 = !DILocation(line: 534, column: 7, scope: !8072)
!8072 = distinct !DILexicalBlock(scope: !8060, file: !108, line: 531, column: 5)
!8073 = !DILocation(line: 537, column: 7, scope: !8072)
!8074 = !DILocation(line: 538, column: 5, scope: !8072)
!8075 = !DILocation(line: 529, column: 32, scope: !8060)
!8076 = !DILocation(line: 529, column: 8, scope: !8060)
!8077 = distinct !{!8077, !8063, !8078}
!8078 = !DILocation(line: 538, column: 5, scope: !8057)
!8079 = !DILocation(line: 539, column: 6, scope: !8054)
!8080 = !DILocation(line: 541, column: 20, scope: !8081)
!8081 = distinct !DILexicalBlock(scope: !8048, file: !108, line: 541, column: 8)
!8082 = !DILocation(line: 541, column: 10, scope: !8081)
!8083 = !DILocation(line: 541, column: 8, scope: !8048)
!8084 = !DILocation(line: 542, column: 16, scope: !8081)
!8085 = !DILocation(line: 542, column: 6, scope: !8081)
!8086 = !DILocation(line: 543, column: 9, scope: !8048)
!8087 = !DILocation(line: 543, column: 6, scope: !8048)
!8088 = !DILocation(line: 545, column: 5, scope: !7999)
!8089 = !DILocation(line: 546, column: 12, scope: !7969)
!8090 = !DILocation(line: 546, column: 10, scope: !7969)
!8091 = !DILocation(line: 549, column: 14, scope: !8092)
!8092 = distinct !DILexicalBlock(scope: !7955, file: !108, line: 549, column: 10)
!8093 = !DILocation(line: 549, column: 12, scope: !8092)
!8094 = !DILocation(line: 549, column: 16, scope: !8092)
!8095 = !DILocation(line: 549, column: 20, scope: !8092)
!8096 = !DILocation(line: 549, column: 38, scope: !8092)
!8097 = !DILocation(line: 549, column: 43, scope: !8092)
!8098 = !DILocation(line: 549, column: 10, scope: !7955)
!8099 = !DILocalVariable(name: "ilim", scope: !8100, file: !108, line: 553, type: !91)
!8100 = distinct !DILexicalBlock(scope: !8092, file: !108, line: 550, column: 8)
!8101 = !DILocation(line: 553, column: 10, scope: !8100)
!8102 = !DILocation(line: 553, column: 17, scope: !8100)
!8103 = !DILocation(line: 553, column: 21, scope: !8100)
!8104 = !DILocation(line: 553, column: 19, scope: !8100)
!8105 = !DILocation(line: 555, column: 3, scope: !8100)
!8106 = !DILocation(line: 557, column: 11, scope: !8107)
!8107 = distinct !DILexicalBlock(scope: !8108, file: !108, line: 557, column: 11)
!8108 = distinct !DILexicalBlock(scope: !8109, file: !108, line: 556, column: 5)
!8109 = distinct !DILexicalBlock(scope: !8110, file: !108, line: 555, column: 3)
!8110 = distinct !DILexicalBlock(scope: !8100, file: !108, line: 555, column: 3)
!8111 = !DILocation(line: 557, column: 29, scope: !8107)
!8112 = !DILocation(line: 557, column: 34, scope: !8107)
!8113 = !DILocation(line: 557, column: 11, scope: !8108)
!8114 = !DILocation(line: 559, column: 8, scope: !8115)
!8115 = distinct !DILexicalBlock(scope: !8116, file: !108, line: 559, column: 8)
!8116 = distinct !DILexicalBlock(scope: !8107, file: !108, line: 558, column: 9)
!8117 = !DILocation(line: 559, column: 8, scope: !8116)
!8118 = !DILocation(line: 560, column: 6, scope: !8115)
!8119 = !DILocation(line: 561, column: 4, scope: !8116)
!8120 = distinct !{!8120, !8119, !8119}
!8121 = !DILocation(line: 561, column: 4, scope: !8122)
!8122 = distinct !DILexicalBlock(scope: !8123, file: !108, line: 561, column: 4)
!8123 = distinct !DILexicalBlock(scope: !8116, file: !108, line: 561, column: 4)
!8124 = !DILocation(line: 561, column: 4, scope: !8123)
!8125 = !DILocation(line: 562, column: 4, scope: !8116)
!8126 = distinct !{!8126, !8125, !8125}
!8127 = !DILocation(line: 562, column: 4, scope: !8128)
!8128 = distinct !DILexicalBlock(scope: !8129, file: !108, line: 562, column: 4)
!8129 = distinct !DILexicalBlock(scope: !8116, file: !108, line: 562, column: 4)
!8130 = !DILocation(line: 562, column: 4, scope: !8129)
!8131 = !DILocation(line: 563, column: 4, scope: !8116)
!8132 = distinct !{!8132, !8131, !8131}
!8133 = !DILocation(line: 563, column: 4, scope: !8134)
!8134 = distinct !DILexicalBlock(scope: !8135, file: !108, line: 563, column: 4)
!8135 = distinct !DILexicalBlock(scope: !8116, file: !108, line: 563, column: 4)
!8136 = !DILocation(line: 563, column: 4, scope: !8135)
!8137 = !DILocation(line: 564, column: 15, scope: !8116)
!8138 = !DILocation(line: 564, column: 17, scope: !8116)
!8139 = !DILocation(line: 564, column: 12, scope: !8116)
!8140 = !DILocation(line: 564, column: 8, scope: !8116)
!8141 = !DILocation(line: 564, column: 6, scope: !8116)
!8142 = !DILocation(line: 565, column: 9, scope: !8116)
!8143 = !DILocation(line: 566, column: 16, scope: !8144)
!8144 = distinct !DILexicalBlock(scope: !8107, file: !108, line: 566, column: 16)
!8145 = !DILocation(line: 566, column: 16, scope: !8107)
!8146 = !DILocation(line: 568, column: 4, scope: !8147)
!8147 = distinct !DILexicalBlock(scope: !8144, file: !108, line: 567, column: 9)
!8148 = distinct !{!8148, !8146, !8146}
!8149 = !DILocation(line: 568, column: 4, scope: !8150)
!8150 = distinct !DILexicalBlock(scope: !8151, file: !108, line: 568, column: 4)
!8151 = distinct !DILexicalBlock(scope: !8147, file: !108, line: 568, column: 4)
!8152 = !DILocation(line: 568, column: 4, scope: !8151)
!8153 = !DILocation(line: 569, column: 19, scope: !8147)
!8154 = !DILocation(line: 570, column: 9, scope: !8147)
!8155 = !DILocation(line: 571, column: 11, scope: !8156)
!8156 = distinct !DILexicalBlock(scope: !8108, file: !108, line: 571, column: 11)
!8157 = !DILocation(line: 571, column: 19, scope: !8156)
!8158 = !DILocation(line: 571, column: 21, scope: !8156)
!8159 = !DILocation(line: 571, column: 16, scope: !8156)
!8160 = !DILocation(line: 571, column: 11, scope: !8108)
!8161 = !DILocation(line: 572, column: 9, scope: !8156)
!8162 = !DILocation(line: 573, column: 7, scope: !8108)
!8163 = distinct !{!8163, !8162, !8162}
!8164 = !DILocation(line: 573, column: 7, scope: !8165)
!8165 = distinct !DILexicalBlock(scope: !8166, file: !108, line: 573, column: 7)
!8166 = distinct !DILexicalBlock(scope: !8108, file: !108, line: 573, column: 7)
!8167 = !DILocation(line: 573, column: 7, scope: !8166)
!8168 = !DILocation(line: 574, column: 11, scope: !8108)
!8169 = !DILocation(line: 574, column: 15, scope: !8108)
!8170 = !DILocation(line: 574, column: 9, scope: !8108)
!8171 = !DILocation(line: 555, column: 3, scope: !8109)
!8172 = distinct !{!8172, !8173, !8174}
!8173 = !DILocation(line: 555, column: 3, scope: !8110)
!8174 = !DILocation(line: 575, column: 5, scope: !8110)
!8175 = !DILocation(line: 577, column: 3, scope: !8100)
!8176 = !DILocation(line: 580, column: 2, scope: !7744)
!8177 = !DILocation(line: 582, column: 15, scope: !8178)
!8178 = distinct !DILexicalBlock(scope: !7705, file: !108, line: 582, column: 11)
!8179 = !DILocation(line: 582, column: 33, scope: !8178)
!8180 = !DILocation(line: 582, column: 36, scope: !8178)
!8181 = !DILocation(line: 583, column: 7, scope: !8178)
!8182 = !DILocation(line: 583, column: 10, scope: !8178)
!8183 = !DILocation(line: 584, column: 7, scope: !8178)
!8184 = !DILocation(line: 584, column: 10, scope: !8178)
!8185 = !DILocation(line: 584, column: 26, scope: !8178)
!8186 = !DILocation(line: 584, column: 28, scope: !8178)
!8187 = !DILocation(line: 584, column: 49, scope: !8178)
!8188 = !DILocation(line: 584, column: 51, scope: !8178)
!8189 = !DILocation(line: 584, column: 45, scope: !8178)
!8190 = !DILocation(line: 584, column: 40, scope: !8178)
!8191 = !DILocation(line: 585, column: 4, scope: !8178)
!8192 = !DILocation(line: 585, column: 8, scope: !8178)
!8193 = !DILocation(line: 582, column: 11, scope: !7705)
!8194 = !DILocation(line: 586, column: 2, scope: !8178)
!8195 = !DILocation(line: 589, column: 11, scope: !8196)
!8196 = distinct !DILexicalBlock(scope: !7705, file: !108, line: 589, column: 11)
!8197 = !DILocation(line: 589, column: 11, scope: !7705)
!8198 = !DILocation(line: 590, column: 2, scope: !8196)
!8199 = !DILocation(line: 591, column: 7, scope: !7705)
!8200 = distinct !{!8200, !8199, !8199}
!8201 = !DILocation(line: 591, column: 7, scope: !8202)
!8202 = distinct !DILexicalBlock(scope: !8203, file: !108, line: 591, column: 7)
!8203 = distinct !DILexicalBlock(scope: !7705, file: !108, line: 591, column: 7)
!8204 = !DILocation(line: 591, column: 7, scope: !8203)
!8205 = !DILocation(line: 594, column: 7, scope: !7705)
!8206 = distinct !{!8206, !8205, !8205}
!8207 = !DILocation(line: 594, column: 7, scope: !8208)
!8208 = distinct !DILexicalBlock(scope: !8209, file: !108, line: 594, column: 7)
!8209 = distinct !DILexicalBlock(scope: !7705, file: !108, line: 594, column: 7)
!8210 = !DILocation(line: 594, column: 7, scope: !8209)
!8211 = !DILocation(line: 595, column: 5, scope: !7705)
!8212 = !DILocation(line: 303, column: 75, scope: !7694)
!8213 = !DILocation(line: 303, column: 3, scope: !7694)
!8214 = distinct !{!8214, !7703, !8215}
!8215 = !DILocation(line: 595, column: 5, scope: !7691)
!8216 = !DILocation(line: 597, column: 7, scope: !8217)
!8217 = distinct !DILexicalBlock(scope: !7567, file: !108, line: 597, column: 7)
!8218 = !DILocation(line: 597, column: 11, scope: !8217)
!8219 = !DILocation(line: 597, column: 16, scope: !8217)
!8220 = !DILocation(line: 597, column: 19, scope: !8217)
!8221 = !DILocation(line: 597, column: 33, scope: !8217)
!8222 = !DILocation(line: 598, column: 7, scope: !8217)
!8223 = !DILocation(line: 598, column: 10, scope: !8217)
!8224 = !DILocation(line: 597, column: 7, scope: !7567)
!8225 = !DILocation(line: 599, column: 5, scope: !8217)
!8226 = !DILocation(line: 601, column: 7, scope: !8227)
!8227 = distinct !DILexicalBlock(scope: !7567, file: !108, line: 601, column: 7)
!8228 = !DILocation(line: 601, column: 20, scope: !8227)
!8229 = !DILocation(line: 601, column: 24, scope: !8227)
!8230 = !DILocation(line: 601, column: 7, scope: !7567)
!8231 = !DILocation(line: 602, column: 5, scope: !8227)
!8232 = !DILocation(line: 602, column: 13, scope: !8233)
!8233 = distinct !DILexicalBlock(scope: !8234, file: !108, line: 602, column: 5)
!8234 = distinct !DILexicalBlock(scope: !8227, file: !108, line: 602, column: 5)
!8235 = !DILocation(line: 602, column: 12, scope: !8233)
!8236 = !DILocation(line: 602, column: 5, scope: !8234)
!8237 = !DILocation(line: 603, column: 7, scope: !8233)
!8238 = distinct !{!8238, !8237, !8237}
!8239 = !DILocation(line: 603, column: 7, scope: !8240)
!8240 = distinct !DILexicalBlock(scope: !8241, file: !108, line: 603, column: 7)
!8241 = distinct !DILexicalBlock(scope: !8233, file: !108, line: 603, column: 7)
!8242 = !DILocation(line: 603, column: 7, scope: !8241)
!8243 = !DILocation(line: 602, column: 39, scope: !8233)
!8244 = !DILocation(line: 602, column: 5, scope: !8233)
!8245 = distinct !{!8245, !8236, !8246}
!8246 = !DILocation(line: 603, column: 7, scope: !8234)
!8247 = !DILocation(line: 605, column: 7, scope: !8248)
!8248 = distinct !DILexicalBlock(scope: !7567, file: !108, line: 605, column: 7)
!8249 = !DILocation(line: 605, column: 13, scope: !8248)
!8250 = !DILocation(line: 605, column: 11, scope: !8248)
!8251 = !DILocation(line: 605, column: 7, scope: !7567)
!8252 = !DILocation(line: 606, column: 5, scope: !8248)
!8253 = !DILocation(line: 606, column: 12, scope: !8248)
!8254 = !DILocation(line: 606, column: 17, scope: !8248)
!8255 = !DILocation(line: 607, column: 10, scope: !7567)
!8256 = !DILocation(line: 607, column: 3, scope: !7567)
!8257 = !DILocation(line: 612, column: 36, scope: !7567)
!8258 = !DILocation(line: 612, column: 44, scope: !7567)
!8259 = !DILocation(line: 612, column: 56, scope: !7567)
!8260 = !DILocation(line: 612, column: 61, scope: !7567)
!8261 = !DILocation(line: 613, column: 8, scope: !7567)
!8262 = !DILocation(line: 614, column: 8, scope: !7567)
!8263 = !DILocation(line: 614, column: 14, scope: !7567)
!8264 = !DILocation(line: 615, column: 8, scope: !7567)
!8265 = !DILocation(line: 615, column: 20, scope: !7567)
!8266 = !DILocation(line: 612, column: 10, scope: !7567)
!8267 = !DILocation(line: 612, column: 3, scope: !7567)
!8268 = !DILocation(line: 616, column: 1, scope: !7567)
!8269 = distinct !DISubprogram(name: "gettext_quote", scope: !108, file: !108, line: 182, type: !8270, isLocal: true, isDefinition: true, scopeLine: 183, flags: DIFlagPrototyped, isOptimized: false, unit: !107, variables: !25)
!8270 = !DISubroutineType(types: !8271)
!8271 = !{!12, !12, !110}
!8272 = !DILocalVariable(name: "msgid", arg: 1, scope: !8269, file: !108, line: 182, type: !12)
!8273 = !DILocation(line: 182, column: 28, scope: !8269)
!8274 = !DILocalVariable(name: "s", arg: 2, scope: !8269, file: !108, line: 182, type: !110)
!8275 = !DILocation(line: 182, column: 54, scope: !8269)
!8276 = !DILocalVariable(name: "translation", scope: !8269, file: !108, line: 184, type: !12)
!8277 = !DILocation(line: 184, column: 15, scope: !8269)
!8278 = !DILocation(line: 184, column: 29, scope: !8269)
!8279 = !DILocation(line: 185, column: 7, scope: !8280)
!8280 = distinct !DILexicalBlock(scope: !8269, file: !108, line: 185, column: 7)
!8281 = !DILocation(line: 185, column: 22, scope: !8280)
!8282 = !DILocation(line: 185, column: 19, scope: !8280)
!8283 = !DILocation(line: 185, column: 28, scope: !8280)
!8284 = !DILocation(line: 185, column: 31, scope: !8280)
!8285 = !DILocation(line: 185, column: 33, scope: !8280)
!8286 = !DILocation(line: 185, column: 7, scope: !8269)
!8287 = !DILocation(line: 186, column: 17, scope: !8280)
!8288 = !DILocation(line: 186, column: 5, scope: !8280)
!8289 = !DILocation(line: 187, column: 10, scope: !8269)
!8290 = !DILocation(line: 187, column: 3, scope: !8269)
!8291 = distinct !DISubprogram(name: "quotearg_alloc", scope: !108, file: !108, line: 643, type: !8292, isLocal: false, isDefinition: true, scopeLine: 645, flags: DIFlagPrototyped, isOptimized: false, unit: !107, variables: !25)
!8292 = !DISubroutineType(types: !8293)
!8293 = !{!15, !12, !91, !7526}
!8294 = !DILocalVariable(name: "arg", arg: 1, scope: !8291, file: !108, line: 643, type: !12)
!8295 = !DILocation(line: 643, column: 29, scope: !8291)
!8296 = !DILocalVariable(name: "argsize", arg: 2, scope: !8291, file: !108, line: 643, type: !91)
!8297 = !DILocation(line: 643, column: 41, scope: !8291)
!8298 = !DILocalVariable(name: "o", arg: 3, scope: !8291, file: !108, line: 644, type: !7526)
!8299 = !DILocation(line: 644, column: 33, scope: !8291)
!8300 = !DILocation(line: 646, column: 30, scope: !8291)
!8301 = !DILocation(line: 646, column: 35, scope: !8291)
!8302 = !DILocation(line: 646, column: 50, scope: !8291)
!8303 = !DILocation(line: 646, column: 10, scope: !8291)
!8304 = !DILocation(line: 646, column: 3, scope: !8291)
!8305 = distinct !DISubprogram(name: "quotearg_alloc_mem", scope: !108, file: !108, line: 656, type: !8306, isLocal: false, isDefinition: true, scopeLine: 658, flags: DIFlagPrototyped, isOptimized: false, unit: !107, variables: !25)
!8306 = !DISubroutineType(types: !8307)
!8307 = !{!15, !12, !91, !438, !7526}
!8308 = !DILocalVariable(name: "arg", arg: 1, scope: !8305, file: !108, line: 656, type: !12)
!8309 = !DILocation(line: 656, column: 33, scope: !8305)
!8310 = !DILocalVariable(name: "argsize", arg: 2, scope: !8305, file: !108, line: 656, type: !91)
!8311 = !DILocation(line: 656, column: 45, scope: !8305)
!8312 = !DILocalVariable(name: "size", arg: 3, scope: !8305, file: !108, line: 656, type: !438)
!8313 = !DILocation(line: 656, column: 62, scope: !8305)
!8314 = !DILocalVariable(name: "o", arg: 4, scope: !8305, file: !108, line: 657, type: !7526)
!8315 = !DILocation(line: 657, column: 37, scope: !8305)
!8316 = !DILocalVariable(name: "p", scope: !8305, file: !108, line: 659, type: !7526)
!8317 = !DILocation(line: 659, column: 33, scope: !8305)
!8318 = !DILocation(line: 659, column: 37, scope: !8305)
!8319 = !DILocation(line: 659, column: 41, scope: !8305)
!8320 = !DILocalVariable(name: "e", scope: !8305, file: !108, line: 660, type: !23)
!8321 = !DILocation(line: 660, column: 7, scope: !8305)
!8322 = !DILocation(line: 660, column: 11, scope: !8305)
!8323 = !DILocalVariable(name: "flags", scope: !8305, file: !108, line: 662, type: !23)
!8324 = !DILocation(line: 662, column: 7, scope: !8305)
!8325 = !DILocation(line: 662, column: 15, scope: !8305)
!8326 = !DILocation(line: 662, column: 18, scope: !8305)
!8327 = !DILocation(line: 662, column: 27, scope: !8305)
!8328 = !DILocation(line: 662, column: 24, scope: !8305)
!8329 = !DILocalVariable(name: "bufsize", scope: !8305, file: !108, line: 663, type: !91)
!8330 = !DILocation(line: 663, column: 10, scope: !8305)
!8331 = !DILocation(line: 663, column: 52, scope: !8305)
!8332 = !DILocation(line: 663, column: 57, scope: !8305)
!8333 = !DILocation(line: 663, column: 66, scope: !8305)
!8334 = !DILocation(line: 663, column: 69, scope: !8305)
!8335 = !DILocation(line: 664, column: 11, scope: !8305)
!8336 = !DILocation(line: 664, column: 18, scope: !8305)
!8337 = !DILocation(line: 664, column: 21, scope: !8305)
!8338 = !DILocation(line: 665, column: 11, scope: !8305)
!8339 = !DILocation(line: 665, column: 14, scope: !8305)
!8340 = !DILocation(line: 666, column: 11, scope: !8305)
!8341 = !DILocation(line: 666, column: 14, scope: !8305)
!8342 = !DILocation(line: 663, column: 20, scope: !8305)
!8343 = !DILocation(line: 666, column: 27, scope: !8305)
!8344 = !DILocalVariable(name: "buf", scope: !8305, file: !108, line: 667, type: !15)
!8345 = !DILocation(line: 667, column: 9, scope: !8305)
!8346 = !DILocation(line: 667, column: 27, scope: !8305)
!8347 = !DILocation(line: 667, column: 15, scope: !8305)
!8348 = !DILocation(line: 668, column: 29, scope: !8305)
!8349 = !DILocation(line: 668, column: 34, scope: !8305)
!8350 = !DILocation(line: 668, column: 43, scope: !8305)
!8351 = !DILocation(line: 668, column: 48, scope: !8305)
!8352 = !DILocation(line: 668, column: 57, scope: !8305)
!8353 = !DILocation(line: 668, column: 60, scope: !8305)
!8354 = !DILocation(line: 668, column: 67, scope: !8305)
!8355 = !DILocation(line: 669, column: 8, scope: !8305)
!8356 = !DILocation(line: 669, column: 11, scope: !8305)
!8357 = !DILocation(line: 670, column: 8, scope: !8305)
!8358 = !DILocation(line: 670, column: 11, scope: !8305)
!8359 = !DILocation(line: 670, column: 23, scope: !8305)
!8360 = !DILocation(line: 670, column: 26, scope: !8305)
!8361 = !DILocation(line: 668, column: 3, scope: !8305)
!8362 = !DILocation(line: 671, column: 11, scope: !8305)
!8363 = !DILocation(line: 671, column: 3, scope: !8305)
!8364 = !DILocation(line: 671, column: 9, scope: !8305)
!8365 = !DILocation(line: 672, column: 7, scope: !8366)
!8366 = distinct !DILexicalBlock(scope: !8305, file: !108, line: 672, column: 7)
!8367 = !DILocation(line: 672, column: 7, scope: !8305)
!8368 = !DILocation(line: 673, column: 13, scope: !8366)
!8369 = !DILocation(line: 673, column: 21, scope: !8366)
!8370 = !DILocation(line: 673, column: 6, scope: !8366)
!8371 = !DILocation(line: 673, column: 11, scope: !8366)
!8372 = !DILocation(line: 673, column: 5, scope: !8366)
!8373 = !DILocation(line: 674, column: 10, scope: !8305)
!8374 = !DILocation(line: 674, column: 3, scope: !8305)
!8375 = distinct !DISubprogram(name: "quotearg_free", scope: !108, file: !108, line: 692, type: !502, isLocal: false, isDefinition: true, scopeLine: 693, flags: DIFlagPrototyped, isOptimized: false, unit: !107, variables: !25)
!8376 = !DILocalVariable(name: "sv", scope: !8375, file: !108, line: 694, type: !169)
!8377 = !DILocation(line: 694, column: 19, scope: !8375)
!8378 = !DILocation(line: 694, column: 24, scope: !8375)
!8379 = !DILocalVariable(name: "i", scope: !8375, file: !108, line: 695, type: !159)
!8380 = !DILocation(line: 695, column: 16, scope: !8375)
!8381 = !DILocation(line: 696, column: 10, scope: !8382)
!8382 = distinct !DILexicalBlock(scope: !8375, file: !108, line: 696, column: 3)
!8383 = !DILocation(line: 696, column: 8, scope: !8382)
!8384 = !DILocation(line: 696, column: 15, scope: !8385)
!8385 = distinct !DILexicalBlock(scope: !8382, file: !108, line: 696, column: 3)
!8386 = !DILocation(line: 696, column: 19, scope: !8385)
!8387 = !DILocation(line: 696, column: 17, scope: !8385)
!8388 = !DILocation(line: 696, column: 3, scope: !8382)
!8389 = !DILocation(line: 697, column: 11, scope: !8385)
!8390 = !DILocation(line: 697, column: 14, scope: !8385)
!8391 = !DILocation(line: 697, column: 17, scope: !8385)
!8392 = !DILocation(line: 697, column: 5, scope: !8385)
!8393 = !DILocation(line: 696, column: 28, scope: !8385)
!8394 = !DILocation(line: 696, column: 3, scope: !8385)
!8395 = distinct !{!8395, !8388, !8396}
!8396 = !DILocation(line: 697, column: 20, scope: !8382)
!8397 = !DILocation(line: 698, column: 7, scope: !8398)
!8398 = distinct !DILexicalBlock(scope: !8375, file: !108, line: 698, column: 7)
!8399 = !DILocation(line: 698, column: 13, scope: !8398)
!8400 = !DILocation(line: 698, column: 17, scope: !8398)
!8401 = !DILocation(line: 698, column: 7, scope: !8375)
!8402 = !DILocation(line: 700, column: 13, scope: !8403)
!8403 = distinct !DILexicalBlock(scope: !8398, file: !108, line: 699, column: 5)
!8404 = !DILocation(line: 700, column: 19, scope: !8403)
!8405 = !DILocation(line: 700, column: 7, scope: !8403)
!8406 = !DILocation(line: 701, column: 21, scope: !8403)
!8407 = !DILocation(line: 702, column: 20, scope: !8403)
!8408 = !DILocation(line: 703, column: 5, scope: !8403)
!8409 = !DILocation(line: 704, column: 7, scope: !8410)
!8410 = distinct !DILexicalBlock(scope: !8375, file: !108, line: 704, column: 7)
!8411 = !DILocation(line: 704, column: 10, scope: !8410)
!8412 = !DILocation(line: 704, column: 7, scope: !8375)
!8413 = !DILocation(line: 706, column: 13, scope: !8414)
!8414 = distinct !DILexicalBlock(scope: !8410, file: !108, line: 705, column: 5)
!8415 = !DILocation(line: 706, column: 7, scope: !8414)
!8416 = !DILocation(line: 707, column: 15, scope: !8414)
!8417 = !DILocation(line: 708, column: 5, scope: !8414)
!8418 = !DILocation(line: 709, column: 10, scope: !8375)
!8419 = !DILocation(line: 710, column: 1, scope: !8375)
!8420 = distinct !DISubprogram(name: "quotearg_n", scope: !108, file: !108, line: 781, type: !8421, isLocal: false, isDefinition: true, scopeLine: 782, flags: DIFlagPrototyped, isOptimized: false, unit: !107, variables: !25)
!8421 = !DISubroutineType(types: !8422)
!8422 = !{!15, !23, !12}
!8423 = !DILocalVariable(name: "n", arg: 1, scope: !8420, file: !108, line: 781, type: !23)
!8424 = !DILocation(line: 781, column: 17, scope: !8420)
!8425 = !DILocalVariable(name: "arg", arg: 2, scope: !8420, file: !108, line: 781, type: !12)
!8426 = !DILocation(line: 781, column: 32, scope: !8420)
!8427 = !DILocation(line: 783, column: 30, scope: !8420)
!8428 = !DILocation(line: 783, column: 33, scope: !8420)
!8429 = !DILocation(line: 783, column: 10, scope: !8420)
!8430 = !DILocation(line: 783, column: 3, scope: !8420)
!8431 = distinct !DISubprogram(name: "quotearg_n_options", scope: !108, file: !108, line: 721, type: !8432, isLocal: true, isDefinition: true, scopeLine: 723, flags: DIFlagPrototyped, isOptimized: false, unit: !107, variables: !25)
!8432 = !DISubroutineType(types: !8433)
!8433 = !{!15, !23, !12, !91, !7526}
!8434 = !DILocalVariable(name: "n", arg: 1, scope: !8431, file: !108, line: 721, type: !23)
!8435 = !DILocation(line: 721, column: 25, scope: !8431)
!8436 = !DILocalVariable(name: "arg", arg: 2, scope: !8431, file: !108, line: 721, type: !12)
!8437 = !DILocation(line: 721, column: 40, scope: !8431)
!8438 = !DILocalVariable(name: "argsize", arg: 3, scope: !8431, file: !108, line: 721, type: !91)
!8439 = !DILocation(line: 721, column: 52, scope: !8431)
!8440 = !DILocalVariable(name: "options", arg: 4, scope: !8431, file: !108, line: 722, type: !7526)
!8441 = !DILocation(line: 722, column: 37, scope: !8431)
!8442 = !DILocalVariable(name: "e", scope: !8431, file: !108, line: 724, type: !23)
!8443 = !DILocation(line: 724, column: 7, scope: !8431)
!8444 = !DILocation(line: 724, column: 11, scope: !8431)
!8445 = !DILocalVariable(name: "n0", scope: !8431, file: !108, line: 726, type: !159)
!8446 = !DILocation(line: 726, column: 16, scope: !8431)
!8447 = !DILocation(line: 726, column: 21, scope: !8431)
!8448 = !DILocalVariable(name: "sv", scope: !8431, file: !108, line: 727, type: !169)
!8449 = !DILocation(line: 727, column: 19, scope: !8431)
!8450 = !DILocation(line: 727, column: 24, scope: !8431)
!8451 = !DILocation(line: 729, column: 7, scope: !8452)
!8452 = distinct !DILexicalBlock(scope: !8431, file: !108, line: 729, column: 7)
!8453 = !DILocation(line: 729, column: 9, scope: !8452)
!8454 = !DILocation(line: 729, column: 7, scope: !8431)
!8455 = !DILocation(line: 730, column: 5, scope: !8452)
!8456 = !DILocation(line: 732, column: 7, scope: !8457)
!8457 = distinct !DILexicalBlock(scope: !8431, file: !108, line: 732, column: 7)
!8458 = !DILocation(line: 732, column: 17, scope: !8457)
!8459 = !DILocation(line: 732, column: 14, scope: !8457)
!8460 = !DILocation(line: 732, column: 7, scope: !8431)
!8461 = !DILocalVariable(name: "n1", scope: !8462, file: !108, line: 739, type: !91)
!8462 = distinct !DILexicalBlock(scope: !8457, file: !108, line: 733, column: 5)
!8463 = !DILocation(line: 739, column: 14, scope: !8462)
!8464 = !DILocation(line: 739, column: 19, scope: !8462)
!8465 = !DILocation(line: 739, column: 22, scope: !8462)
!8466 = !DILocalVariable(name: "preallocated", scope: !8462, file: !108, line: 740, type: !79)
!8467 = !DILocation(line: 740, column: 12, scope: !8462)
!8468 = !DILocation(line: 740, column: 28, scope: !8462)
!8469 = !DILocation(line: 740, column: 31, scope: !8462)
!8470 = !DILocation(line: 742, column: 11, scope: !8471)
!8471 = distinct !DILexicalBlock(scope: !8462, file: !108, line: 742, column: 11)
!8472 = !DILocation(line: 742, column: 11, scope: !8462)
!8473 = !DILocation(line: 743, column: 2, scope: !8471)
!8474 = !DILocation(line: 745, column: 32, scope: !8462)
!8475 = !DILocation(line: 745, column: 54, scope: !8462)
!8476 = !DILocation(line: 745, column: 58, scope: !8462)
!8477 = !DILocation(line: 745, column: 61, scope: !8462)
!8478 = !DILocation(line: 745, column: 22, scope: !8462)
!8479 = !DILocation(line: 745, column: 20, scope: !8462)
!8480 = !DILocation(line: 745, column: 15, scope: !8462)
!8481 = !DILocation(line: 746, column: 11, scope: !8482)
!8482 = distinct !DILexicalBlock(scope: !8462, file: !108, line: 746, column: 11)
!8483 = !DILocation(line: 746, column: 11, scope: !8462)
!8484 = !DILocation(line: 747, column: 3, scope: !8482)
!8485 = !DILocation(line: 747, column: 8, scope: !8482)
!8486 = !DILocation(line: 747, column: 2, scope: !8482)
!8487 = !DILocation(line: 748, column: 15, scope: !8462)
!8488 = !DILocation(line: 748, column: 20, scope: !8462)
!8489 = !DILocation(line: 748, column: 18, scope: !8462)
!8490 = !DILocation(line: 748, column: 7, scope: !8462)
!8491 = !DILocation(line: 748, column: 32, scope: !8462)
!8492 = !DILocation(line: 748, column: 37, scope: !8462)
!8493 = !DILocation(line: 748, column: 35, scope: !8462)
!8494 = !DILocation(line: 748, column: 45, scope: !8462)
!8495 = !DILocation(line: 749, column: 16, scope: !8462)
!8496 = !DILocation(line: 749, column: 14, scope: !8462)
!8497 = !DILocation(line: 750, column: 5, scope: !8462)
!8498 = !DILocalVariable(name: "size", scope: !8499, file: !108, line: 753, type: !91)
!8499 = distinct !DILexicalBlock(scope: !8431, file: !108, line: 752, column: 3)
!8500 = !DILocation(line: 753, column: 12, scope: !8499)
!8501 = !DILocation(line: 753, column: 19, scope: !8499)
!8502 = !DILocation(line: 753, column: 22, scope: !8499)
!8503 = !DILocation(line: 753, column: 25, scope: !8499)
!8504 = !DILocalVariable(name: "val", scope: !8499, file: !108, line: 754, type: !15)
!8505 = !DILocation(line: 754, column: 11, scope: !8499)
!8506 = !DILocation(line: 754, column: 17, scope: !8499)
!8507 = !DILocation(line: 754, column: 20, scope: !8499)
!8508 = !DILocation(line: 754, column: 23, scope: !8499)
!8509 = !DILocalVariable(name: "flags", scope: !8499, file: !108, line: 756, type: !23)
!8510 = !DILocation(line: 756, column: 9, scope: !8499)
!8511 = !DILocation(line: 756, column: 17, scope: !8499)
!8512 = !DILocation(line: 756, column: 26, scope: !8499)
!8513 = !DILocation(line: 756, column: 32, scope: !8499)
!8514 = !DILocalVariable(name: "qsize", scope: !8499, file: !108, line: 757, type: !91)
!8515 = !DILocation(line: 757, column: 12, scope: !8499)
!8516 = !DILocation(line: 757, column: 46, scope: !8499)
!8517 = !DILocation(line: 757, column: 51, scope: !8499)
!8518 = !DILocation(line: 757, column: 57, scope: !8499)
!8519 = !DILocation(line: 757, column: 62, scope: !8499)
!8520 = !DILocation(line: 758, column: 11, scope: !8499)
!8521 = !DILocation(line: 758, column: 20, scope: !8499)
!8522 = !DILocation(line: 758, column: 27, scope: !8499)
!8523 = !DILocation(line: 759, column: 11, scope: !8499)
!8524 = !DILocation(line: 759, column: 20, scope: !8499)
!8525 = !DILocation(line: 760, column: 11, scope: !8499)
!8526 = !DILocation(line: 760, column: 20, scope: !8499)
!8527 = !DILocation(line: 761, column: 11, scope: !8499)
!8528 = !DILocation(line: 761, column: 20, scope: !8499)
!8529 = !DILocation(line: 757, column: 20, scope: !8499)
!8530 = !DILocation(line: 763, column: 9, scope: !8531)
!8531 = distinct !DILexicalBlock(scope: !8499, file: !108, line: 763, column: 9)
!8532 = !DILocation(line: 763, column: 17, scope: !8531)
!8533 = !DILocation(line: 763, column: 14, scope: !8531)
!8534 = !DILocation(line: 763, column: 9, scope: !8499)
!8535 = !DILocation(line: 765, column: 22, scope: !8536)
!8536 = distinct !DILexicalBlock(scope: !8531, file: !108, line: 764, column: 7)
!8537 = !DILocation(line: 765, column: 28, scope: !8536)
!8538 = !DILocation(line: 765, column: 20, scope: !8536)
!8539 = !DILocation(line: 765, column: 2, scope: !8536)
!8540 = !DILocation(line: 765, column: 5, scope: !8536)
!8541 = !DILocation(line: 765, column: 8, scope: !8536)
!8542 = !DILocation(line: 765, column: 13, scope: !8536)
!8543 = !DILocation(line: 766, column: 6, scope: !8544)
!8544 = distinct !DILexicalBlock(scope: !8536, file: !108, line: 766, column: 6)
!8545 = !DILocation(line: 766, column: 10, scope: !8544)
!8546 = !DILocation(line: 766, column: 6, scope: !8536)
!8547 = !DILocation(line: 767, column: 10, scope: !8544)
!8548 = !DILocation(line: 767, column: 4, scope: !8544)
!8549 = !DILocation(line: 768, column: 32, scope: !8536)
!8550 = !DILocation(line: 768, column: 20, scope: !8536)
!8551 = !DILocation(line: 768, column: 18, scope: !8536)
!8552 = !DILocation(line: 768, column: 2, scope: !8536)
!8553 = !DILocation(line: 768, column: 5, scope: !8536)
!8554 = !DILocation(line: 768, column: 8, scope: !8536)
!8555 = !DILocation(line: 768, column: 12, scope: !8536)
!8556 = !DILocation(line: 769, column: 28, scope: !8536)
!8557 = !DILocation(line: 769, column: 33, scope: !8536)
!8558 = !DILocation(line: 769, column: 39, scope: !8536)
!8559 = !DILocation(line: 769, column: 44, scope: !8536)
!8560 = !DILocation(line: 769, column: 53, scope: !8536)
!8561 = !DILocation(line: 769, column: 62, scope: !8536)
!8562 = !DILocation(line: 770, column: 7, scope: !8536)
!8563 = !DILocation(line: 770, column: 14, scope: !8536)
!8564 = !DILocation(line: 770, column: 23, scope: !8536)
!8565 = !DILocation(line: 771, column: 7, scope: !8536)
!8566 = !DILocation(line: 771, column: 16, scope: !8536)
!8567 = !DILocation(line: 772, column: 7, scope: !8536)
!8568 = !DILocation(line: 772, column: 16, scope: !8536)
!8569 = !DILocation(line: 769, column: 2, scope: !8536)
!8570 = !DILocation(line: 773, column: 7, scope: !8536)
!8571 = !DILocation(line: 775, column: 13, scope: !8499)
!8572 = !DILocation(line: 775, column: 5, scope: !8499)
!8573 = !DILocation(line: 775, column: 11, scope: !8499)
!8574 = !DILocation(line: 776, column: 12, scope: !8499)
!8575 = !DILocation(line: 776, column: 5, scope: !8499)
!8576 = distinct !DISubprogram(name: "quotearg_n_mem", scope: !108, file: !108, line: 787, type: !8577, isLocal: false, isDefinition: true, scopeLine: 788, flags: DIFlagPrototyped, isOptimized: false, unit: !107, variables: !25)
!8577 = !DISubroutineType(types: !8578)
!8578 = !{!15, !23, !12, !91}
!8579 = !DILocalVariable(name: "n", arg: 1, scope: !8576, file: !108, line: 787, type: !23)
!8580 = !DILocation(line: 787, column: 21, scope: !8576)
!8581 = !DILocalVariable(name: "arg", arg: 2, scope: !8576, file: !108, line: 787, type: !12)
!8582 = !DILocation(line: 787, column: 36, scope: !8576)
!8583 = !DILocalVariable(name: "argsize", arg: 3, scope: !8576, file: !108, line: 787, type: !91)
!8584 = !DILocation(line: 787, column: 48, scope: !8576)
!8585 = !DILocation(line: 789, column: 30, scope: !8576)
!8586 = !DILocation(line: 789, column: 33, scope: !8576)
!8587 = !DILocation(line: 789, column: 38, scope: !8576)
!8588 = !DILocation(line: 789, column: 10, scope: !8576)
!8589 = !DILocation(line: 789, column: 3, scope: !8576)
!8590 = distinct !DISubprogram(name: "quotearg", scope: !108, file: !108, line: 793, type: !791, isLocal: false, isDefinition: true, scopeLine: 794, flags: DIFlagPrototyped, isOptimized: false, unit: !107, variables: !25)
!8591 = !DILocalVariable(name: "arg", arg: 1, scope: !8590, file: !108, line: 793, type: !12)
!8592 = !DILocation(line: 793, column: 23, scope: !8590)
!8593 = !DILocation(line: 795, column: 25, scope: !8590)
!8594 = !DILocation(line: 795, column: 10, scope: !8590)
!8595 = !DILocation(line: 795, column: 3, scope: !8590)
!8596 = distinct !DISubprogram(name: "quotearg_mem", scope: !108, file: !108, line: 799, type: !8597, isLocal: false, isDefinition: true, scopeLine: 800, flags: DIFlagPrototyped, isOptimized: false, unit: !107, variables: !25)
!8597 = !DISubroutineType(types: !8598)
!8598 = !{!15, !12, !91}
!8599 = !DILocalVariable(name: "arg", arg: 1, scope: !8596, file: !108, line: 799, type: !12)
!8600 = !DILocation(line: 799, column: 27, scope: !8596)
!8601 = !DILocalVariable(name: "argsize", arg: 2, scope: !8596, file: !108, line: 799, type: !91)
!8602 = !DILocation(line: 799, column: 39, scope: !8596)
!8603 = !DILocation(line: 801, column: 29, scope: !8596)
!8604 = !DILocation(line: 801, column: 34, scope: !8596)
!8605 = !DILocation(line: 801, column: 10, scope: !8596)
!8606 = !DILocation(line: 801, column: 3, scope: !8596)
!8607 = distinct !DISubprogram(name: "quotearg_n_style", scope: !108, file: !108, line: 805, type: !8608, isLocal: false, isDefinition: true, scopeLine: 806, flags: DIFlagPrototyped, isOptimized: false, unit: !107, variables: !25)
!8608 = !DISubroutineType(types: !8609)
!8609 = !{!15, !23, !110, !12}
!8610 = !DILocalVariable(name: "n", arg: 1, scope: !8607, file: !108, line: 805, type: !23)
!8611 = !DILocation(line: 805, column: 23, scope: !8607)
!8612 = !DILocalVariable(name: "s", arg: 2, scope: !8607, file: !108, line: 805, type: !110)
!8613 = !DILocation(line: 805, column: 45, scope: !8607)
!8614 = !DILocalVariable(name: "arg", arg: 3, scope: !8607, file: !108, line: 805, type: !12)
!8615 = !DILocation(line: 805, column: 60, scope: !8607)
!8616 = !DILocalVariable(name: "o", scope: !8607, file: !108, line: 807, type: !7527)
!8617 = !DILocation(line: 807, column: 32, scope: !8607)
!8618 = !DILocation(line: 807, column: 64, scope: !8607)
!8619 = !DILocation(line: 807, column: 36, scope: !8607)
!8620 = !DILocation(line: 808, column: 30, scope: !8607)
!8621 = !DILocation(line: 808, column: 33, scope: !8607)
!8622 = !DILocation(line: 808, column: 10, scope: !8607)
!8623 = !DILocation(line: 808, column: 3, scope: !8607)
!8624 = distinct !DISubprogram(name: "quoting_options_from_style", scope: !108, file: !108, line: 170, type: !8625, isLocal: true, isDefinition: true, scopeLine: 171, flags: DIFlagPrototyped, isOptimized: false, unit: !107, variables: !25)
!8625 = !DISubroutineType(types: !8626)
!8626 = !{!153, !110}
!8627 = !DILocalVariable(name: "style", arg: 1, scope: !8624, file: !108, line: 170, type: !110)
!8628 = !DILocation(line: 170, column: 48, scope: !8624)
!8629 = !DILocalVariable(name: "o", scope: !8624, file: !108, line: 172, type: !153)
!8630 = !DILocation(line: 172, column: 26, scope: !8624)
!8631 = !DILocation(line: 173, column: 13, scope: !8624)
!8632 = !DILocation(line: 173, column: 5, scope: !8624)
!8633 = !DILocation(line: 173, column: 11, scope: !8624)
!8634 = !DILocation(line: 174, column: 5, scope: !8624)
!8635 = !DILocation(line: 174, column: 11, scope: !8624)
!8636 = !DILocation(line: 175, column: 13, scope: !8624)
!8637 = !DILocation(line: 175, column: 3, scope: !8624)
!8638 = !DILocation(line: 176, column: 10, scope: !8624)
!8639 = !DILocation(line: 176, column: 3, scope: !8624)
!8640 = distinct !DISubprogram(name: "quotearg_n_style_mem", scope: !108, file: !108, line: 812, type: !8641, isLocal: false, isDefinition: true, scopeLine: 814, flags: DIFlagPrototyped, isOptimized: false, unit: !107, variables: !25)
!8641 = !DISubroutineType(types: !8642)
!8642 = !{!15, !23, !110, !12, !91}
!8643 = !DILocalVariable(name: "n", arg: 1, scope: !8640, file: !108, line: 812, type: !23)
!8644 = !DILocation(line: 812, column: 27, scope: !8640)
!8645 = !DILocalVariable(name: "s", arg: 2, scope: !8640, file: !108, line: 812, type: !110)
!8646 = !DILocation(line: 812, column: 49, scope: !8640)
!8647 = !DILocalVariable(name: "arg", arg: 3, scope: !8640, file: !108, line: 813, type: !12)
!8648 = !DILocation(line: 813, column: 21, scope: !8640)
!8649 = !DILocalVariable(name: "argsize", arg: 4, scope: !8640, file: !108, line: 813, type: !91)
!8650 = !DILocation(line: 813, column: 33, scope: !8640)
!8651 = !DILocalVariable(name: "o", scope: !8640, file: !108, line: 815, type: !7527)
!8652 = !DILocation(line: 815, column: 32, scope: !8640)
!8653 = !DILocation(line: 815, column: 64, scope: !8640)
!8654 = !DILocation(line: 815, column: 36, scope: !8640)
!8655 = !DILocation(line: 816, column: 30, scope: !8640)
!8656 = !DILocation(line: 816, column: 33, scope: !8640)
!8657 = !DILocation(line: 816, column: 38, scope: !8640)
!8658 = !DILocation(line: 816, column: 10, scope: !8640)
!8659 = !DILocation(line: 816, column: 3, scope: !8640)
!8660 = distinct !DISubprogram(name: "quotearg_style", scope: !108, file: !108, line: 820, type: !8661, isLocal: false, isDefinition: true, scopeLine: 821, flags: DIFlagPrototyped, isOptimized: false, unit: !107, variables: !25)
!8661 = !DISubroutineType(types: !8662)
!8662 = !{!15, !110, !12}
!8663 = !DILocalVariable(name: "s", arg: 1, scope: !8660, file: !108, line: 820, type: !110)
!8664 = !DILocation(line: 820, column: 36, scope: !8660)
!8665 = !DILocalVariable(name: "arg", arg: 2, scope: !8660, file: !108, line: 820, type: !12)
!8666 = !DILocation(line: 820, column: 51, scope: !8660)
!8667 = !DILocation(line: 822, column: 31, scope: !8660)
!8668 = !DILocation(line: 822, column: 34, scope: !8660)
!8669 = !DILocation(line: 822, column: 10, scope: !8660)
!8670 = !DILocation(line: 822, column: 3, scope: !8660)
!8671 = distinct !DISubprogram(name: "quotearg_style_mem", scope: !108, file: !108, line: 826, type: !8672, isLocal: false, isDefinition: true, scopeLine: 827, flags: DIFlagPrototyped, isOptimized: false, unit: !107, variables: !25)
!8672 = !DISubroutineType(types: !8673)
!8673 = !{!15, !110, !12, !91}
!8674 = !DILocalVariable(name: "s", arg: 1, scope: !8671, file: !108, line: 826, type: !110)
!8675 = !DILocation(line: 826, column: 40, scope: !8671)
!8676 = !DILocalVariable(name: "arg", arg: 2, scope: !8671, file: !108, line: 826, type: !12)
!8677 = !DILocation(line: 826, column: 55, scope: !8671)
!8678 = !DILocalVariable(name: "argsize", arg: 3, scope: !8671, file: !108, line: 826, type: !91)
!8679 = !DILocation(line: 826, column: 67, scope: !8671)
!8680 = !DILocation(line: 828, column: 35, scope: !8671)
!8681 = !DILocation(line: 828, column: 38, scope: !8671)
!8682 = !DILocation(line: 828, column: 43, scope: !8671)
!8683 = !DILocation(line: 828, column: 10, scope: !8671)
!8684 = !DILocation(line: 828, column: 3, scope: !8671)
!8685 = distinct !DISubprogram(name: "quotearg_char_mem", scope: !108, file: !108, line: 832, type: !8686, isLocal: false, isDefinition: true, scopeLine: 833, flags: DIFlagPrototyped, isOptimized: false, unit: !107, variables: !25)
!8686 = !DISubroutineType(types: !8687)
!8687 = !{!15, !12, !91, !14}
!8688 = !DILocalVariable(name: "arg", arg: 1, scope: !8685, file: !108, line: 832, type: !12)
!8689 = !DILocation(line: 832, column: 32, scope: !8685)
!8690 = !DILocalVariable(name: "argsize", arg: 2, scope: !8685, file: !108, line: 832, type: !91)
!8691 = !DILocation(line: 832, column: 44, scope: !8685)
!8692 = !DILocalVariable(name: "ch", arg: 3, scope: !8685, file: !108, line: 832, type: !14)
!8693 = !DILocation(line: 832, column: 58, scope: !8685)
!8694 = !DILocalVariable(name: "options", scope: !8685, file: !108, line: 834, type: !153)
!8695 = !DILocation(line: 834, column: 26, scope: !8685)
!8696 = !DILocation(line: 835, column: 13, scope: !8685)
!8697 = !DILocation(line: 836, column: 31, scope: !8685)
!8698 = !DILocation(line: 836, column: 3, scope: !8685)
!8699 = !DILocation(line: 837, column: 33, scope: !8685)
!8700 = !DILocation(line: 837, column: 38, scope: !8685)
!8701 = !DILocation(line: 837, column: 10, scope: !8685)
!8702 = !DILocation(line: 837, column: 3, scope: !8685)
!8703 = distinct !DISubprogram(name: "quotearg_char", scope: !108, file: !108, line: 841, type: !8704, isLocal: false, isDefinition: true, scopeLine: 842, flags: DIFlagPrototyped, isOptimized: false, unit: !107, variables: !25)
!8704 = !DISubroutineType(types: !8705)
!8705 = !{!15, !12, !14}
!8706 = !DILocalVariable(name: "arg", arg: 1, scope: !8703, file: !108, line: 841, type: !12)
!8707 = !DILocation(line: 841, column: 28, scope: !8703)
!8708 = !DILocalVariable(name: "ch", arg: 2, scope: !8703, file: !108, line: 841, type: !14)
!8709 = !DILocation(line: 841, column: 38, scope: !8703)
!8710 = !DILocation(line: 843, column: 29, scope: !8703)
!8711 = !DILocation(line: 843, column: 44, scope: !8703)
!8712 = !DILocation(line: 843, column: 10, scope: !8703)
!8713 = !DILocation(line: 843, column: 3, scope: !8703)
!8714 = distinct !DISubprogram(name: "quotearg_colon", scope: !108, file: !108, line: 847, type: !791, isLocal: false, isDefinition: true, scopeLine: 848, flags: DIFlagPrototyped, isOptimized: false, unit: !107, variables: !25)
!8715 = !DILocalVariable(name: "arg", arg: 1, scope: !8714, file: !108, line: 847, type: !12)
!8716 = !DILocation(line: 847, column: 29, scope: !8714)
!8717 = !DILocation(line: 849, column: 25, scope: !8714)
!8718 = !DILocation(line: 849, column: 10, scope: !8714)
!8719 = !DILocation(line: 849, column: 3, scope: !8714)
!8720 = distinct !DISubprogram(name: "quotearg_colon_mem", scope: !108, file: !108, line: 853, type: !8597, isLocal: false, isDefinition: true, scopeLine: 854, flags: DIFlagPrototyped, isOptimized: false, unit: !107, variables: !25)
!8721 = !DILocalVariable(name: "arg", arg: 1, scope: !8720, file: !108, line: 853, type: !12)
!8722 = !DILocation(line: 853, column: 33, scope: !8720)
!8723 = !DILocalVariable(name: "argsize", arg: 2, scope: !8720, file: !108, line: 853, type: !91)
!8724 = !DILocation(line: 853, column: 45, scope: !8720)
!8725 = !DILocation(line: 855, column: 29, scope: !8720)
!8726 = !DILocation(line: 855, column: 34, scope: !8720)
!8727 = !DILocation(line: 855, column: 10, scope: !8720)
!8728 = !DILocation(line: 855, column: 3, scope: !8720)
!8729 = distinct !DISubprogram(name: "quotearg_n_custom", scope: !108, file: !108, line: 859, type: !8730, isLocal: false, isDefinition: true, scopeLine: 861, flags: DIFlagPrototyped, isOptimized: false, unit: !107, variables: !25)
!8730 = !DISubroutineType(types: !8731)
!8731 = !{!15, !23, !12, !12, !12}
!8732 = !DILocalVariable(name: "n", arg: 1, scope: !8729, file: !108, line: 859, type: !23)
!8733 = !DILocation(line: 859, column: 24, scope: !8729)
!8734 = !DILocalVariable(name: "left_quote", arg: 2, scope: !8729, file: !108, line: 859, type: !12)
!8735 = !DILocation(line: 859, column: 39, scope: !8729)
!8736 = !DILocalVariable(name: "right_quote", arg: 3, scope: !8729, file: !108, line: 860, type: !12)
!8737 = !DILocation(line: 860, column: 18, scope: !8729)
!8738 = !DILocalVariable(name: "arg", arg: 4, scope: !8729, file: !108, line: 860, type: !12)
!8739 = !DILocation(line: 860, column: 43, scope: !8729)
!8740 = !DILocation(line: 862, column: 33, scope: !8729)
!8741 = !DILocation(line: 862, column: 36, scope: !8729)
!8742 = !DILocation(line: 862, column: 48, scope: !8729)
!8743 = !DILocation(line: 862, column: 61, scope: !8729)
!8744 = !DILocation(line: 862, column: 10, scope: !8729)
!8745 = !DILocation(line: 862, column: 3, scope: !8729)
!8746 = distinct !DISubprogram(name: "quotearg_n_custom_mem", scope: !108, file: !108, line: 867, type: !8747, isLocal: false, isDefinition: true, scopeLine: 870, flags: DIFlagPrototyped, isOptimized: false, unit: !107, variables: !25)
!8747 = !DISubroutineType(types: !8748)
!8748 = !{!15, !23, !12, !12, !12, !91}
!8749 = !DILocalVariable(name: "n", arg: 1, scope: !8746, file: !108, line: 867, type: !23)
!8750 = !DILocation(line: 867, column: 28, scope: !8746)
!8751 = !DILocalVariable(name: "left_quote", arg: 2, scope: !8746, file: !108, line: 867, type: !12)
!8752 = !DILocation(line: 867, column: 43, scope: !8746)
!8753 = !DILocalVariable(name: "right_quote", arg: 3, scope: !8746, file: !108, line: 868, type: !12)
!8754 = !DILocation(line: 868, column: 22, scope: !8746)
!8755 = !DILocalVariable(name: "arg", arg: 4, scope: !8746, file: !108, line: 869, type: !12)
!8756 = !DILocation(line: 869, column: 22, scope: !8746)
!8757 = !DILocalVariable(name: "argsize", arg: 5, scope: !8746, file: !108, line: 869, type: !91)
!8758 = !DILocation(line: 869, column: 34, scope: !8746)
!8759 = !DILocalVariable(name: "o", scope: !8746, file: !108, line: 871, type: !153)
!8760 = !DILocation(line: 871, column: 26, scope: !8746)
!8761 = !DILocation(line: 871, column: 30, scope: !8746)
!8762 = !DILocation(line: 872, column: 27, scope: !8746)
!8763 = !DILocation(line: 872, column: 39, scope: !8746)
!8764 = !DILocation(line: 872, column: 3, scope: !8746)
!8765 = !DILocation(line: 873, column: 30, scope: !8746)
!8766 = !DILocation(line: 873, column: 33, scope: !8746)
!8767 = !DILocation(line: 873, column: 38, scope: !8746)
!8768 = !DILocation(line: 873, column: 10, scope: !8746)
!8769 = !DILocation(line: 873, column: 3, scope: !8746)
!8770 = distinct !DISubprogram(name: "quotearg_custom", scope: !108, file: !108, line: 877, type: !8771, isLocal: false, isDefinition: true, scopeLine: 879, flags: DIFlagPrototyped, isOptimized: false, unit: !107, variables: !25)
!8771 = !DISubroutineType(types: !8772)
!8772 = !{!15, !12, !12, !12}
!8773 = !DILocalVariable(name: "left_quote", arg: 1, scope: !8770, file: !108, line: 877, type: !12)
!8774 = !DILocation(line: 877, column: 30, scope: !8770)
!8775 = !DILocalVariable(name: "right_quote", arg: 2, scope: !8770, file: !108, line: 877, type: !12)
!8776 = !DILocation(line: 877, column: 54, scope: !8770)
!8777 = !DILocalVariable(name: "arg", arg: 3, scope: !8770, file: !108, line: 878, type: !12)
!8778 = !DILocation(line: 878, column: 16, scope: !8770)
!8779 = !DILocation(line: 880, column: 32, scope: !8770)
!8780 = !DILocation(line: 880, column: 44, scope: !8770)
!8781 = !DILocation(line: 880, column: 57, scope: !8770)
!8782 = !DILocation(line: 880, column: 10, scope: !8770)
!8783 = !DILocation(line: 880, column: 3, scope: !8770)
!8784 = distinct !DISubprogram(name: "quotearg_custom_mem", scope: !108, file: !108, line: 884, type: !8785, isLocal: false, isDefinition: true, scopeLine: 886, flags: DIFlagPrototyped, isOptimized: false, unit: !107, variables: !25)
!8785 = !DISubroutineType(types: !8786)
!8786 = !{!15, !12, !12, !12, !91}
!8787 = !DILocalVariable(name: "left_quote", arg: 1, scope: !8784, file: !108, line: 884, type: !12)
!8788 = !DILocation(line: 884, column: 34, scope: !8784)
!8789 = !DILocalVariable(name: "right_quote", arg: 2, scope: !8784, file: !108, line: 884, type: !12)
!8790 = !DILocation(line: 884, column: 58, scope: !8784)
!8791 = !DILocalVariable(name: "arg", arg: 3, scope: !8784, file: !108, line: 885, type: !12)
!8792 = !DILocation(line: 885, column: 20, scope: !8784)
!8793 = !DILocalVariable(name: "argsize", arg: 4, scope: !8784, file: !108, line: 885, type: !91)
!8794 = !DILocation(line: 885, column: 32, scope: !8784)
!8795 = !DILocation(line: 887, column: 36, scope: !8784)
!8796 = !DILocation(line: 887, column: 48, scope: !8784)
!8797 = !DILocation(line: 887, column: 61, scope: !8784)
!8798 = !DILocation(line: 888, column: 5, scope: !8784)
!8799 = !DILocation(line: 887, column: 10, scope: !8784)
!8800 = !DILocation(line: 887, column: 3, scope: !8784)
!8801 = distinct !DISubprogram(name: "get_root_dev_ino", scope: !426, file: !426, line: 29, type: !8802, isLocal: false, isDefinition: true, scopeLine: 30, flags: DIFlagPrototyped, isOptimized: false, unit: !425, variables: !25)
!8802 = !DISubroutineType(types: !8803)
!8803 = !{!8804, !8804}
!8804 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8805, size: 64)
!8805 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_ino", file: !357, line: 7, size: 128, elements: !8806)
!8806 = !{!8807, !8808}
!8807 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !8805, file: !357, line: 9, baseType: !360, size: 64)
!8808 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !8805, file: !357, line: 10, baseType: !329, size: 64, offset: 64)
!8809 = !DILocalVariable(name: "root_d_i", arg: 1, scope: !8801, file: !426, line: 29, type: !8804)
!8810 = !DILocation(line: 29, column: 35, scope: !8801)
!8811 = !DILocalVariable(name: "statbuf", scope: !8801, file: !426, line: 31, type: !8812)
!8812 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !288, line: 46, size: 1152, elements: !8813)
!8813 = !{!8814, !8815, !8816, !8817, !8818, !8819, !8820, !8821, !8822, !8823, !8824, !8825, !8830, !8831, !8832}
!8814 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !8812, file: !288, line: 48, baseType: !291, size: 64)
!8815 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !8812, file: !288, line: 53, baseType: !293, size: 64, offset: 64)
!8816 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !8812, file: !288, line: 61, baseType: !281, size: 64, offset: 128)
!8817 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !8812, file: !288, line: 62, baseType: !296, size: 32, offset: 192)
!8818 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !8812, file: !288, line: 64, baseType: !191, size: 32, offset: 224)
!8819 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !8812, file: !288, line: 65, baseType: !195, size: 32, offset: 256)
!8820 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !8812, file: !288, line: 67, baseType: !23, size: 32, offset: 288)
!8821 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !8812, file: !288, line: 69, baseType: !291, size: 64, offset: 320)
!8822 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !8812, file: !288, line: 74, baseType: !302, size: 64, offset: 384)
!8823 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !8812, file: !288, line: 78, baseType: !304, size: 64, offset: 448)
!8824 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !8812, file: !288, line: 80, baseType: !306, size: 64, offset: 512)
!8825 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !8812, file: !288, line: 91, baseType: !8826, size: 128, offset: 576)
!8826 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !309, line: 8, size: 128, elements: !8827)
!8827 = !{!8828, !8829}
!8828 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !8826, file: !309, line: 10, baseType: !312, size: 64)
!8829 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !8826, file: !309, line: 11, baseType: !314, size: 64, offset: 64)
!8830 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !8812, file: !288, line: 92, baseType: !8826, size: 128, offset: 704)
!8831 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !8812, file: !288, line: 93, baseType: !8826, size: 128, offset: 832)
!8832 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !8812, file: !288, line: 106, baseType: !318, size: 192, offset: 960)
!8833 = !DILocation(line: 31, column: 15, scope: !8801)
!8834 = !DILocation(line: 32, column: 7, scope: !8835)
!8835 = distinct !DILexicalBlock(scope: !8801, file: !426, line: 32, column: 7)
!8836 = !DILocation(line: 32, column: 7, scope: !8801)
!8837 = !DILocation(line: 33, column: 5, scope: !8835)
!8838 = !DILocation(line: 34, column: 30, scope: !8801)
!8839 = !DILocation(line: 34, column: 3, scope: !8801)
!8840 = !DILocation(line: 34, column: 13, scope: !8801)
!8841 = !DILocation(line: 34, column: 20, scope: !8801)
!8842 = !DILocation(line: 35, column: 30, scope: !8801)
!8843 = !DILocation(line: 35, column: 3, scope: !8801)
!8844 = !DILocation(line: 35, column: 13, scope: !8801)
!8845 = !DILocation(line: 35, column: 20, scope: !8801)
!8846 = !DILocation(line: 36, column: 10, scope: !8801)
!8847 = !DILocation(line: 36, column: 3, scope: !8801)
!8848 = !DILocation(line: 37, column: 1, scope: !8801)
!8849 = distinct !DISubprogram(name: "umaxtostr", scope: !8850, file: !8850, line: 30, type: !8851, isLocal: false, isDefinition: true, scopeLine: 31, flags: DIFlagPrototyped, isOptimized: false, unit: !427, variables: !25)
!8850 = !DIFile(filename: "../../lib/inttostr.c", directory: "/home/ma481/Downloads/Chisel/chisel-bench/benchmark/chown-8.2/original/obj-llvm/lib")
!8851 = !DISubroutineType(types: !8852)
!8852 = !{!15, !363, !15}
!8853 = !DILocalVariable(name: "i", arg: 1, scope: !8849, file: !8850, line: 30, type: !363)
!8854 = !DILocation(line: 30, column: 19, scope: !8849)
!8855 = !DILocalVariable(name: "buf", arg: 2, scope: !8849, file: !8850, line: 30, type: !15)
!8856 = !DILocation(line: 30, column: 28, scope: !8849)
!8857 = !DILocalVariable(name: "p", scope: !8849, file: !8850, line: 32, type: !15)
!8858 = !DILocation(line: 32, column: 9, scope: !8849)
!8859 = !DILocation(line: 32, column: 13, scope: !8849)
!8860 = !DILocation(line: 32, column: 17, scope: !8849)
!8861 = !DILocation(line: 33, column: 4, scope: !8849)
!8862 = !DILocation(line: 33, column: 6, scope: !8849)
!8863 = !DILocation(line: 48, column: 7, scope: !8864)
!8864 = distinct !DILexicalBlock(scope: !8849, file: !8850, line: 47, column: 5)
!8865 = distinct !{!8865, !8863, !8866}
!8866 = !DILocation(line: 50, column: 28, scope: !8864)
!8867 = !DILocation(line: 49, column: 15, scope: !8864)
!8868 = !DILocation(line: 49, column: 17, scope: !8864)
!8869 = !DILocation(line: 49, column: 13, scope: !8864)
!8870 = !DILocation(line: 49, column: 9, scope: !8864)
!8871 = !DILocation(line: 49, column: 3, scope: !8864)
!8872 = !DILocation(line: 49, column: 7, scope: !8864)
!8873 = !DILocation(line: 49, column: 2, scope: !8864)
!8874 = !DILocation(line: 50, column: 17, scope: !8864)
!8875 = !DILocation(line: 50, column: 24, scope: !8864)
!8876 = !DILocation(line: 53, column: 10, scope: !8849)
!8877 = !DILocation(line: 53, column: 3, scope: !8849)
!8878 = distinct !DISubprogram(name: "parse_user_spec", scope: !185, file: !185, line: 247, type: !8879, isLocal: false, isDefinition: true, scopeLine: 249, flags: DIFlagPrototyped, isOptimized: false, unit: !196, variables: !25)
!8879 = !DISubroutineType(types: !8880)
!8880 = !{!12, !12, !188, !193, !24, !24}
!8881 = !DILocalVariable(name: "spec", arg: 1, scope: !8878, file: !185, line: 247, type: !12)
!8882 = !DILocation(line: 247, column: 30, scope: !8878)
!8883 = !DILocalVariable(name: "uid", arg: 2, scope: !8878, file: !185, line: 247, type: !188)
!8884 = !DILocation(line: 247, column: 43, scope: !8878)
!8885 = !DILocalVariable(name: "gid", arg: 3, scope: !8878, file: !185, line: 247, type: !193)
!8886 = !DILocation(line: 247, column: 55, scope: !8878)
!8887 = !DILocalVariable(name: "username", arg: 4, scope: !8878, file: !185, line: 248, type: !24)
!8888 = !DILocation(line: 248, column: 25, scope: !8878)
!8889 = !DILocalVariable(name: "groupname", arg: 5, scope: !8878, file: !185, line: 248, type: !24)
!8890 = !DILocation(line: 248, column: 42, scope: !8878)
!8891 = !DILocalVariable(name: "colon", scope: !8878, file: !185, line: 250, type: !12)
!8892 = !DILocation(line: 250, column: 15, scope: !8878)
!8893 = !DILocation(line: 250, column: 31, scope: !8878)
!8894 = !DILocation(line: 250, column: 23, scope: !8878)
!8895 = !DILocalVariable(name: "error_msg", scope: !8878, file: !185, line: 251, type: !12)
!8896 = !DILocation(line: 251, column: 15, scope: !8878)
!8897 = !DILocation(line: 252, column: 27, scope: !8878)
!8898 = !DILocation(line: 252, column: 33, scope: !8878)
!8899 = !DILocation(line: 252, column: 40, scope: !8878)
!8900 = !DILocation(line: 252, column: 45, scope: !8878)
!8901 = !DILocation(line: 252, column: 50, scope: !8878)
!8902 = !DILocation(line: 252, column: 60, scope: !8878)
!8903 = !DILocation(line: 252, column: 5, scope: !8878)
!8904 = !DILocation(line: 254, column: 8, scope: !8905)
!8905 = distinct !DILexicalBlock(scope: !8878, file: !185, line: 254, column: 7)
!8906 = !DILocation(line: 254, column: 14, scope: !8905)
!8907 = !DILocation(line: 254, column: 17, scope: !8905)
!8908 = !DILocation(line: 254, column: 7, scope: !8878)
!8909 = !DILocalVariable(name: "dot", scope: !8910, file: !185, line: 262, type: !12)
!8910 = distinct !DILexicalBlock(scope: !8905, file: !185, line: 255, column: 5)
!8911 = !DILocation(line: 262, column: 19, scope: !8910)
!8912 = !DILocation(line: 262, column: 33, scope: !8910)
!8913 = !DILocation(line: 262, column: 25, scope: !8910)
!8914 = !DILocation(line: 263, column: 11, scope: !8915)
!8915 = distinct !DILexicalBlock(scope: !8910, file: !185, line: 263, column: 11)
!8916 = !DILocation(line: 264, column: 11, scope: !8915)
!8917 = !DILocation(line: 264, column: 38, scope: !8915)
!8918 = !DILocation(line: 264, column: 44, scope: !8915)
!8919 = !DILocation(line: 264, column: 49, scope: !8915)
!8920 = !DILocation(line: 264, column: 54, scope: !8915)
!8921 = !DILocation(line: 264, column: 59, scope: !8915)
!8922 = !DILocation(line: 264, column: 69, scope: !8915)
!8923 = !DILocation(line: 264, column: 16, scope: !8915)
!8924 = !DILocation(line: 263, column: 11, scope: !8910)
!8925 = !DILocation(line: 265, column: 19, scope: !8915)
!8926 = !DILocation(line: 265, column: 9, scope: !8915)
!8927 = !DILocation(line: 266, column: 5, scope: !8910)
!8928 = !DILocation(line: 268, column: 10, scope: !8878)
!8929 = !DILocation(line: 268, column: 3, scope: !8878)
!8930 = !DILocalVariable(name: "spec", arg: 1, scope: !184, file: !185, line: 102, type: !12)
!8931 = !DILocation(line: 102, column: 35, scope: !184)
!8932 = !DILocalVariable(name: "separator", arg: 2, scope: !184, file: !185, line: 102, type: !12)
!8933 = !DILocation(line: 102, column: 53, scope: !184)
!8934 = !DILocalVariable(name: "uid", arg: 3, scope: !184, file: !185, line: 103, type: !188)
!8935 = !DILocation(line: 103, column: 30, scope: !184)
!8936 = !DILocalVariable(name: "gid", arg: 4, scope: !184, file: !185, line: 103, type: !193)
!8937 = !DILocation(line: 103, column: 42, scope: !184)
!8938 = !DILocalVariable(name: "username", arg: 5, scope: !184, file: !185, line: 104, type: !24)
!8939 = !DILocation(line: 104, column: 30, scope: !184)
!8940 = !DILocalVariable(name: "groupname", arg: 6, scope: !184, file: !185, line: 104, type: !24)
!8941 = !DILocation(line: 104, column: 47, scope: !184)
!8942 = !DILocalVariable(name: "error_msg", scope: !184, file: !185, line: 110, type: !12)
!8943 = !DILocation(line: 110, column: 15, scope: !184)
!8944 = !DILocalVariable(name: "pwd", scope: !184, file: !185, line: 111, type: !8945)
!8945 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8946, size: 64)
!8946 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "passwd", file: !8947, line: 49, size: 384, elements: !8948)
!8947 = !DIFile(filename: "/usr/include/pwd.h", directory: "/home/ma481/Downloads/Chisel/chisel-bench/benchmark/chown-8.2/original/obj-llvm/lib")
!8948 = !{!8949, !8950, !8951, !8952, !8953, !8954, !8955}
!8949 = !DIDerivedType(tag: DW_TAG_member, name: "pw_name", scope: !8946, file: !8947, line: 51, baseType: !15, size: 64)
!8950 = !DIDerivedType(tag: DW_TAG_member, name: "pw_passwd", scope: !8946, file: !8947, line: 52, baseType: !15, size: 64, offset: 64)
!8951 = !DIDerivedType(tag: DW_TAG_member, name: "pw_uid", scope: !8946, file: !8947, line: 53, baseType: !191, size: 32, offset: 128)
!8952 = !DIDerivedType(tag: DW_TAG_member, name: "pw_gid", scope: !8946, file: !8947, line: 54, baseType: !195, size: 32, offset: 160)
!8953 = !DIDerivedType(tag: DW_TAG_member, name: "pw_gecos", scope: !8946, file: !8947, line: 55, baseType: !15, size: 64, offset: 192)
!8954 = !DIDerivedType(tag: DW_TAG_member, name: "pw_dir", scope: !8946, file: !8947, line: 56, baseType: !15, size: 64, offset: 256)
!8955 = !DIDerivedType(tag: DW_TAG_member, name: "pw_shell", scope: !8946, file: !8947, line: 57, baseType: !15, size: 64, offset: 320)
!8956 = !DILocation(line: 111, column: 18, scope: !184)
!8957 = !DILocalVariable(name: "grp", scope: !184, file: !185, line: 112, type: !8958)
!8958 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8959, size: 64)
!8959 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "group", file: !8960, line: 42, size: 256, elements: !8961)
!8960 = !DIFile(filename: "/usr/include/grp.h", directory: "/home/ma481/Downloads/Chisel/chisel-bench/benchmark/chown-8.2/original/obj-llvm/lib")
!8961 = !{!8962, !8963, !8964, !8965}
!8962 = !DIDerivedType(tag: DW_TAG_member, name: "gr_name", scope: !8959, file: !8960, line: 44, baseType: !15, size: 64)
!8963 = !DIDerivedType(tag: DW_TAG_member, name: "gr_passwd", scope: !8959, file: !8960, line: 45, baseType: !15, size: 64, offset: 64)
!8964 = !DIDerivedType(tag: DW_TAG_member, name: "gr_gid", scope: !8959, file: !8960, line: 46, baseType: !195, size: 32, offset: 128)
!8965 = !DIDerivedType(tag: DW_TAG_member, name: "gr_mem", scope: !8959, file: !8960, line: 47, baseType: !24, size: 64, offset: 192)
!8966 = !DILocation(line: 112, column: 17, scope: !184)
!8967 = !DILocalVariable(name: "u", scope: !184, file: !185, line: 113, type: !15)
!8968 = !DILocation(line: 113, column: 9, scope: !184)
!8969 = !DILocalVariable(name: "g", scope: !184, file: !185, line: 114, type: !12)
!8970 = !DILocation(line: 114, column: 15, scope: !184)
!8971 = !DILocalVariable(name: "gname", scope: !184, file: !185, line: 115, type: !15)
!8972 = !DILocation(line: 115, column: 9, scope: !184)
!8973 = !DILocalVariable(name: "unum", scope: !184, file: !185, line: 116, type: !189)
!8974 = !DILocation(line: 116, column: 9, scope: !184)
!8975 = !DILocation(line: 116, column: 17, scope: !184)
!8976 = !DILocation(line: 116, column: 16, scope: !184)
!8977 = !DILocalVariable(name: "gnum", scope: !184, file: !185, line: 117, type: !194)
!8978 = !DILocation(line: 117, column: 9, scope: !184)
!8979 = !DILocation(line: 117, column: 17, scope: !184)
!8980 = !DILocation(line: 117, column: 16, scope: !184)
!8981 = !DILocation(line: 119, column: 13, scope: !184)
!8982 = !DILocation(line: 120, column: 16, scope: !184)
!8983 = !DILocation(line: 120, column: 26, scope: !184)
!8984 = !DILocation(line: 120, column: 4, scope: !184)
!8985 = !DILocation(line: 120, column: 13, scope: !184)
!8986 = !DILocation(line: 126, column: 5, scope: !184)
!8987 = !DILocation(line: 127, column: 7, scope: !8988)
!8988 = distinct !DILexicalBlock(scope: !184, file: !185, line: 127, column: 7)
!8989 = !DILocation(line: 127, column: 17, scope: !8988)
!8990 = !DILocation(line: 127, column: 7, scope: !184)
!8991 = !DILocation(line: 129, column: 12, scope: !8992)
!8992 = distinct !DILexicalBlock(scope: !8993, file: !185, line: 129, column: 11)
!8993 = distinct !DILexicalBlock(scope: !8988, file: !185, line: 128, column: 5)
!8994 = !DILocation(line: 129, column: 11, scope: !8992)
!8995 = !DILocation(line: 129, column: 11, scope: !8993)
!8996 = !DILocation(line: 130, column: 22, scope: !8992)
!8997 = !DILocation(line: 130, column: 13, scope: !8992)
!8998 = !DILocation(line: 130, column: 11, scope: !8992)
!8999 = !DILocation(line: 130, column: 9, scope: !8992)
!9000 = !DILocation(line: 131, column: 5, scope: !8993)
!9001 = !DILocalVariable(name: "ulen", scope: !9002, file: !185, line: 134, type: !91)
!9002 = distinct !DILexicalBlock(scope: !8988, file: !185, line: 133, column: 5)
!9003 = !DILocation(line: 134, column: 14, scope: !9002)
!9004 = !DILocation(line: 134, column: 21, scope: !9002)
!9005 = !DILocation(line: 134, column: 33, scope: !9002)
!9006 = !DILocation(line: 134, column: 31, scope: !9002)
!9007 = !DILocation(line: 135, column: 11, scope: !9008)
!9008 = distinct !DILexicalBlock(scope: !9002, file: !185, line: 135, column: 11)
!9009 = !DILocation(line: 135, column: 16, scope: !9008)
!9010 = !DILocation(line: 135, column: 11, scope: !9002)
!9011 = !DILocation(line: 137, column: 24, scope: !9012)
!9012 = distinct !DILexicalBlock(scope: !9008, file: !185, line: 136, column: 9)
!9013 = !DILocation(line: 137, column: 30, scope: !9012)
!9014 = !DILocation(line: 137, column: 35, scope: !9012)
!9015 = !DILocation(line: 137, column: 15, scope: !9012)
!9016 = !DILocation(line: 137, column: 13, scope: !9012)
!9017 = !DILocation(line: 138, column: 11, scope: !9012)
!9018 = !DILocation(line: 138, column: 13, scope: !9012)
!9019 = !DILocation(line: 138, column: 19, scope: !9012)
!9020 = !DILocation(line: 139, column: 9, scope: !9012)
!9021 = !DILocation(line: 142, column: 8, scope: !184)
!9022 = !DILocation(line: 142, column: 18, scope: !184)
!9023 = !DILocation(line: 142, column: 26, scope: !184)
!9024 = !DILocation(line: 142, column: 31, scope: !184)
!9025 = !DILocation(line: 142, column: 41, scope: !184)
!9026 = !DILocation(line: 142, column: 29, scope: !184)
!9027 = !DILocation(line: 142, column: 46, scope: !184)
!9028 = !DILocation(line: 144, column: 10, scope: !184)
!9029 = !DILocation(line: 144, column: 20, scope: !184)
!9030 = !DILocation(line: 142, column: 5, scope: !184)
!9031 = !DILocation(line: 155, column: 7, scope: !9032)
!9032 = distinct !DILexicalBlock(scope: !184, file: !185, line: 155, column: 7)
!9033 = !DILocation(line: 155, column: 9, scope: !9032)
!9034 = !DILocation(line: 155, column: 7, scope: !184)
!9035 = !DILocation(line: 158, column: 15, scope: !9036)
!9036 = distinct !DILexicalBlock(scope: !9032, file: !185, line: 156, column: 5)
!9037 = !DILocation(line: 158, column: 14, scope: !9036)
!9038 = !DILocation(line: 158, column: 17, scope: !9036)
!9039 = !DILocation(line: 158, column: 43, scope: !9036)
!9040 = !DILocation(line: 158, column: 33, scope: !9036)
!9041 = !DILocation(line: 158, column: 11, scope: !9036)
!9042 = !DILocation(line: 159, column: 11, scope: !9043)
!9043 = distinct !DILexicalBlock(scope: !9036, file: !185, line: 159, column: 11)
!9044 = !DILocation(line: 159, column: 15, scope: !9043)
!9045 = !DILocation(line: 159, column: 11, scope: !9036)
!9046 = !DILocalVariable(name: "use_login_group", scope: !9047, file: !185, line: 161, type: !79)
!9047 = distinct !DILexicalBlock(scope: !9043, file: !185, line: 160, column: 9)
!9048 = !DILocation(line: 161, column: 16, scope: !9047)
!9049 = !DILocation(line: 161, column: 35, scope: !9047)
!9050 = !DILocation(line: 161, column: 45, scope: !9047)
!9051 = !DILocation(line: 161, column: 53, scope: !9047)
!9052 = !DILocation(line: 161, column: 56, scope: !9047)
!9053 = !DILocation(line: 161, column: 58, scope: !9047)
!9054 = !DILocation(line: 162, column: 15, scope: !9055)
!9055 = distinct !DILexicalBlock(scope: !9047, file: !185, line: 162, column: 15)
!9056 = !DILocation(line: 162, column: 15, scope: !9047)
!9057 = !DILocation(line: 166, column: 27, scope: !9058)
!9058 = distinct !DILexicalBlock(scope: !9055, file: !185, line: 163, column: 13)
!9059 = !DILocation(line: 166, column: 25, scope: !9058)
!9060 = !DILocation(line: 167, column: 13, scope: !9058)
!9061 = !DILocalVariable(name: "tmp", scope: !9062, file: !185, line: 170, type: !34)
!9062 = distinct !DILexicalBlock(scope: !9055, file: !185, line: 169, column: 13)
!9063 = !DILocation(line: 170, column: 33, scope: !9062)
!9064 = !DILocation(line: 171, column: 29, scope: !9065)
!9065 = distinct !DILexicalBlock(scope: !9062, file: !185, line: 171, column: 19)
!9066 = !DILocation(line: 171, column: 19, scope: !9065)
!9067 = !DILocation(line: 171, column: 52, scope: !9065)
!9068 = !DILocation(line: 172, column: 19, scope: !9065)
!9069 = !DILocation(line: 172, column: 22, scope: !9065)
!9070 = !DILocation(line: 172, column: 26, scope: !9065)
!9071 = !DILocation(line: 172, column: 36, scope: !9065)
!9072 = !DILocation(line: 172, column: 47, scope: !9065)
!9073 = !DILocation(line: 172, column: 39, scope: !9065)
!9074 = !DILocation(line: 172, column: 51, scope: !9065)
!9075 = !DILocation(line: 171, column: 19, scope: !9062)
!9076 = !DILocation(line: 173, column: 24, scope: !9065)
!9077 = !DILocation(line: 173, column: 22, scope: !9065)
!9078 = !DILocation(line: 173, column: 17, scope: !9065)
!9079 = !DILocation(line: 175, column: 29, scope: !9065)
!9080 = !DILocation(line: 175, column: 27, scope: !9065)
!9081 = !DILocation(line: 177, column: 9, scope: !9047)
!9082 = !DILocation(line: 180, column: 18, scope: !9083)
!9083 = distinct !DILexicalBlock(scope: !9043, file: !185, line: 179, column: 9)
!9084 = !DILocation(line: 180, column: 23, scope: !9083)
!9085 = !DILocation(line: 180, column: 16, scope: !9083)
!9086 = !DILocation(line: 181, column: 15, scope: !9087)
!9087 = distinct !DILexicalBlock(scope: !9083, file: !185, line: 181, column: 15)
!9088 = !DILocation(line: 181, column: 17, scope: !9087)
!9089 = !DILocation(line: 181, column: 25, scope: !9087)
!9090 = !DILocation(line: 181, column: 28, scope: !9087)
!9091 = !DILocation(line: 181, column: 38, scope: !9087)
!9092 = !DILocation(line: 181, column: 15, scope: !9083)
!9093 = !DILocalVariable(name: "buf", scope: !9094, file: !185, line: 185, type: !849)
!9094 = distinct !DILexicalBlock(scope: !9087, file: !185, line: 182, column: 13)
!9095 = !DILocation(line: 185, column: 20, scope: !9094)
!9096 = !DILocation(line: 186, column: 22, scope: !9094)
!9097 = !DILocation(line: 186, column: 27, scope: !9094)
!9098 = !DILocation(line: 186, column: 20, scope: !9094)
!9099 = !DILocation(line: 187, column: 31, scope: !9094)
!9100 = !DILocation(line: 187, column: 21, scope: !9094)
!9101 = !DILocation(line: 187, column: 19, scope: !9094)
!9102 = !DILocation(line: 188, column: 32, scope: !9094)
!9103 = !DILocation(line: 188, column: 38, scope: !9094)
!9104 = !DILocation(line: 188, column: 43, scope: !9094)
!9105 = !DILocation(line: 188, column: 64, scope: !9094)
!9106 = !DILocation(line: 188, column: 70, scope: !9094)
!9107 = !DILocation(line: 188, column: 53, scope: !9094)
!9108 = !DILocation(line: 188, column: 23, scope: !9094)
!9109 = !DILocation(line: 188, column: 21, scope: !9094)
!9110 = !DILocation(line: 189, column: 15, scope: !9094)
!9111 = !DILocation(line: 190, column: 13, scope: !9094)
!9112 = !DILocation(line: 192, column: 7, scope: !9036)
!9113 = !DILocation(line: 193, column: 5, scope: !9036)
!9114 = !DILocation(line: 195, column: 7, scope: !9115)
!9115 = distinct !DILexicalBlock(scope: !184, file: !185, line: 195, column: 7)
!9116 = !DILocation(line: 195, column: 9, scope: !9115)
!9117 = !DILocation(line: 195, column: 17, scope: !9115)
!9118 = !DILocation(line: 195, column: 20, scope: !9115)
!9119 = !DILocation(line: 195, column: 30, scope: !9115)
!9120 = !DILocation(line: 195, column: 7, scope: !184)
!9121 = !DILocation(line: 199, column: 15, scope: !9122)
!9122 = distinct !DILexicalBlock(scope: !9115, file: !185, line: 196, column: 5)
!9123 = !DILocation(line: 199, column: 14, scope: !9122)
!9124 = !DILocation(line: 199, column: 17, scope: !9122)
!9125 = !DILocation(line: 199, column: 43, scope: !9122)
!9126 = !DILocation(line: 199, column: 33, scope: !9122)
!9127 = !DILocation(line: 199, column: 11, scope: !9122)
!9128 = !DILocation(line: 200, column: 11, scope: !9129)
!9129 = distinct !DILexicalBlock(scope: !9122, file: !185, line: 200, column: 11)
!9130 = !DILocation(line: 200, column: 15, scope: !9129)
!9131 = !DILocation(line: 200, column: 11, scope: !9122)
!9132 = !DILocalVariable(name: "tmp", scope: !9133, file: !185, line: 202, type: !34)
!9133 = distinct !DILexicalBlock(scope: !9129, file: !185, line: 201, column: 9)
!9134 = !DILocation(line: 202, column: 29, scope: !9133)
!9135 = !DILocation(line: 203, column: 25, scope: !9136)
!9136 = distinct !DILexicalBlock(scope: !9133, file: !185, line: 203, column: 15)
!9137 = !DILocation(line: 203, column: 15, scope: !9136)
!9138 = !DILocation(line: 203, column: 48, scope: !9136)
!9139 = !DILocation(line: 204, column: 15, scope: !9136)
!9140 = !DILocation(line: 204, column: 18, scope: !9136)
!9141 = !DILocation(line: 204, column: 22, scope: !9136)
!9142 = !DILocation(line: 204, column: 32, scope: !9136)
!9143 = !DILocation(line: 204, column: 43, scope: !9136)
!9144 = !DILocation(line: 204, column: 35, scope: !9136)
!9145 = !DILocation(line: 204, column: 47, scope: !9136)
!9146 = !DILocation(line: 203, column: 15, scope: !9133)
!9147 = !DILocation(line: 205, column: 20, scope: !9136)
!9148 = !DILocation(line: 205, column: 18, scope: !9136)
!9149 = !DILocation(line: 205, column: 13, scope: !9136)
!9150 = !DILocation(line: 207, column: 25, scope: !9136)
!9151 = !DILocation(line: 207, column: 23, scope: !9136)
!9152 = !DILocation(line: 208, column: 9, scope: !9133)
!9153 = !DILocation(line: 210, column: 16, scope: !9129)
!9154 = !DILocation(line: 210, column: 21, scope: !9129)
!9155 = !DILocation(line: 210, column: 14, scope: !9129)
!9156 = !DILocation(line: 211, column: 7, scope: !9122)
!9157 = !DILocation(line: 212, column: 24, scope: !9122)
!9158 = !DILocation(line: 212, column: 15, scope: !9122)
!9159 = !DILocation(line: 212, column: 13, scope: !9122)
!9160 = !DILocation(line: 213, column: 5, scope: !9122)
!9161 = !DILocation(line: 215, column: 7, scope: !9162)
!9162 = distinct !DILexicalBlock(scope: !184, file: !185, line: 215, column: 7)
!9163 = !DILocation(line: 215, column: 17, scope: !9162)
!9164 = !DILocation(line: 215, column: 7, scope: !184)
!9165 = !DILocation(line: 217, column: 14, scope: !9166)
!9166 = distinct !DILexicalBlock(scope: !9162, file: !185, line: 216, column: 5)
!9167 = !DILocation(line: 217, column: 8, scope: !9166)
!9168 = !DILocation(line: 217, column: 12, scope: !9166)
!9169 = !DILocation(line: 218, column: 14, scope: !9166)
!9170 = !DILocation(line: 218, column: 8, scope: !9166)
!9171 = !DILocation(line: 218, column: 12, scope: !9166)
!9172 = !DILocation(line: 219, column: 19, scope: !9166)
!9173 = !DILocation(line: 219, column: 8, scope: !9166)
!9174 = !DILocation(line: 219, column: 17, scope: !9166)
!9175 = !DILocation(line: 220, column: 20, scope: !9166)
!9176 = !DILocation(line: 220, column: 8, scope: !9166)
!9177 = !DILocation(line: 220, column: 18, scope: !9166)
!9178 = !DILocation(line: 221, column: 9, scope: !9166)
!9179 = !DILocation(line: 222, column: 5, scope: !9166)
!9180 = !DILocation(line: 224, column: 11, scope: !9162)
!9181 = !DILocation(line: 224, column: 5, scope: !9162)
!9182 = !DILocation(line: 226, column: 9, scope: !184)
!9183 = !DILocation(line: 226, column: 3, scope: !184)
!9184 = !DILocation(line: 227, column: 10, scope: !184)
!9185 = !DILocation(line: 227, column: 3, scope: !184)
!9186 = distinct !DISubprogram(name: "xnmalloc", scope: !434, file: !434, line: 121, type: !9187, isLocal: false, isDefinition: true, scopeLine: 122, flags: DIFlagPrototyped, isOptimized: false, unit: !430, variables: !25)
!9187 = !DISubroutineType(types: !9188)
!9188 = !{!16, !91, !91}
!9189 = !DILocalVariable(name: "n", arg: 1, scope: !9186, file: !434, line: 121, type: !91)
!9190 = !DILocation(line: 121, column: 18, scope: !9186)
!9191 = !DILocalVariable(name: "s", arg: 2, scope: !9186, file: !434, line: 121, type: !91)
!9192 = !DILocation(line: 121, column: 28, scope: !9186)
!9193 = !DILocation(line: 123, column: 7, scope: !9194)
!9194 = distinct !DILexicalBlock(scope: !9186, file: !434, line: 123, column: 7)
!9195 = !DILocation(line: 123, column: 7, scope: !9186)
!9196 = !DILocation(line: 124, column: 5, scope: !9194)
!9197 = !DILocation(line: 125, column: 19, scope: !9186)
!9198 = !DILocation(line: 125, column: 23, scope: !9186)
!9199 = !DILocation(line: 125, column: 21, scope: !9186)
!9200 = !DILocation(line: 125, column: 10, scope: !9186)
!9201 = !DILocation(line: 125, column: 3, scope: !9186)
!9202 = distinct !DISubprogram(name: "xmalloc", scope: !431, file: !431, line: 43, type: !9203, isLocal: false, isDefinition: true, scopeLine: 44, flags: DIFlagPrototyped, isOptimized: false, unit: !430, variables: !25)
!9203 = !DISubroutineType(types: !9204)
!9204 = !{!16, !91}
!9205 = !DILocalVariable(name: "n", arg: 1, scope: !9202, file: !431, line: 43, type: !91)
!9206 = !DILocation(line: 43, column: 17, scope: !9202)
!9207 = !DILocalVariable(name: "p", scope: !9202, file: !431, line: 45, type: !16)
!9208 = !DILocation(line: 45, column: 9, scope: !9202)
!9209 = !DILocation(line: 45, column: 21, scope: !9202)
!9210 = !DILocation(line: 45, column: 13, scope: !9202)
!9211 = !DILocation(line: 46, column: 8, scope: !9212)
!9212 = distinct !DILexicalBlock(scope: !9202, file: !431, line: 46, column: 7)
!9213 = !DILocation(line: 46, column: 10, scope: !9212)
!9214 = !DILocation(line: 46, column: 13, scope: !9212)
!9215 = !DILocation(line: 46, column: 15, scope: !9212)
!9216 = !DILocation(line: 46, column: 7, scope: !9202)
!9217 = !DILocation(line: 47, column: 5, scope: !9212)
!9218 = !DILocation(line: 48, column: 10, scope: !9202)
!9219 = !DILocation(line: 48, column: 3, scope: !9202)
!9220 = distinct !DISubprogram(name: "xnrealloc", scope: !434, file: !434, line: 132, type: !9221, isLocal: false, isDefinition: true, scopeLine: 133, flags: DIFlagPrototyped, isOptimized: false, unit: !430, variables: !25)
!9221 = !DISubroutineType(types: !9222)
!9222 = !{!16, !16, !91, !91}
!9223 = !DILocalVariable(name: "p", arg: 1, scope: !9220, file: !434, line: 132, type: !16)
!9224 = !DILocation(line: 132, column: 18, scope: !9220)
!9225 = !DILocalVariable(name: "n", arg: 2, scope: !9220, file: !434, line: 132, type: !91)
!9226 = !DILocation(line: 132, column: 28, scope: !9220)
!9227 = !DILocalVariable(name: "s", arg: 3, scope: !9220, file: !434, line: 132, type: !91)
!9228 = !DILocation(line: 132, column: 38, scope: !9220)
!9229 = !DILocation(line: 134, column: 7, scope: !9230)
!9230 = distinct !DILexicalBlock(scope: !9220, file: !434, line: 134, column: 7)
!9231 = !DILocation(line: 134, column: 7, scope: !9220)
!9232 = !DILocation(line: 135, column: 5, scope: !9230)
!9233 = !DILocation(line: 136, column: 20, scope: !9220)
!9234 = !DILocation(line: 136, column: 23, scope: !9220)
!9235 = !DILocation(line: 136, column: 27, scope: !9220)
!9236 = !DILocation(line: 136, column: 25, scope: !9220)
!9237 = !DILocation(line: 136, column: 10, scope: !9220)
!9238 = !DILocation(line: 136, column: 3, scope: !9220)
!9239 = distinct !DISubprogram(name: "xrealloc", scope: !431, file: !431, line: 55, type: !9240, isLocal: false, isDefinition: true, scopeLine: 56, flags: DIFlagPrototyped, isOptimized: false, unit: !430, variables: !25)
!9240 = !DISubroutineType(types: !9241)
!9241 = !{!16, !16, !91}
!9242 = !DILocalVariable(name: "p", arg: 1, scope: !9239, file: !431, line: 55, type: !16)
!9243 = !DILocation(line: 55, column: 17, scope: !9239)
!9244 = !DILocalVariable(name: "n", arg: 2, scope: !9239, file: !431, line: 55, type: !91)
!9245 = !DILocation(line: 55, column: 27, scope: !9239)
!9246 = !DILocation(line: 57, column: 16, scope: !9239)
!9247 = !DILocation(line: 57, column: 19, scope: !9239)
!9248 = !DILocation(line: 57, column: 7, scope: !9239)
!9249 = !DILocation(line: 57, column: 5, scope: !9239)
!9250 = !DILocation(line: 58, column: 8, scope: !9251)
!9251 = distinct !DILexicalBlock(scope: !9239, file: !431, line: 58, column: 7)
!9252 = !DILocation(line: 58, column: 10, scope: !9251)
!9253 = !DILocation(line: 58, column: 13, scope: !9251)
!9254 = !DILocation(line: 58, column: 15, scope: !9251)
!9255 = !DILocation(line: 58, column: 7, scope: !9239)
!9256 = !DILocation(line: 59, column: 5, scope: !9251)
!9257 = !DILocation(line: 60, column: 10, scope: !9239)
!9258 = !DILocation(line: 60, column: 3, scope: !9239)
!9259 = !DILocalVariable(name: "p", arg: 1, scope: !435, file: !434, line: 195, type: !16)
!9260 = !DILocation(line: 195, column: 19, scope: !435)
!9261 = !DILocalVariable(name: "pn", arg: 2, scope: !435, file: !434, line: 195, type: !438)
!9262 = !DILocation(line: 195, column: 30, scope: !435)
!9263 = !DILocalVariable(name: "s", arg: 3, scope: !435, file: !434, line: 195, type: !91)
!9264 = !DILocation(line: 195, column: 41, scope: !435)
!9265 = !DILocalVariable(name: "n", scope: !435, file: !434, line: 197, type: !91)
!9266 = !DILocation(line: 197, column: 10, scope: !435)
!9267 = !DILocation(line: 197, column: 15, scope: !435)
!9268 = !DILocation(line: 197, column: 14, scope: !435)
!9269 = !DILocation(line: 199, column: 9, scope: !9270)
!9270 = distinct !DILexicalBlock(scope: !435, file: !434, line: 199, column: 7)
!9271 = !DILocation(line: 199, column: 7, scope: !435)
!9272 = !DILocation(line: 201, column: 13, scope: !9273)
!9273 = distinct !DILexicalBlock(scope: !9274, file: !434, line: 201, column: 11)
!9274 = distinct !DILexicalBlock(scope: !9270, file: !434, line: 200, column: 5)
!9275 = !DILocation(line: 201, column: 11, scope: !9274)
!9276 = !DILocation(line: 209, column: 25, scope: !9277)
!9277 = distinct !DILexicalBlock(scope: !9273, file: !434, line: 202, column: 2)
!9278 = !DILocation(line: 209, column: 23, scope: !9277)
!9279 = !DILocation(line: 209, column: 6, scope: !9277)
!9280 = !DILocation(line: 210, column: 10, scope: !9277)
!9281 = !DILocation(line: 210, column: 9, scope: !9277)
!9282 = !DILocation(line: 210, column: 6, scope: !9277)
!9283 = !DILocation(line: 211, column: 2, scope: !9277)
!9284 = !DILocation(line: 212, column: 5, scope: !9274)
!9285 = !DILocation(line: 219, column: 33, scope: !9286)
!9286 = distinct !DILexicalBlock(scope: !9287, file: !434, line: 219, column: 11)
!9287 = distinct !DILexicalBlock(scope: !9270, file: !434, line: 214, column: 5)
!9288 = !DILocation(line: 219, column: 31, scope: !9286)
!9289 = !DILocation(line: 219, column: 38, scope: !9286)
!9290 = !DILocation(line: 219, column: 35, scope: !9286)
!9291 = !DILocation(line: 219, column: 11, scope: !9287)
!9292 = !DILocation(line: 220, column: 2, scope: !9286)
!9293 = !DILocation(line: 221, column: 13, scope: !9287)
!9294 = !DILocation(line: 221, column: 15, scope: !9287)
!9295 = !DILocation(line: 221, column: 20, scope: !9287)
!9296 = !DILocation(line: 221, column: 9, scope: !9287)
!9297 = !DILocation(line: 224, column: 9, scope: !435)
!9298 = !DILocation(line: 224, column: 4, scope: !435)
!9299 = !DILocation(line: 224, column: 7, scope: !435)
!9300 = !DILocation(line: 225, column: 20, scope: !435)
!9301 = !DILocation(line: 225, column: 23, scope: !435)
!9302 = !DILocation(line: 225, column: 27, scope: !435)
!9303 = !DILocation(line: 225, column: 25, scope: !435)
!9304 = !DILocation(line: 225, column: 10, scope: !435)
!9305 = !DILocation(line: 225, column: 3, scope: !435)
!9306 = distinct !DISubprogram(name: "xcharalloc", scope: !434, file: !434, line: 233, type: !9307, isLocal: false, isDefinition: true, scopeLine: 234, flags: DIFlagPrototyped, isOptimized: false, unit: !430, variables: !25)
!9307 = !DISubroutineType(types: !9308)
!9308 = !{!15, !91}
!9309 = !DILocalVariable(name: "n", arg: 1, scope: !9306, file: !434, line: 233, type: !91)
!9310 = !DILocation(line: 233, column: 20, scope: !9306)
!9311 = !DILocation(line: 235, column: 10, scope: !9306)
!9312 = !DILocation(line: 235, column: 3, scope: !9306)
!9313 = distinct !DISubprogram(name: "x2realloc", scope: !431, file: !431, line: 70, type: !9314, isLocal: false, isDefinition: true, scopeLine: 71, flags: DIFlagPrototyped, isOptimized: false, unit: !430, variables: !25)
!9314 = !DISubroutineType(types: !9315)
!9315 = !{!16, !16, !438}
!9316 = !DILocalVariable(name: "p", arg: 1, scope: !9313, file: !431, line: 70, type: !16)
!9317 = !DILocation(line: 70, column: 18, scope: !9313)
!9318 = !DILocalVariable(name: "pn", arg: 2, scope: !9313, file: !431, line: 70, type: !438)
!9319 = !DILocation(line: 70, column: 29, scope: !9313)
!9320 = !DILocation(line: 72, column: 22, scope: !9313)
!9321 = !DILocation(line: 72, column: 25, scope: !9313)
!9322 = !DILocation(line: 72, column: 10, scope: !9313)
!9323 = !DILocation(line: 72, column: 3, scope: !9313)
!9324 = distinct !DISubprogram(name: "xzalloc", scope: !431, file: !431, line: 80, type: !9203, isLocal: false, isDefinition: true, scopeLine: 81, flags: DIFlagPrototyped, isOptimized: false, unit: !430, variables: !25)
!9325 = !DILocalVariable(name: "s", arg: 1, scope: !9324, file: !431, line: 80, type: !91)
!9326 = !DILocation(line: 80, column: 17, scope: !9324)
!9327 = !DILocation(line: 82, column: 27, scope: !9324)
!9328 = !DILocation(line: 82, column: 18, scope: !9324)
!9329 = !DILocation(line: 82, column: 34, scope: !9324)
!9330 = !DILocation(line: 82, column: 10, scope: !9324)
!9331 = !DILocation(line: 82, column: 3, scope: !9324)
!9332 = distinct !DISubprogram(name: "xcalloc", scope: !431, file: !431, line: 89, type: !9187, isLocal: false, isDefinition: true, scopeLine: 90, flags: DIFlagPrototyped, isOptimized: false, unit: !430, variables: !25)
!9333 = !DILocalVariable(name: "n", arg: 1, scope: !9332, file: !431, line: 89, type: !91)
!9334 = !DILocation(line: 89, column: 17, scope: !9332)
!9335 = !DILocalVariable(name: "s", arg: 2, scope: !9332, file: !431, line: 89, type: !91)
!9336 = !DILocation(line: 89, column: 27, scope: !9332)
!9337 = !DILocalVariable(name: "p", scope: !9332, file: !431, line: 91, type: !16)
!9338 = !DILocation(line: 91, column: 9, scope: !9332)
!9339 = !DILocation(line: 97, column: 26, scope: !9340)
!9340 = distinct !DILexicalBlock(scope: !9332, file: !431, line: 96, column: 7)
!9341 = !DILocation(line: 97, column: 29, scope: !9340)
!9342 = !DILocation(line: 97, column: 18, scope: !9340)
!9343 = !DILocation(line: 97, column: 16, scope: !9340)
!9344 = !DILocation(line: 96, column: 7, scope: !9332)
!9345 = !DILocation(line: 98, column: 5, scope: !9340)
!9346 = !DILocation(line: 99, column: 10, scope: !9332)
!9347 = !DILocation(line: 99, column: 3, scope: !9332)
!9348 = distinct !DISubprogram(name: "xmemdup", scope: !431, file: !431, line: 107, type: !9349, isLocal: false, isDefinition: true, scopeLine: 108, flags: DIFlagPrototyped, isOptimized: false, unit: !430, variables: !25)
!9349 = !DISubroutineType(types: !9350)
!9350 = !{!16, !404, !91}
!9351 = !DILocalVariable(name: "p", arg: 1, scope: !9348, file: !431, line: 107, type: !404)
!9352 = !DILocation(line: 107, column: 22, scope: !9348)
!9353 = !DILocalVariable(name: "s", arg: 2, scope: !9348, file: !431, line: 107, type: !91)
!9354 = !DILocation(line: 107, column: 32, scope: !9348)
!9355 = !DILocation(line: 109, column: 27, scope: !9348)
!9356 = !DILocation(line: 109, column: 18, scope: !9348)
!9357 = !DILocation(line: 109, column: 31, scope: !9348)
!9358 = !DILocation(line: 109, column: 34, scope: !9348)
!9359 = !DILocation(line: 109, column: 10, scope: !9348)
!9360 = !DILocation(line: 109, column: 3, scope: !9348)
!9361 = distinct !DISubprogram(name: "xstrdup", scope: !431, file: !431, line: 115, type: !791, isLocal: false, isDefinition: true, scopeLine: 116, flags: DIFlagPrototyped, isOptimized: false, unit: !430, variables: !25)
!9362 = !DILocalVariable(name: "string", arg: 1, scope: !9361, file: !431, line: 115, type: !12)
!9363 = !DILocation(line: 115, column: 22, scope: !9361)
!9364 = !DILocation(line: 117, column: 19, scope: !9361)
!9365 = !DILocation(line: 117, column: 35, scope: !9361)
!9366 = !DILocation(line: 117, column: 27, scope: !9361)
!9367 = !DILocation(line: 117, column: 43, scope: !9361)
!9368 = !DILocation(line: 117, column: 10, scope: !9361)
!9369 = !DILocation(line: 117, column: 3, scope: !9361)
!9370 = distinct !DISubprogram(name: "xstrtoul", scope: !9371, file: !9371, line: 75, type: !9372, isLocal: false, isDefinition: true, scopeLine: 77, flags: DIFlagPrototyped, isOptimized: false, unit: !442, variables: !25)
!9371 = !DIFile(filename: "../../lib/xstrtol.c", directory: "/home/ma481/Downloads/Chisel/chisel-bench/benchmark/chown-8.2/original/obj-llvm/lib")
!9372 = !DISubroutineType(types: !9373)
!9373 = !{!9374, !12, !24, !23, !9375, !12}
!9374 = !DIDerivedType(tag: DW_TAG_typedef, name: "strtol_error", file: !199, line: 39, baseType: !198)
!9375 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !34, size: 64)
!9376 = !DILocalVariable(name: "s", arg: 1, scope: !9370, file: !9371, line: 75, type: !12)
!9377 = !DILocation(line: 75, column: 24, scope: !9370)
!9378 = !DILocalVariable(name: "ptr", arg: 2, scope: !9370, file: !9371, line: 75, type: !24)
!9379 = !DILocation(line: 75, column: 34, scope: !9370)
!9380 = !DILocalVariable(name: "strtol_base", arg: 3, scope: !9370, file: !9371, line: 75, type: !23)
!9381 = !DILocation(line: 75, column: 43, scope: !9370)
!9382 = !DILocalVariable(name: "val", arg: 4, scope: !9370, file: !9371, line: 76, type: !9375)
!9383 = !DILocation(line: 76, column: 17, scope: !9370)
!9384 = !DILocalVariable(name: "valid_suffixes", arg: 5, scope: !9370, file: !9371, line: 76, type: !12)
!9385 = !DILocation(line: 76, column: 34, scope: !9370)
!9386 = !DILocalVariable(name: "t_ptr", scope: !9370, file: !9371, line: 78, type: !15)
!9387 = !DILocation(line: 78, column: 9, scope: !9370)
!9388 = !DILocalVariable(name: "p", scope: !9370, file: !9371, line: 79, type: !24)
!9389 = !DILocation(line: 79, column: 10, scope: !9370)
!9390 = !DILocalVariable(name: "tmp", scope: !9370, file: !9371, line: 80, type: !34)
!9391 = !DILocation(line: 80, column: 14, scope: !9370)
!9392 = !DILocalVariable(name: "err", scope: !9370, file: !9371, line: 81, type: !9374)
!9393 = !DILocation(line: 81, column: 16, scope: !9370)
!9394 = !DILocation(line: 83, column: 3, scope: !9395)
!9395 = distinct !DILexicalBlock(scope: !9396, file: !9371, line: 83, column: 3)
!9396 = distinct !DILexicalBlock(scope: !9370, file: !9371, line: 83, column: 3)
!9397 = !DILocation(line: 83, column: 3, scope: !9396)
!9398 = !DILocation(line: 85, column: 8, scope: !9370)
!9399 = !DILocation(line: 85, column: 14, scope: !9370)
!9400 = !DILocation(line: 85, column: 5, scope: !9370)
!9401 = !DILocalVariable(name: "q", scope: !9402, file: !9371, line: 89, type: !12)
!9402 = distinct !DILexicalBlock(scope: !9403, file: !9371, line: 88, column: 5)
!9403 = distinct !DILexicalBlock(scope: !9370, file: !9371, line: 87, column: 7)
!9404 = !DILocation(line: 89, column: 19, scope: !9402)
!9405 = !DILocation(line: 89, column: 23, scope: !9402)
!9406 = !DILocalVariable(name: "ch", scope: !9402, file: !9371, line: 90, type: !3967)
!9407 = !DILocation(line: 90, column: 21, scope: !9402)
!9408 = !DILocation(line: 90, column: 27, scope: !9402)
!9409 = !DILocation(line: 90, column: 26, scope: !9402)
!9410 = !DILocation(line: 91, column: 7, scope: !9402)
!9411 = !DILocation(line: 91, column: 14, scope: !9402)
!9412 = !DILocation(line: 92, column: 8, scope: !9402)
!9413 = !DILocation(line: 92, column: 7, scope: !9402)
!9414 = !DILocation(line: 92, column: 5, scope: !9402)
!9415 = distinct !{!9415, !9410, !9416}
!9416 = !DILocation(line: 92, column: 10, scope: !9402)
!9417 = !DILocation(line: 93, column: 11, scope: !9418)
!9418 = distinct !DILexicalBlock(scope: !9402, file: !9371, line: 93, column: 11)
!9419 = !DILocation(line: 93, column: 14, scope: !9418)
!9420 = !DILocation(line: 93, column: 11, scope: !9402)
!9421 = !DILocation(line: 94, column: 2, scope: !9418)
!9422 = !DILocation(line: 97, column: 3, scope: !9370)
!9423 = !DILocation(line: 97, column: 9, scope: !9370)
!9424 = !DILocation(line: 98, column: 19, scope: !9370)
!9425 = !DILocation(line: 98, column: 22, scope: !9370)
!9426 = !DILocation(line: 98, column: 25, scope: !9370)
!9427 = !DILocation(line: 98, column: 9, scope: !9370)
!9428 = !DILocation(line: 98, column: 7, scope: !9370)
!9429 = !DILocation(line: 100, column: 8, scope: !9430)
!9430 = distinct !DILexicalBlock(scope: !9370, file: !9371, line: 100, column: 7)
!9431 = !DILocation(line: 100, column: 7, scope: !9430)
!9432 = !DILocation(line: 100, column: 13, scope: !9430)
!9433 = !DILocation(line: 100, column: 10, scope: !9430)
!9434 = !DILocation(line: 100, column: 7, scope: !9370)
!9435 = !DILocation(line: 104, column: 11, scope: !9436)
!9436 = distinct !DILexicalBlock(scope: !9437, file: !9371, line: 104, column: 11)
!9437 = distinct !DILexicalBlock(scope: !9430, file: !9371, line: 101, column: 5)
!9438 = !DILocation(line: 104, column: 26, scope: !9436)
!9439 = !DILocation(line: 104, column: 31, scope: !9436)
!9440 = !DILocation(line: 104, column: 30, scope: !9436)
!9441 = !DILocation(line: 104, column: 29, scope: !9436)
!9442 = !DILocation(line: 104, column: 33, scope: !9436)
!9443 = !DILocation(line: 104, column: 44, scope: !9436)
!9444 = !DILocation(line: 104, column: 62, scope: !9436)
!9445 = !DILocation(line: 104, column: 61, scope: !9436)
!9446 = !DILocation(line: 104, column: 60, scope: !9436)
!9447 = !DILocation(line: 104, column: 36, scope: !9436)
!9448 = !DILocation(line: 104, column: 11, scope: !9437)
!9449 = !DILocation(line: 105, column: 6, scope: !9436)
!9450 = !DILocation(line: 105, column: 2, scope: !9436)
!9451 = !DILocation(line: 107, column: 2, scope: !9436)
!9452 = !DILocation(line: 108, column: 5, scope: !9437)
!9453 = !DILocation(line: 109, column: 12, scope: !9454)
!9454 = distinct !DILexicalBlock(scope: !9430, file: !9371, line: 109, column: 12)
!9455 = !DILocation(line: 109, column: 18, scope: !9454)
!9456 = !DILocation(line: 109, column: 12, scope: !9430)
!9457 = !DILocation(line: 111, column: 11, scope: !9458)
!9458 = distinct !DILexicalBlock(scope: !9459, file: !9371, line: 111, column: 11)
!9459 = distinct !DILexicalBlock(scope: !9454, file: !9371, line: 110, column: 5)
!9460 = !DILocation(line: 111, column: 17, scope: !9458)
!9461 = !DILocation(line: 111, column: 11, scope: !9459)
!9462 = !DILocation(line: 112, column: 2, scope: !9458)
!9463 = !DILocation(line: 113, column: 11, scope: !9459)
!9464 = !DILocation(line: 114, column: 5, scope: !9459)
!9465 = !DILocation(line: 119, column: 8, scope: !9466)
!9466 = distinct !DILexicalBlock(scope: !9370, file: !9371, line: 119, column: 7)
!9467 = !DILocation(line: 119, column: 7, scope: !9370)
!9468 = !DILocation(line: 121, column: 14, scope: !9469)
!9469 = distinct !DILexicalBlock(scope: !9466, file: !9371, line: 120, column: 5)
!9470 = !DILocation(line: 121, column: 8, scope: !9469)
!9471 = !DILocation(line: 121, column: 12, scope: !9469)
!9472 = !DILocation(line: 122, column: 14, scope: !9469)
!9473 = !DILocation(line: 122, column: 7, scope: !9469)
!9474 = !DILocation(line: 125, column: 9, scope: !9475)
!9475 = distinct !DILexicalBlock(scope: !9370, file: !9371, line: 125, column: 7)
!9476 = !DILocation(line: 125, column: 8, scope: !9475)
!9477 = !DILocation(line: 125, column: 7, scope: !9475)
!9478 = !DILocation(line: 125, column: 11, scope: !9475)
!9479 = !DILocation(line: 125, column: 7, scope: !9370)
!9480 = !DILocalVariable(name: "base", scope: !9481, file: !9371, line: 127, type: !23)
!9481 = distinct !DILexicalBlock(scope: !9475, file: !9371, line: 126, column: 5)
!9482 = !DILocation(line: 127, column: 11, scope: !9481)
!9483 = !DILocalVariable(name: "suffixes", scope: !9481, file: !9371, line: 128, type: !23)
!9484 = !DILocation(line: 128, column: 11, scope: !9481)
!9485 = !DILocalVariable(name: "overflow", scope: !9481, file: !9371, line: 129, type: !9374)
!9486 = !DILocation(line: 129, column: 20, scope: !9481)
!9487 = !DILocation(line: 131, column: 20, scope: !9488)
!9488 = distinct !DILexicalBlock(scope: !9481, file: !9371, line: 131, column: 11)
!9489 = !DILocation(line: 131, column: 38, scope: !9488)
!9490 = !DILocation(line: 131, column: 37, scope: !9488)
!9491 = !DILocation(line: 131, column: 36, scope: !9488)
!9492 = !DILocation(line: 131, column: 12, scope: !9488)
!9493 = !DILocation(line: 131, column: 11, scope: !9481)
!9494 = !DILocation(line: 133, column: 11, scope: !9495)
!9495 = distinct !DILexicalBlock(scope: !9488, file: !9371, line: 132, column: 2)
!9496 = !DILocation(line: 133, column: 5, scope: !9495)
!9497 = !DILocation(line: 133, column: 9, scope: !9495)
!9498 = !DILocation(line: 134, column: 11, scope: !9495)
!9499 = !DILocation(line: 134, column: 15, scope: !9495)
!9500 = !DILocation(line: 134, column: 4, scope: !9495)
!9501 = !DILocation(line: 137, column: 19, scope: !9502)
!9502 = distinct !DILexicalBlock(scope: !9481, file: !9371, line: 137, column: 11)
!9503 = !DILocation(line: 137, column: 11, scope: !9502)
!9504 = !DILocation(line: 137, column: 11, scope: !9481)
!9505 = !DILocation(line: 146, column: 12, scope: !9506)
!9506 = distinct !DILexicalBlock(scope: !9502, file: !9371, line: 138, column: 2)
!9507 = !DILocation(line: 146, column: 4, scope: !9506)
!9508 = !DILocation(line: 149, column: 12, scope: !9509)
!9509 = distinct !DILexicalBlock(scope: !9510, file: !9371, line: 149, column: 12)
!9510 = distinct !DILexicalBlock(scope: !9506, file: !9371, line: 147, column: 6)
!9511 = !DILocation(line: 149, column: 20, scope: !9509)
!9512 = !DILocation(line: 149, column: 12, scope: !9510)
!9513 = !DILocation(line: 150, column: 12, scope: !9509)
!9514 = !DILocation(line: 150, column: 3, scope: !9509)
!9515 = !DILocation(line: 151, column: 8, scope: !9510)
!9516 = !DILocation(line: 155, column: 13, scope: !9510)
!9517 = !DILocation(line: 156, column: 16, scope: !9510)
!9518 = !DILocation(line: 157, column: 8, scope: !9510)
!9519 = !DILocation(line: 159, column: 2, scope: !9506)
!9520 = !DILocation(line: 161, column: 17, scope: !9481)
!9521 = !DILocation(line: 161, column: 16, scope: !9481)
!9522 = !DILocation(line: 161, column: 15, scope: !9481)
!9523 = !DILocation(line: 161, column: 7, scope: !9481)
!9524 = !DILocation(line: 164, column: 15, scope: !9525)
!9525 = distinct !DILexicalBlock(scope: !9481, file: !9371, line: 162, column: 2)
!9526 = !DILocation(line: 164, column: 13, scope: !9525)
!9527 = !DILocation(line: 165, column: 4, scope: !9525)
!9528 = !DILocation(line: 168, column: 15, scope: !9525)
!9529 = !DILocation(line: 168, column: 13, scope: !9525)
!9530 = !DILocation(line: 169, column: 4, scope: !9525)
!9531 = !DILocation(line: 172, column: 13, scope: !9525)
!9532 = !DILocation(line: 173, column: 4, scope: !9525)
!9533 = !DILocation(line: 176, column: 41, scope: !9525)
!9534 = !DILocation(line: 176, column: 15, scope: !9525)
!9535 = !DILocation(line: 176, column: 13, scope: !9525)
!9536 = !DILocation(line: 177, column: 4, scope: !9525)
!9537 = !DILocation(line: 181, column: 41, scope: !9525)
!9538 = !DILocation(line: 181, column: 15, scope: !9525)
!9539 = !DILocation(line: 181, column: 13, scope: !9525)
!9540 = !DILocation(line: 182, column: 4, scope: !9525)
!9541 = !DILocation(line: 186, column: 41, scope: !9525)
!9542 = !DILocation(line: 186, column: 15, scope: !9525)
!9543 = !DILocation(line: 186, column: 13, scope: !9525)
!9544 = !DILocation(line: 187, column: 4, scope: !9525)
!9545 = !DILocation(line: 191, column: 41, scope: !9525)
!9546 = !DILocation(line: 191, column: 15, scope: !9525)
!9547 = !DILocation(line: 191, column: 13, scope: !9525)
!9548 = !DILocation(line: 192, column: 4, scope: !9525)
!9549 = !DILocation(line: 195, column: 41, scope: !9525)
!9550 = !DILocation(line: 195, column: 15, scope: !9525)
!9551 = !DILocation(line: 195, column: 13, scope: !9525)
!9552 = !DILocation(line: 196, column: 4, scope: !9525)
!9553 = !DILocation(line: 200, column: 41, scope: !9525)
!9554 = !DILocation(line: 200, column: 15, scope: !9525)
!9555 = !DILocation(line: 200, column: 13, scope: !9525)
!9556 = !DILocation(line: 201, column: 4, scope: !9525)
!9557 = !DILocation(line: 204, column: 15, scope: !9525)
!9558 = !DILocation(line: 204, column: 13, scope: !9525)
!9559 = !DILocation(line: 205, column: 4, scope: !9525)
!9560 = !DILocation(line: 208, column: 41, scope: !9525)
!9561 = !DILocation(line: 208, column: 15, scope: !9525)
!9562 = !DILocation(line: 208, column: 13, scope: !9525)
!9563 = !DILocation(line: 209, column: 4, scope: !9525)
!9564 = !DILocation(line: 212, column: 41, scope: !9525)
!9565 = !DILocation(line: 212, column: 15, scope: !9525)
!9566 = !DILocation(line: 212, column: 13, scope: !9525)
!9567 = !DILocation(line: 213, column: 4, scope: !9525)
!9568 = !DILocation(line: 216, column: 11, scope: !9525)
!9569 = !DILocation(line: 216, column: 5, scope: !9525)
!9570 = !DILocation(line: 216, column: 9, scope: !9525)
!9571 = !DILocation(line: 217, column: 11, scope: !9525)
!9572 = !DILocation(line: 217, column: 15, scope: !9525)
!9573 = !DILocation(line: 217, column: 4, scope: !9525)
!9574 = !DILocation(line: 220, column: 14, scope: !9481)
!9575 = !DILocation(line: 220, column: 11, scope: !9481)
!9576 = !DILocation(line: 221, column: 13, scope: !9481)
!9577 = !DILocation(line: 221, column: 8, scope: !9481)
!9578 = !DILocation(line: 221, column: 10, scope: !9481)
!9579 = !DILocation(line: 222, column: 13, scope: !9580)
!9580 = distinct !DILexicalBlock(scope: !9481, file: !9371, line: 222, column: 11)
!9581 = !DILocation(line: 222, column: 12, scope: !9580)
!9582 = !DILocation(line: 222, column: 11, scope: !9580)
!9583 = !DILocation(line: 222, column: 11, scope: !9481)
!9584 = !DILocation(line: 223, column: 6, scope: !9580)
!9585 = !DILocation(line: 223, column: 2, scope: !9580)
!9586 = !DILocation(line: 224, column: 5, scope: !9481)
!9587 = !DILocation(line: 226, column: 10, scope: !9370)
!9588 = !DILocation(line: 226, column: 4, scope: !9370)
!9589 = !DILocation(line: 226, column: 8, scope: !9370)
!9590 = !DILocation(line: 227, column: 10, scope: !9370)
!9591 = !DILocation(line: 227, column: 3, scope: !9370)
!9592 = !DILocation(line: 228, column: 1, scope: !9370)
!9593 = distinct !DISubprogram(name: "bkm_scale", scope: !9371, file: !9371, line: 47, type: !9594, isLocal: true, isDefinition: true, scopeLine: 48, flags: DIFlagPrototyped, isOptimized: false, unit: !442, variables: !25)
!9594 = !DISubroutineType(types: !9595)
!9595 = !{!9374, !9375, !23}
!9596 = !DILocalVariable(name: "x", arg: 1, scope: !9593, file: !9371, line: 47, type: !9375)
!9597 = !DILocation(line: 47, column: 24, scope: !9593)
!9598 = !DILocalVariable(name: "scale_factor", arg: 2, scope: !9593, file: !9371, line: 47, type: !23)
!9599 = !DILocation(line: 47, column: 31, scope: !9593)
!9600 = !DILocation(line: 54, column: 26, scope: !9601)
!9601 = distinct !DILexicalBlock(scope: !9593, file: !9371, line: 54, column: 7)
!9602 = !DILocation(line: 54, column: 24, scope: !9601)
!9603 = !DILocation(line: 54, column: 42, scope: !9601)
!9604 = !DILocation(line: 54, column: 41, scope: !9601)
!9605 = !DILocation(line: 54, column: 39, scope: !9601)
!9606 = !DILocation(line: 54, column: 7, scope: !9593)
!9607 = !DILocation(line: 56, column: 8, scope: !9608)
!9608 = distinct !DILexicalBlock(scope: !9601, file: !9371, line: 55, column: 5)
!9609 = !DILocation(line: 56, column: 10, scope: !9608)
!9610 = !DILocation(line: 57, column: 7, scope: !9608)
!9611 = !DILocation(line: 59, column: 9, scope: !9593)
!9612 = !DILocation(line: 59, column: 4, scope: !9593)
!9613 = !DILocation(line: 59, column: 6, scope: !9593)
!9614 = !DILocation(line: 60, column: 3, scope: !9593)
!9615 = !DILocation(line: 61, column: 1, scope: !9593)
!9616 = distinct !DISubprogram(name: "bkm_scale_by_power", scope: !9371, file: !9371, line: 64, type: !9617, isLocal: true, isDefinition: true, scopeLine: 65, flags: DIFlagPrototyped, isOptimized: false, unit: !442, variables: !25)
!9617 = !DISubroutineType(types: !9618)
!9618 = !{!9374, !9375, !23, !23}
!9619 = !DILocalVariable(name: "x", arg: 1, scope: !9616, file: !9371, line: 64, type: !9375)
!9620 = !DILocation(line: 64, column: 33, scope: !9616)
!9621 = !DILocalVariable(name: "base", arg: 2, scope: !9616, file: !9371, line: 64, type: !23)
!9622 = !DILocation(line: 64, column: 40, scope: !9616)
!9623 = !DILocalVariable(name: "power", arg: 3, scope: !9616, file: !9371, line: 64, type: !23)
!9624 = !DILocation(line: 64, column: 50, scope: !9616)
!9625 = !DILocalVariable(name: "err", scope: !9616, file: !9371, line: 66, type: !9374)
!9626 = !DILocation(line: 66, column: 16, scope: !9616)
!9627 = !DILocation(line: 67, column: 3, scope: !9616)
!9628 = !DILocation(line: 67, column: 15, scope: !9616)
!9629 = !DILocation(line: 68, column: 23, scope: !9616)
!9630 = !DILocation(line: 68, column: 26, scope: !9616)
!9631 = !DILocation(line: 68, column: 12, scope: !9616)
!9632 = !DILocation(line: 68, column: 9, scope: !9616)
!9633 = distinct !{!9633, !9627, !9634}
!9634 = !DILocation(line: 68, column: 30, scope: !9616)
!9635 = !DILocation(line: 69, column: 10, scope: !9616)
!9636 = !DILocation(line: 69, column: 3, scope: !9616)
!9637 = distinct !DISubprogram(name: "xfts_open", scope: !447, file: !447, line: 33, type: !9638, isLocal: false, isDefinition: true, scopeLine: 35, flags: DIFlagPrototyped, isOptimized: false, unit: !446, variables: !25)
!9638 = !DISubroutineType(types: !9639)
!9639 = !{!9640, !2175, !23, !9723}
!9640 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9641, size: 64)
!9641 = !DIDerivedType(tag: DW_TAG_typedef, name: "FTS", file: !257, line: 183, baseType: !9642)
!9642 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !257, line: 68, size: 1024, elements: !9643)
!9643 = !{!9644, !9689, !9690, !9692, !9693, !9694, !9695, !9696, !9697, !9698, !9705, !9706, !9707, !9714}
!9644 = !DIDerivedType(tag: DW_TAG_member, name: "fts_cur", scope: !9642, file: !257, line: 69, baseType: !9645, size: 64)
!9645 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9646, size: 64)
!9646 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ftsent", file: !257, line: 185, size: 2112, elements: !9647)
!9647 = !{!9648, !9649, !9650, !9651, !9652, !9653, !9654, !9655, !9656, !9657, !9658, !9659, !9660, !9661, !9662, !9663, !9664, !9665, !9688}
!9648 = !DIDerivedType(tag: DW_TAG_member, name: "fts_cycle", scope: !9646, file: !257, line: 186, baseType: !9645, size: 64)
!9649 = !DIDerivedType(tag: DW_TAG_member, name: "fts_parent", scope: !9646, file: !257, line: 187, baseType: !9645, size: 64, offset: 64)
!9650 = !DIDerivedType(tag: DW_TAG_member, name: "fts_link", scope: !9646, file: !257, line: 188, baseType: !9645, size: 64, offset: 128)
!9651 = !DIDerivedType(tag: DW_TAG_member, name: "fts_number", scope: !9646, file: !257, line: 189, baseType: !268, size: 64, offset: 192)
!9652 = !DIDerivedType(tag: DW_TAG_member, name: "fts_pointer", scope: !9646, file: !257, line: 190, baseType: !16, size: 64, offset: 256)
!9653 = !DIDerivedType(tag: DW_TAG_member, name: "fts_accpath", scope: !9646, file: !257, line: 191, baseType: !15, size: 64, offset: 320)
!9654 = !DIDerivedType(tag: DW_TAG_member, name: "fts_path", scope: !9646, file: !257, line: 192, baseType: !15, size: 64, offset: 384)
!9655 = !DIDerivedType(tag: DW_TAG_member, name: "fts_errno", scope: !9646, file: !257, line: 193, baseType: !23, size: 32, offset: 448)
!9656 = !DIDerivedType(tag: DW_TAG_member, name: "fts_symfd", scope: !9646, file: !257, line: 194, baseType: !23, size: 32, offset: 480)
!9657 = !DIDerivedType(tag: DW_TAG_member, name: "fts_pathlen", scope: !9646, file: !257, line: 195, baseType: !91, size: 64, offset: 512)
!9658 = !DIDerivedType(tag: DW_TAG_member, name: "fts_fts", scope: !9646, file: !257, line: 197, baseType: !9640, size: 64, offset: 576)
!9659 = !DIDerivedType(tag: DW_TAG_member, name: "fts_level", scope: !9646, file: !257, line: 201, baseType: !277, size: 64, offset: 640)
!9660 = !DIDerivedType(tag: DW_TAG_member, name: "fts_namelen", scope: !9646, file: !257, line: 203, baseType: !91, size: 64, offset: 704)
!9661 = !DIDerivedType(tag: DW_TAG_member, name: "fts_n_dirs_remaining", scope: !9646, file: !257, line: 204, baseType: !280, size: 64, offset: 768)
!9662 = !DIDerivedType(tag: DW_TAG_member, name: "fts_info", scope: !9646, file: !257, line: 220, baseType: !143, size: 16, offset: 832)
!9663 = !DIDerivedType(tag: DW_TAG_member, name: "fts_flags", scope: !9646, file: !257, line: 224, baseType: !143, size: 16, offset: 848)
!9664 = !DIDerivedType(tag: DW_TAG_member, name: "fts_instr", scope: !9646, file: !257, line: 230, baseType: !143, size: 16, offset: 864)
!9665 = !DIDerivedType(tag: DW_TAG_member, name: "fts_statp", scope: !9646, file: !257, line: 232, baseType: !9666, size: 1152, offset: 896)
!9666 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9667, size: 1152, elements: !321)
!9667 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !288, line: 46, size: 1152, elements: !9668)
!9668 = !{!9669, !9670, !9671, !9672, !9673, !9674, !9675, !9676, !9677, !9678, !9679, !9680, !9685, !9686, !9687}
!9669 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !9667, file: !288, line: 48, baseType: !291, size: 64)
!9670 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !9667, file: !288, line: 53, baseType: !293, size: 64, offset: 64)
!9671 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !9667, file: !288, line: 61, baseType: !281, size: 64, offset: 128)
!9672 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !9667, file: !288, line: 62, baseType: !296, size: 32, offset: 192)
!9673 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !9667, file: !288, line: 64, baseType: !191, size: 32, offset: 224)
!9674 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !9667, file: !288, line: 65, baseType: !195, size: 32, offset: 256)
!9675 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !9667, file: !288, line: 67, baseType: !23, size: 32, offset: 288)
!9676 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !9667, file: !288, line: 69, baseType: !291, size: 64, offset: 320)
!9677 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !9667, file: !288, line: 74, baseType: !302, size: 64, offset: 384)
!9678 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !9667, file: !288, line: 78, baseType: !304, size: 64, offset: 448)
!9679 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !9667, file: !288, line: 80, baseType: !306, size: 64, offset: 512)
!9680 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !9667, file: !288, line: 91, baseType: !9681, size: 128, offset: 576)
!9681 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !309, line: 8, size: 128, elements: !9682)
!9682 = !{!9683, !9684}
!9683 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !9681, file: !309, line: 10, baseType: !312, size: 64)
!9684 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !9681, file: !309, line: 11, baseType: !314, size: 64, offset: 64)
!9685 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !9667, file: !288, line: 92, baseType: !9681, size: 128, offset: 704)
!9686 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !9667, file: !288, line: 93, baseType: !9681, size: 128, offset: 832)
!9687 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !9667, file: !288, line: 106, baseType: !318, size: 192, offset: 960)
!9688 = !DIDerivedType(tag: DW_TAG_member, name: "fts_name", scope: !9646, file: !257, line: 233, baseType: !324, size: 8, offset: 2048)
!9689 = !DIDerivedType(tag: DW_TAG_member, name: "fts_child", scope: !9642, file: !257, line: 70, baseType: !9645, size: 64, offset: 64)
!9690 = !DIDerivedType(tag: DW_TAG_member, name: "fts_array", scope: !9642, file: !257, line: 71, baseType: !9691, size: 64, offset: 128)
!9691 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9645, size: 64)
!9692 = !DIDerivedType(tag: DW_TAG_member, name: "fts_dev", scope: !9642, file: !257, line: 72, baseType: !329, size: 64, offset: 192)
!9693 = !DIDerivedType(tag: DW_TAG_member, name: "fts_path", scope: !9642, file: !257, line: 73, baseType: !15, size: 64, offset: 256)
!9694 = !DIDerivedType(tag: DW_TAG_member, name: "fts_rfd", scope: !9642, file: !257, line: 74, baseType: !23, size: 32, offset: 320)
!9695 = !DIDerivedType(tag: DW_TAG_member, name: "fts_cwd_fd", scope: !9642, file: !257, line: 75, baseType: !23, size: 32, offset: 352)
!9696 = !DIDerivedType(tag: DW_TAG_member, name: "fts_pathlen", scope: !9642, file: !257, line: 77, baseType: !91, size: 64, offset: 384)
!9697 = !DIDerivedType(tag: DW_TAG_member, name: "fts_nitems", scope: !9642, file: !257, line: 78, baseType: !91, size: 64, offset: 448)
!9698 = !DIDerivedType(tag: DW_TAG_member, name: "fts_compar", scope: !9642, file: !257, line: 79, baseType: !9699, size: 64, offset: 512)
!9699 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9700, size: 64)
!9700 = !DISubroutineType(types: !9701)
!9701 = !{!23, !9702, !9702}
!9702 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9703, size: 64)
!9703 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9704, size: 64)
!9704 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9646)
!9705 = !DIDerivedType(tag: DW_TAG_member, name: "fts_options", scope: !9642, file: !257, line: 144, baseType: !23, size: 32, offset: 576)
!9706 = !DIDerivedType(tag: DW_TAG_member, name: "fts_leaf_optimization_works_ht", scope: !9642, file: !257, line: 154, baseType: !344, size: 64, offset: 640)
!9707 = !DIDerivedType(tag: DW_TAG_member, name: "fts_cycle", scope: !9642, file: !257, line: 176, baseType: !9708, size: 64, offset: 704)
!9708 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9642, file: !257, line: 156, size: 64, elements: !9709)
!9709 = !{!9710, !9711}
!9710 = !DIDerivedType(tag: DW_TAG_member, name: "ht", scope: !9708, file: !257, line: 169, baseType: !344, size: 64)
!9711 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !9708, file: !257, line: 175, baseType: !9712, size: 64)
!9712 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9713, size: 64)
!9713 = !DICompositeType(tag: DW_TAG_structure_type, name: "cycle_check_state", file: !257, line: 175, flags: DIFlagFwdDecl)
!9714 = !DIDerivedType(tag: DW_TAG_member, name: "fts_fd_ring", scope: !9642, file: !257, line: 182, baseType: !9715, size: 256, offset: 768)
!9715 = !DIDerivedType(tag: DW_TAG_typedef, name: "I_ring", file: !369, line: 39, baseType: !9716)
!9716 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "I_ring", file: !369, line: 31, size: 256, elements: !9717)
!9717 = !{!9718, !9719, !9720, !9721, !9722}
!9718 = !DIDerivedType(tag: DW_TAG_member, name: "ir_data", scope: !9716, file: !369, line: 33, baseType: !373, size: 128)
!9719 = !DIDerivedType(tag: DW_TAG_member, name: "ir_default_val", scope: !9716, file: !369, line: 34, baseType: !23, size: 32, offset: 128)
!9720 = !DIDerivedType(tag: DW_TAG_member, name: "ir_front", scope: !9716, file: !369, line: 35, baseType: !159, size: 32, offset: 160)
!9721 = !DIDerivedType(tag: DW_TAG_member, name: "ir_back", scope: !9716, file: !369, line: 36, baseType: !159, size: 32, offset: 192)
!9722 = !DIDerivedType(tag: DW_TAG_member, name: "ir_empty", scope: !9716, file: !369, line: 37, baseType: !79, size: 8, offset: 224)
!9723 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9724, size: 64)
!9724 = !DISubroutineType(types: !9725)
!9725 = !{!23, !9726, !9726}
!9726 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9727, size: 64)
!9727 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9728, size: 64)
!9728 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9729)
!9729 = !DIDerivedType(tag: DW_TAG_typedef, name: "FTSENT", file: !257, line: 234, baseType: !9646)
!9730 = !DILocalVariable(name: "argv", arg: 1, scope: !9637, file: !447, line: 33, type: !2175)
!9731 = !DILocation(line: 33, column: 26, scope: !9637)
!9732 = !DILocalVariable(name: "options", arg: 2, scope: !9637, file: !447, line: 33, type: !23)
!9733 = !DILocation(line: 33, column: 36, scope: !9637)
!9734 = !DILocalVariable(name: "compar", arg: 3, scope: !9637, file: !447, line: 34, type: !9723)
!9735 = !DILocation(line: 34, column: 18, scope: !9637)
!9736 = !DILocalVariable(name: "fts", scope: !9637, file: !447, line: 36, type: !9640)
!9737 = !DILocation(line: 36, column: 8, scope: !9637)
!9738 = !DILocation(line: 36, column: 24, scope: !9637)
!9739 = !DILocation(line: 36, column: 30, scope: !9637)
!9740 = !DILocation(line: 36, column: 38, scope: !9637)
!9741 = !DILocation(line: 36, column: 51, scope: !9637)
!9742 = !DILocation(line: 36, column: 14, scope: !9637)
!9743 = !DILocation(line: 37, column: 7, scope: !9744)
!9744 = distinct !DILexicalBlock(scope: !9637, file: !447, line: 37, column: 7)
!9745 = !DILocation(line: 37, column: 11, scope: !9744)
!9746 = !DILocation(line: 37, column: 7, scope: !9637)
!9747 = !DILocation(line: 41, column: 7, scope: !9748)
!9748 = distinct !DILexicalBlock(scope: !9749, file: !447, line: 41, column: 7)
!9749 = distinct !DILexicalBlock(scope: !9750, file: !447, line: 41, column: 7)
!9750 = distinct !DILexicalBlock(scope: !9744, file: !447, line: 38, column: 5)
!9751 = !DILocation(line: 41, column: 7, scope: !9749)
!9752 = !DILocation(line: 42, column: 7, scope: !9750)
!9753 = !DILocation(line: 45, column: 10, scope: !9637)
!9754 = !DILocation(line: 45, column: 3, scope: !9637)
!9755 = distinct !DISubprogram(name: "cycle_warning_required", scope: !447, file: !447, line: 56, type: !9756, isLocal: false, isDefinition: true, scopeLine: 57, flags: DIFlagPrototyped, isOptimized: false, unit: !446, variables: !25)
!9756 = !DISubroutineType(types: !9757)
!9757 = !{!79, !9758, !9727}
!9758 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9759, size: 64)
!9759 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9641)
!9760 = !DILocalVariable(name: "fts", arg: 1, scope: !9755, file: !447, line: 56, type: !9758)
!9761 = !DILocation(line: 56, column: 36, scope: !9755)
!9762 = !DILocalVariable(name: "ent", arg: 2, scope: !9755, file: !447, line: 56, type: !9727)
!9763 = !DILocation(line: 56, column: 55, scope: !9755)
!9764 = !DILocation(line: 62, column: 12, scope: !9755)
!9765 = !DILocation(line: 62, column: 38, scope: !9755)
!9766 = !DILocation(line: 62, column: 42, scope: !9755)
!9767 = !DILocation(line: 63, column: 11, scope: !9755)
!9768 = !DILocation(line: 63, column: 15, scope: !9755)
!9769 = !DILocation(line: 63, column: 41, scope: !9755)
!9770 = !DILocation(line: 63, column: 44, scope: !9755)
!9771 = !DILocation(line: 64, column: 15, scope: !9755)
!9772 = !DILocation(line: 64, column: 18, scope: !9755)
!9773 = !DILocation(line: 64, column: 23, scope: !9755)
!9774 = !DILocation(line: 64, column: 33, scope: !9755)
!9775 = !DILocation(line: 62, column: 3, scope: !9755)
!9776 = distinct !DISubprogram(name: "xalloc_die", scope: !450, file: !450, line: 32, type: !502, isLocal: false, isDefinition: true, scopeLine: 33, flags: DIFlagPrototyped | DIFlagNoReturn, isOptimized: false, unit: !449, variables: !25)
!9777 = !DILocation(line: 34, column: 10, scope: !9776)
!9778 = !DILocation(line: 34, column: 3, scope: !9776)
!9779 = !DILocation(line: 40, column: 3, scope: !9776)
!9780 = !DILocation(line: 41, column: 1, scope: !9776)
!9781 = distinct !DISubprogram(name: "set_cloexec_flag", scope: !452, file: !452, line: 48, type: !9782, isLocal: false, isDefinition: true, scopeLine: 49, flags: DIFlagPrototyped, isOptimized: false, unit: !451, variables: !25)
!9782 = !DISubroutineType(types: !9783)
!9783 = !{!23, !23, !79}
!9784 = !DILocalVariable(name: "desc", arg: 1, scope: !9781, file: !452, line: 48, type: !23)
!9785 = !DILocation(line: 48, column: 23, scope: !9781)
!9786 = !DILocalVariable(name: "value", arg: 2, scope: !9781, file: !452, line: 48, type: !79)
!9787 = !DILocation(line: 48, column: 34, scope: !9781)
!9788 = !DILocalVariable(name: "flags", scope: !9781, file: !452, line: 52, type: !23)
!9789 = !DILocation(line: 52, column: 7, scope: !9781)
!9790 = !DILocation(line: 52, column: 22, scope: !9781)
!9791 = !DILocation(line: 52, column: 15, scope: !9781)
!9792 = !DILocation(line: 54, column: 12, scope: !9793)
!9793 = distinct !DILexicalBlock(scope: !9781, file: !452, line: 54, column: 7)
!9794 = !DILocation(line: 54, column: 9, scope: !9793)
!9795 = !DILocation(line: 54, column: 7, scope: !9781)
!9796 = !DILocalVariable(name: "newflags", scope: !9797, file: !452, line: 56, type: !23)
!9797 = distinct !DILexicalBlock(scope: !9793, file: !452, line: 55, column: 5)
!9798 = !DILocation(line: 56, column: 11, scope: !9797)
!9799 = !DILocation(line: 56, column: 23, scope: !9797)
!9800 = !DILocation(line: 56, column: 31, scope: !9797)
!9801 = !DILocation(line: 56, column: 37, scope: !9797)
!9802 = !DILocation(line: 56, column: 52, scope: !9797)
!9803 = !DILocation(line: 56, column: 58, scope: !9797)
!9804 = !DILocation(line: 58, column: 11, scope: !9805)
!9805 = distinct !DILexicalBlock(scope: !9797, file: !452, line: 58, column: 11)
!9806 = !DILocation(line: 58, column: 20, scope: !9805)
!9807 = !DILocation(line: 58, column: 17, scope: !9805)
!9808 = !DILocation(line: 59, column: 11, scope: !9805)
!9809 = !DILocation(line: 59, column: 21, scope: !9805)
!9810 = !DILocation(line: 59, column: 36, scope: !9805)
!9811 = !DILocation(line: 59, column: 14, scope: !9805)
!9812 = !DILocation(line: 59, column: 46, scope: !9805)
!9813 = !DILocation(line: 58, column: 11, scope: !9797)
!9814 = !DILocation(line: 60, column: 9, scope: !9805)
!9815 = !DILocation(line: 61, column: 5, scope: !9797)
!9816 = !DILocation(line: 63, column: 3, scope: !9781)
!9817 = !DILocation(line: 81, column: 1, scope: !9781)
!9818 = distinct !DISubprogram(name: "dup_cloexec", scope: !452, file: !452, line: 89, type: !9819, isLocal: false, isDefinition: true, scopeLine: 90, flags: DIFlagPrototyped, isOptimized: false, unit: !451, variables: !25)
!9819 = !DISubroutineType(types: !9820)
!9820 = !{!23, !23}
!9821 = !DILocalVariable(name: "fd", arg: 1, scope: !9818, file: !452, line: 89, type: !23)
!9822 = !DILocation(line: 89, column: 18, scope: !9818)
!9823 = !DILocalVariable(name: "nfd", scope: !9818, file: !452, line: 91, type: !23)
!9824 = !DILocation(line: 91, column: 7, scope: !9818)
!9825 = !DILocation(line: 144, column: 16, scope: !9818)
!9826 = !DILocation(line: 144, column: 9, scope: !9818)
!9827 = !DILocation(line: 144, column: 7, scope: !9818)
!9828 = !DILocation(line: 161, column: 10, scope: !9818)
!9829 = !DILocation(line: 161, column: 3, scope: !9818)
!9830 = distinct !DISubprogram(name: "close_stream", scope: !454, file: !454, line: 57, type: !9831, isLocal: false, isDefinition: true, scopeLine: 58, flags: DIFlagPrototyped, isOptimized: false, unit: !453, variables: !25)
!9831 = !DISubroutineType(types: !9832)
!9832 = !{!23, !9833}
!9833 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9834, size: 64)
!9834 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !1769, line: 7, baseType: !9835)
!9835 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !1771, line: 245, size: 1728, elements: !9836)
!9836 = !{!9837, !9838, !9839, !9840, !9841, !9842, !9843, !9844, !9845, !9846, !9847, !9848, !9849, !9857, !9858, !9859, !9860, !9861, !9862, !9863, !9864, !9865, !9866, !9867, !9868, !9869, !9870, !9871, !9872}
!9837 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !9835, file: !1771, line: 246, baseType: !23, size: 32)
!9838 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !9835, file: !1771, line: 251, baseType: !15, size: 64, offset: 64)
!9839 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !9835, file: !1771, line: 252, baseType: !15, size: 64, offset: 128)
!9840 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !9835, file: !1771, line: 253, baseType: !15, size: 64, offset: 192)
!9841 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !9835, file: !1771, line: 254, baseType: !15, size: 64, offset: 256)
!9842 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !9835, file: !1771, line: 255, baseType: !15, size: 64, offset: 320)
!9843 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !9835, file: !1771, line: 256, baseType: !15, size: 64, offset: 384)
!9844 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !9835, file: !1771, line: 257, baseType: !15, size: 64, offset: 448)
!9845 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !9835, file: !1771, line: 258, baseType: !15, size: 64, offset: 512)
!9846 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !9835, file: !1771, line: 260, baseType: !15, size: 64, offset: 576)
!9847 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !9835, file: !1771, line: 261, baseType: !15, size: 64, offset: 640)
!9848 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !9835, file: !1771, line: 262, baseType: !15, size: 64, offset: 704)
!9849 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !9835, file: !1771, line: 264, baseType: !9850, size: 64, offset: 768)
!9850 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9851, size: 64)
!9851 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !1771, line: 160, size: 192, elements: !9852)
!9852 = !{!9853, !9854, !9856}
!9853 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !9851, file: !1771, line: 161, baseType: !9850, size: 64)
!9854 = !DIDerivedType(tag: DW_TAG_member, name: "_sbuf", scope: !9851, file: !1771, line: 162, baseType: !9855, size: 64, offset: 64)
!9855 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9835, size: 64)
!9856 = !DIDerivedType(tag: DW_TAG_member, name: "_pos", scope: !9851, file: !1771, line: 166, baseType: !23, size: 32, offset: 128)
!9857 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !9835, file: !1771, line: 266, baseType: !9855, size: 64, offset: 832)
!9858 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !9835, file: !1771, line: 268, baseType: !23, size: 32, offset: 896)
!9859 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !9835, file: !1771, line: 272, baseType: !23, size: 32, offset: 928)
!9860 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !9835, file: !1771, line: 274, baseType: !302, size: 64, offset: 960)
!9861 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !9835, file: !1771, line: 278, baseType: !143, size: 16, offset: 1024)
!9862 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !9835, file: !1771, line: 279, baseType: !1799, size: 8, offset: 1040)
!9863 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !9835, file: !1771, line: 280, baseType: !324, size: 8, offset: 1048)
!9864 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !9835, file: !1771, line: 284, baseType: !1802, size: 64, offset: 1088)
!9865 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !9835, file: !1771, line: 293, baseType: !1805, size: 64, offset: 1152)
!9866 = !DIDerivedType(tag: DW_TAG_member, name: "__pad1", scope: !9835, file: !1771, line: 301, baseType: !16, size: 64, offset: 1216)
!9867 = !DIDerivedType(tag: DW_TAG_member, name: "__pad2", scope: !9835, file: !1771, line: 302, baseType: !16, size: 64, offset: 1280)
!9868 = !DIDerivedType(tag: DW_TAG_member, name: "__pad3", scope: !9835, file: !1771, line: 303, baseType: !16, size: 64, offset: 1344)
!9869 = !DIDerivedType(tag: DW_TAG_member, name: "__pad4", scope: !9835, file: !1771, line: 304, baseType: !16, size: 64, offset: 1408)
!9870 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !9835, file: !1771, line: 306, baseType: !91, size: 64, offset: 1472)
!9871 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !9835, file: !1771, line: 307, baseType: !23, size: 32, offset: 1536)
!9872 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !9835, file: !1771, line: 309, baseType: !1813, size: 160, offset: 1568)
!9873 = !DILocalVariable(name: "stream", arg: 1, scope: !9830, file: !454, line: 57, type: !9833)
!9874 = !DILocation(line: 57, column: 21, scope: !9830)
!9875 = !DILocalVariable(name: "some_pending", scope: !9830, file: !454, line: 59, type: !79)
!9876 = !DILocation(line: 59, column: 8, scope: !9830)
!9877 = !DILocation(line: 59, column: 36, scope: !9830)
!9878 = !DILocation(line: 59, column: 24, scope: !9830)
!9879 = !DILocation(line: 59, column: 44, scope: !9830)
!9880 = !DILocalVariable(name: "prev_fail", scope: !9830, file: !454, line: 60, type: !79)
!9881 = !DILocation(line: 60, column: 8, scope: !9830)
!9882 = !DILocation(line: 60, column: 21, scope: !9830)
!9883 = !DILocation(line: 60, column: 37, scope: !9830)
!9884 = !DILocalVariable(name: "fclose_fail", scope: !9830, file: !454, line: 61, type: !79)
!9885 = !DILocation(line: 61, column: 8, scope: !9830)
!9886 = !DILocation(line: 61, column: 31, scope: !9830)
!9887 = !DILocation(line: 61, column: 23, scope: !9830)
!9888 = !DILocation(line: 61, column: 39, scope: !9830)
!9889 = !DILocation(line: 71, column: 7, scope: !9890)
!9890 = distinct !DILexicalBlock(scope: !9830, file: !454, line: 71, column: 7)
!9891 = !DILocation(line: 71, column: 17, scope: !9890)
!9892 = !DILocation(line: 71, column: 21, scope: !9890)
!9893 = !DILocation(line: 71, column: 33, scope: !9890)
!9894 = !DILocation(line: 71, column: 37, scope: !9890)
!9895 = !DILocation(line: 71, column: 50, scope: !9890)
!9896 = !DILocation(line: 71, column: 53, scope: !9890)
!9897 = !DILocation(line: 71, column: 59, scope: !9890)
!9898 = !DILocation(line: 71, column: 7, scope: !9830)
!9899 = !DILocation(line: 73, column: 13, scope: !9900)
!9900 = distinct !DILexicalBlock(scope: !9901, file: !454, line: 73, column: 11)
!9901 = distinct !DILexicalBlock(scope: !9890, file: !454, line: 72, column: 5)
!9902 = !DILocation(line: 73, column: 11, scope: !9901)
!9903 = !DILocation(line: 74, column: 2, scope: !9900)
!9904 = !DILocation(line: 74, column: 8, scope: !9900)
!9905 = !DILocation(line: 75, column: 7, scope: !9901)
!9906 = !DILocation(line: 78, column: 3, scope: !9830)
!9907 = !DILocation(line: 79, column: 1, scope: !9830)
!9908 = distinct !DISubprogram(name: "cycle_check_init", scope: !456, file: !456, line: 43, type: !9909, isLocal: false, isDefinition: true, scopeLine: 44, flags: DIFlagPrototyped, isOptimized: false, unit: !455, variables: !25)
!9909 = !DISubroutineType(types: !9910)
!9910 = !{null, !9911}
!9911 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9912, size: 64)
!9912 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cycle_check_state", file: !353, line: 28, size: 256, elements: !9913)
!9913 = !{!9914, !9919, !9920}
!9914 = !DIDerivedType(tag: DW_TAG_member, name: "dev_ino", scope: !9912, file: !353, line: 30, baseType: !9915, size: 128)
!9915 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_ino", file: !357, line: 7, size: 128, elements: !9916)
!9916 = !{!9917, !9918}
!9917 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !9915, file: !357, line: 9, baseType: !360, size: 64)
!9918 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !9915, file: !357, line: 10, baseType: !329, size: 64, offset: 64)
!9919 = !DIDerivedType(tag: DW_TAG_member, name: "chdir_counter", scope: !9912, file: !353, line: 31, baseType: !363, size: 64, offset: 128)
!9920 = !DIDerivedType(tag: DW_TAG_member, name: "magic", scope: !9912, file: !353, line: 32, baseType: !23, size: 32, offset: 192)
!9921 = !DILocalVariable(name: "state", arg: 1, scope: !9908, file: !456, line: 43, type: !9911)
!9922 = !DILocation(line: 43, column: 45, scope: !9908)
!9923 = !DILocation(line: 45, column: 3, scope: !9908)
!9924 = !DILocation(line: 45, column: 10, scope: !9908)
!9925 = !DILocation(line: 45, column: 24, scope: !9908)
!9926 = !DILocation(line: 46, column: 3, scope: !9908)
!9927 = !DILocation(line: 46, column: 10, scope: !9908)
!9928 = !DILocation(line: 46, column: 16, scope: !9908)
!9929 = !DILocation(line: 47, column: 1, scope: !9908)
!9930 = distinct !DISubprogram(name: "cycle_check", scope: !456, file: !456, line: 58, type: !9931, isLocal: false, isDefinition: true, scopeLine: 59, flags: DIFlagPrototyped, isOptimized: false, unit: !455, variables: !25)
!9931 = !DISubroutineType(types: !9932)
!9932 = !{!79, !9911, !9933}
!9933 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9934, size: 64)
!9934 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9935)
!9935 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !288, line: 46, size: 1152, elements: !9936)
!9936 = !{!9937, !9938, !9939, !9940, !9941, !9942, !9943, !9944, !9945, !9946, !9947, !9948, !9953, !9954, !9955}
!9937 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !9935, file: !288, line: 48, baseType: !291, size: 64)
!9938 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !9935, file: !288, line: 53, baseType: !293, size: 64, offset: 64)
!9939 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !9935, file: !288, line: 61, baseType: !281, size: 64, offset: 128)
!9940 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !9935, file: !288, line: 62, baseType: !296, size: 32, offset: 192)
!9941 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !9935, file: !288, line: 64, baseType: !191, size: 32, offset: 224)
!9942 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !9935, file: !288, line: 65, baseType: !195, size: 32, offset: 256)
!9943 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !9935, file: !288, line: 67, baseType: !23, size: 32, offset: 288)
!9944 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !9935, file: !288, line: 69, baseType: !291, size: 64, offset: 320)
!9945 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !9935, file: !288, line: 74, baseType: !302, size: 64, offset: 384)
!9946 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !9935, file: !288, line: 78, baseType: !304, size: 64, offset: 448)
!9947 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !9935, file: !288, line: 80, baseType: !306, size: 64, offset: 512)
!9948 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !9935, file: !288, line: 91, baseType: !9949, size: 128, offset: 576)
!9949 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !309, line: 8, size: 128, elements: !9950)
!9950 = !{!9951, !9952}
!9951 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !9949, file: !309, line: 10, baseType: !312, size: 64)
!9952 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !9949, file: !309, line: 11, baseType: !314, size: 64, offset: 64)
!9953 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !9935, file: !288, line: 92, baseType: !9949, size: 128, offset: 704)
!9954 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !9935, file: !288, line: 93, baseType: !9949, size: 128, offset: 832)
!9955 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !9935, file: !288, line: 106, baseType: !318, size: 192, offset: 960)
!9956 = !DILocalVariable(name: "state", arg: 1, scope: !9930, file: !456, line: 58, type: !9911)
!9957 = !DILocation(line: 58, column: 40, scope: !9930)
!9958 = !DILocalVariable(name: "sb", arg: 2, scope: !9930, file: !456, line: 58, type: !9933)
!9959 = !DILocation(line: 58, column: 66, scope: !9930)
!9960 = !DILocation(line: 60, column: 3, scope: !9961)
!9961 = distinct !DILexicalBlock(scope: !9962, file: !456, line: 60, column: 3)
!9962 = distinct !DILexicalBlock(scope: !9930, file: !456, line: 60, column: 3)
!9963 = !DILocation(line: 60, column: 3, scope: !9962)
!9964 = !DILocation(line: 65, column: 7, scope: !9965)
!9965 = distinct !DILexicalBlock(scope: !9930, file: !456, line: 65, column: 7)
!9966 = !DILocation(line: 65, column: 14, scope: !9965)
!9967 = !DILocation(line: 65, column: 28, scope: !9965)
!9968 = !DILocation(line: 65, column: 31, scope: !9965)
!9969 = !DILocation(line: 65, column: 7, scope: !9930)
!9970 = !DILocation(line: 66, column: 5, scope: !9965)
!9971 = !DILocation(line: 70, column: 35, scope: !9972)
!9972 = distinct !DILexicalBlock(scope: !9930, file: !456, line: 70, column: 7)
!9973 = !DILocation(line: 70, column: 42, scope: !9972)
!9974 = !DILocation(line: 70, column: 32, scope: !9972)
!9975 = !DILocation(line: 70, column: 7, scope: !9972)
!9976 = !DILocation(line: 70, column: 7, scope: !9930)
!9977 = !DILocation(line: 77, column: 11, scope: !9978)
!9978 = distinct !DILexicalBlock(scope: !9979, file: !456, line: 77, column: 11)
!9979 = distinct !DILexicalBlock(scope: !9972, file: !456, line: 71, column: 5)
!9980 = !DILocation(line: 77, column: 18, scope: !9978)
!9981 = !DILocation(line: 77, column: 32, scope: !9978)
!9982 = !DILocation(line: 77, column: 11, scope: !9979)
!9983 = !DILocation(line: 78, column: 2, scope: !9978)
!9984 = !DILocation(line: 80, column: 31, scope: !9979)
!9985 = !DILocation(line: 80, column: 35, scope: !9979)
!9986 = !DILocation(line: 80, column: 7, scope: !9979)
!9987 = !DILocation(line: 80, column: 14, scope: !9979)
!9988 = !DILocation(line: 80, column: 22, scope: !9979)
!9989 = !DILocation(line: 80, column: 29, scope: !9979)
!9990 = !DILocation(line: 81, column: 31, scope: !9979)
!9991 = !DILocation(line: 81, column: 35, scope: !9979)
!9992 = !DILocation(line: 81, column: 7, scope: !9979)
!9993 = !DILocation(line: 81, column: 14, scope: !9979)
!9994 = !DILocation(line: 81, column: 22, scope: !9979)
!9995 = !DILocation(line: 81, column: 29, scope: !9979)
!9996 = !DILocation(line: 82, column: 5, scope: !9979)
!9997 = !DILocation(line: 84, column: 3, scope: !9930)
!9998 = !DILocation(line: 85, column: 1, scope: !9930)
!9999 = distinct !DISubprogram(name: "is_zero_or_power_of_two", scope: !456, file: !456, line: 37, type: !10000, isLocal: true, isDefinition: true, scopeLine: 38, flags: DIFlagPrototyped, isOptimized: false, unit: !455, variables: !25)
!10000 = !DISubroutineType(types: !10001)
!10001 = !{!79, !363}
!10002 = !DILocalVariable(name: "i", arg: 1, scope: !9999, file: !456, line: 37, type: !363)
!10003 = !DILocation(line: 37, column: 36, scope: !9999)
!10004 = !DILocation(line: 39, column: 11, scope: !9999)
!10005 = !DILocation(line: 39, column: 16, scope: !9999)
!10006 = !DILocation(line: 39, column: 18, scope: !9999)
!10007 = !DILocation(line: 39, column: 13, scope: !9999)
!10008 = !DILocation(line: 39, column: 24, scope: !9999)
!10009 = !DILocation(line: 39, column: 3, scope: !9999)
!10010 = distinct !DISubprogram(name: "dup_safer", scope: !458, file: !458, line: 32, type: !9819, isLocal: false, isDefinition: true, scopeLine: 33, flags: DIFlagPrototyped, isOptimized: false, unit: !457, variables: !25)
!10011 = !DILocalVariable(name: "fd", arg: 1, scope: !10010, file: !458, line: 32, type: !23)
!10012 = !DILocation(line: 32, column: 16, scope: !10010)
!10013 = !DILocation(line: 35, column: 17, scope: !10010)
!10014 = !DILocation(line: 35, column: 10, scope: !10010)
!10015 = !DILocation(line: 35, column: 3, scope: !10010)
!10016 = distinct !DISubprogram(name: "dup_safer_flag", scope: !458, file: !458, line: 56, type: !10017, isLocal: false, isDefinition: true, scopeLine: 57, flags: DIFlagPrototyped, isOptimized: false, unit: !457, variables: !25)
!10017 = !DISubroutineType(types: !10018)
!10018 = !{!23, !23, !23}
!10019 = !DILocalVariable(name: "fd", arg: 1, scope: !10016, file: !458, line: 56, type: !23)
!10020 = !DILocation(line: 56, column: 21, scope: !10016)
!10021 = !DILocalVariable(name: "flag", arg: 2, scope: !10016, file: !458, line: 56, type: !23)
!10022 = !DILocation(line: 56, column: 29, scope: !10016)
!10023 = !DILocation(line: 58, column: 7, scope: !10024)
!10024 = distinct !DILexicalBlock(scope: !10016, file: !458, line: 58, column: 7)
!10025 = !DILocation(line: 58, column: 12, scope: !10024)
!10026 = !DILocation(line: 58, column: 7, scope: !10016)
!10027 = !DILocation(line: 61, column: 21, scope: !10028)
!10028 = distinct !DILexicalBlock(scope: !10024, file: !458, line: 59, column: 5)
!10029 = !DILocation(line: 61, column: 14, scope: !10028)
!10030 = !DILocation(line: 61, column: 7, scope: !10028)
!10031 = !DILocation(line: 69, column: 21, scope: !10016)
!10032 = !DILocation(line: 69, column: 10, scope: !10016)
!10033 = !DILocation(line: 69, column: 3, scope: !10016)
!10034 = !DILocation(line: 70, column: 1, scope: !10016)
!10035 = distinct !DISubprogram(name: "fd_safer", scope: !460, file: !460, line: 38, type: !9819, isLocal: false, isDefinition: true, scopeLine: 39, flags: DIFlagPrototyped, isOptimized: false, unit: !459, variables: !25)
!10036 = !DILocalVariable(name: "fd", arg: 1, scope: !10035, file: !460, line: 38, type: !23)
!10037 = !DILocation(line: 38, column: 15, scope: !10035)
!10038 = !DILocation(line: 40, column: 23, scope: !10039)
!10039 = distinct !DILexicalBlock(scope: !10035, file: !460, line: 40, column: 7)
!10040 = !DILocation(line: 40, column: 20, scope: !10039)
!10041 = !DILocation(line: 40, column: 26, scope: !10039)
!10042 = !DILocation(line: 40, column: 29, scope: !10039)
!10043 = !DILocation(line: 40, column: 32, scope: !10039)
!10044 = !DILocation(line: 40, column: 7, scope: !10035)
!10045 = !DILocalVariable(name: "f", scope: !10046, file: !460, line: 42, type: !23)
!10046 = distinct !DILexicalBlock(scope: !10039, file: !460, line: 41, column: 5)
!10047 = !DILocation(line: 42, column: 11, scope: !10046)
!10048 = !DILocation(line: 42, column: 26, scope: !10046)
!10049 = !DILocation(line: 42, column: 15, scope: !10046)
!10050 = !DILocalVariable(name: "e", scope: !10046, file: !460, line: 43, type: !23)
!10051 = !DILocation(line: 43, column: 11, scope: !10046)
!10052 = !DILocation(line: 43, column: 15, scope: !10046)
!10053 = !DILocation(line: 44, column: 14, scope: !10046)
!10054 = !DILocation(line: 44, column: 7, scope: !10046)
!10055 = !DILocation(line: 45, column: 15, scope: !10046)
!10056 = !DILocation(line: 45, column: 7, scope: !10046)
!10057 = !DILocation(line: 45, column: 13, scope: !10046)
!10058 = !DILocation(line: 46, column: 12, scope: !10046)
!10059 = !DILocation(line: 46, column: 10, scope: !10046)
!10060 = !DILocation(line: 47, column: 5, scope: !10046)
!10061 = !DILocation(line: 49, column: 10, scope: !10035)
!10062 = !DILocation(line: 49, column: 3, scope: !10035)
!10063 = distinct !DISubprogram(name: "fd_safer_flag", scope: !460, file: !460, line: 65, type: !10017, isLocal: false, isDefinition: true, scopeLine: 66, flags: DIFlagPrototyped, isOptimized: false, unit: !459, variables: !25)
!10064 = !DILocalVariable(name: "fd", arg: 1, scope: !10063, file: !460, line: 65, type: !23)
!10065 = !DILocation(line: 65, column: 20, scope: !10063)
!10066 = !DILocalVariable(name: "flag", arg: 2, scope: !10063, file: !460, line: 65, type: !23)
!10067 = !DILocation(line: 65, column: 28, scope: !10063)
!10068 = !DILocation(line: 67, column: 23, scope: !10069)
!10069 = distinct !DILexicalBlock(scope: !10063, file: !460, line: 67, column: 7)
!10070 = !DILocation(line: 67, column: 20, scope: !10069)
!10071 = !DILocation(line: 67, column: 26, scope: !10069)
!10072 = !DILocation(line: 67, column: 29, scope: !10069)
!10073 = !DILocation(line: 67, column: 32, scope: !10069)
!10074 = !DILocation(line: 67, column: 7, scope: !10063)
!10075 = !DILocalVariable(name: "f", scope: !10076, file: !460, line: 69, type: !23)
!10076 = distinct !DILexicalBlock(scope: !10069, file: !460, line: 68, column: 5)
!10077 = !DILocation(line: 69, column: 11, scope: !10076)
!10078 = !DILocation(line: 69, column: 31, scope: !10076)
!10079 = !DILocation(line: 69, column: 35, scope: !10076)
!10080 = !DILocation(line: 69, column: 15, scope: !10076)
!10081 = !DILocalVariable(name: "e", scope: !10076, file: !460, line: 70, type: !23)
!10082 = !DILocation(line: 70, column: 11, scope: !10076)
!10083 = !DILocation(line: 70, column: 15, scope: !10076)
!10084 = !DILocation(line: 71, column: 14, scope: !10076)
!10085 = !DILocation(line: 71, column: 7, scope: !10076)
!10086 = !DILocation(line: 72, column: 15, scope: !10076)
!10087 = !DILocation(line: 72, column: 7, scope: !10076)
!10088 = !DILocation(line: 72, column: 13, scope: !10076)
!10089 = !DILocation(line: 73, column: 12, scope: !10076)
!10090 = !DILocation(line: 73, column: 10, scope: !10076)
!10091 = !DILocation(line: 74, column: 5, scope: !10076)
!10092 = !DILocation(line: 76, column: 10, scope: !10063)
!10093 = !DILocation(line: 76, column: 3, scope: !10063)
!10094 = distinct !DISubprogram(name: "rpl_fdopendir", scope: !462, file: !462, line: 121, type: !10095, isLocal: false, isDefinition: true, scopeLine: 122, flags: DIFlagPrototyped, isOptimized: false, unit: !461, variables: !25)
!10095 = !DISubroutineType(types: !10096)
!10096 = !{!3981, !23}
!10097 = !DILocalVariable(name: "fd", arg: 1, scope: !10094, file: !462, line: 121, type: !23)
!10098 = !DILocation(line: 121, column: 20, scope: !10094)
!10099 = !DILocalVariable(name: "st", scope: !10094, file: !462, line: 123, type: !10100)
!10100 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !288, line: 46, size: 1152, elements: !10101)
!10101 = !{!10102, !10103, !10104, !10105, !10106, !10107, !10108, !10109, !10110, !10111, !10112, !10113, !10118, !10119, !10120}
!10102 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !10100, file: !288, line: 48, baseType: !291, size: 64)
!10103 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !10100, file: !288, line: 53, baseType: !293, size: 64, offset: 64)
!10104 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !10100, file: !288, line: 61, baseType: !281, size: 64, offset: 128)
!10105 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !10100, file: !288, line: 62, baseType: !296, size: 32, offset: 192)
!10106 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !10100, file: !288, line: 64, baseType: !191, size: 32, offset: 224)
!10107 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !10100, file: !288, line: 65, baseType: !195, size: 32, offset: 256)
!10108 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !10100, file: !288, line: 67, baseType: !23, size: 32, offset: 288)
!10109 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !10100, file: !288, line: 69, baseType: !291, size: 64, offset: 320)
!10110 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !10100, file: !288, line: 74, baseType: !302, size: 64, offset: 384)
!10111 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !10100, file: !288, line: 78, baseType: !304, size: 64, offset: 448)
!10112 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !10100, file: !288, line: 80, baseType: !306, size: 64, offset: 512)
!10113 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !10100, file: !288, line: 91, baseType: !10114, size: 128, offset: 576)
!10114 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !309, line: 8, size: 128, elements: !10115)
!10115 = !{!10116, !10117}
!10116 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !10114, file: !309, line: 10, baseType: !312, size: 64)
!10117 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !10114, file: !309, line: 11, baseType: !314, size: 64, offset: 64)
!10118 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !10100, file: !288, line: 92, baseType: !10114, size: 128, offset: 704)
!10119 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !10100, file: !288, line: 93, baseType: !10114, size: 128, offset: 832)
!10120 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !10100, file: !288, line: 106, baseType: !318, size: 192, offset: 960)
!10121 = !DILocation(line: 123, column: 15, scope: !10094)
!10122 = !DILocation(line: 124, column: 14, scope: !10123)
!10123 = distinct !DILexicalBlock(scope: !10094, file: !462, line: 124, column: 7)
!10124 = !DILocation(line: 124, column: 7, scope: !10123)
!10125 = !DILocation(line: 124, column: 7, scope: !10094)
!10126 = !DILocation(line: 125, column: 5, scope: !10123)
!10127 = !DILocation(line: 126, column: 8, scope: !10128)
!10128 = distinct !DILexicalBlock(scope: !10094, file: !462, line: 126, column: 7)
!10129 = !DILocation(line: 126, column: 7, scope: !10094)
!10130 = !DILocation(line: 128, column: 7, scope: !10131)
!10131 = distinct !DILexicalBlock(scope: !10128, file: !462, line: 127, column: 5)
!10132 = !DILocation(line: 128, column: 13, scope: !10131)
!10133 = !DILocation(line: 129, column: 7, scope: !10131)
!10134 = !DILocation(line: 131, column: 21, scope: !10094)
!10135 = !DILocation(line: 131, column: 10, scope: !10094)
!10136 = !DILocation(line: 131, column: 3, scope: !10094)
!10137 = !DILocation(line: 132, column: 1, scope: !10094)
