digraph "CFG for 'main' function" {
	label="CFG for 'main' function";

	Node0x3b1eef0 [shape=record,label="{%2:\l  %3 = alloca i32, align 4\l  %4 = alloca i32, align 4\l  %5 = alloca i8**, align 8\l  %6 = alloca i32, align 4\l  %7 = alloca i8, align 1\l  %8 = alloca i32, align 4\l  %9 = alloca i32, align 4\l  %10 = alloca [2 x i8*], align 16\l  %11 = alloca i8, align 1\l  %12 = alloca i64, align 8\l  store i32 0, i32* %3, align 4\l  store i32 %0, i32* %4, align 4\l  call void @llvm.dbg.declare(metadata i32* %4, metadata !688, metadata\l... !DIExpression()), !dbg !689\l  store i8** %1, i8*** %5, align 8\l  call void @llvm.dbg.declare(metadata i8*** %5, metadata !690, metadata\l... !DIExpression()), !dbg !691\l  call void @llvm.dbg.declare(metadata i32* %6, metadata !692, metadata\l... !DIExpression()), !dbg !693\l  store i32 0, i32* %6, align 4, !dbg !693\l  call void @llvm.dbg.declare(metadata i8* %7, metadata !694, metadata\l... !DIExpression()), !dbg !695\l  %13 = call i8* @getenv(i8* getelementptr inbounds ([16 x i8], [16 x i8]*\l... @.str.10, i32 0, i32 0)) #11, !dbg !696\l  %14 = icmp ne i8* %13, null, !dbg !697\l  %15 = zext i1 %14 to i8, !dbg !695\l  store i8 %15, i8* %7, align 1, !dbg !695\l  call void @llvm.dbg.declare(metadata i32* %8, metadata !698, metadata\l... !DIExpression()), !dbg !699\l  store i32 0, i32* %8, align 4, !dbg !699\l  call void @llvm.dbg.declare(metadata i32* %9, metadata !700, metadata\l... !DIExpression()), !dbg !701\l  store i32 0, i32* %9, align 4, !dbg !701\l  call void @llvm.dbg.declare(metadata [2 x i8*]* %10, metadata !702, metadata\l... !DIExpression()), !dbg !706\l  call void @llvm.dbg.declare(metadata i8* %11, metadata !707, metadata\l... !DIExpression()), !dbg !708\l  store i8 10, i8* %11, align 1, !dbg !708\l  %16 = getelementptr inbounds [2 x i8*], [2 x i8*]* %10, i64 0, i64 1, !dbg\l... !709\l  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.11, i32 0, i32\l... 0), i8** %16, align 8, !dbg !710\l  %17 = getelementptr inbounds [2 x i8*], [2 x i8*]* %10, i64 0, i64 0, !dbg\l... !711\l  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.11, i32 0, i32\l... 0), i8** %17, align 16, !dbg !712\l  %18 = load i8**, i8*** %5, align 8, !dbg !713\l  %19 = getelementptr inbounds i8*, i8** %18, i64 0, !dbg !713\l  %20 = load i8*, i8** %19, align 8, !dbg !713\l  call void @set_program_name(i8* %20), !dbg !714\l  %21 = call i8* @setlocale(i32 6, i8* getelementptr inbounds ([1 x i8], [1 x\l... i8]* @.str.12, i32 0, i32 0)) #11, !dbg !715\l  %22 = call zeroext i1 @hard_locale(i32 3), !dbg !716\l  %23 = zext i1 %22 to i8, !dbg !717\l  store i8 %23, i8* @hard_LC_COLLATE, align 1, !dbg !717\l  %24 = call i32 @atexit(void ()* @close_stdout) #11, !dbg !718\l  store i64 0, i64* @skip_chars, align 8, !dbg !719\l  store i64 0, i64* @skip_fields, align 8, !dbg !720\l  store i64 -1, i64* @check_chars, align 8, !dbg !721\l  store i8 1, i8* @output_first_repeated, align 1, !dbg !722\l  store i8 1, i8* @output_unique, align 1, !dbg !723\l  store i8 0, i8* @output_later_repeated, align 1, !dbg !724\l  store i32 1, i32* @countmode, align 4, !dbg !725\l  store i32 0, i32* @delimit_groups, align 4, !dbg !726\l  br label %25, !dbg !727\l}"];
	Node0x3b1eef0 -> Node0x3b1f210;
	Node0x3b1f210 [shape=record,label="{%25:\l\l  %26 = load i32, i32* %6, align 4, !dbg !728\l  %27 = icmp eq i32 %26, -1, !dbg !731\l  br i1 %27, label %39, label %28, !dbg !732\l|{<s0>T|<s1>F}}"];
	Node0x3b1f210:s0 -> Node0x3b1f350;
	Node0x3b1f210:s1 -> Node0x3b1f260;
	Node0x3b1f260 [shape=record,label="{%28:\l\l  %29 = load i8, i8* %7, align 1, !dbg !733\l  %30 = trunc i8 %29 to i1, !dbg !733\l  br i1 %30, label %31, label %34, !dbg !734\l|{<s0>T|<s1>F}}"];
	Node0x3b1f260:s0 -> Node0x3b1f2b0;
	Node0x3b1f260:s1 -> Node0x3b1f300;
	Node0x3b1f2b0 [shape=record,label="{%31:\l\l  %32 = load i32, i32* %9, align 4, !dbg !735\l  %33 = icmp ne i32 %32, 0, !dbg !736\l  br i1 %33, label %39, label %34, !dbg !737\l|{<s0>T|<s1>F}}"];
	Node0x3b1f2b0:s0 -> Node0x3b1f350;
	Node0x3b1f2b0:s1 -> Node0x3b1f300;
	Node0x3b1f300 [shape=record,label="{%34:\l\l  %35 = load i32, i32* %4, align 4, !dbg !738\l  %36 = load i8**, i8*** %5, align 8, !dbg !739\l  %37 = call i32 @getopt_long(i32 %35, i8** %36, i8* getelementptr inbounds\l... ([24 x i8], [24 x i8]* @.str.13, i32 0, i32 0), %struct.option* getelementptr\l... inbounds ([12 x %struct.option], [12 x %struct.option]* @longopts, i32 0, i32\l... 0), i32* null) #11, !dbg !740\l  store i32 %37, i32* %6, align 4, !dbg !741\l  %38 = icmp eq i32 %37, -1, !dbg !742\l  br i1 %38, label %39, label %65, !dbg !743\l|{<s0>T|<s1>F}}"];
	Node0x3b1f300:s0 -> Node0x3b1f350;
	Node0x3b1f300:s1 -> Node0x3b1f4e0;
	Node0x3b1f350 [shape=record,label="{%39:\l\l  %40 = load i32, i32* %4, align 4, !dbg !744\l  %41 = load i32, i32* @optind, align 4, !dbg !747\l  %42 = icmp sle i32 %40, %41, !dbg !748\l  br i1 %42, label %43, label %44, !dbg !749\l|{<s0>T|<s1>F}}"];
	Node0x3b1f350:s0 -> Node0x3b1f3a0;
	Node0x3b1f350:s1 -> Node0x3b1f3f0;
	Node0x3b1f3a0 [shape=record,label="{%43:\l\l  br label %160, !dbg !750\l}"];
	Node0x3b1f3a0 -> Node0x3b20070;
	Node0x3b1f3f0 [shape=record,label="{%44:\l\l  %45 = load i32, i32* %9, align 4, !dbg !751\l  %46 = icmp eq i32 %45, 2, !dbg !753\l  br i1 %46, label %47, label %54, !dbg !754\l|{<s0>T|<s1>F}}"];
	Node0x3b1f3f0:s0 -> Node0x3b1f440;
	Node0x3b1f3f0:s1 -> Node0x3b1f490;
	Node0x3b1f440 [shape=record,label="{%47:\l\l  %48 = load i8**, i8*** %5, align 8, !dbg !755\l  %49 = load i32, i32* @optind, align 4, !dbg !757\l  %50 = sext i32 %49 to i64, !dbg !755\l  %51 = getelementptr inbounds i8*, i8** %48, i64 %50, !dbg !755\l  %52 = load i8*, i8** %51, align 8, !dbg !755\l  %53 = call i8* @quote(i8* %52), !dbg !758\l  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* getelementptr\l... inbounds ([17 x i8], [17 x i8]* @.str.14, i32 0, i32 0), i8* %53), !dbg !759\l  call void @usage(i32 1) #13, !dbg !760\l  unreachable, !dbg !760\l}"];
	Node0x3b1f490 [shape=record,label="{%54:\l\l  %55 = load i8**, i8*** %5, align 8, !dbg !761\l  %56 = load i32, i32* @optind, align 4, !dbg !762\l  %57 = add nsw i32 %56, 1, !dbg !762\l  store i32 %57, i32* @optind, align 4, !dbg !762\l  %58 = sext i32 %56 to i64, !dbg !761\l  %59 = getelementptr inbounds i8*, i8** %55, i64 %58, !dbg !761\l  %60 = load i8*, i8** %59, align 8, !dbg !761\l  %61 = load i32, i32* %9, align 4, !dbg !763\l  %62 = add nsw i32 %61, 1, !dbg !763\l  store i32 %62, i32* %9, align 4, !dbg !763\l  %63 = sext i32 %61 to i64, !dbg !764\l  %64 = getelementptr inbounds [2 x i8*], [2 x i8*]* %10, i64 0, i64 %63, !dbg\l... !764\l  store i8* %60, i8** %64, align 8, !dbg !765\l  br label %159, !dbg !766\l}"];
	Node0x3b1f490 -> Node0x3b20020;
	Node0x3b1f4e0 [shape=record,label="{%65:\l\l  %66 = load i32, i32* %6, align 4, !dbg !767\l  switch i32 %66, label %157 [\l    i32 1, label %67\l    i32 48, label %99\l    i32 49, label %99\l    i32 50, label %99\l    i32 51, label %99\l    i32 52, label %99\l    i32 53, label %99\l    i32 54, label %99\l    i32 55, label %99\l    i32 56, label %99\l    i32 57, label %99\l    i32 99, label %128\l    i32 100, label %129\l    i32 68, label %130\l    i32 102, label %141\l    i32 105, label %144\l    i32 115, label %145\l    i32 117, label %148\l    i32 119, label %149\l    i32 122, label %152\l    i32 -130, label %153\l    i32 -131, label %154\l  ], !dbg !768\l|{<s0>def|<s1>1|<s2>48|<s3>49|<s4>50|<s5>51|<s6>52|<s7>53|<s8>54|<s9>55|<s10>56|<s11>57|<s12>99|<s13>100|<s14>68|<s15>102|<s16>105|<s17>115|<s18>117|<s19>119|<s20>122|<s21>-130|<s22>-131}}"];
	Node0x3b1f4e0:s0 -> Node0x3b1ff80;
	Node0x3b1f4e0:s1 -> Node0x3b1f530;
	Node0x3b1f4e0:s2 -> Node0x3b1f850;
	Node0x3b1f4e0:s3 -> Node0x3b1f850;
	Node0x3b1f4e0:s4 -> Node0x3b1f850;
	Node0x3b1f4e0:s5 -> Node0x3b1f850;
	Node0x3b1f4e0:s6 -> Node0x3b1f850;
	Node0x3b1f4e0:s7 -> Node0x3b1f850;
	Node0x3b1f4e0:s8 -> Node0x3b1f850;
	Node0x3b1f4e0:s9 -> Node0x3b1f850;
	Node0x3b1f4e0:s10 -> Node0x3b1f850;
	Node0x3b1f4e0:s11 -> Node0x3b1f850;
	Node0x3b1f4e0:s12 -> Node0x3b1fb20;
	Node0x3b1f4e0:s13 -> Node0x3b1fb70;
	Node0x3b1f4e0:s14 -> Node0x3b1fbc0;
	Node0x3b1f4e0:s15 -> Node0x3b1fd00;
	Node0x3b1f4e0:s16 -> Node0x3b1fd50;
	Node0x3b1f4e0:s17 -> Node0x3b1fda0;
	Node0x3b1f4e0:s18 -> Node0x3b1fdf0;
	Node0x3b1f4e0:s19 -> Node0x3b1fe40;
	Node0x3b1f4e0:s20 -> Node0x3b1fe90;
	Node0x3b1f4e0:s21 -> Node0x3b1fee0;
	Node0x3b1f4e0:s22 -> Node0x3b1ff30;
	Node0x3b1f530 [shape=record,label="{%67:\l\l  call void @llvm.dbg.declare(metadata i64* %12, metadata !769, metadata\l... !DIExpression()), !dbg !772\l  %68 = load i8*, i8** @optarg, align 8, !dbg !773\l  %69 = getelementptr inbounds i8, i8* %68, i64 0, !dbg !773\l  %70 = load i8, i8* %69, align 1, !dbg !773\l  %71 = sext i8 %70 to i32, !dbg !773\l  %72 = icmp eq i32 %71, 43, !dbg !775\l  br i1 %72, label %73, label %85, !dbg !776\l|{<s0>T|<s1>F}}"];
	Node0x3b1f530:s0 -> Node0x3b1f580;
	Node0x3b1f530:s1 -> Node0x3b1f6c0;
	Node0x3b1f580 [shape=record,label="{%73:\l\l  %74 = call i32 @posix2_version(), !dbg !777\l  %75 = icmp slt i32 %74, 200112, !dbg !778\l  br i1 %75, label %76, label %85, !dbg !779\l|{<s0>T|<s1>F}}"];
	Node0x3b1f580:s0 -> Node0x3b1f5d0;
	Node0x3b1f580:s1 -> Node0x3b1f6c0;
	Node0x3b1f5d0 [shape=record,label="{%76:\l\l  %77 = load i8*, i8** @optarg, align 8, !dbg !780\l  %78 = call i32 @xstrtoul(i8* %77, i8** null, i32 10, i64* %12, i8*\l... getelementptr inbounds ([1 x i8], [1 x i8]* @.str.12, i32 0, i32 0)), !dbg\l... !781\l  %79 = icmp eq i32 %78, 0, !dbg !782\l  br i1 %79, label %80, label %85, !dbg !783\l|{<s0>T|<s1>F}}"];
	Node0x3b1f5d0:s0 -> Node0x3b1f620;
	Node0x3b1f5d0:s1 -> Node0x3b1f6c0;
	Node0x3b1f620 [shape=record,label="{%80:\l\l  %81 = load i64, i64* %12, align 8, !dbg !784\l  %82 = icmp ule i64 %81, -1, !dbg !785\l  br i1 %82, label %83, label %85, !dbg !786\l|{<s0>T|<s1>F}}"];
	Node0x3b1f620:s0 -> Node0x3b1f670;
	Node0x3b1f620:s1 -> Node0x3b1f6c0;
	Node0x3b1f670 [shape=record,label="{%83:\l\l  %84 = load i64, i64* %12, align 8, !dbg !787\l  store i64 %84, i64* @skip_chars, align 8, !dbg !788\l  br label %98, !dbg !789\l}"];
	Node0x3b1f670 -> Node0x3b1f800;
	Node0x3b1f6c0 [shape=record,label="{%85:\l\l  %86 = load i32, i32* %9, align 4, !dbg !790\l  %87 = icmp eq i32 %86, 2, !dbg !792\l  br i1 %87, label %88, label %91, !dbg !793\l|{<s0>T|<s1>F}}"];
	Node0x3b1f6c0:s0 -> Node0x3b1f710;
	Node0x3b1f6c0:s1 -> Node0x3b1f760;
	Node0x3b1f710 [shape=record,label="{%88:\l\l  %89 = load i8*, i8** @optarg, align 8, !dbg !794\l  %90 = call i8* @quote(i8* %89), !dbg !796\l  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* getelementptr\l... inbounds ([17 x i8], [17 x i8]* @.str.14, i32 0, i32 0), i8* %90), !dbg !797\l  call void @usage(i32 1) #13, !dbg !798\l  unreachable, !dbg !798\l}"];
	Node0x3b1f760 [shape=record,label="{%91:\l\l  %92 = load i8*, i8** @optarg, align 8, !dbg !799\l  %93 = load i32, i32* %9, align 4, !dbg !800\l  %94 = add nsw i32 %93, 1, !dbg !800\l  store i32 %94, i32* %9, align 4, !dbg !800\l  %95 = sext i32 %93 to i64, !dbg !801\l  %96 = getelementptr inbounds [2 x i8*], [2 x i8*]* %10, i64 0, i64 %95, !dbg\l... !801\l  store i8* %92, i8** %96, align 8, !dbg !802\l  br label %97\l}"];
	Node0x3b1f760 -> Node0x3b1f7b0;
	Node0x3b1f7b0 [shape=record,label="{%97:\l\l  br label %98\l}"];
	Node0x3b1f7b0 -> Node0x3b1f800;
	Node0x3b1f800 [shape=record,label="{%98:\l\l  br label %158, !dbg !803\l}"];
	Node0x3b1f800 -> Node0x3b1ffd0;
	Node0x3b1f850 [shape=record,label="{%99:\l\l  %100 = load i32, i32* %8, align 4, !dbg !804\l  %101 = icmp eq i32 %100, 2, !dbg !807\l  br i1 %101, label %102, label %103, !dbg !808\l|{<s0>T|<s1>F}}"];
	Node0x3b1f850:s0 -> Node0x3b1f8a0;
	Node0x3b1f850:s1 -> Node0x3b1f8f0;
	Node0x3b1f8a0 [shape=record,label="{%102:\l\l  store i64 0, i64* @skip_fields, align 8, !dbg !809\l  br label %103, !dbg !810\l}"];
	Node0x3b1f8a0 -> Node0x3b1f8f0;
	Node0x3b1f8f0 [shape=record,label="{%103:\l\l  %104 = load i64, i64* @skip_fields, align 8, !dbg !811\l  %105 = icmp ult i64 1844674407370955161, %104, !dbg !811\l  br i1 %105, label %115, label %106, !dbg !811\l|{<s0>T|<s1>F}}"];
	Node0x3b1f8f0:s0 -> Node0x3b1f990;
	Node0x3b1f8f0:s1 -> Node0x3b1f940;
	Node0x3b1f940 [shape=record,label="{%106:\l\l  %107 = load i64, i64* @skip_fields, align 8, !dbg !811\l  %108 = mul i64 %107, 10, !dbg !811\l  %109 = load i32, i32* %6, align 4, !dbg !811\l  %110 = sub nsw i32 %109, 48, !dbg !811\l  %111 = sext i32 %110 to i64, !dbg !811\l  %112 = add i64 %108, %111, !dbg !811\l  %113 = load i64, i64* @skip_fields, align 8, !dbg !811\l  %114 = icmp ult i64 %112, %113, !dbg !811\l  br i1 %114, label %115, label %116, !dbg !811\l|{<s0>T|<s1>F}}"];
	Node0x3b1f940:s0 -> Node0x3b1f990;
	Node0x3b1f940:s1 -> Node0x3b1f9e0;
	Node0x3b1f990 [shape=record,label="{%115:\l\l  br label %123, !dbg !811\l}"];
	Node0x3b1f990 -> Node0x3b1fa30;
	Node0x3b1f9e0 [shape=record,label="{%116:\l\l  %117 = load i64, i64* @skip_fields, align 8, !dbg !811\l  %118 = mul i64 %117, 10, !dbg !811\l  %119 = load i32, i32* %6, align 4, !dbg !811\l  %120 = sub nsw i32 %119, 48, !dbg !811\l  %121 = sext i32 %120 to i64, !dbg !811\l  %122 = add i64 %118, %121, !dbg !811\l  store i64 %122, i64* @skip_fields, align 8, !dbg !811\l  br label %123, !dbg !811\l}"];
	Node0x3b1f9e0 -> Node0x3b1fa30;
	Node0x3b1fa30 [shape=record,label="{%123:\l\l  %124 = phi i32 [ 0, %115 ], [ 1, %116 ], !dbg !811\l  %125 = icmp ne i32 %124, 0, !dbg !811\l  br i1 %125, label %127, label %126, !dbg !813\l|{<s0>T|<s1>F}}"];
	Node0x3b1fa30:s0 -> Node0x3b1fad0;
	Node0x3b1fa30:s1 -> Node0x3b1fa80;
	Node0x3b1fa80 [shape=record,label="{%126:\l\l  store i64 -1, i64* @skip_fields, align 8, !dbg !814\l  br label %127, !dbg !815\l}"];
	Node0x3b1fa80 -> Node0x3b1fad0;
	Node0x3b1fad0 [shape=record,label="{%127:\l\l  store i32 1, i32* %8, align 4, !dbg !816\l  br label %158, !dbg !817\l}"];
	Node0x3b1fad0 -> Node0x3b1ffd0;
	Node0x3b1fb20 [shape=record,label="{%128:\l\l  store i32 0, i32* @countmode, align 4, !dbg !818\l  br label %158, !dbg !819\l}"];
	Node0x3b1fb20 -> Node0x3b1ffd0;
	Node0x3b1fb70 [shape=record,label="{%129:\l\l  store i8 0, i8* @output_unique, align 1, !dbg !820\l  br label %158, !dbg !821\l}"];
	Node0x3b1fb70 -> Node0x3b1ffd0;
	Node0x3b1fbc0 [shape=record,label="{%130:\l\l  store i8 0, i8* @output_unique, align 1, !dbg !822\l  store i8 1, i8* @output_later_repeated, align 1, !dbg !823\l  %131 = load i8*, i8** @optarg, align 8, !dbg !824\l  %132 = icmp eq i8* %131, null, !dbg !826\l  br i1 %132, label %133, label %134, !dbg !827\l|{<s0>T|<s1>F}}"];
	Node0x3b1fbc0:s0 -> Node0x3b1fc10;
	Node0x3b1fbc0:s1 -> Node0x3b1fc60;
	Node0x3b1fc10 [shape=record,label="{%133:\l\l  store i32 0, i32* @delimit_groups, align 4, !dbg !828\l  br label %140, !dbg !829\l}"];
	Node0x3b1fc10 -> Node0x3b1fcb0;
	Node0x3b1fc60 [shape=record,label="{%134:\l\l  %135 = load i8*, i8** @optarg, align 8, !dbg !830\l  %136 = load void ()*, void ()** @argmatch_die, align 8, !dbg !830\l  %137 = call i64 @__xargmatch_internal(i8* getelementptr inbounds ([15 x i8],\l... [15 x i8]* @.str.15, i32 0, i32 0), i8* %135, i8** getelementptr inbounds ([4\l... x i8*], [4 x i8*]* @delimit_method_string, i32 0, i32 0), i8* bitcast ([3 x\l... i32]* @delimit_method_map to i8*), i64 4, void ()* %136), !dbg !830\l  %138 = getelementptr inbounds [3 x i32], [3 x i32]* @delimit_method_map, i64\l... 0, i64 %137, !dbg !830\l  %139 = load i32, i32* %138, align 4, !dbg !830\l  store i32 %139, i32* @delimit_groups, align 4, !dbg !831\l  br label %140\l}"];
	Node0x3b1fc60 -> Node0x3b1fcb0;
	Node0x3b1fcb0 [shape=record,label="{%140:\l\l  br label %158, !dbg !832\l}"];
	Node0x3b1fcb0 -> Node0x3b1ffd0;
	Node0x3b1fd00 [shape=record,label="{%141:\l\l  store i32 2, i32* %8, align 4, !dbg !833\l  %142 = load i8*, i8** @optarg, align 8, !dbg !834\l  %143 = call i64 @size_opt(i8* %142, i8* getelementptr inbounds ([33 x i8],\l... [33 x i8]* @.str.16, i32 0, i32 0)), !dbg !835\l  store i64 %143, i64* @skip_fields, align 8, !dbg !836\l  br label %158, !dbg !837\l}"];
	Node0x3b1fd00 -> Node0x3b1ffd0;
	Node0x3b1fd50 [shape=record,label="{%144:\l\l  store i8 1, i8* @ignore_case, align 1, !dbg !838\l  br label %158, !dbg !839\l}"];
	Node0x3b1fd50 -> Node0x3b1ffd0;
	Node0x3b1fda0 [shape=record,label="{%145:\l\l  %146 = load i8*, i8** @optarg, align 8, !dbg !840\l  %147 = call i64 @size_opt(i8* %146, i8* getelementptr inbounds ([32 x i8],\l... [32 x i8]* @.str.17, i32 0, i32 0)), !dbg !841\l  store i64 %147, i64* @skip_chars, align 8, !dbg !842\l  br label %158, !dbg !843\l}"];
	Node0x3b1fda0 -> Node0x3b1ffd0;
	Node0x3b1fdf0 [shape=record,label="{%148:\l\l  store i8 0, i8* @output_first_repeated, align 1, !dbg !844\l  br label %158, !dbg !845\l}"];
	Node0x3b1fdf0 -> Node0x3b1ffd0;
	Node0x3b1fe40 [shape=record,label="{%149:\l\l  %150 = load i8*, i8** @optarg, align 8, !dbg !846\l  %151 = call i64 @size_opt(i8* %150, i8* getelementptr inbounds ([35 x i8],\l... [35 x i8]* @.str.18, i32 0, i32 0)), !dbg !847\l  store i64 %151, i64* @check_chars, align 8, !dbg !848\l  br label %158, !dbg !849\l}"];
	Node0x3b1fe40 -> Node0x3b1ffd0;
	Node0x3b1fe90 [shape=record,label="{%152:\l\l  store i8 0, i8* %11, align 1, !dbg !850\l  br label %158, !dbg !851\l}"];
	Node0x3b1fe90 -> Node0x3b1ffd0;
	Node0x3b1fee0 [shape=record,label="{%153:\l\l  call void @usage(i32 0) #13, !dbg !852\l  unreachable, !dbg !852\l}"];
	Node0x3b1ff30 [shape=record,label="{%154:\l\l  %155 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !853\l  %156 = load i8*, i8** @Version, align 8, !dbg !853\l  call void (%struct._IO_FILE*, i8*, i8*, i8*, ...)\l... @version_etc(%struct._IO_FILE* %155, i8* getelementptr inbounds ([5 x i8], [5\l... x i8]* @.str.19, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x\l... i8]* @.str.20, i32 0, i32 0), i8* %156, i8* getelementptr inbounds ([20 x\l... i8], [20 x i8]* @.str.21, i32 0, i32 0), i8* getelementptr inbounds ([16 x\l... i8], [16 x i8]* @.str.22, i32 0, i32 0), i8* null), !dbg !853\l  call void @exit(i32 0) #14, !dbg !853\l  unreachable, !dbg !853\l}"];
	Node0x3b1ff80 [shape=record,label="{%157:\l\l  call void @usage(i32 1) #13, !dbg !854\l  unreachable, !dbg !854\l}"];
	Node0x3b1ffd0 [shape=record,label="{%158:\l\l  br label %159\l}"];
	Node0x3b1ffd0 -> Node0x3b20020;
	Node0x3b20020 [shape=record,label="{%159:\l\l  br label %25, !dbg !727, !llvm.loop !855\l}"];
	Node0x3b20020 -> Node0x3b1f210;
	Node0x3b20070 [shape=record,label="{%160:\l\l  call void @klee_dump_memory(), !dbg !857\l  %161 = load i32, i32* @countmode, align 4, !dbg !858\l  %162 = icmp eq i32 %161, 0, !dbg !860\l  br i1 %162, label %163, label %167, !dbg !861\l|{<s0>T|<s1>F}}"];
	Node0x3b20070:s0 -> Node0x3b200c0;
	Node0x3b20070:s1 -> Node0x3b20160;
	Node0x3b200c0 [shape=record,label="{%163:\l\l  %164 = load i8, i8* @output_later_repeated, align 1, !dbg !862\l  %165 = trunc i8 %164 to i1, !dbg !862\l  br i1 %165, label %166, label %167, !dbg !863\l|{<s0>T|<s1>F}}"];
	Node0x3b200c0:s0 -> Node0x3b20110;
	Node0x3b200c0:s1 -> Node0x3b20160;
	Node0x3b20110 [shape=record,label="{%166:\l\l  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* getelementptr\l... inbounds ([63 x i8], [63 x i8]* @.str.23, i32 0, i32 0)), !dbg !864\l  call void @usage(i32 1) #13, !dbg !866\l  unreachable, !dbg !866\l}"];
	Node0x3b20160 [shape=record,label="{%167:\l\l  %168 = getelementptr inbounds [2 x i8*], [2 x i8*]* %10, i64 0, i64 0, !dbg\l... !867\l  %169 = load i8*, i8** %168, align 16, !dbg !867\l  %170 = getelementptr inbounds [2 x i8*], [2 x i8*]* %10, i64 0, i64 1, !dbg\l... !868\l  %171 = load i8*, i8** %170, align 8, !dbg !868\l  %172 = load i8, i8* %11, align 1, !dbg !869\l  call void @check_file(i8* %169, i8* %171, i8 signext %172), !dbg !870\l  call void @exit(i32 0) #14, !dbg !871\l  unreachable, !dbg !871\l}"];
	Node0x3b201b0 [shape=record,label="{%173:                                                  \l  %174 = load i32, i32* %3, align 4, !dbg !872\l  ret i32 %174, !dbg !872\l}"];
}
